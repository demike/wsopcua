{"version":3,"sources":["webpack://wsopcua/webpack/universalModuleDefinition","webpack://wsopcua/webpack/bootstrap","webpack://wsopcua/./src/basic-types/boolean.ts","webpack://wsopcua/./src/basic-types/integers.ts","webpack://wsopcua/./src/basic-types/floats.ts","webpack://wsopcua/./src/basic-types/utils.ts","webpack://wsopcua/./src/basic-types/string.ts","webpack://wsopcua/./src/basic-types/date_time.ts","webpack://wsopcua/./src/basic-types/byte_string.ts","webpack://wsopcua/./src/basic-types/nodeid.ts","webpack://wsopcua/./src/basic-types/status_code.ts","webpack://wsopcua/./src/basic-types/localeid.ts","webpack://wsopcua/./src/basic-types/extension_object.ts","webpack://wsopcua/./src/basic-types/index.ts","webpack://wsopcua/./src/assert.ts","webpack://wsopcua/./src/nodeid/expanded_nodeid.ts","webpack://wsopcua/./src/factory/factories_factories.ts","webpack://wsopcua/./src/common/debug.ts","webpack://wsopcua/./src/variant/DataTypeEnum.ts","webpack://wsopcua/./src/generated/RequestHeader.ts","webpack://wsopcua/./src/generated/ResponseHeader.ts","webpack://wsopcua/./src/nodeid/nodeid.ts","webpack://wsopcua/./src/generated/DiagnosticInfo.ts","webpack://wsopcua/./src/generated/MonitoringMode.ts","webpack://wsopcua/./src/generated/DataChangeTrigger.ts","webpack://wsopcua/./src/generated/DeadbandType.ts","webpack://wsopcua/./src/generated/CreateSubscriptionRequest.ts","webpack://wsopcua/./src/generated/CreateSubscriptionResponse.ts","webpack://wsopcua/./src/generated/ModifySubscriptionRequest.ts","webpack://wsopcua/./src/generated/ModifySubscriptionResponse.ts","webpack://wsopcua/./src/generated/MonitoredItemCreateRequest.ts","webpack://wsopcua/./src/generated/CreateMonitoredItemsRequest.ts","webpack://wsopcua/./src/generated/MonitoredItemCreateResult.ts","webpack://wsopcua/./src/generated/CreateMonitoredItemsResponse.ts","webpack://wsopcua/./src/generated/SubscriptionAcknowledgement.ts","webpack://wsopcua/./src/generated/PublishRequest.ts","webpack://wsopcua/./src/generated/NotificationMessage.ts","webpack://wsopcua/./src/generated/MonitoredItemNotification.ts","webpack://wsopcua/./src/generated/NotificationData.ts","webpack://wsopcua/./src/generated/DataChangeNotification.ts","webpack://wsopcua/./src/generated/StatusChangeNotification.ts","webpack://wsopcua/./src/generated/EventFieldList.ts","webpack://wsopcua/./src/generated/EventNotificationList.ts","webpack://wsopcua/./src/generated/PublishResponse.ts","webpack://wsopcua/./src/generated/RepublishRequest.ts","webpack://wsopcua/./src/generated/RepublishResponse.ts","webpack://wsopcua/./src/generated/DeleteMonitoredItemsRequest.ts","webpack://wsopcua/./src/generated/DeleteMonitoredItemsResponse.ts","webpack://wsopcua/./src/generated/SetPublishingModeRequest.ts","webpack://wsopcua/./src/generated/SetPublishingModeResponse.ts","webpack://wsopcua/./src/generated/DeleteSubscriptionsRequest.ts","webpack://wsopcua/./src/generated/DeleteSubscriptionsResponse.ts","webpack://wsopcua/./src/generated/MonitoredItemModifyResult.ts","webpack://wsopcua/./src/generated/ModifyMonitoredItemsResponse.ts","webpack://wsopcua/./src/generated/SetMonitoringModeRequest.ts","webpack://wsopcua/./src/generated/SetMonitoringModeResponse.ts","webpack://wsopcua/./src/generated/MonitoringFilterResult.ts","webpack://wsopcua/./src/generated/EventFilterResult.ts","webpack://wsopcua/./src/generated/DataChangeFilter.ts","webpack://wsopcua/./src/generated/AggregateFilter.ts","webpack://wsopcua/./src/generated/SetTriggeringRequest.ts","webpack://wsopcua/./src/generated/SetTriggeringResponse.ts","webpack://wsopcua/./src/generated/TransferResult.ts","webpack://wsopcua/./src/generated/TransferSubscriptionsRequest.ts","webpack://wsopcua/./src/generated/TransferSubscriptionsResponse.ts","webpack://wsopcua/./src/service-subscription/deadband_checker.ts","webpack://wsopcua/./src/basic-types/DataStream.ts","webpack://wsopcua/./src/factory/factories_enumerations.ts","webpack://wsopcua/./src/generated/SecurityTokenRequestType.ts","webpack://wsopcua/./src/generated/OpenSecureChannelRequest.ts","webpack://wsopcua/./src/generated/OpenSecureChannelResponse.ts","webpack://wsopcua/./src/generated/CloseSecureChannelRequest.ts","webpack://wsopcua/./src/generated/CloseSecureChannelResponse.ts","webpack://wsopcua/./src/generated/ServiceFault.ts","webpack://wsopcua/./src/service-secure-channel/AsymmetricAlgorithmSecurityHeader.ts","webpack://wsopcua/./src/service-secure-channel/SymmetricAlgorithmSecurityHeader.ts","webpack://wsopcua/./src/service-secure-channel/SequenceHeader.ts","webpack://wsopcua/./src/service-secure-channel/index.ts","webpack://wsopcua/./src/utils/buffer_ellipsis.ts","webpack://wsopcua/./src/utils/string_utils.ts","webpack://wsopcua/./src/utils/get_clock_tick.ts","webpack://wsopcua/./src/utils/get_function_parameters_name.ts","webpack://wsopcua/./src/utils/isEqual.ts","webpack://wsopcua/./src/utils/index.ts","webpack://wsopcua/./src/factory/factories_id_generator.ts","webpack://wsopcua/./src/generated/LocalizedText.ts","webpack://wsopcua/./src/generated/TimestampsToReturn.ts","webpack://wsopcua/./node_modules/eventemitter3/index.js","webpack://wsopcua/./src/crypto/crypto_utils.ts","webpack://wsopcua/./src/secure-channel/security_policy.ts","webpack://wsopcua/./src/variant/variant_tools.ts","webpack://wsopcua/./src/generated/QualifiedName.ts","webpack://wsopcua/./src/variant/VariantArrayTypeEnum.ts","webpack://wsopcua/./src/generated/MessageSecurityMode.ts","webpack://wsopcua/./src/generated/ReadRequest.ts","webpack://wsopcua/./src/generated/ReadResponse.ts","webpack://wsopcua/./src/constants/raw_status_codes.ts","webpack://wsopcua/./src/generated/DataValue.ts","webpack://wsopcua/./src/factory/factories_builtin_types.ts","webpack://wsopcua/./node_modules/async-es/internal/initialParams.js","webpack://wsopcua/./node_modules/async-es/asyncify.js","webpack://wsopcua/./node_modules/async-es/internal/wrapAsync.js","webpack://wsopcua/./src/chunkmanager/read_message_header.ts","webpack://wsopcua/./src/chunkmanager/chunk_manager.ts","webpack://wsopcua/./src/generated/BrowsePath.ts","webpack://wsopcua/./src/service-translate-browse-path/make_relative_path.ts","webpack://wsopcua/./src/service-translate-browse-path/make_browse_path.ts","webpack://wsopcua/./src/service-translate-browse-path/tools_browse_path.ts","webpack://wsopcua/./src/generated/TranslateBrowsePathsToNodeIdsRequest.ts","webpack://wsopcua/./src/generated/BrowsePathTarget.ts","webpack://wsopcua/./src/generated/BrowsePathResult.ts","webpack://wsopcua/./src/generated/TranslateBrowsePathsToNodeIdsResponse.ts","webpack://wsopcua/./src/generated/SignatureData.ts","webpack://wsopcua/./src/transport/tools.ts","webpack://wsopcua/./node_modules/lodash-es/noop.js","webpack://wsopcua/./src/constants/opcua_node_ids.ts","webpack://wsopcua/./src/generated/RelativePath.ts","webpack://wsopcua/./src/basic-types/guid.ts","webpack://wsopcua/./src/generated/ApplicationDescription.ts","webpack://wsopcua/./src/factory/factories_baseobject.ts","webpack://wsopcua/./src/generated/ServerState.ts","webpack://wsopcua/./node_modules/lodash-es/isFunction.js","webpack://wsopcua/./node_modules/lodash-es/isArrayLike.js","webpack://wsopcua/./src/service-endpoints/UserIdentityTokenType.ts","webpack://wsopcua/./src/generated/GetEndpointsRequest.ts","webpack://wsopcua/./src/generated/GetEndpointsResponse.ts","webpack://wsopcua/./src/client/MonitoredItemBase.ts","webpack://wsopcua/./src/secure-channel/secure_message_chunk_manager.ts","webpack://wsopcua/./src/generated/MonitoringParameters.ts","webpack://wsopcua/./src/generated/ReferenceDescription.ts","webpack://wsopcua/./src/generated/BrowseResult.ts","webpack://wsopcua/./src/generated/BrowseDescription.ts","webpack://wsopcua/./src/generated/BrowseRequest.ts","webpack://wsopcua/./src/generated/BrowseResponse.ts","webpack://wsopcua/./src/generated/BrowseNextRequest.ts","webpack://wsopcua/./src/generated/BrowseNextResponse.ts","webpack://wsopcua/./src/data-model/qualified_name_util.ts","webpack://wsopcua/./src/generated/EnumValueType.ts","webpack://wsopcua/./src/generated/AttributeWriteMask.ts","webpack://wsopcua/./src/generated/TimeZoneDataType.ts","webpack://wsopcua/./src/data-model/localized_text_util.ts","webpack://wsopcua/./src/data-model/index.ts","webpack://wsopcua/./src/generated/ApplicationType.ts","webpack://wsopcua/./node_modules/async-es/internal/onlyOnce.js","webpack://wsopcua/./node_modules/async-es/internal/slice.js","webpack://wsopcua/./node_modules/async-es/eachOfSeries.js","webpack://wsopcua/./node_modules/async-es/series.js","webpack://wsopcua/./node_modules/async-es/internal/parallel.js","webpack://wsopcua/./src/generated/BrowseDirection.ts","webpack://wsopcua/./src/generated/NodeClass.ts","webpack://wsopcua/./src/client/client_session_keepalive_manager.ts","webpack://wsopcua/./src/generated/QueryDataDescription.ts","webpack://wsopcua/./src/generated/NodeTypeDescription.ts","webpack://wsopcua/./src/generated/QueryFirstRequest.ts","webpack://wsopcua/./src/generated/QueryDataSet.ts","webpack://wsopcua/./src/generated/ParsingResult.ts","webpack://wsopcua/./src/generated/QueryFirstResponse.ts","webpack://wsopcua/./src/generated/QueryNextRequest.ts","webpack://wsopcua/./src/generated/QueryNextResponse.ts","webpack://wsopcua/./src/client/client_session.ts","webpack://wsopcua/./src/constants/AttributeIds.ts","webpack://wsopcua/./src/basic-types/array.ts","webpack://wsopcua/./src/generated/ReadValueId.ts","webpack://wsopcua/./src/generated/CallMethodRequest.ts","webpack://wsopcua/./src/generated/EndpointDescription.ts","webpack://wsopcua/./src/generated/ContentFilterResult.ts","webpack://wsopcua/./src/generated/AggregateConfiguration.ts","webpack://wsopcua/./src/generated/ChannelSecurityToken.ts","webpack://wsopcua/./src/generated/RelativePathElement.ts","webpack://wsopcua/./src/client/client_base.ts","webpack://wsopcua/./src/generated/MonitoringFilter.ts","webpack://wsopcua/./node_modules/async-es/internal/once.js","webpack://wsopcua/./node_modules/async-es/internal/breakLoop.js","webpack://wsopcua/./node_modules/async-es/internal/doLimit.js","webpack://wsopcua/./node_modules/async-es/internal/getIterator.js","webpack://wsopcua/./node_modules/lodash-es/_baseTimes.js","webpack://wsopcua/./node_modules/lodash-es/isObjectLike.js","webpack://wsopcua/./node_modules/lodash-es/_baseIsArguments.js","webpack://wsopcua/./node_modules/lodash-es/isArguments.js","webpack://wsopcua/./node_modules/lodash-es/isArray.js","webpack://wsopcua/./node_modules/lodash-es/_isIndex.js","webpack://wsopcua/./node_modules/lodash-es/_baseIsTypedArray.js","webpack://wsopcua/./node_modules/lodash-es/_baseUnary.js","webpack://wsopcua/./node_modules/lodash-es/isTypedArray.js","webpack://wsopcua/./node_modules/lodash-es/_arrayLikeKeys.js","webpack://wsopcua/./node_modules/lodash-es/_isPrototype.js","webpack://wsopcua/./node_modules/lodash-es/_overArg.js","webpack://wsopcua/./node_modules/lodash-es/_nativeKeys.js","webpack://wsopcua/./node_modules/lodash-es/_baseKeys.js","webpack://wsopcua/./node_modules/lodash-es/keys.js","webpack://wsopcua/./node_modules/async-es/internal/iterator.js","webpack://wsopcua/./node_modules/async-es/eachOfLimit.js","webpack://wsopcua/./node_modules/async-es/internal/eachOfLimit.js","webpack://wsopcua/./src/generated/HistoryData.ts","webpack://wsopcua/./src/generated/HistoryUpdateType.ts","webpack://wsopcua/./src/generated/ModificationInfo.ts","webpack://wsopcua/./src/generated/HistoryModifiedData.ts","webpack://wsopcua/./src/generated/HistoryReadDetails.ts","webpack://wsopcua/./src/generated/HistoryReadValueId.ts","webpack://wsopcua/./src/generated/HistoryReadResult.ts","webpack://wsopcua/./src/generated/HistoryUpdateResult.ts","webpack://wsopcua/./src/generated/HistoryReadRequest.ts","webpack://wsopcua/./src/generated/HistoryReadResponse.ts","webpack://wsopcua/./src/generated/HistoryUpdateRequest.ts","webpack://wsopcua/./src/generated/HistoryUpdateResponse.ts","webpack://wsopcua/./src/generated/ReadRawModifiedDetails.ts","webpack://wsopcua/./src/generated/ReadProcessedDetails.ts","webpack://wsopcua/./src/generated/ReadAtTimeDetails.ts","webpack://wsopcua/./src/generated/ReadEventDetails.ts","webpack://wsopcua/./node_modules/lodash-es/_Symbol.js","webpack://wsopcua/./node_modules/lodash-es/_getRawTag.js","webpack://wsopcua/./node_modules/lodash-es/_objectToString.js","webpack://wsopcua/./node_modules/lodash-es/_baseGetTag.js","webpack://wsopcua/./node_modules/loglevel/lib/loglevel.js","webpack://wsopcua/./src/variant/variant.ts","webpack://wsopcua/./node_modules/timers-browserify/main.js","webpack://wsopcua/./src/date-time/date_time.ts","webpack://wsopcua/./src/data-value/datavalue.ts","webpack://wsopcua/./src/generated/RegisteredServer.ts","webpack://wsopcua/./src/generated/RegisterServerRequest.ts","webpack://wsopcua/./src/generated/RegisterServerResponse.ts","webpack://wsopcua/./src/generated/FindServersRequest.ts","webpack://wsopcua/./src/generated/FindServersResponse.ts","webpack://wsopcua/./src/generated/Argument.ts","webpack://wsopcua/./src/generated/CallRequest.ts","webpack://wsopcua/./src/generated/CallMethodResult.ts","webpack://wsopcua/./src/generated/CallResponse.ts","webpack://wsopcua/./src/service-call/index.ts","webpack://wsopcua/./src/generated/WriteValue.ts","webpack://wsopcua/./src/generated/WriteRequest.ts","webpack://wsopcua/./src/generated/WriteResponse.ts","webpack://wsopcua/./src/transport/message_builder_base.ts","webpack://wsopcua/(webpack)/buildin/global.js","webpack://wsopcua/./src/generated/BrowseResultMask.ts","webpack://wsopcua/./src/utils/once.ts","webpack://wsopcua/./src/factory/factories_builtin_types_special.ts","webpack://wsopcua/./src/common/secure_object.ts","webpack://wsopcua/./src/generated/MonitoredItemModifyRequest.ts","webpack://wsopcua/./src/generated/ModifyMonitoredItemsRequest.ts","webpack://wsopcua/./src/generated/ContentFilterElementResult.ts","webpack://wsopcua/./src/secure-channel/sequence_number_generator.ts","webpack://wsopcua/./src/client/ClientSubscription.ts","webpack://wsopcua/./src/client/MonitoredItem.ts","webpack://wsopcua/./src/generated/FilterOperand.ts","webpack://wsopcua/./src/generated/SimpleAttributeOperand.ts","webpack://wsopcua/./src/generated/EventFilter.ts","webpack://wsopcua/./src/generated/UserTokenType.ts","webpack://wsopcua/./src/generated/UserTokenPolicy.ts","webpack://wsopcua/./src/generated/ViewDescription.ts","webpack://wsopcua/./src/packet-assembler/packet_assembler.ts","webpack://wsopcua/./src/transport/TCPErrorMessage.ts","webpack://wsopcua/./node_modules/lodash-es/isLength.js","webpack://wsopcua/./node_modules/lodash-es/isObject.js","webpack://wsopcua/./node_modules/lodash-es/_root.js","webpack://wsopcua/./node_modules/lodash-es/_freeGlobal.js","webpack://wsopcua/./node_modules/async-es/eachOf.js","webpack://wsopcua/./node_modules/async-es/map.js","webpack://wsopcua/./node_modules/async-es/internal/doParallel.js","webpack://wsopcua/./node_modules/async-es/internal/map.js","webpack://wsopcua/./src/generated/FilterOperator.ts","webpack://wsopcua/./src/generated/ContentFilterElement.ts","webpack://wsopcua/./src/generated/ContentFilter.ts","webpack://wsopcua/./src/object-registry/objectRegistry.ts","webpack://wsopcua/./node_modules/lodash-es/_nodeUtil.js","webpack://wsopcua/./src/backoff/function_call.ts","webpack://wsopcua/./src/backoff/backoff.ts","webpack://wsopcua/./src/backoff/strategy/strategy.ts","webpack://wsopcua/./src/backoff/strategy/fibonacci.ts","webpack://wsopcua/./src/backoff/strategy/exponential.ts","webpack://wsopcua/./src/backoff/index.ts","webpack://wsopcua/./src/numeric-range/numeric_range.ts","webpack://wsopcua/./node_modules/setimmediate/setImmediate.js","webpack://wsopcua/./node_modules/process/browser.js","webpack://wsopcua/(webpack)/buildin/harmony-module.js","webpack://wsopcua/./src/factory/factories_basic_type.ts","webpack://wsopcua/./node_modules/delayed/delayed.js","webpack://wsopcua/./src/secure-channel/client_secure_channel_layer.ts","webpack://wsopcua/./src/secure-channel/message_header_to_string.ts","webpack://wsopcua/./src/secure-channel/message_chunker.ts","webpack://wsopcua/./node_modules/lodash-es/isBuffer.js","webpack://wsopcua/./node_modules/lodash-es/stubFalse.js","webpack://wsopcua/./node_modules/async-es/internal/setImmediate.js","webpack://wsopcua/./src/client/client_publish_engine.ts","webpack://wsopcua/./node_modules/async-es/whilst.js","webpack://wsopcua/./node_modules/async-es/forEachOf.js","webpack://wsopcua/./src/client/MonitoredItemGroup.ts","webpack://wsopcua/./src/transport/ws_transport.ts","webpack://wsopcua/./src/transport/HelloMessage.ts","webpack://wsopcua/./src/transport/AcknowledgeMessage.ts","webpack://wsopcua/./src/transport/client_ws_transport.ts","webpack://wsopcua/./src/packet-analyzer/packet_analyzer.ts","webpack://wsopcua/./src/secure-channel/message_builder.ts","webpack://wsopcua/./node_modules/buffer/index.js","webpack://wsopcua/./node_modules/base64-js/index.js","webpack://wsopcua/./node_modules/ieee754/index.js","webpack://wsopcua/./node_modules/isarray/index.js","webpack://wsopcua/(webpack)/buildin/amd-define.js","webpack://wsopcua/./src/generated/EUInformation.ts","webpack://wsopcua/./src/generated/Range.ts","webpack://wsopcua/./src/generated/AxisScaleEnumeration.ts","webpack://wsopcua/./src/generated/AxisInformation.ts","webpack://wsopcua/./src/data-access/index.ts","webpack://wsopcua/./src/generated/ModelChangeStructureDataType.ts","webpack://wsopcua/./src/generated/SubscriptionDiagnosticsDataType.ts","webpack://wsopcua/./src/generated/RedundantServerDataType.ts","webpack://wsopcua/./src/generated/SamplingIntervalDiagnosticsDataType.ts","webpack://wsopcua/./src/generated/SemanticChangeStructureDataType.ts","webpack://wsopcua/./src/generated/ServerDiagnosticsSummaryDataType.ts","webpack://wsopcua/./src/generated/BuildInfo.ts","webpack://wsopcua/./src/generated/ServerStatusDataType.ts","webpack://wsopcua/./src/generated/ServiceCounterDataType.ts","webpack://wsopcua/./src/generated/SessionDiagnosticsDataType.ts","webpack://wsopcua/./src/generated/SessionSecurityDiagnosticsDataType.ts","webpack://wsopcua/./src/common/applicationurn.ts","webpack://wsopcua/./src/generated/CreateSessionRequest.ts","webpack://wsopcua/./src/generated/SignedSoftwareCertificate.ts","webpack://wsopcua/./src/generated/CreateSessionResponse.ts","webpack://wsopcua/./src/generated/ActivateSessionRequest.ts","webpack://wsopcua/./src/generated/ActivateSessionResponse.ts","webpack://wsopcua/./src/generated/CloseSessionRequest.ts","webpack://wsopcua/./src/generated/CloseSessionResponse.ts","webpack://wsopcua/./src/generated/CancelRequest.ts","webpack://wsopcua/./src/generated/CancelResponse.ts","webpack://wsopcua/./src/generated/UserIdentityToken.ts","webpack://wsopcua/./src/generated/AnonymousIdentityToken.ts","webpack://wsopcua/./src/generated/UserNameIdentityToken.ts","webpack://wsopcua/./src/generated/X509IdentityToken.ts","webpack://wsopcua/./src/generated/IssuedIdentityToken.ts","webpack://wsopcua/./src/client/opcua_client.ts","webpack://wsopcua/./src/client/client_utils.ts","webpack://wsopcua/./src/wsopcua/index.ts"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","isValidBoolean","randomBoolean","Math","random","encodeBoolean","stream","setUint8","decodeBoolean","getUint8","falsy","coerceBoolean","undefined","test","getRandomInt","min","max","floor","isValidUInt16","Number","isFinite","randomUInt16","encodeUInt16","setUint16","decodeUInt16","getUint16","isValidInt16","randomInt16","encodeInt16","assert","setInt16","decodeInt16","getInt16","isValidInt32","randomInt32","encodeInt32","setInt32","decodeInt32","getInt32","isValidUInt32","randomUInt32","encodeUInt32","setUint32","decodeUInt32","getUint32","isValidInt8","randomInt8","encodeInt8","setInt8","decodeInt8","getInt8","isValidSByte","randomSByte","encodeSByte","decodeSByte","isValidUInt8","randomUInt8","encodeUInt8","decodeUInt8","isValidByte","randomByte","encodeByte","decodeByte","isValidUInt64","Array","length","randomUInt64","encodeUInt64","coerceUInt64","decodeUInt64","low","constructInt64","high","v","split","parseInt","randomInt64","coerceInt8","coerceUInt8","coerceByte","coerceSByte","coerceUInt16","coerceInt16","coerceUInt32","coerceInt32","minFloat","pow","maxFloat","getRandomDouble","isValidFloat","Float32Array","randomFloat","float","roundToFloat","encodeFloat","setFloat32","decodeFloat","getFloat32","isValidDouble","randomDouble","encodeDouble","setFloat64","decodeDouble","getFloat64","coerceFloat","parseFloat","coerceDouble","utils_getRandomInt","isValidString","randomString","nbCar","cars","push","String","fromCharCode","join","decodeString","readString","encodeString","writeString","isValidDateTime","Date","date_time_getRandomInt","randomDateTime","encodeDateTime","date","Error","toString","hl","bn_dateToHundredNanoSecondFrom1601","hi","lo","decodeDateTime","bn_hundredNanoSecondFrom1601ToDate","coerceDateTime","offset_factor_1601","t1600","UTC","getTime","factor","offsetToGregorianCalendarZero","offset","date_time_factor","F","A","B","oh","ol","fl","F_div_factor","high_low","value_h","value_l","value1","last_now_date","last_picoseconds","getCurrentClock","now","timestamp","picoseconds","coerceClock","byte_string_getRandomInt","isValidByteString","ArrayBuffer","randomByteString","len","b","Uint8Array","encodeByteString","byteString","writeByteStream","decodeByteString","readByteStream","coerceByteString","isArray","str","btoa","buf","j","charCodeAt","EnumNodeIdEncoding","is_uint8","nodeID_encodingByte","nodeId","encodingByte","identifierType","nodeid","NUMERIC","namespace","namespaceUri","serverIndex","is_uint16","utils","Numeric","FourBytes","TwoBytes","STRING","BYTESTRING","ByteString","GUID","Guid","expanded_nodeid","NamespaceUriFlag","ServerIndexFlag","isValidNodeId","randomNodeId","_encodeNodeId","encoding_byte","guid","encodeNodeId","encodeExpandedNodeId","expandedNodeId","_decodeNodeId","nodeIdType","console","log","decodeNodeId","decodeExpandedNodeId","e","extraStatusCodeBits","StructureChanged","SemanticChanged","InfoTypeDataValue","LimitLow","LimitHigh","LimitConstant","Overflow","HistorianCalculated","HistorianInterpolated","HistorianPartial","HistorianExtraData","HistorianMultiValue","constants","description","StatusCode","this","_value","_description","_name","[object Object]","options","substr","mask","hasOverflowBit","checkBit","hasSemanticChangedBit","hasStructureChangedBit","ConstantStatusCode","super","encodeStatusCode","statusCode","decodeStatusCode","code","code_without_info_bits","info_bits","sc","StatusCodes_reverse_map","warn","tmp","ModifiableStatusCode","_base","set","codeName","csc","_extraBits","_getExtraName","bit","bitsarray","unset","coerceStatusCode","validateLocaleId","optionalBits","makeStatusCode","Good","encodeLocaleId","decodeLocaleId","ExtensionObject","constructEmptyExtensionObject","encodeExtensionObject","encodingDefaultBinary","isEmpty","constructor","DataStream","binaryStoreSize","encode","decodeExtensionObject","encodingType","decode","defaultValue","__webpack_exports__","util","ar","isBoolean","arg","isNull","isNullOrUndefined","isNumber","isString","isSymbol","isUndefined","isRegExp","re","isObject","objectToString","isDate","isError","isFunction","isPrimitive","AssertionError","actual","expected","operator","message","generatedMessage","self","truncate","JSON","stringify","replacer","getMessage","stackStartFunction","fail","captureStackTrace","stack","isNaN","slice","ExpandedNodeId","_nodeid__WEBPACK_IMPORTED_MODULE_0__","makeExpandedNodeId","valueInt","constructorMap","_global_factories","getFactory","type_name","getConstructor","expandedId","hasConstructor","_assert__WEBPACK_IMPORTED_MODULE_0__","constructObject","apply","arguments","callConstructor","register_class_definition","classname","class_constructor","registerFactory","doDebug","debugLog","args","_fillUp","count","fillWith","ret","hexDump","arrayBuffer","view","DataView","byteLength","out","row","toUpperCase","string","DataType","_factory__WEBPACK_IMPORTED_MODULE_0__","_basic_types__WEBPACK_IMPORTED_MODULE_1__","RequestHeader","authenticationToken","requestHandle","returnDiagnostics","auditEntryId","timeoutHint","additionalHeader","_basic_types__WEBPACK_IMPORTED_MODULE_0__","inp","target","_factory_factories_factories__WEBPACK_IMPORTED_MODULE_1__","_nodeid_expanded_nodeid__WEBPACK_IMPORTED_MODULE_2__","ResponseHeader","serviceResult","serviceDiagnostics","_DiagnosticInfo__WEBPACK_IMPORTED_MODULE_1__","stringTable","clone","_factory_factories_factories__WEBPACK_IMPORTED_MODULE_2__","_nodeid_expanded_nodeid__WEBPACK_IMPORTED_MODULE_3__","NodeIdType","NodeId","_basic_types_guid__WEBPACK_IMPORTED_MODULE_1__","addressSpace","reverse_map","green","bold","findNode","browseName","n1","n2","_utils__WEBPACK_IMPORTED_MODULE_3__","makeNodeId","indexOf","NullNodeId","DataTypeIds","_constants__WEBPACK_IMPORTED_MODULE_2__","VariableIds","ObjectIds","ObjectTypeIds","VariableTypeIds","MethodIds","ReferenceTypeIds","_nodeid_to_name_index","_name_to_nodeid_index","resolveNodeId","node_or_string","raw_id","coerceNodeId","from_hex","size","character","charAt","expand_map","direct_index","rege_ns_i","rege_ns_s","rege_ns_b","rege_ns_g","matches","two_first","exec","identifierTypes","DiagnosticInfo","symbolicId","namespaceURI","locale","localizedText","additionalInfo","innerStatusCode","innerDiagnosticInfo","namespaceURISpecified","localeSpecified","localizedTextSpecified","additionalInfoSpecified","innerStatusCodeSpecified","innerDiagnosticInfoSpecified","decodeDiagnosticInfo","obj","MonitoringMode","DataChangeTrigger","DeadbandType","encodeMonitoringMode","data","decodeMonitoringMode","encodeDataChangeTrigger","decodeDataChangeTrigger","factories_enumerations","CreateSubscriptionRequest_CreateSubscriptionRequest","requestHeader","requestedPublishingInterval","requestedLifetimeCount","requestedMaxKeepAliveCount","maxNotificationsPerPublish","publishingEnabled","priority","basic_types","factories_factories","CreateSubscriptionResponse_CreateSubscriptionResponse","responseHeader","subscriptionId","revisedPublishingInterval","revisedLifetimeCount","revisedMaxKeepAliveCount","ModifySubscriptionRequest_ModifySubscriptionRequest","ModifySubscriptionResponse_ModifySubscriptionResponse","MonitoredItemCreateRequest_MonitoredItemCreateRequest","itemToMonitor","ReadValueId","monitoringMode","requestedParameters","MonitoringParameters","decodeMonitoredItemCreateRequest","CreateMonitoredItemsRequest_CreateMonitoredItemsRequest","timestampsToReturn","itemsToCreate","TimestampsToReturn","MonitoredItemCreateResult_MonitoredItemCreateResult","monitoredItemId","revisedSamplingInterval","revisedQueueSize","filterResult","decodeMonitoredItemCreateResult","CreateMonitoredItemsResponse_CreateMonitoredItemsResponse","results","diagnosticInfos","SubscriptionAcknowledgement_SubscriptionAcknowledgement","sequenceNumber","decodeSubscriptionAcknowledgement","PublishRequest_PublishRequest","subscriptionAcknowledgements","NotificationMessage_NotificationMessage","publishTime","notificationData","MonitoredItemNotification_MonitoredItemNotification","clientHandle","DataValue","decodeMonitoredItemNotification","NotificationData","DataChangeNotification_DataChangeNotification","monitoredItems","StatusChangeNotification_StatusChangeNotification","status","diagnosticInfo","EventFieldList_EventFieldList","eventFields","variant","decodeEventFieldList","EventNotificationList_EventNotificationList","events","PublishResponse_PublishResponse","availableSequenceNumbers","moreNotifications","notificationMessage","RepublishRequest_RepublishRequest","retransmitSequenceNumber","RepublishResponse_RepublishResponse","DeleteMonitoredItemsRequest_DeleteMonitoredItemsRequest","monitoredItemIds","DeleteMonitoredItemsResponse_DeleteMonitoredItemsResponse","SetPublishingModeRequest_SetPublishingModeRequest","subscriptionIds","SetPublishingModeResponse_SetPublishingModeResponse","DeleteSubscriptionsRequest_DeleteSubscriptionsRequest","DeleteSubscriptionsResponse_DeleteSubscriptionsResponse","MonitoredItemModifyResult_MonitoredItemModifyResult","decodeMonitoredItemModifyResult","ModifyMonitoredItemsResponse_ModifyMonitoredItemsResponse","SetMonitoringModeRequest_SetMonitoringModeRequest","SetMonitoringModeResponse_SetMonitoringModeResponse","MonitoringFilterResult","EventFilterResult_EventFilterResult","selectClauseResults","selectClauseDiagnosticInfos","whereClauseResult","ContentFilterResult","DataChangeFilter_DataChangeFilter","MonitoringFilter","trigger","deadbandType","deadbandValue","AggregateFilter_AggregateFilter","startTime","aggregateType","processingInterval","aggregateConfiguration","AggregateConfiguration","SetTriggeringRequest_SetTriggeringRequest","triggeringItemId","linksToAdd","linksToRemove","SetTriggeringResponse_SetTriggeringResponse","addResults","addDiagnosticInfos","removeResults","removeDiagnosticInfos","TransferResult_TransferResult","decodeTransferResult","TransferSubscriptionsRequest_TransferSubscriptionsRequest","sendInitialValues","TransferSubscriptionsResponse_TransferSubscriptionsResponse","_differenceScalar","value2","dataType","absoluteDeadband","diff","UInt64","Int64","h1","h2","abs","difference","v1","v2","arrayType","Scalar","check_deadband","variant1","variant2","valueRange","None","Absolute","Percent","txtEncoder","TextEncoder","txtDecoder","TextDecoder","_pos","buffer","pos","newLen","littleEndian","val","bytes","remaining_bytes","bufLen","buff","arrayBuf","byteArr","arr","BinaryStreamSizeCalculator","stringToUint8Array","_enumerations","registerEnumeration","enumeration","coerce","typeSchema","_factories_builtin_types__WEBPACK_IMPORTED_MODULE_1__","hasEnumeration","enumerationName","getEnumeration","SecurityTokenRequestType","encodeSecurityTokenRequestType","decodeSecurityTokenRequestType","OpenSecureChannelRequest_OpenSecureChannelRequest","clientProtocolVersion","requestType","securityMode","clientNonce","requestedLifetime","MessageSecurityMode","OpenSecureChannelResponse_OpenSecureChannelResponse","serverProtocolVersion","securityToken","generated_ChannelSecurityToken","serverNonce","CloseSecureChannelRequest_CloseSecureChannelRequest","CloseSecureChannelResponse_CloseSecureChannelResponse","ServiceFault_ServiceFault","AsymmetricAlgorithmSecurityHeader_AsymmetricAlgorithmSecurityHeader","securityPolicyUri","senderCertificate","receiverCertificateThumbprint","SymmetricAlgorithmSecurityHeader_SymmetricAlgorithmSecurityHeader","tokenId","SequenceHeader_SequenceHeader","factories_baseobject","requestId","service_secure_channel_ChannelSecurityToken","expired","createdAt","revisedLifetime","buffer_ellipsis","start","end","debug","capitalizeFirstLetter","ACode","ZCode","isUpperCaseChar","lowerFirstLetter","result","toLowerCase","get_clock_tick","performance","STRIP_COMMENTS","ARGUMENT_NAMES","getFunctionParameterNames","func","fnStr","replace","match","SymbolProto","isEqual","a","aStack","bStack","type","className","valueOf","areArrays","aCtor","bCtor","keys","pop","deepEq","set_flag","check_flag","_FIRST_INTERNAL_ID","_next_available_id","generate_new_id","next_available_id","is_internal_id","LocalizedText","text","textSpecified","decodeLocalizedText","encodeTimestampsToReturn","decodeTimestampsToReturn","_factory_factories_enumerations__WEBPACK_IMPORTED_MODULE_0__","has","prefix","Events","addListener","emitter","event","fn","context","once","TypeError","listener","evt","_events","_eventsCount","clearEvent","EventEmitter","__proto__","eventNames","names","getOwnPropertySymbols","concat","listeners","handlers","ee","listenerCount","emit","a1","a2","a3","a4","a5","removeListener","on","removeAllListeners","off","prefixed","privateDecrypt_long","block_size","algorithm","rsa_length","toPem","raw_key","pem","verifyMessageChunkSignature","block_to_verify","signature","publicEncrypt_long","padding","makeMessageChunkSignature","chunk","computeDerivedKeys","secret","seed","SecurityPolicy","fromURI","uri","Invalid","toUri","securityPolicy","RSAOAEP_Decrypt","privateKey","asymmetricVerifyChunk","certificate","signatureLength","exploreCertificate","publicKeyLength","asymmetricVerify","RSAPKCS1V15SHA1_Verify","RSAPKCS1OAEPSHA1_Verify","RSAPKCS1V15SHA1_Sign","RSAPKCS1OAEPSHA1_Sign","RSAOAEP_Encrypt","publicKey","compute_derived_keys","derivedKeys","derivedClientKeys","derivedServerKeys","derivedSignatureKeyLength","derivedEncryptionKeyLength","encryptingBlockSize","symmetricEncryptionAlgorithm","sha1or256","_Basic128Rsa15","Basic128Rsa15","symmetricKeyLength","minimumAsymmetricKeyLength","maximumAsymmetricKeyLength","asymmetricSign","asymmetricSignatureAlgorithm","asymmetricEncrypt","asymmetricDecrypt","asymmetricEncryptionAlgorithm","blockPaddingSize","_Basic256","Basic256","_Basic256Sha256","Basic256Sha256","getCryptoFactory","computeSignature","senderNonce","receiverPrivatekey","crypto_factory","SignatureData","buildVariantArray","nbElements","DataTypeEnum","Float","Double","Float64Array","UInt32","Uint32Array","Int32","Int32Array","UInt16","Uint16Array","Int16","Int16Array","Byte","SByte","Int8Array","__check_same_array","arr1","arr2","sameVariant","VariantArrayTypeEnum","Matrix","dimensions","QualifiedName","namespaceIndex","decodeQualifiedName","VariantArrayType","encodeMessageSecurityMode","decodeMessageSecurityMode","ReadRequest_ReadRequest","maxAge","nodesToRead","ReadResponse_ReadResponse","StatusCodes","BadUnexpectedError","BadInternalError","BadOutOfMemory","BadResourceUnavailable","BadCommunicationError","BadEncodingError","BadDecodingError","BadEncodingLimitsExceeded","BadRequestTooLarge","BadResponseTooLarge","BadUnknownResponse","BadTimeout","BadServiceUnsupported","BadShutdown","BadServerNotConnected","BadServerHalted","BadNothingToDo","BadTooManyOperations","BadTooManyMonitoredItems","BadDataTypeIdUnknown","BadCertificateInvalid","BadSecurityChecksFailed","BadCertificateTimeInvalid","BadCertificateIssuerTimeInvalid","BadCertificateHostNameInvalid","BadCertificateUriInvalid","BadCertificateUseNotAllowed","BadCertificateIssuerUseNotAllowed","BadCertificateUntrusted","BadCertificateRevocationUnknown","BadCertificateIssuerRevocationUnknown","BadCertificateRevoked","BadCertificateIssuerRevoked","BadCertificateChainIncomplete","BadUserAccessDenied","BadIdentityTokenInvalid","BadIdentityTokenRejected","BadSecureChannelIdInvalid","BadInvalidTimestamp","BadNonceInvalid","BadSessionIdInvalid","BadSessionClosed","BadSessionNotActivated","BadSubscriptionIdInvalid","BadRequestHeaderInvalid","BadTimestampsToReturnInvalid","BadRequestCancelledByClient","BadTooManyArguments","GoodSubscriptionTransferred","GoodCompletesAsynchronously","GoodOverload","GoodClamped","BadNoCommunication","BadWaitingForInitialData","BadNodeIdInvalid","BadNodeIdUnknown","BadAttributeIdInvalid","BadIndexRangeInvalid","BadIndexRangeNoData","BadDataEncodingInvalid","BadDataEncodingUnsupported","BadNotReadable","BadNotWritable","BadOutOfRange","BadNotSupported","BadNotFound","BadObjectDeleted","BadNotImplemented","BadMonitoringModeInvalid","BadMonitoredItemIdInvalid","BadMonitoredItemFilterInvalid","BadMonitoredItemFilterUnsupported","BadFilterNotAllowed","BadStructureMissing","BadEventFilterInvalid","BadContentFilterInvalid","BadFilterOperatorInvalid","BadFilterOperatorUnsupported","BadFilterOperandCountMismatch","BadFilterOperandInvalid","BadFilterElementInvalid","BadFilterLiteralInvalid","BadContinuationPointInvalid","BadNoContinuationPoints","BadReferenceTypeIdInvalid","BadBrowseDirectionInvalid","BadNodeNotInView","BadServerUriInvalid","BadServerNameMissing","BadDiscoveryUrlMissing","BadSempahoreFileMissing","BadRequestTypeInvalid","BadSecurityModeRejected","BadSecurityPolicyRejected","BadTooManySessions","BadUserSignatureInvalid","BadApplicationSignatureInvalid","BadNoValidCertificates","BadIdentityChangeNotSupported","BadRequestCancelledByRequest","BadParentNodeIdInvalid","BadReferenceNotAllowed","BadNodeIdRejected","BadNodeIdExists","BadNodeClassInvalid","BadBrowseNameInvalid","BadBrowseNameDuplicated","BadNodeAttributesInvalid","BadTypeDefinitionInvalid","BadSourceNodeIdInvalid","BadTargetNodeIdInvalid","BadDuplicateReferenceNotAllowed","BadInvalidSelfReference","BadReferenceLocalOnly","BadNoDeleteRights","UncertainReferenceNotDeleted","BadServerIndexInvalid","BadViewIdUnknown","BadViewTimestampInvalid","BadViewParameterMismatch","BadViewVersionInvalid","UncertainNotAllNodesAvailable","GoodResultsMayBeIncomplete","BadNotTypeDefinition","UncertainReferenceOutOfServer","BadTooManyMatches","BadQueryTooComplex","BadNoMatch","BadMaxAgeInvalid","BadSecurityModeInsufficient","BadHistoryOperationInvalid","BadHistoryOperationUnsupported","BadInvalidTimestampArgument","BadWriteNotSupported","BadTypeMismatch","BadMethodInvalid","BadArgumentsMissing","BadTooManySubscriptions","BadTooManyPublishRequests","BadNoSubscription","BadSequenceNumberUnknown","BadMessageNotAvailable","BadInsufficientClientProfile","BadStateNotActive","BadTcpServerTooBusy","BadTcpMessageTypeInvalid","BadTcpSecureChannelUnknown","BadTcpMessageTooLarge","BadTcpNotEnoughResources","BadTcpInternalError","BadTcpEndpointUrlInvalid","BadRequestInterrupted","BadRequestTimeout","BadSecureChannelClosed","BadSecureChannelTokenUnknown","BadSequenceNumberInvalid","BadProtocolVersionUnsupported","BadConfigurationError","BadNotConnected","BadDeviceFailure","BadSensorFailure","BadOutOfService","BadDeadbandFilterInvalid","UncertainNoCommunicationLastUsableValue","UncertainLastUsableValue","UncertainSubstituteValue","UncertainInitialValue","UncertainSensorNotAccurate","UncertainEngineeringUnitsExceeded","UncertainSubNormal","GoodLocalOverride","BadRefreshInProgress","BadConditionAlreadyDisabled","BadConditionAlreadyEnabled","BadConditionDisabled","BadEventIdUnknown","BadEventNotAcknowledgeable","BadDialogNotActive","BadDialogResponseInvalid","BadConditionBranchAlreadyAcked","BadConditionBranchAlreadyConfirmed","BadConditionAlreadyShelved","BadConditionNotShelved","BadShelvingTimeOutOfRange","BadNoData","BadBoundNotFound","BadBoundNotSupported","BadDataLost","BadDataUnavailable","BadEntryExists","BadNoEntryExists","BadTimestampNotSupported","GoodEntryInserted","GoodEntryReplaced","UncertainDataSubNormal","GoodNoData","GoodMoreData","BadAggregateListMismatch","BadAggregateNotSupported","BadAggregateInvalidInputs","BadAggregateConfigurationRejected","GoodDataIgnored","BadRequestNotAllowed","GoodEdited","GoodPostActionFailed","UncertainDominantValueChanged","GoodDependentValueChanged","BadDominantValueChanged","UncertainDependentValueChanged","BadDependentValueChanged","GoodCommunicationEvent","GoodShutdownEvent","GoodCallAgain","GoodNonCriticalTimeout","BadInvalidArgument","BadConnectionRejected","BadDisconnect","BadConnectionClosed","BadInvalidState","BadEndOfStream","BadNoDataAvailable","BadWaitingForResponse","BadOperationAbandoned","BadExpectedStreamToBlock","BadWouldBlock","BadSyntaxError","BadMaxConnectionsReached","sourceTimestamp","sourcePicoseconds","serverTimestamp","serverPicoseconds","statusCodeSpecified","sourceTimestampSpecified","serverTimestampSpecified","sourcePicosecondsSpecified","serverPicosecondsSpecified","_variant__WEBPACK_IMPORTED_MODULE_0__","decodeDataValue","emptyGuid","_basic_types__WEBPACK_IMPORTED_MODULE_3__","minDate","_defaultType","toJSON","_nodeid_nodeid__WEBPACK_IMPORTED_MODULE_1__","coerceExpandedNodeId","_constants_raw_status_codes__WEBPACK_IMPORTED_MODULE_4__","TypeSchema","prop","registerType","schema","_defaultTypeMap","findSimpleType","typeschema","findBuiltInType","datatypeName","subType","initialParams","callback","invokeCallback","error","setImmediate","rethrow","supportsSymbol","asyncFn","isAsync","then","err","asyncify","readMessageHeader","msgType","isFinal","do_debug","ChunkManager_options","chunk_manager_ChunkManager","eventemitter3","properties","nbUnwanted","forEach","argsIn","chunkSize","headerSize","writeHeaderFunc","sequenceHeaderSize","writeSequenceHeaderFunc","compute_signature","plainBlockSize","cipherBlockSize","maxBodySize","encrypt_buffer","maxBlock","dataOffset","chunkArray","cursor","pending_chunk","signature_start","dataEnd","section_to_sign","copy","startEncryptionPos","endEncryptionPos","area_to_encrypt","nbBlock","encrypted_buf","isLast","expected_length","_write_signature","_encrypt","input_cursor","_push_pending_chunk","space_left","nb_to_write","arrBuffer","_postprocess_current_chunk","nbPaddingByteTotal","nbPaddingByte","extraNbPaddingByte","extra_encryption_bytes","curLength","_write_padding_bytes","adjustedLength","BrowsePath_BrowsePath","startingNode","relativePath","RelativePath","decodeBrowsePath","hierarchicalReferenceTypeNodeId","aggregatesReferenceTypeNodeId","regName","RegExp","source","regBrowseName","regReferenceType","regRelativePath","makeQualifiedName","mm","strName","make_relative_path_unescape","makeRelativePath","elements","referenceTypeId","includeSubtypes","isInverse","refStr","findReferenceType","RelativePathElement","targetName","makeBrowsePath","rootNode","relativePathBNF","node","_get_nodeId","hierarchicalReferencesId","HierarchicalReferences","constructBrowsePathFromQualifiedName","browsePath","map","TranslateBrowsePathsToNodeIdsRequest_TranslateBrowsePathsToNodeIdsRequest","browsePaths","BrowsePathTarget_BrowsePathTarget","targetId","remainingPathIndex","decodeBrowsePathTarget","BrowsePathResult_BrowsePathResult","targets","decodeBrowsePathResult","TranslateBrowsePathsToNodeIdsResponse_TranslateBrowsePathsToNodeIdsResponse","is_valid_msg_type","decodeMessage","ClassName","_basic_types_DataStream__WEBPACK_IMPORTED_MODULE_1__","Function","_chunkmanager__WEBPACK_IMPORTED_MODULE_3__","_TCPErrorMessage__WEBPACK_IMPORTED_MODULE_2__","packTcpMessage","encodableObject","messageChunk","encodeMessage","parseEndpointUrl","endpointUrl","protocol","hostname","port","address","is_valid_endpointUrl","writeTCPMessageHeader","chunkType","total_length","messageContent","Boolean","DateTime","XmlElement","Structure","BaseDataType","Integer","UInteger","Enumeration","Image","Decimal","PermissionType","AccessRestrictionType","RolePermissionType","DataTypeDefinition","StructureType","StructureDefinition","EnumDefinition","StructureField","EnumField","NamingRuleType","IdType","NodeClass","Node","ObjectNode","ObjectTypeNode","VariableNode","VariableTypeNode","ReferenceTypeNode","MethodNode","ViewNode","DataTypeNode","ReferenceNode","IntegerId","Counter","Duration","NumericRange","Time","UtcTime","LocaleId","Argument","StatusResult","UserTokenType","UserTokenPolicy","ApplicationType","ApplicationDescription","ApplicationInstanceCertificate","EndpointDescription","UserIdentityToken","AnonymousIdentityToken","UserNameIdentityToken","X509IdentityToken","EndpointConfiguration","BuildInfo","SignedSoftwareCertificate","AttributeWriteMask","NodeAttributesMask","NodeAttributes","ObjectAttributes","VariableAttributes","MethodAttributes","ObjectTypeAttributes","VariableTypeAttributes","ReferenceTypeAttributes","DataTypeAttributes","ViewAttributes","AddNodesItem","AddReferencesItem","DeleteNodesItem","DeleteReferencesItem","SessionAuthenticationToken","ServiceFault","FindServersRequest","FindServersResponse","GetEndpointsRequest","GetEndpointsResponse","RegisteredServer","RegisterServerRequest","RegisterServerResponse","ChannelSecurityToken","OpenSecureChannelRequest","OpenSecureChannelResponse","CloseSecureChannelRequest","CloseSecureChannelResponse","CreateSessionRequest","CreateSessionResponse","ActivateSessionRequest","ActivateSessionResponse","CloseSessionRequest","CloseSessionResponse","CancelRequest","CancelResponse","AddNodesResult","AddNodesRequest","AddNodesResponse","AddReferencesRequest","AddReferencesResponse","DeleteNodesRequest","DeleteNodesResponse","DeleteReferencesRequest","DeleteReferencesResponse","BrowseDirection","ViewDescription","BrowseDescription","BrowseResultMask","ReferenceDescription","ContinuationPoint","BrowseResult","BrowseRequest","BrowseResponse","BrowseNextRequest","BrowseNextResponse","BrowsePath","BrowsePathTarget","BrowsePathResult","TranslateBrowsePathsToNodeIdsRequest","TranslateBrowsePathsToNodeIdsResponse","RegisterNodesRequest","RegisterNodesResponse","UnregisterNodesRequest","UnregisterNodesResponse","QueryDataDescription","NodeTypeDescription","FilterOperator","QueryDataSet","NodeReference","ContentFilterElement","ContentFilter","FilterOperand","ElementOperand","LiteralOperand","AttributeOperand","SimpleAttributeOperand","ContentFilterElementResult","ParsingResult","QueryFirstRequest","QueryFirstResponse","QueryNextRequest","QueryNextResponse","ReadRequest","ReadResponse","HistoryReadValueId","HistoryReadResult","HistoryReadDetails","ReadEventDetails","ReadRawModifiedDetails","ReadProcessedDetails","ReadAtTimeDetails","HistoryData","HistoryEvent","HistoryReadRequest","HistoryReadResponse","WriteValue","WriteRequest","WriteResponse","HistoryUpdateDetails","UpdateDataDetails","UpdateEventDetails","DeleteRawModifiedDetails","DeleteAtTimeDetails","DeleteEventDetails","HistoryUpdateResult","HistoryUpdateRequest","HistoryUpdateResponse","CallMethodRequest","CallMethodResult","CallRequest","CallResponse","DataChangeFilter","EventFilter","AggregateFilter","EventFilterResult","AggregateFilterResult","MonitoredItemCreateRequest","MonitoredItemCreateResult","CreateMonitoredItemsRequest","CreateMonitoredItemsResponse","MonitoredItemModifyRequest","MonitoredItemModifyResult","ModifyMonitoredItemsRequest","ModifyMonitoredItemsResponse","SetMonitoringModeRequest","SetMonitoringModeResponse","SetTriggeringRequest","SetTriggeringResponse","DeleteMonitoredItemsRequest","DeleteMonitoredItemsResponse","CreateSubscriptionRequest","CreateSubscriptionResponse","ModifySubscriptionRequest","ModifySubscriptionResponse","SetPublishingModeRequest","SetPublishingModeResponse","NotificationMessage","MonitoredItemNotification","DataChangeNotification","StatusChangeNotification","SubscriptionAcknowledgement","PublishRequest","PublishResponse","RepublishRequest","RepublishResponse","TransferResult","TransferSubscriptionsRequest","TransferSubscriptionsResponse","DeleteSubscriptionsRequest","DeleteSubscriptionsResponse","RedundancySupport","ServerState","RedundantServerDataType","SamplingIntervalDiagnosticsDataType","ServerDiagnosticsSummaryDataType","ServerStatusDataType","SessionDiagnosticsDataType","SessionSecurityDiagnosticsDataType","ServiceCounterDataType","SubscriptionDiagnosticsDataType","ModelChangeStructureDataType","Range","EUInformation","ExceptionDeviationFormat","Annotation","ProgramDiagnosticDataType","SemanticChangeStructureDataType","EventNotificationList","EventFieldList","HistoryEventFieldList","IssuedIdentityToken","ImageBMP","ImageGIF","ImageJPG","ImagePNG","EnumValueType","TimeZoneDataType","ModificationInfo","HistoryModifiedData","HistoryUpdateType","PerformUpdateType","UpdateStructureDataDetails","BitFieldMaskDataType","InstanceNode","TypeNode","OpenFileMode","ModelChangeStructureVerbMask","EndpointUrlListDataType","NetworkGroupDataType","AxisScaleEnumeration","AxisInformation","XVType","ComplexNumberType","DoubleComplexNumberType","ServerOnNetwork","FindServersOnNetworkRequest","FindServersOnNetworkResponse","RegisterServer2Request","RegisterServer2Response","TrustListMasks","TrustListDataType","OptionSet","Union","NormalizedString","DecimalString","DurationString","TimeString","DateString","DiscoveryConfiguration","MdnsDiscoveryConfiguration","KeyValuePair","AccessLevelType","EventNotifierType","ProgramDiagnostic2DataType","AccessLevelExType","EndpointType","IdentityCriteriaType","IdentityMappingRuleType","SessionlessInvokeRequestType","AudioDataType","GenericAttributeValue","GenericAttributes","DecimalDataType","VersionTime","SessionlessInvokeResponseType","References","NonHierarchicalReferences","HasChild","Organizes","HasEventSource","HasModellingRule","HasEncoding","HasDescription","HasTypeDefinition","GeneratesEvent","Aggregates","HasSubtype","HasProperty","HasComponent","HasNotifier","HasOrderedComponent","FromState","ToState","HasCause","HasEffect","HasHistoricalConfiguration","HasSubStateMachine","AlwaysGeneratesEvent","HasTrueSubState","HasFalseSubState","HasCondition","HasAlarmSuppressionGroup","AlarmGroupMember","HasEffectDisable","HasEffectEnable","HasEffectSuppressed","HasEffectUnsuppressed","BaseObjectType","FolderType","DataTypeSystemType","DataTypeEncodingType","ModellingRuleType","ServerType","ServerCapabilitiesType","ServerDiagnosticsType","SessionsDiagnosticsSummaryType","SessionDiagnosticsObjectType","VendorServerInfoType","ServerRedundancyType","TransparentRedundancyType","NonTransparentRedundancyType","BaseEventType","AuditEventType","AuditSecurityEventType","AuditChannelEventType","AuditOpenSecureChannelEventType","AuditSessionEventType","AuditCreateSessionEventType","AuditActivateSessionEventType","AuditCancelEventType","AuditCertificateEventType","AuditCertificateDataMismatchEventType","AuditCertificateExpiredEventType","AuditCertificateInvalidEventType","AuditCertificateUntrustedEventType","AuditCertificateRevokedEventType","AuditCertificateMismatchEventType","AuditNodeManagementEventType","AuditAddNodesEventType","AuditDeleteNodesEventType","AuditAddReferencesEventType","AuditDeleteReferencesEventType","AuditUpdateEventType","AuditWriteUpdateEventType","AuditHistoryUpdateEventType","AuditUpdateMethodEventType","SystemEventType","DeviceFailureEventType","BaseModelChangeEventType","GeneralModelChangeEventType","StateMachineType","StateType","InitialStateType","TransitionType","TransitionEventType","AuditUpdateStateEventType","HistoricalDataConfigurationType","HistoryServerCapabilitiesType","AggregateFunctionType","ProgramTransitionEventType","ProgramStateMachineType","SemanticChangeEventType","AuditUrlMismatchEventType","FiniteStateMachineType","ConditionType","RefreshStartEventType","RefreshEndEventType","RefreshRequiredEventType","AuditConditionEventType","AuditConditionEnableEventType","AuditConditionCommentEventType","DialogConditionType","AcknowledgeableConditionType","AlarmConditionType","ShelvedStateMachineType","LimitAlarmType","AuditHistoryEventUpdateEventType","AuditHistoryValueUpdateEventType","AuditHistoryDeleteEventType","AuditHistoryRawModifyDeleteEventType","AuditHistoryAtTimeDeleteEventType","AuditHistoryEventDeleteEventType","EventQueueOverflowEventType","ProgramTransitionAuditEventType","AuditConditionRespondEventType","AuditConditionAcknowledgeEventType","AuditConditionConfirmEventType","ExclusiveLimitStateMachineType","ExclusiveLimitAlarmType","ExclusiveLevelAlarmType","ExclusiveRateOfChangeAlarmType","ExclusiveDeviationAlarmType","NonExclusiveLimitAlarmType","NonExclusiveLevelAlarmType","NonExclusiveRateOfChangeAlarmType","NonExclusiveDeviationAlarmType","DiscreteAlarmType","OffNormalAlarmType","TripAlarmType","AuditConditionShelvingEventType","BaseConditionClassType","ProcessConditionClassType","MaintenanceConditionClassType","SystemConditionClassType","AggregateConfigurationType","ProgressEventType","SystemStatusChangeEventType","OperationLimitsType","FileType","AddressSpaceFileType","NamespaceMetadataType","NamespacesType","SystemOffNormalAlarmType","AuditProgramTransitionEventType","NonTransparentNetworkRedundancyType","TrustListType","CertificateGroupType","CertificateType","ApplicationCertificateType","HttpsCertificateType","RsaMinApplicationCertificateType","RsaSha256ApplicationCertificateType","TrustListUpdatedAuditEventType","ServerConfigurationType","CertificateUpdatedAuditEventType","CertificateExpirationAlarmType","FileDirectoryType","CertificateGroupFolderType","AuditConditionResetEventType","RoleSetType","RoleType","TemporaryFileTransferType","FileTransferStateMachineType","AlarmGroupType","DiscrepancyAlarmType","SafetyConditionClassType","HighlyManagedAlarmConditionClassType","TrainingConditionClassType","TestingConditionClassType","AuditConditionSuppressEventType","AuditConditionSilenceEventType","AuditConditionOutOfServiceEventType","AlarmMetricsType","RoleMappingRuleChangedAuditEventType","AuthorizationServiceConfigurationType","KeyCredentialConfigurationType","KeyCredentialAuditEventType","KeyCredentialUpdatedAuditEventType","KeyCredentialDeletedAuditEventType","InstrumentDiagnosticAlarmType","SystemDiagnosticAlarmType","StatisticalConditionClassType","BaseVariableType","BaseDataVariableType","PropertyType","DataTypeDescriptionType","DataTypeDictionaryType","ServerVendorCapabilityType","ServerStatusType","ServerDiagnosticsSummaryType","SamplingIntervalDiagnosticsArrayType","SamplingIntervalDiagnosticsType","SubscriptionDiagnosticsArrayType","SubscriptionDiagnosticsType","SessionDiagnosticsArrayType","SessionDiagnosticsVariableType","SessionSecurityDiagnosticsArrayType","SessionSecurityDiagnosticsType","DataItemType","AnalogItemType","DiscreteItemType","TwoStateDiscreteType","MultiStateDiscreteType","ProgramDiagnosticType","StateVariableType","FiniteStateVariableType","TransitionVariableType","FiniteTransitionVariableType","BuildInfoType","TwoStateVariableType","ConditionVariableType","MultiStateValueDiscreteType","OptionSetType","ArrayItemType","YArrayItemType","XYArrayItemType","ImageItemType","CubeItemType","NDimensionArrayItemType","ProgramDiagnostic2Type","SelectionListType","AlarmRateVariableType","AudioVariableType","ModellingRule_Mandatory","ModellingRule_MandatoryShared","ModellingRule_Optional","ModellingRule_ExposesItsArray","RootFolder","ObjectsFolder","TypesFolder","ViewsFolder","ObjectTypesFolder","VariableTypesFolder","DataTypesFolder","ReferenceTypesFolder","XmlSchema_TypeSystem","OPCBinarySchema_TypeSystem","DataTypeDefinition_Encoding_DefaultBinary","StructureDefinition_Encoding_DefaultBinary","EnumDefinition_Encoding_DefaultBinary","RolePermissionType_Encoding_DefaultBinary","Node_Encoding_DefaultXml","Node_Encoding_DefaultBinary","ObjectNode_Encoding_DefaultXml","ObjectNode_Encoding_DefaultBinary","ObjectTypeNode_Encoding_DefaultXml","ObjectTypeNode_Encoding_DefaultBinary","VariableNode_Encoding_DefaultXml","VariableNode_Encoding_DefaultBinary","VariableTypeNode_Encoding_DefaultXml","VariableTypeNode_Encoding_DefaultBinary","ReferenceTypeNode_Encoding_DefaultXml","ReferenceTypeNode_Encoding_DefaultBinary","MethodNode_Encoding_DefaultXml","MethodNode_Encoding_DefaultBinary","ViewNode_Encoding_DefaultXml","ViewNode_Encoding_DefaultBinary","DataTypeNode_Encoding_DefaultXml","DataTypeNode_Encoding_DefaultBinary","ReferenceNode_Encoding_DefaultXml","ReferenceNode_Encoding_DefaultBinary","Argument_Encoding_DefaultXml","Argument_Encoding_DefaultBinary","StatusResult_Encoding_DefaultXml","StatusResult_Encoding_DefaultBinary","UserTokenPolicy_Encoding_DefaultXml","UserTokenPolicy_Encoding_DefaultBinary","ApplicationDescription_Encoding_DefaultXml","ApplicationDescription_Encoding_DefaultBinary","EndpointDescription_Encoding_DefaultXml","EndpointDescription_Encoding_DefaultBinary","UserIdentityToken_Encoding_DefaultXml","UserIdentityToken_Encoding_DefaultBinary","AnonymousIdentityToken_Encoding_DefaultXml","AnonymousIdentityToken_Encoding_DefaultBinary","UserNameIdentityToken_Encoding_DefaultXml","UserNameIdentityToken_Encoding_DefaultBinary","X509IdentityToken_Encoding_DefaultXml","X509IdentityToken_Encoding_DefaultBinary","EndpointConfiguration_Encoding_DefaultXml","EndpointConfiguration_Encoding_DefaultBinary","BuildInfo_Encoding_DefaultXml","BuildInfo_Encoding_DefaultBinary","SignedSoftwareCertificate_Encoding_DefaultXml","SignedSoftwareCertificate_Encoding_DefaultBinary","NodeAttributes_Encoding_DefaultXml","NodeAttributes_Encoding_DefaultBinary","ObjectAttributes_Encoding_DefaultXml","ObjectAttributes_Encoding_DefaultBinary","VariableAttributes_Encoding_DefaultXml","VariableAttributes_Encoding_DefaultBinary","MethodAttributes_Encoding_DefaultXml","MethodAttributes_Encoding_DefaultBinary","ObjectTypeAttributes_Encoding_DefaultXml","ObjectTypeAttributes_Encoding_DefaultBinary","VariableTypeAttributes_Encoding_DefaultXml","VariableTypeAttributes_Encoding_DefaultBinary","ReferenceTypeAttributes_Encoding_DefaultXml","ReferenceTypeAttributes_Encoding_DefaultBinary","DataTypeAttributes_Encoding_DefaultXml","DataTypeAttributes_Encoding_DefaultBinary","ViewAttributes_Encoding_DefaultXml","ViewAttributes_Encoding_DefaultBinary","AddNodesItem_Encoding_DefaultXml","AddNodesItem_Encoding_DefaultBinary","AddReferencesItem_Encoding_DefaultXml","AddReferencesItem_Encoding_DefaultBinary","DeleteNodesItem_Encoding_DefaultXml","DeleteNodesItem_Encoding_DefaultBinary","DeleteReferencesItem_Encoding_DefaultXml","DeleteReferencesItem_Encoding_DefaultBinary","RequestHeader_Encoding_DefaultXml","RequestHeader_Encoding_DefaultBinary","ResponseHeader_Encoding_DefaultXml","ResponseHeader_Encoding_DefaultBinary","ServiceFault_Encoding_DefaultXml","ServiceFault_Encoding_DefaultBinary","FindServersRequest_Encoding_DefaultXml","FindServersRequest_Encoding_DefaultBinary","FindServersResponse_Encoding_DefaultXml","FindServersResponse_Encoding_DefaultBinary","GetEndpointsRequest_Encoding_DefaultXml","GetEndpointsRequest_Encoding_DefaultBinary","GetEndpointsResponse_Encoding_DefaultXml","GetEndpointsResponse_Encoding_DefaultBinary","RegisteredServer_Encoding_DefaultXml","RegisteredServer_Encoding_DefaultBinary","RegisterServerRequest_Encoding_DefaultXml","RegisterServerRequest_Encoding_DefaultBinary","RegisterServerResponse_Encoding_DefaultXml","RegisterServerResponse_Encoding_DefaultBinary","ChannelSecurityToken_Encoding_DefaultXml","ChannelSecurityToken_Encoding_DefaultBinary","OpenSecureChannelRequest_Encoding_DefaultXml","OpenSecureChannelRequest_Encoding_DefaultBinary","OpenSecureChannelResponse_Encoding_DefaultXml","OpenSecureChannelResponse_Encoding_DefaultBinary","CloseSecureChannelRequest_Encoding_DefaultXml","CloseSecureChannelRequest_Encoding_DefaultBinary","CloseSecureChannelResponse_Encoding_DefaultXml","CloseSecureChannelResponse_Encoding_DefaultBinary","SignatureData_Encoding_DefaultXml","SignatureData_Encoding_DefaultBinary","CreateSessionRequest_Encoding_DefaultXml","CreateSessionRequest_Encoding_DefaultBinary","CreateSessionResponse_Encoding_DefaultXml","CreateSessionResponse_Encoding_DefaultBinary","ActivateSessionRequest_Encoding_DefaultXml","ActivateSessionRequest_Encoding_DefaultBinary","ActivateSessionResponse_Encoding_DefaultXml","ActivateSessionResponse_Encoding_DefaultBinary","CloseSessionRequest_Encoding_DefaultXml","CloseSessionRequest_Encoding_DefaultBinary","CloseSessionResponse_Encoding_DefaultXml","CloseSessionResponse_Encoding_DefaultBinary","CancelRequest_Encoding_DefaultXml","CancelRequest_Encoding_DefaultBinary","CancelResponse_Encoding_DefaultXml","CancelResponse_Encoding_DefaultBinary","AddNodesResult_Encoding_DefaultXml","AddNodesResult_Encoding_DefaultBinary","AddNodesRequest_Encoding_DefaultXml","AddNodesRequest_Encoding_DefaultBinary","AddNodesResponse_Encoding_DefaultXml","AddNodesResponse_Encoding_DefaultBinary","AddReferencesRequest_Encoding_DefaultXml","AddReferencesRequest_Encoding_DefaultBinary","AddReferencesResponse_Encoding_DefaultXml","AddReferencesResponse_Encoding_DefaultBinary","DeleteNodesRequest_Encoding_DefaultXml","DeleteNodesRequest_Encoding_DefaultBinary","DeleteNodesResponse_Encoding_DefaultXml","DeleteNodesResponse_Encoding_DefaultBinary","DeleteReferencesRequest_Encoding_DefaultXml","DeleteReferencesRequest_Encoding_DefaultBinary","DeleteReferencesResponse_Encoding_DefaultXml","DeleteReferencesResponse_Encoding_DefaultBinary","ViewDescription_Encoding_DefaultXml","ViewDescription_Encoding_DefaultBinary","BrowseDescription_Encoding_DefaultXml","BrowseDescription_Encoding_DefaultBinary","ReferenceDescription_Encoding_DefaultXml","ReferenceDescription_Encoding_DefaultBinary","BrowseResult_Encoding_DefaultXml","BrowseResult_Encoding_DefaultBinary","BrowseRequest_Encoding_DefaultXml","BrowseRequest_Encoding_DefaultBinary","BrowseResponse_Encoding_DefaultXml","BrowseResponse_Encoding_DefaultBinary","BrowseNextRequest_Encoding_DefaultXml","BrowseNextRequest_Encoding_DefaultBinary","BrowseNextResponse_Encoding_DefaultXml","BrowseNextResponse_Encoding_DefaultBinary","RelativePathElement_Encoding_DefaultXml","RelativePathElement_Encoding_DefaultBinary","RelativePath_Encoding_DefaultXml","RelativePath_Encoding_DefaultBinary","BrowsePath_Encoding_DefaultXml","BrowsePath_Encoding_DefaultBinary","BrowsePathTarget_Encoding_DefaultXml","BrowsePathTarget_Encoding_DefaultBinary","BrowsePathResult_Encoding_DefaultXml","BrowsePathResult_Encoding_DefaultBinary","TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml","TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary","TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml","TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary","RegisterNodesRequest_Encoding_DefaultXml","RegisterNodesRequest_Encoding_DefaultBinary","RegisterNodesResponse_Encoding_DefaultXml","RegisterNodesResponse_Encoding_DefaultBinary","UnregisterNodesRequest_Encoding_DefaultXml","UnregisterNodesRequest_Encoding_DefaultBinary","UnregisterNodesResponse_Encoding_DefaultXml","UnregisterNodesResponse_Encoding_DefaultBinary","QueryDataDescription_Encoding_DefaultXml","QueryDataDescription_Encoding_DefaultBinary","NodeTypeDescription_Encoding_DefaultXml","NodeTypeDescription_Encoding_DefaultBinary","QueryDataSet_Encoding_DefaultXml","QueryDataSet_Encoding_DefaultBinary","NodeReference_Encoding_DefaultXml","NodeReference_Encoding_DefaultBinary","ContentFilterElement_Encoding_DefaultXml","ContentFilterElement_Encoding_DefaultBinary","ContentFilter_Encoding_DefaultXml","ContentFilter_Encoding_DefaultBinary","FilterOperand_Encoding_DefaultXml","FilterOperand_Encoding_DefaultBinary","ElementOperand_Encoding_DefaultXml","ElementOperand_Encoding_DefaultBinary","LiteralOperand_Encoding_DefaultXml","LiteralOperand_Encoding_DefaultBinary","AttributeOperand_Encoding_DefaultXml","AttributeOperand_Encoding_DefaultBinary","SimpleAttributeOperand_Encoding_DefaultXml","SimpleAttributeOperand_Encoding_DefaultBinary","ContentFilterElementResult_Encoding_DefaultXml","ContentFilterElementResult_Encoding_DefaultBinary","ContentFilterResult_Encoding_DefaultXml","ContentFilterResult_Encoding_DefaultBinary","ParsingResult_Encoding_DefaultXml","ParsingResult_Encoding_DefaultBinary","QueryFirstRequest_Encoding_DefaultXml","QueryFirstRequest_Encoding_DefaultBinary","QueryFirstResponse_Encoding_DefaultXml","QueryFirstResponse_Encoding_DefaultBinary","QueryNextRequest_Encoding_DefaultXml","QueryNextRequest_Encoding_DefaultBinary","QueryNextResponse_Encoding_DefaultXml","QueryNextResponse_Encoding_DefaultBinary","ReadValueId_Encoding_DefaultXml","ReadValueId_Encoding_DefaultBinary","ReadRequest_Encoding_DefaultXml","ReadRequest_Encoding_DefaultBinary","ReadResponse_Encoding_DefaultXml","ReadResponse_Encoding_DefaultBinary","HistoryReadValueId_Encoding_DefaultXml","HistoryReadValueId_Encoding_DefaultBinary","HistoryReadResult_Encoding_DefaultXml","HistoryReadResult_Encoding_DefaultBinary","HistoryReadDetails_Encoding_DefaultXml","HistoryReadDetails_Encoding_DefaultBinary","ReadEventDetails_Encoding_DefaultXml","ReadEventDetails_Encoding_DefaultBinary","ReadRawModifiedDetails_Encoding_DefaultXml","ReadRawModifiedDetails_Encoding_DefaultBinary","ReadProcessedDetails_Encoding_DefaultXml","ReadProcessedDetails_Encoding_DefaultBinary","ReadAtTimeDetails_Encoding_DefaultXml","ReadAtTimeDetails_Encoding_DefaultBinary","HistoryData_Encoding_DefaultXml","HistoryData_Encoding_DefaultBinary","HistoryEvent_Encoding_DefaultXml","HistoryEvent_Encoding_DefaultBinary","HistoryReadRequest_Encoding_DefaultXml","HistoryReadRequest_Encoding_DefaultBinary","HistoryReadResponse_Encoding_DefaultXml","HistoryReadResponse_Encoding_DefaultBinary","WriteValue_Encoding_DefaultXml","WriteValue_Encoding_DefaultBinary","WriteRequest_Encoding_DefaultXml","WriteRequest_Encoding_DefaultBinary","WriteResponse_Encoding_DefaultXml","WriteResponse_Encoding_DefaultBinary","HistoryUpdateDetails_Encoding_DefaultXml","HistoryUpdateDetails_Encoding_DefaultBinary","UpdateDataDetails_Encoding_DefaultXml","UpdateDataDetails_Encoding_DefaultBinary","UpdateEventDetails_Encoding_DefaultXml","UpdateEventDetails_Encoding_DefaultBinary","DeleteRawModifiedDetails_Encoding_DefaultXml","DeleteRawModifiedDetails_Encoding_DefaultBinary","DeleteAtTimeDetails_Encoding_DefaultXml","DeleteAtTimeDetails_Encoding_DefaultBinary","DeleteEventDetails_Encoding_DefaultXml","DeleteEventDetails_Encoding_DefaultBinary","HistoryUpdateResult_Encoding_DefaultXml","HistoryUpdateResult_Encoding_DefaultBinary","HistoryUpdateRequest_Encoding_DefaultXml","HistoryUpdateRequest_Encoding_DefaultBinary","HistoryUpdateResponse_Encoding_DefaultXml","HistoryUpdateResponse_Encoding_DefaultBinary","CallMethodRequest_Encoding_DefaultXml","CallMethodRequest_Encoding_DefaultBinary","CallMethodResult_Encoding_DefaultXml","CallMethodResult_Encoding_DefaultBinary","CallRequest_Encoding_DefaultXml","CallRequest_Encoding_DefaultBinary","CallResponse_Encoding_DefaultXml","CallResponse_Encoding_DefaultBinary","MonitoringFilter_Encoding_DefaultXml","MonitoringFilter_Encoding_DefaultBinary","DataChangeFilter_Encoding_DefaultXml","DataChangeFilter_Encoding_DefaultBinary","EventFilter_Encoding_DefaultXml","EventFilter_Encoding_DefaultBinary","AggregateFilter_Encoding_DefaultXml","AggregateFilter_Encoding_DefaultBinary","MonitoringFilterResult_Encoding_DefaultXml","MonitoringFilterResult_Encoding_DefaultBinary","EventFilterResult_Encoding_DefaultXml","EventFilterResult_Encoding_DefaultBinary","AggregateFilterResult_Encoding_DefaultXml","AggregateFilterResult_Encoding_DefaultBinary","MonitoringParameters_Encoding_DefaultXml","MonitoringParameters_Encoding_DefaultBinary","MonitoredItemCreateRequest_Encoding_DefaultXml","MonitoredItemCreateRequest_Encoding_DefaultBinary","MonitoredItemCreateResult_Encoding_DefaultXml","MonitoredItemCreateResult_Encoding_DefaultBinary","CreateMonitoredItemsRequest_Encoding_DefaultXml","CreateMonitoredItemsRequest_Encoding_DefaultBinary","CreateMonitoredItemsResponse_Encoding_DefaultXml","CreateMonitoredItemsResponse_Encoding_DefaultBinary","MonitoredItemModifyRequest_Encoding_DefaultXml","MonitoredItemModifyRequest_Encoding_DefaultBinary","MonitoredItemModifyResult_Encoding_DefaultXml","MonitoredItemModifyResult_Encoding_DefaultBinary","ModifyMonitoredItemsRequest_Encoding_DefaultXml","ModifyMonitoredItemsRequest_Encoding_DefaultBinary","ModifyMonitoredItemsResponse_Encoding_DefaultXml","ModifyMonitoredItemsResponse_Encoding_DefaultBinary","SetMonitoringModeRequest_Encoding_DefaultXml","SetMonitoringModeRequest_Encoding_DefaultBinary","SetMonitoringModeResponse_Encoding_DefaultXml","SetMonitoringModeResponse_Encoding_DefaultBinary","SetTriggeringRequest_Encoding_DefaultXml","SetTriggeringRequest_Encoding_DefaultBinary","SetTriggeringResponse_Encoding_DefaultXml","SetTriggeringResponse_Encoding_DefaultBinary","DeleteMonitoredItemsRequest_Encoding_DefaultXml","DeleteMonitoredItemsRequest_Encoding_DefaultBinary","DeleteMonitoredItemsResponse_Encoding_DefaultXml","DeleteMonitoredItemsResponse_Encoding_DefaultBinary","CreateSubscriptionRequest_Encoding_DefaultXml","CreateSubscriptionRequest_Encoding_DefaultBinary","CreateSubscriptionResponse_Encoding_DefaultXml","CreateSubscriptionResponse_Encoding_DefaultBinary","ModifySubscriptionRequest_Encoding_DefaultXml","ModifySubscriptionRequest_Encoding_DefaultBinary","ModifySubscriptionResponse_Encoding_DefaultXml","ModifySubscriptionResponse_Encoding_DefaultBinary","SetPublishingModeRequest_Encoding_DefaultXml","SetPublishingModeRequest_Encoding_DefaultBinary","SetPublishingModeResponse_Encoding_DefaultXml","SetPublishingModeResponse_Encoding_DefaultBinary","NotificationMessage_Encoding_DefaultXml","NotificationMessage_Encoding_DefaultBinary","MonitoredItemNotification_Encoding_DefaultXml","MonitoredItemNotification_Encoding_DefaultBinary","DataChangeNotification_Encoding_DefaultXml","DataChangeNotification_Encoding_DefaultBinary","StatusChangeNotification_Encoding_DefaultXml","StatusChangeNotification_Encoding_DefaultBinary","SubscriptionAcknowledgement_Encoding_DefaultXml","SubscriptionAcknowledgement_Encoding_DefaultBinary","PublishRequest_Encoding_DefaultXml","PublishRequest_Encoding_DefaultBinary","PublishResponse_Encoding_DefaultXml","PublishResponse_Encoding_DefaultBinary","RepublishRequest_Encoding_DefaultXml","RepublishRequest_Encoding_DefaultBinary","RepublishResponse_Encoding_DefaultXml","RepublishResponse_Encoding_DefaultBinary","TransferResult_Encoding_DefaultXml","TransferResult_Encoding_DefaultBinary","TransferSubscriptionsRequest_Encoding_DefaultXml","TransferSubscriptionsRequest_Encoding_DefaultBinary","TransferSubscriptionsResponse_Encoding_DefaultXml","TransferSubscriptionsResponse_Encoding_DefaultBinary","DeleteSubscriptionsRequest_Encoding_DefaultXml","DeleteSubscriptionsRequest_Encoding_DefaultBinary","DeleteSubscriptionsResponse_Encoding_DefaultXml","DeleteSubscriptionsResponse_Encoding_DefaultBinary","RedundantServerDataType_Encoding_DefaultXml","RedundantServerDataType_Encoding_DefaultBinary","SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml","SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary","ServerDiagnosticsSummaryDataType_Encoding_DefaultXml","ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary","ServerStatusDataType_Encoding_DefaultXml","ServerStatusDataType_Encoding_DefaultBinary","SessionDiagnosticsDataType_Encoding_DefaultXml","SessionDiagnosticsDataType_Encoding_DefaultBinary","SessionSecurityDiagnosticsDataType_Encoding_DefaultXml","SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary","ServiceCounterDataType_Encoding_DefaultXml","ServiceCounterDataType_Encoding_DefaultBinary","SubscriptionDiagnosticsDataType_Encoding_DefaultXml","SubscriptionDiagnosticsDataType_Encoding_DefaultBinary","ModelChangeStructureDataType_Encoding_DefaultXml","ModelChangeStructureDataType_Encoding_DefaultBinary","Range_Encoding_DefaultXml","Range_Encoding_DefaultBinary","EUInformation_Encoding_DefaultXml","EUInformation_Encoding_DefaultBinary","Annotation_Encoding_DefaultXml","Annotation_Encoding_DefaultBinary","ProgramDiagnosticDataType_Encoding_DefaultXml","ProgramDiagnosticDataType_Encoding_DefaultBinary","SemanticChangeStructureDataType_Encoding_DefaultXml","SemanticChangeStructureDataType_Encoding_DefaultBinary","EventNotificationList_Encoding_DefaultXml","EventNotificationList_Encoding_DefaultBinary","EventFieldList_Encoding_DefaultXml","EventFieldList_Encoding_DefaultBinary","HistoryEventFieldList_Encoding_DefaultXml","HistoryEventFieldList_Encoding_DefaultBinary","IssuedIdentityToken_Encoding_DefaultXml","IssuedIdentityToken_Encoding_DefaultBinary","NotificationData_Encoding_DefaultXml","NotificationData_Encoding_DefaultBinary","AggregateConfiguration_Encoding_DefaultXml","AggregateConfiguration_Encoding_DefaultBinary","ServerType_ServerCapabilities","ServerType_ServerDiagnostics","ServerType_VendorServerInfo","ServerType_ServerRedundancy","ServerCapabilitiesType_ModellingRules","Server","Server_ServerCapabilities","Server_ServerDiagnostics","Server_VendorServerInfo","Server_ServerRedundancy","AggregateFunction_Interpolative","AggregateFunction_Average","AggregateFunction_TimeAverage","AggregateFunction_Total","AggregateFunction_Minimum","AggregateFunction_Maximum","AggregateFunction_MinimumActualTime","AggregateFunction_MaximumActualTime","AggregateFunction_Range","AggregateFunction_AnnotationCount","AggregateFunction_Count","AggregateFunction_NumberOfTransitions","AggregateFunction_Start","AggregateFunction_End","AggregateFunction_Delta","AggregateFunction_DurationGood","AggregateFunction_DurationBad","AggregateFunction_PercentGood","AggregateFunction_PercentBad","AggregateFunction_WorstQuality","ProgramStateMachineType_Ready","ProgramStateMachineType_Running","ProgramStateMachineType_Suspended","ProgramStateMachineType_Halted","ProgramStateMachineType_HaltedToReady","ProgramStateMachineType_ReadyToRunning","ProgramStateMachineType_RunningToHalted","ProgramStateMachineType_RunningToReady","ProgramStateMachineType_RunningToSuspended","ProgramStateMachineType_SuspendedToRunning","ProgramStateMachineType_SuspendedToHalted","ProgramStateMachineType_SuspendedToReady","ProgramStateMachineType_ReadyToHalted","ServerDiagnosticsType_SessionsDiagnosticsSummary","ServerCapabilitiesType_AggregateFunctions","ShelvedStateMachineType_Unshelved","ShelvedStateMachineType_TimedShelved","ShelvedStateMachineType_OneShotShelved","ShelvedStateMachineType_UnshelvedToTimedShelved","ShelvedStateMachineType_UnshelvedToOneShotShelved","ShelvedStateMachineType_TimedShelvedToUnshelved","ShelvedStateMachineType_TimedShelvedToOneShotShelved","ShelvedStateMachineType_OneShotShelvedToUnshelved","ShelvedStateMachineType_OneShotShelvedToTimedShelved","Server_ServerCapabilities_ModellingRules","Server_ServerCapabilities_AggregateFunctions","EventTypesFolder","HistoricalDataConfigurationType_AggregateConfiguration","DefaultBinary","DefaultXml","ServerType_ServerCapabilities_ModellingRules","ServerType_ServerCapabilities_AggregateFunctions","ServerType_ServerDiagnostics_SessionsDiagnosticsSummary","Server_ServerDiagnostics_SessionsDiagnosticsSummary","ProgramStateMachineType_FinalResultData","EnumValueType_Encoding_DefaultXml","EnumValueType_Encoding_DefaultBinary","TimeZoneDataType_Encoding_DefaultXml","TimeZoneDataType_Encoding_DefaultBinary","AlarmConditionType_ShelvingState","LimitAlarmType_ShelvingState","ExclusiveLimitStateMachineType_HighHigh","ExclusiveLimitStateMachineType_High","ExclusiveLimitStateMachineType_Low","ExclusiveLimitStateMachineType_LowLow","ExclusiveLimitStateMachineType_LowLowToLow","ExclusiveLimitStateMachineType_LowToLowLow","ExclusiveLimitStateMachineType_HighHighToHigh","ExclusiveLimitStateMachineType_HighToHighHigh","ExclusiveLimitAlarmType_ShelvingState","ExclusiveLimitAlarmType_LimitState","ExclusiveLevelAlarmType_ShelvingState","ExclusiveLevelAlarmType_LimitState","ExclusiveRateOfChangeAlarmType_ShelvingState","ExclusiveRateOfChangeAlarmType_LimitState","ExclusiveDeviationAlarmType_ShelvingState","ExclusiveDeviationAlarmType_LimitState","NonExclusiveLimitAlarmType_ShelvingState","NonExclusiveLevelAlarmType_ShelvingState","NonExclusiveRateOfChangeAlarmType_ShelvingState","NonExclusiveDeviationAlarmType_ShelvingState","DiscreteAlarmType_ShelvingState","OffNormalAlarmType_ShelvingState","TripAlarmType_ShelvingState","HistoryServerCapabilitiesType_AggregateFunctions","HistoryServerCapabilities","HistoryServerCapabilities_AggregateFunctions","HAConfiguration","HAConfiguration_AggregateConfiguration","ModificationInfo_Encoding_DefaultXml","HistoryModifiedData_Encoding_DefaultXml","ModificationInfo_Encoding_DefaultBinary","HistoryModifiedData_Encoding_DefaultBinary","AggregateFunction_TimeAverage2","AggregateFunction_Minimum2","AggregateFunction_Maximum2","AggregateFunction_Range2","AggregateFunction_WorstQuality2","UpdateStructureDataDetails_Encoding_DefaultXml","UpdateStructureDataDetails_Encoding_DefaultBinary","AggregateFunction_Total2","AggregateFunction_MinimumActualTime2","AggregateFunction_MaximumActualTime2","AggregateFunction_DurationInStateZero","AggregateFunction_DurationInStateNonZero","AggregateFunction_StandardDeviationSample","AggregateFunction_StandardDeviationPopulation","AggregateFunction_VarianceSample","AggregateFunction_VariancePopulation","AggregateFunction_StartBound","AggregateFunction_EndBound","AggregateFunction_DeltaBounds","ModellingRule_OptionalPlaceholder","ModellingRule_MandatoryPlaceholder","ServerType_ServerCapabilities_OperationLimits","ServerType_Namespaces","ServerCapabilitiesType_OperationLimits","NamespaceMetadataType_NamespaceFile","NamespacesType_NamespaceIdentifier_Placeholder","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile","Server_ServerCapabilities_OperationLimits","Server_Namespaces","SystemOffNormalAlarmType_ShelvingState","HistoricalDataConfigurationType_AggregateFunctions","HAConfiguration_AggregateFunctions","InstanceNode_Encoding_DefaultXml","TypeNode_Encoding_DefaultXml","InstanceNode_Encoding_DefaultBinary","TypeNode_Encoding_DefaultBinary","EndpointUrlListDataType_Encoding_DefaultXml","NetworkGroupDataType_Encoding_DefaultXml","EndpointUrlListDataType_Encoding_DefaultBinary","NetworkGroupDataType_Encoding_DefaultBinary","AxisInformation_Encoding_DefaultXml","XVType_Encoding_DefaultXml","AxisInformation_Encoding_DefaultBinary","XVType_Encoding_DefaultBinary","SessionsDiagnosticsSummaryType_ClientName_Placeholder","ComplexNumberType_Encoding_DefaultXml","DoubleComplexNumberType_Encoding_DefaultXml","ComplexNumberType_Encoding_DefaultBinary","DoubleComplexNumberType_Encoding_DefaultBinary","ServerOnNetwork_Encoding_DefaultXml","FindServersOnNetworkRequest_Encoding_DefaultXml","FindServersOnNetworkResponse_Encoding_DefaultXml","RegisterServer2Request_Encoding_DefaultXml","RegisterServer2Response_Encoding_DefaultXml","ServerOnNetwork_Encoding_DefaultBinary","FindServersOnNetworkRequest_Encoding_DefaultBinary","FindServersOnNetworkResponse_Encoding_DefaultBinary","RegisterServer2Request_Encoding_DefaultBinary","RegisterServer2Response_Encoding_DefaultBinary","ServerConfiguration","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList","TrustListDataType_Encoding_DefaultXml","TrustListDataType_Encoding_DefaultBinary","OptionSet_Encoding_DefaultXml","Union_Encoding_DefaultXml","OptionSet_Encoding_DefaultBinary","Union_Encoding_DefaultBinary","DiscoveryConfiguration_Encoding_DefaultXml","MdnsDiscoveryConfiguration_Encoding_DefaultXml","DiscoveryConfiguration_Encoding_DefaultBinary","MdnsDiscoveryConfiguration_Encoding_DefaultBinary","CertificateExpirationAlarmType_ShelvingState","FileDirectoryType_FileDirectoryName_Placeholder","FileDirectoryType_FileName_Placeholder","CertificateGroupType_TrustList","CertificateGroupFolderType_DefaultApplicationGroup","CertificateGroupFolderType_DefaultApplicationGroup_TrustList","CertificateGroupFolderType_DefaultHttpsGroup","CertificateGroupFolderType_DefaultHttpsGroup_TrustList","CertificateGroupFolderType_DefaultUserTokenGroup","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList","CertificateGroupFolderType_AdditionalGroup_Placeholder","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList","ServerConfigurationType_CertificateGroups","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList","ServerConfiguration_CertificateGroups","ServerConfiguration_CertificateGroups_DefaultHttpsGroup","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList","ServerConfiguration_CertificateGroups_DefaultApplicationGroup","DataTypeDefinition_Encoding_DefaultXml","StructureDefinition_Encoding_DefaultXml","EnumDefinition_Encoding_DefaultXml","StructureField_Encoding_DefaultXml","EnumField_Encoding_DefaultXml","KeyValuePair_Encoding_DefaultXml","StructureField_Encoding_DefaultBinary","EnumField_Encoding_DefaultBinary","KeyValuePair_Encoding_DefaultBinary","KeyValuePair_Encoding_DefaultJson","IdentityMappingRuleType_Encoding_DefaultJson","TrustListDataType_Encoding_DefaultJson","DecimalDataType_Encoding_DefaultJson","RolePermissionType_Encoding_DefaultJson","DataTypeDefinition_Encoding_DefaultJson","StructureField_Encoding_DefaultJson","StructureDefinition_Encoding_DefaultJson","EnumDefinition_Encoding_DefaultJson","Node_Encoding_DefaultJson","InstanceNode_Encoding_DefaultJson","TypeNode_Encoding_DefaultJson","ObjectNode_Encoding_DefaultJson","ObjectTypeNode_Encoding_DefaultJson","VariableNode_Encoding_DefaultJson","VariableTypeNode_Encoding_DefaultJson","ReferenceTypeNode_Encoding_DefaultJson","MethodNode_Encoding_DefaultJson","ViewNode_Encoding_DefaultJson","DataTypeNode_Encoding_DefaultJson","ReferenceNode_Encoding_DefaultJson","Argument_Encoding_DefaultJson","EnumValueType_Encoding_DefaultJson","EnumField_Encoding_DefaultJson","OptionSet_Encoding_DefaultJson","Union_Encoding_DefaultJson","TimeZoneDataType_Encoding_DefaultJson","ApplicationDescription_Encoding_DefaultJson","RequestHeader_Encoding_DefaultJson","ResponseHeader_Encoding_DefaultJson","ServiceFault_Encoding_DefaultJson","SessionlessInvokeRequestType_Encoding_DefaultJson","SessionlessInvokeResponseType_Encoding_DefaultJson","FindServersRequest_Encoding_DefaultJson","FindServersResponse_Encoding_DefaultJson","ServerOnNetwork_Encoding_DefaultJson","FindServersOnNetworkRequest_Encoding_DefaultJson","FindServersOnNetworkResponse_Encoding_DefaultJson","UserTokenPolicy_Encoding_DefaultJson","EndpointDescription_Encoding_DefaultJson","GetEndpointsRequest_Encoding_DefaultJson","GetEndpointsResponse_Encoding_DefaultJson","RegisteredServer_Encoding_DefaultJson","RegisterServerRequest_Encoding_DefaultJson","RegisterServerResponse_Encoding_DefaultJson","DiscoveryConfiguration_Encoding_DefaultJson","MdnsDiscoveryConfiguration_Encoding_DefaultJson","RegisterServer2Request_Encoding_DefaultJson","RegisterServer2Response_Encoding_DefaultJson","ChannelSecurityToken_Encoding_DefaultJson","OpenSecureChannelRequest_Encoding_DefaultJson","OpenSecureChannelResponse_Encoding_DefaultJson","CloseSecureChannelRequest_Encoding_DefaultJson","CloseSecureChannelResponse_Encoding_DefaultJson","SignedSoftwareCertificate_Encoding_DefaultJson","SignatureData_Encoding_DefaultJson","CreateSessionRequest_Encoding_DefaultJson","CreateSessionResponse_Encoding_DefaultJson","UserIdentityToken_Encoding_DefaultJson","AnonymousIdentityToken_Encoding_DefaultJson","UserNameIdentityToken_Encoding_DefaultJson","X509IdentityToken_Encoding_DefaultJson","IssuedIdentityToken_Encoding_DefaultJson","ActivateSessionRequest_Encoding_DefaultJson","ActivateSessionResponse_Encoding_DefaultJson","CloseSessionRequest_Encoding_DefaultJson","CloseSessionResponse_Encoding_DefaultJson","CancelRequest_Encoding_DefaultJson","CancelResponse_Encoding_DefaultJson","NodeAttributes_Encoding_DefaultJson","ObjectAttributes_Encoding_DefaultJson","VariableAttributes_Encoding_DefaultJson","MethodAttributes_Encoding_DefaultJson","ObjectTypeAttributes_Encoding_DefaultJson","VariableTypeAttributes_Encoding_DefaultJson","ReferenceTypeAttributes_Encoding_DefaultJson","DataTypeAttributes_Encoding_DefaultJson","ViewAttributes_Encoding_DefaultJson","GenericAttributeValue_Encoding_DefaultJson","GenericAttributes_Encoding_DefaultJson","AddNodesItem_Encoding_DefaultJson","AddNodesResult_Encoding_DefaultJson","AddNodesRequest_Encoding_DefaultJson","AddNodesResponse_Encoding_DefaultJson","AddReferencesItem_Encoding_DefaultJson","AddReferencesRequest_Encoding_DefaultJson","AddReferencesResponse_Encoding_DefaultJson","DeleteNodesItem_Encoding_DefaultJson","DeleteNodesRequest_Encoding_DefaultJson","DeleteNodesResponse_Encoding_DefaultJson","DeleteReferencesItem_Encoding_DefaultJson","DeleteReferencesRequest_Encoding_DefaultJson","DeleteReferencesResponse_Encoding_DefaultJson","ViewDescription_Encoding_DefaultJson","BrowseDescription_Encoding_DefaultJson","ReferenceDescription_Encoding_DefaultJson","BrowseResult_Encoding_DefaultJson","BrowseRequest_Encoding_DefaultJson","BrowseResponse_Encoding_DefaultJson","BrowseNextRequest_Encoding_DefaultJson","BrowseNextResponse_Encoding_DefaultJson","RelativePathElement_Encoding_DefaultJson","RelativePath_Encoding_DefaultJson","BrowsePath_Encoding_DefaultJson","BrowsePathTarget_Encoding_DefaultJson","BrowsePathResult_Encoding_DefaultJson","TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultJson","TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultJson","RegisterNodesRequest_Encoding_DefaultJson","RegisterNodesResponse_Encoding_DefaultJson","UnregisterNodesRequest_Encoding_DefaultJson","UnregisterNodesResponse_Encoding_DefaultJson","EndpointConfiguration_Encoding_DefaultJson","QueryDataDescription_Encoding_DefaultJson","NodeTypeDescription_Encoding_DefaultJson","QueryDataSet_Encoding_DefaultJson","NodeReference_Encoding_DefaultJson","ContentFilterElement_Encoding_DefaultJson","ContentFilter_Encoding_DefaultJson","FilterOperand_Encoding_DefaultJson","ElementOperand_Encoding_DefaultJson","LiteralOperand_Encoding_DefaultJson","AttributeOperand_Encoding_DefaultJson","SimpleAttributeOperand_Encoding_DefaultJson","ContentFilterElementResult_Encoding_DefaultJson","ContentFilterResult_Encoding_DefaultJson","ParsingResult_Encoding_DefaultJson","QueryFirstRequest_Encoding_DefaultJson","QueryFirstResponse_Encoding_DefaultJson","QueryNextRequest_Encoding_DefaultJson","QueryNextResponse_Encoding_DefaultJson","ReadValueId_Encoding_DefaultJson","ReadRequest_Encoding_DefaultJson","ReadResponse_Encoding_DefaultJson","HistoryReadValueId_Encoding_DefaultJson","HistoryReadResult_Encoding_DefaultJson","HistoryReadDetails_Encoding_DefaultJson","ReadEventDetails_Encoding_DefaultJson","ReadRawModifiedDetails_Encoding_DefaultJson","ReadProcessedDetails_Encoding_DefaultJson","ReadAtTimeDetails_Encoding_DefaultJson","HistoryData_Encoding_DefaultJson","ModificationInfo_Encoding_DefaultJson","HistoryModifiedData_Encoding_DefaultJson","HistoryEvent_Encoding_DefaultJson","HistoryReadRequest_Encoding_DefaultJson","HistoryReadResponse_Encoding_DefaultJson","WriteValue_Encoding_DefaultJson","WriteRequest_Encoding_DefaultJson","WriteResponse_Encoding_DefaultJson","HistoryUpdateDetails_Encoding_DefaultJson","UpdateDataDetails_Encoding_DefaultJson","UpdateStructureDataDetails_Encoding_DefaultJson","UpdateEventDetails_Encoding_DefaultJson","DeleteRawModifiedDetails_Encoding_DefaultJson","DeleteAtTimeDetails_Encoding_DefaultJson","DeleteEventDetails_Encoding_DefaultJson","HistoryUpdateResult_Encoding_DefaultJson","HistoryUpdateRequest_Encoding_DefaultJson","HistoryUpdateResponse_Encoding_DefaultJson","CallMethodRequest_Encoding_DefaultJson","CallMethodResult_Encoding_DefaultJson","CallRequest_Encoding_DefaultJson","CallResponse_Encoding_DefaultJson","MonitoringFilter_Encoding_DefaultJson","DataChangeFilter_Encoding_DefaultJson","EventFilter_Encoding_DefaultJson","AggregateConfiguration_Encoding_DefaultJson","AggregateFilter_Encoding_DefaultJson","MonitoringFilterResult_Encoding_DefaultJson","EventFilterResult_Encoding_DefaultJson","AggregateFilterResult_Encoding_DefaultJson","MonitoringParameters_Encoding_DefaultJson","MonitoredItemCreateRequest_Encoding_DefaultJson","MonitoredItemCreateResult_Encoding_DefaultJson","CreateMonitoredItemsRequest_Encoding_DefaultJson","CreateMonitoredItemsResponse_Encoding_DefaultJson","MonitoredItemModifyRequest_Encoding_DefaultJson","MonitoredItemModifyResult_Encoding_DefaultJson","ModifyMonitoredItemsRequest_Encoding_DefaultJson","ModifyMonitoredItemsResponse_Encoding_DefaultJson","SetMonitoringModeRequest_Encoding_DefaultJson","SetMonitoringModeResponse_Encoding_DefaultJson","SetTriggeringRequest_Encoding_DefaultJson","SetTriggeringResponse_Encoding_DefaultJson","DeleteMonitoredItemsRequest_Encoding_DefaultJson","DeleteMonitoredItemsResponse_Encoding_DefaultJson","CreateSubscriptionRequest_Encoding_DefaultJson","CreateSubscriptionResponse_Encoding_DefaultJson","ModifySubscriptionRequest_Encoding_DefaultJson","ModifySubscriptionResponse_Encoding_DefaultJson","SetPublishingModeRequest_Encoding_DefaultJson","SetPublishingModeResponse_Encoding_DefaultJson","NotificationMessage_Encoding_DefaultJson","NotificationData_Encoding_DefaultJson","DataChangeNotification_Encoding_DefaultJson","MonitoredItemNotification_Encoding_DefaultJson","EventNotificationList_Encoding_DefaultJson","EventFieldList_Encoding_DefaultJson","HistoryEventFieldList_Encoding_DefaultJson","StatusChangeNotification_Encoding_DefaultJson","SubscriptionAcknowledgement_Encoding_DefaultJson","PublishRequest_Encoding_DefaultJson","PublishResponse_Encoding_DefaultJson","RepublishRequest_Encoding_DefaultJson","RepublishResponse_Encoding_DefaultJson","TransferResult_Encoding_DefaultJson","TransferSubscriptionsRequest_Encoding_DefaultJson","TransferSubscriptionsResponse_Encoding_DefaultJson","DeleteSubscriptionsRequest_Encoding_DefaultJson","DeleteSubscriptionsResponse_Encoding_DefaultJson","BuildInfo_Encoding_DefaultJson","RedundantServerDataType_Encoding_DefaultJson","EndpointUrlListDataType_Encoding_DefaultJson","NetworkGroupDataType_Encoding_DefaultJson","SamplingIntervalDiagnosticsDataType_Encoding_DefaultJson","ServerDiagnosticsSummaryDataType_Encoding_DefaultJson","ServerStatusDataType_Encoding_DefaultJson","SessionDiagnosticsDataType_Encoding_DefaultJson","SessionSecurityDiagnosticsDataType_Encoding_DefaultJson","ServiceCounterDataType_Encoding_DefaultJson","StatusResult_Encoding_DefaultJson","SubscriptionDiagnosticsDataType_Encoding_DefaultJson","ModelChangeStructureDataType_Encoding_DefaultJson","SemanticChangeStructureDataType_Encoding_DefaultJson","Range_Encoding_DefaultJson","EUInformation_Encoding_DefaultJson","ComplexNumberType_Encoding_DefaultJson","DoubleComplexNumberType_Encoding_DefaultJson","AxisInformation_Encoding_DefaultJson","XVType_Encoding_DefaultJson","ProgramDiagnosticDataType_Encoding_DefaultJson","Annotation_Encoding_DefaultJson","ProgramDiagnostic2DataType_Encoding_DefaultBinary","ProgramDiagnostic2DataType_Encoding_DefaultXml","ProgramDiagnostic2DataType_Encoding_DefaultJson","Server_ServerCapabilities_Roles","RoleSetType_RoleName_Placeholder","WellKnownRole_Anonymous","WellKnownRole_AuthenticatedUser","WellKnownRole_Observer","EndpointType_Encoding_DefaultBinary","WellKnownRole_Operator","WellKnownRole_Supervisor","WellKnownRole_SecurityAdmin","WellKnownRole_ConfigureAdmin","IdentityMappingRuleType_Encoding_DefaultXml","IdentityMappingRuleType_Encoding_DefaultBinary","TemporaryFileTransferType_TransferState_Placeholder","FileTransferStateMachineType_Idle","FileTransferStateMachineType_ReadPrepare","FileTransferStateMachineType_ReadTransfer","FileTransferStateMachineType_ApplyWrite","FileTransferStateMachineType_Error","FileTransferStateMachineType_IdleToReadPrepare","FileTransferStateMachineType_ReadPrepareToReadTransfer","FileTransferStateMachineType_ReadTransferToIdle","FileTransferStateMachineType_IdleToApplyWrite","FileTransferStateMachineType_ApplyWriteToIdle","FileTransferStateMachineType_ReadPrepareToError","FileTransferStateMachineType_ReadTransferToError","FileTransferStateMachineType_ApplyWriteToError","FileTransferStateMachineType_ErrorToIdle","SessionlessInvokeRequestType_Encoding_DefaultXml","SessionlessInvokeRequestType_Encoding_DefaultBinary","EndpointType_Encoding_DefaultXml","OPCUANamespaceMetadata","OPCUANamespaceMetadata_NamespaceFile","WellKnownRole_Engineer","RolePermissionType_Encoding_DefaultXml","EndpointType_Encoding_DefaultJson","ServerType_ServerCapabilities_Roles","ServerCapabilitiesType_Roles","FileSystem","FileSystem_FileDirectoryName_Placeholder","FileSystem_FileName_Placeholder","AlarmConditionType_FirstInGroup","AlarmConditionType_AlarmGroup_Placeholder","AlarmGroupType_AlarmConditionInstance_Placeholder","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState","AlarmGroupType_AlarmConditionInstance_Placeholder_FirstInGroup","LimitAlarmType_FirstInGroup","LimitAlarmType_AlarmGroup_Placeholder","ExclusiveLimitAlarmType_FirstInGroup","ExclusiveLimitAlarmType_AlarmGroup_Placeholder","NonExclusiveLimitAlarmType_FirstInGroup","NonExclusiveLimitAlarmType_AlarmGroup_Placeholder","NonExclusiveLevelAlarmType_FirstInGroup","NonExclusiveLevelAlarmType_AlarmGroup_Placeholder","ExclusiveLevelAlarmType_FirstInGroup","ExclusiveLevelAlarmType_AlarmGroup_Placeholder","NonExclusiveDeviationAlarmType_FirstInGroup","NonExclusiveDeviationAlarmType_AlarmGroup_Placeholder","ExclusiveDeviationAlarmType_FirstInGroup","ExclusiveDeviationAlarmType_AlarmGroup_Placeholder","NonExclusiveRateOfChangeAlarmType_FirstInGroup","NonExclusiveRateOfChangeAlarmType_AlarmGroup_Placeholder","ExclusiveRateOfChangeAlarmType_FirstInGroup","ExclusiveRateOfChangeAlarmType_AlarmGroup_Placeholder","DiscreteAlarmType_FirstInGroup","DiscreteAlarmType_AlarmGroup_Placeholder","OffNormalAlarmType_FirstInGroup","OffNormalAlarmType_AlarmGroup_Placeholder","SystemOffNormalAlarmType_FirstInGroup","SystemOffNormalAlarmType_AlarmGroup_Placeholder","TripAlarmType_FirstInGroup","TripAlarmType_AlarmGroup_Placeholder","CertificateExpirationAlarmType_FirstInGroup","CertificateExpirationAlarmType_AlarmGroup_Placeholder","DiscrepancyAlarmType_ShelvingState","DiscrepancyAlarmType_FirstInGroup","DiscrepancyAlarmType_AlarmGroup_Placeholder","GenericAttributeValue_Encoding_DefaultXml","GenericAttributes_Encoding_DefaultXml","GenericAttributeValue_Encoding_DefaultBinary","GenericAttributes_Encoding_DefaultBinary","AuthorizationServices","AuthorizationServices_ServiceName_Placeholder","DecimalDataType_Encoding_DefaultXml","DecimalDataType_Encoding_DefaultBinary","KeyCredentialConfiguration","KeyCredentialConfiguration_ServiceName_Placeholder","InstrumentDiagnosticAlarmType_ShelvingState","InstrumentDiagnosticAlarmType_FirstInGroup","InstrumentDiagnosticAlarmType_AlarmGroup_Placeholder","SystemDiagnosticAlarmType_ShelvingState","SystemDiagnosticAlarmType_FirstInGroup","SystemDiagnosticAlarmType_AlarmGroup_Placeholder","SessionlessInvokeResponseType_Encoding_DefaultXml","SessionlessInvokeResponseType_Encoding_DefaultBinary","DataTypeDescriptionType_DataTypeVersion","DataTypeDescriptionType_DictionaryFragment","DataTypeDictionaryType_DataTypeVersion","DataTypeDictionaryType_NamespaceUri","ModellingRuleType_NamingRule","ModellingRule_Mandatory_NamingRule","ModellingRule_Optional_NamingRule","ModellingRule_ExposesItsArray_NamingRule","ModellingRule_MandatoryShared_NamingRule","ServerType_ServerArray","ServerType_NamespaceArray","ServerType_ServerStatus","ServerType_ServiceLevel","ServerCapabilitiesType_ServerProfileArray","ServerCapabilitiesType_LocaleIdArray","ServerCapabilitiesType_MinSupportedSampleRate","ServerDiagnosticsType_ServerDiagnosticsSummary","ServerDiagnosticsType_SamplingIntervalDiagnosticsArray","ServerDiagnosticsType_SubscriptionDiagnosticsArray","ServerDiagnosticsType_EnabledFlag","SessionsDiagnosticsSummaryType_SessionDiagnosticsArray","SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray","SessionDiagnosticsObjectType_SessionDiagnostics","SessionDiagnosticsObjectType_SessionSecurityDiagnostics","SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray","ServerRedundancyType_RedundancySupport","TransparentRedundancyType_CurrentServerId","TransparentRedundancyType_RedundantServerArray","NonTransparentRedundancyType_ServerUriArray","BaseEventType_EventId","BaseEventType_EventType","BaseEventType_SourceNode","BaseEventType_SourceName","BaseEventType_Time","BaseEventType_ReceiveTime","BaseEventType_Message","BaseEventType_Severity","AuditEventType_ActionTimeStamp","AuditEventType_Status","AuditEventType_ServerId","AuditEventType_ClientAuditEntryId","AuditEventType_ClientUserId","AuditOpenSecureChannelEventType_ClientCertificate","AuditOpenSecureChannelEventType_RequestType","AuditOpenSecureChannelEventType_SecurityPolicyUri","AuditOpenSecureChannelEventType_SecurityMode","AuditOpenSecureChannelEventType_RequestedLifetime","AuditSessionEventType_SessionId","AuditCreateSessionEventType_SecureChannelId","AuditCreateSessionEventType_ClientCertificate","AuditCreateSessionEventType_RevisedSessionTimeout","AuditActivateSessionEventType_ClientSoftwareCertificates","AuditActivateSessionEventType_UserIdentityToken","AuditCancelEventType_RequestHandle","AuditCertificateEventType_Certificate","AuditCertificateDataMismatchEventType_InvalidHostname","AuditCertificateDataMismatchEventType_InvalidUri","AuditAddNodesEventType_NodesToAdd","AuditDeleteNodesEventType_NodesToDelete","AuditAddReferencesEventType_ReferencesToAdd","AuditDeleteReferencesEventType_ReferencesToDelete","AuditWriteUpdateEventType_IndexRange","AuditWriteUpdateEventType_OldValue","AuditWriteUpdateEventType_NewValue","AuditUpdateMethodEventType_MethodId","AuditUpdateMethodEventType_InputArguments","GeneralModelChangeEventType_Changes","ServerStatusType_StartTime","ServerStatusType_CurrentTime","ServerStatusType_State","ServerStatusType_BuildInfo","ServerDiagnosticsSummaryType_ServerViewCount","ServerDiagnosticsSummaryType_CurrentSessionCount","ServerDiagnosticsSummaryType_CumulatedSessionCount","ServerDiagnosticsSummaryType_SecurityRejectedSessionCount","ServerDiagnosticsSummaryType_RejectedSessionCount","ServerDiagnosticsSummaryType_SessionTimeoutCount","ServerDiagnosticsSummaryType_SessionAbortCount","ServerDiagnosticsSummaryType_PublishingIntervalCount","ServerDiagnosticsSummaryType_CurrentSubscriptionCount","ServerDiagnosticsSummaryType_CumulatedSubscriptionCount","ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount","ServerDiagnosticsSummaryType_RejectedRequestsCount","SamplingIntervalDiagnosticsType_SamplingInterval","SubscriptionDiagnosticsType_SessionId","SubscriptionDiagnosticsType_SubscriptionId","SubscriptionDiagnosticsType_Priority","SubscriptionDiagnosticsType_PublishingInterval","SubscriptionDiagnosticsType_MaxKeepAliveCount","SubscriptionDiagnosticsType_MaxNotificationsPerPublish","SubscriptionDiagnosticsType_PublishingEnabled","SubscriptionDiagnosticsType_ModifyCount","SubscriptionDiagnosticsType_EnableCount","SubscriptionDiagnosticsType_DisableCount","SubscriptionDiagnosticsType_RepublishRequestCount","SubscriptionDiagnosticsType_RepublishMessageRequestCount","SubscriptionDiagnosticsType_RepublishMessageCount","SubscriptionDiagnosticsType_TransferRequestCount","SubscriptionDiagnosticsType_TransferredToAltClientCount","SubscriptionDiagnosticsType_TransferredToSameClientCount","SubscriptionDiagnosticsType_PublishRequestCount","SubscriptionDiagnosticsType_DataChangeNotificationsCount","SubscriptionDiagnosticsType_NotificationsCount","SessionDiagnosticsVariableType_SessionId","SessionDiagnosticsVariableType_SessionName","SessionDiagnosticsVariableType_ClientDescription","SessionDiagnosticsVariableType_ServerUri","SessionDiagnosticsVariableType_EndpointUrl","SessionDiagnosticsVariableType_LocaleIds","SessionDiagnosticsVariableType_ActualSessionTimeout","SessionDiagnosticsVariableType_ClientConnectionTime","SessionDiagnosticsVariableType_ClientLastContactTime","SessionDiagnosticsVariableType_CurrentSubscriptionsCount","SessionDiagnosticsVariableType_CurrentMonitoredItemsCount","SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue","SessionDiagnosticsVariableType_ReadCount","SessionDiagnosticsVariableType_HistoryReadCount","SessionDiagnosticsVariableType_WriteCount","SessionDiagnosticsVariableType_HistoryUpdateCount","SessionDiagnosticsVariableType_CallCount","SessionDiagnosticsVariableType_CreateMonitoredItemsCount","SessionDiagnosticsVariableType_ModifyMonitoredItemsCount","SessionDiagnosticsVariableType_SetMonitoringModeCount","SessionDiagnosticsVariableType_SetTriggeringCount","SessionDiagnosticsVariableType_DeleteMonitoredItemsCount","SessionDiagnosticsVariableType_CreateSubscriptionCount","SessionDiagnosticsVariableType_ModifySubscriptionCount","SessionDiagnosticsVariableType_SetPublishingModeCount","SessionDiagnosticsVariableType_PublishCount","SessionDiagnosticsVariableType_RepublishCount","SessionDiagnosticsVariableType_TransferSubscriptionsCount","SessionDiagnosticsVariableType_DeleteSubscriptionsCount","SessionDiagnosticsVariableType_AddNodesCount","SessionDiagnosticsVariableType_AddReferencesCount","SessionDiagnosticsVariableType_DeleteNodesCount","SessionDiagnosticsVariableType_DeleteReferencesCount","SessionDiagnosticsVariableType_BrowseCount","SessionDiagnosticsVariableType_BrowseNextCount","SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount","SessionDiagnosticsVariableType_QueryFirstCount","SessionDiagnosticsVariableType_QueryNextCount","SessionSecurityDiagnosticsType_SessionId","SessionSecurityDiagnosticsType_ClientUserIdOfSession","SessionSecurityDiagnosticsType_ClientUserIdHistory","SessionSecurityDiagnosticsType_AuthenticationMechanism","SessionSecurityDiagnosticsType_Encoding","SessionSecurityDiagnosticsType_TransportProtocol","SessionSecurityDiagnosticsType_SecurityMode","SessionSecurityDiagnosticsType_SecurityPolicyUri","Server_ServerArray","Server_NamespaceArray","Server_ServerStatus","Server_ServerStatus_StartTime","Server_ServerStatus_CurrentTime","Server_ServerStatus_State","Server_ServerStatus_BuildInfo","Server_ServerStatus_BuildInfo_ProductName","Server_ServerStatus_BuildInfo_ProductUri","Server_ServerStatus_BuildInfo_ManufacturerName","Server_ServerStatus_BuildInfo_SoftwareVersion","Server_ServerStatus_BuildInfo_BuildNumber","Server_ServerStatus_BuildInfo_BuildDate","Server_ServiceLevel","Server_ServerCapabilities_ServerProfileArray","Server_ServerCapabilities_LocaleIdArray","Server_ServerCapabilities_MinSupportedSampleRate","Server_ServerDiagnostics_ServerDiagnosticsSummary","Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount","Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount","Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray","Server_ServerDiagnostics_SubscriptionDiagnosticsArray","Server_ServerDiagnostics_EnabledFlag","StateType_StateNumber","TransitionType_TransitionNumber","HistoricalDataConfigurationType_Stepped","HistoricalDataConfigurationType_Definition","HistoricalDataConfigurationType_MaxTimeInterval","HistoricalDataConfigurationType_MinTimeInterval","HistoricalDataConfigurationType_ExceptionDeviation","HistoricalDataConfigurationType_ExceptionDeviationFormat","HistoryServerCapabilitiesType_AccessHistoryDataCapability","HistoryServerCapabilitiesType_AccessHistoryEventsCapability","HistoryServerCapabilitiesType_InsertDataCapability","HistoryServerCapabilitiesType_ReplaceDataCapability","HistoryServerCapabilitiesType_UpdateDataCapability","HistoryServerCapabilitiesType_DeleteRawCapability","HistoryServerCapabilitiesType_DeleteAtTimeCapability","DataItemType_Definition","DataItemType_ValuePrecision","AnalogItemType_EURange","AnalogItemType_InstrumentRange","AnalogItemType_EngineeringUnits","TwoStateDiscreteType_FalseState","TwoStateDiscreteType_TrueState","MultiStateDiscreteType_EnumStrings","ProgramTransitionEventType_IntermediateResult","ProgramDiagnosticType_CreateSessionId","ProgramDiagnosticType_CreateClientName","ProgramDiagnosticType_InvocationCreationTime","ProgramDiagnosticType_LastTransitionTime","ProgramDiagnosticType_LastMethodCall","ProgramDiagnosticType_LastMethodSessionId","ProgramDiagnosticType_LastMethodInputArguments","ProgramDiagnosticType_LastMethodOutputArguments","ProgramDiagnosticType_LastMethodCallTime","ProgramDiagnosticType_LastMethodReturnStatus","ProgramStateMachineType_Creatable","ProgramStateMachineType_Deletable","ProgramStateMachineType_AutoDelete","ProgramStateMachineType_RecycleCount","ProgramStateMachineType_InstanceCount","ProgramStateMachineType_MaxInstanceCount","ProgramStateMachineType_MaxRecycleCount","ProgramStateMachineType_ProgramDiagnostics","ProgramStateMachineType_Ready_StateNumber","ProgramStateMachineType_Running_StateNumber","ProgramStateMachineType_Suspended_StateNumber","ProgramStateMachineType_Halted_StateNumber","ProgramStateMachineType_HaltedToReady_TransitionNumber","ProgramStateMachineType_ReadyToRunning_TransitionNumber","ProgramStateMachineType_RunningToHalted_TransitionNumber","ProgramStateMachineType_RunningToReady_TransitionNumber","ProgramStateMachineType_RunningToSuspended_TransitionNumber","ProgramStateMachineType_SuspendedToRunning_TransitionNumber","ProgramStateMachineType_SuspendedToHalted_TransitionNumber","ProgramStateMachineType_SuspendedToReady_TransitionNumber","ProgramStateMachineType_ReadyToHalted_TransitionNumber","SessionDiagnosticsVariableType_RegisterNodesCount","SessionDiagnosticsVariableType_UnregisterNodesCount","ServerCapabilitiesType_MaxBrowseContinuationPoints","ServerCapabilitiesType_MaxQueryContinuationPoints","ServerCapabilitiesType_MaxHistoryContinuationPoints","Server_ServerCapabilities_MaxBrowseContinuationPoints","Server_ServerCapabilities_MaxQueryContinuationPoints","Server_ServerCapabilities_MaxHistoryContinuationPoints","SemanticChangeEventType_Changes","ServerType_Auditing","AuditChannelEventType_SecureChannelId","AuditOpenSecureChannelEventType_ClientCertificateThumbprint","AuditCreateSessionEventType_ClientCertificateThumbprint","AuditUrlMismatchEventType_EndpointUrl","AuditWriteUpdateEventType_AttributeId","AuditHistoryUpdateEventType_ParameterDataTypeId","ServerStatusType_SecondsTillShutdown","ServerStatusType_ShutdownReason","StateVariableType_Id","StateVariableType_Name","StateVariableType_Number","StateVariableType_EffectiveDisplayName","FiniteStateVariableType_Id","TransitionVariableType_Id","TransitionVariableType_Name","TransitionVariableType_Number","TransitionVariableType_TransitionTime","FiniteTransitionVariableType_Id","StateMachineType_CurrentState","StateMachineType_LastTransition","FiniteStateMachineType_CurrentState","FiniteStateMachineType_LastTransition","TransitionEventType_Transition","TransitionEventType_FromState","TransitionEventType_ToState","AuditUpdateStateEventType_OldStateId","AuditUpdateStateEventType_NewStateId","DialogConditionType_Prompt","ShelvedStateMachineType_TimedShelve_InputArguments","Server_ServerStatus_SecondsTillShutdown","Server_ServerStatus_ShutdownReason","Server_Auditing","SubscriptionDiagnosticsType_EventNotificationsCount","AuditHistoryEventUpdateEventType_Filter","AuditHistoryRawModifyDeleteEventType_IsDeleteModified","AuditHistoryRawModifyDeleteEventType_StartTime","AuditHistoryRawModifyDeleteEventType_EndTime","AuditHistoryAtTimeDeleteEventType_ReqTimes","AuditHistoryAtTimeDeleteEventType_OldValues","AuditHistoryEventDeleteEventType_EventIds","AuditHistoryEventDeleteEventType_OldValues","AuditHistoryEventUpdateEventType_UpdatedNode","AuditHistoryValueUpdateEventType_UpdatedNode","AuditHistoryDeleteEventType_UpdatedNode","AuditHistoryEventUpdateEventType_PerformInsertReplace","AuditHistoryEventUpdateEventType_NewValues","AuditHistoryEventUpdateEventType_OldValues","AuditHistoryValueUpdateEventType_PerformInsertReplace","AuditHistoryValueUpdateEventType_NewValues","AuditHistoryValueUpdateEventType_OldValues","AuditHistoryRawModifyDeleteEventType_OldValues","ServerCapabilitiesType_SoftwareCertificates","SessionDiagnosticsVariableType_MaxResponseMessageSize","BuildInfoType_ProductUri","BuildInfoType_ManufacturerName","BuildInfoType_ProductName","BuildInfoType_SoftwareVersion","BuildInfoType_BuildNumber","BuildInfoType_BuildDate","SessionSecurityDiagnosticsType_ClientCertificate","Icon","NodeVersion","LocalTime","AllowNulls","EnumValues","InputArguments","OutputArguments","ServerType_ServerStatus_StartTime","ServerType_ServerStatus_CurrentTime","ServerType_ServerStatus_State","ServerType_ServerStatus_BuildInfo","ServerType_ServerStatus_BuildInfo_ProductUri","ServerType_ServerStatus_BuildInfo_ManufacturerName","ServerType_ServerStatus_BuildInfo_ProductName","ServerType_ServerStatus_BuildInfo_SoftwareVersion","ServerType_ServerStatus_BuildInfo_BuildNumber","ServerType_ServerStatus_BuildInfo_BuildDate","ServerType_ServerStatus_SecondsTillShutdown","ServerType_ServerStatus_ShutdownReason","ServerType_ServerCapabilities_ServerProfileArray","ServerType_ServerCapabilities_LocaleIdArray","ServerType_ServerCapabilities_MinSupportedSampleRate","ServerType_ServerCapabilities_MaxBrowseContinuationPoints","ServerType_ServerCapabilities_MaxQueryContinuationPoints","ServerType_ServerCapabilities_MaxHistoryContinuationPoints","ServerType_ServerCapabilities_SoftwareCertificates","ServerType_ServerDiagnostics_ServerDiagnosticsSummary","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount","ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount","ServerType_ServerDiagnostics_SamplingIntervalDiagnosticsArray","ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray","ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray","ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray","ServerType_ServerDiagnostics_EnabledFlag","ServerType_ServerRedundancy_RedundancySupport","ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount","ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount","ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount","ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount","ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount","ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount","ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount","ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount","ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount","ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount","ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount","ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount","ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray","ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray","SessionDiagnosticsObjectType_SessionDiagnostics_SessionId","SessionDiagnosticsObjectType_SessionDiagnostics_SessionName","SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription","SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri","SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl","SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds","SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout","SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize","SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime","SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime","SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount","SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount","SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue","SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount","SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount","SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount","SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount","SessionDiagnosticsObjectType_SessionDiagnostics_CallCount","SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount","SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount","SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount","SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount","SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount","SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount","SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount","SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount","SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount","SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount","SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount","SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount","SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount","SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount","SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount","SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount","SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount","SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount","SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount","SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount","SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount","SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount","SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount","SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId","SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession","SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory","SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism","SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding","SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol","SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode","SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri","SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate","TransparentRedundancyType_RedundancySupport","NonTransparentRedundancyType_RedundancySupport","BaseEventType_LocalTime","EventQueueOverflowEventType_EventId","EventQueueOverflowEventType_EventType","EventQueueOverflowEventType_SourceNode","EventQueueOverflowEventType_SourceName","EventQueueOverflowEventType_Time","EventQueueOverflowEventType_ReceiveTime","EventQueueOverflowEventType_LocalTime","EventQueueOverflowEventType_Message","EventQueueOverflowEventType_Severity","AuditEventType_EventId","AuditEventType_EventType","AuditEventType_SourceNode","AuditEventType_SourceName","AuditEventType_Time","AuditEventType_ReceiveTime","AuditEventType_LocalTime","AuditEventType_Message","AuditEventType_Severity","AuditSecurityEventType_EventId","AuditSecurityEventType_EventType","AuditSecurityEventType_SourceNode","AuditSecurityEventType_SourceName","AuditSecurityEventType_Time","AuditSecurityEventType_ReceiveTime","AuditSecurityEventType_LocalTime","AuditSecurityEventType_Message","AuditSecurityEventType_Severity","AuditSecurityEventType_ActionTimeStamp","AuditSecurityEventType_Status","AuditSecurityEventType_ServerId","AuditSecurityEventType_ClientAuditEntryId","AuditSecurityEventType_ClientUserId","AuditChannelEventType_EventId","AuditChannelEventType_EventType","AuditChannelEventType_SourceNode","AuditChannelEventType_SourceName","AuditChannelEventType_Time","AuditChannelEventType_ReceiveTime","AuditChannelEventType_LocalTime","AuditChannelEventType_Message","AuditChannelEventType_Severity","AuditChannelEventType_ActionTimeStamp","AuditChannelEventType_Status","AuditChannelEventType_ServerId","AuditChannelEventType_ClientAuditEntryId","AuditChannelEventType_ClientUserId","AuditOpenSecureChannelEventType_EventId","AuditOpenSecureChannelEventType_EventType","AuditOpenSecureChannelEventType_SourceNode","AuditOpenSecureChannelEventType_SourceName","AuditOpenSecureChannelEventType_Time","AuditOpenSecureChannelEventType_ReceiveTime","AuditOpenSecureChannelEventType_LocalTime","AuditOpenSecureChannelEventType_Message","AuditOpenSecureChannelEventType_Severity","AuditOpenSecureChannelEventType_ActionTimeStamp","AuditOpenSecureChannelEventType_Status","AuditOpenSecureChannelEventType_ServerId","AuditOpenSecureChannelEventType_ClientAuditEntryId","AuditOpenSecureChannelEventType_ClientUserId","AuditOpenSecureChannelEventType_SecureChannelId","AuditSessionEventType_EventId","AuditSessionEventType_EventType","AuditSessionEventType_SourceNode","AuditSessionEventType_SourceName","AuditSessionEventType_Time","AuditSessionEventType_ReceiveTime","AuditSessionEventType_LocalTime","AuditSessionEventType_Message","AuditSessionEventType_Severity","AuditSessionEventType_ActionTimeStamp","AuditSessionEventType_Status","AuditSessionEventType_ServerId","AuditSessionEventType_ClientAuditEntryId","AuditSessionEventType_ClientUserId","AuditCreateSessionEventType_EventId","AuditCreateSessionEventType_EventType","AuditCreateSessionEventType_SourceNode","AuditCreateSessionEventType_SourceName","AuditCreateSessionEventType_Time","AuditCreateSessionEventType_ReceiveTime","AuditCreateSessionEventType_LocalTime","AuditCreateSessionEventType_Message","AuditCreateSessionEventType_Severity","AuditCreateSessionEventType_ActionTimeStamp","AuditCreateSessionEventType_Status","AuditCreateSessionEventType_ServerId","AuditCreateSessionEventType_ClientAuditEntryId","AuditCreateSessionEventType_ClientUserId","AuditUrlMismatchEventType_EventId","AuditUrlMismatchEventType_EventType","AuditUrlMismatchEventType_SourceNode","AuditUrlMismatchEventType_SourceName","AuditUrlMismatchEventType_Time","AuditUrlMismatchEventType_ReceiveTime","AuditUrlMismatchEventType_LocalTime","AuditUrlMismatchEventType_Message","AuditUrlMismatchEventType_Severity","AuditUrlMismatchEventType_ActionTimeStamp","AuditUrlMismatchEventType_Status","AuditUrlMismatchEventType_ServerId","AuditUrlMismatchEventType_ClientAuditEntryId","AuditUrlMismatchEventType_ClientUserId","AuditUrlMismatchEventType_SecureChannelId","AuditUrlMismatchEventType_ClientCertificate","AuditUrlMismatchEventType_ClientCertificateThumbprint","AuditUrlMismatchEventType_RevisedSessionTimeout","AuditActivateSessionEventType_EventId","AuditActivateSessionEventType_EventType","AuditActivateSessionEventType_SourceNode","AuditActivateSessionEventType_SourceName","AuditActivateSessionEventType_Time","AuditActivateSessionEventType_ReceiveTime","AuditActivateSessionEventType_LocalTime","AuditActivateSessionEventType_Message","AuditActivateSessionEventType_Severity","AuditActivateSessionEventType_ActionTimeStamp","AuditActivateSessionEventType_Status","AuditActivateSessionEventType_ServerId","AuditActivateSessionEventType_ClientAuditEntryId","AuditActivateSessionEventType_ClientUserId","AuditActivateSessionEventType_SessionId","AuditCancelEventType_EventId","AuditCancelEventType_EventType","AuditCancelEventType_SourceNode","AuditCancelEventType_SourceName","AuditCancelEventType_Time","AuditCancelEventType_ReceiveTime","AuditCancelEventType_LocalTime","AuditCancelEventType_Message","AuditCancelEventType_Severity","AuditCancelEventType_ActionTimeStamp","AuditCancelEventType_Status","AuditCancelEventType_ServerId","AuditCancelEventType_ClientAuditEntryId","AuditCancelEventType_ClientUserId","AuditCancelEventType_SessionId","AuditCertificateEventType_EventId","AuditCertificateEventType_EventType","AuditCertificateEventType_SourceNode","AuditCertificateEventType_SourceName","AuditCertificateEventType_Time","AuditCertificateEventType_ReceiveTime","AuditCertificateEventType_LocalTime","AuditCertificateEventType_Message","AuditCertificateEventType_Severity","AuditCertificateEventType_ActionTimeStamp","AuditCertificateEventType_Status","AuditCertificateEventType_ServerId","AuditCertificateEventType_ClientAuditEntryId","AuditCertificateEventType_ClientUserId","AuditCertificateDataMismatchEventType_EventId","AuditCertificateDataMismatchEventType_EventType","AuditCertificateDataMismatchEventType_SourceNode","AuditCertificateDataMismatchEventType_SourceName","AuditCertificateDataMismatchEventType_Time","AuditCertificateDataMismatchEventType_ReceiveTime","AuditCertificateDataMismatchEventType_LocalTime","AuditCertificateDataMismatchEventType_Message","AuditCertificateDataMismatchEventType_Severity","AuditCertificateDataMismatchEventType_ActionTimeStamp","AuditCertificateDataMismatchEventType_Status","AuditCertificateDataMismatchEventType_ServerId","AuditCertificateDataMismatchEventType_ClientAuditEntryId","AuditCertificateDataMismatchEventType_ClientUserId","AuditCertificateDataMismatchEventType_Certificate","AuditCertificateExpiredEventType_EventId","AuditCertificateExpiredEventType_EventType","AuditCertificateExpiredEventType_SourceNode","AuditCertificateExpiredEventType_SourceName","AuditCertificateExpiredEventType_Time","AuditCertificateExpiredEventType_ReceiveTime","AuditCertificateExpiredEventType_LocalTime","AuditCertificateExpiredEventType_Message","AuditCertificateExpiredEventType_Severity","AuditCertificateExpiredEventType_ActionTimeStamp","AuditCertificateExpiredEventType_Status","AuditCertificateExpiredEventType_ServerId","AuditCertificateExpiredEventType_ClientAuditEntryId","AuditCertificateExpiredEventType_ClientUserId","AuditCertificateExpiredEventType_Certificate","AuditCertificateInvalidEventType_EventId","AuditCertificateInvalidEventType_EventType","AuditCertificateInvalidEventType_SourceNode","AuditCertificateInvalidEventType_SourceName","AuditCertificateInvalidEventType_Time","AuditCertificateInvalidEventType_ReceiveTime","AuditCertificateInvalidEventType_LocalTime","AuditCertificateInvalidEventType_Message","AuditCertificateInvalidEventType_Severity","AuditCertificateInvalidEventType_ActionTimeStamp","AuditCertificateInvalidEventType_Status","AuditCertificateInvalidEventType_ServerId","AuditCertificateInvalidEventType_ClientAuditEntryId","AuditCertificateInvalidEventType_ClientUserId","AuditCertificateInvalidEventType_Certificate","AuditCertificateUntrustedEventType_EventId","AuditCertificateUntrustedEventType_EventType","AuditCertificateUntrustedEventType_SourceNode","AuditCertificateUntrustedEventType_SourceName","AuditCertificateUntrustedEventType_Time","AuditCertificateUntrustedEventType_ReceiveTime","AuditCertificateUntrustedEventType_LocalTime","AuditCertificateUntrustedEventType_Message","AuditCertificateUntrustedEventType_Severity","AuditCertificateUntrustedEventType_ActionTimeStamp","AuditCertificateUntrustedEventType_Status","AuditCertificateUntrustedEventType_ServerId","AuditCertificateUntrustedEventType_ClientAuditEntryId","AuditCertificateUntrustedEventType_ClientUserId","AuditCertificateUntrustedEventType_Certificate","AuditCertificateRevokedEventType_EventId","AuditCertificateRevokedEventType_EventType","AuditCertificateRevokedEventType_SourceNode","AuditCertificateRevokedEventType_SourceName","AuditCertificateRevokedEventType_Time","AuditCertificateRevokedEventType_ReceiveTime","AuditCertificateRevokedEventType_LocalTime","AuditCertificateRevokedEventType_Message","AuditCertificateRevokedEventType_Severity","AuditCertificateRevokedEventType_ActionTimeStamp","AuditCertificateRevokedEventType_Status","AuditCertificateRevokedEventType_ServerId","AuditCertificateRevokedEventType_ClientAuditEntryId","AuditCertificateRevokedEventType_ClientUserId","AuditCertificateRevokedEventType_Certificate","AuditCertificateMismatchEventType_EventId","AuditCertificateMismatchEventType_EventType","AuditCertificateMismatchEventType_SourceNode","AuditCertificateMismatchEventType_SourceName","AuditCertificateMismatchEventType_Time","AuditCertificateMismatchEventType_ReceiveTime","AuditCertificateMismatchEventType_LocalTime","AuditCertificateMismatchEventType_Message","AuditCertificateMismatchEventType_Severity","AuditCertificateMismatchEventType_ActionTimeStamp","AuditCertificateMismatchEventType_Status","AuditCertificateMismatchEventType_ServerId","AuditCertificateMismatchEventType_ClientAuditEntryId","AuditCertificateMismatchEventType_ClientUserId","AuditCertificateMismatchEventType_Certificate","AuditNodeManagementEventType_EventId","AuditNodeManagementEventType_EventType","AuditNodeManagementEventType_SourceNode","AuditNodeManagementEventType_SourceName","AuditNodeManagementEventType_Time","AuditNodeManagementEventType_ReceiveTime","AuditNodeManagementEventType_LocalTime","AuditNodeManagementEventType_Message","AuditNodeManagementEventType_Severity","AuditNodeManagementEventType_ActionTimeStamp","AuditNodeManagementEventType_Status","AuditNodeManagementEventType_ServerId","AuditNodeManagementEventType_ClientAuditEntryId","AuditNodeManagementEventType_ClientUserId","AuditAddNodesEventType_EventId","AuditAddNodesEventType_EventType","AuditAddNodesEventType_SourceNode","AuditAddNodesEventType_SourceName","AuditAddNodesEventType_Time","AuditAddNodesEventType_ReceiveTime","AuditAddNodesEventType_LocalTime","AuditAddNodesEventType_Message","AuditAddNodesEventType_Severity","AuditAddNodesEventType_ActionTimeStamp","AuditAddNodesEventType_Status","AuditAddNodesEventType_ServerId","AuditAddNodesEventType_ClientAuditEntryId","AuditAddNodesEventType_ClientUserId","AuditDeleteNodesEventType_EventId","AuditDeleteNodesEventType_EventType","AuditDeleteNodesEventType_SourceNode","AuditDeleteNodesEventType_SourceName","AuditDeleteNodesEventType_Time","AuditDeleteNodesEventType_ReceiveTime","AuditDeleteNodesEventType_LocalTime","AuditDeleteNodesEventType_Message","AuditDeleteNodesEventType_Severity","AuditDeleteNodesEventType_ActionTimeStamp","AuditDeleteNodesEventType_Status","AuditDeleteNodesEventType_ServerId","AuditDeleteNodesEventType_ClientAuditEntryId","AuditDeleteNodesEventType_ClientUserId","AuditAddReferencesEventType_EventId","AuditAddReferencesEventType_EventType","AuditAddReferencesEventType_SourceNode","AuditAddReferencesEventType_SourceName","AuditAddReferencesEventType_Time","AuditAddReferencesEventType_ReceiveTime","AuditAddReferencesEventType_LocalTime","AuditAddReferencesEventType_Message","AuditAddReferencesEventType_Severity","AuditAddReferencesEventType_ActionTimeStamp","AuditAddReferencesEventType_Status","AuditAddReferencesEventType_ServerId","AuditAddReferencesEventType_ClientAuditEntryId","AuditAddReferencesEventType_ClientUserId","AuditDeleteReferencesEventType_EventId","AuditDeleteReferencesEventType_EventType","AuditDeleteReferencesEventType_SourceNode","AuditDeleteReferencesEventType_SourceName","AuditDeleteReferencesEventType_Time","AuditDeleteReferencesEventType_ReceiveTime","AuditDeleteReferencesEventType_LocalTime","AuditDeleteReferencesEventType_Message","AuditDeleteReferencesEventType_Severity","AuditDeleteReferencesEventType_ActionTimeStamp","AuditDeleteReferencesEventType_Status","AuditDeleteReferencesEventType_ServerId","AuditDeleteReferencesEventType_ClientAuditEntryId","AuditDeleteReferencesEventType_ClientUserId","AuditUpdateEventType_EventId","AuditUpdateEventType_EventType","AuditUpdateEventType_SourceNode","AuditUpdateEventType_SourceName","AuditUpdateEventType_Time","AuditUpdateEventType_ReceiveTime","AuditUpdateEventType_LocalTime","AuditUpdateEventType_Message","AuditUpdateEventType_Severity","AuditUpdateEventType_ActionTimeStamp","AuditUpdateEventType_Status","AuditUpdateEventType_ServerId","AuditUpdateEventType_ClientAuditEntryId","AuditUpdateEventType_ClientUserId","AuditWriteUpdateEventType_EventId","AuditWriteUpdateEventType_EventType","AuditWriteUpdateEventType_SourceNode","AuditWriteUpdateEventType_SourceName","AuditWriteUpdateEventType_Time","AuditWriteUpdateEventType_ReceiveTime","AuditWriteUpdateEventType_LocalTime","AuditWriteUpdateEventType_Message","AuditWriteUpdateEventType_Severity","AuditWriteUpdateEventType_ActionTimeStamp","AuditWriteUpdateEventType_Status","AuditWriteUpdateEventType_ServerId","AuditWriteUpdateEventType_ClientAuditEntryId","AuditWriteUpdateEventType_ClientUserId","AuditHistoryUpdateEventType_EventId","AuditHistoryUpdateEventType_EventType","AuditHistoryUpdateEventType_SourceNode","AuditHistoryUpdateEventType_SourceName","AuditHistoryUpdateEventType_Time","AuditHistoryUpdateEventType_ReceiveTime","AuditHistoryUpdateEventType_LocalTime","AuditHistoryUpdateEventType_Message","AuditHistoryUpdateEventType_Severity","AuditHistoryUpdateEventType_ActionTimeStamp","AuditHistoryUpdateEventType_Status","AuditHistoryUpdateEventType_ServerId","AuditHistoryUpdateEventType_ClientAuditEntryId","AuditHistoryUpdateEventType_ClientUserId","AuditHistoryEventUpdateEventType_EventId","AuditHistoryEventUpdateEventType_EventType","AuditHistoryEventUpdateEventType_SourceNode","AuditHistoryEventUpdateEventType_SourceName","AuditHistoryEventUpdateEventType_Time","AuditHistoryEventUpdateEventType_ReceiveTime","AuditHistoryEventUpdateEventType_LocalTime","AuditHistoryEventUpdateEventType_Message","AuditHistoryEventUpdateEventType_Severity","AuditHistoryEventUpdateEventType_ActionTimeStamp","AuditHistoryEventUpdateEventType_Status","AuditHistoryEventUpdateEventType_ServerId","AuditHistoryEventUpdateEventType_ClientAuditEntryId","AuditHistoryEventUpdateEventType_ClientUserId","AuditHistoryEventUpdateEventType_ParameterDataTypeId","AuditHistoryValueUpdateEventType_EventId","AuditHistoryValueUpdateEventType_EventType","AuditHistoryValueUpdateEventType_SourceNode","AuditHistoryValueUpdateEventType_SourceName","AuditHistoryValueUpdateEventType_Time","AuditHistoryValueUpdateEventType_ReceiveTime","AuditHistoryValueUpdateEventType_LocalTime","AuditHistoryValueUpdateEventType_Message","AuditHistoryValueUpdateEventType_Severity","AuditHistoryValueUpdateEventType_ActionTimeStamp","AuditHistoryValueUpdateEventType_Status","AuditHistoryValueUpdateEventType_ServerId","AuditHistoryValueUpdateEventType_ClientAuditEntryId","AuditHistoryValueUpdateEventType_ClientUserId","AuditHistoryValueUpdateEventType_ParameterDataTypeId","AuditHistoryDeleteEventType_EventId","AuditHistoryDeleteEventType_EventType","AuditHistoryDeleteEventType_SourceNode","AuditHistoryDeleteEventType_SourceName","AuditHistoryDeleteEventType_Time","AuditHistoryDeleteEventType_ReceiveTime","AuditHistoryDeleteEventType_LocalTime","AuditHistoryDeleteEventType_Message","AuditHistoryDeleteEventType_Severity","AuditHistoryDeleteEventType_ActionTimeStamp","AuditHistoryDeleteEventType_Status","AuditHistoryDeleteEventType_ServerId","AuditHistoryDeleteEventType_ClientAuditEntryId","AuditHistoryDeleteEventType_ClientUserId","AuditHistoryDeleteEventType_ParameterDataTypeId","AuditHistoryRawModifyDeleteEventType_EventId","AuditHistoryRawModifyDeleteEventType_EventType","AuditHistoryRawModifyDeleteEventType_SourceNode","AuditHistoryRawModifyDeleteEventType_SourceName","AuditHistoryRawModifyDeleteEventType_Time","AuditHistoryRawModifyDeleteEventType_ReceiveTime","AuditHistoryRawModifyDeleteEventType_LocalTime","AuditHistoryRawModifyDeleteEventType_Message","AuditHistoryRawModifyDeleteEventType_Severity","AuditHistoryRawModifyDeleteEventType_ActionTimeStamp","AuditHistoryRawModifyDeleteEventType_Status","AuditHistoryRawModifyDeleteEventType_ServerId","AuditHistoryRawModifyDeleteEventType_ClientAuditEntryId","AuditHistoryRawModifyDeleteEventType_ClientUserId","AuditHistoryRawModifyDeleteEventType_ParameterDataTypeId","AuditHistoryRawModifyDeleteEventType_UpdatedNode","AuditHistoryAtTimeDeleteEventType_EventId","AuditHistoryAtTimeDeleteEventType_EventType","AuditHistoryAtTimeDeleteEventType_SourceNode","AuditHistoryAtTimeDeleteEventType_SourceName","AuditHistoryAtTimeDeleteEventType_Time","AuditHistoryAtTimeDeleteEventType_ReceiveTime","AuditHistoryAtTimeDeleteEventType_LocalTime","AuditHistoryAtTimeDeleteEventType_Message","AuditHistoryAtTimeDeleteEventType_Severity","AuditHistoryAtTimeDeleteEventType_ActionTimeStamp","AuditHistoryAtTimeDeleteEventType_Status","AuditHistoryAtTimeDeleteEventType_ServerId","AuditHistoryAtTimeDeleteEventType_ClientAuditEntryId","AuditHistoryAtTimeDeleteEventType_ClientUserId","AuditHistoryAtTimeDeleteEventType_ParameterDataTypeId","AuditHistoryAtTimeDeleteEventType_UpdatedNode","AuditHistoryEventDeleteEventType_EventId","AuditHistoryEventDeleteEventType_EventType","AuditHistoryEventDeleteEventType_SourceNode","AuditHistoryEventDeleteEventType_SourceName","AuditHistoryEventDeleteEventType_Time","AuditHistoryEventDeleteEventType_ReceiveTime","AuditHistoryEventDeleteEventType_LocalTime","AuditHistoryEventDeleteEventType_Message","AuditHistoryEventDeleteEventType_Severity","AuditHistoryEventDeleteEventType_ActionTimeStamp","AuditHistoryEventDeleteEventType_Status","AuditHistoryEventDeleteEventType_ServerId","AuditHistoryEventDeleteEventType_ClientAuditEntryId","AuditHistoryEventDeleteEventType_ClientUserId","AuditHistoryEventDeleteEventType_ParameterDataTypeId","AuditHistoryEventDeleteEventType_UpdatedNode","AuditUpdateMethodEventType_EventId","AuditUpdateMethodEventType_EventType","AuditUpdateMethodEventType_SourceNode","AuditUpdateMethodEventType_SourceName","AuditUpdateMethodEventType_Time","AuditUpdateMethodEventType_ReceiveTime","AuditUpdateMethodEventType_LocalTime","AuditUpdateMethodEventType_Message","AuditUpdateMethodEventType_Severity","AuditUpdateMethodEventType_ActionTimeStamp","AuditUpdateMethodEventType_Status","AuditUpdateMethodEventType_ServerId","AuditUpdateMethodEventType_ClientAuditEntryId","AuditUpdateMethodEventType_ClientUserId","SystemEventType_EventId","SystemEventType_EventType","SystemEventType_SourceNode","SystemEventType_SourceName","SystemEventType_Time","SystemEventType_ReceiveTime","SystemEventType_LocalTime","SystemEventType_Message","SystemEventType_Severity","DeviceFailureEventType_EventId","DeviceFailureEventType_EventType","DeviceFailureEventType_SourceNode","DeviceFailureEventType_SourceName","DeviceFailureEventType_Time","DeviceFailureEventType_ReceiveTime","DeviceFailureEventType_LocalTime","DeviceFailureEventType_Message","DeviceFailureEventType_Severity","BaseModelChangeEventType_EventId","BaseModelChangeEventType_EventType","BaseModelChangeEventType_SourceNode","BaseModelChangeEventType_SourceName","BaseModelChangeEventType_Time","BaseModelChangeEventType_ReceiveTime","BaseModelChangeEventType_LocalTime","BaseModelChangeEventType_Message","BaseModelChangeEventType_Severity","GeneralModelChangeEventType_EventId","GeneralModelChangeEventType_EventType","GeneralModelChangeEventType_SourceNode","GeneralModelChangeEventType_SourceName","GeneralModelChangeEventType_Time","GeneralModelChangeEventType_ReceiveTime","GeneralModelChangeEventType_LocalTime","GeneralModelChangeEventType_Message","GeneralModelChangeEventType_Severity","SemanticChangeEventType_EventId","SemanticChangeEventType_EventType","SemanticChangeEventType_SourceNode","SemanticChangeEventType_SourceName","SemanticChangeEventType_Time","SemanticChangeEventType_ReceiveTime","SemanticChangeEventType_LocalTime","SemanticChangeEventType_Message","SemanticChangeEventType_Severity","ServerStatusType_BuildInfo_ProductUri","ServerStatusType_BuildInfo_ManufacturerName","ServerStatusType_BuildInfo_ProductName","ServerStatusType_BuildInfo_SoftwareVersion","ServerStatusType_BuildInfo_BuildNumber","ServerStatusType_BuildInfo_BuildDate","Server_ServerCapabilities_SoftwareCertificates","Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount","Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray","Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray","Server_ServerRedundancy_RedundancySupport","FiniteStateVariableType_Name","FiniteStateVariableType_Number","FiniteStateVariableType_EffectiveDisplayName","FiniteTransitionVariableType_Name","FiniteTransitionVariableType_Number","FiniteTransitionVariableType_TransitionTime","StateMachineType_CurrentState_Id","StateMachineType_CurrentState_Name","StateMachineType_CurrentState_Number","StateMachineType_CurrentState_EffectiveDisplayName","StateMachineType_LastTransition_Id","StateMachineType_LastTransition_Name","StateMachineType_LastTransition_Number","StateMachineType_LastTransition_TransitionTime","FiniteStateMachineType_CurrentState_Id","FiniteStateMachineType_CurrentState_Name","FiniteStateMachineType_CurrentState_Number","FiniteStateMachineType_CurrentState_EffectiveDisplayName","FiniteStateMachineType_LastTransition_Id","FiniteStateMachineType_LastTransition_Name","FiniteStateMachineType_LastTransition_Number","FiniteStateMachineType_LastTransition_TransitionTime","InitialStateType_StateNumber","TransitionEventType_EventId","TransitionEventType_EventType","TransitionEventType_SourceNode","TransitionEventType_SourceName","TransitionEventType_Time","TransitionEventType_ReceiveTime","TransitionEventType_LocalTime","TransitionEventType_Message","TransitionEventType_Severity","TransitionEventType_FromState_Id","TransitionEventType_FromState_Name","TransitionEventType_FromState_Number","TransitionEventType_FromState_EffectiveDisplayName","TransitionEventType_ToState_Id","TransitionEventType_ToState_Name","TransitionEventType_ToState_Number","TransitionEventType_ToState_EffectiveDisplayName","TransitionEventType_Transition_Id","TransitionEventType_Transition_Name","TransitionEventType_Transition_Number","TransitionEventType_Transition_TransitionTime","AuditUpdateStateEventType_EventId","AuditUpdateStateEventType_EventType","AuditUpdateStateEventType_SourceNode","AuditUpdateStateEventType_SourceName","AuditUpdateStateEventType_Time","AuditUpdateStateEventType_ReceiveTime","AuditUpdateStateEventType_LocalTime","AuditUpdateStateEventType_Message","AuditUpdateStateEventType_Severity","AuditUpdateStateEventType_ActionTimeStamp","AuditUpdateStateEventType_Status","AuditUpdateStateEventType_ServerId","AuditUpdateStateEventType_ClientAuditEntryId","AuditUpdateStateEventType_ClientUserId","AuditUpdateStateEventType_MethodId","AuditUpdateStateEventType_InputArguments","AnalogItemType_Definition","AnalogItemType_ValuePrecision","DiscreteItemType_Definition","DiscreteItemType_ValuePrecision","TwoStateDiscreteType_Definition","TwoStateDiscreteType_ValuePrecision","MultiStateDiscreteType_Definition","MultiStateDiscreteType_ValuePrecision","ProgramTransitionEventType_EventId","ProgramTransitionEventType_EventType","ProgramTransitionEventType_SourceNode","ProgramTransitionEventType_SourceName","ProgramTransitionEventType_Time","ProgramTransitionEventType_ReceiveTime","ProgramTransitionEventType_LocalTime","ProgramTransitionEventType_Message","ProgramTransitionEventType_Severity","ProgramTransitionEventType_FromState","ProgramTransitionEventType_FromState_Id","ProgramTransitionEventType_FromState_Name","ProgramTransitionEventType_FromState_Number","ProgramTransitionEventType_FromState_EffectiveDisplayName","ProgramTransitionEventType_ToState","ProgramTransitionEventType_ToState_Id","ProgramTransitionEventType_ToState_Name","ProgramTransitionEventType_ToState_Number","ProgramTransitionEventType_ToState_EffectiveDisplayName","ProgramTransitionEventType_Transition","ProgramTransitionEventType_Transition_Id","ProgramTransitionEventType_Transition_Name","ProgramTransitionEventType_Transition_Number","ProgramTransitionEventType_Transition_TransitionTime","ProgramTransitionAuditEventType_EventId","ProgramTransitionAuditEventType_EventType","ProgramTransitionAuditEventType_SourceNode","ProgramTransitionAuditEventType_SourceName","ProgramTransitionAuditEventType_Time","ProgramTransitionAuditEventType_ReceiveTime","ProgramTransitionAuditEventType_LocalTime","ProgramTransitionAuditEventType_Message","ProgramTransitionAuditEventType_Severity","ProgramTransitionAuditEventType_ActionTimeStamp","ProgramTransitionAuditEventType_Status","ProgramTransitionAuditEventType_ServerId","ProgramTransitionAuditEventType_ClientAuditEntryId","ProgramTransitionAuditEventType_ClientUserId","ProgramTransitionAuditEventType_MethodId","ProgramTransitionAuditEventType_InputArguments","ProgramTransitionAuditEventType_OldStateId","ProgramTransitionAuditEventType_NewStateId","ProgramTransitionAuditEventType_Transition","ProgramTransitionAuditEventType_Transition_Id","ProgramTransitionAuditEventType_Transition_Name","ProgramTransitionAuditEventType_Transition_Number","ProgramTransitionAuditEventType_Transition_TransitionTime","ProgramStateMachineType_CurrentState","ProgramStateMachineType_CurrentState_Id","ProgramStateMachineType_CurrentState_Name","ProgramStateMachineType_CurrentState_Number","ProgramStateMachineType_CurrentState_EffectiveDisplayName","ProgramStateMachineType_LastTransition","ProgramStateMachineType_LastTransition_Id","ProgramStateMachineType_LastTransition_Name","ProgramStateMachineType_LastTransition_Number","ProgramStateMachineType_LastTransition_TransitionTime","ProgramStateMachineType_ProgramDiagnostics_CreateSessionId","ProgramStateMachineType_ProgramDiagnostics_CreateClientName","ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime","ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime","ProgramStateMachineType_ProgramDiagnostics_LastMethodCall","ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId","ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments","ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments","ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime","ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus","AddCommentMethodType_InputArguments","ConditionType_EventId","ConditionType_EventType","ConditionType_SourceNode","ConditionType_SourceName","ConditionType_Time","ConditionType_ReceiveTime","ConditionType_LocalTime","ConditionType_Message","ConditionType_Severity","ConditionType_Retain","ConditionType_ConditionRefresh_InputArguments","RefreshStartEventType_EventId","RefreshStartEventType_EventType","RefreshStartEventType_SourceNode","RefreshStartEventType_SourceName","RefreshStartEventType_Time","RefreshStartEventType_ReceiveTime","RefreshStartEventType_LocalTime","RefreshStartEventType_Message","RefreshStartEventType_Severity","RefreshEndEventType_EventId","RefreshEndEventType_EventType","RefreshEndEventType_SourceNode","RefreshEndEventType_SourceName","RefreshEndEventType_Time","RefreshEndEventType_ReceiveTime","RefreshEndEventType_LocalTime","RefreshEndEventType_Message","RefreshEndEventType_Severity","RefreshRequiredEventType_EventId","RefreshRequiredEventType_EventType","RefreshRequiredEventType_SourceNode","RefreshRequiredEventType_SourceName","RefreshRequiredEventType_Time","RefreshRequiredEventType_ReceiveTime","RefreshRequiredEventType_LocalTime","RefreshRequiredEventType_Message","RefreshRequiredEventType_Severity","AuditConditionEventType_EventId","AuditConditionEventType_EventType","AuditConditionEventType_SourceNode","AuditConditionEventType_SourceName","AuditConditionEventType_Time","AuditConditionEventType_ReceiveTime","AuditConditionEventType_LocalTime","AuditConditionEventType_Message","AuditConditionEventType_Severity","AuditConditionEventType_ActionTimeStamp","AuditConditionEventType_Status","AuditConditionEventType_ServerId","AuditConditionEventType_ClientAuditEntryId","AuditConditionEventType_ClientUserId","AuditConditionEventType_MethodId","AuditConditionEventType_InputArguments","AuditConditionEnableEventType_EventId","AuditConditionEnableEventType_EventType","AuditConditionEnableEventType_SourceNode","AuditConditionEnableEventType_SourceName","AuditConditionEnableEventType_Time","AuditConditionEnableEventType_ReceiveTime","AuditConditionEnableEventType_LocalTime","AuditConditionEnableEventType_Message","AuditConditionEnableEventType_Severity","AuditConditionEnableEventType_ActionTimeStamp","AuditConditionEnableEventType_Status","AuditConditionEnableEventType_ServerId","AuditConditionEnableEventType_ClientAuditEntryId","AuditConditionEnableEventType_ClientUserId","AuditConditionEnableEventType_MethodId","AuditConditionEnableEventType_InputArguments","AuditConditionCommentEventType_EventId","AuditConditionCommentEventType_EventType","AuditConditionCommentEventType_SourceNode","AuditConditionCommentEventType_SourceName","AuditConditionCommentEventType_Time","AuditConditionCommentEventType_ReceiveTime","AuditConditionCommentEventType_LocalTime","AuditConditionCommentEventType_Message","AuditConditionCommentEventType_Severity","AuditConditionCommentEventType_ActionTimeStamp","AuditConditionCommentEventType_Status","AuditConditionCommentEventType_ServerId","AuditConditionCommentEventType_ClientAuditEntryId","AuditConditionCommentEventType_ClientUserId","AuditConditionCommentEventType_MethodId","AuditConditionCommentEventType_InputArguments","DialogConditionType_EventId","DialogConditionType_EventType","DialogConditionType_SourceNode","DialogConditionType_SourceName","DialogConditionType_Time","DialogConditionType_ReceiveTime","DialogConditionType_LocalTime","DialogConditionType_Message","DialogConditionType_Severity","DialogConditionType_Retain","DialogConditionType_ConditionRefresh_InputArguments","AcknowledgeableConditionType_EventId","AcknowledgeableConditionType_EventType","AcknowledgeableConditionType_SourceNode","AcknowledgeableConditionType_SourceName","AcknowledgeableConditionType_Time","AcknowledgeableConditionType_ReceiveTime","AcknowledgeableConditionType_LocalTime","AcknowledgeableConditionType_Message","AcknowledgeableConditionType_Severity","AcknowledgeableConditionType_Retain","AcknowledgeableConditionType_ConditionRefresh_InputArguments","AlarmConditionType_EventId","AlarmConditionType_EventType","AlarmConditionType_SourceNode","AlarmConditionType_SourceName","AlarmConditionType_Time","AlarmConditionType_ReceiveTime","AlarmConditionType_LocalTime","AlarmConditionType_Message","AlarmConditionType_Severity","AlarmConditionType_Retain","AlarmConditionType_ConditionRefresh_InputArguments","ShelvedStateMachineType_CurrentState","ShelvedStateMachineType_CurrentState_Id","ShelvedStateMachineType_CurrentState_Name","ShelvedStateMachineType_CurrentState_Number","ShelvedStateMachineType_CurrentState_EffectiveDisplayName","ShelvedStateMachineType_LastTransition","ShelvedStateMachineType_LastTransition_Id","ShelvedStateMachineType_LastTransition_Name","ShelvedStateMachineType_LastTransition_Number","ShelvedStateMachineType_LastTransition_TransitionTime","ShelvedStateMachineType_Unshelved_StateNumber","ShelvedStateMachineType_TimedShelved_StateNumber","ShelvedStateMachineType_OneShotShelved_StateNumber","TimedShelveMethodType_InputArguments","LimitAlarmType_EventId","LimitAlarmType_EventType","LimitAlarmType_SourceNode","LimitAlarmType_SourceName","LimitAlarmType_Time","LimitAlarmType_ReceiveTime","LimitAlarmType_LocalTime","LimitAlarmType_Message","LimitAlarmType_Severity","LimitAlarmType_Retain","LimitAlarmType_ConditionRefresh_InputArguments","IdType_EnumStrings","MessageSecurityMode_EnumStrings","UserTokenType_EnumStrings","ApplicationType_EnumStrings","SecurityTokenRequestType_EnumStrings","BrowseDirection_EnumStrings","FilterOperator_EnumStrings","TimestampsToReturn_EnumStrings","MonitoringMode_EnumStrings","DataChangeTrigger_EnumStrings","DeadbandType_EnumStrings","RedundancySupport_EnumStrings","ServerState_EnumStrings","ExceptionDeviationFormat_EnumStrings","OpcUa_BinarySchema","OpcUa_BinarySchema_DataTypeVersion","OpcUa_BinarySchema_NamespaceUri","OpcUa_BinarySchema_Argument","OpcUa_BinarySchema_Argument_DataTypeVersion","OpcUa_BinarySchema_Argument_DictionaryFragment","OpcUa_BinarySchema_EnumValueType","OpcUa_BinarySchema_EnumValueType_DataTypeVersion","OpcUa_BinarySchema_EnumValueType_DictionaryFragment","OpcUa_BinarySchema_StatusResult","OpcUa_BinarySchema_StatusResult_DataTypeVersion","OpcUa_BinarySchema_StatusResult_DictionaryFragment","OpcUa_BinarySchema_UserTokenPolicy","OpcUa_BinarySchema_UserTokenPolicy_DataTypeVersion","OpcUa_BinarySchema_UserTokenPolicy_DictionaryFragment","OpcUa_BinarySchema_ApplicationDescription","OpcUa_BinarySchema_ApplicationDescription_DataTypeVersion","OpcUa_BinarySchema_ApplicationDescription_DictionaryFragment","OpcUa_BinarySchema_EndpointDescription","OpcUa_BinarySchema_EndpointDescription_DataTypeVersion","OpcUa_BinarySchema_EndpointDescription_DictionaryFragment","OpcUa_BinarySchema_UserIdentityToken","OpcUa_BinarySchema_UserIdentityToken_DataTypeVersion","OpcUa_BinarySchema_UserIdentityToken_DictionaryFragment","OpcUa_BinarySchema_AnonymousIdentityToken","OpcUa_BinarySchema_AnonymousIdentityToken_DataTypeVersion","OpcUa_BinarySchema_AnonymousIdentityToken_DictionaryFragment","OpcUa_BinarySchema_UserNameIdentityToken","OpcUa_BinarySchema_UserNameIdentityToken_DataTypeVersion","OpcUa_BinarySchema_UserNameIdentityToken_DictionaryFragment","OpcUa_BinarySchema_X509IdentityToken","OpcUa_BinarySchema_X509IdentityToken_DataTypeVersion","OpcUa_BinarySchema_X509IdentityToken_DictionaryFragment","OpcUa_BinarySchema_IssuedIdentityToken","OpcUa_BinarySchema_IssuedIdentityToken_DataTypeVersion","OpcUa_BinarySchema_IssuedIdentityToken_DictionaryFragment","OpcUa_BinarySchema_EndpointConfiguration","OpcUa_BinarySchema_EndpointConfiguration_DataTypeVersion","OpcUa_BinarySchema_EndpointConfiguration_DictionaryFragment","OpcUa_BinarySchema_BuildInfo","OpcUa_BinarySchema_BuildInfo_DataTypeVersion","OpcUa_BinarySchema_BuildInfo_DictionaryFragment","OpcUa_BinarySchema_SignedSoftwareCertificate","OpcUa_BinarySchema_SignedSoftwareCertificate_DataTypeVersion","OpcUa_BinarySchema_SignedSoftwareCertificate_DictionaryFragment","OpcUa_BinarySchema_AddNodesItem","OpcUa_BinarySchema_AddNodesItem_DataTypeVersion","OpcUa_BinarySchema_AddNodesItem_DictionaryFragment","OpcUa_BinarySchema_AddReferencesItem","OpcUa_BinarySchema_AddReferencesItem_DataTypeVersion","OpcUa_BinarySchema_AddReferencesItem_DictionaryFragment","OpcUa_BinarySchema_DeleteNodesItem","OpcUa_BinarySchema_DeleteNodesItem_DataTypeVersion","OpcUa_BinarySchema_DeleteNodesItem_DictionaryFragment","OpcUa_BinarySchema_DeleteReferencesItem","OpcUa_BinarySchema_DeleteReferencesItem_DataTypeVersion","OpcUa_BinarySchema_DeleteReferencesItem_DictionaryFragment","OpcUa_BinarySchema_RegisteredServer","OpcUa_BinarySchema_RegisteredServer_DataTypeVersion","OpcUa_BinarySchema_RegisteredServer_DictionaryFragment","OpcUa_BinarySchema_ContentFilterElement","OpcUa_BinarySchema_ContentFilterElement_DataTypeVersion","OpcUa_BinarySchema_ContentFilterElement_DictionaryFragment","OpcUa_BinarySchema_ContentFilter","OpcUa_BinarySchema_ContentFilter_DataTypeVersion","OpcUa_BinarySchema_ContentFilter_DictionaryFragment","OpcUa_BinarySchema_FilterOperand","OpcUa_BinarySchema_FilterOperand_DataTypeVersion","OpcUa_BinarySchema_FilterOperand_DictionaryFragment","OpcUa_BinarySchema_ElementOperand","OpcUa_BinarySchema_ElementOperand_DataTypeVersion","OpcUa_BinarySchema_ElementOperand_DictionaryFragment","OpcUa_BinarySchema_LiteralOperand","OpcUa_BinarySchema_LiteralOperand_DataTypeVersion","OpcUa_BinarySchema_LiteralOperand_DictionaryFragment","OpcUa_BinarySchema_AttributeOperand","OpcUa_BinarySchema_AttributeOperand_DataTypeVersion","OpcUa_BinarySchema_AttributeOperand_DictionaryFragment","OpcUa_BinarySchema_SimpleAttributeOperand","OpcUa_BinarySchema_SimpleAttributeOperand_DataTypeVersion","OpcUa_BinarySchema_SimpleAttributeOperand_DictionaryFragment","OpcUa_BinarySchema_HistoryEvent","OpcUa_BinarySchema_HistoryEvent_DataTypeVersion","OpcUa_BinarySchema_HistoryEvent_DictionaryFragment","OpcUa_BinarySchema_MonitoringFilter","OpcUa_BinarySchema_MonitoringFilter_DataTypeVersion","OpcUa_BinarySchema_MonitoringFilter_DictionaryFragment","OpcUa_BinarySchema_EventFilter","OpcUa_BinarySchema_EventFilter_DataTypeVersion","OpcUa_BinarySchema_EventFilter_DictionaryFragment","OpcUa_BinarySchema_AggregateConfiguration","OpcUa_BinarySchema_AggregateConfiguration_DataTypeVersion","OpcUa_BinarySchema_AggregateConfiguration_DictionaryFragment","OpcUa_BinarySchema_HistoryEventFieldList","OpcUa_BinarySchema_HistoryEventFieldList_DataTypeVersion","OpcUa_BinarySchema_HistoryEventFieldList_DictionaryFragment","OpcUa_BinarySchema_RedundantServerDataType","OpcUa_BinarySchema_RedundantServerDataType_DataTypeVersion","OpcUa_BinarySchema_RedundantServerDataType_DictionaryFragment","OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType","OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType_DataTypeVersion","OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType_DictionaryFragment","OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType","OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType_DataTypeVersion","OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType_DictionaryFragment","OpcUa_BinarySchema_ServerStatusDataType","OpcUa_BinarySchema_ServerStatusDataType_DataTypeVersion","OpcUa_BinarySchema_ServerStatusDataType_DictionaryFragment","OpcUa_BinarySchema_SessionDiagnosticsDataType","OpcUa_BinarySchema_SessionDiagnosticsDataType_DataTypeVersion","OpcUa_BinarySchema_SessionDiagnosticsDataType_DictionaryFragment","OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType","OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType_DataTypeVersion","OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType_DictionaryFragment","OpcUa_BinarySchema_ServiceCounterDataType","OpcUa_BinarySchema_ServiceCounterDataType_DataTypeVersion","OpcUa_BinarySchema_ServiceCounterDataType_DictionaryFragment","OpcUa_BinarySchema_SubscriptionDiagnosticsDataType","OpcUa_BinarySchema_SubscriptionDiagnosticsDataType_DataTypeVersion","OpcUa_BinarySchema_SubscriptionDiagnosticsDataType_DictionaryFragment","OpcUa_BinarySchema_ModelChangeStructureDataType","OpcUa_BinarySchema_ModelChangeStructureDataType_DataTypeVersion","OpcUa_BinarySchema_ModelChangeStructureDataType_DictionaryFragment","OpcUa_BinarySchema_SemanticChangeStructureDataType","OpcUa_BinarySchema_SemanticChangeStructureDataType_DataTypeVersion","OpcUa_BinarySchema_SemanticChangeStructureDataType_DictionaryFragment","OpcUa_BinarySchema_Range","OpcUa_BinarySchema_Range_DataTypeVersion","OpcUa_BinarySchema_Range_DictionaryFragment","OpcUa_BinarySchema_EUInformation","OpcUa_BinarySchema_EUInformation_DataTypeVersion","OpcUa_BinarySchema_EUInformation_DictionaryFragment","OpcUa_BinarySchema_Annotation","OpcUa_BinarySchema_Annotation_DataTypeVersion","OpcUa_BinarySchema_Annotation_DictionaryFragment","OpcUa_BinarySchema_ProgramDiagnosticDataType","OpcUa_BinarySchema_ProgramDiagnosticDataType_DataTypeVersion","OpcUa_BinarySchema_ProgramDiagnosticDataType_DictionaryFragment","OpcUa_XmlSchema","OpcUa_XmlSchema_DataTypeVersion","OpcUa_XmlSchema_NamespaceUri","OpcUa_XmlSchema_Argument","OpcUa_XmlSchema_Argument_DataTypeVersion","OpcUa_XmlSchema_Argument_DictionaryFragment","OpcUa_XmlSchema_EnumValueType","OpcUa_XmlSchema_EnumValueType_DataTypeVersion","OpcUa_XmlSchema_EnumValueType_DictionaryFragment","OpcUa_XmlSchema_StatusResult","OpcUa_XmlSchema_StatusResult_DataTypeVersion","OpcUa_XmlSchema_StatusResult_DictionaryFragment","OpcUa_XmlSchema_UserTokenPolicy","OpcUa_XmlSchema_UserTokenPolicy_DataTypeVersion","OpcUa_XmlSchema_UserTokenPolicy_DictionaryFragment","OpcUa_XmlSchema_ApplicationDescription","OpcUa_XmlSchema_ApplicationDescription_DataTypeVersion","OpcUa_XmlSchema_ApplicationDescription_DictionaryFragment","OpcUa_XmlSchema_EndpointDescription","OpcUa_XmlSchema_EndpointDescription_DataTypeVersion","OpcUa_XmlSchema_EndpointDescription_DictionaryFragment","OpcUa_XmlSchema_UserIdentityToken","OpcUa_XmlSchema_UserIdentityToken_DataTypeVersion","OpcUa_XmlSchema_UserIdentityToken_DictionaryFragment","OpcUa_XmlSchema_AnonymousIdentityToken","OpcUa_XmlSchema_AnonymousIdentityToken_DataTypeVersion","OpcUa_XmlSchema_AnonymousIdentityToken_DictionaryFragment","OpcUa_XmlSchema_UserNameIdentityToken","OpcUa_XmlSchema_UserNameIdentityToken_DataTypeVersion","OpcUa_XmlSchema_UserNameIdentityToken_DictionaryFragment","OpcUa_XmlSchema_X509IdentityToken","OpcUa_XmlSchema_X509IdentityToken_DataTypeVersion","OpcUa_XmlSchema_X509IdentityToken_DictionaryFragment","OpcUa_XmlSchema_IssuedIdentityToken","OpcUa_XmlSchema_IssuedIdentityToken_DataTypeVersion","OpcUa_XmlSchema_IssuedIdentityToken_DictionaryFragment","OpcUa_XmlSchema_EndpointConfiguration","OpcUa_XmlSchema_EndpointConfiguration_DataTypeVersion","OpcUa_XmlSchema_EndpointConfiguration_DictionaryFragment","OpcUa_XmlSchema_BuildInfo","OpcUa_XmlSchema_BuildInfo_DataTypeVersion","OpcUa_XmlSchema_BuildInfo_DictionaryFragment","OpcUa_XmlSchema_SignedSoftwareCertificate","OpcUa_XmlSchema_SignedSoftwareCertificate_DataTypeVersion","OpcUa_XmlSchema_SignedSoftwareCertificate_DictionaryFragment","OpcUa_XmlSchema_AddNodesItem","OpcUa_XmlSchema_AddNodesItem_DataTypeVersion","OpcUa_XmlSchema_AddNodesItem_DictionaryFragment","OpcUa_XmlSchema_AddReferencesItem","OpcUa_XmlSchema_AddReferencesItem_DataTypeVersion","OpcUa_XmlSchema_AddReferencesItem_DictionaryFragment","OpcUa_XmlSchema_DeleteNodesItem","OpcUa_XmlSchema_DeleteNodesItem_DataTypeVersion","OpcUa_XmlSchema_DeleteNodesItem_DictionaryFragment","OpcUa_XmlSchema_DeleteReferencesItem","OpcUa_XmlSchema_DeleteReferencesItem_DataTypeVersion","OpcUa_XmlSchema_DeleteReferencesItem_DictionaryFragment","OpcUa_XmlSchema_RegisteredServer","OpcUa_XmlSchema_RegisteredServer_DataTypeVersion","OpcUa_XmlSchema_RegisteredServer_DictionaryFragment","OpcUa_XmlSchema_ContentFilterElement","OpcUa_XmlSchema_ContentFilterElement_DataTypeVersion","OpcUa_XmlSchema_ContentFilterElement_DictionaryFragment","OpcUa_XmlSchema_ContentFilter","OpcUa_XmlSchema_ContentFilter_DataTypeVersion","OpcUa_XmlSchema_ContentFilter_DictionaryFragment","OpcUa_XmlSchema_FilterOperand","OpcUa_XmlSchema_FilterOperand_DataTypeVersion","OpcUa_XmlSchema_FilterOperand_DictionaryFragment","OpcUa_XmlSchema_ElementOperand","OpcUa_XmlSchema_ElementOperand_DataTypeVersion","OpcUa_XmlSchema_ElementOperand_DictionaryFragment","OpcUa_XmlSchema_LiteralOperand","OpcUa_XmlSchema_LiteralOperand_DataTypeVersion","OpcUa_XmlSchema_LiteralOperand_DictionaryFragment","OpcUa_XmlSchema_AttributeOperand","OpcUa_XmlSchema_AttributeOperand_DataTypeVersion","OpcUa_XmlSchema_AttributeOperand_DictionaryFragment","OpcUa_XmlSchema_SimpleAttributeOperand","OpcUa_XmlSchema_SimpleAttributeOperand_DataTypeVersion","OpcUa_XmlSchema_SimpleAttributeOperand_DictionaryFragment","OpcUa_XmlSchema_HistoryEvent","OpcUa_XmlSchema_HistoryEvent_DataTypeVersion","OpcUa_XmlSchema_HistoryEvent_DictionaryFragment","OpcUa_XmlSchema_MonitoringFilter","OpcUa_XmlSchema_MonitoringFilter_DataTypeVersion","OpcUa_XmlSchema_MonitoringFilter_DictionaryFragment","OpcUa_XmlSchema_EventFilter","OpcUa_XmlSchema_EventFilter_DataTypeVersion","OpcUa_XmlSchema_EventFilter_DictionaryFragment","OpcUa_XmlSchema_AggregateConfiguration","OpcUa_XmlSchema_AggregateConfiguration_DataTypeVersion","OpcUa_XmlSchema_AggregateConfiguration_DictionaryFragment","OpcUa_XmlSchema_HistoryEventFieldList","OpcUa_XmlSchema_HistoryEventFieldList_DataTypeVersion","OpcUa_XmlSchema_HistoryEventFieldList_DictionaryFragment","OpcUa_XmlSchema_RedundantServerDataType","OpcUa_XmlSchema_RedundantServerDataType_DataTypeVersion","OpcUa_XmlSchema_RedundantServerDataType_DictionaryFragment","OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType","OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType_DataTypeVersion","OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType_DictionaryFragment","OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType","OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType_DataTypeVersion","OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType_DictionaryFragment","OpcUa_XmlSchema_ServerStatusDataType","OpcUa_XmlSchema_ServerStatusDataType_DataTypeVersion","OpcUa_XmlSchema_ServerStatusDataType_DictionaryFragment","OpcUa_XmlSchema_SessionDiagnosticsDataType","OpcUa_XmlSchema_SessionDiagnosticsDataType_DataTypeVersion","OpcUa_XmlSchema_SessionDiagnosticsDataType_DictionaryFragment","OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType","OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType_DataTypeVersion","OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType_DictionaryFragment","OpcUa_XmlSchema_ServiceCounterDataType","OpcUa_XmlSchema_ServiceCounterDataType_DataTypeVersion","OpcUa_XmlSchema_ServiceCounterDataType_DictionaryFragment","OpcUa_XmlSchema_SubscriptionDiagnosticsDataType","OpcUa_XmlSchema_SubscriptionDiagnosticsDataType_DataTypeVersion","OpcUa_XmlSchema_SubscriptionDiagnosticsDataType_DictionaryFragment","OpcUa_XmlSchema_ModelChangeStructureDataType","OpcUa_XmlSchema_ModelChangeStructureDataType_DataTypeVersion","OpcUa_XmlSchema_ModelChangeStructureDataType_DictionaryFragment","OpcUa_XmlSchema_SemanticChangeStructureDataType","OpcUa_XmlSchema_SemanticChangeStructureDataType_DataTypeVersion","OpcUa_XmlSchema_SemanticChangeStructureDataType_DictionaryFragment","OpcUa_XmlSchema_Range","OpcUa_XmlSchema_Range_DataTypeVersion","OpcUa_XmlSchema_Range_DictionaryFragment","OpcUa_XmlSchema_EUInformation","OpcUa_XmlSchema_EUInformation_DataTypeVersion","OpcUa_XmlSchema_EUInformation_DictionaryFragment","OpcUa_XmlSchema_Annotation","OpcUa_XmlSchema_Annotation_DataTypeVersion","OpcUa_XmlSchema_Annotation_DictionaryFragment","OpcUa_XmlSchema_ProgramDiagnosticDataType","OpcUa_XmlSchema_ProgramDiagnosticDataType_DataTypeVersion","OpcUa_XmlSchema_ProgramDiagnosticDataType_DictionaryFragment","SubscriptionDiagnosticsType_MaxLifetimeCount","SubscriptionDiagnosticsType_LatePublishRequestCount","SubscriptionDiagnosticsType_CurrentKeepAliveCount","SubscriptionDiagnosticsType_CurrentLifetimeCount","SubscriptionDiagnosticsType_UnacknowledgedMessageCount","SubscriptionDiagnosticsType_DiscardedMessageCount","SubscriptionDiagnosticsType_MonitoredItemCount","SubscriptionDiagnosticsType_DisabledMonitoredItemCount","SubscriptionDiagnosticsType_MonitoringQueueOverflowCount","SubscriptionDiagnosticsType_NextSequenceNumber","SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount","SessionDiagnosticsVariableType_TotalRequestCount","SubscriptionDiagnosticsType_EventQueueOverflowCount","OpcUa_BinarySchema_TimeZoneDataType","OpcUa_BinarySchema_TimeZoneDataType_DataTypeVersion","OpcUa_BinarySchema_TimeZoneDataType_DictionaryFragment","OpcUa_XmlSchema_TimeZoneDataType","OpcUa_XmlSchema_TimeZoneDataType_DataTypeVersion","OpcUa_XmlSchema_TimeZoneDataType_DictionaryFragment","AuditConditionRespondEventType_EventId","AuditConditionRespondEventType_EventType","AuditConditionRespondEventType_SourceNode","AuditConditionRespondEventType_SourceName","AuditConditionRespondEventType_Time","AuditConditionRespondEventType_ReceiveTime","AuditConditionRespondEventType_LocalTime","AuditConditionRespondEventType_Message","AuditConditionRespondEventType_Severity","AuditConditionRespondEventType_ActionTimeStamp","AuditConditionRespondEventType_Status","AuditConditionRespondEventType_ServerId","AuditConditionRespondEventType_ClientAuditEntryId","AuditConditionRespondEventType_ClientUserId","AuditConditionRespondEventType_MethodId","AuditConditionRespondEventType_InputArguments","AuditConditionAcknowledgeEventType_EventId","AuditConditionAcknowledgeEventType_EventType","AuditConditionAcknowledgeEventType_SourceNode","AuditConditionAcknowledgeEventType_SourceName","AuditConditionAcknowledgeEventType_Time","AuditConditionAcknowledgeEventType_ReceiveTime","AuditConditionAcknowledgeEventType_LocalTime","AuditConditionAcknowledgeEventType_Message","AuditConditionAcknowledgeEventType_Severity","AuditConditionAcknowledgeEventType_ActionTimeStamp","AuditConditionAcknowledgeEventType_Status","AuditConditionAcknowledgeEventType_ServerId","AuditConditionAcknowledgeEventType_ClientAuditEntryId","AuditConditionAcknowledgeEventType_ClientUserId","AuditConditionAcknowledgeEventType_MethodId","AuditConditionAcknowledgeEventType_InputArguments","AuditConditionConfirmEventType_EventId","AuditConditionConfirmEventType_EventType","AuditConditionConfirmEventType_SourceNode","AuditConditionConfirmEventType_SourceName","AuditConditionConfirmEventType_Time","AuditConditionConfirmEventType_ReceiveTime","AuditConditionConfirmEventType_LocalTime","AuditConditionConfirmEventType_Message","AuditConditionConfirmEventType_Severity","AuditConditionConfirmEventType_ActionTimeStamp","AuditConditionConfirmEventType_Status","AuditConditionConfirmEventType_ServerId","AuditConditionConfirmEventType_ClientAuditEntryId","AuditConditionConfirmEventType_ClientUserId","AuditConditionConfirmEventType_MethodId","AuditConditionConfirmEventType_InputArguments","TwoStateVariableType_Id","TwoStateVariableType_Name","TwoStateVariableType_Number","TwoStateVariableType_EffectiveDisplayName","TwoStateVariableType_TransitionTime","TwoStateVariableType_EffectiveTransitionTime","ConditionVariableType_SourceTimestamp","ConditionRefreshMethodType_InputArguments","ConditionType_ConditionName","ConditionType_BranchId","ConditionType_EnabledState","ConditionType_EnabledState_Id","ConditionType_EnabledState_Name","ConditionType_EnabledState_Number","ConditionType_EnabledState_EffectiveDisplayName","ConditionType_EnabledState_TransitionTime","ConditionType_EnabledState_EffectiveTransitionTime","ConditionType_EnabledState_TrueState","ConditionType_EnabledState_FalseState","ConditionType_Quality","ConditionType_Quality_SourceTimestamp","ConditionType_LastSeverity","ConditionType_LastSeverity_SourceTimestamp","ConditionType_Comment","ConditionType_Comment_SourceTimestamp","ConditionType_ClientUserId","ConditionType_AddComment_InputArguments","DialogResponseMethodType_InputArguments","DialogConditionType_ConditionName","DialogConditionType_BranchId","DialogConditionType_EnabledState","DialogConditionType_EnabledState_Id","DialogConditionType_EnabledState_Name","DialogConditionType_EnabledState_Number","DialogConditionType_EnabledState_EffectiveDisplayName","DialogConditionType_EnabledState_TransitionTime","DialogConditionType_EnabledState_EffectiveTransitionTime","DialogConditionType_EnabledState_TrueState","DialogConditionType_EnabledState_FalseState","DialogConditionType_Quality","DialogConditionType_Quality_SourceTimestamp","DialogConditionType_LastSeverity","DialogConditionType_LastSeverity_SourceTimestamp","DialogConditionType_Comment","DialogConditionType_Comment_SourceTimestamp","DialogConditionType_ClientUserId","DialogConditionType_AddComment_InputArguments","DialogConditionType_DialogState","DialogConditionType_DialogState_Id","DialogConditionType_DialogState_Name","DialogConditionType_DialogState_Number","DialogConditionType_DialogState_EffectiveDisplayName","DialogConditionType_DialogState_TransitionTime","DialogConditionType_DialogState_EffectiveTransitionTime","DialogConditionType_DialogState_TrueState","DialogConditionType_DialogState_FalseState","DialogConditionType_ResponseOptionSet","DialogConditionType_DefaultResponse","DialogConditionType_OkResponse","DialogConditionType_CancelResponse","DialogConditionType_LastResponse","DialogConditionType_Respond_InputArguments","AcknowledgeableConditionType_ConditionName","AcknowledgeableConditionType_BranchId","AcknowledgeableConditionType_EnabledState","AcknowledgeableConditionType_EnabledState_Id","AcknowledgeableConditionType_EnabledState_Name","AcknowledgeableConditionType_EnabledState_Number","AcknowledgeableConditionType_EnabledState_EffectiveDisplayName","AcknowledgeableConditionType_EnabledState_TransitionTime","AcknowledgeableConditionType_EnabledState_EffectiveTransitionTime","AcknowledgeableConditionType_EnabledState_TrueState","AcknowledgeableConditionType_EnabledState_FalseState","AcknowledgeableConditionType_Quality","AcknowledgeableConditionType_Quality_SourceTimestamp","AcknowledgeableConditionType_LastSeverity","AcknowledgeableConditionType_LastSeverity_SourceTimestamp","AcknowledgeableConditionType_Comment","AcknowledgeableConditionType_Comment_SourceTimestamp","AcknowledgeableConditionType_ClientUserId","AcknowledgeableConditionType_AddComment_InputArguments","AcknowledgeableConditionType_AckedState","AcknowledgeableConditionType_AckedState_Id","AcknowledgeableConditionType_AckedState_Name","AcknowledgeableConditionType_AckedState_Number","AcknowledgeableConditionType_AckedState_EffectiveDisplayName","AcknowledgeableConditionType_AckedState_TransitionTime","AcknowledgeableConditionType_AckedState_EffectiveTransitionTime","AcknowledgeableConditionType_AckedState_TrueState","AcknowledgeableConditionType_AckedState_FalseState","AcknowledgeableConditionType_ConfirmedState","AcknowledgeableConditionType_ConfirmedState_Id","AcknowledgeableConditionType_ConfirmedState_Name","AcknowledgeableConditionType_ConfirmedState_Number","AcknowledgeableConditionType_ConfirmedState_EffectiveDisplayName","AcknowledgeableConditionType_ConfirmedState_TransitionTime","AcknowledgeableConditionType_ConfirmedState_EffectiveTransitionTime","AcknowledgeableConditionType_ConfirmedState_TrueState","AcknowledgeableConditionType_ConfirmedState_FalseState","AcknowledgeableConditionType_Acknowledge_InputArguments","AcknowledgeableConditionType_Confirm_InputArguments","ShelvedStateMachineType_UnshelveTime","AlarmConditionType_ConditionName","AlarmConditionType_BranchId","AlarmConditionType_EnabledState","AlarmConditionType_EnabledState_Id","AlarmConditionType_EnabledState_Name","AlarmConditionType_EnabledState_Number","AlarmConditionType_EnabledState_EffectiveDisplayName","AlarmConditionType_EnabledState_TransitionTime","AlarmConditionType_EnabledState_EffectiveTransitionTime","AlarmConditionType_EnabledState_TrueState","AlarmConditionType_EnabledState_FalseState","AlarmConditionType_Quality","AlarmConditionType_Quality_SourceTimestamp","AlarmConditionType_LastSeverity","AlarmConditionType_LastSeverity_SourceTimestamp","AlarmConditionType_Comment","AlarmConditionType_Comment_SourceTimestamp","AlarmConditionType_ClientUserId","AlarmConditionType_AddComment_InputArguments","AlarmConditionType_AckedState","AlarmConditionType_AckedState_Id","AlarmConditionType_AckedState_Name","AlarmConditionType_AckedState_Number","AlarmConditionType_AckedState_EffectiveDisplayName","AlarmConditionType_AckedState_TransitionTime","AlarmConditionType_AckedState_EffectiveTransitionTime","AlarmConditionType_AckedState_TrueState","AlarmConditionType_AckedState_FalseState","AlarmConditionType_ConfirmedState","AlarmConditionType_ConfirmedState_Id","AlarmConditionType_ConfirmedState_Name","AlarmConditionType_ConfirmedState_Number","AlarmConditionType_ConfirmedState_EffectiveDisplayName","AlarmConditionType_ConfirmedState_TransitionTime","AlarmConditionType_ConfirmedState_EffectiveTransitionTime","AlarmConditionType_ConfirmedState_TrueState","AlarmConditionType_ConfirmedState_FalseState","AlarmConditionType_Acknowledge_InputArguments","AlarmConditionType_Confirm_InputArguments","AlarmConditionType_ActiveState","AlarmConditionType_ActiveState_Id","AlarmConditionType_ActiveState_Name","AlarmConditionType_ActiveState_Number","AlarmConditionType_ActiveState_EffectiveDisplayName","AlarmConditionType_ActiveState_TransitionTime","AlarmConditionType_ActiveState_EffectiveTransitionTime","AlarmConditionType_ActiveState_TrueState","AlarmConditionType_ActiveState_FalseState","AlarmConditionType_SuppressedState","AlarmConditionType_SuppressedState_Id","AlarmConditionType_SuppressedState_Name","AlarmConditionType_SuppressedState_Number","AlarmConditionType_SuppressedState_EffectiveDisplayName","AlarmConditionType_SuppressedState_TransitionTime","AlarmConditionType_SuppressedState_EffectiveTransitionTime","AlarmConditionType_SuppressedState_TrueState","AlarmConditionType_SuppressedState_FalseState","AlarmConditionType_ShelvingState_CurrentState","AlarmConditionType_ShelvingState_CurrentState_Id","AlarmConditionType_ShelvingState_CurrentState_Name","AlarmConditionType_ShelvingState_CurrentState_Number","AlarmConditionType_ShelvingState_CurrentState_EffectiveDisplayName","AlarmConditionType_ShelvingState_LastTransition","AlarmConditionType_ShelvingState_LastTransition_Id","AlarmConditionType_ShelvingState_LastTransition_Name","AlarmConditionType_ShelvingState_LastTransition_Number","AlarmConditionType_ShelvingState_LastTransition_TransitionTime","AlarmConditionType_ShelvingState_UnshelveTime","AlarmConditionType_ShelvingState_TimedShelve_InputArguments","AlarmConditionType_SuppressedOrShelved","AlarmConditionType_MaxTimeShelved","LimitAlarmType_ConditionName","LimitAlarmType_BranchId","LimitAlarmType_EnabledState","LimitAlarmType_EnabledState_Id","LimitAlarmType_EnabledState_Name","LimitAlarmType_EnabledState_Number","LimitAlarmType_EnabledState_EffectiveDisplayName","LimitAlarmType_EnabledState_TransitionTime","LimitAlarmType_EnabledState_EffectiveTransitionTime","LimitAlarmType_EnabledState_TrueState","LimitAlarmType_EnabledState_FalseState","LimitAlarmType_Quality","LimitAlarmType_Quality_SourceTimestamp","LimitAlarmType_LastSeverity","LimitAlarmType_LastSeverity_SourceTimestamp","LimitAlarmType_Comment","LimitAlarmType_Comment_SourceTimestamp","LimitAlarmType_ClientUserId","LimitAlarmType_AddComment_InputArguments","LimitAlarmType_AckedState","LimitAlarmType_AckedState_Id","LimitAlarmType_AckedState_Name","LimitAlarmType_AckedState_Number","LimitAlarmType_AckedState_EffectiveDisplayName","LimitAlarmType_AckedState_TransitionTime","LimitAlarmType_AckedState_EffectiveTransitionTime","LimitAlarmType_AckedState_TrueState","LimitAlarmType_AckedState_FalseState","LimitAlarmType_ConfirmedState","LimitAlarmType_ConfirmedState_Id","LimitAlarmType_ConfirmedState_Name","LimitAlarmType_ConfirmedState_Number","LimitAlarmType_ConfirmedState_EffectiveDisplayName","LimitAlarmType_ConfirmedState_TransitionTime","LimitAlarmType_ConfirmedState_EffectiveTransitionTime","LimitAlarmType_ConfirmedState_TrueState","LimitAlarmType_ConfirmedState_FalseState","LimitAlarmType_Acknowledge_InputArguments","LimitAlarmType_Confirm_InputArguments","LimitAlarmType_ActiveState","LimitAlarmType_ActiveState_Id","LimitAlarmType_ActiveState_Name","LimitAlarmType_ActiveState_Number","LimitAlarmType_ActiveState_EffectiveDisplayName","LimitAlarmType_ActiveState_TransitionTime","LimitAlarmType_ActiveState_EffectiveTransitionTime","LimitAlarmType_ActiveState_TrueState","LimitAlarmType_ActiveState_FalseState","LimitAlarmType_SuppressedState","LimitAlarmType_SuppressedState_Id","LimitAlarmType_SuppressedState_Name","LimitAlarmType_SuppressedState_Number","LimitAlarmType_SuppressedState_EffectiveDisplayName","LimitAlarmType_SuppressedState_TransitionTime","LimitAlarmType_SuppressedState_EffectiveTransitionTime","LimitAlarmType_SuppressedState_TrueState","LimitAlarmType_SuppressedState_FalseState","LimitAlarmType_ShelvingState_CurrentState","LimitAlarmType_ShelvingState_CurrentState_Id","LimitAlarmType_ShelvingState_CurrentState_Name","LimitAlarmType_ShelvingState_CurrentState_Number","LimitAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","LimitAlarmType_ShelvingState_LastTransition","LimitAlarmType_ShelvingState_LastTransition_Id","LimitAlarmType_ShelvingState_LastTransition_Name","LimitAlarmType_ShelvingState_LastTransition_Number","LimitAlarmType_ShelvingState_LastTransition_TransitionTime","LimitAlarmType_ShelvingState_UnshelveTime","LimitAlarmType_ShelvingState_TimedShelve_InputArguments","LimitAlarmType_SuppressedOrShelved","LimitAlarmType_MaxTimeShelved","ExclusiveLimitStateMachineType_CurrentState","ExclusiveLimitStateMachineType_CurrentState_Id","ExclusiveLimitStateMachineType_CurrentState_Name","ExclusiveLimitStateMachineType_CurrentState_Number","ExclusiveLimitStateMachineType_CurrentState_EffectiveDisplayName","ExclusiveLimitStateMachineType_LastTransition","ExclusiveLimitStateMachineType_LastTransition_Id","ExclusiveLimitStateMachineType_LastTransition_Name","ExclusiveLimitStateMachineType_LastTransition_Number","ExclusiveLimitStateMachineType_LastTransition_TransitionTime","ExclusiveLimitStateMachineType_HighHigh_StateNumber","ExclusiveLimitStateMachineType_High_StateNumber","ExclusiveLimitStateMachineType_Low_StateNumber","ExclusiveLimitStateMachineType_LowLow_StateNumber","ExclusiveLimitAlarmType_EventId","ExclusiveLimitAlarmType_EventType","ExclusiveLimitAlarmType_SourceNode","ExclusiveLimitAlarmType_SourceName","ExclusiveLimitAlarmType_Time","ExclusiveLimitAlarmType_ReceiveTime","ExclusiveLimitAlarmType_LocalTime","ExclusiveLimitAlarmType_Message","ExclusiveLimitAlarmType_Severity","ExclusiveLimitAlarmType_ConditionName","ExclusiveLimitAlarmType_BranchId","ExclusiveLimitAlarmType_Retain","ExclusiveLimitAlarmType_EnabledState","ExclusiveLimitAlarmType_EnabledState_Id","ExclusiveLimitAlarmType_EnabledState_Name","ExclusiveLimitAlarmType_EnabledState_Number","ExclusiveLimitAlarmType_EnabledState_EffectiveDisplayName","ExclusiveLimitAlarmType_EnabledState_TransitionTime","ExclusiveLimitAlarmType_EnabledState_EffectiveTransitionTime","ExclusiveLimitAlarmType_EnabledState_TrueState","ExclusiveLimitAlarmType_EnabledState_FalseState","ExclusiveLimitAlarmType_Quality","ExclusiveLimitAlarmType_Quality_SourceTimestamp","ExclusiveLimitAlarmType_LastSeverity","ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp","ExclusiveLimitAlarmType_Comment","ExclusiveLimitAlarmType_Comment_SourceTimestamp","ExclusiveLimitAlarmType_ClientUserId","ExclusiveLimitAlarmType_AddComment_InputArguments","ExclusiveLimitAlarmType_ConditionRefresh_InputArguments","ExclusiveLimitAlarmType_AckedState","ExclusiveLimitAlarmType_AckedState_Id","ExclusiveLimitAlarmType_AckedState_Name","ExclusiveLimitAlarmType_AckedState_Number","ExclusiveLimitAlarmType_AckedState_EffectiveDisplayName","ExclusiveLimitAlarmType_AckedState_TransitionTime","ExclusiveLimitAlarmType_AckedState_EffectiveTransitionTime","ExclusiveLimitAlarmType_AckedState_TrueState","ExclusiveLimitAlarmType_AckedState_FalseState","ExclusiveLimitAlarmType_ConfirmedState","ExclusiveLimitAlarmType_ConfirmedState_Id","ExclusiveLimitAlarmType_ConfirmedState_Name","ExclusiveLimitAlarmType_ConfirmedState_Number","ExclusiveLimitAlarmType_ConfirmedState_EffectiveDisplayName","ExclusiveLimitAlarmType_ConfirmedState_TransitionTime","ExclusiveLimitAlarmType_ConfirmedState_EffectiveTransitionTime","ExclusiveLimitAlarmType_ConfirmedState_TrueState","ExclusiveLimitAlarmType_ConfirmedState_FalseState","ExclusiveLimitAlarmType_Acknowledge_InputArguments","ExclusiveLimitAlarmType_Confirm_InputArguments","ExclusiveLimitAlarmType_ActiveState","ExclusiveLimitAlarmType_ActiveState_Id","ExclusiveLimitAlarmType_ActiveState_Name","ExclusiveLimitAlarmType_ActiveState_Number","ExclusiveLimitAlarmType_ActiveState_EffectiveDisplayName","ExclusiveLimitAlarmType_ActiveState_TransitionTime","ExclusiveLimitAlarmType_ActiveState_EffectiveTransitionTime","ExclusiveLimitAlarmType_ActiveState_TrueState","ExclusiveLimitAlarmType_ActiveState_FalseState","ExclusiveLimitAlarmType_SuppressedState","ExclusiveLimitAlarmType_SuppressedState_Id","ExclusiveLimitAlarmType_SuppressedState_Name","ExclusiveLimitAlarmType_SuppressedState_Number","ExclusiveLimitAlarmType_SuppressedState_EffectiveDisplayName","ExclusiveLimitAlarmType_SuppressedState_TransitionTime","ExclusiveLimitAlarmType_SuppressedState_EffectiveTransitionTime","ExclusiveLimitAlarmType_SuppressedState_TrueState","ExclusiveLimitAlarmType_SuppressedState_FalseState","ExclusiveLimitAlarmType_ShelvingState_CurrentState","ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id","ExclusiveLimitAlarmType_ShelvingState_CurrentState_Name","ExclusiveLimitAlarmType_ShelvingState_CurrentState_Number","ExclusiveLimitAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","ExclusiveLimitAlarmType_ShelvingState_LastTransition","ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id","ExclusiveLimitAlarmType_ShelvingState_LastTransition_Name","ExclusiveLimitAlarmType_ShelvingState_LastTransition_Number","ExclusiveLimitAlarmType_ShelvingState_LastTransition_TransitionTime","ExclusiveLimitAlarmType_ShelvingState_UnshelveTime","ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments","ExclusiveLimitAlarmType_SuppressedOrShelved","ExclusiveLimitAlarmType_MaxTimeShelved","ExclusiveLimitAlarmType_LimitState_CurrentState","ExclusiveLimitAlarmType_LimitState_CurrentState_Id","ExclusiveLimitAlarmType_LimitState_CurrentState_Name","ExclusiveLimitAlarmType_LimitState_CurrentState_Number","ExclusiveLimitAlarmType_LimitState_CurrentState_EffectiveDisplayName","ExclusiveLimitAlarmType_LimitState_LastTransition","ExclusiveLimitAlarmType_LimitState_LastTransition_Id","ExclusiveLimitAlarmType_LimitState_LastTransition_Name","ExclusiveLimitAlarmType_LimitState_LastTransition_Number","ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime","ExclusiveLimitAlarmType_HighHighLimit","ExclusiveLimitAlarmType_HighLimit","ExclusiveLimitAlarmType_LowLimit","ExclusiveLimitAlarmType_LowLowLimit","ExclusiveLevelAlarmType_EventId","ExclusiveLevelAlarmType_EventType","ExclusiveLevelAlarmType_SourceNode","ExclusiveLevelAlarmType_SourceName","ExclusiveLevelAlarmType_Time","ExclusiveLevelAlarmType_ReceiveTime","ExclusiveLevelAlarmType_LocalTime","ExclusiveLevelAlarmType_Message","ExclusiveLevelAlarmType_Severity","ExclusiveLevelAlarmType_ConditionName","ExclusiveLevelAlarmType_BranchId","ExclusiveLevelAlarmType_Retain","ExclusiveLevelAlarmType_EnabledState","ExclusiveLevelAlarmType_EnabledState_Id","ExclusiveLevelAlarmType_EnabledState_Name","ExclusiveLevelAlarmType_EnabledState_Number","ExclusiveLevelAlarmType_EnabledState_EffectiveDisplayName","ExclusiveLevelAlarmType_EnabledState_TransitionTime","ExclusiveLevelAlarmType_EnabledState_EffectiveTransitionTime","ExclusiveLevelAlarmType_EnabledState_TrueState","ExclusiveLevelAlarmType_EnabledState_FalseState","ExclusiveLevelAlarmType_Quality","ExclusiveLevelAlarmType_Quality_SourceTimestamp","ExclusiveLevelAlarmType_LastSeverity","ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp","ExclusiveLevelAlarmType_Comment","ExclusiveLevelAlarmType_Comment_SourceTimestamp","ExclusiveLevelAlarmType_ClientUserId","ExclusiveLevelAlarmType_AddComment_InputArguments","ExclusiveLevelAlarmType_ConditionRefresh_InputArguments","ExclusiveLevelAlarmType_AckedState","ExclusiveLevelAlarmType_AckedState_Id","ExclusiveLevelAlarmType_AckedState_Name","ExclusiveLevelAlarmType_AckedState_Number","ExclusiveLevelAlarmType_AckedState_EffectiveDisplayName","ExclusiveLevelAlarmType_AckedState_TransitionTime","ExclusiveLevelAlarmType_AckedState_EffectiveTransitionTime","ExclusiveLevelAlarmType_AckedState_TrueState","ExclusiveLevelAlarmType_AckedState_FalseState","ExclusiveLevelAlarmType_ConfirmedState","ExclusiveLevelAlarmType_ConfirmedState_Id","ExclusiveLevelAlarmType_ConfirmedState_Name","ExclusiveLevelAlarmType_ConfirmedState_Number","ExclusiveLevelAlarmType_ConfirmedState_EffectiveDisplayName","ExclusiveLevelAlarmType_ConfirmedState_TransitionTime","ExclusiveLevelAlarmType_ConfirmedState_EffectiveTransitionTime","ExclusiveLevelAlarmType_ConfirmedState_TrueState","ExclusiveLevelAlarmType_ConfirmedState_FalseState","ExclusiveLevelAlarmType_Acknowledge_InputArguments","ExclusiveLevelAlarmType_Confirm_InputArguments","ExclusiveLevelAlarmType_ActiveState","ExclusiveLevelAlarmType_ActiveState_Id","ExclusiveLevelAlarmType_ActiveState_Name","ExclusiveLevelAlarmType_ActiveState_Number","ExclusiveLevelAlarmType_ActiveState_EffectiveDisplayName","ExclusiveLevelAlarmType_ActiveState_TransitionTime","ExclusiveLevelAlarmType_ActiveState_EffectiveTransitionTime","ExclusiveLevelAlarmType_ActiveState_TrueState","ExclusiveLevelAlarmType_ActiveState_FalseState","ExclusiveLevelAlarmType_SuppressedState","ExclusiveLevelAlarmType_SuppressedState_Id","ExclusiveLevelAlarmType_SuppressedState_Name","ExclusiveLevelAlarmType_SuppressedState_Number","ExclusiveLevelAlarmType_SuppressedState_EffectiveDisplayName","ExclusiveLevelAlarmType_SuppressedState_TransitionTime","ExclusiveLevelAlarmType_SuppressedState_EffectiveTransitionTime","ExclusiveLevelAlarmType_SuppressedState_TrueState","ExclusiveLevelAlarmType_SuppressedState_FalseState","ExclusiveLevelAlarmType_ShelvingState_CurrentState","ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id","ExclusiveLevelAlarmType_ShelvingState_CurrentState_Name","ExclusiveLevelAlarmType_ShelvingState_CurrentState_Number","ExclusiveLevelAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","ExclusiveLevelAlarmType_ShelvingState_LastTransition","ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id","ExclusiveLevelAlarmType_ShelvingState_LastTransition_Name","ExclusiveLevelAlarmType_ShelvingState_LastTransition_Number","ExclusiveLevelAlarmType_ShelvingState_LastTransition_TransitionTime","ExclusiveLevelAlarmType_ShelvingState_UnshelveTime","ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments","ExclusiveLevelAlarmType_SuppressedOrShelved","ExclusiveLevelAlarmType_MaxTimeShelved","ExclusiveLevelAlarmType_LimitState_CurrentState","ExclusiveLevelAlarmType_LimitState_CurrentState_Id","ExclusiveLevelAlarmType_LimitState_CurrentState_Name","ExclusiveLevelAlarmType_LimitState_CurrentState_Number","ExclusiveLevelAlarmType_LimitState_CurrentState_EffectiveDisplayName","ExclusiveLevelAlarmType_LimitState_LastTransition","ExclusiveLevelAlarmType_LimitState_LastTransition_Id","ExclusiveLevelAlarmType_LimitState_LastTransition_Name","ExclusiveLevelAlarmType_LimitState_LastTransition_Number","ExclusiveLevelAlarmType_LimitState_LastTransition_TransitionTime","ExclusiveLevelAlarmType_HighHighLimit","ExclusiveLevelAlarmType_HighLimit","ExclusiveLevelAlarmType_LowLimit","ExclusiveLevelAlarmType_LowLowLimit","ExclusiveRateOfChangeAlarmType_EventId","ExclusiveRateOfChangeAlarmType_EventType","ExclusiveRateOfChangeAlarmType_SourceNode","ExclusiveRateOfChangeAlarmType_SourceName","ExclusiveRateOfChangeAlarmType_Time","ExclusiveRateOfChangeAlarmType_ReceiveTime","ExclusiveRateOfChangeAlarmType_LocalTime","ExclusiveRateOfChangeAlarmType_Message","ExclusiveRateOfChangeAlarmType_Severity","ExclusiveRateOfChangeAlarmType_ConditionName","ExclusiveRateOfChangeAlarmType_BranchId","ExclusiveRateOfChangeAlarmType_Retain","ExclusiveRateOfChangeAlarmType_EnabledState","ExclusiveRateOfChangeAlarmType_EnabledState_Id","ExclusiveRateOfChangeAlarmType_EnabledState_Name","ExclusiveRateOfChangeAlarmType_EnabledState_Number","ExclusiveRateOfChangeAlarmType_EnabledState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_EnabledState_TransitionTime","ExclusiveRateOfChangeAlarmType_EnabledState_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_EnabledState_TrueState","ExclusiveRateOfChangeAlarmType_EnabledState_FalseState","ExclusiveRateOfChangeAlarmType_Quality","ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp","ExclusiveRateOfChangeAlarmType_LastSeverity","ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp","ExclusiveRateOfChangeAlarmType_Comment","ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp","ExclusiveRateOfChangeAlarmType_ClientUserId","ExclusiveRateOfChangeAlarmType_AddComment_InputArguments","ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments","ExclusiveRateOfChangeAlarmType_AckedState","ExclusiveRateOfChangeAlarmType_AckedState_Id","ExclusiveRateOfChangeAlarmType_AckedState_Name","ExclusiveRateOfChangeAlarmType_AckedState_Number","ExclusiveRateOfChangeAlarmType_AckedState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_AckedState_TransitionTime","ExclusiveRateOfChangeAlarmType_AckedState_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_AckedState_TrueState","ExclusiveRateOfChangeAlarmType_AckedState_FalseState","ExclusiveRateOfChangeAlarmType_ConfirmedState","ExclusiveRateOfChangeAlarmType_ConfirmedState_Id","ExclusiveRateOfChangeAlarmType_ConfirmedState_Name","ExclusiveRateOfChangeAlarmType_ConfirmedState_Number","ExclusiveRateOfChangeAlarmType_ConfirmedState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_ConfirmedState_TransitionTime","ExclusiveRateOfChangeAlarmType_ConfirmedState_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_ConfirmedState_TrueState","ExclusiveRateOfChangeAlarmType_ConfirmedState_FalseState","ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments","ExclusiveRateOfChangeAlarmType_Confirm_InputArguments","ExclusiveRateOfChangeAlarmType_ActiveState","ExclusiveRateOfChangeAlarmType_ActiveState_Id","ExclusiveRateOfChangeAlarmType_ActiveState_Name","ExclusiveRateOfChangeAlarmType_ActiveState_Number","ExclusiveRateOfChangeAlarmType_ActiveState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_ActiveState_TransitionTime","ExclusiveRateOfChangeAlarmType_ActiveState_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_ActiveState_TrueState","ExclusiveRateOfChangeAlarmType_ActiveState_FalseState","ExclusiveRateOfChangeAlarmType_SuppressedState","ExclusiveRateOfChangeAlarmType_SuppressedState_Id","ExclusiveRateOfChangeAlarmType_SuppressedState_Name","ExclusiveRateOfChangeAlarmType_SuppressedState_Number","ExclusiveRateOfChangeAlarmType_SuppressedState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_SuppressedState_TransitionTime","ExclusiveRateOfChangeAlarmType_SuppressedState_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_SuppressedState_TrueState","ExclusiveRateOfChangeAlarmType_SuppressedState_FalseState","ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState","ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id","ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Name","ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Number","ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition","ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id","ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Name","ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Number","ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_TransitionTime","ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime","ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments","ExclusiveRateOfChangeAlarmType_SuppressedOrShelved","ExclusiveRateOfChangeAlarmType_MaxTimeShelved","ExclusiveRateOfChangeAlarmType_LimitState_CurrentState","ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id","ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Name","ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Number","ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_LimitState_LastTransition","ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id","ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Name","ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Number","ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_TransitionTime","ExclusiveRateOfChangeAlarmType_HighHighLimit","ExclusiveRateOfChangeAlarmType_HighLimit","ExclusiveRateOfChangeAlarmType_LowLimit","ExclusiveRateOfChangeAlarmType_LowLowLimit","ExclusiveDeviationAlarmType_EventId","ExclusiveDeviationAlarmType_EventType","ExclusiveDeviationAlarmType_SourceNode","ExclusiveDeviationAlarmType_SourceName","ExclusiveDeviationAlarmType_Time","ExclusiveDeviationAlarmType_ReceiveTime","ExclusiveDeviationAlarmType_LocalTime","ExclusiveDeviationAlarmType_Message","ExclusiveDeviationAlarmType_Severity","ExclusiveDeviationAlarmType_ConditionName","ExclusiveDeviationAlarmType_BranchId","ExclusiveDeviationAlarmType_Retain","ExclusiveDeviationAlarmType_EnabledState","ExclusiveDeviationAlarmType_EnabledState_Id","ExclusiveDeviationAlarmType_EnabledState_Name","ExclusiveDeviationAlarmType_EnabledState_Number","ExclusiveDeviationAlarmType_EnabledState_EffectiveDisplayName","ExclusiveDeviationAlarmType_EnabledState_TransitionTime","ExclusiveDeviationAlarmType_EnabledState_EffectiveTransitionTime","ExclusiveDeviationAlarmType_EnabledState_TrueState","ExclusiveDeviationAlarmType_EnabledState_FalseState","ExclusiveDeviationAlarmType_Quality","ExclusiveDeviationAlarmType_Quality_SourceTimestamp","ExclusiveDeviationAlarmType_LastSeverity","ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp","ExclusiveDeviationAlarmType_Comment","ExclusiveDeviationAlarmType_Comment_SourceTimestamp","ExclusiveDeviationAlarmType_ClientUserId","ExclusiveDeviationAlarmType_AddComment_InputArguments","ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments","ExclusiveDeviationAlarmType_AckedState","ExclusiveDeviationAlarmType_AckedState_Id","ExclusiveDeviationAlarmType_AckedState_Name","ExclusiveDeviationAlarmType_AckedState_Number","ExclusiveDeviationAlarmType_AckedState_EffectiveDisplayName","ExclusiveDeviationAlarmType_AckedState_TransitionTime","ExclusiveDeviationAlarmType_AckedState_EffectiveTransitionTime","ExclusiveDeviationAlarmType_AckedState_TrueState","ExclusiveDeviationAlarmType_AckedState_FalseState","ExclusiveDeviationAlarmType_ConfirmedState","ExclusiveDeviationAlarmType_ConfirmedState_Id","ExclusiveDeviationAlarmType_ConfirmedState_Name","ExclusiveDeviationAlarmType_ConfirmedState_Number","ExclusiveDeviationAlarmType_ConfirmedState_EffectiveDisplayName","ExclusiveDeviationAlarmType_ConfirmedState_TransitionTime","ExclusiveDeviationAlarmType_ConfirmedState_EffectiveTransitionTime","ExclusiveDeviationAlarmType_ConfirmedState_TrueState","ExclusiveDeviationAlarmType_ConfirmedState_FalseState","ExclusiveDeviationAlarmType_Acknowledge_InputArguments","ExclusiveDeviationAlarmType_Confirm_InputArguments","ExclusiveDeviationAlarmType_ActiveState","ExclusiveDeviationAlarmType_ActiveState_Id","ExclusiveDeviationAlarmType_ActiveState_Name","ExclusiveDeviationAlarmType_ActiveState_Number","ExclusiveDeviationAlarmType_ActiveState_EffectiveDisplayName","ExclusiveDeviationAlarmType_ActiveState_TransitionTime","ExclusiveDeviationAlarmType_ActiveState_EffectiveTransitionTime","ExclusiveDeviationAlarmType_ActiveState_TrueState","ExclusiveDeviationAlarmType_ActiveState_FalseState","ExclusiveDeviationAlarmType_SuppressedState","ExclusiveDeviationAlarmType_SuppressedState_Id","ExclusiveDeviationAlarmType_SuppressedState_Name","ExclusiveDeviationAlarmType_SuppressedState_Number","ExclusiveDeviationAlarmType_SuppressedState_EffectiveDisplayName","ExclusiveDeviationAlarmType_SuppressedState_TransitionTime","ExclusiveDeviationAlarmType_SuppressedState_EffectiveTransitionTime","ExclusiveDeviationAlarmType_SuppressedState_TrueState","ExclusiveDeviationAlarmType_SuppressedState_FalseState","ExclusiveDeviationAlarmType_ShelvingState_CurrentState","ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id","ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Name","ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Number","ExclusiveDeviationAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","ExclusiveDeviationAlarmType_ShelvingState_LastTransition","ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id","ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Name","ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Number","ExclusiveDeviationAlarmType_ShelvingState_LastTransition_TransitionTime","ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime","ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments","ExclusiveDeviationAlarmType_SuppressedOrShelved","ExclusiveDeviationAlarmType_MaxTimeShelved","ExclusiveDeviationAlarmType_LimitState_CurrentState","ExclusiveDeviationAlarmType_LimitState_CurrentState_Id","ExclusiveDeviationAlarmType_LimitState_CurrentState_Name","ExclusiveDeviationAlarmType_LimitState_CurrentState_Number","ExclusiveDeviationAlarmType_LimitState_CurrentState_EffectiveDisplayName","ExclusiveDeviationAlarmType_LimitState_LastTransition","ExclusiveDeviationAlarmType_LimitState_LastTransition_Id","ExclusiveDeviationAlarmType_LimitState_LastTransition_Name","ExclusiveDeviationAlarmType_LimitState_LastTransition_Number","ExclusiveDeviationAlarmType_LimitState_LastTransition_TransitionTime","ExclusiveDeviationAlarmType_HighHighLimit","ExclusiveDeviationAlarmType_HighLimit","ExclusiveDeviationAlarmType_LowLimit","ExclusiveDeviationAlarmType_LowLowLimit","ExclusiveDeviationAlarmType_SetpointNode","NonExclusiveLimitAlarmType_EventId","NonExclusiveLimitAlarmType_EventType","NonExclusiveLimitAlarmType_SourceNode","NonExclusiveLimitAlarmType_SourceName","NonExclusiveLimitAlarmType_Time","NonExclusiveLimitAlarmType_ReceiveTime","NonExclusiveLimitAlarmType_LocalTime","NonExclusiveLimitAlarmType_Message","NonExclusiveLimitAlarmType_Severity","NonExclusiveLimitAlarmType_ConditionName","NonExclusiveLimitAlarmType_BranchId","NonExclusiveLimitAlarmType_Retain","NonExclusiveLimitAlarmType_EnabledState","NonExclusiveLimitAlarmType_EnabledState_Id","NonExclusiveLimitAlarmType_EnabledState_Name","NonExclusiveLimitAlarmType_EnabledState_Number","NonExclusiveLimitAlarmType_EnabledState_EffectiveDisplayName","NonExclusiveLimitAlarmType_EnabledState_TransitionTime","NonExclusiveLimitAlarmType_EnabledState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_EnabledState_TrueState","NonExclusiveLimitAlarmType_EnabledState_FalseState","NonExclusiveLimitAlarmType_Quality","NonExclusiveLimitAlarmType_Quality_SourceTimestamp","NonExclusiveLimitAlarmType_LastSeverity","NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp","NonExclusiveLimitAlarmType_Comment","NonExclusiveLimitAlarmType_Comment_SourceTimestamp","NonExclusiveLimitAlarmType_ClientUserId","NonExclusiveLimitAlarmType_AddComment_InputArguments","NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments","NonExclusiveLimitAlarmType_AckedState","NonExclusiveLimitAlarmType_AckedState_Id","NonExclusiveLimitAlarmType_AckedState_Name","NonExclusiveLimitAlarmType_AckedState_Number","NonExclusiveLimitAlarmType_AckedState_EffectiveDisplayName","NonExclusiveLimitAlarmType_AckedState_TransitionTime","NonExclusiveLimitAlarmType_AckedState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_AckedState_TrueState","NonExclusiveLimitAlarmType_AckedState_FalseState","NonExclusiveLimitAlarmType_ConfirmedState","NonExclusiveLimitAlarmType_ConfirmedState_Id","NonExclusiveLimitAlarmType_ConfirmedState_Name","NonExclusiveLimitAlarmType_ConfirmedState_Number","NonExclusiveLimitAlarmType_ConfirmedState_EffectiveDisplayName","NonExclusiveLimitAlarmType_ConfirmedState_TransitionTime","NonExclusiveLimitAlarmType_ConfirmedState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_ConfirmedState_TrueState","NonExclusiveLimitAlarmType_ConfirmedState_FalseState","NonExclusiveLimitAlarmType_Acknowledge_InputArguments","NonExclusiveLimitAlarmType_Confirm_InputArguments","NonExclusiveLimitAlarmType_ActiveState","NonExclusiveLimitAlarmType_ActiveState_Id","NonExclusiveLimitAlarmType_ActiveState_Name","NonExclusiveLimitAlarmType_ActiveState_Number","NonExclusiveLimitAlarmType_ActiveState_EffectiveDisplayName","NonExclusiveLimitAlarmType_ActiveState_TransitionTime","NonExclusiveLimitAlarmType_ActiveState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_ActiveState_TrueState","NonExclusiveLimitAlarmType_ActiveState_FalseState","NonExclusiveLimitAlarmType_SuppressedState","NonExclusiveLimitAlarmType_SuppressedState_Id","NonExclusiveLimitAlarmType_SuppressedState_Name","NonExclusiveLimitAlarmType_SuppressedState_Number","NonExclusiveLimitAlarmType_SuppressedState_EffectiveDisplayName","NonExclusiveLimitAlarmType_SuppressedState_TransitionTime","NonExclusiveLimitAlarmType_SuppressedState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_SuppressedState_TrueState","NonExclusiveLimitAlarmType_SuppressedState_FalseState","NonExclusiveLimitAlarmType_ShelvingState_CurrentState","NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id","NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Name","NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Number","NonExclusiveLimitAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","NonExclusiveLimitAlarmType_ShelvingState_LastTransition","NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id","NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Name","NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Number","NonExclusiveLimitAlarmType_ShelvingState_LastTransition_TransitionTime","NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime","NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments","NonExclusiveLimitAlarmType_SuppressedOrShelved","NonExclusiveLimitAlarmType_MaxTimeShelved","NonExclusiveLimitAlarmType_HighHighState","NonExclusiveLimitAlarmType_HighHighState_Id","NonExclusiveLimitAlarmType_HighHighState_Name","NonExclusiveLimitAlarmType_HighHighState_Number","NonExclusiveLimitAlarmType_HighHighState_EffectiveDisplayName","NonExclusiveLimitAlarmType_HighHighState_TransitionTime","NonExclusiveLimitAlarmType_HighHighState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_HighHighState_TrueState","NonExclusiveLimitAlarmType_HighHighState_FalseState","NonExclusiveLimitAlarmType_HighState","NonExclusiveLimitAlarmType_HighState_Id","NonExclusiveLimitAlarmType_HighState_Name","NonExclusiveLimitAlarmType_HighState_Number","NonExclusiveLimitAlarmType_HighState_EffectiveDisplayName","NonExclusiveLimitAlarmType_HighState_TransitionTime","NonExclusiveLimitAlarmType_HighState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_HighState_TrueState","NonExclusiveLimitAlarmType_HighState_FalseState","NonExclusiveLimitAlarmType_LowState","NonExclusiveLimitAlarmType_LowState_Id","NonExclusiveLimitAlarmType_LowState_Name","NonExclusiveLimitAlarmType_LowState_Number","NonExclusiveLimitAlarmType_LowState_EffectiveDisplayName","NonExclusiveLimitAlarmType_LowState_TransitionTime","NonExclusiveLimitAlarmType_LowState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_LowState_TrueState","NonExclusiveLimitAlarmType_LowState_FalseState","NonExclusiveLimitAlarmType_LowLowState","NonExclusiveLimitAlarmType_LowLowState_Id","NonExclusiveLimitAlarmType_LowLowState_Name","NonExclusiveLimitAlarmType_LowLowState_Number","NonExclusiveLimitAlarmType_LowLowState_EffectiveDisplayName","NonExclusiveLimitAlarmType_LowLowState_TransitionTime","NonExclusiveLimitAlarmType_LowLowState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_LowLowState_TrueState","NonExclusiveLimitAlarmType_LowLowState_FalseState","NonExclusiveLimitAlarmType_HighHighLimit","NonExclusiveLimitAlarmType_HighLimit","NonExclusiveLimitAlarmType_LowLimit","NonExclusiveLimitAlarmType_LowLowLimit","NonExclusiveLevelAlarmType_EventId","NonExclusiveLevelAlarmType_EventType","NonExclusiveLevelAlarmType_SourceNode","NonExclusiveLevelAlarmType_SourceName","NonExclusiveLevelAlarmType_Time","NonExclusiveLevelAlarmType_ReceiveTime","NonExclusiveLevelAlarmType_LocalTime","NonExclusiveLevelAlarmType_Message","NonExclusiveLevelAlarmType_Severity","NonExclusiveLevelAlarmType_ConditionName","NonExclusiveLevelAlarmType_BranchId","NonExclusiveLevelAlarmType_Retain","NonExclusiveLevelAlarmType_EnabledState","NonExclusiveLevelAlarmType_EnabledState_Id","NonExclusiveLevelAlarmType_EnabledState_Name","NonExclusiveLevelAlarmType_EnabledState_Number","NonExclusiveLevelAlarmType_EnabledState_EffectiveDisplayName","NonExclusiveLevelAlarmType_EnabledState_TransitionTime","NonExclusiveLevelAlarmType_EnabledState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_EnabledState_TrueState","NonExclusiveLevelAlarmType_EnabledState_FalseState","NonExclusiveLevelAlarmType_Quality","NonExclusiveLevelAlarmType_Quality_SourceTimestamp","NonExclusiveLevelAlarmType_LastSeverity","NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp","NonExclusiveLevelAlarmType_Comment","NonExclusiveLevelAlarmType_Comment_SourceTimestamp","NonExclusiveLevelAlarmType_ClientUserId","NonExclusiveLevelAlarmType_AddComment_InputArguments","NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments","NonExclusiveLevelAlarmType_AckedState","NonExclusiveLevelAlarmType_AckedState_Id","NonExclusiveLevelAlarmType_AckedState_Name","NonExclusiveLevelAlarmType_AckedState_Number","NonExclusiveLevelAlarmType_AckedState_EffectiveDisplayName","NonExclusiveLevelAlarmType_AckedState_TransitionTime","NonExclusiveLevelAlarmType_AckedState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_AckedState_TrueState","NonExclusiveLevelAlarmType_AckedState_FalseState","NonExclusiveLevelAlarmType_ConfirmedState","NonExclusiveLevelAlarmType_ConfirmedState_Id","NonExclusiveLevelAlarmType_ConfirmedState_Name","NonExclusiveLevelAlarmType_ConfirmedState_Number","NonExclusiveLevelAlarmType_ConfirmedState_EffectiveDisplayName","NonExclusiveLevelAlarmType_ConfirmedState_TransitionTime","NonExclusiveLevelAlarmType_ConfirmedState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_ConfirmedState_TrueState","NonExclusiveLevelAlarmType_ConfirmedState_FalseState","NonExclusiveLevelAlarmType_Acknowledge_InputArguments","NonExclusiveLevelAlarmType_Confirm_InputArguments","NonExclusiveLevelAlarmType_ActiveState","NonExclusiveLevelAlarmType_ActiveState_Id","NonExclusiveLevelAlarmType_ActiveState_Name","NonExclusiveLevelAlarmType_ActiveState_Number","NonExclusiveLevelAlarmType_ActiveState_EffectiveDisplayName","NonExclusiveLevelAlarmType_ActiveState_TransitionTime","NonExclusiveLevelAlarmType_ActiveState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_ActiveState_TrueState","NonExclusiveLevelAlarmType_ActiveState_FalseState","NonExclusiveLevelAlarmType_SuppressedState","NonExclusiveLevelAlarmType_SuppressedState_Id","NonExclusiveLevelAlarmType_SuppressedState_Name","NonExclusiveLevelAlarmType_SuppressedState_Number","NonExclusiveLevelAlarmType_SuppressedState_EffectiveDisplayName","NonExclusiveLevelAlarmType_SuppressedState_TransitionTime","NonExclusiveLevelAlarmType_SuppressedState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_SuppressedState_TrueState","NonExclusiveLevelAlarmType_SuppressedState_FalseState","NonExclusiveLevelAlarmType_ShelvingState_CurrentState","NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id","NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Name","NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Number","NonExclusiveLevelAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","NonExclusiveLevelAlarmType_ShelvingState_LastTransition","NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id","NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Name","NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Number","NonExclusiveLevelAlarmType_ShelvingState_LastTransition_TransitionTime","NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime","NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments","NonExclusiveLevelAlarmType_SuppressedOrShelved","NonExclusiveLevelAlarmType_MaxTimeShelved","NonExclusiveLevelAlarmType_HighHighState","NonExclusiveLevelAlarmType_HighHighState_Id","NonExclusiveLevelAlarmType_HighHighState_Name","NonExclusiveLevelAlarmType_HighHighState_Number","NonExclusiveLevelAlarmType_HighHighState_EffectiveDisplayName","NonExclusiveLevelAlarmType_HighHighState_TransitionTime","NonExclusiveLevelAlarmType_HighHighState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_HighHighState_TrueState","NonExclusiveLevelAlarmType_HighHighState_FalseState","NonExclusiveLevelAlarmType_HighState","NonExclusiveLevelAlarmType_HighState_Id","NonExclusiveLevelAlarmType_HighState_Name","NonExclusiveLevelAlarmType_HighState_Number","NonExclusiveLevelAlarmType_HighState_EffectiveDisplayName","NonExclusiveLevelAlarmType_HighState_TransitionTime","NonExclusiveLevelAlarmType_HighState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_HighState_TrueState","NonExclusiveLevelAlarmType_HighState_FalseState","NonExclusiveLevelAlarmType_LowState","NonExclusiveLevelAlarmType_LowState_Id","NonExclusiveLevelAlarmType_LowState_Name","NonExclusiveLevelAlarmType_LowState_Number","NonExclusiveLevelAlarmType_LowState_EffectiveDisplayName","NonExclusiveLevelAlarmType_LowState_TransitionTime","NonExclusiveLevelAlarmType_LowState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_LowState_TrueState","NonExclusiveLevelAlarmType_LowState_FalseState","NonExclusiveLevelAlarmType_LowLowState","NonExclusiveLevelAlarmType_LowLowState_Id","NonExclusiveLevelAlarmType_LowLowState_Name","NonExclusiveLevelAlarmType_LowLowState_Number","NonExclusiveLevelAlarmType_LowLowState_EffectiveDisplayName","NonExclusiveLevelAlarmType_LowLowState_TransitionTime","NonExclusiveLevelAlarmType_LowLowState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_LowLowState_TrueState","NonExclusiveLevelAlarmType_LowLowState_FalseState","NonExclusiveLevelAlarmType_HighHighLimit","NonExclusiveLevelAlarmType_HighLimit","NonExclusiveLevelAlarmType_LowLimit","NonExclusiveLevelAlarmType_LowLowLimit","NonExclusiveRateOfChangeAlarmType_EventId","NonExclusiveRateOfChangeAlarmType_EventType","NonExclusiveRateOfChangeAlarmType_SourceNode","NonExclusiveRateOfChangeAlarmType_SourceName","NonExclusiveRateOfChangeAlarmType_Time","NonExclusiveRateOfChangeAlarmType_ReceiveTime","NonExclusiveRateOfChangeAlarmType_LocalTime","NonExclusiveRateOfChangeAlarmType_Message","NonExclusiveRateOfChangeAlarmType_Severity","NonExclusiveRateOfChangeAlarmType_ConditionName","NonExclusiveRateOfChangeAlarmType_BranchId","NonExclusiveRateOfChangeAlarmType_Retain","NonExclusiveRateOfChangeAlarmType_EnabledState","NonExclusiveRateOfChangeAlarmType_EnabledState_Id","NonExclusiveRateOfChangeAlarmType_EnabledState_Name","NonExclusiveRateOfChangeAlarmType_EnabledState_Number","NonExclusiveRateOfChangeAlarmType_EnabledState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_EnabledState_TransitionTime","NonExclusiveRateOfChangeAlarmType_EnabledState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_EnabledState_TrueState","NonExclusiveRateOfChangeAlarmType_EnabledState_FalseState","NonExclusiveRateOfChangeAlarmType_Quality","NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp","NonExclusiveRateOfChangeAlarmType_LastSeverity","NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp","NonExclusiveRateOfChangeAlarmType_Comment","NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp","NonExclusiveRateOfChangeAlarmType_ClientUserId","NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments","NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments","NonExclusiveRateOfChangeAlarmType_AckedState","NonExclusiveRateOfChangeAlarmType_AckedState_Id","NonExclusiveRateOfChangeAlarmType_AckedState_Name","NonExclusiveRateOfChangeAlarmType_AckedState_Number","NonExclusiveRateOfChangeAlarmType_AckedState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_AckedState_TransitionTime","NonExclusiveRateOfChangeAlarmType_AckedState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_AckedState_TrueState","NonExclusiveRateOfChangeAlarmType_AckedState_FalseState","NonExclusiveRateOfChangeAlarmType_ConfirmedState","NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id","NonExclusiveRateOfChangeAlarmType_ConfirmedState_Name","NonExclusiveRateOfChangeAlarmType_ConfirmedState_Number","NonExclusiveRateOfChangeAlarmType_ConfirmedState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_ConfirmedState_TransitionTime","NonExclusiveRateOfChangeAlarmType_ConfirmedState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_ConfirmedState_TrueState","NonExclusiveRateOfChangeAlarmType_ConfirmedState_FalseState","NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments","NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments","NonExclusiveRateOfChangeAlarmType_ActiveState","NonExclusiveRateOfChangeAlarmType_ActiveState_Id","NonExclusiveRateOfChangeAlarmType_ActiveState_Name","NonExclusiveRateOfChangeAlarmType_ActiveState_Number","NonExclusiveRateOfChangeAlarmType_ActiveState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_ActiveState_TransitionTime","NonExclusiveRateOfChangeAlarmType_ActiveState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_ActiveState_TrueState","NonExclusiveRateOfChangeAlarmType_ActiveState_FalseState","NonExclusiveRateOfChangeAlarmType_SuppressedState","NonExclusiveRateOfChangeAlarmType_SuppressedState_Id","NonExclusiveRateOfChangeAlarmType_SuppressedState_Name","NonExclusiveRateOfChangeAlarmType_SuppressedState_Number","NonExclusiveRateOfChangeAlarmType_SuppressedState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_SuppressedState_TransitionTime","NonExclusiveRateOfChangeAlarmType_SuppressedState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_SuppressedState_TrueState","NonExclusiveRateOfChangeAlarmType_SuppressedState_FalseState","NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState","NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id","NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Name","NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Number","NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition","NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id","NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Name","NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Number","NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_TransitionTime","NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime","NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments","NonExclusiveRateOfChangeAlarmType_SuppressedOrShelved","NonExclusiveRateOfChangeAlarmType_MaxTimeShelved","NonExclusiveRateOfChangeAlarmType_HighHighState","NonExclusiveRateOfChangeAlarmType_HighHighState_Id","NonExclusiveRateOfChangeAlarmType_HighHighState_Name","NonExclusiveRateOfChangeAlarmType_HighHighState_Number","NonExclusiveRateOfChangeAlarmType_HighHighState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_HighHighState_TransitionTime","NonExclusiveRateOfChangeAlarmType_HighHighState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_HighHighState_TrueState","NonExclusiveRateOfChangeAlarmType_HighHighState_FalseState","NonExclusiveRateOfChangeAlarmType_HighState","NonExclusiveRateOfChangeAlarmType_HighState_Id","NonExclusiveRateOfChangeAlarmType_HighState_Name","NonExclusiveRateOfChangeAlarmType_HighState_Number","NonExclusiveRateOfChangeAlarmType_HighState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_HighState_TransitionTime","NonExclusiveRateOfChangeAlarmType_HighState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_HighState_TrueState","NonExclusiveRateOfChangeAlarmType_HighState_FalseState","NonExclusiveRateOfChangeAlarmType_LowState","NonExclusiveRateOfChangeAlarmType_LowState_Id","NonExclusiveRateOfChangeAlarmType_LowState_Name","NonExclusiveRateOfChangeAlarmType_LowState_Number","NonExclusiveRateOfChangeAlarmType_LowState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_LowState_TransitionTime","NonExclusiveRateOfChangeAlarmType_LowState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_LowState_TrueState","NonExclusiveRateOfChangeAlarmType_LowState_FalseState","NonExclusiveRateOfChangeAlarmType_LowLowState","NonExclusiveRateOfChangeAlarmType_LowLowState_Id","NonExclusiveRateOfChangeAlarmType_LowLowState_Name","NonExclusiveRateOfChangeAlarmType_LowLowState_Number","NonExclusiveRateOfChangeAlarmType_LowLowState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_LowLowState_TransitionTime","NonExclusiveRateOfChangeAlarmType_LowLowState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_LowLowState_TrueState","NonExclusiveRateOfChangeAlarmType_LowLowState_FalseState","NonExclusiveRateOfChangeAlarmType_HighHighLimit","NonExclusiveRateOfChangeAlarmType_HighLimit","NonExclusiveRateOfChangeAlarmType_LowLimit","NonExclusiveRateOfChangeAlarmType_LowLowLimit","NonExclusiveDeviationAlarmType_EventId","NonExclusiveDeviationAlarmType_EventType","NonExclusiveDeviationAlarmType_SourceNode","NonExclusiveDeviationAlarmType_SourceName","NonExclusiveDeviationAlarmType_Time","NonExclusiveDeviationAlarmType_ReceiveTime","NonExclusiveDeviationAlarmType_LocalTime","NonExclusiveDeviationAlarmType_Message","NonExclusiveDeviationAlarmType_Severity","NonExclusiveDeviationAlarmType_ConditionName","NonExclusiveDeviationAlarmType_BranchId","NonExclusiveDeviationAlarmType_Retain","NonExclusiveDeviationAlarmType_EnabledState","NonExclusiveDeviationAlarmType_EnabledState_Id","NonExclusiveDeviationAlarmType_EnabledState_Name","NonExclusiveDeviationAlarmType_EnabledState_Number","NonExclusiveDeviationAlarmType_EnabledState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_EnabledState_TransitionTime","NonExclusiveDeviationAlarmType_EnabledState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_EnabledState_TrueState","NonExclusiveDeviationAlarmType_EnabledState_FalseState","NonExclusiveDeviationAlarmType_Quality","NonExclusiveDeviationAlarmType_Quality_SourceTimestamp","NonExclusiveDeviationAlarmType_LastSeverity","NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp","NonExclusiveDeviationAlarmType_Comment","NonExclusiveDeviationAlarmType_Comment_SourceTimestamp","NonExclusiveDeviationAlarmType_ClientUserId","NonExclusiveDeviationAlarmType_AddComment_InputArguments","NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments","NonExclusiveDeviationAlarmType_AckedState","NonExclusiveDeviationAlarmType_AckedState_Id","NonExclusiveDeviationAlarmType_AckedState_Name","NonExclusiveDeviationAlarmType_AckedState_Number","NonExclusiveDeviationAlarmType_AckedState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_AckedState_TransitionTime","NonExclusiveDeviationAlarmType_AckedState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_AckedState_TrueState","NonExclusiveDeviationAlarmType_AckedState_FalseState","NonExclusiveDeviationAlarmType_ConfirmedState","NonExclusiveDeviationAlarmType_ConfirmedState_Id","NonExclusiveDeviationAlarmType_ConfirmedState_Name","NonExclusiveDeviationAlarmType_ConfirmedState_Number","NonExclusiveDeviationAlarmType_ConfirmedState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_ConfirmedState_TransitionTime","NonExclusiveDeviationAlarmType_ConfirmedState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_ConfirmedState_TrueState","NonExclusiveDeviationAlarmType_ConfirmedState_FalseState","NonExclusiveDeviationAlarmType_Acknowledge_InputArguments","NonExclusiveDeviationAlarmType_Confirm_InputArguments","NonExclusiveDeviationAlarmType_ActiveState","NonExclusiveDeviationAlarmType_ActiveState_Id","NonExclusiveDeviationAlarmType_ActiveState_Name","NonExclusiveDeviationAlarmType_ActiveState_Number","NonExclusiveDeviationAlarmType_ActiveState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_ActiveState_TransitionTime","NonExclusiveDeviationAlarmType_ActiveState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_ActiveState_TrueState","NonExclusiveDeviationAlarmType_ActiveState_FalseState","NonExclusiveDeviationAlarmType_SuppressedState","NonExclusiveDeviationAlarmType_SuppressedState_Id","NonExclusiveDeviationAlarmType_SuppressedState_Name","NonExclusiveDeviationAlarmType_SuppressedState_Number","NonExclusiveDeviationAlarmType_SuppressedState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_SuppressedState_TransitionTime","NonExclusiveDeviationAlarmType_SuppressedState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_SuppressedState_TrueState","NonExclusiveDeviationAlarmType_SuppressedState_FalseState","NonExclusiveDeviationAlarmType_ShelvingState_CurrentState","NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id","NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Name","NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Number","NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_ShelvingState_LastTransition","NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id","NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Name","NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Number","NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_TransitionTime","NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime","NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments","NonExclusiveDeviationAlarmType_SuppressedOrShelved","NonExclusiveDeviationAlarmType_MaxTimeShelved","NonExclusiveDeviationAlarmType_HighHighState","NonExclusiveDeviationAlarmType_HighHighState_Id","NonExclusiveDeviationAlarmType_HighHighState_Name","NonExclusiveDeviationAlarmType_HighHighState_Number","NonExclusiveDeviationAlarmType_HighHighState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_HighHighState_TransitionTime","NonExclusiveDeviationAlarmType_HighHighState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_HighHighState_TrueState","NonExclusiveDeviationAlarmType_HighHighState_FalseState","NonExclusiveDeviationAlarmType_HighState","NonExclusiveDeviationAlarmType_HighState_Id","NonExclusiveDeviationAlarmType_HighState_Name","NonExclusiveDeviationAlarmType_HighState_Number","NonExclusiveDeviationAlarmType_HighState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_HighState_TransitionTime","NonExclusiveDeviationAlarmType_HighState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_HighState_TrueState","NonExclusiveDeviationAlarmType_HighState_FalseState","NonExclusiveDeviationAlarmType_LowState","NonExclusiveDeviationAlarmType_LowState_Id","NonExclusiveDeviationAlarmType_LowState_Name","NonExclusiveDeviationAlarmType_LowState_Number","NonExclusiveDeviationAlarmType_LowState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_LowState_TransitionTime","NonExclusiveDeviationAlarmType_LowState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_LowState_TrueState","NonExclusiveDeviationAlarmType_LowState_FalseState","NonExclusiveDeviationAlarmType_LowLowState","NonExclusiveDeviationAlarmType_LowLowState_Id","NonExclusiveDeviationAlarmType_LowLowState_Name","NonExclusiveDeviationAlarmType_LowLowState_Number","NonExclusiveDeviationAlarmType_LowLowState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_LowLowState_TransitionTime","NonExclusiveDeviationAlarmType_LowLowState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_LowLowState_TrueState","NonExclusiveDeviationAlarmType_LowLowState_FalseState","NonExclusiveDeviationAlarmType_HighHighLimit","NonExclusiveDeviationAlarmType_HighLimit","NonExclusiveDeviationAlarmType_LowLimit","NonExclusiveDeviationAlarmType_LowLowLimit","NonExclusiveDeviationAlarmType_SetpointNode","DiscreteAlarmType_EventId","DiscreteAlarmType_EventType","DiscreteAlarmType_SourceNode","DiscreteAlarmType_SourceName","DiscreteAlarmType_Time","DiscreteAlarmType_ReceiveTime","DiscreteAlarmType_LocalTime","DiscreteAlarmType_Message","DiscreteAlarmType_Severity","DiscreteAlarmType_ConditionName","DiscreteAlarmType_BranchId","DiscreteAlarmType_Retain","DiscreteAlarmType_EnabledState","DiscreteAlarmType_EnabledState_Id","DiscreteAlarmType_EnabledState_Name","DiscreteAlarmType_EnabledState_Number","DiscreteAlarmType_EnabledState_EffectiveDisplayName","DiscreteAlarmType_EnabledState_TransitionTime","DiscreteAlarmType_EnabledState_EffectiveTransitionTime","DiscreteAlarmType_EnabledState_TrueState","DiscreteAlarmType_EnabledState_FalseState","DiscreteAlarmType_Quality","DiscreteAlarmType_Quality_SourceTimestamp","DiscreteAlarmType_LastSeverity","DiscreteAlarmType_LastSeverity_SourceTimestamp","DiscreteAlarmType_Comment","DiscreteAlarmType_Comment_SourceTimestamp","DiscreteAlarmType_ClientUserId","DiscreteAlarmType_AddComment_InputArguments","DiscreteAlarmType_ConditionRefresh_InputArguments","DiscreteAlarmType_AckedState","DiscreteAlarmType_AckedState_Id","DiscreteAlarmType_AckedState_Name","DiscreteAlarmType_AckedState_Number","DiscreteAlarmType_AckedState_EffectiveDisplayName","DiscreteAlarmType_AckedState_TransitionTime","DiscreteAlarmType_AckedState_EffectiveTransitionTime","DiscreteAlarmType_AckedState_TrueState","DiscreteAlarmType_AckedState_FalseState","DiscreteAlarmType_ConfirmedState","DiscreteAlarmType_ConfirmedState_Id","DiscreteAlarmType_ConfirmedState_Name","DiscreteAlarmType_ConfirmedState_Number","DiscreteAlarmType_ConfirmedState_EffectiveDisplayName","DiscreteAlarmType_ConfirmedState_TransitionTime","DiscreteAlarmType_ConfirmedState_EffectiveTransitionTime","DiscreteAlarmType_ConfirmedState_TrueState","DiscreteAlarmType_ConfirmedState_FalseState","DiscreteAlarmType_Acknowledge_InputArguments","DiscreteAlarmType_Confirm_InputArguments","DiscreteAlarmType_ActiveState","DiscreteAlarmType_ActiveState_Id","DiscreteAlarmType_ActiveState_Name","DiscreteAlarmType_ActiveState_Number","DiscreteAlarmType_ActiveState_EffectiveDisplayName","DiscreteAlarmType_ActiveState_TransitionTime","DiscreteAlarmType_ActiveState_EffectiveTransitionTime","DiscreteAlarmType_ActiveState_TrueState","DiscreteAlarmType_ActiveState_FalseState","DiscreteAlarmType_SuppressedState","DiscreteAlarmType_SuppressedState_Id","DiscreteAlarmType_SuppressedState_Name","DiscreteAlarmType_SuppressedState_Number","DiscreteAlarmType_SuppressedState_EffectiveDisplayName","DiscreteAlarmType_SuppressedState_TransitionTime","DiscreteAlarmType_SuppressedState_EffectiveTransitionTime","DiscreteAlarmType_SuppressedState_TrueState","DiscreteAlarmType_SuppressedState_FalseState","DiscreteAlarmType_ShelvingState_CurrentState","DiscreteAlarmType_ShelvingState_CurrentState_Id","DiscreteAlarmType_ShelvingState_CurrentState_Name","DiscreteAlarmType_ShelvingState_CurrentState_Number","DiscreteAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","DiscreteAlarmType_ShelvingState_LastTransition","DiscreteAlarmType_ShelvingState_LastTransition_Id","DiscreteAlarmType_ShelvingState_LastTransition_Name","DiscreteAlarmType_ShelvingState_LastTransition_Number","DiscreteAlarmType_ShelvingState_LastTransition_TransitionTime","DiscreteAlarmType_ShelvingState_UnshelveTime","DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments","DiscreteAlarmType_SuppressedOrShelved","DiscreteAlarmType_MaxTimeShelved","OffNormalAlarmType_EventId","OffNormalAlarmType_EventType","OffNormalAlarmType_SourceNode","OffNormalAlarmType_SourceName","OffNormalAlarmType_Time","OffNormalAlarmType_ReceiveTime","OffNormalAlarmType_LocalTime","OffNormalAlarmType_Message","OffNormalAlarmType_Severity","OffNormalAlarmType_ConditionName","OffNormalAlarmType_BranchId","OffNormalAlarmType_Retain","OffNormalAlarmType_EnabledState","OffNormalAlarmType_EnabledState_Id","OffNormalAlarmType_EnabledState_Name","OffNormalAlarmType_EnabledState_Number","OffNormalAlarmType_EnabledState_EffectiveDisplayName","OffNormalAlarmType_EnabledState_TransitionTime","OffNormalAlarmType_EnabledState_EffectiveTransitionTime","OffNormalAlarmType_EnabledState_TrueState","OffNormalAlarmType_EnabledState_FalseState","OffNormalAlarmType_Quality","OffNormalAlarmType_Quality_SourceTimestamp","OffNormalAlarmType_LastSeverity","OffNormalAlarmType_LastSeverity_SourceTimestamp","OffNormalAlarmType_Comment","OffNormalAlarmType_Comment_SourceTimestamp","OffNormalAlarmType_ClientUserId","OffNormalAlarmType_AddComment_InputArguments","OffNormalAlarmType_ConditionRefresh_InputArguments","OffNormalAlarmType_AckedState","OffNormalAlarmType_AckedState_Id","OffNormalAlarmType_AckedState_Name","OffNormalAlarmType_AckedState_Number","OffNormalAlarmType_AckedState_EffectiveDisplayName","OffNormalAlarmType_AckedState_TransitionTime","OffNormalAlarmType_AckedState_EffectiveTransitionTime","OffNormalAlarmType_AckedState_TrueState","OffNormalAlarmType_AckedState_FalseState","OffNormalAlarmType_ConfirmedState","OffNormalAlarmType_ConfirmedState_Id","OffNormalAlarmType_ConfirmedState_Name","OffNormalAlarmType_ConfirmedState_Number","OffNormalAlarmType_ConfirmedState_EffectiveDisplayName","OffNormalAlarmType_ConfirmedState_TransitionTime","OffNormalAlarmType_ConfirmedState_EffectiveTransitionTime","OffNormalAlarmType_ConfirmedState_TrueState","OffNormalAlarmType_ConfirmedState_FalseState","OffNormalAlarmType_Acknowledge_InputArguments","OffNormalAlarmType_Confirm_InputArguments","OffNormalAlarmType_ActiveState","OffNormalAlarmType_ActiveState_Id","OffNormalAlarmType_ActiveState_Name","OffNormalAlarmType_ActiveState_Number","OffNormalAlarmType_ActiveState_EffectiveDisplayName","OffNormalAlarmType_ActiveState_TransitionTime","OffNormalAlarmType_ActiveState_EffectiveTransitionTime","OffNormalAlarmType_ActiveState_TrueState","OffNormalAlarmType_ActiveState_FalseState","OffNormalAlarmType_SuppressedState","OffNormalAlarmType_SuppressedState_Id","OffNormalAlarmType_SuppressedState_Name","OffNormalAlarmType_SuppressedState_Number","OffNormalAlarmType_SuppressedState_EffectiveDisplayName","OffNormalAlarmType_SuppressedState_TransitionTime","OffNormalAlarmType_SuppressedState_EffectiveTransitionTime","OffNormalAlarmType_SuppressedState_TrueState","OffNormalAlarmType_SuppressedState_FalseState","OffNormalAlarmType_ShelvingState_CurrentState","OffNormalAlarmType_ShelvingState_CurrentState_Id","OffNormalAlarmType_ShelvingState_CurrentState_Name","OffNormalAlarmType_ShelvingState_CurrentState_Number","OffNormalAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","OffNormalAlarmType_ShelvingState_LastTransition","OffNormalAlarmType_ShelvingState_LastTransition_Id","OffNormalAlarmType_ShelvingState_LastTransition_Name","OffNormalAlarmType_ShelvingState_LastTransition_Number","OffNormalAlarmType_ShelvingState_LastTransition_TransitionTime","OffNormalAlarmType_ShelvingState_UnshelveTime","OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments","OffNormalAlarmType_SuppressedOrShelved","OffNormalAlarmType_MaxTimeShelved","TripAlarmType_EventId","TripAlarmType_EventType","TripAlarmType_SourceNode","TripAlarmType_SourceName","TripAlarmType_Time","TripAlarmType_ReceiveTime","TripAlarmType_LocalTime","TripAlarmType_Message","TripAlarmType_Severity","TripAlarmType_ConditionName","TripAlarmType_BranchId","TripAlarmType_Retain","TripAlarmType_EnabledState","TripAlarmType_EnabledState_Id","TripAlarmType_EnabledState_Name","TripAlarmType_EnabledState_Number","TripAlarmType_EnabledState_EffectiveDisplayName","TripAlarmType_EnabledState_TransitionTime","TripAlarmType_EnabledState_EffectiveTransitionTime","TripAlarmType_EnabledState_TrueState","TripAlarmType_EnabledState_FalseState","TripAlarmType_Quality","TripAlarmType_Quality_SourceTimestamp","TripAlarmType_LastSeverity","TripAlarmType_LastSeverity_SourceTimestamp","TripAlarmType_Comment","TripAlarmType_Comment_SourceTimestamp","TripAlarmType_ClientUserId","TripAlarmType_AddComment_InputArguments","TripAlarmType_ConditionRefresh_InputArguments","TripAlarmType_AckedState","TripAlarmType_AckedState_Id","TripAlarmType_AckedState_Name","TripAlarmType_AckedState_Number","TripAlarmType_AckedState_EffectiveDisplayName","TripAlarmType_AckedState_TransitionTime","TripAlarmType_AckedState_EffectiveTransitionTime","TripAlarmType_AckedState_TrueState","TripAlarmType_AckedState_FalseState","TripAlarmType_ConfirmedState","TripAlarmType_ConfirmedState_Id","TripAlarmType_ConfirmedState_Name","TripAlarmType_ConfirmedState_Number","TripAlarmType_ConfirmedState_EffectiveDisplayName","TripAlarmType_ConfirmedState_TransitionTime","TripAlarmType_ConfirmedState_EffectiveTransitionTime","TripAlarmType_ConfirmedState_TrueState","TripAlarmType_ConfirmedState_FalseState","TripAlarmType_Acknowledge_InputArguments","TripAlarmType_Confirm_InputArguments","TripAlarmType_ActiveState","TripAlarmType_ActiveState_Id","TripAlarmType_ActiveState_Name","TripAlarmType_ActiveState_Number","TripAlarmType_ActiveState_EffectiveDisplayName","TripAlarmType_ActiveState_TransitionTime","TripAlarmType_ActiveState_EffectiveTransitionTime","TripAlarmType_ActiveState_TrueState","TripAlarmType_ActiveState_FalseState","TripAlarmType_SuppressedState","TripAlarmType_SuppressedState_Id","TripAlarmType_SuppressedState_Name","TripAlarmType_SuppressedState_Number","TripAlarmType_SuppressedState_EffectiveDisplayName","TripAlarmType_SuppressedState_TransitionTime","TripAlarmType_SuppressedState_EffectiveTransitionTime","TripAlarmType_SuppressedState_TrueState","TripAlarmType_SuppressedState_FalseState","TripAlarmType_ShelvingState_CurrentState","TripAlarmType_ShelvingState_CurrentState_Id","TripAlarmType_ShelvingState_CurrentState_Name","TripAlarmType_ShelvingState_CurrentState_Number","TripAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","TripAlarmType_ShelvingState_LastTransition","TripAlarmType_ShelvingState_LastTransition_Id","TripAlarmType_ShelvingState_LastTransition_Name","TripAlarmType_ShelvingState_LastTransition_Number","TripAlarmType_ShelvingState_LastTransition_TransitionTime","TripAlarmType_ShelvingState_UnshelveTime","TripAlarmType_ShelvingState_TimedShelve_InputArguments","TripAlarmType_SuppressedOrShelved","TripAlarmType_MaxTimeShelved","AuditConditionShelvingEventType_EventId","AuditConditionShelvingEventType_EventType","AuditConditionShelvingEventType_SourceNode","AuditConditionShelvingEventType_SourceName","AuditConditionShelvingEventType_Time","AuditConditionShelvingEventType_ReceiveTime","AuditConditionShelvingEventType_LocalTime","AuditConditionShelvingEventType_Message","AuditConditionShelvingEventType_Severity","AuditConditionShelvingEventType_ActionTimeStamp","AuditConditionShelvingEventType_Status","AuditConditionShelvingEventType_ServerId","AuditConditionShelvingEventType_ClientAuditEntryId","AuditConditionShelvingEventType_ClientUserId","AuditConditionShelvingEventType_MethodId","AuditConditionShelvingEventType_InputArguments","TwoStateVariableType_TrueState","TwoStateVariableType_FalseState","ConditionType_ConditionClassId","ConditionType_ConditionClassName","DialogConditionType_ConditionClassId","DialogConditionType_ConditionClassName","AcknowledgeableConditionType_ConditionClassId","AcknowledgeableConditionType_ConditionClassName","AlarmConditionType_ConditionClassId","AlarmConditionType_ConditionClassName","AlarmConditionType_InputNode","LimitAlarmType_ConditionClassId","LimitAlarmType_ConditionClassName","LimitAlarmType_InputNode","LimitAlarmType_HighHighLimit","LimitAlarmType_HighLimit","LimitAlarmType_LowLimit","LimitAlarmType_LowLowLimit","ExclusiveLimitAlarmType_ConditionClassId","ExclusiveLimitAlarmType_ConditionClassName","ExclusiveLimitAlarmType_InputNode","ExclusiveLevelAlarmType_ConditionClassId","ExclusiveLevelAlarmType_ConditionClassName","ExclusiveLevelAlarmType_InputNode","ExclusiveRateOfChangeAlarmType_ConditionClassId","ExclusiveRateOfChangeAlarmType_ConditionClassName","ExclusiveRateOfChangeAlarmType_InputNode","ExclusiveDeviationAlarmType_ConditionClassId","ExclusiveDeviationAlarmType_ConditionClassName","ExclusiveDeviationAlarmType_InputNode","NonExclusiveLimitAlarmType_ConditionClassId","NonExclusiveLimitAlarmType_ConditionClassName","NonExclusiveLimitAlarmType_InputNode","NonExclusiveLevelAlarmType_ConditionClassId","NonExclusiveLevelAlarmType_ConditionClassName","NonExclusiveLevelAlarmType_InputNode","NonExclusiveRateOfChangeAlarmType_ConditionClassId","NonExclusiveRateOfChangeAlarmType_ConditionClassName","NonExclusiveRateOfChangeAlarmType_InputNode","NonExclusiveDeviationAlarmType_ConditionClassId","NonExclusiveDeviationAlarmType_ConditionClassName","NonExclusiveDeviationAlarmType_InputNode","DiscreteAlarmType_ConditionClassId","DiscreteAlarmType_ConditionClassName","DiscreteAlarmType_InputNode","OffNormalAlarmType_ConditionClassId","OffNormalAlarmType_ConditionClassName","OffNormalAlarmType_InputNode","OffNormalAlarmType_NormalState","TripAlarmType_ConditionClassId","TripAlarmType_ConditionClassName","TripAlarmType_InputNode","TripAlarmType_NormalState","HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad","HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad","HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood","HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation","AggregateConfigurationType_TreatUncertainAsBad","AggregateConfigurationType_PercentDataBad","AggregateConfigurationType_PercentDataGood","AggregateConfigurationType_UseSlopedExtrapolation","HistoryServerCapabilities_AccessHistoryDataCapability","HistoryServerCapabilities_InsertDataCapability","HistoryServerCapabilities_ReplaceDataCapability","HistoryServerCapabilities_UpdateDataCapability","HistoryServerCapabilities_DeleteRawCapability","HistoryServerCapabilities_DeleteAtTimeCapability","HAConfiguration_AggregateConfiguration_TreatUncertainAsBad","HAConfiguration_AggregateConfiguration_PercentDataBad","HAConfiguration_AggregateConfiguration_PercentDataGood","HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation","HAConfiguration_Stepped","HAConfiguration_Definition","HAConfiguration_MaxTimeInterval","HAConfiguration_MinTimeInterval","HAConfiguration_ExceptionDeviation","HAConfiguration_ExceptionDeviationFormat","Annotations","HistoricalEventFilter","MultiStateValueDiscreteType_Definition","MultiStateValueDiscreteType_ValuePrecision","MultiStateValueDiscreteType_EnumValues","HistoryServerCapabilities_AccessHistoryEventsCapability","HistoryServerCapabilitiesType_MaxReturnDataValues","HistoryServerCapabilitiesType_MaxReturnEventValues","HistoryServerCapabilitiesType_InsertAnnotationCapability","HistoryServerCapabilities_MaxReturnDataValues","HistoryServerCapabilities_MaxReturnEventValues","HistoryServerCapabilities_InsertAnnotationCapability","HistoryServerCapabilitiesType_InsertEventCapability","HistoryServerCapabilitiesType_ReplaceEventCapability","HistoryServerCapabilitiesType_UpdateEventCapability","HistoryServerCapabilities_InsertEventCapability","HistoryServerCapabilities_ReplaceEventCapability","HistoryServerCapabilities_UpdateEventCapability","Server_ServerRedundancy_CurrentServerId","Server_ServerRedundancy_RedundantServerArray","Server_ServerRedundancy_ServerUriArray","ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber","ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber","ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber","ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber","ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber","ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber","ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber","ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber","ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber","ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber","EnumStrings","ValueAsText","ProgressEventType_EventId","ProgressEventType_EventType","ProgressEventType_SourceNode","ProgressEventType_SourceName","ProgressEventType_Time","ProgressEventType_ReceiveTime","ProgressEventType_LocalTime","ProgressEventType_Message","ProgressEventType_Severity","SystemStatusChangeEventType_EventId","SystemStatusChangeEventType_EventType","SystemStatusChangeEventType_SourceNode","SystemStatusChangeEventType_SourceName","SystemStatusChangeEventType_Time","SystemStatusChangeEventType_ReceiveTime","SystemStatusChangeEventType_LocalTime","SystemStatusChangeEventType_Message","SystemStatusChangeEventType_Severity","TransitionVariableType_EffectiveTransitionTime","FiniteTransitionVariableType_EffectiveTransitionTime","StateMachineType_LastTransition_EffectiveTransitionTime","FiniteStateMachineType_LastTransition_EffectiveTransitionTime","TransitionEventType_Transition_EffectiveTransitionTime","MultiStateValueDiscreteType_ValueAsText","ProgramTransitionEventType_Transition_EffectiveTransitionTime","ProgramTransitionAuditEventType_Transition_EffectiveTransitionTime","ProgramStateMachineType_LastTransition_EffectiveTransitionTime","ShelvedStateMachineType_LastTransition_EffectiveTransitionTime","AlarmConditionType_ShelvingState_LastTransition_EffectiveTransitionTime","LimitAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","ExclusiveLimitStateMachineType_LastTransition_EffectiveTransitionTime","ExclusiveLimitAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","ExclusiveLimitAlarmType_LimitState_LastTransition_EffectiveTransitionTime","ExclusiveLevelAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","ExclusiveLevelAlarmType_LimitState_LastTransition_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_EffectiveTransitionTime","ExclusiveDeviationAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","ExclusiveDeviationAlarmType_LimitState_LastTransition_EffectiveTransitionTime","NonExclusiveLimitAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","NonExclusiveLevelAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","DiscreteAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","OffNormalAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","TripAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","AuditActivateSessionEventType_SecureChannelId","OptionSetType_OptionSetValues","ServerType_GetMonitoredItems_InputArguments","ServerType_GetMonitoredItems_OutputArguments","Server_GetMonitoredItems_InputArguments","Server_GetMonitoredItems_OutputArguments","GetMonitoredItemsMethodType_InputArguments","GetMonitoredItemsMethodType_OutputArguments","MaxStringLength","HistoricalDataConfigurationType_StartOfArchive","HistoricalDataConfigurationType_StartOfOnlineArchive","HistoryServerCapabilitiesType_DeleteEventCapability","HistoryServerCapabilities_DeleteEventCapability","HAConfiguration_StartOfArchive","HAConfiguration_StartOfOnlineArchive","ModellingRule_OptionalPlaceholder_NamingRule","ModellingRule_MandatoryPlaceholder_NamingRule","MaxArrayLength","EngineeringUnits","ServerType_ServerCapabilities_MaxArrayLength","ServerType_ServerCapabilities_MaxStringLength","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerRead","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerWrite","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerBrowse","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement","ServerType_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall","ServerCapabilitiesType_MaxArrayLength","ServerCapabilitiesType_MaxStringLength","ServerCapabilitiesType_OperationLimits_MaxNodesPerRead","ServerCapabilitiesType_OperationLimits_MaxNodesPerWrite","ServerCapabilitiesType_OperationLimits_MaxNodesPerMethodCall","ServerCapabilitiesType_OperationLimits_MaxNodesPerBrowse","ServerCapabilitiesType_OperationLimits_MaxNodesPerRegisterNodes","ServerCapabilitiesType_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds","ServerCapabilitiesType_OperationLimits_MaxNodesPerNodeManagement","ServerCapabilitiesType_OperationLimits_MaxMonitoredItemsPerCall","ServerCapabilitiesType_VendorCapability_Placeholder","OperationLimitsType_MaxNodesPerRead","OperationLimitsType_MaxNodesPerWrite","OperationLimitsType_MaxNodesPerMethodCall","OperationLimitsType_MaxNodesPerBrowse","OperationLimitsType_MaxNodesPerRegisterNodes","OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds","OperationLimitsType_MaxNodesPerNodeManagement","OperationLimitsType_MaxMonitoredItemsPerCall","FileType_Size","FileType_OpenCount","FileType_Open_InputArguments","FileType_Open_OutputArguments","FileType_Close_InputArguments","FileType_Read_InputArguments","FileType_Read_OutputArguments","FileType_Write_InputArguments","FileType_GetPosition_InputArguments","FileType_GetPosition_OutputArguments","FileType_SetPosition_InputArguments","AddressSpaceFileType_Size","AddressSpaceFileType_OpenCount","AddressSpaceFileType_Open_InputArguments","AddressSpaceFileType_Open_OutputArguments","AddressSpaceFileType_Close_InputArguments","AddressSpaceFileType_Read_InputArguments","AddressSpaceFileType_Read_OutputArguments","AddressSpaceFileType_Write_InputArguments","AddressSpaceFileType_GetPosition_InputArguments","AddressSpaceFileType_GetPosition_OutputArguments","AddressSpaceFileType_SetPosition_InputArguments","NamespaceMetadataType_NamespaceUri","NamespaceMetadataType_NamespaceVersion","NamespaceMetadataType_NamespacePublicationDate","NamespaceMetadataType_IsNamespaceSubset","NamespaceMetadataType_StaticNodeIdTypes","NamespaceMetadataType_StaticNumericNodeIdRange","NamespaceMetadataType_StaticStringNodeIdPattern","NamespaceMetadataType_NamespaceFile_Size","NamespaceMetadataType_NamespaceFile_OpenCount","NamespaceMetadataType_NamespaceFile_Open_InputArguments","NamespaceMetadataType_NamespaceFile_Open_OutputArguments","NamespaceMetadataType_NamespaceFile_Close_InputArguments","NamespaceMetadataType_NamespaceFile_Read_InputArguments","NamespaceMetadataType_NamespaceFile_Read_OutputArguments","NamespaceMetadataType_NamespaceFile_Write_InputArguments","NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments","NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments","NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion","NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate","NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset","NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes","NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange","NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments","SystemStatusChangeEventType_SystemState","SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount","SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount","SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount","OptionSetType_BitMask","Server_ServerCapabilities_MaxArrayLength","Server_ServerCapabilities_MaxStringLength","Server_ServerCapabilities_OperationLimits_MaxNodesPerRead","Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite","Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall","Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse","Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes","Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds","Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement","Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall","OpenMethodType_InputArguments","OpenMethodType_OutputArguments","CloseMethodType_InputArguments","ReadMethodType_InputArguments","ReadMethodType_OutputArguments","WriteMethodType_InputArguments","GetPositionMethodType_InputArguments","GetPositionMethodType_OutputArguments","SetPositionMethodType_InputArguments","SystemOffNormalAlarmType_EventId","SystemOffNormalAlarmType_EventType","SystemOffNormalAlarmType_SourceNode","SystemOffNormalAlarmType_SourceName","SystemOffNormalAlarmType_Time","SystemOffNormalAlarmType_ReceiveTime","SystemOffNormalAlarmType_LocalTime","SystemOffNormalAlarmType_Message","SystemOffNormalAlarmType_Severity","SystemOffNormalAlarmType_ConditionClassId","SystemOffNormalAlarmType_ConditionClassName","SystemOffNormalAlarmType_ConditionName","SystemOffNormalAlarmType_BranchId","SystemOffNormalAlarmType_Retain","SystemOffNormalAlarmType_EnabledState","SystemOffNormalAlarmType_EnabledState_Id","SystemOffNormalAlarmType_EnabledState_Name","SystemOffNormalAlarmType_EnabledState_Number","SystemOffNormalAlarmType_EnabledState_EffectiveDisplayName","SystemOffNormalAlarmType_EnabledState_TransitionTime","SystemOffNormalAlarmType_EnabledState_EffectiveTransitionTime","SystemOffNormalAlarmType_EnabledState_TrueState","SystemOffNormalAlarmType_EnabledState_FalseState","SystemOffNormalAlarmType_Quality","SystemOffNormalAlarmType_Quality_SourceTimestamp","SystemOffNormalAlarmType_LastSeverity","SystemOffNormalAlarmType_LastSeverity_SourceTimestamp","SystemOffNormalAlarmType_Comment","SystemOffNormalAlarmType_Comment_SourceTimestamp","SystemOffNormalAlarmType_ClientUserId","SystemOffNormalAlarmType_AddComment_InputArguments","SystemOffNormalAlarmType_ConditionRefresh_InputArguments","SystemOffNormalAlarmType_AckedState","SystemOffNormalAlarmType_AckedState_Id","SystemOffNormalAlarmType_AckedState_Name","SystemOffNormalAlarmType_AckedState_Number","SystemOffNormalAlarmType_AckedState_EffectiveDisplayName","SystemOffNormalAlarmType_AckedState_TransitionTime","SystemOffNormalAlarmType_AckedState_EffectiveTransitionTime","SystemOffNormalAlarmType_AckedState_TrueState","SystemOffNormalAlarmType_AckedState_FalseState","SystemOffNormalAlarmType_ConfirmedState","SystemOffNormalAlarmType_ConfirmedState_Id","SystemOffNormalAlarmType_ConfirmedState_Name","SystemOffNormalAlarmType_ConfirmedState_Number","SystemOffNormalAlarmType_ConfirmedState_EffectiveDisplayName","SystemOffNormalAlarmType_ConfirmedState_TransitionTime","SystemOffNormalAlarmType_ConfirmedState_EffectiveTransitionTime","SystemOffNormalAlarmType_ConfirmedState_TrueState","SystemOffNormalAlarmType_ConfirmedState_FalseState","SystemOffNormalAlarmType_Acknowledge_InputArguments","SystemOffNormalAlarmType_Confirm_InputArguments","SystemOffNormalAlarmType_ActiveState","SystemOffNormalAlarmType_ActiveState_Id","SystemOffNormalAlarmType_ActiveState_Name","SystemOffNormalAlarmType_ActiveState_Number","SystemOffNormalAlarmType_ActiveState_EffectiveDisplayName","SystemOffNormalAlarmType_ActiveState_TransitionTime","SystemOffNormalAlarmType_ActiveState_EffectiveTransitionTime","SystemOffNormalAlarmType_ActiveState_TrueState","SystemOffNormalAlarmType_ActiveState_FalseState","SystemOffNormalAlarmType_InputNode","SystemOffNormalAlarmType_SuppressedState","SystemOffNormalAlarmType_SuppressedState_Id","SystemOffNormalAlarmType_SuppressedState_Name","SystemOffNormalAlarmType_SuppressedState_Number","SystemOffNormalAlarmType_SuppressedState_EffectiveDisplayName","SystemOffNormalAlarmType_SuppressedState_TransitionTime","SystemOffNormalAlarmType_SuppressedState_EffectiveTransitionTime","SystemOffNormalAlarmType_SuppressedState_TrueState","SystemOffNormalAlarmType_SuppressedState_FalseState","SystemOffNormalAlarmType_ShelvingState_CurrentState","SystemOffNormalAlarmType_ShelvingState_CurrentState_Id","SystemOffNormalAlarmType_ShelvingState_CurrentState_Name","SystemOffNormalAlarmType_ShelvingState_CurrentState_Number","SystemOffNormalAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","SystemOffNormalAlarmType_ShelvingState_LastTransition","SystemOffNormalAlarmType_ShelvingState_LastTransition_Id","SystemOffNormalAlarmType_ShelvingState_LastTransition_Name","SystemOffNormalAlarmType_ShelvingState_LastTransition_Number","SystemOffNormalAlarmType_ShelvingState_LastTransition_TransitionTime","SystemOffNormalAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","SystemOffNormalAlarmType_ShelvingState_UnshelveTime","SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments","SystemOffNormalAlarmType_SuppressedOrShelved","SystemOffNormalAlarmType_MaxTimeShelved","SystemOffNormalAlarmType_NormalState","AuditConditionCommentEventType_Comment","AuditConditionRespondEventType_SelectedResponse","AuditConditionAcknowledgeEventType_Comment","AuditConditionConfirmEventType_Comment","AuditConditionShelvingEventType_ShelvingTime","AuditProgramTransitionEventType_EventId","AuditProgramTransitionEventType_EventType","AuditProgramTransitionEventType_SourceNode","AuditProgramTransitionEventType_SourceName","AuditProgramTransitionEventType_Time","AuditProgramTransitionEventType_ReceiveTime","AuditProgramTransitionEventType_LocalTime","AuditProgramTransitionEventType_Message","AuditProgramTransitionEventType_Severity","AuditProgramTransitionEventType_ActionTimeStamp","AuditProgramTransitionEventType_Status","AuditProgramTransitionEventType_ServerId","AuditProgramTransitionEventType_ClientAuditEntryId","AuditProgramTransitionEventType_ClientUserId","AuditProgramTransitionEventType_MethodId","AuditProgramTransitionEventType_InputArguments","AuditProgramTransitionEventType_OldStateId","AuditProgramTransitionEventType_NewStateId","AuditProgramTransitionEventType_TransitionNumber","NodeClass_EnumValues","NodeAttributesMask_EnumValues","BrowseResultMask_EnumValues","HistoryUpdateType_EnumValues","PerformUpdateType_EnumValues","SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount","SessionDiagnosticsVariableType_UnauthorizedRequestCount","OpenFileMode_EnumValues","ModelChangeStructureVerbMask_EnumValues","NonTransparentNetworkRedundancyType_RedundancySupport","NonTransparentNetworkRedundancyType_ServerUriArray","NonTransparentNetworkRedundancyType_ServerNetworkGroups","OpcUa_XmlSchema_EndpointUrlListDataType","OpcUa_XmlSchema_EndpointUrlListDataType_DataTypeVersion","OpcUa_XmlSchema_EndpointUrlListDataType_DictionaryFragment","OpcUa_XmlSchema_NetworkGroupDataType","OpcUa_XmlSchema_NetworkGroupDataType_DataTypeVersion","OpcUa_XmlSchema_NetworkGroupDataType_DictionaryFragment","OpcUa_BinarySchema_EndpointUrlListDataType","OpcUa_BinarySchema_EndpointUrlListDataType_DataTypeVersion","OpcUa_BinarySchema_EndpointUrlListDataType_DictionaryFragment","OpcUa_BinarySchema_NetworkGroupDataType","OpcUa_BinarySchema_NetworkGroupDataType_DataTypeVersion","OpcUa_BinarySchema_NetworkGroupDataType_DictionaryFragment","ArrayItemType_Definition","ArrayItemType_ValuePrecision","ArrayItemType_InstrumentRange","ArrayItemType_EURange","ArrayItemType_EngineeringUnits","ArrayItemType_Title","ArrayItemType_AxisScaleType","YArrayItemType_Definition","YArrayItemType_ValuePrecision","YArrayItemType_InstrumentRange","YArrayItemType_EURange","YArrayItemType_EngineeringUnits","YArrayItemType_Title","YArrayItemType_AxisScaleType","YArrayItemType_XAxisDefinition","XYArrayItemType_Definition","XYArrayItemType_ValuePrecision","XYArrayItemType_InstrumentRange","XYArrayItemType_EURange","XYArrayItemType_EngineeringUnits","XYArrayItemType_Title","XYArrayItemType_AxisScaleType","XYArrayItemType_XAxisDefinition","ImageItemType_Definition","ImageItemType_ValuePrecision","ImageItemType_InstrumentRange","ImageItemType_EURange","ImageItemType_EngineeringUnits","ImageItemType_Title","ImageItemType_AxisScaleType","ImageItemType_XAxisDefinition","ImageItemType_YAxisDefinition","CubeItemType_Definition","CubeItemType_ValuePrecision","CubeItemType_InstrumentRange","CubeItemType_EURange","CubeItemType_EngineeringUnits","CubeItemType_Title","CubeItemType_AxisScaleType","CubeItemType_XAxisDefinition","CubeItemType_YAxisDefinition","CubeItemType_ZAxisDefinition","NDimensionArrayItemType_Definition","NDimensionArrayItemType_ValuePrecision","NDimensionArrayItemType_InstrumentRange","NDimensionArrayItemType_EURange","NDimensionArrayItemType_EngineeringUnits","NDimensionArrayItemType_Title","NDimensionArrayItemType_AxisScaleType","NDimensionArrayItemType_AxisDefinition","AxisScaleEnumeration_EnumStrings","OpcUa_XmlSchema_AxisInformation","OpcUa_XmlSchema_AxisInformation_DataTypeVersion","OpcUa_XmlSchema_AxisInformation_DictionaryFragment","OpcUa_XmlSchema_XVType","OpcUa_XmlSchema_XVType_DataTypeVersion","OpcUa_XmlSchema_XVType_DictionaryFragment","OpcUa_BinarySchema_AxisInformation","OpcUa_BinarySchema_AxisInformation_DataTypeVersion","OpcUa_BinarySchema_AxisInformation_DictionaryFragment","OpcUa_BinarySchema_XVType","OpcUa_BinarySchema_XVType_DataTypeVersion","OpcUa_BinarySchema_XVType_DictionaryFragment","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate","SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData","ServerType_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents","ServerCapabilitiesType_OperationLimits_MaxNodesPerHistoryReadData","ServerCapabilitiesType_OperationLimits_MaxNodesPerHistoryReadEvents","ServerCapabilitiesType_OperationLimits_MaxNodesPerHistoryUpdateData","ServerCapabilitiesType_OperationLimits_MaxNodesPerHistoryUpdateEvents","OperationLimitsType_MaxNodesPerHistoryReadData","OperationLimitsType_MaxNodesPerHistoryReadEvents","OperationLimitsType_MaxNodesPerHistoryUpdateData","OperationLimitsType_MaxNodesPerHistoryUpdateEvents","Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData","Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents","Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData","Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents","NamingRuleType_EnumValues","ViewVersion","OpcUa_XmlSchema_ComplexNumberType","OpcUa_XmlSchema_ComplexNumberType_DataTypeVersion","OpcUa_XmlSchema_ComplexNumberType_DictionaryFragment","OpcUa_XmlSchema_DoubleComplexNumberType","OpcUa_XmlSchema_DoubleComplexNumberType_DataTypeVersion","OpcUa_XmlSchema_DoubleComplexNumberType_DictionaryFragment","OpcUa_BinarySchema_ComplexNumberType","OpcUa_BinarySchema_ComplexNumberType_DataTypeVersion","OpcUa_BinarySchema_ComplexNumberType_DictionaryFragment","OpcUa_BinarySchema_DoubleComplexNumberType","OpcUa_BinarySchema_DoubleComplexNumberType_DataTypeVersion","OpcUa_BinarySchema_DoubleComplexNumberType_DictionaryFragment","OpcUa_XmlSchema_ServerOnNetwork","OpcUa_XmlSchema_ServerOnNetwork_DataTypeVersion","OpcUa_XmlSchema_ServerOnNetwork_DictionaryFragment","OpcUa_BinarySchema_ServerOnNetwork","OpcUa_BinarySchema_ServerOnNetwork_DataTypeVersion","OpcUa_BinarySchema_ServerOnNetwork_DictionaryFragment","ProgressEventType_Context","ProgressEventType_Progress","OpenWithMasksMethodType_InputArguments","OpenWithMasksMethodType_OutputArguments","CloseAndUpdateMethodType_OutputArguments","AddCertificateMethodType_InputArguments","RemoveCertificateMethodType_InputArguments","TrustListType_Size","TrustListType_OpenCount","TrustListType_Open_InputArguments","TrustListType_Open_OutputArguments","TrustListType_Close_InputArguments","TrustListType_Read_InputArguments","TrustListType_Read_OutputArguments","TrustListType_Write_InputArguments","TrustListType_GetPosition_InputArguments","TrustListType_GetPosition_OutputArguments","TrustListType_SetPosition_InputArguments","TrustListType_LastUpdateTime","TrustListType_OpenWithMasks_InputArguments","TrustListType_OpenWithMasks_OutputArguments","TrustListType_CloseAndUpdate_OutputArguments","TrustListType_AddCertificate_InputArguments","TrustListType_RemoveCertificate_InputArguments","TrustListMasks_EnumValues","TrustListUpdatedAuditEventType_EventId","TrustListUpdatedAuditEventType_EventType","TrustListUpdatedAuditEventType_SourceNode","TrustListUpdatedAuditEventType_SourceName","TrustListUpdatedAuditEventType_Time","TrustListUpdatedAuditEventType_ReceiveTime","TrustListUpdatedAuditEventType_LocalTime","TrustListUpdatedAuditEventType_Message","TrustListUpdatedAuditEventType_Severity","TrustListUpdatedAuditEventType_ActionTimeStamp","TrustListUpdatedAuditEventType_Status","TrustListUpdatedAuditEventType_ServerId","TrustListUpdatedAuditEventType_ClientAuditEntryId","TrustListUpdatedAuditEventType_ClientUserId","TrustListUpdatedAuditEventType_MethodId","TrustListUpdatedAuditEventType_InputArguments","UpdateCertificateMethodType_InputArguments","UpdateCertificateMethodType_OutputArguments","ServerConfigurationType_SupportedPrivateKeyFormats","ServerConfigurationType_MaxTrustListSize","ServerConfigurationType_MulticastDnsEnabled","ServerConfigurationType_UpdateCertificate_InputArguments","ServerConfigurationType_UpdateCertificate_OutputArguments","CertificateUpdatedAuditEventType_EventId","CertificateUpdatedAuditEventType_EventType","CertificateUpdatedAuditEventType_SourceNode","CertificateUpdatedAuditEventType_SourceName","CertificateUpdatedAuditEventType_Time","CertificateUpdatedAuditEventType_ReceiveTime","CertificateUpdatedAuditEventType_LocalTime","CertificateUpdatedAuditEventType_Message","CertificateUpdatedAuditEventType_Severity","CertificateUpdatedAuditEventType_ActionTimeStamp","CertificateUpdatedAuditEventType_Status","CertificateUpdatedAuditEventType_ServerId","CertificateUpdatedAuditEventType_ClientAuditEntryId","CertificateUpdatedAuditEventType_ClientUserId","CertificateUpdatedAuditEventType_MethodId","CertificateUpdatedAuditEventType_InputArguments","ServerConfiguration_SupportedPrivateKeyFormats","ServerConfiguration_MaxTrustListSize","ServerConfiguration_MulticastDnsEnabled","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments","OpcUa_XmlSchema_TrustListDataType","OpcUa_XmlSchema_TrustListDataType_DataTypeVersion","OpcUa_XmlSchema_TrustListDataType_DictionaryFragment","OpcUa_BinarySchema_TrustListDataType","OpcUa_BinarySchema_TrustListDataType_DataTypeVersion","OpcUa_BinarySchema_TrustListDataType_DictionaryFragment","FileType_Writable","FileType_UserWritable","AddressSpaceFileType_Writable","AddressSpaceFileType_UserWritable","NamespaceMetadataType_NamespaceFile_Writable","NamespaceMetadataType_NamespaceFile_UserWritable","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable","TrustListType_Writable","TrustListType_UserWritable","CloseAndUpdateMethodType_InputArguments","TrustListType_CloseAndUpdate_InputArguments","ServerConfigurationType_ServerCapabilities","ServerConfiguration_ServerCapabilities","OpcUa_XmlSchema_RelativePathElement","OpcUa_XmlSchema_RelativePathElement_DataTypeVersion","OpcUa_XmlSchema_RelativePathElement_DictionaryFragment","OpcUa_XmlSchema_RelativePath","OpcUa_XmlSchema_RelativePath_DataTypeVersion","OpcUa_XmlSchema_RelativePath_DictionaryFragment","OpcUa_BinarySchema_RelativePathElement","OpcUa_BinarySchema_RelativePathElement_DataTypeVersion","OpcUa_BinarySchema_RelativePathElement_DictionaryFragment","OpcUa_BinarySchema_RelativePath","OpcUa_BinarySchema_RelativePath_DataTypeVersion","OpcUa_BinarySchema_RelativePath_DictionaryFragment","ServerConfigurationType_CreateSigningRequest_InputArguments","ServerConfigurationType_CreateSigningRequest_OutputArguments","ServerConfiguration_CreateSigningRequest_InputArguments","ServerConfiguration_CreateSigningRequest_OutputArguments","CreateSigningRequestMethodType_InputArguments","CreateSigningRequestMethodType_OutputArguments","OptionSetValues","ServerType_SetSubscriptionDurable_InputArguments","ServerType_SetSubscriptionDurable_OutputArguments","Server_SetSubscriptionDurable_InputArguments","Server_SetSubscriptionDurable_OutputArguments","SetSubscriptionDurableMethodType_InputArguments","SetSubscriptionDurableMethodType_OutputArguments","OpcUa_XmlSchema_OptionSet","OpcUa_XmlSchema_OptionSet_DataTypeVersion","OpcUa_XmlSchema_OptionSet_DictionaryFragment","OpcUa_XmlSchema_Union","OpcUa_XmlSchema_Union_DataTypeVersion","OpcUa_XmlSchema_Union_DictionaryFragment","OpcUa_BinarySchema_OptionSet","OpcUa_BinarySchema_OptionSet_DataTypeVersion","OpcUa_BinarySchema_OptionSet_DictionaryFragment","OpcUa_BinarySchema_Union","OpcUa_BinarySchema_Union_DataTypeVersion","OpcUa_BinarySchema_Union_DictionaryFragment","GetRejectedListMethodType_OutputArguments","ServerConfigurationType_GetRejectedList_OutputArguments","ServerConfiguration_GetRejectedList_OutputArguments","SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics","SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval","SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount","SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount","SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber","SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount","SessionDiagnosticsArrayType_SessionDiagnostics","SessionDiagnosticsArrayType_SessionDiagnostics_SessionId","SessionDiagnosticsArrayType_SessionDiagnostics_SessionName","SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription","SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri","SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl","SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds","SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout","SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize","SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime","SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime","SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount","SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount","SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue","SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount","SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount","SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount","SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount","SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount","SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount","SessionDiagnosticsArrayType_SessionDiagnostics_CallCount","SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount","SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount","SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount","SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount","SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount","SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount","SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount","SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount","SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount","SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount","SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount","SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount","SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount","SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount","SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount","SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount","SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount","SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount","SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount","SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount","SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount","SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount","SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri","SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate","ServerType_ResendData_InputArguments","Server_ResendData_InputArguments","ResendDataMethodType_InputArguments","ServerType_EstimatedReturnTime","ServerType_RequestServerStateChange_InputArguments","Server_EstimatedReturnTime","Server_RequestServerStateChange_InputArguments","RequestServerStateChangeMethodType_InputArguments","OpcUa_XmlSchema_DiscoveryConfiguration","OpcUa_XmlSchema_DiscoveryConfiguration_DataTypeVersion","OpcUa_XmlSchema_DiscoveryConfiguration_DictionaryFragment","OpcUa_XmlSchema_MdnsDiscoveryConfiguration","OpcUa_XmlSchema_MdnsDiscoveryConfiguration_DataTypeVersion","OpcUa_XmlSchema_MdnsDiscoveryConfiguration_DictionaryFragment","OpcUa_BinarySchema_DiscoveryConfiguration","OpcUa_BinarySchema_DiscoveryConfiguration_DataTypeVersion","OpcUa_BinarySchema_DiscoveryConfiguration_DictionaryFragment","OpcUa_BinarySchema_MdnsDiscoveryConfiguration","OpcUa_BinarySchema_MdnsDiscoveryConfiguration_DataTypeVersion","OpcUa_BinarySchema_MdnsDiscoveryConfiguration_DictionaryFragment","MaxByteStringLength","ServerType_ServerCapabilities_MaxByteStringLength","ServerCapabilitiesType_MaxByteStringLength","Server_ServerCapabilities_MaxByteStringLength","ConditionType_ConditionRefresh2_InputArguments","ConditionRefresh2MethodType_InputArguments","DialogConditionType_ConditionRefresh2_InputArguments","AcknowledgeableConditionType_ConditionRefresh2_InputArguments","AlarmConditionType_ConditionRefresh2_InputArguments","LimitAlarmType_ConditionRefresh2_InputArguments","ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments","NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments","NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments","ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments","NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments","ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments","NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments","ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments","DiscreteAlarmType_ConditionRefresh2_InputArguments","OffNormalAlarmType_ConditionRefresh2_InputArguments","SystemOffNormalAlarmType_ConditionRefresh2_InputArguments","TripAlarmType_ConditionRefresh2_InputArguments","CertificateExpirationAlarmType_EventId","CertificateExpirationAlarmType_EventType","CertificateExpirationAlarmType_SourceNode","CertificateExpirationAlarmType_SourceName","CertificateExpirationAlarmType_Time","CertificateExpirationAlarmType_ReceiveTime","CertificateExpirationAlarmType_LocalTime","CertificateExpirationAlarmType_Message","CertificateExpirationAlarmType_Severity","CertificateExpirationAlarmType_ConditionClassId","CertificateExpirationAlarmType_ConditionClassName","CertificateExpirationAlarmType_ConditionName","CertificateExpirationAlarmType_BranchId","CertificateExpirationAlarmType_Retain","CertificateExpirationAlarmType_EnabledState","CertificateExpirationAlarmType_EnabledState_Id","CertificateExpirationAlarmType_EnabledState_Name","CertificateExpirationAlarmType_EnabledState_Number","CertificateExpirationAlarmType_EnabledState_EffectiveDisplayName","CertificateExpirationAlarmType_EnabledState_TransitionTime","CertificateExpirationAlarmType_EnabledState_EffectiveTransitionTime","CertificateExpirationAlarmType_EnabledState_TrueState","CertificateExpirationAlarmType_EnabledState_FalseState","CertificateExpirationAlarmType_Quality","CertificateExpirationAlarmType_Quality_SourceTimestamp","CertificateExpirationAlarmType_LastSeverity","CertificateExpirationAlarmType_LastSeverity_SourceTimestamp","CertificateExpirationAlarmType_Comment","CertificateExpirationAlarmType_Comment_SourceTimestamp","CertificateExpirationAlarmType_ClientUserId","CertificateExpirationAlarmType_AddComment_InputArguments","CertificateExpirationAlarmType_ConditionRefresh_InputArguments","CertificateExpirationAlarmType_ConditionRefresh2_InputArguments","CertificateExpirationAlarmType_AckedState","CertificateExpirationAlarmType_AckedState_Id","CertificateExpirationAlarmType_AckedState_Name","CertificateExpirationAlarmType_AckedState_Number","CertificateExpirationAlarmType_AckedState_EffectiveDisplayName","CertificateExpirationAlarmType_AckedState_TransitionTime","CertificateExpirationAlarmType_AckedState_EffectiveTransitionTime","CertificateExpirationAlarmType_AckedState_TrueState","CertificateExpirationAlarmType_AckedState_FalseState","CertificateExpirationAlarmType_ConfirmedState","CertificateExpirationAlarmType_ConfirmedState_Id","CertificateExpirationAlarmType_ConfirmedState_Name","CertificateExpirationAlarmType_ConfirmedState_Number","CertificateExpirationAlarmType_ConfirmedState_EffectiveDisplayName","CertificateExpirationAlarmType_ConfirmedState_TransitionTime","CertificateExpirationAlarmType_ConfirmedState_EffectiveTransitionTime","CertificateExpirationAlarmType_ConfirmedState_TrueState","CertificateExpirationAlarmType_ConfirmedState_FalseState","CertificateExpirationAlarmType_Acknowledge_InputArguments","CertificateExpirationAlarmType_Confirm_InputArguments","CertificateExpirationAlarmType_ActiveState","CertificateExpirationAlarmType_ActiveState_Id","CertificateExpirationAlarmType_ActiveState_Name","CertificateExpirationAlarmType_ActiveState_Number","CertificateExpirationAlarmType_ActiveState_EffectiveDisplayName","CertificateExpirationAlarmType_ActiveState_TransitionTime","CertificateExpirationAlarmType_ActiveState_EffectiveTransitionTime","CertificateExpirationAlarmType_ActiveState_TrueState","CertificateExpirationAlarmType_ActiveState_FalseState","CertificateExpirationAlarmType_InputNode","CertificateExpirationAlarmType_SuppressedState","CertificateExpirationAlarmType_SuppressedState_Id","CertificateExpirationAlarmType_SuppressedState_Name","CertificateExpirationAlarmType_SuppressedState_Number","CertificateExpirationAlarmType_SuppressedState_EffectiveDisplayName","CertificateExpirationAlarmType_SuppressedState_TransitionTime","CertificateExpirationAlarmType_SuppressedState_EffectiveTransitionTime","CertificateExpirationAlarmType_SuppressedState_TrueState","CertificateExpirationAlarmType_SuppressedState_FalseState","CertificateExpirationAlarmType_ShelvingState_CurrentState","CertificateExpirationAlarmType_ShelvingState_CurrentState_Id","CertificateExpirationAlarmType_ShelvingState_CurrentState_Name","CertificateExpirationAlarmType_ShelvingState_CurrentState_Number","CertificateExpirationAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","CertificateExpirationAlarmType_ShelvingState_LastTransition","CertificateExpirationAlarmType_ShelvingState_LastTransition_Id","CertificateExpirationAlarmType_ShelvingState_LastTransition_Name","CertificateExpirationAlarmType_ShelvingState_LastTransition_Number","CertificateExpirationAlarmType_ShelvingState_LastTransition_TransitionTime","CertificateExpirationAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","CertificateExpirationAlarmType_ShelvingState_UnshelveTime","CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments","CertificateExpirationAlarmType_SuppressedOrShelved","CertificateExpirationAlarmType_MaxTimeShelved","CertificateExpirationAlarmType_NormalState","CertificateExpirationAlarmType_ExpirationDate","CertificateExpirationAlarmType_CertificateType","CertificateExpirationAlarmType_Certificate","FileType_MimeType","CreateDirectoryMethodType_InputArguments","CreateDirectoryMethodType_OutputArguments","CreateFileMethodType_InputArguments","CreateFileMethodType_OutputArguments","DeleteFileMethodType_InputArguments","MoveOrCopyMethodType_InputArguments","MoveOrCopyMethodType_OutputArguments","FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments","FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments","FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments","FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments","FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments","FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments","FileDirectoryType_FileName_Placeholder_Size","FileDirectoryType_FileName_Placeholder_Writable","FileDirectoryType_FileName_Placeholder_UserWritable","FileDirectoryType_FileName_Placeholder_OpenCount","FileDirectoryType_FileName_Placeholder_MimeType","FileDirectoryType_FileName_Placeholder_Open_InputArguments","FileDirectoryType_FileName_Placeholder_Open_OutputArguments","FileDirectoryType_FileName_Placeholder_Close_InputArguments","FileDirectoryType_FileName_Placeholder_Read_InputArguments","FileDirectoryType_FileName_Placeholder_Read_OutputArguments","FileDirectoryType_FileName_Placeholder_Write_InputArguments","FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments","FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments","FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments","FileDirectoryType_CreateDirectory_InputArguments","FileDirectoryType_CreateDirectory_OutputArguments","FileDirectoryType_CreateFile_InputArguments","FileDirectoryType_CreateFile_OutputArguments","FileDirectoryType_DeleteFileSystemObject_InputArguments","FileDirectoryType_MoveOrCopy_InputArguments","FileDirectoryType_MoveOrCopy_OutputArguments","AddressSpaceFileType_MimeType","NamespaceMetadataType_NamespaceFile_MimeType","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_MimeType","TrustListType_MimeType","CertificateGroupType_TrustList_Size","CertificateGroupType_TrustList_Writable","CertificateGroupType_TrustList_UserWritable","CertificateGroupType_TrustList_OpenCount","CertificateGroupType_TrustList_MimeType","CertificateGroupType_TrustList_Open_InputArguments","CertificateGroupType_TrustList_Open_OutputArguments","CertificateGroupType_TrustList_Close_InputArguments","CertificateGroupType_TrustList_Read_InputArguments","CertificateGroupType_TrustList_Read_OutputArguments","CertificateGroupType_TrustList_Write_InputArguments","CertificateGroupType_TrustList_GetPosition_InputArguments","CertificateGroupType_TrustList_GetPosition_OutputArguments","CertificateGroupType_TrustList_SetPosition_InputArguments","CertificateGroupType_TrustList_LastUpdateTime","CertificateGroupType_TrustList_OpenWithMasks_InputArguments","CertificateGroupType_TrustList_OpenWithMasks_OutputArguments","CertificateGroupType_TrustList_CloseAndUpdate_InputArguments","CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments","CertificateGroupType_TrustList_AddCertificate_InputArguments","CertificateGroupType_TrustList_RemoveCertificate_InputArguments","CertificateGroupType_CertificateTypes","CertificateUpdatedAuditEventType_CertificateGroup","CertificateUpdatedAuditEventType_CertificateType","ServerConfiguration_UpdateCertificate_InputArguments","ServerConfiguration_UpdateCertificate_OutputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_MimeType","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments","CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_MimeType","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments","CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_MimeType","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments","CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_MimeType","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments","CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_MimeType","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_MimeType","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_MimeType","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_MimeType","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_MimeType","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_MimeType","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes","AuditCreateSessionEventType_SessionId","AuditUrlMismatchEventType_SessionId","Server_ServerRedundancy_ServerNetworkGroups","StructureType_EnumStrings","OpcUa_XmlSchema_EnumField","OpcUa_XmlSchema_EnumField_DataTypeVersion","OpcUa_XmlSchema_EnumField_DictionaryFragment","OpcUa_XmlSchema_KeyValuePair","OpcUa_XmlSchema_KeyValuePair_DataTypeVersion","OpcUa_XmlSchema_KeyValuePair_DictionaryFragment","OpcUa_BinarySchema_EnumField","OpcUa_BinarySchema_EnumField_DataTypeVersion","OpcUa_BinarySchema_EnumField_DictionaryFragment","OpcUa_BinarySchema_KeyValuePair","OpcUa_BinarySchema_KeyValuePair_DataTypeVersion","OpcUa_BinarySchema_KeyValuePair_DictionaryFragment","CertificateExpirationAlarmType_ExpirationLimit","DataTypeDictionaryType_Deprecated","MaxCharacters","ServerType_UrisVersion","Server_UrisVersion","AuditConditionResetEventType_EventId","AuditConditionResetEventType_EventType","AuditConditionResetEventType_SourceNode","AuditConditionResetEventType_SourceName","AuditConditionResetEventType_Time","AuditConditionResetEventType_ReceiveTime","AuditConditionResetEventType_LocalTime","AuditConditionResetEventType_Message","AuditConditionResetEventType_Severity","AuditConditionResetEventType_ActionTimeStamp","AuditConditionResetEventType_Status","AuditConditionResetEventType_ServerId","AuditConditionResetEventType_ClientAuditEntryId","AuditConditionResetEventType_ClientUserId","AuditConditionResetEventType_MethodId","AuditConditionResetEventType_InputArguments","PermissionType_OptionSetValues","AccessLevelType_OptionSetValues","EventNotifierType_OptionSetValues","AccessRestrictionType_OptionSetValues","AttributeWriteMask_OptionSetValues","OpcUa_BinarySchema_Deprecated","ProgramStateMachineType_ProgramDiagnostics_LastMethodInputValues","OpcUa_XmlSchema_Deprecated","ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputValues","ProgramDiagnostic2Type_CreateSessionId","ProgramDiagnostic2Type_CreateClientName","ProgramDiagnostic2Type_InvocationCreationTime","ProgramDiagnostic2Type_LastTransitionTime","ProgramDiagnostic2Type_LastMethodCall","ProgramDiagnostic2Type_LastMethodSessionId","ProgramDiagnostic2Type_LastMethodInputArguments","ProgramDiagnostic2Type_LastMethodOutputArguments","ProgramDiagnostic2Type_LastMethodInputValues","ProgramDiagnostic2Type_LastMethodOutputValues","ProgramDiagnostic2Type_LastMethodCallTime","ProgramDiagnostic2Type_LastMethodReturnStatus","OpcUa_BinarySchema_ProgramDiagnostic2DataType","OpcUa_BinarySchema_ProgramDiagnostic2DataType_DataTypeVersion","OpcUa_BinarySchema_ProgramDiagnostic2DataType_DictionaryFragment","OpcUa_XmlSchema_ProgramDiagnostic2DataType","OpcUa_XmlSchema_ProgramDiagnostic2DataType_DataTypeVersion","OpcUa_XmlSchema_ProgramDiagnostic2DataType_DictionaryFragment","AccessLevelExType_OptionSetValues","RoleSetType_RoleName_Placeholder_ApplicationsExclude","RoleSetType_RoleName_Placeholder_EndpointsExclude","RoleType_ApplicationsExclude","RoleType_EndpointsExclude","WellKnownRole_Anonymous_ApplicationsExclude","WellKnownRole_Anonymous_EndpointsExclude","WellKnownRole_AuthenticatedUser_ApplicationsExclude","WellKnownRole_AuthenticatedUser_EndpointsExclude","WellKnownRole_Observer_ApplicationsExclude","WellKnownRole_Observer_EndpointsExclude","WellKnownRole_Operator_ApplicationsExclude","WellKnownRole_Operator_EndpointsExclude","WellKnownRole_Engineer_ApplicationsExclude","WellKnownRole_Engineer_EndpointsExclude","WellKnownRole_Supervisor_ApplicationsExclude","WellKnownRole_Supervisor_EndpointsExclude","WellKnownRole_ConfigureAdmin_ApplicationsExclude","WellKnownRole_ConfigureAdmin_EndpointsExclude","WellKnownRole_SecurityAdmin_ApplicationsExclude","WellKnownRole_SecurityAdmin_EndpointsExclude","RoleSetType_RoleName_Placeholder_AddIdentity_InputArguments","RoleSetType_RoleName_Placeholder_RemoveIdentity_InputArguments","RoleType_AddIdentity_InputArguments","RoleType_RemoveIdentity_InputArguments","IdentityCriteriaType_EnumValues","AddIdentityMethodType_InputArguments","RemoveIdentityMethodType_InputArguments","WellKnownRole_Anonymous_AddIdentity_InputArguments","WellKnownRole_Anonymous_RemoveIdentity_InputArguments","WellKnownRole_AuthenticatedUser_AddIdentity_InputArguments","WellKnownRole_AuthenticatedUser_RemoveIdentity_InputArguments","WellKnownRole_Observer_AddIdentity_InputArguments","WellKnownRole_Observer_RemoveIdentity_InputArguments","WellKnownRole_Operator_AddIdentity_InputArguments","WellKnownRole_Operator_RemoveIdentity_InputArguments","WellKnownRole_Supervisor_AddIdentity_InputArguments","WellKnownRole_Supervisor_RemoveIdentity_InputArguments","WellKnownRole_SecurityAdmin_AddIdentity_InputArguments","WellKnownRole_SecurityAdmin_RemoveIdentity_InputArguments","WellKnownRole_ConfigureAdmin_AddIdentity_InputArguments","WellKnownRole_ConfigureAdmin_RemoveIdentity_InputArguments","OpcUa_XmlSchema_IdentityMappingRuleType","OpcUa_XmlSchema_IdentityMappingRuleType_DataTypeVersion","OpcUa_XmlSchema_IdentityMappingRuleType_DictionaryFragment","OpcUa_BinarySchema_EndpointType","OpcUa_BinarySchema_EndpointType_DataTypeVersion","OpcUa_BinarySchema_EndpointType_DictionaryFragment","OpcUa_BinarySchema_IdentityMappingRuleType","OpcUa_BinarySchema_IdentityMappingRuleType_DataTypeVersion","OpcUa_BinarySchema_IdentityMappingRuleType_DictionaryFragment","TemporaryFileTransferType_ClientProcessingTimeout","TemporaryFileTransferType_GenerateFileForRead_InputArguments","TemporaryFileTransferType_GenerateFileForRead_OutputArguments","TemporaryFileTransferType_GenerateFileForWrite_OutputArguments","TemporaryFileTransferType_CloseAndCommit_InputArguments","TemporaryFileTransferType_CloseAndCommit_OutputArguments","TemporaryFileTransferType_TransferState_Placeholder_CurrentState","TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id","TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Name","TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Number","TemporaryFileTransferType_TransferState_Placeholder_CurrentState_EffectiveDisplayName","TemporaryFileTransferType_TransferState_Placeholder_LastTransition","TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id","TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Name","TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Number","TemporaryFileTransferType_TransferState_Placeholder_LastTransition_TransitionTime","TemporaryFileTransferType_TransferState_Placeholder_LastTransition_EffectiveTransitionTime","GenerateFileForReadMethodType_InputArguments","GenerateFileForReadMethodType_OutputArguments","GenerateFileForWriteMethodType_OutputArguments","CloseAndCommitMethodType_InputArguments","CloseAndCommitMethodType_OutputArguments","FileTransferStateMachineType_CurrentState","FileTransferStateMachineType_CurrentState_Id","FileTransferStateMachineType_CurrentState_Name","FileTransferStateMachineType_CurrentState_Number","FileTransferStateMachineType_CurrentState_EffectiveDisplayName","FileTransferStateMachineType_LastTransition","FileTransferStateMachineType_LastTransition_Id","FileTransferStateMachineType_LastTransition_Name","FileTransferStateMachineType_LastTransition_Number","FileTransferStateMachineType_LastTransition_TransitionTime","FileTransferStateMachineType_LastTransition_EffectiveTransitionTime","FileTransferStateMachineType_Idle_StateNumber","FileTransferStateMachineType_ReadPrepare_StateNumber","FileTransferStateMachineType_ReadTransfer_StateNumber","FileTransferStateMachineType_ApplyWrite_StateNumber","FileTransferStateMachineType_Error_StateNumber","FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber","FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber","FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber","FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber","FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber","FileTransferStateMachineType_ReadPrepareToError_TransitionNumber","FileTransferStateMachineType_ReadTransferToError_TransitionNumber","FileTransferStateMachineType_ApplyWriteToError_TransitionNumber","FileTransferStateMachineType_ErrorToIdle_TransitionNumber","OPCUANamespaceMetadata_NamespaceUri","OPCUANamespaceMetadata_NamespaceVersion","OPCUANamespaceMetadata_NamespacePublicationDate","OPCUANamespaceMetadata_IsNamespaceSubset","OPCUANamespaceMetadata_StaticNodeIdTypes","OPCUANamespaceMetadata_StaticNumericNodeIdRange","OPCUANamespaceMetadata_StaticStringNodeIdPattern","OPCUANamespaceMetadata_NamespaceFile_Size","OPCUANamespaceMetadata_NamespaceFile_Writable","OPCUANamespaceMetadata_NamespaceFile_UserWritable","OPCUANamespaceMetadata_NamespaceFile_OpenCount","OPCUANamespaceMetadata_NamespaceFile_MimeType","OPCUANamespaceMetadata_NamespaceFile_Open_InputArguments","OPCUANamespaceMetadata_NamespaceFile_Open_OutputArguments","OPCUANamespaceMetadata_NamespaceFile_Close_InputArguments","OPCUANamespaceMetadata_NamespaceFile_Read_InputArguments","OPCUANamespaceMetadata_NamespaceFile_Read_OutputArguments","OPCUANamespaceMetadata_NamespaceFile_Write_InputArguments","OPCUANamespaceMetadata_NamespaceFile_GetPosition_InputArguments","OPCUANamespaceMetadata_NamespaceFile_GetPosition_OutputArguments","OPCUANamespaceMetadata_NamespaceFile_SetPosition_InputArguments","RoleSetType_AddRole_InputArguments","RoleSetType_AddRole_OutputArguments","RoleSetType_RemoveRole_InputArguments","AddRoleMethodType_InputArguments","AddRoleMethodType_OutputArguments","RemoveRoleMethodType_InputArguments","OpcUa_XmlSchema_EndpointType","OpcUa_XmlSchema_EndpointType_DataTypeVersion","OpcUa_XmlSchema_EndpointType_DictionaryFragment","WellKnownRole_Engineer_AddIdentity_InputArguments","WellKnownRole_Engineer_RemoveIdentity_InputArguments","OpcUa_XmlSchema_RolePermissionType","OpcUa_XmlSchema_RolePermissionType_DataTypeVersion","OpcUa_XmlSchema_RolePermissionType_DictionaryFragment","OpcUa_BinarySchema_RolePermissionType","OpcUa_BinarySchema_RolePermissionType_DataTypeVersion","OpcUa_BinarySchema_RolePermissionType_DictionaryFragment","OPCUANamespaceMetadata_DefaultRolePermissions","OPCUANamespaceMetadata_DefaultUserRolePermissions","OPCUANamespaceMetadata_DefaultAccessRestrictions","NamespaceMetadataType_DefaultRolePermissions","NamespaceMetadataType_DefaultUserRolePermissions","NamespaceMetadataType_DefaultAccessRestrictions","NamespacesType_NamespaceIdentifier_Placeholder_DefaultRolePermissions","NamespacesType_NamespaceIdentifier_Placeholder_DefaultUserRolePermissions","NamespacesType_NamespaceIdentifier_Placeholder_DefaultAccessRestrictions","RoleSetType_RoleName_Placeholder_Identities","RoleSetType_RoleName_Placeholder_Applications","RoleSetType_RoleName_Placeholder_Endpoints","RoleSetType_RoleName_Placeholder_AddApplication_InputArguments","RoleSetType_RoleName_Placeholder_RemoveApplication_InputArguments","RoleSetType_RoleName_Placeholder_AddEndpoint_InputArguments","RoleSetType_RoleName_Placeholder_RemoveEndpoint_InputArguments","RoleType_Identities","RoleType_Applications","RoleType_Endpoints","RoleType_AddApplication_InputArguments","RoleType_RemoveApplication_InputArguments","RoleType_AddEndpoint_InputArguments","RoleType_RemoveEndpoint_InputArguments","AddApplicationMethodType_InputArguments","RemoveApplicationMethodType_InputArguments","AddEndpointMethodType_InputArguments","RemoveEndpointMethodType_InputArguments","WellKnownRole_Anonymous_Identities","WellKnownRole_Anonymous_Applications","WellKnownRole_Anonymous_Endpoints","WellKnownRole_Anonymous_AddApplication_InputArguments","WellKnownRole_Anonymous_RemoveApplication_InputArguments","WellKnownRole_Anonymous_AddEndpoint_InputArguments","WellKnownRole_Anonymous_RemoveEndpoint_InputArguments","WellKnownRole_AuthenticatedUser_Identities","WellKnownRole_AuthenticatedUser_Applications","WellKnownRole_AuthenticatedUser_Endpoints","WellKnownRole_AuthenticatedUser_AddApplication_InputArguments","WellKnownRole_AuthenticatedUser_RemoveApplication_InputArguments","WellKnownRole_AuthenticatedUser_AddEndpoint_InputArguments","WellKnownRole_AuthenticatedUser_RemoveEndpoint_InputArguments","WellKnownRole_Observer_Identities","WellKnownRole_Observer_Applications","WellKnownRole_Observer_Endpoints","WellKnownRole_Observer_AddApplication_InputArguments","WellKnownRole_Observer_RemoveApplication_InputArguments","WellKnownRole_Observer_AddEndpoint_InputArguments","WellKnownRole_Observer_RemoveEndpoint_InputArguments","WellKnownRole_Operator_Identities","WellKnownRole_Operator_Applications","WellKnownRole_Operator_Endpoints","WellKnownRole_Operator_AddApplication_InputArguments","WellKnownRole_Operator_RemoveApplication_InputArguments","WellKnownRole_Operator_AddEndpoint_InputArguments","WellKnownRole_Operator_RemoveEndpoint_InputArguments","WellKnownRole_Engineer_Identities","WellKnownRole_Engineer_Applications","WellKnownRole_Engineer_Endpoints","WellKnownRole_Engineer_AddApplication_InputArguments","WellKnownRole_Engineer_RemoveApplication_InputArguments","WellKnownRole_Engineer_AddEndpoint_InputArguments","WellKnownRole_Engineer_RemoveEndpoint_InputArguments","WellKnownRole_Supervisor_Identities","WellKnownRole_Supervisor_Applications","WellKnownRole_Supervisor_Endpoints","WellKnownRole_Supervisor_AddApplication_InputArguments","WellKnownRole_Supervisor_RemoveApplication_InputArguments","WellKnownRole_Supervisor_AddEndpoint_InputArguments","WellKnownRole_Supervisor_RemoveEndpoint_InputArguments","WellKnownRole_SecurityAdmin_Identities","WellKnownRole_SecurityAdmin_Applications","WellKnownRole_SecurityAdmin_Endpoints","WellKnownRole_SecurityAdmin_AddApplication_InputArguments","WellKnownRole_SecurityAdmin_RemoveApplication_InputArguments","WellKnownRole_SecurityAdmin_AddEndpoint_InputArguments","WellKnownRole_SecurityAdmin_RemoveEndpoint_InputArguments","WellKnownRole_ConfigureAdmin_Identities","WellKnownRole_ConfigureAdmin_Applications","WellKnownRole_ConfigureAdmin_Endpoints","WellKnownRole_ConfigureAdmin_AddApplication_InputArguments","WellKnownRole_ConfigureAdmin_RemoveApplication_InputArguments","WellKnownRole_ConfigureAdmin_AddEndpoint_InputArguments","WellKnownRole_ConfigureAdmin_RemoveEndpoint_InputArguments","ServerType_ServerCapabilities_Roles_AddRole_InputArguments","ServerType_ServerCapabilities_Roles_AddRole_OutputArguments","ServerType_ServerCapabilities_Roles_RemoveRole_InputArguments","ServerCapabilitiesType_Roles_AddRole_InputArguments","ServerCapabilitiesType_Roles_AddRole_OutputArguments","ServerCapabilitiesType_Roles_RemoveRole_InputArguments","Server_ServerCapabilities_Roles_AddRole_InputArguments","Server_ServerCapabilities_Roles_AddRole_OutputArguments","Server_ServerCapabilities_Roles_RemoveRole_InputArguments","DefaultInputValues","SelectionListType_RestrictToList","Server_CurrentTimeZone","FileSystem_FileDirectoryName_Placeholder_CreateDirectory_InputArguments","FileSystem_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments","FileSystem_FileDirectoryName_Placeholder_CreateFile_InputArguments","FileSystem_FileDirectoryName_Placeholder_CreateFile_OutputArguments","FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments","FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments","FileSystem_FileName_Placeholder_Size","FileSystem_FileName_Placeholder_Writable","FileSystem_FileName_Placeholder_UserWritable","FileSystem_FileName_Placeholder_OpenCount","FileSystem_FileName_Placeholder_MimeType","FileSystem_FileName_Placeholder_Open_InputArguments","FileSystem_FileName_Placeholder_Open_OutputArguments","FileSystem_FileName_Placeholder_Close_InputArguments","FileSystem_FileName_Placeholder_Read_InputArguments","FileSystem_FileName_Placeholder_Read_OutputArguments","FileSystem_FileName_Placeholder_Write_InputArguments","FileSystem_FileName_Placeholder_GetPosition_InputArguments","FileSystem_FileName_Placeholder_GetPosition_OutputArguments","FileSystem_FileName_Placeholder_SetPosition_InputArguments","FileSystem_CreateDirectory_InputArguments","FileSystem_CreateDirectory_OutputArguments","FileSystem_CreateFile_InputArguments","FileSystem_CreateFile_OutputArguments","FileSystem_DeleteFileSystemObject_InputArguments","FileSystem_MoveOrCopy_InputArguments","FileSystem_MoveOrCopy_OutputArguments","TemporaryFileTransferType_GenerateFileForWrite_InputArguments","GenerateFileForWriteMethodType_InputArguments","ConditionType_ConditionSubClassId","ConditionType_ConditionSubClassName","DialogConditionType_ConditionSubClassId","DialogConditionType_ConditionSubClassName","AcknowledgeableConditionType_ConditionSubClassId","AcknowledgeableConditionType_ConditionSubClassName","AlarmConditionType_ConditionSubClassId","AlarmConditionType_ConditionSubClassName","AlarmConditionType_OutOfServiceState","AlarmConditionType_OutOfServiceState_Id","AlarmConditionType_OutOfServiceState_Name","AlarmConditionType_OutOfServiceState_Number","AlarmConditionType_OutOfServiceState_EffectiveDisplayName","AlarmConditionType_OutOfServiceState_TransitionTime","AlarmConditionType_OutOfServiceState_EffectiveTransitionTime","AlarmConditionType_OutOfServiceState_TrueState","AlarmConditionType_OutOfServiceState_FalseState","AlarmConditionType_SilenceState","AlarmConditionType_SilenceState_Id","AlarmConditionType_SilenceState_Name","AlarmConditionType_SilenceState_Number","AlarmConditionType_SilenceState_EffectiveDisplayName","AlarmConditionType_SilenceState_TransitionTime","AlarmConditionType_SilenceState_EffectiveTransitionTime","AlarmConditionType_SilenceState_TrueState","AlarmConditionType_SilenceState_FalseState","AlarmConditionType_AudibleEnabled","AlarmConditionType_AudibleSound","AlarmConditionType_OnDelay","AlarmConditionType_OffDelay","AlarmConditionType_FirstInGroupFlag","AlarmConditionType_ReAlarmTime","AlarmConditionType_ReAlarmRepeatCount","AlarmGroupType_AlarmConditionInstance_Placeholder_EventId","AlarmGroupType_AlarmConditionInstance_Placeholder_EventType","AlarmGroupType_AlarmConditionInstance_Placeholder_SourceNode","AlarmGroupType_AlarmConditionInstance_Placeholder_SourceName","AlarmGroupType_AlarmConditionInstance_Placeholder_Time","AlarmGroupType_AlarmConditionInstance_Placeholder_ReceiveTime","AlarmGroupType_AlarmConditionInstance_Placeholder_LocalTime","AlarmGroupType_AlarmConditionInstance_Placeholder_Message","AlarmGroupType_AlarmConditionInstance_Placeholder_Severity","AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassId","AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassName","AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionSubClassId","AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionSubClassName","AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionName","AlarmGroupType_AlarmConditionInstance_Placeholder_BranchId","AlarmGroupType_AlarmConditionInstance_Placeholder_Retain","AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState","AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_EffectiveDisplayName","AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_TransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_EffectiveTransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_TrueState","AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_FalseState","AlarmGroupType_AlarmConditionInstance_Placeholder_Quality","AlarmGroupType_AlarmConditionInstance_Placeholder_Quality_SourceTimestamp","AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity","AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity_SourceTimestamp","AlarmGroupType_AlarmConditionInstance_Placeholder_Comment","AlarmGroupType_AlarmConditionInstance_Placeholder_Comment_SourceTimestamp","AlarmGroupType_AlarmConditionInstance_Placeholder_ClientUserId","AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment_InputArguments","AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState","AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_EffectiveDisplayName","AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_TransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_EffectiveTransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_TrueState","AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_FalseState","AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState","AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_EffectiveDisplayName","AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_TransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_EffectiveTransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_TrueState","AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_FalseState","AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge_InputArguments","AlarmGroupType_AlarmConditionInstance_Placeholder_Confirm_InputArguments","AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState","AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_EffectiveDisplayName","AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_TransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_EffectiveTransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_TrueState","AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_FalseState","AlarmGroupType_AlarmConditionInstance_Placeholder_InputNode","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_EffectiveDisplayName","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_TransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_EffectiveTransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_TrueState","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_FalseState","AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState","AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_EffectiveDisplayName","AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_TransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_EffectiveTransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_TrueState","AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_FalseState","AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState","AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_EffectiveDisplayName","AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_TransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_EffectiveTransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_TrueState","AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_FalseState","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_EffectiveDisplayName","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_TransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_EffectiveTransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_UnshelveTime","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve_InputArguments","AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedOrShelved","AlarmGroupType_AlarmConditionInstance_Placeholder_MaxTimeShelved","AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleEnabled","AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleSound","AlarmGroupType_AlarmConditionInstance_Placeholder_OnDelay","AlarmGroupType_AlarmConditionInstance_Placeholder_OffDelay","AlarmGroupType_AlarmConditionInstance_Placeholder_FirstInGroupFlag","AlarmGroupType_AlarmConditionInstance_Placeholder_ReAlarmTime","AlarmGroupType_AlarmConditionInstance_Placeholder_ReAlarmRepeatCount","LimitAlarmType_ConditionSubClassId","LimitAlarmType_ConditionSubClassName","LimitAlarmType_OutOfServiceState","LimitAlarmType_OutOfServiceState_Id","LimitAlarmType_OutOfServiceState_Name","LimitAlarmType_OutOfServiceState_Number","LimitAlarmType_OutOfServiceState_EffectiveDisplayName","LimitAlarmType_OutOfServiceState_TransitionTime","LimitAlarmType_OutOfServiceState_EffectiveTransitionTime","LimitAlarmType_OutOfServiceState_TrueState","LimitAlarmType_OutOfServiceState_FalseState","LimitAlarmType_SilenceState","LimitAlarmType_SilenceState_Id","LimitAlarmType_SilenceState_Name","LimitAlarmType_SilenceState_Number","LimitAlarmType_SilenceState_EffectiveDisplayName","LimitAlarmType_SilenceState_TransitionTime","LimitAlarmType_SilenceState_EffectiveTransitionTime","LimitAlarmType_SilenceState_TrueState","LimitAlarmType_SilenceState_FalseState","LimitAlarmType_AudibleEnabled","LimitAlarmType_AudibleSound","LimitAlarmType_OnDelay","LimitAlarmType_OffDelay","LimitAlarmType_FirstInGroupFlag","LimitAlarmType_ReAlarmTime","LimitAlarmType_ReAlarmRepeatCount","LimitAlarmType_BaseHighHighLimit","LimitAlarmType_BaseHighLimit","LimitAlarmType_BaseLowLimit","LimitAlarmType_BaseLowLowLimit","ExclusiveLimitAlarmType_ConditionSubClassId","ExclusiveLimitAlarmType_ConditionSubClassName","ExclusiveLimitAlarmType_OutOfServiceState","ExclusiveLimitAlarmType_OutOfServiceState_Id","ExclusiveLimitAlarmType_OutOfServiceState_Name","ExclusiveLimitAlarmType_OutOfServiceState_Number","ExclusiveLimitAlarmType_OutOfServiceState_EffectiveDisplayName","ExclusiveLimitAlarmType_OutOfServiceState_TransitionTime","ExclusiveLimitAlarmType_OutOfServiceState_EffectiveTransitionTime","ExclusiveLimitAlarmType_OutOfServiceState_TrueState","ExclusiveLimitAlarmType_OutOfServiceState_FalseState","ExclusiveLimitAlarmType_SilenceState","ExclusiveLimitAlarmType_SilenceState_Id","ExclusiveLimitAlarmType_SilenceState_Name","ExclusiveLimitAlarmType_SilenceState_Number","ExclusiveLimitAlarmType_SilenceState_EffectiveDisplayName","ExclusiveLimitAlarmType_SilenceState_TransitionTime","ExclusiveLimitAlarmType_SilenceState_EffectiveTransitionTime","ExclusiveLimitAlarmType_SilenceState_TrueState","ExclusiveLimitAlarmType_SilenceState_FalseState","ExclusiveLimitAlarmType_AudibleEnabled","ExclusiveLimitAlarmType_AudibleSound","ExclusiveLimitAlarmType_OnDelay","ExclusiveLimitAlarmType_OffDelay","ExclusiveLimitAlarmType_FirstInGroupFlag","ExclusiveLimitAlarmType_ReAlarmTime","ExclusiveLimitAlarmType_ReAlarmRepeatCount","ExclusiveLimitAlarmType_BaseHighHighLimit","ExclusiveLimitAlarmType_BaseHighLimit","ExclusiveLimitAlarmType_BaseLowLimit","ExclusiveLimitAlarmType_BaseLowLowLimit","NonExclusiveLimitAlarmType_ConditionSubClassId","NonExclusiveLimitAlarmType_ConditionSubClassName","NonExclusiveLimitAlarmType_OutOfServiceState","NonExclusiveLimitAlarmType_OutOfServiceState_Id","NonExclusiveLimitAlarmType_OutOfServiceState_Name","NonExclusiveLimitAlarmType_OutOfServiceState_Number","NonExclusiveLimitAlarmType_OutOfServiceState_EffectiveDisplayName","NonExclusiveLimitAlarmType_OutOfServiceState_TransitionTime","NonExclusiveLimitAlarmType_OutOfServiceState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_OutOfServiceState_TrueState","NonExclusiveLimitAlarmType_OutOfServiceState_FalseState","NonExclusiveLimitAlarmType_SilenceState","NonExclusiveLimitAlarmType_SilenceState_Id","NonExclusiveLimitAlarmType_SilenceState_Name","NonExclusiveLimitAlarmType_SilenceState_Number","NonExclusiveLimitAlarmType_SilenceState_EffectiveDisplayName","NonExclusiveLimitAlarmType_SilenceState_TransitionTime","NonExclusiveLimitAlarmType_SilenceState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_SilenceState_TrueState","NonExclusiveLimitAlarmType_SilenceState_FalseState","NonExclusiveLimitAlarmType_AudibleEnabled","NonExclusiveLimitAlarmType_AudibleSound","NonExclusiveLimitAlarmType_OnDelay","NonExclusiveLimitAlarmType_OffDelay","NonExclusiveLimitAlarmType_FirstInGroupFlag","NonExclusiveLimitAlarmType_ReAlarmTime","NonExclusiveLimitAlarmType_ReAlarmRepeatCount","NonExclusiveLimitAlarmType_BaseHighHighLimit","NonExclusiveLimitAlarmType_BaseHighLimit","NonExclusiveLimitAlarmType_BaseLowLimit","NonExclusiveLimitAlarmType_BaseLowLowLimit","NonExclusiveLevelAlarmType_ConditionSubClassId","NonExclusiveLevelAlarmType_ConditionSubClassName","NonExclusiveLevelAlarmType_OutOfServiceState","NonExclusiveLevelAlarmType_OutOfServiceState_Id","NonExclusiveLevelAlarmType_OutOfServiceState_Name","NonExclusiveLevelAlarmType_OutOfServiceState_Number","NonExclusiveLevelAlarmType_OutOfServiceState_EffectiveDisplayName","NonExclusiveLevelAlarmType_OutOfServiceState_TransitionTime","NonExclusiveLevelAlarmType_OutOfServiceState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_OutOfServiceState_TrueState","NonExclusiveLevelAlarmType_OutOfServiceState_FalseState","NonExclusiveLevelAlarmType_SilenceState","NonExclusiveLevelAlarmType_SilenceState_Id","NonExclusiveLevelAlarmType_SilenceState_Name","NonExclusiveLevelAlarmType_SilenceState_Number","NonExclusiveLevelAlarmType_SilenceState_EffectiveDisplayName","NonExclusiveLevelAlarmType_SilenceState_TransitionTime","NonExclusiveLevelAlarmType_SilenceState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_SilenceState_TrueState","NonExclusiveLevelAlarmType_SilenceState_FalseState","NonExclusiveLevelAlarmType_AudibleEnabled","NonExclusiveLevelAlarmType_AudibleSound","NonExclusiveLevelAlarmType_OnDelay","NonExclusiveLevelAlarmType_OffDelay","NonExclusiveLevelAlarmType_FirstInGroupFlag","NonExclusiveLevelAlarmType_ReAlarmTime","NonExclusiveLevelAlarmType_ReAlarmRepeatCount","NonExclusiveLevelAlarmType_BaseHighHighLimit","NonExclusiveLevelAlarmType_BaseHighLimit","NonExclusiveLevelAlarmType_BaseLowLimit","NonExclusiveLevelAlarmType_BaseLowLowLimit","ExclusiveLevelAlarmType_ConditionSubClassId","ExclusiveLevelAlarmType_ConditionSubClassName","ExclusiveLevelAlarmType_OutOfServiceState","ExclusiveLevelAlarmType_OutOfServiceState_Id","ExclusiveLevelAlarmType_OutOfServiceState_Name","ExclusiveLevelAlarmType_OutOfServiceState_Number","ExclusiveLevelAlarmType_OutOfServiceState_EffectiveDisplayName","ExclusiveLevelAlarmType_OutOfServiceState_TransitionTime","ExclusiveLevelAlarmType_OutOfServiceState_EffectiveTransitionTime","ExclusiveLevelAlarmType_OutOfServiceState_TrueState","ExclusiveLevelAlarmType_OutOfServiceState_FalseState","ExclusiveLevelAlarmType_SilenceState","ExclusiveLevelAlarmType_SilenceState_Id","ExclusiveLevelAlarmType_SilenceState_Name","ExclusiveLevelAlarmType_SilenceState_Number","ExclusiveLevelAlarmType_SilenceState_EffectiveDisplayName","ExclusiveLevelAlarmType_SilenceState_TransitionTime","ExclusiveLevelAlarmType_SilenceState_EffectiveTransitionTime","ExclusiveLevelAlarmType_SilenceState_TrueState","ExclusiveLevelAlarmType_SilenceState_FalseState","ExclusiveLevelAlarmType_AudibleEnabled","ExclusiveLevelAlarmType_AudibleSound","ExclusiveLevelAlarmType_OnDelay","ExclusiveLevelAlarmType_OffDelay","ExclusiveLevelAlarmType_FirstInGroupFlag","ExclusiveLevelAlarmType_ReAlarmTime","ExclusiveLevelAlarmType_ReAlarmRepeatCount","ExclusiveLevelAlarmType_BaseHighHighLimit","ExclusiveLevelAlarmType_BaseHighLimit","ExclusiveLevelAlarmType_BaseLowLimit","ExclusiveLevelAlarmType_BaseLowLowLimit","NonExclusiveDeviationAlarmType_ConditionSubClassId","NonExclusiveDeviationAlarmType_ConditionSubClassName","NonExclusiveDeviationAlarmType_OutOfServiceState","NonExclusiveDeviationAlarmType_OutOfServiceState_Id","NonExclusiveDeviationAlarmType_OutOfServiceState_Name","NonExclusiveDeviationAlarmType_OutOfServiceState_Number","NonExclusiveDeviationAlarmType_OutOfServiceState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_OutOfServiceState_TransitionTime","NonExclusiveDeviationAlarmType_OutOfServiceState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_OutOfServiceState_TrueState","NonExclusiveDeviationAlarmType_OutOfServiceState_FalseState","NonExclusiveDeviationAlarmType_SilenceState","NonExclusiveDeviationAlarmType_SilenceState_Id","NonExclusiveDeviationAlarmType_SilenceState_Name","NonExclusiveDeviationAlarmType_SilenceState_Number","NonExclusiveDeviationAlarmType_SilenceState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_SilenceState_TransitionTime","NonExclusiveDeviationAlarmType_SilenceState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_SilenceState_TrueState","NonExclusiveDeviationAlarmType_SilenceState_FalseState","NonExclusiveDeviationAlarmType_AudibleEnabled","NonExclusiveDeviationAlarmType_AudibleSound","NonExclusiveDeviationAlarmType_OnDelay","NonExclusiveDeviationAlarmType_OffDelay","NonExclusiveDeviationAlarmType_FirstInGroupFlag","NonExclusiveDeviationAlarmType_ReAlarmTime","NonExclusiveDeviationAlarmType_ReAlarmRepeatCount","NonExclusiveDeviationAlarmType_BaseHighHighLimit","NonExclusiveDeviationAlarmType_BaseHighLimit","NonExclusiveDeviationAlarmType_BaseLowLimit","NonExclusiveDeviationAlarmType_BaseLowLowLimit","NonExclusiveDeviationAlarmType_BaseSetpointNode","ExclusiveDeviationAlarmType_ConditionSubClassId","ExclusiveDeviationAlarmType_ConditionSubClassName","ExclusiveDeviationAlarmType_OutOfServiceState","ExclusiveDeviationAlarmType_OutOfServiceState_Id","ExclusiveDeviationAlarmType_OutOfServiceState_Name","ExclusiveDeviationAlarmType_OutOfServiceState_Number","ExclusiveDeviationAlarmType_OutOfServiceState_EffectiveDisplayName","ExclusiveDeviationAlarmType_OutOfServiceState_TransitionTime","ExclusiveDeviationAlarmType_OutOfServiceState_EffectiveTransitionTime","ExclusiveDeviationAlarmType_OutOfServiceState_TrueState","ExclusiveDeviationAlarmType_OutOfServiceState_FalseState","ExclusiveDeviationAlarmType_SilenceState","ExclusiveDeviationAlarmType_SilenceState_Id","ExclusiveDeviationAlarmType_SilenceState_Name","ExclusiveDeviationAlarmType_SilenceState_Number","ExclusiveDeviationAlarmType_SilenceState_EffectiveDisplayName","ExclusiveDeviationAlarmType_SilenceState_TransitionTime","ExclusiveDeviationAlarmType_SilenceState_EffectiveTransitionTime","ExclusiveDeviationAlarmType_SilenceState_TrueState","ExclusiveDeviationAlarmType_SilenceState_FalseState","ExclusiveDeviationAlarmType_AudibleEnabled","ExclusiveDeviationAlarmType_AudibleSound","ExclusiveDeviationAlarmType_OnDelay","ExclusiveDeviationAlarmType_OffDelay","ExclusiveDeviationAlarmType_FirstInGroupFlag","ExclusiveDeviationAlarmType_ReAlarmTime","ExclusiveDeviationAlarmType_ReAlarmRepeatCount","ExclusiveDeviationAlarmType_BaseHighHighLimit","ExclusiveDeviationAlarmType_BaseHighLimit","ExclusiveDeviationAlarmType_BaseLowLimit","ExclusiveDeviationAlarmType_BaseLowLowLimit","ExclusiveDeviationAlarmType_BaseSetpointNode","NonExclusiveRateOfChangeAlarmType_ConditionSubClassId","NonExclusiveRateOfChangeAlarmType_ConditionSubClassName","NonExclusiveRateOfChangeAlarmType_OutOfServiceState","NonExclusiveRateOfChangeAlarmType_OutOfServiceState_Id","NonExclusiveRateOfChangeAlarmType_OutOfServiceState_Name","NonExclusiveRateOfChangeAlarmType_OutOfServiceState_Number","NonExclusiveRateOfChangeAlarmType_OutOfServiceState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_OutOfServiceState_TransitionTime","NonExclusiveRateOfChangeAlarmType_OutOfServiceState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_OutOfServiceState_TrueState","NonExclusiveRateOfChangeAlarmType_OutOfServiceState_FalseState","NonExclusiveRateOfChangeAlarmType_SilenceState","NonExclusiveRateOfChangeAlarmType_SilenceState_Id","NonExclusiveRateOfChangeAlarmType_SilenceState_Name","NonExclusiveRateOfChangeAlarmType_SilenceState_Number","NonExclusiveRateOfChangeAlarmType_SilenceState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_SilenceState_TransitionTime","NonExclusiveRateOfChangeAlarmType_SilenceState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_SilenceState_TrueState","NonExclusiveRateOfChangeAlarmType_SilenceState_FalseState","NonExclusiveRateOfChangeAlarmType_AudibleEnabled","NonExclusiveRateOfChangeAlarmType_AudibleSound","NonExclusiveRateOfChangeAlarmType_OnDelay","NonExclusiveRateOfChangeAlarmType_OffDelay","NonExclusiveRateOfChangeAlarmType_FirstInGroupFlag","NonExclusiveRateOfChangeAlarmType_ReAlarmTime","NonExclusiveRateOfChangeAlarmType_ReAlarmRepeatCount","NonExclusiveRateOfChangeAlarmType_BaseHighHighLimit","NonExclusiveRateOfChangeAlarmType_BaseHighLimit","NonExclusiveRateOfChangeAlarmType_BaseLowLimit","NonExclusiveRateOfChangeAlarmType_BaseLowLowLimit","NonExclusiveRateOfChangeAlarmType_EngineeringUnits","ExclusiveRateOfChangeAlarmType_ConditionSubClassId","ExclusiveRateOfChangeAlarmType_ConditionSubClassName","ExclusiveRateOfChangeAlarmType_OutOfServiceState","ExclusiveRateOfChangeAlarmType_OutOfServiceState_Id","ExclusiveRateOfChangeAlarmType_OutOfServiceState_Name","ExclusiveRateOfChangeAlarmType_OutOfServiceState_Number","ExclusiveRateOfChangeAlarmType_OutOfServiceState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_OutOfServiceState_TransitionTime","ExclusiveRateOfChangeAlarmType_OutOfServiceState_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_OutOfServiceState_TrueState","ExclusiveRateOfChangeAlarmType_OutOfServiceState_FalseState","ExclusiveRateOfChangeAlarmType_SilenceState","ExclusiveRateOfChangeAlarmType_SilenceState_Id","ExclusiveRateOfChangeAlarmType_SilenceState_Name","ExclusiveRateOfChangeAlarmType_SilenceState_Number","ExclusiveRateOfChangeAlarmType_SilenceState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_SilenceState_TransitionTime","ExclusiveRateOfChangeAlarmType_SilenceState_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_SilenceState_TrueState","ExclusiveRateOfChangeAlarmType_SilenceState_FalseState","ExclusiveRateOfChangeAlarmType_AudibleEnabled","ExclusiveRateOfChangeAlarmType_AudibleSound","ExclusiveRateOfChangeAlarmType_OnDelay","ExclusiveRateOfChangeAlarmType_OffDelay","ExclusiveRateOfChangeAlarmType_FirstInGroupFlag","ExclusiveRateOfChangeAlarmType_ReAlarmTime","ExclusiveRateOfChangeAlarmType_ReAlarmRepeatCount","ExclusiveRateOfChangeAlarmType_BaseHighHighLimit","ExclusiveRateOfChangeAlarmType_BaseHighLimit","ExclusiveRateOfChangeAlarmType_BaseLowLimit","ExclusiveRateOfChangeAlarmType_BaseLowLowLimit","ExclusiveRateOfChangeAlarmType_EngineeringUnits","DiscreteAlarmType_ConditionSubClassId","DiscreteAlarmType_ConditionSubClassName","DiscreteAlarmType_OutOfServiceState","DiscreteAlarmType_OutOfServiceState_Id","DiscreteAlarmType_OutOfServiceState_Name","DiscreteAlarmType_OutOfServiceState_Number","DiscreteAlarmType_OutOfServiceState_EffectiveDisplayName","DiscreteAlarmType_OutOfServiceState_TransitionTime","DiscreteAlarmType_OutOfServiceState_EffectiveTransitionTime","DiscreteAlarmType_OutOfServiceState_TrueState","DiscreteAlarmType_OutOfServiceState_FalseState","DiscreteAlarmType_SilenceState","DiscreteAlarmType_SilenceState_Id","DiscreteAlarmType_SilenceState_Name","DiscreteAlarmType_SilenceState_Number","DiscreteAlarmType_SilenceState_EffectiveDisplayName","DiscreteAlarmType_SilenceState_TransitionTime","DiscreteAlarmType_SilenceState_EffectiveTransitionTime","DiscreteAlarmType_SilenceState_TrueState","DiscreteAlarmType_SilenceState_FalseState","DiscreteAlarmType_AudibleEnabled","DiscreteAlarmType_AudibleSound","DiscreteAlarmType_OnDelay","DiscreteAlarmType_OffDelay","DiscreteAlarmType_FirstInGroupFlag","DiscreteAlarmType_ReAlarmTime","DiscreteAlarmType_ReAlarmRepeatCount","OffNormalAlarmType_ConditionSubClassId","OffNormalAlarmType_ConditionSubClassName","OffNormalAlarmType_OutOfServiceState","OffNormalAlarmType_OutOfServiceState_Id","OffNormalAlarmType_OutOfServiceState_Name","OffNormalAlarmType_OutOfServiceState_Number","OffNormalAlarmType_OutOfServiceState_EffectiveDisplayName","OffNormalAlarmType_OutOfServiceState_TransitionTime","OffNormalAlarmType_OutOfServiceState_EffectiveTransitionTime","OffNormalAlarmType_OutOfServiceState_TrueState","OffNormalAlarmType_OutOfServiceState_FalseState","OffNormalAlarmType_SilenceState","OffNormalAlarmType_SilenceState_Id","OffNormalAlarmType_SilenceState_Name","OffNormalAlarmType_SilenceState_Number","OffNormalAlarmType_SilenceState_EffectiveDisplayName","OffNormalAlarmType_SilenceState_TransitionTime","OffNormalAlarmType_SilenceState_EffectiveTransitionTime","OffNormalAlarmType_SilenceState_TrueState","OffNormalAlarmType_SilenceState_FalseState","OffNormalAlarmType_AudibleEnabled","OffNormalAlarmType_AudibleSound","OffNormalAlarmType_OnDelay","OffNormalAlarmType_OffDelay","OffNormalAlarmType_FirstInGroupFlag","OffNormalAlarmType_ReAlarmTime","OffNormalAlarmType_ReAlarmRepeatCount","SystemOffNormalAlarmType_ConditionSubClassId","SystemOffNormalAlarmType_ConditionSubClassName","SystemOffNormalAlarmType_OutOfServiceState","SystemOffNormalAlarmType_OutOfServiceState_Id","SystemOffNormalAlarmType_OutOfServiceState_Name","SystemOffNormalAlarmType_OutOfServiceState_Number","SystemOffNormalAlarmType_OutOfServiceState_EffectiveDisplayName","SystemOffNormalAlarmType_OutOfServiceState_TransitionTime","SystemOffNormalAlarmType_OutOfServiceState_EffectiveTransitionTime","SystemOffNormalAlarmType_OutOfServiceState_TrueState","SystemOffNormalAlarmType_OutOfServiceState_FalseState","SystemOffNormalAlarmType_SilenceState","SystemOffNormalAlarmType_SilenceState_Id","SystemOffNormalAlarmType_SilenceState_Name","SystemOffNormalAlarmType_SilenceState_Number","SystemOffNormalAlarmType_SilenceState_EffectiveDisplayName","SystemOffNormalAlarmType_SilenceState_TransitionTime","SystemOffNormalAlarmType_SilenceState_EffectiveTransitionTime","SystemOffNormalAlarmType_SilenceState_TrueState","SystemOffNormalAlarmType_SilenceState_FalseState","SystemOffNormalAlarmType_AudibleEnabled","SystemOffNormalAlarmType_AudibleSound","SystemOffNormalAlarmType_OnDelay","SystemOffNormalAlarmType_OffDelay","SystemOffNormalAlarmType_FirstInGroupFlag","SystemOffNormalAlarmType_ReAlarmTime","SystemOffNormalAlarmType_ReAlarmRepeatCount","TripAlarmType_ConditionSubClassId","TripAlarmType_ConditionSubClassName","TripAlarmType_OutOfServiceState","TripAlarmType_OutOfServiceState_Id","TripAlarmType_OutOfServiceState_Name","TripAlarmType_OutOfServiceState_Number","TripAlarmType_OutOfServiceState_EffectiveDisplayName","TripAlarmType_OutOfServiceState_TransitionTime","TripAlarmType_OutOfServiceState_EffectiveTransitionTime","TripAlarmType_OutOfServiceState_TrueState","TripAlarmType_OutOfServiceState_FalseState","TripAlarmType_SilenceState","TripAlarmType_SilenceState_Id","TripAlarmType_SilenceState_Name","TripAlarmType_SilenceState_Number","TripAlarmType_SilenceState_EffectiveDisplayName","TripAlarmType_SilenceState_TransitionTime","TripAlarmType_SilenceState_EffectiveTransitionTime","TripAlarmType_SilenceState_TrueState","TripAlarmType_SilenceState_FalseState","TripAlarmType_AudibleEnabled","TripAlarmType_AudibleSound","TripAlarmType_OnDelay","TripAlarmType_OffDelay","TripAlarmType_FirstInGroupFlag","TripAlarmType_ReAlarmTime","TripAlarmType_ReAlarmRepeatCount","CertificateExpirationAlarmType_ConditionSubClassId","CertificateExpirationAlarmType_ConditionSubClassName","CertificateExpirationAlarmType_OutOfServiceState","CertificateExpirationAlarmType_OutOfServiceState_Id","CertificateExpirationAlarmType_OutOfServiceState_Name","CertificateExpirationAlarmType_OutOfServiceState_Number","CertificateExpirationAlarmType_OutOfServiceState_EffectiveDisplayName","CertificateExpirationAlarmType_OutOfServiceState_TransitionTime","CertificateExpirationAlarmType_OutOfServiceState_EffectiveTransitionTime","CertificateExpirationAlarmType_OutOfServiceState_TrueState","CertificateExpirationAlarmType_OutOfServiceState_FalseState","CertificateExpirationAlarmType_SilenceState","CertificateExpirationAlarmType_SilenceState_Id","CertificateExpirationAlarmType_SilenceState_Name","CertificateExpirationAlarmType_SilenceState_Number","CertificateExpirationAlarmType_SilenceState_EffectiveDisplayName","CertificateExpirationAlarmType_SilenceState_TransitionTime","CertificateExpirationAlarmType_SilenceState_EffectiveTransitionTime","CertificateExpirationAlarmType_SilenceState_TrueState","CertificateExpirationAlarmType_SilenceState_FalseState","CertificateExpirationAlarmType_AudibleEnabled","CertificateExpirationAlarmType_AudibleSound","CertificateExpirationAlarmType_OnDelay","CertificateExpirationAlarmType_OffDelay","CertificateExpirationAlarmType_FirstInGroupFlag","CertificateExpirationAlarmType_ReAlarmTime","CertificateExpirationAlarmType_ReAlarmRepeatCount","DiscrepancyAlarmType_EventId","DiscrepancyAlarmType_EventType","DiscrepancyAlarmType_SourceNode","DiscrepancyAlarmType_SourceName","DiscrepancyAlarmType_Time","DiscrepancyAlarmType_ReceiveTime","DiscrepancyAlarmType_LocalTime","DiscrepancyAlarmType_Message","DiscrepancyAlarmType_Severity","DiscrepancyAlarmType_ConditionClassId","DiscrepancyAlarmType_ConditionClassName","DiscrepancyAlarmType_ConditionSubClassId","DiscrepancyAlarmType_ConditionSubClassName","DiscrepancyAlarmType_ConditionName","DiscrepancyAlarmType_BranchId","DiscrepancyAlarmType_Retain","DiscrepancyAlarmType_EnabledState","DiscrepancyAlarmType_EnabledState_Id","DiscrepancyAlarmType_EnabledState_Name","DiscrepancyAlarmType_EnabledState_Number","DiscrepancyAlarmType_EnabledState_EffectiveDisplayName","DiscrepancyAlarmType_EnabledState_TransitionTime","DiscrepancyAlarmType_EnabledState_EffectiveTransitionTime","DiscrepancyAlarmType_EnabledState_TrueState","DiscrepancyAlarmType_EnabledState_FalseState","DiscrepancyAlarmType_Quality","DiscrepancyAlarmType_Quality_SourceTimestamp","DiscrepancyAlarmType_LastSeverity","DiscrepancyAlarmType_LastSeverity_SourceTimestamp","DiscrepancyAlarmType_Comment","DiscrepancyAlarmType_Comment_SourceTimestamp","DiscrepancyAlarmType_ClientUserId","DiscrepancyAlarmType_AddComment_InputArguments","DiscrepancyAlarmType_ConditionRefresh_InputArguments","DiscrepancyAlarmType_ConditionRefresh2_InputArguments","DiscrepancyAlarmType_AckedState","DiscrepancyAlarmType_AckedState_Id","DiscrepancyAlarmType_AckedState_Name","DiscrepancyAlarmType_AckedState_Number","DiscrepancyAlarmType_AckedState_EffectiveDisplayName","DiscrepancyAlarmType_AckedState_TransitionTime","DiscrepancyAlarmType_AckedState_EffectiveTransitionTime","DiscrepancyAlarmType_AckedState_TrueState","DiscrepancyAlarmType_AckedState_FalseState","DiscrepancyAlarmType_ConfirmedState","DiscrepancyAlarmType_ConfirmedState_Id","DiscrepancyAlarmType_ConfirmedState_Name","DiscrepancyAlarmType_ConfirmedState_Number","DiscrepancyAlarmType_ConfirmedState_EffectiveDisplayName","DiscrepancyAlarmType_ConfirmedState_TransitionTime","DiscrepancyAlarmType_ConfirmedState_EffectiveTransitionTime","DiscrepancyAlarmType_ConfirmedState_TrueState","DiscrepancyAlarmType_ConfirmedState_FalseState","DiscrepancyAlarmType_Acknowledge_InputArguments","DiscrepancyAlarmType_Confirm_InputArguments","DiscrepancyAlarmType_ActiveState","DiscrepancyAlarmType_ActiveState_Id","DiscrepancyAlarmType_ActiveState_Name","DiscrepancyAlarmType_ActiveState_Number","DiscrepancyAlarmType_ActiveState_EffectiveDisplayName","DiscrepancyAlarmType_ActiveState_TransitionTime","DiscrepancyAlarmType_ActiveState_EffectiveTransitionTime","DiscrepancyAlarmType_ActiveState_TrueState","DiscrepancyAlarmType_ActiveState_FalseState","DiscrepancyAlarmType_InputNode","DiscrepancyAlarmType_SuppressedState","DiscrepancyAlarmType_SuppressedState_Id","DiscrepancyAlarmType_SuppressedState_Name","DiscrepancyAlarmType_SuppressedState_Number","DiscrepancyAlarmType_SuppressedState_EffectiveDisplayName","DiscrepancyAlarmType_SuppressedState_TransitionTime","DiscrepancyAlarmType_SuppressedState_EffectiveTransitionTime","DiscrepancyAlarmType_SuppressedState_TrueState","DiscrepancyAlarmType_SuppressedState_FalseState","DiscrepancyAlarmType_OutOfServiceState","DiscrepancyAlarmType_OutOfServiceState_Id","DiscrepancyAlarmType_OutOfServiceState_Name","DiscrepancyAlarmType_OutOfServiceState_Number","DiscrepancyAlarmType_OutOfServiceState_EffectiveDisplayName","DiscrepancyAlarmType_OutOfServiceState_TransitionTime","DiscrepancyAlarmType_OutOfServiceState_EffectiveTransitionTime","DiscrepancyAlarmType_OutOfServiceState_TrueState","DiscrepancyAlarmType_OutOfServiceState_FalseState","DiscrepancyAlarmType_SilenceState","DiscrepancyAlarmType_SilenceState_Id","DiscrepancyAlarmType_SilenceState_Name","DiscrepancyAlarmType_SilenceState_Number","DiscrepancyAlarmType_SilenceState_EffectiveDisplayName","DiscrepancyAlarmType_SilenceState_TransitionTime","DiscrepancyAlarmType_SilenceState_EffectiveTransitionTime","DiscrepancyAlarmType_SilenceState_TrueState","DiscrepancyAlarmType_SilenceState_FalseState","DiscrepancyAlarmType_ShelvingState_CurrentState","DiscrepancyAlarmType_ShelvingState_CurrentState_Id","DiscrepancyAlarmType_ShelvingState_CurrentState_Name","DiscrepancyAlarmType_ShelvingState_CurrentState_Number","DiscrepancyAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","DiscrepancyAlarmType_ShelvingState_LastTransition","DiscrepancyAlarmType_ShelvingState_LastTransition_Id","DiscrepancyAlarmType_ShelvingState_LastTransition_Name","DiscrepancyAlarmType_ShelvingState_LastTransition_Number","DiscrepancyAlarmType_ShelvingState_LastTransition_TransitionTime","DiscrepancyAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","DiscrepancyAlarmType_ShelvingState_UnshelveTime","DiscrepancyAlarmType_ShelvingState_TimedShelve_InputArguments","DiscrepancyAlarmType_SuppressedOrShelved","DiscrepancyAlarmType_MaxTimeShelved","DiscrepancyAlarmType_AudibleEnabled","DiscrepancyAlarmType_AudibleSound","DiscrepancyAlarmType_OnDelay","DiscrepancyAlarmType_OffDelay","DiscrepancyAlarmType_FirstInGroupFlag","DiscrepancyAlarmType_ReAlarmTime","DiscrepancyAlarmType_ReAlarmRepeatCount","DiscrepancyAlarmType_TargetValueNode","DiscrepancyAlarmType_ExpectedTime","DiscrepancyAlarmType_Tolerance","AuditConditionCommentEventType_ConditionEventId","AuditConditionAcknowledgeEventType_ConditionEventId","AuditConditionConfirmEventType_ConditionEventId","AuditConditionSuppressEventType_EventId","AuditConditionSuppressEventType_EventType","AuditConditionSuppressEventType_SourceNode","AuditConditionSuppressEventType_SourceName","AuditConditionSuppressEventType_Time","AuditConditionSuppressEventType_ReceiveTime","AuditConditionSuppressEventType_LocalTime","AuditConditionSuppressEventType_Message","AuditConditionSuppressEventType_Severity","AuditConditionSuppressEventType_ActionTimeStamp","AuditConditionSuppressEventType_Status","AuditConditionSuppressEventType_ServerId","AuditConditionSuppressEventType_ClientAuditEntryId","AuditConditionSuppressEventType_ClientUserId","AuditConditionSuppressEventType_MethodId","AuditConditionSuppressEventType_InputArguments","AuditConditionSilenceEventType_EventId","AuditConditionSilenceEventType_EventType","AuditConditionSilenceEventType_SourceNode","AuditConditionSilenceEventType_SourceName","AuditConditionSilenceEventType_Time","AuditConditionSilenceEventType_ReceiveTime","AuditConditionSilenceEventType_LocalTime","AuditConditionSilenceEventType_Message","AuditConditionSilenceEventType_Severity","AuditConditionSilenceEventType_ActionTimeStamp","AuditConditionSilenceEventType_Status","AuditConditionSilenceEventType_ServerId","AuditConditionSilenceEventType_ClientAuditEntryId","AuditConditionSilenceEventType_ClientUserId","AuditConditionSilenceEventType_MethodId","AuditConditionSilenceEventType_InputArguments","AuditConditionOutOfServiceEventType_EventId","AuditConditionOutOfServiceEventType_EventType","AuditConditionOutOfServiceEventType_SourceNode","AuditConditionOutOfServiceEventType_SourceName","AuditConditionOutOfServiceEventType_Time","AuditConditionOutOfServiceEventType_ReceiveTime","AuditConditionOutOfServiceEventType_LocalTime","AuditConditionOutOfServiceEventType_Message","AuditConditionOutOfServiceEventType_Severity","AuditConditionOutOfServiceEventType_ActionTimeStamp","AuditConditionOutOfServiceEventType_Status","AuditConditionOutOfServiceEventType_ServerId","AuditConditionOutOfServiceEventType_ClientAuditEntryId","AuditConditionOutOfServiceEventType_ClientUserId","AuditConditionOutOfServiceEventType_MethodId","AuditConditionOutOfServiceEventType_InputArguments","AlarmRateVariableType_Rate","AlarmMetricsType_AlarmCount","AlarmMetricsType_MaximumActiveState","AlarmMetricsType_MaximumUnAck","AlarmMetricsType_MaximumReAlarmCount","AlarmMetricsType_CurrentAlarmRate","AlarmMetricsType_CurrentAlarmRate_Rate","AlarmMetricsType_MaximumAlarmRate","AlarmMetricsType_MaximumAlarmRate_Rate","AlarmMetricsType_AverageAlarmRate","AlarmMetricsType_AverageAlarmRate_Rate","ServerType_LocalTime","AuditSecurityEventType_StatusCodeId","AuditChannelEventType_StatusCodeId","AuditOpenSecureChannelEventType_StatusCodeId","AuditSessionEventType_StatusCodeId","AuditCreateSessionEventType_StatusCodeId","AuditUrlMismatchEventType_StatusCodeId","AuditActivateSessionEventType_StatusCodeId","AuditCancelEventType_StatusCodeId","AuditCertificateEventType_StatusCodeId","AuditCertificateDataMismatchEventType_StatusCodeId","AuditCertificateExpiredEventType_StatusCodeId","AuditCertificateInvalidEventType_StatusCodeId","AuditCertificateUntrustedEventType_StatusCodeId","AuditCertificateRevokedEventType_StatusCodeId","AuditCertificateMismatchEventType_StatusCodeId","SelectionListType_Selections","SelectionListType_SelectionDescriptions","Server_LocalTime","FiniteStateMachineType_AvailableStates","FiniteStateMachineType_AvailableTransitions","TemporaryFileTransferType_TransferState_Placeholder_AvailableStates","TemporaryFileTransferType_TransferState_Placeholder_AvailableTransitions","FileTransferStateMachineType_AvailableStates","FileTransferStateMachineType_AvailableTransitions","RoleMappingRuleChangedAuditEventType_EventId","RoleMappingRuleChangedAuditEventType_EventType","RoleMappingRuleChangedAuditEventType_SourceNode","RoleMappingRuleChangedAuditEventType_SourceName","RoleMappingRuleChangedAuditEventType_Time","RoleMappingRuleChangedAuditEventType_ReceiveTime","RoleMappingRuleChangedAuditEventType_LocalTime","RoleMappingRuleChangedAuditEventType_Message","RoleMappingRuleChangedAuditEventType_Severity","RoleMappingRuleChangedAuditEventType_ActionTimeStamp","RoleMappingRuleChangedAuditEventType_Status","RoleMappingRuleChangedAuditEventType_ServerId","RoleMappingRuleChangedAuditEventType_ClientAuditEntryId","RoleMappingRuleChangedAuditEventType_ClientUserId","RoleMappingRuleChangedAuditEventType_MethodId","RoleMappingRuleChangedAuditEventType_InputArguments","AlarmConditionType_ShelvingState_AvailableStates","AlarmConditionType_ShelvingState_AvailableTransitions","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_AvailableStates","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_AvailableTransitions","ShelvedStateMachineType_AvailableStates","ShelvedStateMachineType_AvailableTransitions","LimitAlarmType_ShelvingState_AvailableStates","LimitAlarmType_ShelvingState_AvailableTransitions","ExclusiveLimitStateMachineType_AvailableStates","ExclusiveLimitStateMachineType_AvailableTransitions","ExclusiveLimitAlarmType_ShelvingState_AvailableStates","ExclusiveLimitAlarmType_ShelvingState_AvailableTransitions","ExclusiveLimitAlarmType_LimitState_AvailableStates","ExclusiveLimitAlarmType_LimitState_AvailableTransitions","NonExclusiveLimitAlarmType_ShelvingState_AvailableStates","NonExclusiveLimitAlarmType_ShelvingState_AvailableTransitions","NonExclusiveLevelAlarmType_ShelvingState_AvailableStates","NonExclusiveLevelAlarmType_ShelvingState_AvailableTransitions","ExclusiveLevelAlarmType_ShelvingState_AvailableStates","ExclusiveLevelAlarmType_ShelvingState_AvailableTransitions","ExclusiveLevelAlarmType_LimitState_AvailableStates","ExclusiveLevelAlarmType_LimitState_AvailableTransitions","NonExclusiveDeviationAlarmType_ShelvingState_AvailableStates","NonExclusiveDeviationAlarmType_ShelvingState_AvailableTransitions","ExclusiveDeviationAlarmType_ShelvingState_AvailableStates","ExclusiveDeviationAlarmType_ShelvingState_AvailableTransitions","ExclusiveDeviationAlarmType_LimitState_AvailableStates","ExclusiveDeviationAlarmType_LimitState_AvailableTransitions","NonExclusiveRateOfChangeAlarmType_ShelvingState_AvailableStates","NonExclusiveRateOfChangeAlarmType_ShelvingState_AvailableTransitions","ExclusiveRateOfChangeAlarmType_ShelvingState_AvailableStates","ExclusiveRateOfChangeAlarmType_ShelvingState_AvailableTransitions","ExclusiveRateOfChangeAlarmType_LimitState_AvailableStates","ExclusiveRateOfChangeAlarmType_LimitState_AvailableTransitions","DiscreteAlarmType_ShelvingState_AvailableStates","DiscreteAlarmType_ShelvingState_AvailableTransitions","OffNormalAlarmType_ShelvingState_AvailableStates","OffNormalAlarmType_ShelvingState_AvailableTransitions","SystemOffNormalAlarmType_ShelvingState_AvailableStates","SystemOffNormalAlarmType_ShelvingState_AvailableTransitions","TripAlarmType_ShelvingState_AvailableStates","TripAlarmType_ShelvingState_AvailableTransitions","CertificateExpirationAlarmType_ShelvingState_AvailableStates","CertificateExpirationAlarmType_ShelvingState_AvailableTransitions","DiscrepancyAlarmType_ShelvingState_AvailableStates","DiscrepancyAlarmType_ShelvingState_AvailableTransitions","ProgramStateMachineType_AvailableStates","ProgramStateMachineType_AvailableTransitions","FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments","FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments","AuthorizationServiceConfigurationType_ServiceCertificate","AlarmConditionType_AudibleSound_ListId","AlarmConditionType_AudibleSound_AgencyId","AlarmConditionType_AudibleSound_VersionId","LimitAlarmType_AudibleSound_ListId","LimitAlarmType_AudibleSound_AgencyId","LimitAlarmType_AudibleSound_VersionId","ExclusiveLimitAlarmType_AudibleSound_ListId","ExclusiveLimitAlarmType_AudibleSound_AgencyId","ExclusiveLimitAlarmType_AudibleSound_VersionId","NonExclusiveLimitAlarmType_AudibleSound_ListId","NonExclusiveLimitAlarmType_AudibleSound_AgencyId","NonExclusiveLimitAlarmType_AudibleSound_VersionId","ExclusiveLevelAlarmType_AudibleSound_ListId","ExclusiveLevelAlarmType_AudibleSound_AgencyId","ExclusiveLevelAlarmType_AudibleSound_VersionId","NonExclusiveDeviationAlarmType_AudibleSound_ListId","NonExclusiveDeviationAlarmType_AudibleSound_AgencyId","NonExclusiveDeviationAlarmType_AudibleSound_VersionId","NonExclusiveRateOfChangeAlarmType_AudibleSound_ListId","NonExclusiveRateOfChangeAlarmType_AudibleSound_AgencyId","NonExclusiveRateOfChangeAlarmType_AudibleSound_VersionId","ExclusiveDeviationAlarmType_AudibleSound_ListId","ExclusiveDeviationAlarmType_AudibleSound_AgencyId","ExclusiveDeviationAlarmType_AudibleSound_VersionId","ExclusiveRateOfChangeAlarmType_AudibleSound_ListId","ExclusiveRateOfChangeAlarmType_AudibleSound_AgencyId","ExclusiveRateOfChangeAlarmType_AudibleSound_VersionId","DiscreteAlarmType_AudibleSound_ListId","DiscreteAlarmType_AudibleSound_AgencyId","DiscreteAlarmType_AudibleSound_VersionId","OffNormalAlarmType_AudibleSound_ListId","OffNormalAlarmType_AudibleSound_AgencyId","OffNormalAlarmType_AudibleSound_VersionId","SystemOffNormalAlarmType_AudibleSound_ListId","SystemOffNormalAlarmType_AudibleSound_AgencyId","SystemOffNormalAlarmType_AudibleSound_VersionId","TripAlarmType_AudibleSound_ListId","TripAlarmType_AudibleSound_AgencyId","TripAlarmType_AudibleSound_VersionId","CertificateExpirationAlarmType_AudibleSound_ListId","CertificateExpirationAlarmType_AudibleSound_AgencyId","CertificateExpirationAlarmType_AudibleSound_VersionId","DiscrepancyAlarmType_AudibleSound_ListId","DiscrepancyAlarmType_AudibleSound_AgencyId","DiscrepancyAlarmType_AudibleSound_VersionId","AudioVariableType_ListId","AudioVariableType_AgencyId","AudioVariableType_VersionId","AlarmMetricsType_StartTime","KeyCredentialConfigurationType_EndpointUrls","KeyCredentialConfigurationType_ServiceStatus","KeyCredentialConfigurationType_UpdateCredential_InputArguments","KeyCredentialUpdateMethodType_InputArguments","KeyCredentialAuditEventType_EventId","KeyCredentialAuditEventType_EventType","KeyCredentialAuditEventType_SourceNode","KeyCredentialAuditEventType_SourceName","KeyCredentialAuditEventType_Time","KeyCredentialAuditEventType_ReceiveTime","KeyCredentialAuditEventType_LocalTime","KeyCredentialAuditEventType_Message","KeyCredentialAuditEventType_Severity","KeyCredentialAuditEventType_ActionTimeStamp","KeyCredentialAuditEventType_Status","KeyCredentialAuditEventType_ServerId","KeyCredentialAuditEventType_ClientAuditEntryId","KeyCredentialAuditEventType_ClientUserId","KeyCredentialAuditEventType_MethodId","KeyCredentialAuditEventType_InputArguments","KeyCredentialAuditEventType_ResourceUri","KeyCredentialUpdatedAuditEventType_EventId","KeyCredentialUpdatedAuditEventType_EventType","KeyCredentialUpdatedAuditEventType_SourceNode","KeyCredentialUpdatedAuditEventType_SourceName","KeyCredentialUpdatedAuditEventType_Time","KeyCredentialUpdatedAuditEventType_ReceiveTime","KeyCredentialUpdatedAuditEventType_LocalTime","KeyCredentialUpdatedAuditEventType_Message","KeyCredentialUpdatedAuditEventType_Severity","KeyCredentialUpdatedAuditEventType_ActionTimeStamp","KeyCredentialUpdatedAuditEventType_Status","KeyCredentialUpdatedAuditEventType_ServerId","KeyCredentialUpdatedAuditEventType_ClientAuditEntryId","KeyCredentialUpdatedAuditEventType_ClientUserId","KeyCredentialUpdatedAuditEventType_MethodId","KeyCredentialUpdatedAuditEventType_InputArguments","KeyCredentialUpdatedAuditEventType_ResourceUri","KeyCredentialDeletedAuditEventType_EventId","KeyCredentialDeletedAuditEventType_EventType","KeyCredentialDeletedAuditEventType_SourceNode","KeyCredentialDeletedAuditEventType_SourceName","KeyCredentialDeletedAuditEventType_Time","KeyCredentialDeletedAuditEventType_ReceiveTime","KeyCredentialDeletedAuditEventType_LocalTime","KeyCredentialDeletedAuditEventType_Message","KeyCredentialDeletedAuditEventType_Severity","KeyCredentialDeletedAuditEventType_ActionTimeStamp","KeyCredentialDeletedAuditEventType_Status","KeyCredentialDeletedAuditEventType_ServerId","KeyCredentialDeletedAuditEventType_ClientAuditEntryId","KeyCredentialDeletedAuditEventType_ClientUserId","KeyCredentialDeletedAuditEventType_MethodId","KeyCredentialDeletedAuditEventType_InputArguments","KeyCredentialDeletedAuditEventType_ResourceUri","AuthorizationServices_ServiceName_Placeholder_ServiceCertificate","KeyCredentialConfigurationType_ResourceUri","AuthorizationServices_ServiceName_Placeholder_ServiceUri","AuthorizationServices_ServiceName_Placeholder_IssuerEndpointUrl","AuthorizationServiceConfigurationType_ServiceUri","AuthorizationServiceConfigurationType_IssuerEndpointUrl","KeyCredentialConfiguration_ServiceName_Placeholder_ResourceUri","KeyCredentialConfiguration_ServiceName_Placeholder_EndpointUrls","KeyCredentialConfiguration_ServiceName_Placeholder_ServiceStatus","KeyCredentialConfiguration_ServiceName_Placeholder_UpdateCredential_InputArguments","KeyCredentialConfiguration_ServiceName_Placeholder_ProfileUri","KeyCredentialConfigurationType_ProfileUri","OpcUa_XmlSchema_DataTypeDefinition","OpcUa_XmlSchema_DataTypeDefinition_DataTypeVersion","OpcUa_XmlSchema_DataTypeDefinition_DictionaryFragment","OpcUa_XmlSchema_StructureField","OpcUa_XmlSchema_StructureField_DataTypeVersion","OpcUa_XmlSchema_StructureField_DictionaryFragment","OpcUa_XmlSchema_StructureDefinition","OpcUa_XmlSchema_StructureDefinition_DataTypeVersion","OpcUa_XmlSchema_StructureDefinition_DictionaryFragment","OpcUa_XmlSchema_EnumDefinition","OpcUa_XmlSchema_EnumDefinition_DataTypeVersion","OpcUa_XmlSchema_EnumDefinition_DictionaryFragment","OpcUa_BinarySchema_DataTypeDefinition","OpcUa_BinarySchema_DataTypeDefinition_DataTypeVersion","OpcUa_BinarySchema_DataTypeDefinition_DictionaryFragment","OpcUa_BinarySchema_StructureField","OpcUa_BinarySchema_StructureField_DataTypeVersion","OpcUa_BinarySchema_StructureField_DictionaryFragment","OpcUa_BinarySchema_StructureDefinition","OpcUa_BinarySchema_StructureDefinition_DataTypeVersion","OpcUa_BinarySchema_StructureDefinition_DictionaryFragment","OpcUa_BinarySchema_EnumDefinition","OpcUa_BinarySchema_EnumDefinition_DataTypeVersion","OpcUa_BinarySchema_EnumDefinition_DictionaryFragment","AlarmConditionType_LatchedState","AlarmConditionType_LatchedState_Id","AlarmConditionType_LatchedState_Name","AlarmConditionType_LatchedState_Number","AlarmConditionType_LatchedState_EffectiveDisplayName","AlarmConditionType_LatchedState_TransitionTime","AlarmConditionType_LatchedState_EffectiveTransitionTime","AlarmConditionType_LatchedState_TrueState","AlarmConditionType_LatchedState_FalseState","AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleSound_ListId","AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleSound_AgencyId","AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleSound_VersionId","AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState","AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_Id","AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_Name","AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_Number","AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_EffectiveDisplayName","AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_TransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_EffectiveTransitionTime","AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_TrueState","AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_FalseState","LimitAlarmType_LatchedState","LimitAlarmType_LatchedState_Id","LimitAlarmType_LatchedState_Name","LimitAlarmType_LatchedState_Number","LimitAlarmType_LatchedState_EffectiveDisplayName","LimitAlarmType_LatchedState_TransitionTime","LimitAlarmType_LatchedState_EffectiveTransitionTime","LimitAlarmType_LatchedState_TrueState","LimitAlarmType_LatchedState_FalseState","ExclusiveLimitAlarmType_LatchedState","ExclusiveLimitAlarmType_LatchedState_Id","ExclusiveLimitAlarmType_LatchedState_Name","ExclusiveLimitAlarmType_LatchedState_Number","ExclusiveLimitAlarmType_LatchedState_EffectiveDisplayName","ExclusiveLimitAlarmType_LatchedState_TransitionTime","ExclusiveLimitAlarmType_LatchedState_EffectiveTransitionTime","ExclusiveLimitAlarmType_LatchedState_TrueState","ExclusiveLimitAlarmType_LatchedState_FalseState","NonExclusiveLimitAlarmType_LatchedState","NonExclusiveLimitAlarmType_LatchedState_Id","NonExclusiveLimitAlarmType_LatchedState_Name","NonExclusiveLimitAlarmType_LatchedState_Number","NonExclusiveLimitAlarmType_LatchedState_EffectiveDisplayName","NonExclusiveLimitAlarmType_LatchedState_TransitionTime","NonExclusiveLimitAlarmType_LatchedState_EffectiveTransitionTime","NonExclusiveLimitAlarmType_LatchedState_TrueState","NonExclusiveLimitAlarmType_LatchedState_FalseState","NonExclusiveLevelAlarmType_AudibleSound_ListId","NonExclusiveLevelAlarmType_AudibleSound_AgencyId","NonExclusiveLevelAlarmType_AudibleSound_VersionId","NonExclusiveLevelAlarmType_LatchedState","NonExclusiveLevelAlarmType_LatchedState_Id","NonExclusiveLevelAlarmType_LatchedState_Name","NonExclusiveLevelAlarmType_LatchedState_Number","NonExclusiveLevelAlarmType_LatchedState_EffectiveDisplayName","NonExclusiveLevelAlarmType_LatchedState_TransitionTime","NonExclusiveLevelAlarmType_LatchedState_EffectiveTransitionTime","NonExclusiveLevelAlarmType_LatchedState_TrueState","NonExclusiveLevelAlarmType_LatchedState_FalseState","ExclusiveLevelAlarmType_LatchedState","ExclusiveLevelAlarmType_LatchedState_Id","ExclusiveLevelAlarmType_LatchedState_Name","ExclusiveLevelAlarmType_LatchedState_Number","ExclusiveLevelAlarmType_LatchedState_EffectiveDisplayName","ExclusiveLevelAlarmType_LatchedState_TransitionTime","ExclusiveLevelAlarmType_LatchedState_EffectiveTransitionTime","ExclusiveLevelAlarmType_LatchedState_TrueState","ExclusiveLevelAlarmType_LatchedState_FalseState","NonExclusiveDeviationAlarmType_LatchedState","NonExclusiveDeviationAlarmType_LatchedState_Id","NonExclusiveDeviationAlarmType_LatchedState_Name","NonExclusiveDeviationAlarmType_LatchedState_Number","NonExclusiveDeviationAlarmType_LatchedState_EffectiveDisplayName","NonExclusiveDeviationAlarmType_LatchedState_TransitionTime","NonExclusiveDeviationAlarmType_LatchedState_EffectiveTransitionTime","NonExclusiveDeviationAlarmType_LatchedState_TrueState","NonExclusiveDeviationAlarmType_LatchedState_FalseState","NonExclusiveRateOfChangeAlarmType_LatchedState","NonExclusiveRateOfChangeAlarmType_LatchedState_Id","NonExclusiveRateOfChangeAlarmType_LatchedState_Name","NonExclusiveRateOfChangeAlarmType_LatchedState_Number","NonExclusiveRateOfChangeAlarmType_LatchedState_EffectiveDisplayName","NonExclusiveRateOfChangeAlarmType_LatchedState_TransitionTime","NonExclusiveRateOfChangeAlarmType_LatchedState_EffectiveTransitionTime","NonExclusiveRateOfChangeAlarmType_LatchedState_TrueState","NonExclusiveRateOfChangeAlarmType_LatchedState_FalseState","ExclusiveDeviationAlarmType_LatchedState","ExclusiveDeviationAlarmType_LatchedState_Id","ExclusiveDeviationAlarmType_LatchedState_Name","ExclusiveDeviationAlarmType_LatchedState_Number","ExclusiveDeviationAlarmType_LatchedState_EffectiveDisplayName","ExclusiveDeviationAlarmType_LatchedState_TransitionTime","ExclusiveDeviationAlarmType_LatchedState_EffectiveTransitionTime","ExclusiveDeviationAlarmType_LatchedState_TrueState","ExclusiveDeviationAlarmType_LatchedState_FalseState","ExclusiveRateOfChangeAlarmType_LatchedState","ExclusiveRateOfChangeAlarmType_LatchedState_Id","ExclusiveRateOfChangeAlarmType_LatchedState_Name","ExclusiveRateOfChangeAlarmType_LatchedState_Number","ExclusiveRateOfChangeAlarmType_LatchedState_EffectiveDisplayName","ExclusiveRateOfChangeAlarmType_LatchedState_TransitionTime","ExclusiveRateOfChangeAlarmType_LatchedState_EffectiveTransitionTime","ExclusiveRateOfChangeAlarmType_LatchedState_TrueState","ExclusiveRateOfChangeAlarmType_LatchedState_FalseState","DiscreteAlarmType_LatchedState","DiscreteAlarmType_LatchedState_Id","DiscreteAlarmType_LatchedState_Name","DiscreteAlarmType_LatchedState_Number","DiscreteAlarmType_LatchedState_EffectiveDisplayName","DiscreteAlarmType_LatchedState_TransitionTime","DiscreteAlarmType_LatchedState_EffectiveTransitionTime","DiscreteAlarmType_LatchedState_TrueState","DiscreteAlarmType_LatchedState_FalseState","OffNormalAlarmType_LatchedState","OffNormalAlarmType_LatchedState_Id","OffNormalAlarmType_LatchedState_Name","OffNormalAlarmType_LatchedState_Number","OffNormalAlarmType_LatchedState_EffectiveDisplayName","OffNormalAlarmType_LatchedState_TransitionTime","OffNormalAlarmType_LatchedState_EffectiveTransitionTime","OffNormalAlarmType_LatchedState_TrueState","OffNormalAlarmType_LatchedState_FalseState","SystemOffNormalAlarmType_LatchedState","SystemOffNormalAlarmType_LatchedState_Id","SystemOffNormalAlarmType_LatchedState_Name","SystemOffNormalAlarmType_LatchedState_Number","SystemOffNormalAlarmType_LatchedState_EffectiveDisplayName","SystemOffNormalAlarmType_LatchedState_TransitionTime","SystemOffNormalAlarmType_LatchedState_EffectiveTransitionTime","SystemOffNormalAlarmType_LatchedState_TrueState","SystemOffNormalAlarmType_LatchedState_FalseState","TripAlarmType_LatchedState","TripAlarmType_LatchedState_Id","TripAlarmType_LatchedState_Name","TripAlarmType_LatchedState_Number","TripAlarmType_LatchedState_EffectiveDisplayName","TripAlarmType_LatchedState_TransitionTime","TripAlarmType_LatchedState_EffectiveTransitionTime","TripAlarmType_LatchedState_TrueState","TripAlarmType_LatchedState_FalseState","InstrumentDiagnosticAlarmType_EventId","InstrumentDiagnosticAlarmType_EventType","InstrumentDiagnosticAlarmType_SourceNode","InstrumentDiagnosticAlarmType_SourceName","InstrumentDiagnosticAlarmType_Time","InstrumentDiagnosticAlarmType_ReceiveTime","InstrumentDiagnosticAlarmType_LocalTime","InstrumentDiagnosticAlarmType_Message","InstrumentDiagnosticAlarmType_Severity","InstrumentDiagnosticAlarmType_ConditionClassId","InstrumentDiagnosticAlarmType_ConditionClassName","InstrumentDiagnosticAlarmType_ConditionSubClassId","InstrumentDiagnosticAlarmType_ConditionSubClassName","InstrumentDiagnosticAlarmType_ConditionName","InstrumentDiagnosticAlarmType_BranchId","InstrumentDiagnosticAlarmType_Retain","InstrumentDiagnosticAlarmType_EnabledState","InstrumentDiagnosticAlarmType_EnabledState_Id","InstrumentDiagnosticAlarmType_EnabledState_Name","InstrumentDiagnosticAlarmType_EnabledState_Number","InstrumentDiagnosticAlarmType_EnabledState_EffectiveDisplayName","InstrumentDiagnosticAlarmType_EnabledState_TransitionTime","InstrumentDiagnosticAlarmType_EnabledState_EffectiveTransitionTime","InstrumentDiagnosticAlarmType_EnabledState_TrueState","InstrumentDiagnosticAlarmType_EnabledState_FalseState","InstrumentDiagnosticAlarmType_Quality","InstrumentDiagnosticAlarmType_Quality_SourceTimestamp","InstrumentDiagnosticAlarmType_LastSeverity","InstrumentDiagnosticAlarmType_LastSeverity_SourceTimestamp","InstrumentDiagnosticAlarmType_Comment","InstrumentDiagnosticAlarmType_Comment_SourceTimestamp","InstrumentDiagnosticAlarmType_ClientUserId","InstrumentDiagnosticAlarmType_AddComment_InputArguments","InstrumentDiagnosticAlarmType_ConditionRefresh_InputArguments","InstrumentDiagnosticAlarmType_ConditionRefresh2_InputArguments","InstrumentDiagnosticAlarmType_AckedState","InstrumentDiagnosticAlarmType_AckedState_Id","InstrumentDiagnosticAlarmType_AckedState_Name","InstrumentDiagnosticAlarmType_AckedState_Number","InstrumentDiagnosticAlarmType_AckedState_EffectiveDisplayName","InstrumentDiagnosticAlarmType_AckedState_TransitionTime","InstrumentDiagnosticAlarmType_AckedState_EffectiveTransitionTime","InstrumentDiagnosticAlarmType_AckedState_TrueState","InstrumentDiagnosticAlarmType_AckedState_FalseState","InstrumentDiagnosticAlarmType_ConfirmedState","InstrumentDiagnosticAlarmType_ConfirmedState_Id","InstrumentDiagnosticAlarmType_ConfirmedState_Name","InstrumentDiagnosticAlarmType_ConfirmedState_Number","InstrumentDiagnosticAlarmType_ConfirmedState_EffectiveDisplayName","InstrumentDiagnosticAlarmType_ConfirmedState_TransitionTime","InstrumentDiagnosticAlarmType_ConfirmedState_EffectiveTransitionTime","InstrumentDiagnosticAlarmType_ConfirmedState_TrueState","InstrumentDiagnosticAlarmType_ConfirmedState_FalseState","InstrumentDiagnosticAlarmType_Acknowledge_InputArguments","InstrumentDiagnosticAlarmType_Confirm_InputArguments","InstrumentDiagnosticAlarmType_ActiveState","InstrumentDiagnosticAlarmType_ActiveState_Id","InstrumentDiagnosticAlarmType_ActiveState_Name","InstrumentDiagnosticAlarmType_ActiveState_Number","InstrumentDiagnosticAlarmType_ActiveState_EffectiveDisplayName","InstrumentDiagnosticAlarmType_ActiveState_TransitionTime","InstrumentDiagnosticAlarmType_ActiveState_EffectiveTransitionTime","InstrumentDiagnosticAlarmType_ActiveState_TrueState","InstrumentDiagnosticAlarmType_ActiveState_FalseState","InstrumentDiagnosticAlarmType_InputNode","InstrumentDiagnosticAlarmType_SuppressedState","InstrumentDiagnosticAlarmType_SuppressedState_Id","InstrumentDiagnosticAlarmType_SuppressedState_Name","InstrumentDiagnosticAlarmType_SuppressedState_Number","InstrumentDiagnosticAlarmType_SuppressedState_EffectiveDisplayName","InstrumentDiagnosticAlarmType_SuppressedState_TransitionTime","InstrumentDiagnosticAlarmType_SuppressedState_EffectiveTransitionTime","InstrumentDiagnosticAlarmType_SuppressedState_TrueState","InstrumentDiagnosticAlarmType_SuppressedState_FalseState","InstrumentDiagnosticAlarmType_OutOfServiceState","InstrumentDiagnosticAlarmType_OutOfServiceState_Id","InstrumentDiagnosticAlarmType_OutOfServiceState_Name","InstrumentDiagnosticAlarmType_OutOfServiceState_Number","InstrumentDiagnosticAlarmType_OutOfServiceState_EffectiveDisplayName","InstrumentDiagnosticAlarmType_OutOfServiceState_TransitionTime","InstrumentDiagnosticAlarmType_OutOfServiceState_EffectiveTransitionTime","InstrumentDiagnosticAlarmType_OutOfServiceState_TrueState","InstrumentDiagnosticAlarmType_OutOfServiceState_FalseState","InstrumentDiagnosticAlarmType_ShelvingState_CurrentState","InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_Id","InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_Name","InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_Number","InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","InstrumentDiagnosticAlarmType_ShelvingState_LastTransition","InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_Id","InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_Name","InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_Number","InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_TransitionTime","InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","InstrumentDiagnosticAlarmType_ShelvingState_AvailableStates","InstrumentDiagnosticAlarmType_ShelvingState_AvailableTransitions","InstrumentDiagnosticAlarmType_ShelvingState_UnshelveTime","InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments","InstrumentDiagnosticAlarmType_SuppressedOrShelved","InstrumentDiagnosticAlarmType_MaxTimeShelved","InstrumentDiagnosticAlarmType_AudibleEnabled","InstrumentDiagnosticAlarmType_AudibleSound","InstrumentDiagnosticAlarmType_AudibleSound_ListId","InstrumentDiagnosticAlarmType_AudibleSound_AgencyId","InstrumentDiagnosticAlarmType_AudibleSound_VersionId","InstrumentDiagnosticAlarmType_SilenceState","InstrumentDiagnosticAlarmType_SilenceState_Id","InstrumentDiagnosticAlarmType_SilenceState_Name","InstrumentDiagnosticAlarmType_SilenceState_Number","InstrumentDiagnosticAlarmType_SilenceState_EffectiveDisplayName","InstrumentDiagnosticAlarmType_SilenceState_TransitionTime","InstrumentDiagnosticAlarmType_SilenceState_EffectiveTransitionTime","InstrumentDiagnosticAlarmType_SilenceState_TrueState","InstrumentDiagnosticAlarmType_SilenceState_FalseState","InstrumentDiagnosticAlarmType_OnDelay","InstrumentDiagnosticAlarmType_OffDelay","InstrumentDiagnosticAlarmType_FirstInGroupFlag","InstrumentDiagnosticAlarmType_LatchedState","InstrumentDiagnosticAlarmType_LatchedState_Id","InstrumentDiagnosticAlarmType_LatchedState_Name","InstrumentDiagnosticAlarmType_LatchedState_Number","InstrumentDiagnosticAlarmType_LatchedState_EffectiveDisplayName","InstrumentDiagnosticAlarmType_LatchedState_TransitionTime","InstrumentDiagnosticAlarmType_LatchedState_EffectiveTransitionTime","InstrumentDiagnosticAlarmType_LatchedState_TrueState","InstrumentDiagnosticAlarmType_LatchedState_FalseState","InstrumentDiagnosticAlarmType_ReAlarmTime","InstrumentDiagnosticAlarmType_ReAlarmRepeatCount","InstrumentDiagnosticAlarmType_NormalState","SystemDiagnosticAlarmType_EventId","SystemDiagnosticAlarmType_EventType","SystemDiagnosticAlarmType_SourceNode","SystemDiagnosticAlarmType_SourceName","SystemDiagnosticAlarmType_Time","SystemDiagnosticAlarmType_ReceiveTime","SystemDiagnosticAlarmType_LocalTime","SystemDiagnosticAlarmType_Message","SystemDiagnosticAlarmType_Severity","SystemDiagnosticAlarmType_ConditionClassId","SystemDiagnosticAlarmType_ConditionClassName","SystemDiagnosticAlarmType_ConditionSubClassId","SystemDiagnosticAlarmType_ConditionSubClassName","SystemDiagnosticAlarmType_ConditionName","SystemDiagnosticAlarmType_BranchId","SystemDiagnosticAlarmType_Retain","SystemDiagnosticAlarmType_EnabledState","SystemDiagnosticAlarmType_EnabledState_Id","SystemDiagnosticAlarmType_EnabledState_Name","SystemDiagnosticAlarmType_EnabledState_Number","SystemDiagnosticAlarmType_EnabledState_EffectiveDisplayName","SystemDiagnosticAlarmType_EnabledState_TransitionTime","SystemDiagnosticAlarmType_EnabledState_EffectiveTransitionTime","SystemDiagnosticAlarmType_EnabledState_TrueState","SystemDiagnosticAlarmType_EnabledState_FalseState","SystemDiagnosticAlarmType_Quality","SystemDiagnosticAlarmType_Quality_SourceTimestamp","SystemDiagnosticAlarmType_LastSeverity","SystemDiagnosticAlarmType_LastSeverity_SourceTimestamp","SystemDiagnosticAlarmType_Comment","SystemDiagnosticAlarmType_Comment_SourceTimestamp","SystemDiagnosticAlarmType_ClientUserId","SystemDiagnosticAlarmType_AddComment_InputArguments","SystemDiagnosticAlarmType_ConditionRefresh_InputArguments","SystemDiagnosticAlarmType_ConditionRefresh2_InputArguments","SystemDiagnosticAlarmType_AckedState","SystemDiagnosticAlarmType_AckedState_Id","SystemDiagnosticAlarmType_AckedState_Name","SystemDiagnosticAlarmType_AckedState_Number","SystemDiagnosticAlarmType_AckedState_EffectiveDisplayName","SystemDiagnosticAlarmType_AckedState_TransitionTime","SystemDiagnosticAlarmType_AckedState_EffectiveTransitionTime","SystemDiagnosticAlarmType_AckedState_TrueState","SystemDiagnosticAlarmType_AckedState_FalseState","SystemDiagnosticAlarmType_ConfirmedState","SystemDiagnosticAlarmType_ConfirmedState_Id","SystemDiagnosticAlarmType_ConfirmedState_Name","SystemDiagnosticAlarmType_ConfirmedState_Number","SystemDiagnosticAlarmType_ConfirmedState_EffectiveDisplayName","SystemDiagnosticAlarmType_ConfirmedState_TransitionTime","SystemDiagnosticAlarmType_ConfirmedState_EffectiveTransitionTime","SystemDiagnosticAlarmType_ConfirmedState_TrueState","SystemDiagnosticAlarmType_ConfirmedState_FalseState","SystemDiagnosticAlarmType_Acknowledge_InputArguments","SystemDiagnosticAlarmType_Confirm_InputArguments","SystemDiagnosticAlarmType_ActiveState","SystemDiagnosticAlarmType_ActiveState_Id","SystemDiagnosticAlarmType_ActiveState_Name","SystemDiagnosticAlarmType_ActiveState_Number","SystemDiagnosticAlarmType_ActiveState_EffectiveDisplayName","SystemDiagnosticAlarmType_ActiveState_TransitionTime","SystemDiagnosticAlarmType_ActiveState_EffectiveTransitionTime","SystemDiagnosticAlarmType_ActiveState_TrueState","SystemDiagnosticAlarmType_ActiveState_FalseState","SystemDiagnosticAlarmType_InputNode","SystemDiagnosticAlarmType_SuppressedState","SystemDiagnosticAlarmType_SuppressedState_Id","SystemDiagnosticAlarmType_SuppressedState_Name","SystemDiagnosticAlarmType_SuppressedState_Number","SystemDiagnosticAlarmType_SuppressedState_EffectiveDisplayName","SystemDiagnosticAlarmType_SuppressedState_TransitionTime","SystemDiagnosticAlarmType_SuppressedState_EffectiveTransitionTime","SystemDiagnosticAlarmType_SuppressedState_TrueState","SystemDiagnosticAlarmType_SuppressedState_FalseState","SystemDiagnosticAlarmType_OutOfServiceState","SystemDiagnosticAlarmType_OutOfServiceState_Id","SystemDiagnosticAlarmType_OutOfServiceState_Name","SystemDiagnosticAlarmType_OutOfServiceState_Number","SystemDiagnosticAlarmType_OutOfServiceState_EffectiveDisplayName","SystemDiagnosticAlarmType_OutOfServiceState_TransitionTime","SystemDiagnosticAlarmType_OutOfServiceState_EffectiveTransitionTime","SystemDiagnosticAlarmType_OutOfServiceState_TrueState","SystemDiagnosticAlarmType_OutOfServiceState_FalseState","SystemDiagnosticAlarmType_ShelvingState_CurrentState","SystemDiagnosticAlarmType_ShelvingState_CurrentState_Id","SystemDiagnosticAlarmType_ShelvingState_CurrentState_Name","SystemDiagnosticAlarmType_ShelvingState_CurrentState_Number","SystemDiagnosticAlarmType_ShelvingState_CurrentState_EffectiveDisplayName","SystemDiagnosticAlarmType_ShelvingState_LastTransition","SystemDiagnosticAlarmType_ShelvingState_LastTransition_Id","SystemDiagnosticAlarmType_ShelvingState_LastTransition_Name","SystemDiagnosticAlarmType_ShelvingState_LastTransition_Number","SystemDiagnosticAlarmType_ShelvingState_LastTransition_TransitionTime","SystemDiagnosticAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime","SystemDiagnosticAlarmType_ShelvingState_AvailableStates","SystemDiagnosticAlarmType_ShelvingState_AvailableTransitions","SystemDiagnosticAlarmType_ShelvingState_UnshelveTime","SystemDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments","SystemDiagnosticAlarmType_SuppressedOrShelved","SystemDiagnosticAlarmType_MaxTimeShelved","SystemDiagnosticAlarmType_AudibleEnabled","SystemDiagnosticAlarmType_AudibleSound","SystemDiagnosticAlarmType_AudibleSound_ListId","SystemDiagnosticAlarmType_AudibleSound_AgencyId","SystemDiagnosticAlarmType_AudibleSound_VersionId","SystemDiagnosticAlarmType_SilenceState","SystemDiagnosticAlarmType_SilenceState_Id","SystemDiagnosticAlarmType_SilenceState_Name","SystemDiagnosticAlarmType_SilenceState_Number","SystemDiagnosticAlarmType_SilenceState_EffectiveDisplayName","SystemDiagnosticAlarmType_SilenceState_TransitionTime","SystemDiagnosticAlarmType_SilenceState_EffectiveTransitionTime","SystemDiagnosticAlarmType_SilenceState_TrueState","SystemDiagnosticAlarmType_SilenceState_FalseState","SystemDiagnosticAlarmType_OnDelay","SystemDiagnosticAlarmType_OffDelay","SystemDiagnosticAlarmType_FirstInGroupFlag","SystemDiagnosticAlarmType_LatchedState","SystemDiagnosticAlarmType_LatchedState_Id","SystemDiagnosticAlarmType_LatchedState_Name","SystemDiagnosticAlarmType_LatchedState_Number","SystemDiagnosticAlarmType_LatchedState_EffectiveDisplayName","SystemDiagnosticAlarmType_LatchedState_TransitionTime","SystemDiagnosticAlarmType_LatchedState_EffectiveTransitionTime","SystemDiagnosticAlarmType_LatchedState_TrueState","SystemDiagnosticAlarmType_LatchedState_FalseState","SystemDiagnosticAlarmType_ReAlarmTime","SystemDiagnosticAlarmType_ReAlarmRepeatCount","SystemDiagnosticAlarmType_NormalState","CertificateExpirationAlarmType_LatchedState","CertificateExpirationAlarmType_LatchedState_Id","CertificateExpirationAlarmType_LatchedState_Name","CertificateExpirationAlarmType_LatchedState_Number","CertificateExpirationAlarmType_LatchedState_EffectiveDisplayName","CertificateExpirationAlarmType_LatchedState_TransitionTime","CertificateExpirationAlarmType_LatchedState_EffectiveTransitionTime","CertificateExpirationAlarmType_LatchedState_TrueState","CertificateExpirationAlarmType_LatchedState_FalseState","DiscrepancyAlarmType_LatchedState","DiscrepancyAlarmType_LatchedState_Id","DiscrepancyAlarmType_LatchedState_Name","DiscrepancyAlarmType_LatchedState_Number","DiscrepancyAlarmType_LatchedState_EffectiveDisplayName","DiscrepancyAlarmType_LatchedState_TransitionTime","DiscrepancyAlarmType_LatchedState_EffectiveTransitionTime","DiscrepancyAlarmType_LatchedState_TrueState","DiscrepancyAlarmType_LatchedState_FalseState","ProgramStateMachineType_Start","ProgramStateMachineType_Suspend","ProgramStateMachineType_Resume","ProgramStateMachineType_Halt","ProgramStateMachineType_Reset","ShelvedStateMachineType_Unshelve","ShelvedStateMachineType_OneShotShelve","ShelvedStateMachineType_TimedShelve","AddCommentMethodType","ConditionType_ConditionRefresh","DialogConditionType_ConditionRefresh","AcknowledgeableConditionType_ConditionRefresh","AlarmConditionType_ConditionRefresh","TimedShelveMethodType","LimitAlarmType_ConditionRefresh","ConditionRefreshMethodType","ConditionType_Enable","ConditionType_Disable","ConditionType_AddComment","DialogResponseMethodType","DialogConditionType_Enable","DialogConditionType_Disable","DialogConditionType_AddComment","DialogConditionType_Respond","AcknowledgeableConditionType_Enable","AcknowledgeableConditionType_Disable","AcknowledgeableConditionType_AddComment","AcknowledgeableConditionType_Acknowledge","AcknowledgeableConditionType_Confirm","AlarmConditionType_Enable","AlarmConditionType_Disable","AlarmConditionType_AddComment","AlarmConditionType_Acknowledge","AlarmConditionType_Confirm","AlarmConditionType_ShelvingState_Unshelve","AlarmConditionType_ShelvingState_OneShotShelve","AlarmConditionType_ShelvingState_TimedShelve","LimitAlarmType_Enable","LimitAlarmType_Disable","LimitAlarmType_AddComment","LimitAlarmType_Acknowledge","LimitAlarmType_Confirm","LimitAlarmType_ShelvingState_Unshelve","LimitAlarmType_ShelvingState_OneShotShelve","LimitAlarmType_ShelvingState_TimedShelve","ExclusiveLimitAlarmType_Enable","ExclusiveLimitAlarmType_Disable","ExclusiveLimitAlarmType_AddComment","ExclusiveLimitAlarmType_ConditionRefresh","ExclusiveLimitAlarmType_Acknowledge","ExclusiveLimitAlarmType_Confirm","ExclusiveLimitAlarmType_ShelvingState_Unshelve","ExclusiveLimitAlarmType_ShelvingState_OneShotShelve","ExclusiveLimitAlarmType_ShelvingState_TimedShelve","ExclusiveLevelAlarmType_Enable","ExclusiveLevelAlarmType_Disable","ExclusiveLevelAlarmType_AddComment","ExclusiveLevelAlarmType_ConditionRefresh","ExclusiveLevelAlarmType_Acknowledge","ExclusiveLevelAlarmType_Confirm","ExclusiveLevelAlarmType_ShelvingState_Unshelve","ExclusiveLevelAlarmType_ShelvingState_OneShotShelve","ExclusiveLevelAlarmType_ShelvingState_TimedShelve","ExclusiveRateOfChangeAlarmType_Enable","ExclusiveRateOfChangeAlarmType_Disable","ExclusiveRateOfChangeAlarmType_AddComment","ExclusiveRateOfChangeAlarmType_ConditionRefresh","ExclusiveRateOfChangeAlarmType_Acknowledge","ExclusiveRateOfChangeAlarmType_Confirm","ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve","ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve","ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve","ExclusiveDeviationAlarmType_Enable","ExclusiveDeviationAlarmType_Disable","ExclusiveDeviationAlarmType_AddComment","ExclusiveDeviationAlarmType_ConditionRefresh","ExclusiveDeviationAlarmType_Acknowledge","ExclusiveDeviationAlarmType_Confirm","ExclusiveDeviationAlarmType_ShelvingState_Unshelve","ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve","ExclusiveDeviationAlarmType_ShelvingState_TimedShelve","NonExclusiveLimitAlarmType_Enable","NonExclusiveLimitAlarmType_Disable","NonExclusiveLimitAlarmType_AddComment","NonExclusiveLimitAlarmType_ConditionRefresh","NonExclusiveLimitAlarmType_Acknowledge","NonExclusiveLimitAlarmType_Confirm","NonExclusiveLimitAlarmType_ShelvingState_Unshelve","NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve","NonExclusiveLimitAlarmType_ShelvingState_TimedShelve","NonExclusiveLevelAlarmType_Enable","NonExclusiveLevelAlarmType_Disable","NonExclusiveLevelAlarmType_AddComment","NonExclusiveLevelAlarmType_ConditionRefresh","NonExclusiveLevelAlarmType_Acknowledge","NonExclusiveLevelAlarmType_Confirm","NonExclusiveLevelAlarmType_ShelvingState_Unshelve","NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve","NonExclusiveLevelAlarmType_ShelvingState_TimedShelve","NonExclusiveRateOfChangeAlarmType_Enable","NonExclusiveRateOfChangeAlarmType_Disable","NonExclusiveRateOfChangeAlarmType_AddComment","NonExclusiveRateOfChangeAlarmType_ConditionRefresh","NonExclusiveRateOfChangeAlarmType_Acknowledge","NonExclusiveRateOfChangeAlarmType_Confirm","NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve","NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve","NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve","NonExclusiveDeviationAlarmType_Enable","NonExclusiveDeviationAlarmType_Disable","NonExclusiveDeviationAlarmType_AddComment","NonExclusiveDeviationAlarmType_ConditionRefresh","NonExclusiveDeviationAlarmType_Acknowledge","NonExclusiveDeviationAlarmType_Confirm","NonExclusiveDeviationAlarmType_ShelvingState_Unshelve","NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve","NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve","DiscreteAlarmType_Enable","DiscreteAlarmType_Disable","DiscreteAlarmType_AddComment","DiscreteAlarmType_ConditionRefresh","DiscreteAlarmType_Acknowledge","DiscreteAlarmType_Confirm","DiscreteAlarmType_ShelvingState_Unshelve","DiscreteAlarmType_ShelvingState_OneShotShelve","DiscreteAlarmType_ShelvingState_TimedShelve","OffNormalAlarmType_Enable","OffNormalAlarmType_Disable","OffNormalAlarmType_AddComment","OffNormalAlarmType_ConditionRefresh","OffNormalAlarmType_Acknowledge","OffNormalAlarmType_Confirm","OffNormalAlarmType_ShelvingState_Unshelve","OffNormalAlarmType_ShelvingState_OneShotShelve","OffNormalAlarmType_ShelvingState_TimedShelve","TripAlarmType_Enable","TripAlarmType_Disable","TripAlarmType_AddComment","TripAlarmType_ConditionRefresh","TripAlarmType_Acknowledge","TripAlarmType_Confirm","TripAlarmType_ShelvingState_Unshelve","TripAlarmType_ShelvingState_OneShotShelve","TripAlarmType_ShelvingState_TimedShelve","ServerType_GetMonitoredItems","Server_GetMonitoredItems","GetMonitoredItemsMethodType","FileType_Open","FileType_Close","FileType_Read","FileType_Write","FileType_GetPosition","FileType_SetPosition","AddressSpaceFileType_Open","AddressSpaceFileType_Close","AddressSpaceFileType_Read","AddressSpaceFileType_Write","AddressSpaceFileType_GetPosition","AddressSpaceFileType_SetPosition","AddressSpaceFileType_ExportNamespace","NamespaceMetadataType_NamespaceFile_Open","NamespaceMetadataType_NamespaceFile_Close","NamespaceMetadataType_NamespaceFile_Read","NamespaceMetadataType_NamespaceFile_Write","NamespaceMetadataType_NamespaceFile_GetPosition","NamespaceMetadataType_NamespaceFile_SetPosition","NamespaceMetadataType_NamespaceFile_ExportNamespace","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition","NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_ExportNamespace","OpenMethodType","CloseMethodType","ReadMethodType","WriteMethodType","GetPositionMethodType","SetPositionMethodType","SystemOffNormalAlarmType_Disable","SystemOffNormalAlarmType_Enable","SystemOffNormalAlarmType_AddComment","SystemOffNormalAlarmType_ConditionRefresh","SystemOffNormalAlarmType_Acknowledge","SystemOffNormalAlarmType_Confirm","SystemOffNormalAlarmType_ShelvingState_Unshelve","SystemOffNormalAlarmType_ShelvingState_OneShotShelve","SystemOffNormalAlarmType_ShelvingState_TimedShelve","OpenWithMasksMethodType","CloseAndUpdateMethodType","AddCertificateMethodType","RemoveCertificateMethodType","TrustListType_Open","TrustListType_Close","TrustListType_Read","TrustListType_Write","TrustListType_GetPosition","TrustListType_SetPosition","TrustListType_OpenWithMasks","TrustListType_CloseAndUpdate","TrustListType_AddCertificate","TrustListType_RemoveCertificate","UpdateCertificateMethodType","ServerConfigurationType_UpdateCertificate","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate","ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate","ServerConfigurationType_CreateSigningRequest","ServerConfigurationType_ApplyChanges","ServerConfiguration_CreateSigningRequest","ServerConfiguration_ApplyChanges","CreateSigningRequestMethodType","ServerType_SetSubscriptionDurable","Server_SetSubscriptionDurable","SetSubscriptionDurableMethodType","GetRejectedListMethodType","ServerConfigurationType_GetRejectedList","ServerConfiguration_GetRejectedList","ServerType_ResendData","Server_ResendData","ResendDataMethodType","ServerType_RequestServerStateChange","Server_RequestServerStateChange","RequestServerStateChangeMethodType","ConditionType_ConditionRefresh2","ConditionRefresh2MethodType","DialogConditionType_ConditionRefresh2","AcknowledgeableConditionType_ConditionRefresh2","AlarmConditionType_ConditionRefresh2","LimitAlarmType_ConditionRefresh2","ExclusiveLimitAlarmType_ConditionRefresh2","NonExclusiveLimitAlarmType_ConditionRefresh2","NonExclusiveLevelAlarmType_ConditionRefresh2","ExclusiveLevelAlarmType_ConditionRefresh2","NonExclusiveDeviationAlarmType_ConditionRefresh2","ExclusiveDeviationAlarmType_ConditionRefresh2","NonExclusiveRateOfChangeAlarmType_ConditionRefresh2","ExclusiveRateOfChangeAlarmType_ConditionRefresh2","DiscreteAlarmType_ConditionRefresh2","OffNormalAlarmType_ConditionRefresh2","SystemOffNormalAlarmType_ConditionRefresh2","TripAlarmType_ConditionRefresh2","CertificateExpirationAlarmType_Disable","CertificateExpirationAlarmType_Enable","CertificateExpirationAlarmType_AddComment","CertificateExpirationAlarmType_ConditionRefresh","CertificateExpirationAlarmType_ConditionRefresh2","CertificateExpirationAlarmType_Acknowledge","CertificateExpirationAlarmType_Confirm","CertificateExpirationAlarmType_ShelvingState_Unshelve","CertificateExpirationAlarmType_ShelvingState_OneShotShelve","CertificateExpirationAlarmType_ShelvingState_TimedShelve","CreateDirectoryMethodType","CreateFileMethodType","DeleteFileMethodType","MoveOrCopyMethodType","FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory","FileDirectoryType_FileDirectoryName_Placeholder_CreateFile","FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy","FileDirectoryType_FileName_Placeholder_Open","FileDirectoryType_FileName_Placeholder_Close","FileDirectoryType_FileName_Placeholder_Read","FileDirectoryType_FileName_Placeholder_Write","FileDirectoryType_FileName_Placeholder_GetPosition","FileDirectoryType_FileName_Placeholder_SetPosition","FileDirectoryType_CreateDirectory","FileDirectoryType_CreateFile","FileDirectoryType_DeleteFileSystemObject","FileDirectoryType_MoveOrCopy","CertificateGroupType_TrustList_Open","CertificateGroupType_TrustList_Close","CertificateGroupType_TrustList_Read","CertificateGroupType_TrustList_Write","CertificateGroupType_TrustList_GetPosition","CertificateGroupType_TrustList_SetPosition","CertificateGroupType_TrustList_OpenWithMasks","CertificateGroupType_TrustList_CloseAndUpdate","CertificateGroupType_TrustList_AddCertificate","CertificateGroupType_TrustList_RemoveCertificate","ServerConfiguration_UpdateCertificate","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate","CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate","CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate","CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate","CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate","ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate","ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate","ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate","ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate","ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate","RoleSetType_RoleName_Placeholder_AddIdentity","RoleSetType_RoleName_Placeholder_RemoveIdentity","RoleType_AddIdentity","RoleType_RemoveIdentity","AddIdentityMethodType","RemoveIdentityMethodType","WellKnownRole_Anonymous_AddIdentity","WellKnownRole_Anonymous_RemoveIdentity","WellKnownRole_AuthenticatedUser_AddIdentity","WellKnownRole_AuthenticatedUser_RemoveIdentity","WellKnownRole_Observer_AddIdentity","WellKnownRole_Observer_RemoveIdentity","WellKnownRole_Operator_AddIdentity","WellKnownRole_Operator_RemoveIdentity","WellKnownRole_Supervisor_AddIdentity","WellKnownRole_Supervisor_RemoveIdentity","WellKnownRole_SecurityAdmin_AddIdentity","WellKnownRole_SecurityAdmin_RemoveIdentity","WellKnownRole_ConfigureAdmin_AddIdentity","WellKnownRole_ConfigureAdmin_RemoveIdentity","TemporaryFileTransferType_GenerateFileForRead","TemporaryFileTransferType_GenerateFileForWrite","TemporaryFileTransferType_CloseAndCommit","TemporaryFileTransferType_TransferState_Placeholder_Reset","GenerateFileForReadMethodType","GenerateFileForWriteMethodType","CloseAndCommitMethodType","FileTransferStateMachineType_Reset","OPCUANamespaceMetadata_NamespaceFile_Open","OPCUANamespaceMetadata_NamespaceFile_Close","OPCUANamespaceMetadata_NamespaceFile_Read","OPCUANamespaceMetadata_NamespaceFile_Write","OPCUANamespaceMetadata_NamespaceFile_GetPosition","OPCUANamespaceMetadata_NamespaceFile_SetPosition","OPCUANamespaceMetadata_NamespaceFile_ExportNamespace","RoleSetType_AddRole","RoleSetType_RemoveRole","AddRoleMethodType","RemoveRoleMethodType","WellKnownRole_Engineer_AddIdentity","WellKnownRole_Engineer_RemoveIdentity","RoleSetType_RoleName_Placeholder_AddApplication","RoleSetType_RoleName_Placeholder_RemoveApplication","RoleSetType_RoleName_Placeholder_AddEndpoint","RoleSetType_RoleName_Placeholder_RemoveEndpoint","RoleType_AddApplication","RoleType_RemoveApplication","RoleType_AddEndpoint","RoleType_RemoveEndpoint","AddApplicationMethodType","RemoveApplicationMethodType","AddEndpointMethodType","RemoveEndpointMethodType","WellKnownRole_Anonymous_AddApplication","WellKnownRole_Anonymous_RemoveApplication","WellKnownRole_Anonymous_AddEndpoint","WellKnownRole_Anonymous_RemoveEndpoint","WellKnownRole_AuthenticatedUser_AddApplication","WellKnownRole_AuthenticatedUser_RemoveApplication","WellKnownRole_AuthenticatedUser_AddEndpoint","WellKnownRole_AuthenticatedUser_RemoveEndpoint","WellKnownRole_Observer_AddApplication","WellKnownRole_Observer_RemoveApplication","WellKnownRole_Observer_AddEndpoint","WellKnownRole_Observer_RemoveEndpoint","WellKnownRole_Operator_AddApplication","WellKnownRole_Operator_RemoveApplication","WellKnownRole_Operator_AddEndpoint","WellKnownRole_Operator_RemoveEndpoint","WellKnownRole_Engineer_AddApplication","WellKnownRole_Engineer_RemoveApplication","WellKnownRole_Engineer_AddEndpoint","WellKnownRole_Engineer_RemoveEndpoint","WellKnownRole_Supervisor_AddApplication","WellKnownRole_Supervisor_RemoveApplication","WellKnownRole_Supervisor_AddEndpoint","WellKnownRole_Supervisor_RemoveEndpoint","WellKnownRole_SecurityAdmin_AddApplication","WellKnownRole_SecurityAdmin_RemoveApplication","WellKnownRole_SecurityAdmin_AddEndpoint","WellKnownRole_SecurityAdmin_RemoveEndpoint","WellKnownRole_ConfigureAdmin_AddApplication","WellKnownRole_ConfigureAdmin_RemoveApplication","WellKnownRole_ConfigureAdmin_AddEndpoint","WellKnownRole_ConfigureAdmin_RemoveEndpoint","ServerType_ServerCapabilities_Roles_AddRole","ServerType_ServerCapabilities_Roles_RemoveRole","ServerCapabilitiesType_Roles_AddRole","ServerCapabilitiesType_Roles_RemoveRole","Server_ServerCapabilities_Roles_AddRole","Server_ServerCapabilities_Roles_RemoveRole","FileSystem_FileDirectoryName_Placeholder_CreateDirectory","FileSystem_FileDirectoryName_Placeholder_CreateFile","FileSystem_FileDirectoryName_Placeholder_MoveOrCopy","FileSystem_FileName_Placeholder_Open","FileSystem_FileName_Placeholder_Close","FileSystem_FileName_Placeholder_Read","FileSystem_FileName_Placeholder_Write","FileSystem_FileName_Placeholder_GetPosition","FileSystem_FileName_Placeholder_SetPosition","FileSystem_CreateDirectory","FileSystem_CreateFile","FileSystem_DeleteFileSystemObject","FileSystem_MoveOrCopy","AlarmConditionType_Silence","AlarmConditionType_Suppress","AlarmGroupType_AlarmConditionInstance_Placeholder_Disable","AlarmGroupType_AlarmConditionInstance_Placeholder_Enable","AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment","AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge","AlarmGroupType_AlarmConditionInstance_Placeholder_Confirm","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_Unshelve","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_OneShotShelve","AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve","AlarmGroupType_AlarmConditionInstance_Placeholder_Silence","AlarmGroupType_AlarmConditionInstance_Placeholder_Suppress","LimitAlarmType_Silence","LimitAlarmType_Suppress","ExclusiveLimitAlarmType_Silence","ExclusiveLimitAlarmType_Suppress","NonExclusiveLimitAlarmType_Silence","NonExclusiveLimitAlarmType_Suppress","NonExclusiveLevelAlarmType_Silence","NonExclusiveLevelAlarmType_Suppress","ExclusiveLevelAlarmType_Silence","ExclusiveLevelAlarmType_Suppress","NonExclusiveDeviationAlarmType_Silence","NonExclusiveDeviationAlarmType_Suppress","ExclusiveDeviationAlarmType_Silence","ExclusiveDeviationAlarmType_Suppress","NonExclusiveRateOfChangeAlarmType_Silence","NonExclusiveRateOfChangeAlarmType_Suppress","ExclusiveRateOfChangeAlarmType_Silence","ExclusiveRateOfChangeAlarmType_Suppress","DiscreteAlarmType_Silence","DiscreteAlarmType_Suppress","OffNormalAlarmType_Silence","OffNormalAlarmType_Suppress","SystemOffNormalAlarmType_Silence","SystemOffNormalAlarmType_Suppress","TripAlarmType_Silence","TripAlarmType_Suppress","CertificateExpirationAlarmType_Silence","CertificateExpirationAlarmType_Suppress","DiscrepancyAlarmType_Disable","DiscrepancyAlarmType_Enable","DiscrepancyAlarmType_AddComment","DiscrepancyAlarmType_ConditionRefresh","DiscrepancyAlarmType_ConditionRefresh2","DiscrepancyAlarmType_Acknowledge","DiscrepancyAlarmType_Confirm","DiscrepancyAlarmType_ShelvingState_Unshelve","DiscrepancyAlarmType_ShelvingState_OneShotShelve","DiscrepancyAlarmType_ShelvingState_TimedShelve","DiscrepancyAlarmType_Silence","DiscrepancyAlarmType_Suppress","FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject","FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject","AlarmConditionType_Unsuppress","AlarmConditionType_RemoveFromService","AlarmConditionType_PlaceInService","AlarmGroupType_AlarmConditionInstance_Placeholder_Unsuppress","AlarmGroupType_AlarmConditionInstance_Placeholder_RemoveFromService","AlarmGroupType_AlarmConditionInstance_Placeholder_PlaceInService","LimitAlarmType_Unsuppress","LimitAlarmType_RemoveFromService","LimitAlarmType_PlaceInService","ExclusiveLimitAlarmType_Unsuppress","ExclusiveLimitAlarmType_RemoveFromService","ExclusiveLimitAlarmType_PlaceInService","NonExclusiveLimitAlarmType_Unsuppress","NonExclusiveLimitAlarmType_RemoveFromService","NonExclusiveLimitAlarmType_PlaceInService","NonExclusiveLevelAlarmType_RemoveFromService","NonExclusiveLevelAlarmType_PlaceInService","ExclusiveLevelAlarmType_Unsuppress","ExclusiveLevelAlarmType_RemoveFromService","ExclusiveLevelAlarmType_PlaceInService","NonExclusiveDeviationAlarmType_Unsuppress","NonExclusiveDeviationAlarmType_RemoveFromService","NonExclusiveDeviationAlarmType_PlaceInService","NonExclusiveRateOfChangeAlarmType_Unsuppress","NonExclusiveRateOfChangeAlarmType_RemoveFromService","NonExclusiveRateOfChangeAlarmType_PlaceInService","ExclusiveDeviationAlarmType_Unsuppress","ExclusiveDeviationAlarmType_RemoveFromService","ExclusiveDeviationAlarmType_PlaceInService","ExclusiveRateOfChangeAlarmType_Unsuppress","ExclusiveRateOfChangeAlarmType_RemoveFromService","ExclusiveRateOfChangeAlarmType_PlaceInService","DiscreteAlarmType_Unsuppress","DiscreteAlarmType_RemoveFromService","DiscreteAlarmType_PlaceInService","OffNormalAlarmType_Unsuppress","OffNormalAlarmType_RemoveFromService","OffNormalAlarmType_PlaceInService","SystemOffNormalAlarmType_Unsuppress","SystemOffNormalAlarmType_RemoveFromService","SystemOffNormalAlarmType_PlaceInService","TripAlarmType_Unsuppress","TripAlarmType_RemoveFromService","TripAlarmType_PlaceInService","CertificateExpirationAlarmType_Unsuppress","CertificateExpirationAlarmType_RemoveFromService","CertificateExpirationAlarmType_PlaceInService","DiscrepancyAlarmType_Unsuppress","DiscrepancyAlarmType_RemoveFromService","DiscrepancyAlarmType_PlaceInService","KeyCredentialConfigurationType_UpdateCredential","KeyCredentialConfigurationType_DeleteCredential","KeyCredentialUpdateMethodType","KeyCredentialConfiguration_ServiceName_Placeholder_UpdateCredential","KeyCredentialConfiguration_ServiceName_Placeholder_DeleteCredential","AlarmConditionType_Reset","AlarmGroupType_AlarmConditionInstance_Placeholder_Reset","LimitAlarmType_Reset","ExclusiveLimitAlarmType_Reset","NonExclusiveLimitAlarmType_Reset","NonExclusiveLevelAlarmType_Unsuppress","NonExclusiveLevelAlarmType_Reset","ExclusiveLevelAlarmType_Reset","NonExclusiveDeviationAlarmType_Reset","NonExclusiveRateOfChangeAlarmType_Reset","ExclusiveDeviationAlarmType_Reset","ExclusiveRateOfChangeAlarmType_Reset","DiscreteAlarmType_Reset","OffNormalAlarmType_Reset","SystemOffNormalAlarmType_Reset","TripAlarmType_Reset","InstrumentDiagnosticAlarmType_Disable","InstrumentDiagnosticAlarmType_Enable","InstrumentDiagnosticAlarmType_AddComment","InstrumentDiagnosticAlarmType_ConditionRefresh","InstrumentDiagnosticAlarmType_ConditionRefresh2","InstrumentDiagnosticAlarmType_Acknowledge","InstrumentDiagnosticAlarmType_Confirm","InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve","InstrumentDiagnosticAlarmType_ShelvingState_Unshelve","InstrumentDiagnosticAlarmType_ShelvingState_OneShotShelve","InstrumentDiagnosticAlarmType_Silence","InstrumentDiagnosticAlarmType_Suppress","InstrumentDiagnosticAlarmType_Unsuppress","InstrumentDiagnosticAlarmType_RemoveFromService","InstrumentDiagnosticAlarmType_PlaceInService","InstrumentDiagnosticAlarmType_Reset","SystemDiagnosticAlarmType_Disable","SystemDiagnosticAlarmType_Enable","SystemDiagnosticAlarmType_AddComment","SystemDiagnosticAlarmType_ConditionRefresh","SystemDiagnosticAlarmType_ConditionRefresh2","SystemDiagnosticAlarmType_Acknowledge","SystemDiagnosticAlarmType_Confirm","SystemDiagnosticAlarmType_ShelvingState_TimedShelve","SystemDiagnosticAlarmType_ShelvingState_Unshelve","SystemDiagnosticAlarmType_ShelvingState_OneShotShelve","SystemDiagnosticAlarmType_Silence","SystemDiagnosticAlarmType_Suppress","SystemDiagnosticAlarmType_Unsuppress","SystemDiagnosticAlarmType_RemoveFromService","SystemDiagnosticAlarmType_PlaceInService","SystemDiagnosticAlarmType_Reset","CertificateExpirationAlarmType_Reset","DiscrepancyAlarmType_Reset","AlarmMetricsType_Reset","_RelativePathElement__WEBPACK_IMPORTED_MODULE_0__","toHex","nb","regexGUID","isValidGuid","randomGuid","_DataStream__WEBPACK_IMPORTED_MODULE_0__","rewind","decodeGuid","encodeGuid","starts","write_UInt32","write_UInt16","write_UInt8","read_UInt16","read_UInt8","read_many","applicationUri","productUri","applicationName","_LocalizedText__WEBPACK_IMPORTED_MODULE_1__","applicationType","gatewayServerUri","discoveryProfileUri","discoveryUrls","_ApplicationType__WEBPACK_IMPORTED_MODULE_2__","decodeApplicationDescription","_factory_factories_factories__WEBPACK_IMPORTED_MODULE_3__","_nodeid_expanded_nodeid__WEBPACK_IMPORTED_MODULE_4__","BaseUAObject","_basic_types_DataStream__WEBPACK_IMPORTED_MODULE_0__","encodeServerState","decodeServerState","asyncTag","funcTag","genTag","proxyTag","lodash_es_isFunction","tag","_baseGetTag","isLength","UserIdentityTokenType","GetEndpointsRequest_GetEndpointsRequest","localeIds","profileUris","GetEndpointsResponse_GetEndpointsResponse","endpoints","_service_subscription__WEBPACK_IMPORTED_MODULE_3__","MonitoredItemBase","eventemitter3__WEBPACK_IMPORTED_MODULE_0__","subscription","monitoringParameters","_itemToMonitor","_service_read__WEBPACK_IMPORTED_MODULE_4__","_monitoringParameters","_generated_MonitoringParameters__WEBPACK_IMPORTED_MODULE_6__","_subscription","_monitoringMode","Reporting","_assert__WEBPACK_IMPORTED_MODULE_2__","_monitoredItemId","nextClientHandle","attributeId","_constants__WEBPACK_IMPORTED_MODULE_1__","EventNotifier","filter","Value","monitoredItemResult","_statusCode","_result","samplingInterval","queueSize","_filterResult","_add_monitored_item","done","itemToCreate","_prepare_for_monitoring","createMonitorItemsRequest","session","createMonitoredItems","response","_after_create","parameters","itemsToModify","monitoredItem","monParams","modifyMonitoredItemsRequest","_generated_ModifyMonitoredItemsRequest__WEBPACK_IMPORTED_MODULE_5__","modifyMonitoredItems","res","setMonitoringModeRequest","setMonitoringMode","chooseSecurityHeader","_service_secure_channel__WEBPACK_IMPORTED_MODULE_4__","SecureMessageChunkManager","eventemitter3__WEBPACK_IMPORTED_MODULE_1__","securityHeader","sequenceNumberGenerator","_aborted","_chunkSize","_msgType","secureChannelId","_secureChannelId","_sequenceNumberGenerator","_securityHeader","_sequenceHeader","securityHeaderSize","_basic_types_DataStream__WEBPACK_IMPORTED_MODULE_3__","_headerSize","params","block","totalLength","finalC","write_header","writeSequenceHeader","signingFunc","_chunkManager","_chunkmanager__WEBPACK_IMPORTED_MODULE_2__","is_last","next","write","discardOldest","ReferenceDescription_ReferenceDescription","isForward","displayName","nodeClass","typeDefinition","decodeReferenceDescription","BrowseResult_BrowseResult","continuationPoint","references","decodeBrowseResult","BrowseDescription_BrowseDescription","browseDirection","nodeClassMask","resultMask","decodeBrowseDescription","BrowseRequest_BrowseRequest","requestedMaxReferencesPerNode","nodesToBrowse","BrowseResponse_BrowseResponse","BrowseNextRequest_BrowseNextRequest","releaseContinuationPoints","continuationPoints","BrowseNextResponse_BrowseNextResponse","stringToQualifiedName","split_array","isInteger","shift","coerceQualifyName","EnumValueType_EnumValueType","TimeZoneDataType_TimeZoneDataType","daylightSavingInOffset","coerceLocalizedText","encodeApplicationType","decodeApplicationType","onlyOnce","callFn","arrayLike","newArr","idx","eachOfSeries","doLimit","eachOfLimit","series","tasks","eachfn","noop","isArrayLike","task","wrapAsync","_parallel","encodeBrowseDirection","decodeBrowseDirection","encodeNodeClass","decodeNodeClass","serverStatus_State_Id","client_session_keepalive_manager_ClientSessionKeepAliveManager","timerId","the_session","lastResponseReceivedTime","pingTimeout","readVariableValue","dataValue","stop","newState","lastKnownState","timeout","checkInterval","setInterval","ping_server","clearInterval","QueryDataDescription_QueryDataDescription","indexRange","decodeQueryDataDescription","NodeTypeDescription_NodeTypeDescription","typeDefinitionNode","includeSubTypes","dataToReturn","decodeNodeTypeDescription","QueryFirstRequest_QueryFirstRequest","nodeTypes","maxDataSetsToReturn","maxReferencesToReturn","QueryDataSet_QueryDataSet","values","decodeQueryDataSet","ParsingResult_ParsingResult","dataStatusCodes","dataDiagnosticInfos","decodeParsingResult","QueryFirstResponse_QueryFirstResponse","queryDataSets","parsingResults","QueryNextRequest_QueryNextRequest","releaseContinuationPoint","QueryNextResponse_QueryNextResponse","revisedContinuationPoint","client_session_ClientSession","client","_terminatePublishEngine","_publishEngine","terminate","_closeEventHasBeenEmmitted","_client","_closed","cli","closed","endpoint","_timeout","client_publish_engine","coerceBrowseDescription","Forward","service_browse","nodes","_requestedMaxReferencesPerNode","request","performMessageTransaction","service_read","dataEncoding","coerceReadValueId","Neither","raw_status_codes","diags","service_history","isReadModified","endTime","numValuesPerNode","returnBounds","historyReadDetails","Both","nodesToWrite","service_write","data_value","statusCodes","read","SomeRequest","SomeResponse","trace","lastRequestSentTime","toISOString","emitCloseEvent","service_subscription","_defaultRequest","has_single_element","service_translate_browse_path","secureChannel","isOpened","isChannelValid","deleteSubscription","closeSession","methodsToCall","service_call","objectId","methodId","inputArguments","outputArguments","serverHandles","clientHandles","emptyUint32Array","browseDescription","Variable","BrowseName","browse","inputArgumentRef","outputArgumentRef","actions","unused_nodesToRead","index","queryFirstRequest","_keepAliveManager","stopKeepAliveManager","state","sessionId","serverCertificate","serverSignature","dataTypeId","nodeToBrowse","Inverse","ReferenceTypeId","baseDataType","__findBasicDataType","nodes_to_read","dataValues","subscriptionCount","replenish_publish_request_queue","AttributeIds","encodeArray","encode_element_func","decodeArray","decode_element_func","cloneArray","item","cloneComplexArray","concatTypedArrays","arrays","concatArrayBuffers","_QualifiedName__WEBPACK_IMPORTED_MODULE_1__","decodeReadValueId","_variant__WEBPACK_IMPORTED_MODULE_1__","decodeCallMethodRequest","server","_ApplicationDescription__WEBPACK_IMPORTED_MODULE_1__","userIdentityTokens","transportProfileUri","securityLevel","_MessageSecurityMode__WEBPACK_IMPORTED_MODULE_2__","_UserTokenPolicy__WEBPACK_IMPORTED_MODULE_3__","decodeEndpointDescription","_factory_factories_factories__WEBPACK_IMPORTED_MODULE_4__","_nodeid_expanded_nodeid__WEBPACK_IMPORTED_MODULE_5__","elementResults","elementDiagnosticInfos","_basic_types__WEBPACK_IMPORTED_MODULE_2__","_ContentFilterElementResult__WEBPACK_IMPORTED_MODULE_0__","useServerCapabilitiesDefaults","treatUncertainAsBad","percentDataBad","percentDataGood","useSlopedExtrapolation","channelId","decodeRelativePathElement","_service_endpoints__WEBPACK_IMPORTED_MODULE_11__","_service_register_server__WEBPACK_IMPORTED_MODULE_12__","_common_debug__WEBPACK_IMPORTED_MODULE_10__","loglevel__WEBPACK_IMPORTED_MODULE_1__","defaultConnectionStrategy","maxRetry","initialDelay","maxDelay","randomisationFactor","OPCUAClientBase","eventemitter3__WEBPACK_IMPORTED_MODULE_4__","registry","_object_registry_objectRegistry__WEBPACK_IMPORTED_MODULE_9__","secureObject","_common_secure_object__WEBPACK_IMPORTED_MODULE_14__","protocolVersion","_sessions","_server_endpoints","_secureChannel","defaultSecureTokenLifetime","defaultSecureTokenLifeTime","_secure_channel__WEBPACK_IMPORTED_MODULE_6__","_secure_channel_security_policy__WEBPACK_IMPORTED_MODULE_5__","keepSessionAlive","_byteRead","_byteWritten","_transactionsPerformed","_timedOutRequestCount","connectionStrategy","bytesRead","bytesWritten","transactionsPerformed","timedOutRequestCount","knowsServerEndpoint","isReconnecting","isConnecting","reconnectOnFailure","_endpointUrl","arg0","arg1","arg2","__findEndpoint","connect","callback_od","_utils_once__WEBPACK_IMPORTED_MODULE_7__","delayed__WEBPACK_IMPORTED_MODULE_8__","register","_internal_create_secure_channel","_cancel_reconnection","disconnect","_close_pending_sessions","unregister","tmp_channel","_destroy_secure_channel","close","serverUris","servers","sessions","async_es_map__WEBPACK_IMPORTED_MODULE_3__","_service_secure_channel__WEBPACK_IMPORTED_MODULE_15__","startKeepAliveManager","splice","dispose","find","isTransactionInProgress","selected_endpoint","getEndpoints","async_es_series__WEBPACK_IMPORTED_MODULE_2__","abortConnection","_inner_callback","_secure_channel_client_secure_channel_layer__WEBPACK_IMPORTED_MODULE_13__","parent","_install_secure_channel_event_handlers","number","delay","message_chunk","token","_recreate_secure_channel","_on_connection_reestablished","getPrivateKey","getCertificate","getCertificateChain","_nodeid_expanded_nodeid__WEBPACK_IMPORTED_MODULE_1__","_factory_factories_factories__WEBPACK_IMPORTED_MODULE_0__","limit","iterable","iteratee","iteratorSymbol","iterator","getIterator","coll","_baseTimes","lodash_es_isObjectLike","argsTag","_baseIsArguments","objectProto","isArguments_hasOwnProperty","propertyIsEnumerable","lodash_es_isArguments","lodash_es_isArray","MAX_SAFE_INTEGER","reIsUint","_isIndex","typedArrayTags","_baseIsTypedArray","_baseUnary","nodeIsTypedArray","_nodeUtil","isTypedArray","lodash_es_isTypedArray","_arrayLikeKeys_hasOwnProperty","_arrayLikeKeys","inherited","isArr","isArg","isBuff","isBuffer","isType","skipIndexes","_isPrototype_objectProto","_isPrototype","Ctor","_nativeKeys","transform","_overArg","_baseKeys_hasOwnProperty","_baseKeys","lodash_es_keys","iterator_iterator","createArrayIterator","createES2015Iterator","okeys","createObjectIterator","nextElem","running","looping","iterateeCallback","breakLoop","replenish","elem","_eachOfLimit","HistoryData_HistoryData","encodeHistoryUpdateType","decodeHistoryUpdateType","ModificationInfo_ModificationInfo","modificationTime","updateType","userName","decodeModificationInfo","HistoryModifiedData_HistoryModifiedData","noOfDataValues","modificationInfos","HistoryReadValueId_HistoryReadValueId","decodeHistoryReadValueId","HistoryReadResult_HistoryReadResult","historyData","decodeHistoryReadResult","HistoryUpdateResult_HistoryUpdateResult","operationResults","decodeHistoryUpdateResult","HistoryReadRequest_HistoryReadRequest","HistoryReadResponse_HistoryReadResponse","HistoryUpdateRequest_HistoryUpdateRequest","historyUpdateDetails","HistoryUpdateResponse_HistoryUpdateResponse","ReadRawModifiedDetails_ReadRawModifiedDetails","ReadProcessedDetails_ReadProcessedDetails","ReadAtTimeDetails_ReadAtTimeDetails","reqTimes","useSimpleBounds","ReadEventDetails_ReadEventDetails","_Symbol","_getRawTag_hasOwnProperty","nativeObjectToString","symToStringTag","_getRawTag","isOwn","unmasked","_objectToString_nativeObjectToString","_objectToString","nullTag","undefinedTag","_baseGetTag_symToStringTag","__WEBPACK_AMD_DEFINE_FACTORY__","__WEBPACK_AMD_DEFINE_RESULT__","definition","undefinedType","logMethods","bindMethod","methodName","method","replaceLoggingMethods","level","loggerName","methodFactory","defaultMethodFactory","realMethod","Logger","defaultLevel","currentLevel","storageKey","getPersistedLevel","storedLevel","localStorage","ignore","cookie","document","location","encodeURIComponent","levels","TRACE","DEBUG","INFO","WARN","ERROR","SILENT","getLevel","setLevel","persist","levelNum","levelName","persistLevelIfPossible","setDefaultLevel","enableAll","disableAll","initialLevel","defaultLogger","_loggersByName","getLogger","logger","_log","noConflict","getLoggers","Variant_ArrayMask","_basic_types__WEBPACK_IMPORTED_MODULE_4__","Variant_ArrayDimensionsMask","Variant_TypeMask","Variant","_factory_factories_baseobject__WEBPACK_IMPORTED_MODULE_5__","_DataTypeEnum__WEBPACK_IMPORTED_MODULE_1__","Null","_VariantArrayTypeEnum__WEBPACK_IMPORTED_MODULE_2__","setDataType","setArrayType","writeArrayBuffer","byteOffset","encodeGeneralArray","encodeVariantArray","get_encoder","hasDimension","readArrayBuffer","BYTES_PER_ELEMENT","decodeGeneralArray","decodeVariantArray","get_decoder","array","reduce","calculate_product","variantLike","_factory_factories_builtin_types__WEBPACK_IMPORTED_MODULE_8__","decodeVariant","_factory_factories_factories__WEBPACK_IMPORTED_MODULE_6__","_factory__WEBPACK_IMPORTED_MODULE_9__","_factory_factories_builtin_types_special__WEBPACK_IMPORTED_MODULE_7__","global","scope","Timeout","id","clearFn","_id","_clearFn","setTimeout","clearTimeout","unref","ref","enroll","msecs","_idleTimeoutId","_idleTimeout","unenroll","_unrefActive","active","_onTimeout","clearImmediate","sameDate","date1","date2","sourceTimestampHasChanged","dataValue1","dataValue2","serverTimestampHasChanged","sameDataValue","timestampHasChanged","src_variant","RegisteredServer_RegisteredServer","serverUri","serverNames","serverType","semaphoreFilePath","isOnline","RegisterServerRequest_RegisterServerRequest","RegisterServerResponse_RegisterServerResponse","FindServersRequest_FindServersRequest","FindServersResponse_FindServersResponse","Argument_Argument","valueRank","arrayDimensions","CallRequest_CallRequest","CallMethodResult_CallMethodResult","inputArgumentResults","inputArgumentDiagnosticInfos","decodeCallMethodResult","CallResponse_CallResponse","WriteValue_WriteValue","decodeWriteValue","WriteRequest_WriteRequest","WriteResponse_WriteResponse","readRawMessageHeader","messageHeader","_chunkmanager__WEBPACK_IMPORTED_MODULE_5__","MessageBuilderBase","packetAssembler","_packet_assembler_packet_assembler__WEBPACK_IMPORTED_MODULE_4__","readMessageFunc","_feed_messageChunk","info","_tick0","security_defeated","total_body_size","total_message_size","_init_new","status_error","blocks","message_chunks","binaryStream","expected_secureChannelId","_report_error","_read_headers","offsetBodyStart","offsetBodyEnd","cloned_buf","feed","_append","full_message_body","_basic_types_array__WEBPACK_IMPORTED_MODULE_6__","_tick1","_decode_message_body","errorMessage","sequenceHeader","g","eval","registerSpecialVariantEncoder","ConstructorFunc","Type","_self_encode","_self_decode","OPCUASecureObject","_certificate","_certificateFile","certificateFile","_private_key_pem","_privateKeyFile","privateKeyFile","_certificateChain","_MonitoringParameters__WEBPACK_IMPORTED_MODULE_1__","decodeMonitoredItemModifyRequest","_RequestHeader__WEBPACK_IMPORTED_MODULE_0__","_TimestampsToReturn__WEBPACK_IMPORTED_MODULE_2__","_MonitoredItemModifyRequest__WEBPACK_IMPORTED_MODULE_3__","operandStatusCodes","operandDiagnosticInfos","decodeContentFilterElementResult","SequenceNumberGenerator","_set","current","_counter","MAXVALUE","ClientSubscription","hasTimedOut","_client_session__WEBPACK_IMPORTED_MODULE_6__","getPublishEngine","_publishingInterval","lifetimeCount","maxKeepAliveCount","_publishingEnabled","_subscriptionId","_next_client_handle","__create_subscription","_timeoutHint","_common_debug__WEBPACK_IMPORTED_MODULE_9__","_service_subscription__WEBPACK_IMPORTED_MODULE_5__","createSubscription","registerSubscription","notification","monitorItemObj","_notify_value_change","cleanup_acknowledgment_for_subscription","lastSequenceNumber","__on_publish_response_DataChangeNotification","__on_publish_response_StatusChangeNotification","__on_publish_response_EventNotificationList","unregisterSubscription","_terminate_step2","deleteSubscriptions","isActive","wait_for_subscription_and_monitor","_watch_dog","_nodeid_nodeid__WEBPACK_IMPORTED_MODULE_4__","_MonitoredItem__WEBPACK_IMPORTED_MODULE_7__","_wait_for_subscription_to_be_ready","_monitor","itemsToMonitor","monitoredItemGroup","_MonitoredItemGroup__WEBPACK_IMPORTED_MODULE_8__","_remove","deleteMonitoredItems","_delete_monitored_items","setPublishingMode","monitoredItems_old","async_es_series__WEBPACK_IMPORTED_MODULE_11__","getSubscription","_generated_TimestampsToReturn__WEBPACK_IMPORTED_MODULE_3__","MonitoredItem","_MonitoredItemBase__WEBPACK_IMPORTED_MODULE_2__","_timestampsToReturn","_generated_TimestampsToReturn__WEBPACK_IMPORTED_MODULE_1__","_toolbox_monitor","_toolbox_modify","_toolbox_setMonitoringMode","SimpleAttributeOperand_SimpleAttributeOperand","typeDefinitionId","decodeSimpleAttributeOperand","EventFilter_EventFilter","selectClauses","whereClause","encodeUserTokenType","decodeUserTokenType","UserTokenPolicy_UserTokenPolicy","policyId","tokenType","issuedTokenType","issuerEndpointUrl","decodeUserTokenPolicy","viewId","viewVersion","PacketAssembler","_stack","expectedLength","currentLength","minimumSizeInBytes","_assert__WEBPACK_IMPORTED_MODULE_1__","_basic_types_array__WEBPACK_IMPORTED_MODULE_2__","_build_data","packet_info","_read_packet_info","size1","chunk1","chunk2","_factory__WEBPACK_IMPORTED_MODULE_4__","encode_StatusCode","decode_StatusCode","encode_String","decode_String","TCPErrorMessage","_factory_factories_baseobject__WEBPACK_IMPORTED_MODULE_2__","reason","freeSelf","_freeGlobal_js__WEBPACK_IMPORTED_MODULE_0__","freeGlobal","eachOfArrayLike","completed","iteratorCallback","eachOfGeneric","Infinity","eachOf","counter","_iteratee","_","encodeFilterOperator","decodeFilterOperator","ContentFilterElement_ContentFilterElement","filterOperator","filterOperands","decodeContentFilterElement","ContentFilter_ContentFilter","ObjectRegistry","objectType","_objectType","_cache","registries","_____hash","hashCounter","getClassName","freeExports","nodeType","freeModule","freeProcess","process","nodeUtil","types","require","binding","FunctionCallState","backoff_Backoff","backoffStrategy","backoffStrategy_","maxNumberOfRetry_","backoffNumber_","backoffDelay_","timeoutID_","backoff","onBackoff_","maxNumberOfRetry","reset","isDef","BackoffStrategy","initialDelay_","maxDelay_","randomisationFactor_","backoffDelay","next_","randomisationMultiple","round","reset_","fibonacci_FibonacciBackoffStrategy","nextBackoffDelay_","getInitialDelay","getMaxDelay","function_call_FunctionCall","function_","arguments_","callback_","lastResult_","numRetries_","backoff_","strategy_","failAfter_","retryPredicate_","DEFAULT_RETRY_PREDICATE_","state_","PENDING","RUNNING","COMPLETED","ABORTED","strategy","isPending","retryPredicate","isCompleted","isAborted","isRunning","doCallback_","backoffFactory","doCall_","handleBackoff_","failAfter","isRetry","eventArgs","handleFunctionCallback_","exponential_ExponentialBackoffStrategy","factor_","DEFAULT_FACTOR","vargs","NumericRangeType","_factory_factories_basic_type__WEBPACK_IMPORTED_MODULE_3__","NumericRangeEmpty_str","NumericRange_Schema","subtype","toEncodeableString","ceil","regexNumericRange","_valid_range","construct_numeric_range_bit_from_string","range","SingleValue","ArrayRange","InvalidRange","_normalize","_construct_from_string","nr","rowRange","colRange","MatrixRange","construct_numeric_range_from_string","second_value","isValid","_set_single_value","_set_range_value","_construct_from_values","_construct_from_array","_construct_from_NumericRange","Empty","_check_range","array_range_to_string","matrix_range_to_string","extract_empty","extract_single_value","extract_array_range","dimension","rowLow","rowHigh","colLow","colHigh","nbCol","nbRowDest","nbColDest","col","ctor","srcIndex","destIndex","extract_matrix_range","arrayToAlter","newValues","low_index","high_index","assert_array_or_buffer","insertInPlaceStandardArray","Buffer","insertInPlaceBuffer","insertInPlaceTypedArray","subarray","bufferToAlter","from","registerImmediate","nextHandle","tasksByHandle","currentlyRunningATask","doc","attachTo","getPrototypeOf","handle","nextTick","runIfPresent","postMessage","importScripts","postMessageIsAsynchronous","oldOnMessage","onmessage","canUsePostMessage","messagePrefix","onGlobalMessage","addEventListener","attachEvent","installPostMessageImplementation","MessageChannel","channel","port1","port2","installMessageChannelImplementation","createElement","html","documentElement","script","onreadystatechange","removeChild","appendChild","installReadyStateChangeImplementation","run","cachedSetTimeout","cachedClearTimeout","defaultSetTimout","defaultClearTimeout","runTimeout","fun","currentQueue","queue","draining","queueIndex","cleanUpNextTick","drainQueue","marker","runClearTimeout","Item","title","browser","env","argv","version","versions","prependListener","prependOnceListener","cwd","chdir","dir","umask","originalModule","webpackPolyfill","children","registerBasicType","_factories_builtin_types__WEBPACK_IMPORTED_MODULE_2__","encodeFunc","decodeFunc","coerceFunc","toJSONFunc","new_schema","validate","old","delayed","deferMs","ms","ctx","cumulativeDelayed","_args","defer","deferred","debounce","crypto","msCrypto","_utils__WEBPACK_IMPORTED_MODULE_9__","_service_secure_channel__WEBPACK_IMPORTED_MODULE_3__","AsymmetricAlgorithmSecurityHeader","do_trace_message","do_trace_statistics","process_request_callback","request_data","the_callback_func","g_channelId","defaultTransactionTimeout","dump_transaction_statistics","stats","w","_schema","yellow","lap_transaction","toFixed","ClientSecureChannelLayer","__in_normal_close_operation","_renew_security_token_requested","_timedout_request_count","_securityTokenTimeoutId","_lastRequestId","_clientNonce","messageChunker","_message_chunker__WEBPACK_IMPORTED_MODULE_13__","_securityMode","_security_policy__WEBPACK_IMPORTED_MODULE_4__","messageBuilder","_message_builder__WEBPACK_IMPORTED_MODULE_5__","_request_data","loglevel__WEBPACK_IMPORTED_MODULE_6__","moreinfo","_common_debug__WEBPACK_IMPORTED_MODULE_7__","_tick2","_tick3","_tick4","_record_transaction_statistics","on_transaction_completed","last_transaction_stats","transportTimeout","defaultTransportTimeout","__call","_transport","transaction_stats","bytesWritten_after","bytesWritten_before","lap_sending_request","lap_waiting_response","lap_receiving_response","lap_processing_response","_cancel_pending_transactions","_securityToken","_renew_security_token","liveTime","_on_security_token_about_to_expire","cryptoFactory","getRandomValues","is_initial","Issue","Renew","_build_client_nonce","_isOpened","msg","_performMessageTransaction","_constants_raw_status_codes__WEBPACK_IMPORTED_MODULE_8__","_serverNonce","_derivedKeys","pushNewToken","_install_security_token_watchdog","transport","_on_receive_message_chunk","_on_transport_closed","_open_secure_channel_request","endpoint_url","_transport_client_ws_transport__WEBPACK_IMPORTED_MODULE_14__","last_err","_connect","_i_callback","_cancelBackoff","should_abort","abort","_backoff_completion","numberOfRetry","getNumRetries","_backoff__WEBPACK_IMPORTED_MODULE_11__","setStrategy","_establish_connection","_on_connection","_cancel_security_token_watchdog","_stream","_basic_types_DataStream__WEBPACK_IMPORTED_MODULE_2__","_chunkmanager__WEBPACK_IMPORTED_MODULE_10__","_message_header_to_string__WEBPACK_IMPORTED_MODULE_12__","requestMessage","local_callback","modified_callback","transaction_data","_internal_perform_transaction","makeRequestId","chunk_count","_sendSecureOpcUARequest","_receiverCertificate","Sign","SignAndEncrypt","sendBufferSize","chunkSecureMessage","_send_chunk","disconnecting","_service_secure_channel__WEBPACK_IMPORTED_MODULE_5__","messageHeaderToString","_secure_message_chunk_manager__WEBPACK_IMPORTED_MODULE_4__","_common_debug__WEBPACK_IMPORTED_MODULE_2__","MessageChunker","header","_sequence_number_generator__WEBPACK_IMPORTED_MODULE_3__","update","messageChunkCallback","binSize","secure_chunker","_secure_message_chunk_manager__WEBPACK_IMPORTED_MODULE_5__","_root_js__WEBPACK_IMPORTED_MODULE_0__","_stubFalse_js__WEBPACK_IMPORTED_MODULE_1__","_defer","hasSetImmediate","hasNextTick","_slice__WEBPACK_IMPORTED_MODULE_0__","ClientSidePublishEngine","_session","subscriptionMap","activeSubscriptionCount","nbPendingPublishRequests","nbMaxPublishRequestsAcceptedByServer","isSuspended","flag","send_publish_request","_send_publish_request","_common_debug__WEBPACK_IMPORTED_MODULE_1__","calculatedTimeout","publish_request","_generated_RequestHeader__WEBPACK_IMPORTED_MODULE_4__","publish","_receive_publish_response","onNotificationMessage","publishRequestCountInPipeline","acknowledge_notification","async_es_forEachOf__WEBPACK_IMPORTED_MODULE_5__","_the_callback","is_done","_send_republish","_b_callback","republish","_constants_raw_status_codes__WEBPACK_IMPORTED_MODULE_2__","async_es_whilst__WEBPACK_IMPORTED_MODULE_6__","_republish","recreateSubscriptionAndMonitoredItem","whilst","_internal_onlyOnce__WEBPACK_IMPORTED_MODULE_2__","lodash_es_noop__WEBPACK_IMPORTED_MODULE_0__","_internal_wrapAsync__WEBPACK_IMPORTED_MODULE_3__","_internal_slice__WEBPACK_IMPORTED_MODULE_1__","_internal_once__WEBPACK_IMPORTED_MODULE_5__","lodash_es_noop__WEBPACK_IMPORTED_MODULE_4__","_internal_breakLoop__WEBPACK_IMPORTED_MODULE_1__","_internal_onlyOnce__WEBPACK_IMPORTED_MODULE_6__","_internal_doLimit__WEBPACK_IMPORTED_MODULE_3__","_eachOfLimit__WEBPACK_IMPORTED_MODULE_2__","lodash_es_isArrayLike__WEBPACK_IMPORTED_MODULE_0__","_internal_wrapAsync__WEBPACK_IMPORTED_MODULE_7__","MonitoredItemGroup","_monitoredItems","_service_subscription__WEBPACK_IMPORTED_MODULE_4__","ws_transport_fakeSocket","invalid","ws_transport_counter","ws_transport_WSTransport","_on_socket_ended_message","__disconnecting__","_on_socket_ended","_on_data_received","on_socket_ended","_fulfill_pending_promises","_socket","_protocolVersion","chunkWrittenCount","chunkReadCount","msg_type","chunk_type","_pending_buffer","tools","send","message_builder_base","_write_chunk","_cleanup_timers","the_callback","has_callback","_timerId","_on_socket_closed_called","_on_socket_ended_called","socket","packet_assembler","_on_message_received","onclose","url","on_socket_closed","onerror","_start_timeout_timer","readyState","OPEN","encode_UInt32","decode_UInt32","encode_UAString","decode_UAString","HelloMessage_HelloMessage","receiveBufferSize","maxMessageSize","maxChunkCount","AcknowledgeMessage_encode_UInt32","AcknowledgeMessage_decode_UInt32","AcknowledgeMessage_AcknowledgeMessage","createClientSocket","ep","websocket","WebSocket","binaryType","fakeSocket","getFakeTransport","client_ws_transport_ClientWSTransport","connected","_connected","_parameters","_install_socket","onopen","_perform_HEL_ACK_transaction","responseClass","chunkmanager","_install_one_time_message_receiver","_handle_ACK_response","inner_err","_send_HELLO_request","spaces","f","width","hex_block","strBuf","make_tracer","pad","display","hex_info","nbColorAttributes","extra","tracer","dump","encoding_mask","valueEnum","encoding_info","bits","display_encoding_mask","operation","fieldType","_hexDump","ext_buf","encodingMask","packet_analyzer","display_encodeable","custom_options","objMessage","attrName","decode_debug","message_builder_MessageBuilder","_securityPolicy","security_policy","_objectFactory","objectFactory","_previous_sequenceNumber","_privateKey","_cryptoFactory","expectedSequenceNumber","errMessage","_tokenStack","got_new_token","errorCode","cyan","secure_message_chunk_manager","service_secure_channel","_validateSequenceNumber","_safe_decode_message_body","base64","ieee754","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","encodingOrOffset","allocUnsafe","fromArrayLike","fromArrayBuffer","encoding","isEncoding","fromString","checked","isnan","fromObject","assertSize","isView","loweredCase","utf8ToBytes","base64ToBytes","swap","bidirectionalIndexOf","arrayIndexOf","lastIndexOf","indexSize","arrLength","valLength","readUInt16BE","foundIndex","found","hexWrite","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","byteArray","asciiToBytes","latin1Write","base64Write","ucs2Write","units","utf16leToBytes","base64Slice","fromByteArray","utf8Slice","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","codePoints","MAX_ARGUMENTS_LENGTH","decodeCodePointsArray","SlowBuffer","alloc","INSPECT_MAX_BYTES","foo","typedArraySupport","poolSize","_augment","species","configurable","fill","allocUnsafeSlow","_isBuffer","compare","x","y","list","swap16","swap32","swap64","hexSlice","asciiSlice","latin1Slice","utf16leSlice","equals","inspect","thisStart","thisEnd","thisCopy","targetCopy","includes","_arr","checkOffset","ext","checkInt","objectWriteUInt16","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","INVALID_BASE64_RE","leadSurrogate","toByteArray","trim","stringtrim","base64clean","src","dst","b64","lens","getLens","validLen","placeHoldersLen","Arr","_byteLength","curByte","revLookup","uint8","extraBytes","parts","len2","encodeChunk","lookup","tripletToBase64","num","output","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","LN2","EUInformation_EUInformation","unitId","Range_Range","encodeAxisScaleEnumeration","decodeAxisScaleEnumeration","AxisInformation_AxisInformation","engineeringUnits","eURange","axisScaleType","axisSteps","commonCodeToUInt","makeEUInformation","symbol","shortName","longName","standardUnits","ampere","bar","becquerel","kilobecquerel","gigabecquerel","curie","curie_per_kilogram","cubic_centimetre","cubic_centimetre_per_second","cubic_metre","cubic_metre_per_hour","degree","degree_celsius","degree_fahrenheit","kelvin","dots_per_inch","electron_volt","kilo_electron_volt","mega_electron_volt","farad","gram","joule","kilohertz","metre","centimetre","millimetre","megawatt","newton","percent","pixel","volt","watt","second","millisecond","microsecond","ModelChangeStructureDataType_ModelChangeStructureDataType","affected","affectedType","verb","SubscriptionDiagnosticsDataType_SubscriptionDiagnosticsDataType","publishingInterval","maxLifetimeCount","modifyCount","enableCount","disableCount","republishRequestCount","republishMessageRequestCount","republishMessageCount","transferRequestCount","transferredToAltClientCount","transferredToSameClientCount","publishRequestCount","dataChangeNotificationsCount","eventNotificationsCount","notificationsCount","latePublishRequestCount","currentKeepAliveCount","currentLifetimeCount","unacknowledgedMessageCount","discardedMessageCount","monitoredItemCount","disabledMonitoredItemCount","monitoringQueueOverflowCount","nextSequenceNumber","eventQueueOverFlowCount","RedundantServerDataType_RedundantServerDataType","serverId","serviceLevel","serverState","SamplingIntervalDiagnosticsDataType_SamplingIntervalDiagnosticsDataType","maxMonitoredItemCount","SemanticChangeStructureDataType_SemanticChangeStructureDataType","ServerDiagnosticsSummaryDataType_ServerDiagnosticsSummaryDataType","serverViewCount","currentSessionCount","cumulatedSessionCount","securityRejectedSessionCount","rejectedSessionCount","sessionTimeoutCount","sessionAbortCount","currentSubscriptionCount","cumulatedSubscriptionCount","publishingIntervalCount","securityRejectedRequestsCount","rejectedRequestsCount","BuildInfo_BuildInfo","manufacturerName","productName","softwareVersion","buildNumber","buildDate","ServerStatusDataType_ServerStatusDataType","currentTime","buildInfo","secondsTillShutdown","shutdownReason","ServiceCounterDataType_ServiceCounterDataType","totalCount","errorCount","SessionDiagnosticsDataType_SessionDiagnosticsDataType","sessionName","clientDescription","actualSessionTimeout","maxResponseMessageSize","clientConnectionTime","clientLastContactTime","currentSubscriptionsCount","currentMonitoredItemsCount","currentPublishRequestsInQueue","totalRequestCount","unauthorizedRequestCount","readCount","historyReadCount","writeCount","historyUpdateCount","callCount","createMonitoredItemsCount","modifyMonitoredItemsCount","setMonitoringModeCount","setTriggeringCount","deleteMonitoredItemsCount","createSubscriptionCount","modifySubscriptionCount","setPublishingModeCount","publishCount","republishCount","transferSubscriptionsCount","deleteSubscriptionsCount","addNodesCount","addReferencesCount","deleteNodesCount","deleteReferencesCount","browseCount","browseNextCount","translateBrowsePathsToNodeIdsCount","queryFirstCount","queryNextCount","registerNodesCount","unregisterNodesCount","SessionSecurityDiagnosticsDataType_SessionSecurityDiagnosticsDataType","clientUserIdOfSession","clientUserIdHistory","authenticationMechanism","transportProtocol","clientCertificate","applicationurn_crypto","makeApplicationUrn","suffix","hostname_hash","subtle","digest","str2arraybuffer","arraybuffer2str","Promise","resolve","applicationUrn","CreateSessionRequest_CreateSessionRequest","requestedSessionTimeout","SignedSoftwareCertificate_SignedSoftwareCertificate","certificateData","decodeSignedSoftwareCertificate","CreateSessionResponse_CreateSessionResponse","revisedSessionTimeout","serverEndpoints","serverSoftwareCertificates","maxRequestMessageSize","ActivateSessionRequest_ActivateSessionRequest","clientSignature","clientSoftwareCertificates","userIdentityToken","userTokenSignature","ActivateSessionResponse_ActivateSessionResponse","CloseSessionRequest_CloseSessionRequest","CloseSessionResponse_CloseSessionResponse","CancelRequest_CancelRequest","CancelResponse_CancelResponse","cancelCount","UserIdentityToken_UserIdentityToken","AnonymousIdentityToken_AnonymousIdentityToken","UserNameIdentityToken_UserNameIdentityToken","password","encryptionAlgorithm","X509IdentityToken_X509IdentityToken","IssuedIdentityToken_IssuedIdentityToken","tokenData","opcua_client_crypto","opcua_client_AnonymousIdentityToken","opcua_client_CreateSessionRequest","opcua_client_CreateSessionResponse","opcua_client_ActivateSessionRequest","opcua_client_ActivateSessionResponse","opcua_client_CloseSessionRequest","opcua_client_ApplicationDescription","service_endpoints","opcua_client_EndpointDescription","opcua_client_UserNameIdentityToken","validateServerNonce","opcua_client_OPCUAClient","client_base","_closeSession","endpoint_must_exist","clientName","___sessionName_counter","findEndpoint","findEndpointForSecurity","__resolveEndPoint","_serverUri","client_session","__createSession_step2","_getApplicationUri","applicationDescription","Client","_nextSessionName","secure_channel","userIdentityInfo","isAnonymous","_userIdentityInfo","endpoint_desc","userTokenPolicy","findUserTokenPolicy","ANONYMOUS","createAnonymousIdentityToken","isUserNamePassword","USERNAME","createUserNameIdentityToken","_old_client","createUserIdentityToken","computeClientSignature","old_client","_activateSession","_removeSession","_addSession","_createSession","resumePublishEngine","_ask_for_subscription_republish","hasBeenClosed","new_session","suspend","_new_session","subscriptionsIds","getSubscriptionIds","transferSubscriptions","inner_func","the_error","need_disconnect","createSession","err1","err2","subscriptionParameters","innerFunc","withSession","endpoint_description","userTokenType","userIdentity","hasPropertyRefId","browsePathPropertyRequest","propertyName","data_model","readUAAnalogItem","analogItemData","engineeringUnitsRange","instrumentRange","valuePrecision","translateBrowsePath","browsePathResults","processProperty","browsePathIndex","readResult","perform_findServersRequest","discovery_server_endpointUrl","findServers"],"mappings":";CAAA,SAAAA,EAAAC,GACA,iBAAAC,SAAA,iBAAAC,OACAA,OAAAD,QAAAD,IACA,mBAAAG,eAAAC,IACAD,UAAAH,GACA,iBAAAC,QACAA,QAAA,QAAAD,IAEAD,EAAA,QAAAC,IARA,CASCK,OAAA,WACD,mBCTA,IAAAC,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAP,QAGA,IAAAC,EAAAI,EAAAE,IACAC,EAAAD,EACAE,GAAA,EACAT,YAUA,OANAU,EAAAH,GAAAI,KAAAV,EAAAD,QAAAC,IAAAD,QAAAM,GAGAL,EAAAQ,GAAA,EAGAR,EAAAD,QA0DA,OArDAM,EAAAM,EAAAF,EAGAJ,EAAAO,EAAAR,EAGAC,EAAAQ,EAAA,SAAAd,EAAAe,EAAAC,GACAV,EAAAW,EAAAjB,EAAAe,IACAG,OAAAC,eAAAnB,EAAAe,GAA0CK,YAAA,EAAAC,IAAAL,KAK1CV,EAAAgB,EAAA,SAAAtB,GACA,oBAAAuB,eAAAC,aACAN,OAAAC,eAAAnB,EAAAuB,OAAAC,aAAwDC,MAAA,WAExDP,OAAAC,eAAAnB,EAAA,cAAiDyB,OAAA,KAQjDnB,EAAAoB,EAAA,SAAAD,EAAAE,GAEA,GADA,EAAAA,IAAAF,EAAAnB,EAAAmB,IACA,EAAAE,EAAA,OAAAF,EACA,KAAAE,GAAA,iBAAAF,QAAAG,WAAA,OAAAH,EACA,IAAAI,EAAAX,OAAAY,OAAA,MAGA,GAFAxB,EAAAgB,EAAAO,GACAX,OAAAC,eAAAU,EAAA,WAAyCT,YAAA,EAAAK,UACzC,EAAAE,GAAA,iBAAAF,EAAA,QAAAM,KAAAN,EAAAnB,EAAAQ,EAAAe,EAAAE,EAAA,SAAAA,GAAgH,OAAAN,EAAAM,IAAqBC,KAAA,KAAAD,IACrI,OAAAF,GAIAvB,EAAA2B,EAAA,SAAAhC,GACA,IAAAe,EAAAf,KAAA2B,WACA,WAA2B,OAAA3B,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAK,EAAAQ,EAAAE,EAAA,IAAAA,GACAA,GAIAV,EAAAW,EAAA,SAAAiB,EAAAC,GAAsD,OAAAjB,OAAAkB,UAAAC,eAAA1B,KAAAuB,EAAAC,IAGtD7B,EAAAgC,EAAA,GAIAhC,IAAAiC,EAAA,oCC9EM,SAAAC,EAAyBf,GAC3B,MAAwB,kBAAVA,EAGZ,SAAAgB,IACF,OAAQC,KAAKC,SAAW,GAGtB,SAAAC,EAAwBnB,EAAiBoB,GAE3CA,EAAOC,SAASrB,EAAQ,EAAI,GAE1B,SAAAsB,EAAwBF,GAC1B,QAAOA,EAAOG,WAIlB,IAAIC,EAAQ,2BAEN,SAAAC,EAAwBzB,GAC1B,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,GAGHwB,EAAMG,KAAK3B,MAAYA,aCPnC,SAAA4B,EAAsBC,EAAcC,GAChC,OAAOb,KAAKc,MAAMd,KAAKC,UAAYY,EAAMD,EAAM,IAAMA,EAGnD,SAAAG,EAAwBhC,GAC1B,QAAKiC,OAAOC,SAASlC,KAGdA,GAAS,GAAKA,GAAS,OAG5B,SAAAmC,IACF,OAAOP,EAAa,EAAG,OAGrB,SAAAQ,EAAuBpC,EAAgBoB,GACzCA,EAAOiB,UAAUrC,GAGf,SAAAsC,EAAuBlB,GACzB,OAAOA,EAAOmB,YAGZ,SAAAC,EAAuBxC,GACzB,QAAKiC,OAAOC,SAASlC,KAGdA,IAAU,OAAUA,GAAS,OAGlC,SAAAyC,IACF,OAAOb,GAAc,MAAQ,OAE3B,SAAAc,EAAsB1C,EAAgBoB,GACxC3B,OAAAkD,EAAA,EAAAlD,CAAOwC,OAAOC,SAASlC,IACvBoB,EAAOwB,SAAS5C,GAEd,SAAA6C,EAAsBzB,GACxB,OAAOA,EAAO0B,WAGZ,SAAAC,EAAuB/C,GACzB,QAAKiC,OAAOC,SAASlC,KAGdA,IAAU,YAAcA,GAAS,YAEtC,SAAAgD,IACF,OAAOpB,GAAc,WAAY,YAE/B,SAAAqB,EAAsBjD,EAAgBoB,GACxC3B,OAAAkD,EAAA,EAAAlD,CAAOwC,OAAOC,SAASlC,IACvBoB,EAAO8B,SAASlD,GAEd,SAAAmD,EAAsB/B,GACxB,OAAOA,EAAOgC,WAGZ,SAAAC,EAAwBrD,GAC1B,QAAKiC,OAAOC,SAASlC,KAGdA,GAAS,GAAKA,GAAS,YAG5B,SAAAsD,IACF,OAAO1B,EAAa,EAAG,YAErB,SAAA2B,EAAuBvD,EAAgBoB,GACzCA,EAAOoC,UAAUxD,GAEf,SAAAyD,EAAuBrC,GACzB,OAAOA,EAAOsC,YAGZ,SAAAC,EAAsB3D,GACxB,QAAKiC,OAAOC,SAASlC,KAGdA,IAAU,KAAQA,GAAS,KAGhC,SAAA4D,IACF,OAAOhC,GAAc,IAAM,KAEzB,SAAAiC,EAAqB7D,EAAgBoB,GACvC3B,OAAAkD,EAAA,EAAAlD,CAAOkE,EAAY3D,IACnBoB,EAAO0C,QAAQ9D,GAEb,SAAA+D,EAAqB3C,GACvB,OAAOA,EAAO4C,UAIX,IAAIC,EAAeN,EACfO,EAAcN,EACdO,EAAcN,EACdO,EAAcL,EAGnB,SAAAM,EAAuBrE,GACzB,QAAKiC,OAAOC,SAASlC,KAGdA,IAAU,GAAQA,GAAS,KAEhC,SAAAsE,IACF,OAAO1C,EAAa,EAAM,KAExB,SAAA2C,EAAsBvE,EAAgBoB,GACxCA,EAAOC,SAASrB,GAEd,SAAAwE,EAAsBpD,GACxB,OAAOA,EAAOG,WAGX,IAAIkD,EAAcJ,EACdK,EAAaJ,EACbK,EAAaJ,EACbK,EAAaJ,EAGlB,SAAAK,EAAwB7E,GAC1B,OAAOA,aAAiB8E,OAA0B,IAAjB9E,EAAM+E,OAErC,SAAAC,IACF,OAAQpD,EAAa,EAAG,YAAaA,EAAa,EAAG,aAEnD,SAAAqD,EAAuBjF,EAAOoB,GAE5B,iBAAoBpB,IACpBA,EAAQkF,EAAalF,IAEzBoB,EAAOoC,UAAUxD,EAAM,IACvBoB,EAAOoC,UAAUxD,EAAM,IAGrB,SAAAmF,EAAuB/D,GACzB,IAAIgE,EAAMhE,EAAOsC,YAEjB,OAAO2B,EADIjE,EAAOsC,YACU0B,GAE1B,SAAAC,EAAyBC,EAAeF,GAG1C,OAFA3F,OAAAkD,EAAA,EAAAlD,CAAO2F,GAAO,GAAKA,GAAO,YAC1B3F,OAAAkD,EAAA,EAAAlD,CAAO6F,GAAQ,GAAKA,GAAQ,aACpBA,EAAMF,GAGZ,SAAAF,EAAuBlF,GAEzB,IAAIsF,EAAWC,EACf,OAAc,OAAVvF,QAA4B0B,IAAV1B,EACXA,EAEPA,aAAiB8E,OACjBrF,OAAAkD,EAAA,EAAAlD,CAAO,iBAAoBO,EAAM,IACjCP,OAAAkD,EAAA,EAAAlD,CAAO,iBAAoBO,EAAM,IAC1BA,GAEU,iBAAVA,GACPuF,EAAIvF,EAAMwF,MAAM,KAGTH,EAFPC,EAAOG,SAASF,EAAE,GAAI,IAChBE,SAASF,EAAE,GAAI,MAGrBvF,EAAQ,WAMDqF,EAFPC,EAAOrE,KAAKc,MAAM/B,EAAQ,YACpBA,EAAe,WAAPsF,GAGXD,EAAe,EAAGrF,GAGvB,SAAA0F,IAEF,OAAQ9D,EAAa,EAAG,YAAaA,EAAa,EAAG,aAWnD,SAAA+D,EAAqB3F,GACvB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJyF,SAASzF,EAAO,IAErB,SAAA4F,EAAsB5F,GACxB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJyF,SAASzF,EAAO,IAErB,SAAA6F,EAAqB7F,GACvB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJyF,SAASzF,EAAO,IAErB,SAAA8F,EAAsB9F,GACxB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJyF,SAASzF,EAAO,IAGrB,SAAA+F,GAAuB/F,GACzB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJyF,SAASzF,EAAO,IAErB,SAAAgG,GAAsBhG,GACxB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJyF,SAASzF,EAAO,IAErB,SAAAiG,GAAuBjG,GACzB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJyF,SAASzF,EAAO,IAErB,SAAAkG,GAAsBlG,GACxB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJyF,SAASzF,EAAO,IC7P3B,IAAImG,IAAY,IAAOlF,KAAKmF,IAAI,GAAI,IAChCC,GAAW,IAAOpF,KAAKmF,IAAI,GAAI,IAanC,SAAAE,GAAyBzE,EAAcC,GACnC,OAAOb,KAAKC,UAAYY,EAAMD,GAAQA,EAGpC,SAAA0E,GAAuBvG,GACzB,QAAKiC,OAAOC,SAASlC,KAGdA,EAAQmG,IAAYnG,EAAQqG,IA0BvC,IAAIxG,GAAI,IAAI2G,aAAa,GAOnB,SAAAC,KACF,OAPJ,SAAsBC,GAGlB,OAFA7G,GAAE,GAAK6G,EACO7G,GAAE,GAKT8G,CAAaL,IAAiB,IAAM,MAGzC,SAAAM,GAAsB5G,EAAOoB,GAC/BA,EAAOyF,WAAW7G,GAGhB,SAAA8G,GAAsB1F,GAExB,OADYA,EAAO2F,aAKjB,SAAAC,GAAwBhH,GAC1B,QAAKiC,OAAOC,SAASlC,GAMnB,SAAAiH,KACF,OAAOX,IAAiB,IAAS,KAG/B,SAAAY,GAAuBlH,EAAgBoB,GACzCA,EAAO+F,WAAWnH,GAGhB,SAAAoH,GAAuBhG,GACzB,OAAOA,EAAOiG,aAGZ,SAAAC,GAAsBtH,GACxB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJuH,WAAWvH,GAEhB,SAAAwH,GAAuBxH,GACzB,OAAc,OAAVA,QAA4B0B,IAAV1B,EACXA,EAEJuH,WAAWvH,GC5FhB,SAAAyH,GAAuB5F,EAAcC,GAEvC,OAAOb,KAAKc,MAAMd,KAAKC,UAAYY,EAAMD,IAAQA,ECR/C,SAAA6F,GAAwB1H,GAC1B,MAAwB,iBAAVA,EAEZ,SAAA2H,KAGF,IAFA,IAAIC,EAAQH,GAAa,EAAG,IACxBI,KACK9I,EAAI,EAAGA,EAAI6I,EAAO7I,IACvB8I,EAAKC,KAAKC,OAAOC,aAAa,GAAKP,GAAa,EAAG,MAEvD,OAAOI,EAAKI,KAAK,IAGf,SAAAC,GAAuB9G,GACzB,OAAOA,EAAO+G,aAEZ,SAAAC,GAAuBpI,EAAgBoB,GACzCA,EAAOiH,YAAYrI,GCbjB,SAAAsI,GAA0BtI,GAC5B,OAAOA,aAAiBuI,KAW5B,SAAAC,GAAsB3G,EAAKC,GAEvB,OAAOb,KAAKc,MAAMd,KAAKC,UAAYY,EAAMD,IAAQA,EAI/C,SAAA4G,KACF,IAAI5I,EAAI2I,GACR,OAAO,IAAID,KACT,KAAO1I,EAAE,EAAG,KAAMA,EAAE,EAAG,IAAKA,EAAE,EAAG,IACjCA,EAAE,EAAG,IAAKA,EAAE,EAAG,IAAKA,EAAE,EAAG,IAAKA,EAAE,EAAG,MAGnC,SAAA6I,GAAyBC,EAAavH,GAExC,IAAKuH,EAGD,OAFAvH,EAAOoC,UAAU,QACjBpC,EAAOoC,UAAU,GAGrB,KAAMmF,aAAgBJ,MAClB,MAAM,IAAIK,MAAM,uCAAwC,EAAS,IAAYD,EAAME,YAEvFpJ,OAAAkD,EAAA,EAAAlD,CAAOkJ,aAAgBJ,MACvB,IAAIO,EAAKC,GAAmCJ,GACxCK,EAAKF,EAAG,GACRG,EAAKH,EAAG,GACZ1H,EAAOoC,UAAUyF,GACjB7H,EAAOoC,UAAUwF,GAIf,SAAAE,GAAyB9H,GAC3B,IAAI6H,EAAK7H,EAAOsC,YAEhB,OAAOyF,GADE/H,EAAOsC,YAC8BuF,GAI5C,SAAAG,GAAyBpJ,GAC3B,OAAO,IAAIuI,KAAKvI,GAGb,IAAIqJ,GAAqB,WAExB,IACIC,EADU,IAAIf,KAAKA,KAAKgB,IAAI,KAAM,EAAG,EAAG,EAAG,EAAG,IAC9BC,UAKhBC,EAAS,OAHc,IAAIlB,KAAKA,KAAKgB,IAAI,KAAM,EAAG,EAAG,EAAG,EAAG,IAC3BC,UAEqBF,GAKrDI,GAAiCJ,EAHvB,IAAIf,KAAKA,KAAKgB,IAAI,KAAM,EAAG,EAAG,EAAG,EAAG,IAC9BC,UAMpB,OAFA/J,OAAAkD,EAAA,EAAAlD,CAAkB,MAAXgK,GACPhK,OAAAkD,EAAA,EAAAlD,CAAyC,cAAlCiK,IACCA,EAA+BD,GAjBf,GAsBxBE,GAASN,GAAmB,GAC5BO,GAASP,GAAmB,GAE5BQ,GAAI,WACJC,GAAIF,GAASC,GACbE,GAAIJ,GAASG,GACbE,GAAK/I,KAAKc,MAAM4H,GAASE,IACzBI,GAAKN,GAASE,GACdK,GAAKN,GAASC,GACdM,GAAiBN,GAAID,GAoCvB,SAAAb,GAA6CJ,GAE3C,GADAlJ,OAAAkD,EAAA,EAAAlD,CAAOkJ,aAAgBJ,MACbI,EAAMyB,SACZ,OAAazB,EAAMyB,SAMvB,IAAInK,EAAI0I,EAAKa,UAuBTa,EAAUpJ,KAAKc,MAAM9B,EAAI6J,GAAIC,IAC7BO,GAAcrK,EAAI4J,GAAII,IAAOC,GAAOL,GAEpCO,GAAYC,EADhBC,GAAYA,EAAUT,IAAMA,IAO5B,OALApK,OAAOC,eAAeiJ,EAAM,YACxB/I,IAAK,WACD,OAAOwK,GACRzK,YAAY,IAEZyK,EAGT,SAAAjB,GAA6C7D,EAAMF,GAUjD,IAAImF,GAAUtJ,KAAKc,MAAMuD,EAAOsE,IAAUI,IAAOH,GAAI5I,KAAKc,MAAQuD,EAAOsE,GAAWO,GAAe/E,EAAMwE,IAAUK,GAC/GtB,EAAO,IAAIJ,KAAKgC,GAOpB,OALA9K,OAAOC,eAAeiJ,EAAM,YACxB/I,IAAK,WACD,OAAQ0F,EAAMF,IACfzF,YAAY,IAEZgJ,EAGX,IAAI6B,GAAgB,KAChBC,GAAmB,EAErB,SAAAC,KACE,IAAIC,EAAK,IAAIpC,KAOb,OANIiC,IAAkBG,EAAInB,YAAcgB,GAAchB,UAClDiB,IAAoC,GAEpCA,GAAmB,EACnBD,GAAgBG,IAGhBC,UAAWJ,GACXK,YAAaJ,IAInB,SAAAK,GAAsBF,EAAUC,GAC9B,OAAID,GAEIA,UAAWA,EACXC,YAAaA,GAGVH,KCvNnB,SAAAK,GAAsBlJ,EAAcC,GAChC,OAAOb,KAAKc,MAAMd,KAAKC,UAAYY,EAAMD,EAAM,IAAMA,EAKnD,SAAAmJ,GAA4BhL,GAC9B,OAAiB,OAAVA,GAAkBA,aAAiBiL,YAExC,SAAAC,GAA2BlL,EAAOmL,GACpCA,EAAMA,GAAOJ,GAAa,EAAG,KAE7B,IADA,IAAIK,EAAI,IAAIC,WAAWF,GACdpM,EAAI,EAAGA,EAAIoM,EAAKpM,IACrBqM,EAAErM,GAAKgM,GAAa,EAAG,KAE3B,OAAOK,EAEL,SAAAE,GAA2BC,EAAyBnK,GACtDA,EAAOoK,gBAAgBD,GAErB,SAAAE,GAA2BrK,GAC7B,OAAOA,EAAOsK,iBAGZ,SAAAC,GAA2B3L,GAE7B,GAAI8E,MAAM8G,QAAQ5L,GACd,OAAO,IAAIqL,WAAWrL,GAE1B,GAAqB,iBAAVA,EAAoB,CAC3B,IAAI6L,EAAMlN,OAAOmN,KAAK9L,GAClB+L,EAAO,IAAIV,WAAWQ,EAAI9G,QAC9B,IAAI,IAAIhG,EAAE,EAAEiN,EAAEH,EAAI9G,OAAOhG,EAAEiN,IAAIjN,EAC3BgN,EAAIhN,GAAG8M,EAAII,WAAWlN,GAE1B,OAAOgN,EAEX,OAAO/L,MCtBNkM,qCAWL,SAAAC,GAAkBnM,GAEd,OAAOA,GAAS,GAAKA,GAAS,IAOlC,SAAAoM,GAA6BC,GAEzB,IAAKA,EACD,OAAO,EAEX5M,OAAAkD,EAAA,EAAAlD,CAAO4M,EAAOzL,eAAe,mBAE7B,IAAI0L,EAAe,EAqCnB,OAnCID,EAAOE,gBAAiBC,GAAA,EAAWC,QAW/BH,GATAH,GAASE,EAAOrM,QAAYqM,EAAOK,WAAgCL,EAAQM,cAAkCN,EAAQO,aAhBjI,SAAmB5M,GAEf,OAAOA,GAAS,GAAKA,GAAS,MAkBf6M,CAAUR,EAAOrM,SAAUmM,GAASE,EAAOK,YAAgCL,EAAQM,cAAkCN,EAAQO,YAKrHnN,OAAAqN,GAAA,EAAArN,CAAS6M,EAAcJ,GAAmBa,SAH1CtN,OAAAqN,GAAA,EAAArN,CAAS6M,EAAcJ,GAAmBc,WAJ1CvN,OAAAqN,GAAA,EAAArN,CAAS6M,EAAcJ,GAAmBe,UAUtDZ,EAAOE,gBAAkBC,GAAA,EAAWU,OAE3CZ,EAAe7M,OAAAqN,GAAA,EAAArN,CAAS6M,EAAcJ,GAAmBnE,QAElDsE,EAAOE,gBAAkBC,GAAA,EAAWW,WAC3Cb,EAAe7M,OAAAqN,GAAA,EAAArN,CAAS6M,EAAcJ,GAAmBkB,YAElDf,EAAOE,gBAAkBC,GAAA,EAAWa,OAC3Cf,EAAe7M,OAAAqN,GAAA,EAAArN,CAAS6M,EAAcJ,GAAmBoB,OAGzDjB,aAAkBkB,GAAA,IACdlB,EAAOM,eACPL,EAAe7M,OAAAqN,GAAA,EAAArN,CAAS6M,EAAcJ,GAAmBsB,mBAGzDnB,EAAOO,cACPN,EAAe7M,OAAAqN,GAAA,EAAArN,CAAS6M,EAAcJ,GAAmBuB,mBAI1DnB,EAIL,SAAAoB,GAAwBrB,GAC1B,OAAe,OAAXA,QAA8B,IAAXA,GAGhBA,EAAOzL,eAAe,kBAG3B,SAAA+M,KAEF,IAAI3N,EAAQyH,GAAa,EAAG,SACxBiF,EAAYjF,GAAa,EAAG,GAChC,OAAOhI,OAAA+M,GAAA,EAAA/M,CAAWO,EAAO0M,GAI7B,SAAAkB,GAAuBC,EAAwBxB,EAAQjL,GAOnD,OALAA,EAAOC,SAASwM,GAGhBA,GAAiB,IAGb,KAAK3B,GAAmBe,SACpB7L,EAAOC,SAASgL,EAASA,EAAOrM,MAAQ,GACxC,MACJ,KAAKkM,GAAmBc,UACpB5L,EAAOC,SAASgL,EAAOK,WACvBtL,EAAOiB,UAAUgK,EAAOrM,OACxB,MACJ,KAAKkM,GAAmBa,QACpB3L,EAAOiB,UAAUgK,EAAOK,WACxBtL,EAAOoC,UAAU6I,EAAOrM,OACxB,MACJ,KAAKkM,GAAmBnE,OACpB3G,EAAOiB,UAAUgK,EAAOK,WACxBtE,GAAaiE,EAAOrM,MAAOoB,GAC3B,MACJ,KAAK8K,GAAmBkB,WACpBhM,EAAOiB,UAAUgK,EAAOK,WACxBpB,GAAiBe,EAAOrM,MAAOoB,GAC/B,MACJ,QACI3B,OAAAkD,EAAA,EAAAlD,CAAOoO,IAAkB3B,GAAmBoB,MAC5ClM,EAAOiB,UAAUgK,EAAOK,WACxBjN,OAAAqO,GAAA,EAAArO,CAAW4M,EAAOrM,MAAOoB,IAM/B,SAAA2M,GAAuB1B,EAAiBjL,GAE1C,IAAIyM,EAAgBzB,GAAoBC,GAGxCuB,GADAC,GAAiB,GACYxB,EAAQjL,GAInC,SAAA4M,GAA+BC,EAAiC7M,GAClE3B,OAAAkD,EAAA,EAAAlD,CAAOwO,EAAe,6DACtB,IAAI3B,EAAeF,GAAoB6B,GACvCL,GAActB,EAAc2B,EAAgB7M,GACxC3B,OAAAqN,GAAA,EAAArN,CAAW6M,EAAcJ,GAAmBsB,mBAC5CpF,GAAa6F,EAAetB,aAAcvL,GAE1C3B,OAAAqN,GAAA,EAAArN,CAAW6M,EAAcJ,GAAmBuB,kBAC5ClK,EAAa0K,EAAerB,YAAaxL,IAxIjD,SAAK8K,GACDA,IAAA,uBACAA,IAAA,yBACAA,IAAA,qBACAA,IAAA,mBACAA,IAAA,eACAA,IAAA,2BACAA,IAAA,yCACAA,IAAA,sCARJ,CAAKA,aA4IL,IAAIgC,GAAgB,SAAUL,EAAezM,GAEzC,IAAIpB,EAAO0M,EAAWyB,EAItB,OAFAN,GAAiB,IAGb,KAAK3B,GAAmBe,SACpBjN,EAAQoB,EAAOG,WACf4M,EAAa3B,GAAA,EAAWC,QACxB,MACJ,KAAKP,GAAmBc,UACpBN,EAAYtL,EAAOG,WACnBvB,EAAQoB,EAAOmB,YACf4L,EAAa3B,GAAA,EAAWC,QACxB,MACJ,KAAKP,GAAmBa,QACpBL,EAAYtL,EAAOmB,YACnBvC,EAAQoB,EAAOsC,YACfyK,EAAa3B,GAAA,EAAWC,QACxB,MACJ,KAAKP,GAAmBnE,OACpB2E,EAAYtL,EAAOmB,YACnBvC,EAAQkI,GAAa9G,GACrB+M,EAAa3B,GAAA,EAAWU,OACxB,MACJ,KAAKhB,GAAmBkB,WACpBV,EAAYtL,EAAOmB,YACnBvC,EAAQyL,GAAiBrK,GACzB+M,EAAa3B,GAAA,EAAWW,WACxB,MACJ,QACI,GAAIU,IAAkB3B,GAAmBoB,KAGrC,MADAc,QAAQC,IAAI,oBAAsBR,EAAchF,SAAS,IAAKgF,EAA+B,GAAhBA,GACvE,IAAIjF,MAAM,oBAAsBiF,EAAchF,SAAS,KAEjE6D,EAAYtL,EAAOmB,YACnBvC,EAAQP,OAAAqO,GAAA,EAAArO,CAAW2B,GACnB+M,EAAa3B,GAAA,EAAWa,KACxB5N,OAAAkD,EAAA,EAAAlD,CAAOA,OAAAqO,GAAA,EAAArO,CAAYO,IAG3B,OAAO,IAAIuN,GAAA,EAAeY,EAAYnO,EAAO0M,IAG3C,SAAA4B,GAAuBlN,GACzB,IAAIyM,EAAgBzM,EAAOG,WAC3B,OAAO2M,GAAcL,EAAezM,GAIlC,SAAAmN,GAA+BnN,GAEjC,IAAIyM,EAAgBzM,EAAOG,WACvB0M,EAAiBC,GAAcL,EAAezM,GAClD6M,EAAetB,aAAe,KAC9BsB,EAAerB,YAAc,EAEzBnN,OAAAqN,GAAA,EAAArN,CAAWoO,EAAe3B,GAAmBsB,oBAC7CS,EAAetB,aAAezE,GAAa9G,IAE3C3B,OAAAqN,GAAA,EAAArN,CAAWoO,EAAe3B,GAAmBuB,mBAC7CQ,EAAerB,YAAcnJ,EAAarC,IAE9C,IAAIoN,EAAIP,EACR,OAAO,IAAIV,GAAA,EAAgBiB,EAAEjC,eAAgBiC,EAAExO,MAAMwO,EAAE9B,UAAW8B,EAAE7B,aAAc6B,EAAE5B,yBCxNpF6B,IAcJC,iBAAkB,MAYlBC,gBAAiB,MAWjBC,kBAAoB,KAYpBC,SAAoB,IACpBC,UAAoB,IACpBC,cAAoB,IAKpBC,SAAoB,IAiBpBC,oBAAuB,EACvBC,sBAAuB,EAEvBC,iBAAuB,EACvBC,mBAAuB,EACvBC,oBAAuB,IAYvBC,GAAA,EAAiB,KACbhQ,KAAM,MACNU,MAAO,WACPuP,YAAa,qDAGjBD,GAAA,EAAuB,WACnBhQ,KAAM,YACNU,MAAO,WACPuP,YAAa,iEAsBXC,GAEFxP,YACI,OAAOyP,KAAKC,OAGhBH,kBACI,OAAOE,KAAKE,aAGhBrQ,WACI,OAAOmQ,KAAKG,MAEpBC,YAAYC,GACRL,KAAKC,OAASI,EAAQ9P,MACtByP,KAAKE,aAAeG,EAAQP,YAC5BE,KAAKG,MAAQE,EAAQxQ,KASlBuQ,WACH,OAAOJ,KAAKnQ,KAAO,QAAU,OAASmQ,KAAKzP,MAAM6I,SAAS,KAAKkH,QAAQ,GAAK,IAGzEF,SAASG,GACZ,OAAQP,KAAKzP,MAASgQ,KAAYA,EAGtCC,qBACI,OAAOR,KAAKS,SAASzB,GAAoBO,UAE7CmB,4BACI,OAAOV,KAAKS,SAASzB,GAAoBE,iBAE7CyB,6BACI,OAAOX,KAAKS,SAASzB,GAAoBC,kBAGtCmB,UACH,OAAOJ,KAAKzP,aAIhBqQ,WAAiCb,GAC7BK,YAAYC,GACRQ,MAAMR,IAKP,IAAIS,GAAmB,SAAUC,EAAYpP,GAChD3B,OAAAkD,EAAA,EAAAlD,CAAO+Q,aAAsBhB,IAAcgB,aAAsBH,IACjEjP,EAAOoC,UAAUgN,EAAWxQ,QAOzB,IAAIyQ,GAAmB,SAAUrP,GACpC,IAAIsP,EAAOtP,EAAOsC,YAEdiN,GAAkC,WAARD,KAAsB,EAChDE,EAAmB,MAAPF,EAKZG,EAAKC,GAAwBH,GAKjC,GAJIE,IACAA,EAAKvB,GAAA,EAAiB,IACtBlB,QAAQ2C,KAAK,0CAA2CJ,EAAuB9H,SAAS,MAExF+H,EAAW,CACX,IAAII,EAAM,IAAIC,IAAsBC,MAAOL,IAC3CG,EAAIG,IAAIP,GACRC,EAAIG,EAER,OAAOH,GAIPC,MACJ,IAAK,IAAIM,KAAY9B,GAAA,EAAa,CAC7B,IAAI+B,EAAM,IAAIhB,GAAmBf,GAAA,EAAY8B,IAC7CN,GAAwBO,EAAIrR,OAASqR,EACrC/B,GAAA,EAAY+B,EAAI/R,MAAQ+R,QAS7BJ,WAAmCzB,GAInCK,YAAYC,GACRQ,MAAMR,GACNL,KAAKyB,MAAQpB,EAAQoB,MACrBzB,KAAK6B,WAAa,EACd7B,KAAKyB,iBAAiBD,KACtBxB,KAAK6B,WAAa7B,KAAKyB,MAAMI,WAC7B7B,KAAKyB,MAAQzB,KAAKyB,MAAMA,OAIhCrB,gBACI,IAAIhE,KACJ,IAAI,IAAIvL,KAAOmO,GAAqB,CAChC,IAAIzO,EAAQyO,GAAoBnO,IAC3BmP,KAAK6B,WAAatR,KAAYA,GAC/B6L,EAAI/D,KAAKxH,GAIjB,OAAmB,IAAfuL,EAAI9G,OACG,GAEJ,IAAM8G,EAAI5D,KAAK,KAG1BjI,YACI,OAAOyP,KAAKyB,MAAMlR,MAAQyP,KAAK6B,WAGnChS,WACI,OAAOmQ,KAAKyB,MAAM5R,KAAOmQ,KAAK8B,gBAElChC,kBACI,OAAOE,KAAKyB,MAAM3B,YAItBM,UACI,OAAOJ,KAAKyB,MAAMlR,MAGtB6P,IAAI2B,GAEA,GAAmB,iBAARA,EAAkB,CACzB,IAAIC,EAAYD,EAAIhM,MAAM,OAC1B,GAAIiM,EAAU1M,OAAS,EAAG,CACtB,IAAK,IAAIhG,EAAI,EAAGA,EAAI0S,EAAU1M,OAAQhG,IAClC0Q,KAAK0B,IAAIM,EAAU1S,IAEvB,OAEJ,IAAIiS,EAAMvC,GAAoB+C,GAC9B,IAAKR,EACD,MAAM,IAAIpI,MAAM,0BAA2B4I,GAE/CA,EAAMR,EAEVvB,KAAK6B,WAAa7B,KAAK6B,WAAaE,EAGxC3B,MAAM2B,GAEF,GAAmB,iBAARA,EAAkB,CAEzB,IAAIC,EAAYD,EAAIhM,MAAM,OAC1B,GAAIiM,EAAU1M,OAAS,EAAG,CACtB,IAAK,IAAIhG,EAAI,EAAGA,EAAI0S,EAAU1M,OAAQhG,IAElCqP,QAAQC,IAAI,SAASoB,KAAK6B,WAAWzI,SAAS,KAC9C4G,KAAKiC,MAAMD,EAAU1S,IACrBqP,QAAQC,IAAI,SAASoB,KAAK6B,WAAWzI,SAAS,KAElD,OAEJ,IAAImI,EAAMvC,GAAoB+C,GAC9B,IAAKR,EACD,MAAM,IAAIpI,MAAM,0BAA2B4I,GAE/CA,EAAMR,EAEVvB,KAAK6B,WAAa7B,KAAK6B,YAAeE,IAAQ,GAmB5C,SAAAG,GAA2BnB,GAC7B,OAAIA,aAAsBhB,GACfgB,GAEX/Q,OAAAkD,EAAA,EAAAlD,CAAO+Q,EAAW5P,eAAe,SAC1B0O,GAAA,EAAYkB,EAAWlR,OC5U5B,SAAAsS,KAGF,OAAO,EDuTXtC,GAAA,EAA4B,eAAI,SAASkB,EAAWqB,GAChD,IAAIb,EAAM,IAAIC,IACVC,MAAOV,IAKX,OAHIqB,GACAb,EAAIG,IAAIU,GAELb,GAIX1B,GAAA,EAAiC,oBAAUA,GAAA,EAAawC,eAAexC,GAAA,EAAYyC,KAAK,gCC/TjF,IAAIC,GAAiB5J,GACjB6J,GAAiB/J,oCCAtBgK,IAIA,SAAAC,GAAwClE,GAC1C,OAAOxO,OAAAnB,GAAA,gBAAAmB,CAAgBwO,GA+BrB,SAAAmE,GAAgC3R,EAAQW,GAG1C,GAAKX,EAIE,CAIH,IAAKA,EAAO4R,sBAER,MADAjE,QAAQC,IAAI,6BAA8B5N,GACpC,IAAImI,MAAM,qDAGpB,GAAInI,EAAO4R,sBAAsBC,UAE7B,MADAlE,QAAQC,IAAI,6BAA8B5N,EAAO4R,sBAAsBxJ,YACjE,IAAID,MAAM,qDAGpB,GAAInJ,OAAAnB,GAAA,eAAAmB,CAAegB,EAAO4R,sBAAsBrS,OAE5C,MADAoO,QAAQC,IAAI,6BAA8B5N,EAAO4R,sBAAsBxJ,WAAYpI,EAAO8R,YAAYjT,MAChG,IAAIsJ,MAAM,iEAGpBmF,GAAatN,EAAO4R,sBAAuBjR,GAC3CA,EAAOC,SAAS,GAChBD,EAAOoC,UAAUgP,GAAA,EAAWC,gBAAgBhS,IAC5CA,EAAOiS,OAAOtR,QAzBd2M,GAAatO,OAAA+M,GAAA,EAAA/M,CAAW,GAAI2B,GAC5BA,EAAOC,SAAS,GA4BlB,SAAAsR,GAAgCvR,GAElC,IAAIiL,EAASiC,GAAalN,GACtBwR,EAAexR,EAAOG,WAE1B,GAAqB,IAAjBqR,EACA,OAAO,KAGX,IAAI7N,EAAS3D,EAAOsC,YAGpB,GAAqB,IAAjB2I,EAAOrM,OAAgC,IAAjB4S,EACtB,OAAO,KAGX,IAAInS,EAAS0R,GAA8B9F,GAG3C,OAAe,OAAX5L,GAEAW,EAAO2D,QAAUA,EACV,OAEXtE,EAAOoS,OAAOzR,GACPX,GAGXhB,OAAAnB,GAAA,oBAAAmB,EACIH,KAAM,kBACNoT,OAAQN,GACRS,OAAQF,GACRG,aAAc,WACV,OAAO,6vHClHfjU,EAAAQ,EAAA0T,EAAA,uBAAAlO,kCCCAhG,EAAAQ,EAAA0T,EAAA,sBAAApQ,IACA,IAAIqQ,GACApH,QAAS,SAAUqH,GACf,OAAOnO,MAAM8G,QAAQqH,IAEzBC,UAAW,SAAUC,GACjB,MAAsB,kBAARA,GAElBC,OAAQ,SAAUD,GACd,OAAe,OAARA,GAEXE,kBAAmB,SAAUF,GACzB,OAAc,MAAPA,GAEXG,SAAU,SAAUH,GAChB,MAAsB,iBAARA,GAElBI,SAAU,SAAUJ,GAChB,MAAsB,iBAARA,GAElBK,SAAU,SAAUL,GAChB,MAAsB,iBAARA,GAElBM,YAAa,SAAUN,GACnB,YAAe,IAARA,GAEXO,SAAU,SAAUC,GAChB,OAAOX,EAAKY,SAASD,IAAmC,oBAA5BX,EAAKa,eAAeF,IAEpDC,SAAU,SAAUT,GAChB,MAAsB,iBAARA,GAA4B,OAARA,GAEtCW,OAAQ,SAAUzU,GACd,OAAO2T,EAAKY,SAASvU,IAAiC,kBAA3B2T,EAAKa,eAAexU,IAEnD0U,QAAS,SAAUvF,GACf,OAAOwE,EAAKY,SAASpF,KACW,mBAA3BwE,EAAKa,eAAerF,IAA2BA,aAAa5F,QAErEoL,WAAY,SAAUb,GAClB,MAAsB,mBAARA,GAElBc,YAAa,SAAUd,GACnB,OAAe,OAARA,GACY,kBAARA,GACQ,iBAARA,GACQ,iBAARA,GACQ,iBAARA,QACQ,IAARA,GAEfU,eAAgB,SAAUrU,GACtB,OAAOC,OAAOkB,UAAUkI,SAAS3J,KAAKM,WAmBxC0U,UAA8BtL,MAMhCiH,YAAYC,GACRQ,QACAb,KAAKnQ,KAAO,iBACZmQ,KAAK0E,OAASrE,EAAQqE,OACtB1E,KAAK2E,SAAWtE,EAAQsE,SACxB3E,KAAK4E,SAAWvE,EAAQuE,SACpBvE,EAAQwE,SACR7E,KAAK6E,QAAUxE,EAAQwE,QACvB7E,KAAK8E,kBAAmB,IAExB9E,KAAK6E,QAqCjB,SAAoBE,GAChB,OAAOC,EAASC,KAAKC,UAAUH,EAAKL,OAAQS,GAAW,KAAO,IAC1DJ,EAAKH,SAAW,IAChBI,EAASC,KAAKC,UAAUH,EAAKJ,SAAUQ,GAAW,KAxC/BC,CAAWpF,MAC1BA,KAAK8E,kBAAmB,GAE5B,IAAIO,EAAqBhF,EAAQgF,oBAAsBC,EACvD,GAAUnM,MAAOoM,kBACPpM,MAAOoM,kBAAkBvF,KAAMqF,QAIrC,IACIrF,KAAKwF,OAAQ,IAAKrM,OAAOqM,MAAMpM,WACjC,MAAO2F,MAKrB,SAAAoG,EAAkBtU,EAAKN,GACnB,OAAIgT,EAAKS,YAAYzT,GACV,GAAKA,GAEZgT,EAAKM,SAAStT,KAAWkV,MAAMlV,IAAWkC,SAASlC,GAGnDgT,EAAKgB,WAAWhU,IAAUgT,EAAKU,SAAS1T,GACjCA,EAAM6I,WAEV7I,EALIA,EAAM6I,WAQrB,SAAA4L,EAAkB3T,EAAGN,GACjB,OAAIwS,EAAKO,SAASzS,GACPA,EAAEiE,OAASvE,EAAIM,EAAIA,EAAEqU,MAAM,EAAG3U,GAE9BM,EAqBf,SAAAiU,EAAcZ,EAAQC,EAAUE,EAASD,EAAUS,GAC/C,MAAM,IAAIZ,GACNI,QAASA,EACTH,OAAQA,EACRC,SAAUA,EACVC,SAAUA,EACVS,mBAAoBA,IAatB,SAAAnS,EAAiB3C,EAAWsU,GACzBtU,GAAO+U,EAAK/U,GAAO,EAAMsU,EAAS,KAAM3R,mHCvH3CyS,UAA8BC,EAAA,EAGhCxF,YAAYtD,EAA6BvM,EAAO0M,EAAqB,EAAGC,EAAwBC,GAC5F0D,MAAM/D,EAAevM,EAAM0M,GAC3B+C,KAAK9C,aAAeA,GAAgB,KACpC8C,KAAK7C,YAAcA,GAAe,EAOtCiD,WACA,IAAIhE,EAAMyE,MAAMzH,WAOhB,OANI4G,KAAK9C,eACLd,GAAO,iBAAmB4D,KAAK9C,cAE/B8C,KAAK7C,cACLf,GAAO,gBAAkB4D,KAAK7C,aAE3Bf,EASPgE,SACI,OAAOJ,KAAK5G,WAGhBgH,4BAA4B7P,GACxB,IAAIQ,EAAIf,OAAA4V,EAAA,EAAA5V,CAAaO,GACrB,OAAO,IAAIoV,EAAe5U,EAAE+L,eAAgB/L,EAAER,MAAOQ,EAAEkM,UAA2B,KAAqB,IAYzG,SAAA4I,EAA6BtV,EAAa0M,GAE5C,QAAchL,IAAV1B,QAAqC0B,IAAdgL,EACvB,OAAO,IAAI0I,EAAeC,EAAA,EAAW5I,QAAS,EAAG,EAAG,KAAM,GAE9D,IAAqBjM,EAGrB,GAAIR,aAAiBoV,EAGjB,OAAO,IAAIA,GADX5U,EAAIR,GACwBuM,eAAgB/L,EAAER,MAAOQ,EAAEkM,UAAWlM,EAAEmM,aAAcnM,EAAEoM,aAExF,GAAI5M,aAAiBqV,EAAA,EAGjB,OAAO,IAAID,GADX5U,EAAIR,GACwBuM,eAAgB/L,EAAER,MAAOQ,EAAEkM,UAVxC,KADD,GAclB,IAAI6I,EAAW9P,SAASzF,EAAO,IAC/B,IAAKiC,OAAOC,SAASqT,GACjB,MAAM,IAAI3M,MAAM,qCAAuC5I,GAG3D,OADA0M,EAAYA,GAAa,EAClB,IAAI0I,EAAeC,EAAA,EAAW5I,QAAS8I,EAAU7I,EAlBrC,KADD,6KCnFlB8I,KAEAC,KAEE,SAAAC,EAAqBC,GACvB,OAAOF,EAAkBE,GAgCvB,SAAAC,EAAyBC,GAE3B,OAAMA,GAAeA,EAAW7V,SAASwV,EAIlCA,EAAeK,EAAW7V,QAH7BoO,QAAQC,IAAI,4DAA6DwH,EAAWhN,YAC7E,MAKT,SAAAiN,EAAyBD,GAC3B,QAAKA,IACLpW,OAAAsW,EAAA,EAAAtW,CAAOoW,EAAWjV,eAAe,UAEJ,IAAzBiV,EAAWnJ,aACN8I,EAAeK,EAAW7V,QAGjC,SAAAgW,EAA0B/H,GAC5B,IAAIsE,EAAcqD,EAAe3H,GACjC,OAAKsE,EA7BH,SAA0BA,GAM5B,OAJA9S,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsB8S,GAItB,IAFeA,EAAYhS,KAAK0V,MAAM1D,EAAa2D,YA0BnDC,CAAgB5D,GADI,KAIzB,SAAA6D,EAAoCC,EAAoBC,EAAyBjK,GAKnF,GAzDE,SAA0BsJ,EAAoBpD,GAGhD,GAAImD,EAAWC,GAEX,MADAvH,QAAQC,IAAIqH,EAAWC,IACjB,IAAI/M,MAAM,uBAAyB+M,EAAY,uBAEzDF,EAAkBE,GAAapD,EA+C/BgE,CAAgBF,EAAWC,GAGvBjK,EAAOrM,SAASwV,EAChB,MAAM,IAAI5M,MAAM,UAAYyN,EAAY,YAAchK,EAAS,oCAAsCmJ,EAAenJ,EAAOrM,OAAOV,MAEtIgX,EAAkB3V,UAAU0R,sBAAwBhG,EACpDmJ,EAAenJ,EAAOrM,OAASsW,iICjF5B,IAAIE,GAAU,EAEf,SAAAC,KAAsBC,GACxBtI,QAAQC,IAAIqI,GAMhB,IAAIC,EAAU,SAAU3W,EAAO4W,EAAOC,GAGlC,IAFA,IAAI7X,EAAI4X,EAAQ5W,EAAM+E,OAClB+R,EAAM,KACD9X,GAAK,GACV8X,GAAOD,EACX,OAAOC,EAAM9W,GAGX,SAAA+W,EAAmBC,EAA2BrN,EAAS5E,GAEzD,IAAIkS,EAAO,IAAIC,SAASF,GACxBrN,EAASA,GAAU,EACnB5E,EAASA,GAAUiS,EAAYG,WAI/B,IAFA,IAAIC,EAAMT,EAAQ,SAAU,EAAG,KAAO,sDAClCU,EAAM,GACDtY,EAAI,EAAGA,EAAIgG,EAAQhG,GAAK,GAAI,CACjCsY,GAAOV,EAAQhN,EAAOd,SAAS,IAAIyO,cAAe,EAAG,KAAO,KAG5D,IAFA,IAAI9W,EAAIS,KAAKY,IAAI,GAAIkD,EAAS4E,GAC1B4N,EAAS,GACJvL,EAAI,EAAGA,EAAI,KAAMA,EACtB,GAAIA,EAAIxL,EAAG,CACP,IAAIR,EAAQiX,EAAK1V,SAASoI,GAC1B4N,GAAUvX,GAAS,GAAK+H,OAAOC,aAAahI,GAAS,IACrDqX,GAAOV,EAAQ3W,EAAM6I,SAAS,IAAIyO,cAAe,EAAG,KAAO,IAC3D3N,SAGA0N,GAAO,MACPE,GAAU,IAGlBF,GAAO,IAAME,EAAS,KAG1B,OADAH,GAAOC,qECzCCG,kBAAZ,SAAYA,GACRA,IAAA,eACAA,IAAA,qBACAA,IAAA,iBACAA,IAAA,eACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,iBACAA,IAAA,mBACAA,IAAA,kBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,wBACAA,IAAA,gBACAA,IAAA,4BACAA,IAAA,4BACAA,IAAA,oBACAA,IAAA,oCACAA,IAAA,4BACAA,IAAA,kCACAA,IAAA,kCACAA,IAAA,sCACAA,IAAA,0BACAA,IAAA,sBACAA,IAAA,oCA1BJ,CAAYA,WA6BZC,EAAA,oBAA8B,WAAWD,EAASE,EAAA,GAAYA,EAAA,odCZxDC,EASL9H,YAAaC,GACZA,EAAUA,MACVL,KAAKmI,oBAAsB9H,EAA2B,oBAAIA,EAAQ8H,oBAAoB,KACtFnI,KAAK7E,UAAYkF,EAAiB,UAAIA,EAAQlF,UAAU,KACxD6E,KAAKoI,cAAgB/H,EAAqB,cAAIA,EAAQ+H,cAAc,KACpEpI,KAAKqI,kBAAoBhI,EAAyB,kBAAIA,EAAQgI,kBAAkB,KAChFrI,KAAKsI,aAAejI,EAAoB,aAAIA,EAAQiI,aAAa,KACjEtI,KAAKuI,YAAclI,EAAmB,YAAIA,EAAQkI,YAAY,KAC9DvI,KAAKwI,iBAAmBnI,EAAwB,iBAAIA,EAAQmI,iBAAiB,KAK9EpI,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKmI,oBAAoBR,GACzCc,EAAA,GAAkBzI,KAAK7E,UAAUwM,GACjCc,EAAA,GAAgBzI,KAAKoI,cAAcT,GACnCc,EAAA,GAAgBzI,KAAKqI,kBAAkBV,GACvCc,EAAA,GAAgBzI,KAAKsI,aAAaX,GAClCc,EAAA,GAAgBzI,KAAKuI,YAAYZ,GACjCc,EAAA,GAAyBzI,KAAKwI,iBAAiBb,GAKhDvH,OAAQsI,GACP1I,KAAKmI,oBAAsBM,EAAA,EAAgBC,GAC3C1I,KAAK7E,UAAYsN,EAAA,EAAkBC,GACnC1I,KAAKoI,cAAgBK,EAAA,EAAgBC,GACrC1I,KAAKqI,kBAAoBI,EAAA,EAAgBC,GACzC1I,KAAKsI,aAAeG,EAAA,EAAgBC,GACpC1I,KAAKuI,YAAcE,EAAA,EAAgBC,GACnC1I,KAAKwI,iBAAmBC,EAAA,EAAyBC,GAKlDtI,MAAOuI,GAWN,OAVIA,IACHA,EAAS,IAAIT,GAEdS,EAAOR,oBAAsBnI,KAAKmI,oBAClCQ,EAAOxN,UAAY6E,KAAK7E,UACxBwN,EAAOP,cAAgBpI,KAAKoI,cAC5BO,EAAON,kBAAoBrI,KAAKqI,kBAChCM,EAAOL,aAAetI,KAAKsI,aAC3BK,EAAOJ,YAAcvI,KAAKuI,YAC1BI,EAAOH,iBAAmBxI,KAAKwI,iBACxBG,GAgBT3Y,OAAA4Y,EAAA,EAAA5Y,CAA0B,gBAAgBkY,EAAelY,OAAA6Y,EAAA,EAAA7Y,CAAmB,IAAI,yGCzE1E8Y,EAQL1I,YAAaC,GACZA,EAAUA,MACVL,KAAK7E,UAAYkF,EAAiB,UAAIA,EAAQlF,UAAU,KACxD6E,KAAKoI,cAAgB/H,EAAqB,cAAIA,EAAQ+H,cAAc,KACpEpI,KAAK+I,cAAgB1I,EAAqB,cAAIA,EAAQ0I,cAAc,KACpE/I,KAAKgJ,mBAAqB3I,EAA0B,mBAAIA,EAAQ2I,mBAAmB,IAAIC,EAAA,EACvFjJ,KAAKkJ,YAAc7I,EAAmB,YAAIA,EAAQ6I,eAClDlJ,KAAKwI,iBAAmBnI,EAAwB,iBAAIA,EAAQmI,iBAAiB,KAK9EpI,OAAQuH,GACPc,EAAA,GAAkBzI,KAAK7E,UAAUwM,GACjCc,EAAA,GAAgBzI,KAAKoI,cAAcT,GACnCc,EAAA,GAAoBzI,KAAK+I,cAAcpB,GACvC3H,KAAKgJ,mBAAmB/F,OAAO0E,GAC/Bc,EAAA,EAAezI,KAAKkJ,YAAYvB,EAAIc,EAAA,IACpCA,EAAA,GAAyBzI,KAAKwI,iBAAiBb,GAKhDvH,OAAQsI,GACP1I,KAAK7E,UAAYsN,EAAA,EAAkBC,GACnC1I,KAAKoI,cAAgBK,EAAA,EAAgBC,GACrC1I,KAAK+I,cAAgBN,EAAA,EAAoBC,GACzC1I,KAAKgJ,mBAAmB5F,OAAOsF,GAC/B1I,KAAKkJ,YAAcT,EAAA,EAAeC,EAAID,EAAA,GACtCzI,KAAKwI,iBAAmBC,EAAA,EAAyBC,GAKlDtI,MAAOuI,GAUN,OATIA,IACHA,EAAS,IAAIG,GAEdH,EAAOxN,UAAY6E,KAAK7E,UACxBwN,EAAOP,cAAgBpI,KAAKoI,cAC5BO,EAAOI,cAAgB/I,KAAK+I,cACxB/I,KAAKgJ,qBAAsBL,EAAOK,mBAAqBhJ,KAAKgJ,mBAAmBG,SACnFR,EAAOO,YAAcT,EAAA,EAAczI,KAAKkJ,aACxCP,EAAOH,iBAAmBxI,KAAKwI,iBACxBG,GAgBT3Y,OAAAoZ,EAAA,EAAApZ,CAA0B,iBAAiB8Y,EAAgB9Y,OAAAqZ,EAAA,EAAArZ,CAAmB,IAAI,sMCpEtEsZ,iCAAZ,SAAYA,GAORA,IAAA,qBAOAA,IAAA,mBAOAA,IAAA,eAOAA,IAAA,2BA5BJ,CAAYA,iBAgCNC,EAqBNnJ,YAAYtD,EAA6BvM,EAAO0M,EAAqB,GACjE+C,KAAKlD,eAAiBA,EAEtB9M,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKlD,gBAMZkD,KAAKzP,MAAQA,EAKbyP,KAAK/C,UAAYA,GAAa,EAG9BjN,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK/C,WAAa,GAAK+C,KAAK/C,WAAa,OAEhDjN,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKlD,iBAAmBwM,EAAWtM,SAAYgD,KAAKzP,OAAS,GAAKyP,KAAKzP,OAAS,YACvFP,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKlD,iBAAmBwM,EAAW1L,MAAQ5N,OAAAwZ,EAAA,EAAAxZ,CAAYgQ,KAAKzP,QACnEP,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKlD,iBAAmBwM,EAAW7L,QAAgC,iBAAfuC,KAAKzP,OAsBpE6P,SAASC,GAEL,IACIjE,EADAqN,EAAepJ,EAAUA,EAAQoJ,aAAe,KAEpD,OAAQzJ,KAAKlD,gBACT,KAAKwM,EAAWtM,QACZZ,EAAM,MAAQ4D,KAAK/C,UAAY,MAAQ+C,KAAKzP,MAC5C,MACJ,KAAK+Y,EAAW7L,OACZrB,EAAM,MAAQ4D,KAAK/C,UAAY,MAAQ+C,KAAKzP,MAC5C,MACJ,KAAK+Y,EAAW1L,KACZxB,EAAM,MAAQ4D,KAAK/C,UAAY,MAAQ+C,KAAKzP,MAC5C,MACJ,QACIP,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKlD,iBAAmBwM,EAAW5L,WAAY,sCAAwCsC,KAAKlD,gBACnGV,EAAM,MAAQ4D,KAAK/C,UAAY,MAAQ+C,KAAKzP,MAAM6I,SAAS,OAInE,GAAIqQ,EACA,GAAuB,IAAnBzJ,KAAK/C,WAAoB+C,KAAKlD,iBAAmBwM,EAAWtM,QAAU,CAGtEZ,GAAO,KADIsN,EAAY1J,KAAKzP,QAAU,eACpBoZ,MAAMC,SACrB,CAGH,IAAI7Y,EAAI0Y,EAAaI,SAAS7J,MAC9B5D,GAAO,KAAOrL,EAAIA,EAAE+Y,WAAW1Q,WAAWuQ,MAAQ,WAG1D,OAAOvN,EASXgE,SACI,OAAOJ,KAAK5G,WAQhBgH,UACI,OAAQJ,KAAKlD,gBACT,KAAKwM,EAAWtM,QACZ,OAAsB,IAAfgD,KAAKzP,MAChB,KAAK+Y,EAAW7L,OACZ,OAAQuC,KAAKzP,OAA+B,IAAtByP,KAAKzP,MAAM+E,OACrC,KAAKgU,EAAW1L,KACZ,OAAQoC,KAAKzP,OAASyP,KAAKzP,QAAUiZ,EAAA,EACzC,QAEI,OADAxZ,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKlD,iBAAmBwM,EAAW5L,WAAY,sCAAwCsC,KAAKlD,iBAC3FkD,KAAKzP,OAA+B,IAAtByP,KAAKzP,MAAM+E,QAUzC8K,cAEI,GAAuB,IAAnBJ,KAAK/C,WAAmB+C,KAAKlD,iBAAmBwM,EAAWtM,QAAS,CACpE,IAAInN,EAAO6Z,EAAY1J,KAAKzP,OAC5B,GAAIV,EACA,OAAOA,EAAO,KAAOmQ,KAAK5G,WAAa,IAG/C,OAAO4G,KAAK5G,WAIhBgH,kBAAkB2J,EAAWC,GACzB,GAAID,EAAGjN,iBAAmBkN,EAAGlN,eACzB,OAAO,EAEX,GAAIiN,EAAG9M,YAAc+M,EAAG/M,UACpB,OAAO,EAEX,OAAO8M,EAAGjN,gBACN,KAAKwM,EAAWtM,QAChB,KAAKsM,EAAW7L,OACZ,OAAOsM,EAAGxZ,QAAUyZ,EAAGzZ,MAC3B,QACI,OAAOP,OAAAia,EAAA,EAAAja,CAAQ+Z,EAAGxZ,MAAMyZ,EAAGzZ,SAgBrC,SAAA2Z,EAAqB3Z,EAAkC0M,GAEzD1M,EAAQA,GAAS,EACjB0M,EAAYA,GAAa,EAEzB,IAAIH,EAAiBwM,EAAWtM,QACX,iBAAVzM,EAIHP,OAAAwZ,EAAA,EAAAxZ,CAAYO,GACZuM,EAAiBwM,EAAW1L,MAE5Bd,EAAiBwM,EAAW7L,OAE5BzN,OAAAsW,EAAA,EAAAtW,EAAiC,IAA1BO,EAAM4Z,QAAQ,OAAe,oEAEjC5Z,aAAiBqL,aACxBkB,EAAiBwM,EAAW5L,YAGhC,IAAId,EAAS,IAAI2M,EAAOzM,EAAgBvM,EAAO0M,GAI/C,OAFAjN,OAAAsW,EAAA,EAAAtW,CAAO4M,EAAOzL,eAAe,mBAEtByL,EArMJ2M,EAAAa,WAAsB,IAAIb,EAAOD,EAAWtM,QAAQ,GAyM3D,IAAIqN,EAAcC,EAAA,EACdC,EAAcD,EAAA,EACdE,EAAYF,EAAA,EACZG,EAAgBH,EAAA,EAChBI,EAAkBJ,EAAA,EAClBK,EAAYL,EAAA,EACZM,EAAmBN,EAAA,EAGnBO,KACAC,KA0BJ,SAAApB,EAAqB9M,GACjB,OAAOiO,EAAsBjO,GAW3B,SAAAmO,EAAwBC,GAE1B,IACIC,EAASH,EAA8BE,GAC3C,YAAe/Y,IAAXgZ,EACOA,EAEEC,EAAaF,GAM9B,SAAAG,EAAkB/O,GAKd,IAJA,IAAIgP,EAAOhP,EAAI9G,OAAS,EACpBgH,EAAM,IAAIV,WAAWwP,GACrBC,EAAY,GAER/b,EAAI,EAAGoM,EAAMU,EAAI9G,OAAQhG,EAAIoM,IAAOpM,EAC1C+b,GAAajP,EAAIkP,OAAOhc,GAErBA,EAAI,GAAMA,EAAI,GAAO,IACtBgN,EAAIhN,IAAI,GAAK0G,SAASqV,EAAW,IACjCA,EAAY,IAIhB,OAAO/O,GA/DX,WAEI,SAAAiP,EAAoBC,GAChB,IAAK,IAAI3b,KAAQ2b,EACb,GAAIA,EAAara,eAAetB,GAAO,CACnC,IAAIU,EAAQib,EAAa3b,GACzBgb,EAAsBta,GAASV,EAC/Bib,EAAsBjb,GAAQ,IAAI0Z,EAAOD,EAAWtM,QAASzM,EAAO,IAKhFsa,KACAC,KACAS,EAAWf,GACXe,EAAWd,GACXc,EAAWhB,GACXgB,EAAWb,GACXa,EAAWZ,GACXY,EAAWX,GACXW,EAAWlB,GApBf,GAkEA,IAAIoB,EAAY,yBACZC,EAAY,qBACZC,EAAY,qBACZC,EAAY,qBAkBV,SAAAV,EAAuB3a,EAAO0M,GAEhC,IAAI4O,EAASC,EAEb,GAAIvb,aAAiBgZ,EACjB,OAAOhZ,EAGXA,EAAQA,GAAS,EACjB0M,EAAYA,GAAa,EAEzB,IAAIH,EAAiBwM,EAAWtM,QAEhC,GAAqB,iBAAVzM,EAIP,GAHAuM,EAAiBwM,EAAW7L,OAGV,QADlBqO,EAAYvb,EAAM+P,OAAO,EAAG,IAGxBxD,EAAiBwM,EAAWtM,QAC5BzM,EAAQyF,SAASzF,EAAM+P,OAAO,GAAI,SAE/B,GAAkB,OAAdwL,EAEPhP,EAAiBwM,EAAW7L,OAC5BlN,EAAQA,EAAM+P,OAAO,QAElB,GAAkB,OAAdwL,EAEPhP,EAAiBwM,EAAW5L,WAE5BnN,EAAQ4a,EAAS5a,EAAM+P,OAAO,SAE3B,GAAkB,OAAdwL,EAEPhP,EAAiBwM,EAAW1L,KAC5BrN,EAAQA,EAAM+P,OAAO,QAElB,GAAItQ,OAAAwZ,EAAA,EAAAxZ,CAAYO,GAEnBuM,EAAiBwM,EAAW1L,UAEzB,GAA0C,QAArCiO,EAAUJ,EAAUM,KAAKxb,IACjCuM,EAAiBwM,EAAWtM,QAC5BC,EAAYjH,SAAS6V,EAAQ,GAAI,IACjCtb,EAAQyF,SAAS6V,EAAQ,GAAI,SAE1B,GAA0C,QAArCA,EAAUH,EAAUK,KAAKxb,IAEjCuM,EAAiBwM,EAAW7L,OAC5BR,EAAYjH,SAAS6V,EAAQ,GAAI,IACjCtb,EAAQsb,EAAQ,QAEb,GAA0C,QAArCA,EAAUF,EAAUI,KAAKxb,IACjCuM,EAAiBwM,EAAW5L,WAC5BT,EAAYjH,SAAS6V,EAAQ,GAAI,IACjCtb,EAAQ4a,EAASU,EAAQ,QAEtB,IAA0C,QAArCA,EAAUD,EAAUG,KAAKxb,IAKjC,MAAM,IAAI4I,MAAM,0CAA4C5I,GAJ5DuM,EAAiBwM,EAAW1L,KAC5BX,EAAYjH,SAAS6V,EAAQ,GAAI,IACjCtb,EAAQsb,EAAQ,QAKjB,GAAItb,aAAiBqL,WACxBkB,EAAiBwM,EAAW5L,gBAEzB,GAAInN,aAAiBP,OAAQ,CAEhC2O,QAAQC,IAAK,gBAAgBrO,GAE7B,IAAIgR,EAAMhR,EAIV,OAHAA,EAAQgR,EAAIhR,MACZ0M,EAAYA,GAAasE,EAAItE,UAC7BH,EAAiByE,EAAIyK,gBACd,IAAIzC,EAAOhZ,EAAO0M,GAE7B,OAAO,IAAIsM,EAAOzM,EAAgBvM,EAAO0M,iIC7ZvCgP,EASL7L,YAAaC,GACZA,EAAUA,MACVL,KAAKkM,WAAa7L,EAAkB,WAAIA,EAAQ6L,WAAW,KAC3DlM,KAAKmM,aAAe9L,EAAoB,aAAIA,EAAQ8L,aAAa,KACjEnM,KAAKoM,OAAS/L,EAAc,OAAIA,EAAQ+L,OAAO,KAC/CpM,KAAKqM,cAAgBhM,EAAqB,cAAIA,EAAQgM,cAAc,KACpErM,KAAKsM,eAAiBjM,EAAsB,eAAIA,EAAQiM,eAAe,KACvEtM,KAAKuM,gBAAkBlM,EAAuB,gBAAIA,EAAQkM,gBAAgB,KAC1EvM,KAAKwM,oBAAsBnM,EAA2B,oBAAIA,EAAQmM,oBAAoB,KAKvFpM,OAAQuH,GACP,IAAI9K,EAAe,EACI,MAAnBmD,KAAKkM,aAAsBrP,GAAgB,GACtB,MAArBmD,KAAKmM,eAAwBtP,GAAgB,GAC9B,MAAfmD,KAAKoM,SAAkBvP,GAAgB,GACjB,MAAtBmD,KAAKqM,gBAAyBxP,GAAgB,GACvB,MAAvBmD,KAAKsM,iBAA0BzP,GAAgB,IACvB,MAAxBmD,KAAKuM,kBAA2B1P,GAAgB,IACpB,MAA5BmD,KAAKwM,sBAA+B3P,GAAgB,IACxD8K,EAAI/V,SAASiL,GACS,MAAnBmD,KAAKkM,YAAsBzD,EAAA,GAAezI,KAAKkM,WAAWvE,GACrC,MAArB3H,KAAKmM,cAAwB1D,EAAA,GAAezI,KAAKmM,aAAaxE,GAC/C,MAAf3H,KAAKoM,QAAkB3D,EAAA,GAAezI,KAAKoM,OAAOzE,GAC5B,MAAtB3H,KAAKqM,eAAyB5D,EAAA,GAAezI,KAAKqM,cAAc1E,GACzC,MAAvB3H,KAAKsM,gBAA0B7D,EAAA,GAAgBzI,KAAKsM,eAAe3E,GAC3C,MAAxB3H,KAAKuM,iBAA2B9D,EAAA,GAAoBzI,KAAKuM,gBAAgB5E,GAC7C,MAA5B3H,KAAKwM,qBAA+BxM,KAAKwM,oBAAoBvJ,OAAO0E,GAKxEvH,OAAQsI,GACP,IAAI7L,EAAe6L,EAAI5W,WAEnB2a,EAA8C,IAAN,EAAf5P,GACzB6P,EAAwC,IAAN,EAAf7P,GACnB8P,EAA+C,IAAN,EAAf9P,GAC1B+P,EAAiD,IAAP,GAAf/P,GAC3BgQ,EAAkD,IAAP,GAAfhQ,GAC5BiQ,EAAsD,IAAP,GAAfjQ,GANY,IAAN,EAAfA,KAS1BmD,KAAKkM,WAAazD,EAAA,EAAeC,IAE/B+D,IACFzM,KAAKmM,aAAe1D,EAAA,EAAeC,IAEjCgE,IACF1M,KAAKoM,OAAS3D,EAAA,EAAeC,IAE3BiE,IACF3M,KAAKqM,cAAgB5D,EAAA,EAAeC,IAElCkE,IACF5M,KAAKsM,eAAiB7D,EAAA,EAAgBC,IAEpCmE,IACF7M,KAAKuM,gBAAkB9D,EAAA,EAAoBC,IAEzCoE,IACF9M,KAAKwM,oBAAqB,IAAIP,EAC9BjM,KAAKwM,oBAAoBpJ,OAAOsF,IAMlCtI,MAAOuI,GAWN,OAVIA,IACHA,EAAS,IAAIsD,GAEdtD,EAAOuD,WAAalM,KAAKkM,WACzBvD,EAAOwD,aAAenM,KAAKmM,aAC3BxD,EAAOyD,OAASpM,KAAKoM,OACrBzD,EAAO0D,cAAgBrM,KAAKqM,cAC5B1D,EAAO2D,eAAiBtM,KAAKsM,eAC7B3D,EAAO4D,gBAAkBvM,KAAKuM,gBAC1BvM,KAAKwM,sBAAuB7D,EAAO6D,oBAAsBxM,KAAKwM,oBAAoBrD,SAC/ER,GAKH,SAAAoE,EAAgCrE,GACpC,IAAIsE,EAAM,IAAIf,EAEb,OADAe,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAA4Y,EAAA,EAAA5Y,CAA0B,iBAAiBic,EAAgBjc,OAAA6Y,EAAA,EAAA7Y,CAAmB,GAAG,sCCzHrEid,ECAAC,ECAAC,UFON,SAAAC,EAAgCC,EAAwB1F,GAC7DA,EAAI5T,UAAUsZ,GAIT,SAAAC,EAAgC5E,GACrC,OAAOA,EAAIzU,YCNN,SAAAsZ,EAAmCF,EAA2B1F,GACnEA,EAAI5T,UAAUsZ,GAIT,SAAAG,EAAmC9E,GACxC,OAAOA,EAAIzU,aDbZ,SAAYgZ,GACTA,IAAA,uBACDA,IAAA,uBACAA,IAAA,yBAHF,CAAYA,WAmBZjd,OAAAyd,EAAA,EAAAzd,CAAoB,iBAAiBid,EAAeG,EAAsBE,EAAsB,MCnBhG,SAAYJ,GACTA,IAAA,mBACDA,IAAA,6BACAA,IAAA,+CAHF,CAAYA,WAmBZld,OAAAyd,EAAA,EAAAzd,CAAoB,oBAAoBkd,EAAkBK,EAAyBC,EAAyB,MCnB5G,SAAYL,GACTA,IAAA,eACDA,IAAA,uBACAA,IAAA,qBAHF,CAAYA,WAmBZnd,OAAAyd,EAAA,EAAAzd,CAAoB,eAAemd,EAZ7B,SAA8BE,EAAsB1F,GACzDA,EAAI5T,UAAUsZ,IAIT,SAA8B3E,GACnC,OAAOA,EAAIzU,aAM4E,oDCHlFyZ,EASLtN,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAK4N,4BAA8BvN,EAAmC,4BAAIA,EAAQuN,4BAA4B,KAC9G5N,KAAK6N,uBAAyBxN,EAA8B,uBAAIA,EAAQwN,uBAAuB,KAC/F7N,KAAK8N,2BAA6BzN,EAAkC,2BAAIA,EAAQyN,2BAA2B,KAC3G9N,KAAK+N,2BAA6B1N,EAAkC,2BAAIA,EAAQ0N,2BAA2B,KAC3G/N,KAAKgO,kBAAoB3N,EAAyB,kBAAIA,EAAQ2N,kBAAkB,KAChFhO,KAAKiO,SAAW5N,EAAgB,SAAIA,EAAQ4N,SAAS,KAKtD7N,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAK4N,4BAA4BjG,GACjDuG,EAAA,GAAgBlO,KAAK6N,uBAAuBlG,GAC5CuG,EAAA,GAAgBlO,KAAK8N,2BAA2BnG,GAChDuG,EAAA,GAAgBlO,KAAK+N,2BAA2BpG,GAChDuG,EAAA,GAAiBlO,KAAKgO,kBAAkBrG,GACxCuG,EAAA,GAAclO,KAAKiO,SAAStG,GAK7BvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAK4N,4BAA8BM,EAAA,EAAgBxF,GACnD1I,KAAK6N,uBAAyBK,EAAA,EAAgBxF,GAC9C1I,KAAK8N,2BAA6BI,EAAA,EAAgBxF,GAClD1I,KAAK+N,2BAA6BG,EAAA,EAAgBxF,GAClD1I,KAAKgO,kBAAoBE,EAAA,EAAiBxF,GAC1C1I,KAAKiO,SAAWC,EAAA,EAAcxF,GAK/BtI,MAAOuI,GAWN,OAVIA,IACHA,EAAS,IAAI+E,GAEV1N,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOiF,4BAA8B5N,KAAK4N,4BAC1CjF,EAAOkF,uBAAyB7N,KAAK6N,uBACrClF,EAAOmF,2BAA6B9N,KAAK8N,2BACzCnF,EAAOoF,2BAA6B/N,KAAK+N,2BACzCpF,EAAOqF,kBAAoBhO,KAAKgO,kBAChCrF,EAAOsF,SAAWjO,KAAKiO,SAChBtF,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,4BAA4B0d,EAA2B1d,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qBC3ElGoe,EAOLhO,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAKuO,0BAA4BlO,EAAiC,0BAAIA,EAAQkO,0BAA0B,KACxGvO,KAAKwO,qBAAuBnO,EAA4B,qBAAIA,EAAQmO,qBAAqB,KACzFxO,KAAKyO,yBAA2BpO,EAAgC,yBAAIA,EAAQoO,yBAAyB,KAKtGrO,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpCuG,EAAA,GAAgBlO,KAAKuO,0BAA0B5G,GAC/CuG,EAAA,GAAgBlO,KAAKwO,qBAAqB7G,GAC1CuG,EAAA,GAAgBlO,KAAKyO,yBAAyB9G,GAK/CvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAKuO,0BAA4BL,EAAA,EAAgBxF,GACjD1I,KAAKwO,qBAAuBN,EAAA,EAAgBxF,GAC5C1I,KAAKyO,yBAA2BP,EAAA,EAAgBxF,GAKjDtI,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAIyF,GAEVpO,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAO4F,0BAA4BvO,KAAKuO,0BACxC5F,EAAO6F,qBAAuBxO,KAAKwO,qBACnC7F,EAAO8F,yBAA2BzO,KAAKyO,yBAChC9F,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,6BAA6Boe,EAA4Bpe,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC7DpG0e,EASLtO,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAK4N,4BAA8BvN,EAAmC,4BAAIA,EAAQuN,4BAA4B,KAC9G5N,KAAK6N,uBAAyBxN,EAA8B,uBAAIA,EAAQwN,uBAAuB,KAC/F7N,KAAK8N,2BAA6BzN,EAAkC,2BAAIA,EAAQyN,2BAA2B,KAC3G9N,KAAK+N,2BAA6B1N,EAAkC,2BAAIA,EAAQ0N,2BAA2B,KAC3G/N,KAAKiO,SAAW5N,EAAgB,SAAIA,EAAQ4N,SAAS,KAKtD7N,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpCuG,EAAA,GAAgBlO,KAAK4N,4BAA4BjG,GACjDuG,EAAA,GAAgBlO,KAAK6N,uBAAuBlG,GAC5CuG,EAAA,GAAgBlO,KAAK8N,2BAA2BnG,GAChDuG,EAAA,GAAgBlO,KAAK+N,2BAA2BpG,GAChDuG,EAAA,GAAclO,KAAKiO,SAAStG,GAK7BvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAK4N,4BAA8BM,EAAA,EAAgBxF,GACnD1I,KAAK6N,uBAAyBK,EAAA,EAAgBxF,GAC9C1I,KAAK8N,2BAA6BI,EAAA,EAAgBxF,GAClD1I,KAAK+N,2BAA6BG,EAAA,EAAgBxF,GAClD1I,KAAKiO,SAAWC,EAAA,EAAcxF,GAK/BtI,MAAOuI,GAWN,OAVIA,IACHA,EAAS,IAAI+F,GAEV1O,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAOiF,4BAA8B5N,KAAK4N,4BAC1CjF,EAAOkF,uBAAyB7N,KAAK6N,uBACrClF,EAAOmF,2BAA6B9N,KAAK8N,2BACzCnF,EAAOoF,2BAA6B/N,KAAK+N,2BACzCpF,EAAOsF,SAAWjO,KAAKiO,SAChBtF,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,4BAA4B0e,EAA2B1e,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC5ElG2e,EAMLvO,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAKuO,0BAA4BlO,EAAiC,0BAAIA,EAAQkO,0BAA0B,KACxGvO,KAAKwO,qBAAuBnO,EAA4B,qBAAIA,EAAQmO,qBAAqB,KACzFxO,KAAKyO,yBAA2BpO,EAAgC,yBAAIA,EAAQoO,yBAAyB,KAKtGrO,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,GAAgBlO,KAAKuO,0BAA0B5G,GAC/CuG,EAAA,GAAgBlO,KAAKwO,qBAAqB7G,GAC1CuG,EAAA,GAAgBlO,KAAKyO,yBAAyB9G,GAK/CvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAKuO,0BAA4BL,EAAA,EAAgBxF,GACjD1I,KAAKwO,qBAAuBN,EAAA,EAAgBxF,GAC5C1I,KAAKyO,yBAA2BP,EAAA,EAAgBxF,GAKjDtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIgG,GAEV3O,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAO4F,0BAA4BvO,KAAKuO,0BACxC5F,EAAO6F,qBAAuBxO,KAAKwO,qBACnC7F,EAAO8F,yBAA2BzO,KAAKyO,yBAChC9F,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,6BAA6B2e,EAA4B3e,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,8BCzDpG4e,EAKLxO,YAAaC,GACZA,EAAUA,MACVL,KAAK6O,cAAgBxO,EAAqB,cAAIA,EAAQwO,cAAc,IAAIC,EAAA,EACxE9O,KAAK+O,eAAiB1O,EAAsB,eAAIA,EAAQ0O,eAAe,KACvE/O,KAAKgP,oBAAsB3O,EAA2B,oBAAIA,EAAQ2O,oBAAoB,IAAIC,EAAA,EAK3F7O,OAAQuH,GACP3H,KAAK6O,cAAc5L,OAAO0E,GAC1ByF,EAAqBpN,KAAK+O,eAAepH,GACzC3H,KAAKgP,oBAAoB/L,OAAO0E,GAKjCvH,OAAQsI,GACP1I,KAAK6O,cAAczL,OAAOsF,GAC1B1I,KAAK+O,eAAiBzB,EAAqB5E,GAC3C1I,KAAKgP,oBAAoB5L,OAAOsF,GAKjCtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIiG,GAEV5O,KAAK6O,gBAAiBlG,EAAOkG,cAAgB7O,KAAK6O,cAAc1F,SACpER,EAAOoG,eAAiB/O,KAAK+O,eACzB/O,KAAKgP,sBAAuBrG,EAAOqG,oBAAsBhP,KAAKgP,oBAAoB7F,SAC/ER,GAKH,SAAAuG,EAA4CxG,GAChD,IAAIsE,EAAM,IAAI4B,EAEb,OADA5B,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,6BAA6B4e,EAA4B5e,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCnDpGmf,EAML/O,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAKoP,mBAAqB/O,EAA0B,mBAAIA,EAAQ+O,mBAAmB,KACnFpP,KAAKqP,cAAgBhP,EAAqB,cAAIA,EAAQgP,iBAKvDjP,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpC3X,OAAAsf,EAAA,EAAAtf,CAAyBgQ,KAAKoP,mBAAmBzH,GACjDuG,EAAA,EAAelO,KAAKqP,cAAc1H,GAKnCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAKoP,mBAAqBpf,OAAAsf,EAAA,EAAAtf,CAAyB0Y,GACnD1I,KAAKqP,cAAgBnB,EAAA,EAAexF,EAAIwG,GAKzC9O,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIwG,GAEVnP,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAOyG,mBAAqBpP,KAAKoP,mBAC7BpP,KAAKqP,gBAAiB1G,EAAO0G,cAAgBnB,EAAA,EAAqBlO,KAAKqP,gBACpE1G,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,8BAA8Bmf,EAA6Bnf,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC7DtGuf,EAOLnP,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAKwP,gBAAkBnP,EAAuB,gBAAIA,EAAQmP,gBAAgB,KAC1ExP,KAAKyP,wBAA0BpP,EAA+B,wBAAIA,EAAQoP,wBAAwB,KAClGzP,KAAK0P,iBAAmBrP,EAAwB,iBAAIA,EAAQqP,iBAAiB,KAC7E1P,KAAK2P,aAAetP,EAAoB,aAAIA,EAAQsP,aAAa,KAKlEvP,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKe,WAAW4G,GACpCuG,EAAA,GAAgBlO,KAAKwP,gBAAgB7H,GACrCuG,EAAA,GAAgBlO,KAAKyP,wBAAwB9H,GAC7CuG,EAAA,GAAgBlO,KAAK0P,iBAAiB/H,GACtCuG,EAAA,GAAyBlO,KAAK2P,aAAahI,GAK5CvH,OAAQsI,GACP1I,KAAKe,WAAamN,EAAA,EAAoBxF,GACtC1I,KAAKwP,gBAAkBtB,EAAA,EAAgBxF,GACvC1I,KAAKyP,wBAA0BvB,EAAA,EAAgBxF,GAC/C1I,KAAK0P,iBAAmBxB,EAAA,EAAgBxF,GACxC1I,KAAK2P,aAAezB,EAAA,EAAyBxF,GAK9CtI,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAI4G,GAEd5G,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAO6G,gBAAkBxP,KAAKwP,gBAC9B7G,EAAO8G,wBAA0BzP,KAAKyP,wBACtC9G,EAAO+G,iBAAmB1P,KAAK0P,iBAC/B/G,EAAOgH,aAAe3P,KAAK2P,aACpBhH,GAKH,SAAAiH,EAA2ClH,GAC/C,IAAIsE,EAAM,IAAIuC,EAEb,OADAvC,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,4BAA4Buf,EAA2Bvf,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBC5DlG6f,EAKLzP,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIkH,GAClC5P,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIkH,GAEV7P,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,+BAA+B6f,EAA8B7f,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC3DxGggB,EAIL5P,YAAaC,GACZA,EAAUA,MACVL,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAKiQ,eAAiB5P,EAAsB,eAAIA,EAAQ4P,eAAe,KAKxE7P,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpCuG,EAAA,GAAgBlO,KAAKiQ,eAAetI,GAKrCvH,OAAQsI,GACP1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAKiQ,eAAiB/B,EAAA,EAAgBxF,GAKvCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIqH,GAEdrH,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAOsH,eAAiBjQ,KAAKiQ,eACtBtH,GAKH,SAAAuH,EAA6CxH,GACjD,IAAIsE,EAAM,IAAIgD,EAEb,OADAhD,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,8BAA8BggB,EAA6BhgB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC7CtGmgB,EAIL/P,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKoQ,6BAA+B/P,EAAoC,6BAAIA,EAAQ+P,gCAKrFhQ,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,EAAelO,KAAKoQ,6BAA6BzI,GAKlDvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKoQ,6BAA+BlC,EAAA,EAAexF,EAAIwH,GAKxD9P,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIwH,GAEVnQ,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAChEnJ,KAAKoQ,+BAAgCzH,EAAOyH,6BAA+BlC,EAAA,EAAqBlO,KAAKoQ,+BAClGzH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,iBAAiBmgB,EAAgBngB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UClD5EqgB,EAKLjQ,YAAaC,GACZA,EAAUA,MACVL,KAAKiQ,eAAiB5P,EAAsB,eAAIA,EAAQ4P,eAAe,KACvEjQ,KAAKsQ,YAAcjQ,EAAmB,YAAIA,EAAQiQ,YAAY,KAC9DtQ,KAAKuQ,iBAAmBlQ,EAAwB,iBAAIA,EAAQkQ,oBAK7DnQ,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKiQ,eAAetI,GACpCuG,EAAA,GAAkBlO,KAAKsQ,YAAY3I,GACnCuG,EAAA,EAAelO,KAAKuQ,iBAAiB5I,EAAIuG,EAAA,IAK1C9N,OAAQsI,GACP1I,KAAKiQ,eAAiB/B,EAAA,EAAgBxF,GACtC1I,KAAKsQ,YAAcpC,EAAA,EAAkBxF,GACrC1I,KAAKuQ,iBAAmBrC,EAAA,EAAexF,EAAIwF,EAAA,GAK5C9N,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI0H,GAEd1H,EAAOsH,eAAiBjQ,KAAKiQ,eAC7BtH,EAAO2H,YAActQ,KAAKsQ,YAC1B3H,EAAO4H,iBAAmBrC,EAAA,EAAclO,KAAKuQ,kBACtC5H,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,sBAAsBqgB,EAAqBrgB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBCrDtFwgB,EAILpQ,YAAaC,GACZA,EAAUA,MACVL,KAAKyQ,aAAepQ,EAAoB,aAAIA,EAAQoQ,aAAa,KACjEzQ,KAAKzP,MAAQ8P,EAAa,MAAIA,EAAQ9P,MAAM,IAAImgB,EAAA,EAKjDtQ,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKyQ,aAAa9I,GAClC3H,KAAKzP,MAAM0S,OAAO0E,GAKnBvH,OAAQsI,GACP1I,KAAKyQ,aAAevC,EAAA,EAAgBxF,GACpC1I,KAAKzP,MAAM6S,OAAOsF,GAKnBtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI6H,GAEd7H,EAAO8H,aAAezQ,KAAKyQ,aACvBzQ,KAAKzP,QAASoY,EAAOpY,MAAQyP,KAAKzP,MAAM4Y,SACrCR,GAKH,SAAAgI,EAA2CjI,GAC/C,IAAIsE,EAAM,IAAIwD,EAEb,OADAxD,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,4BAA4BwgB,EAA2BxgB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCxDlG4gB,EAELxQ,eAEAA,MAAOuI,GAIN,OAHIA,IACHA,EAAS,IAAIiI,GAEPjI,GAOT3Y,OAAAme,EAAA,EAAAne,CAA0B,mBAAmB4gB,EAAkB5gB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCHhF6gB,UAAsCD,EAI3CxQ,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAK8Q,eAAiBzQ,EAAsB,eAAIA,EAAQyQ,kBACxD9Q,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACPuG,EAAA,EAAelO,KAAK8Q,eAAenJ,GACnCuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAK8Q,eAAiB5C,EAAA,EAAexF,EAAIiI,GACzC3Q,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIkI,GAEV7Q,KAAK8Q,iBAAkBnI,EAAOmI,eAAiB5C,EAAA,EAAqBlO,KAAK8Q,iBACzE9Q,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,yBAAyB6gB,EAAwB7gB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCpD5F+gB,UAAwCH,EAI7CxQ,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAKgR,OAAS3Q,EAAc,OAAIA,EAAQ2Q,OAAO,KAC/ChR,KAAKiR,eAAiB5Q,EAAsB,eAAIA,EAAQ4Q,eAAe,IAAIhF,EAAA,EAK5E7L,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKgR,OAAOrJ,GAChC3H,KAAKiR,eAAehO,OAAO0E,GAK5BvH,OAAQsI,GACP1I,KAAKgR,OAAS9C,EAAA,EAAoBxF,GAClC1I,KAAKiR,eAAe7N,OAAOsF,GAK5BtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIoI,GAEdpI,EAAOqI,OAAShR,KAAKgR,OACjBhR,KAAKiR,iBAAkBtI,EAAOsI,eAAiBjR,KAAKiR,eAAe9H,SAChER,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,2BAA2B+gB,EAA0B/gB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBCjDhGkhB,EAIL9Q,YAAaC,GACZA,EAAUA,MACVL,KAAKyQ,aAAepQ,EAAoB,aAAIA,EAAQoQ,aAAa,KACjEzQ,KAAKmR,YAAc9Q,EAAmB,YAAIA,EAAQ8Q,eAKnD/Q,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKyQ,aAAa9I,GAClCuG,EAAA,EAAelO,KAAKmR,YAAYxJ,GAKjCvH,OAAQsI,GACP1I,KAAKyQ,aAAevC,EAAA,EAAgBxF,GACpC1I,KAAKmR,YAAcjD,EAAA,EAAexF,EAAI0I,EAAA,GAKvChR,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIuI,GAEdvI,EAAO8H,aAAezQ,KAAKyQ,aACvBzQ,KAAKmR,cAAexI,EAAOwI,YAAcjD,EAAA,EAAqBlO,KAAKmR,cAChExI,GAKH,SAAA0I,EAAgC3I,GACpC,IAAIsE,EAAM,IAAIkE,EAEb,OADAlE,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,iBAAiBkhB,EAAgBlhB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UChD5EshB,UAAqCV,EAG1CxQ,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAKuR,OAASlR,EAAc,OAAIA,EAAQkR,UAKzCnR,OAAQuH,GACPuG,EAAA,EAAelO,KAAKuR,OAAO5J,GAK5BvH,OAAQsI,GACP1I,KAAKuR,OAASrD,EAAA,EAAexF,EAAI2I,GAKlCjR,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAI2I,GAEVtR,KAAKuR,SAAU5I,EAAO4I,OAASrD,EAAA,EAAqBlO,KAAKuR,SACtD5I,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,wBAAwBshB,EAAuBthB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCrC1FwhB,EASLpR,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAKyR,yBAA2BpR,EAAgC,yBAAIA,EAAQoR,4BAC5EzR,KAAK0R,kBAAoBrR,EAAyB,kBAAIA,EAAQqR,kBAAkB,KAChF1R,KAAK2R,oBAAsBtR,EAA2B,oBAAIA,EAAQsR,oBAAoB,IAAItB,EAC1FrQ,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpCuG,EAAA,EAAelO,KAAKyR,yBAAyB9J,EAAIuG,EAAA,IACjDA,EAAA,GAAiBlO,KAAK0R,kBAAkB/J,GACxC3H,KAAK2R,oBAAoB1O,OAAO0E,GAChCuG,EAAA,EAAelO,KAAK8P,QAAQnI,EAAIuG,EAAA,IAChCA,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAKyR,yBAA2BvD,EAAA,EAAexF,EAAIwF,EAAA,GACnDlO,KAAK0R,kBAAoBxD,EAAA,EAAiBxF,GAC1C1I,KAAK2R,oBAAoBvO,OAAOsF,GAChC1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIwF,EAAA,GAClClO,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAWN,OAVIA,IACHA,EAAS,IAAI6I,GAEVxR,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAO8I,yBAA2BvD,EAAA,EAAclO,KAAKyR,0BACrD9I,EAAO+I,kBAAoB1R,KAAK0R,kBAC5B1R,KAAK2R,sBAAuBhJ,EAAOgJ,oBAAsB3R,KAAK2R,oBAAoBxI,SACtFR,EAAOmH,QAAU5B,EAAA,EAAclO,KAAK8P,SAChC9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,kBAAkBwhB,EAAiBxhB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UChF9E4hB,EAKLxR,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAK6R,yBAA2BxR,EAAgC,yBAAIA,EAAQwR,yBAAyB,KAKtGzR,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpCuG,EAAA,GAAgBlO,KAAK6R,yBAAyBlK,GAK/CvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAK6R,yBAA2B3D,EAAA,EAAgBxF,GAKjDtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIiJ,GAEV5R,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAOkJ,yBAA2B7R,KAAK6R,yBAChClJ,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,mBAAmB4hB,EAAkB5hB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCrDhF8hB,EAIL1R,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK2R,oBAAsBtR,EAA2B,oBAAIA,EAAQsR,oBAAoB,IAAItB,EAK3FjQ,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3B3H,KAAK2R,oBAAoB1O,OAAO0E,GAKjCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK2R,oBAAoBvO,OAAOsF,GAKjCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAImJ,GAEV9R,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK2R,sBAAuBhJ,EAAOgJ,oBAAsB3R,KAAK2R,oBAAoBxI,SAC/ER,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,oBAAoB8hB,EAAmB9hB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UChDlF+hB,EAKL3R,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAKgS,iBAAmB3R,EAAwB,iBAAIA,EAAQ2R,oBAK7D5R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpCuG,EAAA,EAAelO,KAAKgS,iBAAiBrK,EAAIuG,EAAA,IAK1C9N,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAKgS,iBAAmB9D,EAAA,EAAexF,EAAIwF,EAAA,GAK5C9N,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIoJ,GAEV/R,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAOqJ,iBAAmB9D,EAAA,EAAclO,KAAKgS,kBACtCrJ,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,8BAA8B+hB,EAA6B/hB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCnDtGiiB,EAKL7R,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,EAAIuG,EAAA,IAChCA,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIwF,EAAA,GAClClO,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIsJ,GAEVjS,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAOmH,QAAU5B,EAAA,EAAclO,KAAK8P,SAChC9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,+BAA+BiiB,EAA8BjiB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCvDxGkiB,EAKL9R,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKgO,kBAAoB3N,EAAyB,kBAAIA,EAAQ2N,kBAAkB,KAChFhO,KAAKmS,gBAAkB9R,EAAuB,gBAAIA,EAAQ8R,mBAK3D/R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAiBlO,KAAKgO,kBAAkBrG,GACxCuG,EAAA,EAAelO,KAAKmS,gBAAgBxK,EAAIuG,EAAA,IAKzC9N,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKgO,kBAAoBE,EAAA,EAAiBxF,GAC1C1I,KAAKmS,gBAAkBjE,EAAA,EAAexF,EAAIwF,EAAA,GAK3C9N,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIuJ,GAEVlS,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOqF,kBAAoBhO,KAAKgO,kBAChCrF,EAAOwJ,gBAAkBjE,EAAA,EAAclO,KAAKmS,iBACrCxJ,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,2BAA2BkiB,EAA0BliB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCnDhGoiB,EAKLhS,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,EAAIuG,EAAA,IAChCA,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIwF,EAAA,GAClClO,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIyJ,GAEVpS,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAOmH,QAAU5B,EAAA,EAAclO,KAAK8P,SAChC9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,4BAA4BoiB,EAA2BpiB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCxDlGqiB,EAILjS,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKmS,gBAAkB9R,EAAuB,gBAAIA,EAAQ8R,mBAK3D/R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,EAAelO,KAAKmS,gBAAgBxK,EAAIuG,EAAA,IAKzC9N,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKmS,gBAAkBjE,EAAA,EAAexF,EAAIwF,EAAA,GAK3C9N,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI0J,GAEVrS,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOwJ,gBAAkBjE,EAAA,EAAclO,KAAKmS,iBACrCxJ,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,6BAA6BqiB,EAA4BriB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC7CpGsiB,EAKLlS,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,EAAIuG,EAAA,IAChCA,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIwF,EAAA,GAClClO,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI2J,GAEVtS,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAOmH,QAAU5B,EAAA,EAAclO,KAAK8P,SAChC9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,8BAA8BsiB,EAA6BtiB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBCvDtGuiB,GAMLnS,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAKyP,wBAA0BpP,EAA+B,wBAAIA,EAAQoP,wBAAwB,KAClGzP,KAAK0P,iBAAmBrP,EAAwB,iBAAIA,EAAQqP,iBAAiB,KAC7E1P,KAAK2P,aAAetP,EAAoB,aAAIA,EAAQsP,aAAa,KAKlEvP,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKe,WAAW4G,GACpCuG,EAAA,GAAgBlO,KAAKyP,wBAAwB9H,GAC7CuG,EAAA,GAAgBlO,KAAK0P,iBAAiB/H,GACtCuG,EAAA,GAAyBlO,KAAK2P,aAAahI,GAK5CvH,OAAQsI,GACP1I,KAAKe,WAAamN,EAAA,EAAoBxF,GACtC1I,KAAKyP,wBAA0BvB,EAAA,EAAgBxF,GAC/C1I,KAAK0P,iBAAmBxB,EAAA,EAAgBxF,GACxC1I,KAAK2P,aAAezB,EAAA,EAAyBxF,GAK9CtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAI4J,IAEd5J,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAO8G,wBAA0BzP,KAAKyP,wBACtC9G,EAAO+G,iBAAmB1P,KAAK0P,iBAC/B/G,EAAOgH,aAAe3P,KAAK2P,aACpBhH,GAKH,SAAA6J,GAA2C9J,GAC/C,IAAIsE,EAAM,IAAIuF,GAEb,OADAvF,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,4BAA4BuiB,GAA2BviB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,uBCtDlGyiB,GAKLrS,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAI8J,IAClCxS,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI8J,IAEVzS,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,+BAA+ByiB,GAA8BziB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCvDxG0iB,GAMLtS,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAK+O,eAAiB1O,EAAsB,eAAIA,EAAQ0O,eAAe,KACvE/O,KAAKgS,iBAAmB3R,EAAwB,iBAAIA,EAAQ2R,oBAK7D5R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpCyF,EAAqBpN,KAAK+O,eAAepH,GACzCuG,EAAA,EAAelO,KAAKgS,iBAAiBrK,EAAIuG,EAAA,IAK1C9N,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAK+O,eAAiBzB,EAAqB5E,GAC3C1I,KAAKgS,iBAAmB9D,EAAA,EAAexF,EAAIwF,EAAA,GAK5C9N,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAI+J,IAEV1S,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAOoG,eAAiB/O,KAAK+O,eAC7BpG,EAAOqJ,iBAAmB9D,EAAA,EAAclO,KAAKgS,kBACtCrJ,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,2BAA2B0iB,GAA0B1iB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC1DhG2iB,GAKLvS,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,EAAIuG,EAAA,IAChCA,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIwF,EAAA,GAClClO,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIgK,IAEV3S,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAOmH,QAAU5B,EAAA,EAAclO,KAAK8P,SAChC9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,4BAA4B2iB,GAA2B3iB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,gCChElG4iB,GAELxS,eAEAA,MAAOuI,GAIN,OAHIA,IACHA,EAAS,IAAIiK,IAEPjK,GAOT3Y,OAAAme,EAAA,EAAAne,CAA0B,yBAAyB4iB,GAAwB5iB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCH5F6iB,WAAiCD,GAKtCxS,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAK8S,oBAAsBzS,EAA2B,oBAAIA,EAAQyS,uBAClE9S,KAAK+S,4BAA8B1S,EAAmC,4BAAIA,EAAQ0S,+BAClF/S,KAAKgT,kBAAoB3S,EAAyB,kBAAIA,EAAQ2S,kBAAkB,IAAIC,GAAA,EAKrF7S,OAAQuH,GACPuG,EAAA,EAAelO,KAAK8S,oBAAoBnL,EAAIuG,EAAA,IAC5CA,EAAA,EAAelO,KAAK+S,4BAA4BpL,GAChD3H,KAAKgT,kBAAkB/P,OAAO0E,GAK/BvH,OAAQsI,GACP1I,KAAK8S,oBAAsB5E,EAAA,EAAexF,EAAIwF,EAAA,GAC9ClO,KAAK+S,4BAA8B7E,EAAA,EAAexF,EAAIuD,EAAA,GACtDjM,KAAKgT,kBAAkB5P,OAAOsF,GAK/BtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIkK,IAEdlK,EAAOmK,oBAAsB5E,EAAA,EAAclO,KAAK8S,qBAC5C9S,KAAK+S,8BAA+BpK,EAAOoK,4BAA8B7E,EAAA,EAAqBlO,KAAK+S,8BACnG/S,KAAKgT,oBAAqBrK,EAAOqK,kBAAoBhT,KAAKgT,kBAAkB7J,SACzER,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,oBAAoB6iB,GAAmB7iB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,gCCxDlFkjB,WAAgCC,GAAA,EAKrC/S,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAKoT,QAAU/S,EAAe,QAAIA,EAAQ+S,QAAQ,KAClDpT,KAAKqT,aAAehT,EAAoB,aAAIA,EAAQgT,aAAa,KACjErT,KAAKsT,cAAgBjT,EAAqB,cAAIA,EAAQiT,cAAc,KAKrElT,OAAQuH,GACP4F,EAAwBvN,KAAKoT,QAAQzL,GACrCuG,EAAA,GAAgBlO,KAAKqT,aAAa1L,GAClCuG,EAAA,GAAgBlO,KAAKsT,cAAc3L,GAKpCvH,OAAQsI,GACP1I,KAAKoT,QAAU5F,EAAwB9E,GACvC1I,KAAKqT,aAAenF,EAAA,EAAgBxF,GACpC1I,KAAKsT,cAAgBpF,EAAA,EAAgBxF,GAKtCtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIuK,IAEdvK,EAAOyK,QAAUpT,KAAKoT,QACtBzK,EAAO0K,aAAerT,KAAKqT,aAC3B1K,EAAO2K,cAAgBtT,KAAKsT,cACrB3K,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,mBAAmBkjB,GAAkBljB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,uBCrDhFujB,WAA+BJ,GAAA,EAMpC/S,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAKwT,UAAYnT,EAAiB,UAAIA,EAAQmT,UAAU,KACxDxT,KAAKyT,cAAgBpT,EAAqB,cAAIA,EAAQoT,cAAc,KACpEzT,KAAK0T,mBAAqBrT,EAA0B,mBAAIA,EAAQqT,mBAAmB,KACnF1T,KAAK2T,uBAAyBtT,EAA8B,uBAAIA,EAAQsT,uBAAuB,IAAIC,GAAA,EAKpGxT,OAAQuH,GACPuG,EAAA,GAAkBlO,KAAKwT,UAAU7L,GACjCuG,EAAA,GAAgBlO,KAAKyT,cAAc9L,GACnCuG,EAAA,GAAgBlO,KAAK0T,mBAAmB/L,GACxC3H,KAAK2T,uBAAuB1Q,OAAO0E,GAKpCvH,OAAQsI,GACP1I,KAAKwT,UAAYtF,EAAA,EAAkBxF,GACnC1I,KAAKyT,cAAgBvF,EAAA,EAAgBxF,GACrC1I,KAAK0T,mBAAqBxF,EAAA,EAAgBxF,GAC1C1I,KAAK2T,uBAAuBvQ,OAAOsF,GAKpCtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAI4K,IAEd5K,EAAO6K,UAAYxT,KAAKwT,UACxB7K,EAAO8K,cAAgBzT,KAAKyT,cAC5B9K,EAAO+K,mBAAqB1T,KAAK0T,mBAC7B1T,KAAK2T,yBAA0BhL,EAAOgL,uBAAyB3T,KAAK2T,uBAAuBxK,SACxFR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,kBAAkBujB,GAAiBvjB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC3D9E6jB,GAOLzT,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAK8T,iBAAmBzT,EAAwB,iBAAIA,EAAQyT,iBAAiB,KAC7E9T,KAAK+T,WAAa1T,EAAkB,WAAIA,EAAQ0T,cAChD/T,KAAKgU,cAAgB3T,EAAqB,cAAIA,EAAQ2T,iBAKvD5T,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpCuG,EAAA,GAAgBlO,KAAK8T,iBAAiBnM,GACtCuG,EAAA,EAAelO,KAAK+T,WAAWpM,EAAIuG,EAAA,IACnCA,EAAA,EAAelO,KAAKgU,cAAcrM,EAAIuG,EAAA,IAKvC9N,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAK8T,iBAAmB5F,EAAA,EAAgBxF,GACxC1I,KAAK+T,WAAa7F,EAAA,EAAexF,EAAIwF,EAAA,GACrClO,KAAKgU,cAAgB9F,EAAA,EAAexF,EAAIwF,EAAA,GAKzC9N,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAIkL,IAEV7T,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAOmL,iBAAmB9T,KAAK8T,iBAC/BnL,EAAOoL,WAAa7F,EAAA,EAAclO,KAAK+T,YACvCpL,EAAOqL,cAAgB9F,EAAA,EAAclO,KAAKgU,eACnCrL,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,uBAAuB6jB,GAAsB7jB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC7DxFikB,GAOL7T,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAKkU,WAAa7T,EAAkB,WAAIA,EAAQ6T,cAChDlU,KAAKmU,mBAAqB9T,EAA0B,mBAAIA,EAAQ8T,sBAChEnU,KAAKoU,cAAgB/T,EAAqB,cAAIA,EAAQ+T,iBACtDpU,KAAKqU,sBAAwBhU,EAA6B,sBAAIA,EAAQgU,yBAKvEjU,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAKkU,WAAWvM,EAAIuG,EAAA,IACnCA,EAAA,EAAelO,KAAKmU,mBAAmBxM,GACvCuG,EAAA,EAAelO,KAAKoU,cAAczM,EAAIuG,EAAA,IACtCA,EAAA,EAAelO,KAAKqU,sBAAsB1M,GAK3CvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAKkU,WAAahG,EAAA,EAAexF,EAAIwF,EAAA,GACrClO,KAAKmU,mBAAqBjG,EAAA,EAAexF,EAAIuD,EAAA,GAC7CjM,KAAKoU,cAAgBlG,EAAA,EAAexF,EAAIwF,EAAA,GACxClO,KAAKqU,sBAAwBnG,EAAA,EAAexF,EAAIuD,EAAA,GAKjD7L,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAIsL,IAEVjU,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAOuL,WAAahG,EAAA,EAAclO,KAAKkU,YACnClU,KAAKmU,qBAAsBxL,EAAOwL,mBAAqBjG,EAAA,EAAqBlO,KAAKmU,qBACrFxL,EAAOyL,cAAgBlG,EAAA,EAAclO,KAAKoU,eACtCpU,KAAKqU,wBAAyB1L,EAAO0L,sBAAwBnG,EAAA,EAAqBlO,KAAKqU,wBACpF1L,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,wBAAwBikB,GAAuBjkB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCrE1FskB,GAILlU,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAKyR,yBAA2BpR,EAAgC,yBAAIA,EAAQoR,4BAK7ErR,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKe,WAAW4G,GACpCuG,EAAA,EAAelO,KAAKyR,yBAAyB9J,EAAIuG,EAAA,IAKlD9N,OAAQsI,GACP1I,KAAKe,WAAamN,EAAA,EAAoBxF,GACtC1I,KAAKyR,yBAA2BvD,EAAA,EAAexF,EAAIwF,EAAA,GAKpD9N,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI2L,IAEd3L,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAO8I,yBAA2BvD,EAAA,EAAclO,KAAKyR,0BAC9C9I,GAKH,SAAA4L,GAAgC7L,GACpC,IAAIsE,EAAM,IAAIsH,GAEb,OADAtH,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,iBAAiBskB,GAAgBtkB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC9C5EwkB,GAKLpU,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKmS,gBAAkB9R,EAAuB,gBAAIA,EAAQ8R,mBAC1DnS,KAAKyU,kBAAoBpU,EAAyB,kBAAIA,EAAQoU,kBAAkB,KAKjFrU,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,EAAelO,KAAKmS,gBAAgBxK,EAAIuG,EAAA,IACxCA,EAAA,GAAiBlO,KAAKyU,kBAAkB9M,GAKzCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKmS,gBAAkBjE,EAAA,EAAexF,EAAIwF,EAAA,GAC1ClO,KAAKyU,kBAAoBvG,EAAA,EAAiBxF,GAK3CtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI6L,IAEVxU,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOwJ,gBAAkBjE,EAAA,EAAclO,KAAKmS,iBAC5CxJ,EAAO8L,kBAAoBzU,KAAKyU,kBACzB9L,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,+BAA+BwkB,GAA8BxkB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCjDxG0kB,GAKLtU,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAI6L,IAClCvU,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI+L,IAEV1U,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,gCAAgC0kB,GAA+B1kB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,gBCnEhH,SAAA2kB,GAA2B7Z,EAAgB8Z,EAAgBC,EAAoBC,GAE3E,IAAIC,EACJ,GAAIF,IAAazD,EAAA,EAAS4D,QAAUH,IAAazD,EAAA,EAAS6D,MAAO,CAE7D,IAAIC,EAAKpa,EAAO,GACZqa,EAAKP,EAAO,GAChB,OAAIM,IAAOC,IACPJ,EAAmB,YAAXG,EAAKC,GACT3jB,KAAK4jB,IAAIL,GAAQD,KAIzBC,EAAQja,EAAO,GAAK8Z,EAAO,GAC3B5kB,OAAAkD,GAAA,EAAAlD,CAAOwC,OAAOC,SAASsiB,IAChBvjB,KAAK4jB,IAAIL,GAAQD,GAK5B,OAHAC,EAAQH,EAAQ9Z,EAChB9K,OAAAkD,GAAA,EAAAlD,CAAOwC,OAAOC,SAASsiB,IAEhBvjB,KAAK4jB,IAAIL,GAAQD,EAI5B,SAAAO,GAAoBC,EAAcC,EAAaT,GAI3C,GAFA9kB,OAAAkD,GAAA,EAAAlD,CAAOwC,OAAOC,SAASqiB,IAEnBQ,EAAGE,YAAcpE,EAAA,EAAiB/b,MAAO,CAEzC,GAAIigB,EAAGT,WAAaU,EAAGV,SACnB,OAAO,EAEX,GAAIS,EAAG/kB,MAAM+E,SAAWigB,EAAGhlB,MAAM+E,OAC7B,OAAO,EAGX,IAAIvE,EAAIukB,EAAG/kB,MAAM+E,OACbhG,EAAG,EACP,IAAKA,EAAE,EAAEA,EAAEyB,EAAEzB,IACT,GAAIqlB,GAAkBW,EAAG/kB,MAAMjB,GAAGimB,EAAGhlB,MAAMjB,GAAGgmB,EAAGT,SAASC,GACtD,OAAO,EAGf,OAAO,EAKP,OAFA9kB,OAAAkD,GAAA,EAAAlD,CAAOslB,EAAGE,YAAcpE,EAAA,EAAiBqE,QACzCzlB,OAAAkD,GAAA,EAAAlD,CAAOslB,EAAGT,WAAaU,EAAGV,UACnBF,GAAkBW,EAAG/kB,MAAMglB,EAAGhlB,MAAM+kB,EAAGT,SAASC,GAazD,SAAAY,GAAyBC,EAAmBC,EAAmBvC,EAA4BC,EAAuBuC,GAGpH,OAAQxC,GAEJ,KAAKlG,EAAa2I,KAEd,OAAOT,GAAWM,EAAUC,EAAU,GAE1C,KAAKzI,EAAa4I,SAEd,OAAOV,GAAWM,EAASC,EAAStC,GAExC,QAuBI,OArBAtjB,OAAAkD,GAAA,EAAAlD,CAAOqjB,IAAiBlG,EAAa6I,SAGrChmB,OAAAkD,GAAA,EAAAlD,CAAOsjB,GAAiB,GAAKA,GAAiB,KAiB9CtjB,OAAAkD,GAAA,EAAAlD,CAA6B,iBAAf6lB,GACPH,GAAeC,EAASC,EAASzI,EAAa4I,SAASF,EAAavC,EAAe,6qDCtGlG2C,EAAc,IAAIC,YAClBC,EAAa,IAAIC,kBACfrT,EAMF3C,YAAYiN,GACRrN,KAAKqW,KAAO,EACRhJ,aAAgB5F,SAChBzH,KAAKwH,KAAO6F,EACLA,aAAgB7R,YACvBwE,KAAKwH,KAAO,IAAIC,SAAS4F,GAE1BrN,KAAKwH,KAAO,IAAIC,SAAS,IAAIjM,YAAY6R,IAIhDiJ,aACE,OAAOtW,KAAKwH,KAAK8O,OAGnBA,WAAWha,GACT0D,KAAKwH,KAAO,IAAIC,SAASnL,GAG3Bia,UACE,OAAOvW,KAAKqW,KAGd/gB,aACE,OAAO0K,KAAKqW,KAGd/gB,WAAWkhB,GACTxW,KAAKqW,KAAOG,EAId9O,iBACE,OAAO1H,KAAKqW,KAQZjW,WAAWqW,GAAwB,GACjC,IAAIC,EAAM1W,KAAKwH,KAAKlQ,WAAW0I,KAAKqW,KAAKI,GAEzC,OADAzW,KAAKqW,MAAQ,EACNK,EAQLtW,WAAWqW,GAAwB,GACjC,IAAIC,EAAM1W,KAAKwH,KAAK5P,WAAWoI,KAAKqW,KAAKI,GAEzC,OADAzW,KAAKqW,MAAQ,EACNK,EAQTtW,UACE,IAAIsW,EAAM1W,KAAKwH,KAAKjT,QAAQyL,KAAKqW,MAEjC,OADArW,KAAKqW,OACEK,EAQTtW,SAASqW,GAAwB,GAC/B,IAAIC,EAAM1W,KAAKwH,KAAKnU,SAAS2M,KAAKqW,KAAKI,GAEvC,OADAzW,KAAKqW,MAAQ,EACNK,EAOTtW,SAASqW,GAAwB,GAC/B,IAAIC,EAAM1W,KAAKwH,KAAK7T,SAASqM,KAAKqW,KAAKI,GAEvC,OADAzW,KAAKqW,MAAQ,EACNK,EAQTtW,WACE,IAAIsW,EAAM1W,KAAKwH,KAAK1V,SAASkO,KAAKqW,MAElC,OADArW,KAAKqW,OACEK,EAGTtW,UACE,IAAIsW,EAAM1W,KAAKwH,KAAK1V,SAASkO,KAAKqW,MAElC,OADArW,KAAKqW,OACEK,EASTtW,UAAUqW,GAAwB,GAChC,IAAIC,EAAM1W,KAAKwH,KAAK1U,UAAUkN,KAAKqW,KAAKI,GAExC,OADAzW,KAAKqW,MAAQ,EACNK,EAQTtW,UAAUqW,GAAwB,GAChC,IAAIC,EAAM1W,KAAKwH,KAAKvT,UAAU+L,KAAKqW,KAAKI,GAExC,OADAzW,KAAKqW,MAAQ,EACNK,EAUTtW,WAAW7P,EAAekmB,GAAwB,GAC/CzW,KAAKwH,KAAKpQ,WAAW4I,KAAKqW,KAAK9lB,EAAMkmB,GACrCzW,KAAKqW,MAAM,EAUdjW,WAAW7P,EAAekmB,GAAwB,GAChDzW,KAAKwH,KAAK9P,WAAWsI,KAAKqW,KAAK9lB,EAAMkmB,GACrCzW,KAAKqW,MAAM,EAQbjW,QAAQ7P,GACNyP,KAAKwH,KAAKnT,QAAQ2L,KAAKqW,KAAK9lB,GAC5ByP,KAAKqW,OAWPjW,SAAS7P,EAAekmB,GAAwB,GAC9CzW,KAAKwH,KAAKrU,SAAS6M,KAAKqW,KAAK9lB,EAAMkmB,GACnCzW,KAAKqW,MAAM,EAUbjW,SAAS7P,EAAekmB,GAAwB,GAC9CzW,KAAKwH,KAAK/T,SAASuM,KAAKqW,KAAK9lB,EAAMkmB,GACnCzW,KAAKqW,MAAM,EAQbjW,SAAS7P,GACPyP,KAAKwH,KAAK5V,SAASoO,KAAKqW,KAAK9lB,GAC7ByP,KAAKqW,OAERjW,QAAQ7P,GACLyP,KAAKwH,KAAK5V,SAASoO,KAAKqW,KAAK9lB,GAC7ByP,KAAKqW,OAUPjW,UAAU7P,EAAekmB,GAAsB,GAC7CzW,KAAKwH,KAAK5U,UAAUoN,KAAKqW,KAAK9lB,EAAMkmB,GACpCzW,KAAKqW,MAAM,EAUbjW,UAAU7P,EAAekmB,GAAsB,GAC7CzW,KAAKwH,KAAKzT,UAAUiM,KAAKqW,KAAK9lB,EAAMkmB,GACpCzW,KAAKqW,MAAM,EAGdjW,OAAOuW,GACH3W,KAAKqW,MAAQM,EAGjBvW,KAAKuW,GACD3W,KAAKqW,MAAQM,EAGjBvW,SACEJ,KAAKqW,KAAO,EAGdjW,gBAAiB9D,GAEZ,GAAKA,EAAL,CAIA0D,KAAKvM,SAAS6I,EAAIhH,QAElB,IAAIshB,EAAkB5W,KAAKwH,KAAK8O,OAAO5O,WAAa1H,KAAKqW,KAGzD,GAAIO,EAAkBta,EAAIhH,OACtB,MAAM,IAAI6D,MAAM,yFAA2FmD,EAAIhH,OAAS,aAAeshB,EAAkB,SAE/I,IAAIhb,WAAWoE,KAAKwH,KAAK8O,QAC/B5U,IAAIpF,EAAI0D,KAAKqW,MACrBrW,KAAKqW,MAAQ/Z,EAAIhH,YAbb0K,KAAKvM,UAAU,GAuB3B2M,iBACE,IAAIyW,EAAS7W,KAAKrM,WAClB,IAAgB,IAAZkjB,EACA,OAAO,KAEX,GAAe,IAAXA,EACA,OAAO,IAAIjb,WAAW,GAI1B,IAAIgb,EAAkB5W,KAAKwH,KAAK8O,OAAO5O,WAAa1H,KAAKqW,KACzD,GAAIO,EAAkBC,EAClB,MAAM,IAAI1d,MAAM,0FAA4F0d,EAAS,aAAeD,EAAkB,SAG1J,IAAIta,EAAM,IAAIV,WAAWoE,KAAKwH,KAAK8O,OAAO5Q,MAAM1F,KAAKqW,KAAKrW,KAAKqW,KAAOQ,IAEtE,OADA7W,KAAKqW,MAAQQ,EACNva,EAGT8D,aACE,IAAI0W,EAAO9W,KAAK/D,iBAIhB,OAAY,MAAR6a,EACK,KAEFX,EAAW/S,OAAO0T,GAI3B1W,YAAYhE,GACV,QAAYnK,IAARmK,GAA6B,OAARA,EAIzB,OAAO4D,KAAKjE,gBAAgBka,EAAWhT,OAAO7G,IAH5C4D,KAAKvM,UAAU,GAYd2M,iBAAiB2W,EAAwB7c,EAAiB5E,GAC/D4E,EAASA,GAAU,EAInB,IAFA,IAAI8c,EAAU,IAAIpb,WAAWmb,GACzBhmB,GAAKuE,GAAU0hB,EAAQ1hB,QAAU4E,EAC5B5K,EAAI4K,EAAQ5K,EAAIyB,EAAGzB,IACxB0Q,KAAKwH,KAAKxH,KAAKqW,QAAUW,EAAQ1nB,GAShC8Q,gBAAgB9K,GACrB,IAAI2hB,EAAM,IAAIrb,WAAWoE,KAAKwH,KAAK8O,OAAOtW,KAAKqW,KAAK/gB,GAEpD,OADA0K,KAAKqW,MAAQ/gB,EACN2hB,EAIF7W,uBAAuB4M,GAC5B,IAAIrb,EAAS,IAAIulB,EAEjB,OADAlK,EAAI/J,OAAOtR,GACJA,EAAO2D,cAmBd4hB,EAEJ9W,cACAJ,KAAK1K,OAAS,EAGhB8K,SACEJ,KAAK1K,OAAS,EAGhB8K,QAAQ7P,GACNyP,KAAK1K,QAAU,EAGjB8K,SAAS7P,GACPyP,KAAK1K,QAAU,EAGjB8K,SAAS7P,GACPyP,KAAK1K,QAAU,EAGjB8K,SAAS7P,GACPyP,KAAK1K,QAAQ,EAGf8K,WAAW7P,GACTyP,KAAK1K,QAAU,EAGjB8K,UAAU7P,GACRyP,KAAK1K,QAAU,EAGjB8K,UAAU7P,GACRyP,KAAK1K,QAAU,EAIjB8K,SAAS7P,GACPyP,KAAK1K,QAAU,EAGjB8K,WAAW7P,GACTyP,KAAK1K,QAAU,EAGjB8K,UAAU7P,GACRyP,KAAK1K,QAAU,EAGjB8K,iBAAiB2W,EAAwB7c,EAAQwN,GAC/CxN,EAASA,GAAU,EACnBlK,OAAAsW,EAAA,EAAAtW,CAAO+mB,aAAoBvb,aAC3BwE,KAAK1K,QAAWoS,GAAcqP,EAASrP,WAGzCtH,gBAAgB9D,GACTA,GAGD0D,KAAKvM,SAAS6I,EAAIhH,QAClB0K,KAAK1K,QAAUgH,EAAIhH,QAHnB0K,KAAKvM,SAAS,GAQpB2M,YAAYhE,GAEV,QAAYnK,IAARmK,GAA6B,OAARA,EAIzB,OAAO4D,KAAKjE,gBAAgBka,EAAWhT,OAAO7G,IAH1C4D,KAAKvM,UAAU,IAWf,SAAA0jB,EAA6B/a,GACjC,OAAO6Z,EAAWhT,OAAO7G,qJCxbhBgb,KAmBL,SAAAC,EAA8BxnB,EAAeynB,EAAmBrU,EAAmBG,EAAmBmU,GAGxG,GAAIH,EAAcjmB,eAAetB,GAC7B,MAAM,IAAIsJ,MAAM,+CAAiDtJ,EAAO,8BAG5EG,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBiT,GAC7BjT,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBoT,GAE7B,IAAIoU,EAAa,IAAIC,EAAA,GACjB5nB,KAAMA,EACNoT,OAAQA,EACRG,OAAQA,EACRC,aAAciU,EAAY,GAC1BC,OAAQA,IAKZ,OAFAH,EAAcvnB,GAAQ2nB,EAEfF,EAGL,SAAAI,EAAyBC,GAC3B,QAASP,EAAcO,GAGrB,SAAAC,EAAyBD,GAE3B,OADA3nB,OAAAsW,EAAA,EAAAtW,CAAO0nB,EAAeC,IACfP,EAAcO,sCCjDbE,gCAMN,SAAAC,EAA0CzK,EAAkC1F,GACjFA,EAAI5T,UAAUsZ,GAIT,SAAA0K,EAA0CrP,GAC/C,OAAOA,EAAIzU,aAZZ,SAAY4jB,GACTA,IAAA,iBACDA,IAAA,iBAFF,CAAYA,WAkBZ7nB,OAAAyd,EAAA,EAAAzd,CAAoB,2BAA2B6nB,EAAyBC,EAAgCC,EAAgC,sCCHlIC,EAQL5X,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKiY,sBAAwB5X,EAA6B,sBAAIA,EAAQ4X,sBAAsB,KAC5FjY,KAAKkY,YAAc7X,EAAmB,YAAIA,EAAQ6X,YAAY,KAC9DlY,KAAKmY,aAAe9X,EAAoB,aAAIA,EAAQ8X,aAAa,KACjEnY,KAAKoY,YAAc/X,EAAmB,YAAIA,EAAQ+X,YAAY,KAC9DpY,KAAKqY,kBAAoBhY,EAAyB,kBAAIA,EAAQgY,kBAAkB,KAKjFjY,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKiY,sBAAsBtQ,GAC3CmQ,EAA+B9X,KAAKkY,YAAYvQ,GAChD3X,OAAAsoB,EAAA,EAAAtoB,CAA0BgQ,KAAKmY,aAAaxQ,GAC5CuG,EAAA,GAAoBlO,KAAKoY,YAAYzQ,GACrCuG,EAAA,GAAgBlO,KAAKqY,kBAAkB1Q,GAKxCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKiY,sBAAwB/J,EAAA,EAAgBxF,GAC7C1I,KAAKkY,YAAcH,EAA+BrP,GAClD1I,KAAKmY,aAAenoB,OAAAsoB,EAAA,EAAAtoB,CAA0B0Y,GAC9C1I,KAAKoY,YAAclK,EAAA,EAAoBxF,GACvC1I,KAAKqY,kBAAoBnK,EAAA,EAAgBxF,GAK1CtI,MAAOuI,GAUN,OATIA,IACHA,EAAS,IAAIqP,GAEVhY,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOsP,sBAAwBjY,KAAKiY,sBACpCtP,EAAOuP,YAAclY,KAAKkY,YAC1BvP,EAAOwP,aAAenY,KAAKmY,aAC3BxP,EAAOyP,YAAcpY,KAAKoY,YAC1BzP,EAAO0P,kBAAoBrY,KAAKqY,kBACzB1P,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,2BAA2BgoB,EAA0BhoB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qBCvEhGuoB,EAMLnY,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAKwY,sBAAwBnY,EAA6B,sBAAIA,EAAQmY,sBAAsB,KAC5FxY,KAAKyY,cAAgBpY,EAAqB,cAAIA,EAAQoY,cAAc,IAAIC,EAAA,EACxE1Y,KAAK2Y,YAActY,EAAmB,YAAIA,EAAQsY,YAAY,KAK/DvY,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,GAAgBlO,KAAKwY,sBAAsB7Q,GAC3C3H,KAAKyY,cAAcxV,OAAO0E,GAC1BuG,EAAA,GAAoBlO,KAAK2Y,YAAYhR,GAKtCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAKwY,sBAAwBtK,EAAA,EAAgBxF,GAC7C1I,KAAKyY,cAAcrV,OAAOsF,GAC1B1I,KAAK2Y,YAAczK,EAAA,EAAoBxF,GAKxCtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAI4P,GAEVvY,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAO6P,sBAAwBxY,KAAKwY,sBAChCxY,KAAKyY,gBAAiB9P,EAAO8P,cAAgBzY,KAAKyY,cAActP,SACpER,EAAOgQ,YAAc3Y,KAAK2Y,YACnBhQ,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,4BAA4BuoB,EAA2BvoB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC9DlG4oB,EAGLxY,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EAKzE9H,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAK3BvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAK3BtI,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAIiQ,GAEV5Y,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAC7DR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,4BAA4B4oB,EAA2B5oB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC3ClG6oB,EAGLzY,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAK5E1I,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAK5BvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAK5BtI,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAIkQ,GAEV7Y,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SAChER,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,6BAA6B6oB,EAA4B7oB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC3CpG8oB,EAGL1Y,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAK5E1I,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAK5BvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAK5BtI,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAImQ,GAEV9Y,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SAChER,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,eAAe8oB,EAAc9oB,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBC3CxE+oB,EAGE3Y,YAAYC,GACJA,EAAUA,MACVL,KAAKgZ,kBAAoB3Y,EAAQ2Y,kBACjChZ,KAAKiZ,kBAAoB5Y,EAAQ4Y,kBACjCjZ,KAAKkZ,8BAAgC7Y,EAAQ6Y,8BAiCrD9Y,OAAQuH,GACAuG,EAAA,GAAgBlO,KAAKgZ,kBAAkBrR,GACvCuG,EAAA,GAAoBlO,KAAKiZ,kBAAkBtR,GAC3CuG,EAAA,GAAoBlO,KAAKkZ,8BAA8BvR,GAItEvH,OAAQsI,GAEO1I,KAAKgZ,kBAAoB9K,EAAA,EAAgBxF,GACzC1I,KAAKiZ,kBAAoB/K,EAAA,EAAoBxF,GAC7C1I,KAAKkZ,8BAAgChL,EAAA,EAAoBxF,GAIxEtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIoQ,GAGApQ,EAAOqQ,kBAAoBhZ,KAAKgZ,kBAChCrQ,EAAOsQ,kBAAoBjZ,KAAKiZ,kBAChCtQ,EAAOuQ,8BAAgClZ,KAAKkZ,8BACnDvQ,GAST3Y,OAAAme,EAAA,EAAAne,CAA0B,oCAAoC+oB,EAAkC/oB,OAAA8N,EAAA,EAAA9N,CAAmBA,OAAAnB,EAAA,gBAAAmB,WC5E7GmpB,EASE/Y,YAAYC,GACRA,EAAUA,MAEVL,KAAKoZ,QAAU/Y,EAAQ+Y,SAAW,WAGtChZ,OAAQuH,GACJuG,EAAA,GAAgBlO,KAAKoZ,QAAQzR,GAGjCvH,OAAQsI,GACJ1I,KAAKoZ,QAAUlL,EAAA,EAAgBxF,GAGnCtI,MAAOuI,GAKH,OAJIA,IACAA,EAAS,IAAIwQ,GAEjBxQ,EAAOyQ,QAAUpZ,KAAKoZ,QACfzQ,GASnB3Y,OAAAme,EAAA,EAAAne,CAA0B,mCAAmCmpB,EAAiCnpB,OAAA8N,EAAA,EAAA9N,CAAmBA,OAAAnB,EAAA,gBAAAmB,iBCxC/Fke,EAAA,EACAA,EAAA,QA0BZmL,UAA8BC,EAAA,EAKpClZ,YAAYC,GAERQ,aAOgC5O,KANhCoO,EAAUA,OAMG4P,iBACTjQ,KAAKiQ,eAAiB5P,EAAQ4P,qBAQPhe,IAAtBoO,EAAQkZ,YACTvZ,KAAKuZ,UAAYlZ,EAAQkZ,WAY1BnZ,OAAOzO,GAGVuc,EAAA,GAAgBlO,KAAKiQ,eAAete,GACpCuc,EAAA,GAAgBlO,KAAKuZ,UAAU5nB,GAS5ByO,OAAOzO,GAEVqO,KAAKiQ,eAAiB/B,EAAA,EAAgBvc,GACtCqO,KAAKuZ,UAAYrL,EAAA,EAAgBvc,GAG9ByO,MAAMuI,GAOX,YANe1W,IAAX0W,IACFA,EAAS,IAAI0Q,GAGf1Q,EAAO4Q,UAAYvZ,KAAKuZ,UACxB5Q,EAAOsH,eAAiBjQ,KAAKiQ,eACtBtH,GA5DO0Q,EAAAzW,sBAA4C5S,OAAA8N,EAAA,EAAA9N,CAAmBA,OAAAnB,EAAA,gBAAAmB,IAkE/EA,OAAAme,EAAA,EAAAne,CAA0B,iBAAiBqpB,EAAerpB,OAAA8N,EAAA,EAAA9N,CAAmBA,OAAAnB,EAAA,gBAAAmB,+dC7FvEwpB,UAAoCd,EAAA,EACtCe,cACI,OAAQzZ,KAAK0Z,UAAU3f,UAAmC,IAAvBiG,KAAK2Z,gBAAyB7gB,KAAKoC,wDCPxE,SAAA0e,EAA0BtD,EAAsBuD,EAAeC,GAGjE,OAFAD,EAAQA,GAAS,GACjBC,EAAMA,GAAOxD,EAAO5O,YACVmS,EAAQ,GACP7pB,OAAA+pB,EAAA,EAAA/pB,CAAQsmB,EAAOuD,EAAMC,EAAID,GAE7B7pB,OAAA+pB,EAAA,EAAA/pB,CAAQsmB,EAAOuD,EAAM,IAAM,QAAU7pB,OAAA+pB,EAAA,EAAA/pB,CAAQsmB,EAAOwD,EAAK,GAAG,ICRjE,SAAAE,EAAgC5d,GAClC,OAAOA,EAAIkE,OAAO,EAAG,GAAGuH,cAAgBzL,EAAIkE,OAAO,GAGvD,IAAI2Z,EAAQ,IAAIzd,WAAW,GACvB0d,EAAQ,IAAI1d,WAAW,GACrB,SAAA2d,EAA0BxqB,GAC5B,IAAIsR,EAAOtR,EAAE6M,WAAW,GACxB,OAAOyE,GAAQgZ,GAAShZ,GAAQiZ,EAM9B,SAAAE,EAA2Bhe,GAC7B,IAAIie,EAAUje,EAAIkE,OAAO,EAAG,GAAGga,cAAgBle,EAAIkE,OAAO,GAI1D,OAHI+Z,EAAO/kB,OAAO,GAAK6kB,EAAgB/d,EAAI,KAAO+d,EAAgB/d,EAAI,MAClEie,EAAUje,EAAIkE,OAAO,EAAG,GAAGga,cAAgBle,EAAIkE,OAAO,IAEnD+Z,EClBL,SAAAE,IAEF,OAAOC,YAAYtf,MCFvB,IAAIuf,EAAiB,mCACjBC,EAAiB,aACf,SAAAC,EAAoCC,GAEtC,IAAIC,EAAQD,EAAKxhB,WAAW0hB,QAAQL,EAAgB,IAChDJ,EAASQ,EAAMnV,MAAMmV,EAAM1Q,QAAQ,KAAK,EAAG0Q,EAAM1Q,QAAQ,MAAM4Q,MAAML,GAGzE,OAFc,OAAXL,IACCA,MACGA,cCXPW,EAAgC,oBAAX3qB,OAAyBA,OAAOa,UAAY,KAG/D,SAAA+pB,EAAkBC,EAAGvf,EAAEwf,EAAQC,GAGnC,GAAIF,IAAMvf,EAAG,OAAa,IAANuf,GAAW,EAAIA,GAAM,EAAIvf,EAE7C,GAAS,MAALuf,GAAkB,MAALvf,EAAW,OAAO,EAEnC,GAAIuf,GAAMA,EAAG,OAAOvf,GAAMA,EAE1B,IAAI0f,SAAcH,EAClB,OAAa,aAATG,GAAgC,WAATA,GAAiC,iBAAL1f,IAMzD,SAAgBuf,EAAGvf,EAAGwf,EAAQC,GAE1B,IAAIE,EAAYliB,SAAS3J,KAAKyrB,GAC9B,GAAII,IAAcliB,SAAS3J,KAAKkM,GAAI,OAAO,EAC3C,OAAQ2f,GAEN,IAAK,kBAEL,IAAK,kBAGH,MAAO,GAAKJ,GAAM,GAAKvf,EACzB,IAAK,kBAGH,OAAKuf,IAAOA,GAAWvf,IAAOA,EAEhB,IAANuf,EAAU,GAAKA,GAAM,EAAIvf,GAAKuf,IAAOvf,EAC/C,IAAK,gBACL,IAAK,mBAIH,OAAQuf,IAAOvf,EACjB,IAAK,kBACH,OAAOqf,EAAYO,QAAQ9rB,KAAKyrB,KAAOF,EAAYO,QAAQ9rB,KAAKkM,GAGpE,IAAI6f,EAA0B,mBAAdF,EAChB,IAAKE,EAAW,CACd,GAAgB,iBAALN,GAA6B,iBAALvf,EAAe,OAAO,EAIzD,IAAI8f,EAAQP,EAAEpY,YAAa4Y,EAAQ/f,EAAEmH,YACrC,GAAI2Y,IAAUC,KAA8B,mBAAZ,GAA0BD,aAAiBA,GAC/B,mBAAZ,GAA2BC,aAAiBA,IACpD,gBAAiBR,GAAK,gBAAiBvf,EAC7D,OAAO,EAQXwf,EAASA,MACTC,EAASA,MACT,IAAI9lB,EAAS6lB,EAAO7lB,OACpB,KAAOA,KAGL,GAAI6lB,EAAO7lB,KAAY4lB,EAAG,OAAOE,EAAO9lB,KAAYqG,EAQtD,GAJAwf,EAAO9iB,KAAK6iB,GACZE,EAAO/iB,KAAKsD,GAGR6f,EAAW,CAGb,IADAlmB,EAAS4lB,EAAE5lB,UACIqG,EAAErG,OAAQ,OAAO,EAEhC,KAAOA,KACL,IAAK2lB,EAAQC,EAAE5lB,GAASqG,EAAErG,GAAS6lB,EAAQC,GAAS,OAAO,MAExD,CAEL,IACIvqB,EADA8qB,EAAO3rB,OAAO2rB,KAAKT,GAIvB,GAFA5lB,EAASqmB,EAAKrmB,OAEVtF,OAAO2rB,KAAKhgB,GAAGrG,SAAWA,EAAQ,OAAO,EAC7C,KAAOA,KAGL,GADAzE,EAAM8qB,EAAKrmB,IACLqG,EAAExK,eAAeN,KAAQoqB,EAAQC,EAAErqB,GAAM8K,EAAE9K,GAAMsqB,EAAQC,GAAU,OAAO,EAMpF,OAFAD,EAAOS,MACPR,EAAOQ,OACA,EAzFFC,CAAOX,EAAGvf,EAAEwf,EAAOC,GCCtB,SAAAU,EAAmBvrB,EAAgBgQ,GAErC,OADAvQ,OAAAkD,EAAA,EAAAlD,MAAgBiC,IAATsO,GACChQ,EAAQgQ,EAWd,SAAAwb,EAAqBxrB,EAAOgQ,GAE9B,OADAvQ,OAAAkD,EAAA,EAAAlD,MAAgBiC,IAATsO,IACEhQ,EAAQgQ,KAAUA,EASzB,SAAAqD,EAA4BrT,GAC9B,YAAmB0B,IAAV1B,GAAoC,OAAVA,yYCtCvC,IAAIyrB,EAA8B,WAE9BC,EAAqBD,EACnB,SAAAE,IAEF,OADAD,GAAsB,EAIpB,SAAAE,IACF,OAAQ,EAEN,SAAAC,EAA0B7rB,GAC5B,OAAOA,GAASyrB,8xBCAdK,EAILjc,YAAaC,GACZA,EAAUA,MACVL,KAAKoM,OAAS/L,EAAc,OAAIA,EAAQ+L,OAAO,KAC/CpM,KAAKsc,KAAOjc,EAAY,KAAIA,EAAQic,KAAK,KAK1Clc,OAAQuH,GACP,IAAI9K,EAAe,EACA,MAAfmD,KAAKoM,SAAkBvP,GAAgB,GAC1B,MAAbmD,KAAKsc,OAAgBzf,GAAgB,GACzC8K,EAAI/V,SAASiL,GACK,MAAfmD,KAAKoM,QAAkB3D,EAAA,GAAgBzI,KAAKoM,OAAOzE,GACtC,MAAb3H,KAAKsc,MAAgB7T,EAAA,GAAgBzI,KAAKsc,KAAK3U,GAKnDvH,OAAQsI,GACP,IAAI7L,EAAe6L,EAAI5W,WAEnByqB,EAAsC,IAAN,EAAf1f,GADuB,IAAN,EAAfA,KAItBmD,KAAKoM,OAAS3D,EAAA,EAAgBC,IAE5B6T,IACFvc,KAAKsc,KAAO7T,EAAA,EAAgBC,IAM9BtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI0T,GAEd1T,EAAOyD,OAASpM,KAAKoM,OACrBzD,EAAO2T,KAAOtc,KAAKsc,KACZ3T,GAKH,SAAA6T,EAA+B9T,GACnC,IAAIsE,EAAM,IAAIqP,EAEb,OADArP,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAA4Y,EAAA,EAAA5Y,CAA0B,gBAAgBqsB,EAAersB,OAAA6Y,EAAA,EAAA7Y,CAAmB,GAAG,sICtEnEsf,UASN,SAAAmN,EAAoCpP,EAA4B1F,GACrEA,EAAI5T,UAAUsZ,GAIT,SAAAqP,EAAoChU,GACzC,OAAOA,EAAIzU,aAfZ,SAAYqb,GACTA,IAAA,mBACDA,IAAA,mBACAA,IAAA,eACAA,IAAA,qBACAA,IAAA,qBALF,CAAYA,WAqBZtf,OAAA2sB,EAAA,EAAA3sB,CAAoB,qBAAqBsf,EAAmBmN,EAA0BC,EAA0B,oCCvBhH,IAAAE,EAAA5sB,OAAAkB,UAAAC,eACA0rB,EAAA,IASA,SAAAC,KA6CA,SAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,sBAAAF,EACA,UAAAG,UAAA,mCAGA,IAAAC,EAAA,IAtBA,SAAAJ,EAAAC,EAAAC,GACApd,KAAAkd,KACAld,KAAAmd,UACAnd,KAAAod,SAAA,EAmBA,CAAAF,EAAAC,GAAAH,EAAAI,GACAG,EAAAV,IAAAI,IAMA,OAJAD,EAAAQ,QAAAD,GACAP,EAAAQ,QAAAD,GAAAL,GACAF,EAAAQ,QAAAD,IAAAP,EAAAQ,QAAAD,GAAAD,GADAN,EAAAQ,QAAAD,GAAAllB,KAAAilB,IADAN,EAAAQ,QAAAD,GAAAD,EAAAN,EAAAS,gBAIAT,EAUA,SAAAU,EAAAV,EAAAO,GACA,KAAAP,EAAAS,aAAAT,EAAAQ,QAAA,IAAAV,SACAE,EAAAQ,QAAAD,GAUA,SAAAI,IACA3d,KAAAwd,QAAA,IAAAV,EACA9c,KAAAyd,aAAA,EAxEAztB,OAAAY,SACAksB,EAAA5rB,UAAAlB,OAAAY,OAAA,OAMA,IAAAksB,GAAAc,YAAAf,GAAA,IA2EAc,EAAAzsB,UAAA2sB,WAAA,WACA,IACAtM,EACA1hB,EAFAiuB,KAIA,OAAA9d,KAAAyd,aAAA,OAAAK,EAEA,IAAAjuB,KAAA0hB,EAAAvR,KAAAwd,QACAZ,EAAAntB,KAAA8hB,EAAA1hB,IAAAiuB,EAAAzlB,KAAAwkB,EAAAhtB,EAAA6V,MAAA,GAAA7V,GAGA,OAAAG,OAAA+tB,sBACAD,EAAAE,OAAAhuB,OAAA+tB,sBAAAxM,IAGAuM,GAUAH,EAAAzsB,UAAA+sB,UAAA,SAAAhB,GACA,IAAAM,EAAAV,IAAAI,IACAiB,EAAAle,KAAAwd,QAAAD,GAEA,IAAAW,EAAA,SACA,GAAAA,EAAAhB,GAAA,OAAAgB,EAAAhB,IAEA,QAAA5tB,EAAA,EAAAC,EAAA2uB,EAAA5oB,OAAA6oB,EAAA,IAAA9oB,MAAA9F,GAAyDD,EAAAC,EAAOD,IAChE6uB,EAAA7uB,GAAA4uB,EAAA5uB,GAAA4tB,GAGA,OAAAiB,GAUAR,EAAAzsB,UAAAktB,cAAA,SAAAnB,GACA,IAAAM,EAAAV,IAAAI,IACAgB,EAAAje,KAAAwd,QAAAD,GAEA,OAAAU,EACAA,EAAAf,GAAA,EACAe,EAAA3oB,OAFA,GAYAqoB,EAAAzsB,UAAAmtB,KAAA,SAAApB,EAAAqB,EAAAC,EAAAC,EAAAC,EAAAC,GACA,IAAAnB,EAAAV,IAAAI,IAEA,IAAAjd,KAAAwd,QAAAD,GAAA,SAEA,IAEAtW,EACA3X,EAHA2uB,EAAAje,KAAAwd,QAAAD,GACA7hB,EAAA+K,UAAAnR,OAIA,GAAA2oB,EAAAf,GAAA,CAGA,OAFAe,EAAAb,MAAApd,KAAA2e,eAAA1B,EAAAgB,EAAAf,QAAAjrB,GAAA,GAEAyJ,GACA,cAAAuiB,EAAAf,GAAAztB,KAAAwuB,EAAAd,UAAA,EACA,cAAAc,EAAAf,GAAAztB,KAAAwuB,EAAAd,QAAAmB,IAAA,EACA,cAAAL,EAAAf,GAAAztB,KAAAwuB,EAAAd,QAAAmB,EAAAC,IAAA,EACA,cAAAN,EAAAf,GAAAztB,KAAAwuB,EAAAd,QAAAmB,EAAAC,EAAAC,IAAA,EACA,cAAAP,EAAAf,GAAAztB,KAAAwuB,EAAAd,QAAAmB,EAAAC,EAAAC,EAAAC,IAAA,EACA,cAAAR,EAAAf,GAAAztB,KAAAwuB,EAAAd,QAAAmB,EAAAC,EAAAC,EAAAC,EAAAC,IAAA,EAGA,IAAApvB,EAAA,EAAA2X,EAAA,IAAA5R,MAAAqG,EAAA,GAAyCpM,EAAAoM,EAASpM,IAClD2X,EAAA3X,EAAA,GAAAmX,UAAAnX,GAGA2uB,EAAAf,GAAA1W,MAAAyX,EAAAd,QAAAlW,OACG,CACH,IACA1K,EADAjH,EAAA2oB,EAAA3oB,OAGA,IAAAhG,EAAA,EAAeA,EAAAgG,EAAYhG,IAG3B,OAFA2uB,EAAA3uB,GAAA8tB,MAAApd,KAAA2e,eAAA1B,EAAAgB,EAAA3uB,GAAA4tB,QAAAjrB,GAAA,GAEAyJ,GACA,OAAAuiB,EAAA3uB,GAAA4tB,GAAAztB,KAAAwuB,EAAA3uB,GAAA6tB,SAA2D,MAC3D,OAAAc,EAAA3uB,GAAA4tB,GAAAztB,KAAAwuB,EAAA3uB,GAAA6tB,QAAAmB,GAA+D,MAC/D,OAAAL,EAAA3uB,GAAA4tB,GAAAztB,KAAAwuB,EAAA3uB,GAAA6tB,QAAAmB,EAAAC,GAAmE,MACnE,OAAAN,EAAA3uB,GAAA4tB,GAAAztB,KAAAwuB,EAAA3uB,GAAA6tB,QAAAmB,EAAAC,EAAAC,GAAuE,MACvE,QACA,IAAAvX,EAAA,IAAA1K,EAAA,EAAA0K,EAAA,IAAA5R,MAAAqG,EAAA,GAA0Da,EAAAb,EAASa,IACnE0K,EAAA1K,EAAA,GAAAkK,UAAAlK,GAGA0hB,EAAA3uB,GAAA4tB,GAAA1W,MAAAyX,EAAA3uB,GAAA6tB,QAAAlW,IAKA,UAYA0W,EAAAzsB,UAAA0tB,GAAA,SAAA3B,EAAAC,EAAAC,GACA,OAAAJ,EAAA/c,KAAAid,EAAAC,EAAAC,GAAA,IAYAQ,EAAAzsB,UAAAksB,KAAA,SAAAH,EAAAC,EAAAC,GACA,OAAAJ,EAAA/c,KAAAid,EAAAC,EAAAC,GAAA,IAaAQ,EAAAzsB,UAAAytB,eAAA,SAAA1B,EAAAC,EAAAC,EAAAC,GACA,IAAAG,EAAAV,IAAAI,IAEA,IAAAjd,KAAAwd,QAAAD,GAAA,OAAAvd,KACA,IAAAkd,EAEA,OADAQ,EAAA1d,KAAAud,GACAvd,KAGA,IAAAie,EAAAje,KAAAwd,QAAAD,GAEA,GAAAU,EAAAf,GAEAe,EAAAf,QACAE,IAAAa,EAAAb,MACAD,GAAAc,EAAAd,aAEAO,EAAA1d,KAAAud,OAEG,CACH,QAAAjuB,EAAA,EAAAiiB,KAAAjc,EAAA2oB,EAAA3oB,OAA2DhG,EAAAgG,EAAYhG,KAEvE2uB,EAAA3uB,GAAA4tB,QACAE,IAAAa,EAAA3uB,GAAA8tB,MACAD,GAAAc,EAAA3uB,GAAA6tB,cAEA5L,EAAAlZ,KAAA4lB,EAAA3uB,IAOAiiB,EAAAjc,OAAA0K,KAAAwd,QAAAD,GAAA,IAAAhM,EAAAjc,OAAAic,EAAA,GAAAA,EACAmM,EAAA1d,KAAAud,GAGA,OAAAvd,MAUA2d,EAAAzsB,UAAA2tB,mBAAA,SAAA5B,GACA,IAAAM,EAUA,OARAN,GACAM,EAAAV,IAAAI,IACAjd,KAAAwd,QAAAD,IAAAG,EAAA1d,KAAAud,KAEAvd,KAAAwd,QAAA,IAAAV,EACA9c,KAAAyd,aAAA,GAGAzd,MAMA2d,EAAAzsB,UAAA4tB,IAAAnB,EAAAzsB,UAAAytB,eACAhB,EAAAzsB,UAAA6rB,YAAAY,EAAAzsB,UAAA0tB,GAKAjB,EAAAoB,SAAAlC,EAKAc,iBAMA5uB,EAAAD,QAAA6uB,2DCzUM,SAAAqB,EAA8B1I,EAAQzlB,EAAKouB,EAAYC,GACzD,MAAM,IAAI/lB,MAAM,mBAGd,SAAAgmB,EAAqBtuB,GACvB,MAAM,IAAIsI,MAAM,mBAad,SAAAimB,EAAgBC,EAASC,GAC3B,MAAM,IAAInmB,MAAM,mBAmBd,SAAAomB,EAAsCC,EAAiBC,EAAWpf,GACpE,MAAM,IAAIlH,MAAM,mBAGd,SAAAumB,EAA6BpJ,EAAQzlB,EAAKouB,EAAYU,EAAST,GACjE,MAAM,IAAI/lB,MAAM,mBAYd,SAAAymB,EAAoCC,EAAOxf,GAC7C,MAAM,IAAIlH,MAAM,mBAGd,SAAA2mB,EAA6BC,EAAQC,EAAM3f,GAC7C,MAAM,IAAIlH,MAAM,mBCApB,IAAY8mB,EAYN,SAAAC,EAAkBC,GAEpB,GAAmB,iBAARA,EACP,OAAOF,EAAeG,QAE1B,IAAIlF,EAAIiF,EAAIpqB,MAAM,KAElB,OAAImlB,EAAE5lB,OAAS,EACJ2qB,EAAeG,QAElBH,EAAe/E,EAAE,KACb+E,EAAeG,QAGzB,SAAAC,EAAiB9vB,GACnB,IAAI+vB,EAAkDL,EAAe1vB,IAAU0vB,EAAeG,QAC9F,GAAIE,IAAmBL,EAAeG,QAClC,MAAM,IAAIjnB,MAAM,4DAA8D5I,GAElF,OAAO+vB,EAaX,SAAAC,EAAyBjK,EAAQkK,GACZrB,IACjB,OAAOH,IAIX,SAAAyB,EAA+BZ,EAAoBa,GAG/C1wB,OAAAkD,EAAA,EAAAlD,CAAO6vB,aAAiBjkB,YACxB5L,OAAAkD,EAAA,EAAAlD,CAAO0wB,aAAuB9kB,YAG9B,IAEI+kB,ED/GF,SAA6BD,GAC/B,MAAM,IAAIvnB,MAAM,mBC4GLynB,GAEgBC,gBACvBrB,EAAkBK,EAAMna,MAAM,EAAGma,EAAMvqB,OAASqrB,GAChDlB,EAAYI,EAAMna,MAAMma,EAAMvqB,OAASqrB,GAC3C,OAVqB3gB,KAUC8gB,iBAAiBtB,EAAiBC,EAAWiB,GAIvE,SAAAK,EAAgCzK,EAAqBmJ,EAAWiB,GAG7CtB,IAEf,OAAOG,oKAvEX,SAAYU,GACRA,EAAA,kBACAA,EAAA,uDACAA,EAAA,+DACAA,EAAA,yEACAA,EAAA,+DACAA,EAAA,yEACAA,EAAA,+DACAA,EAAA,yEACAA,EAAA,2EATJ,CAAYA,WAyEZ,IAAIe,EAA0BD,EAW9B,SAAAE,EAA8B3K,EAAQkK,GAE9BA,aAAsB5kB,aACtB4kB,EAAapB,KAGID,IAIrB,OAAOS,IAgBX,IAAIsB,EAAwBD,EAQ5B,SAAAE,EAAyB7K,EAAQ8K,GACZjC,IACjB,OAAOO,IAKL,SAAA2B,EAA+B1I,EAAaP,GAE9C,IAGIkJ,GACAC,kBAAmB,KACnBC,kBAAmB,KACnBtC,UAAW,MAGf,GAAI9G,GAAeO,EAAa,CATrB3Y,KAWoByhB,0BAXpBzhB,KAYuB0hB,2BAZvB1hB,KAauB2hB,oBAbvB3hB,KAcmB2gB,gBAdnB3gB,KAea4hB,6BAfb5hB,KAgBa6hB,UAEpBP,EAAYC,kBAAoBzB,IAChCwB,EAAYE,kBAAoB1B,IAEpC,OAAOwB,EAkCX,IAAIQ,GACAxB,eAAgBL,EAAe8B,cAE/BC,mBAAoB,GACpBN,2BAA4B,GAC5BD,0BAA2B,GAC3BE,oBAAqB,GACrBhB,gBAAiB,GAEjBsB,2BAA4B,IAC5BC,2BAA4B,IAG5BzB,sBAAuBA,EACvB0B,eAAgBlB,EAChBH,iBAAkBC,EAClBqB,6BAA8B,6CAG9BC,kBAzFJ,SAA6B/L,EAAQ8K,GAGjC,OADiBjC,IACVO,KAuFP4C,kBAlKJ,SAA6BhM,EAAQkK,GAEjC,OADiBrB,IACVH,KAiKPuD,8BAA+B,2CAE/BC,iBAAkB,GAElBZ,6BAA8B,cAE9BC,UAAW,OACXR,qBAAsBA,GAItBoB,GACAnC,eAAgBL,EAAeyC,SAC/BV,mBAAoB,GACpBN,2BAA4B,GAC5BD,0BAA2B,GAC3BE,oBAAqB,GACrBhB,gBAAiB,GAEjBsB,2BAA4B,IAC5BC,2BAA4B,IAE5BzB,sBAAuBA,EACvB0B,eAAgBjB,EAChBJ,iBAAkBE,EAClBoB,6BAA8B,6CAG9BC,kBAAmBlB,EACnBmB,kBAAmB/B,EACnBgC,8BAA+B,4CAE/BC,iBAAkB,GAGlBZ,6BAA8B,cAC9BC,UAAW,OACXR,qBAAsBA,GAItBsB,GACArC,eAAgBL,EAAe2C,eAE/BZ,mBAAoB,GACpBN,2BAA4B,GAC5BD,0BAA2B,GAC3BE,oBAAqB,GACrBhB,gBAAiB,GAEjBsB,2BAA4B,KAC5BC,2BAA4B,KAE5BzB,sBAAuBA,EACvB0B,eAhKJ,SAAgC7L,EAAQkK,GAUpC,OARIA,aAAsB5kB,aACtB4kB,EAAapB,KAGID,IAIdS,KAuJPkB,iBAvLJ,SAAmCxK,EAAQmJ,EAAWiB,GAKlD,OAFetB,IAERG,KAmLP6C,6BAA8B,+CAG9BC,kBAAmBlB,EACnBmB,kBAAmB/B,EACnBgC,8BAA+B,4CAE/BC,iBAAkB,GAGlBZ,6BAA8B,cAC9BC,UAAW,SACXR,qBAAsBA,GAGpB,SAAAwB,EAA2BvC,GAE7B,OAAQA,GACJ,KAAKL,EAAenK,KAChB,OAAO,KACX,KAAKmK,EAAe8B,cAChB,OAAOD,EACX,KAAK7B,EAAeyC,SAChB,OAAOD,EACX,KAAKxC,EAAe2C,eAChB,OAAOD,EACX,QACI,OAAO,MAIb,SAAAG,EAA2B7J,EAAgC8J,EAA0BC,EAAoB1C,GAE3G,IAAKyC,IAAgB9J,EACjB,OAAO,KAGX,IAAIgK,EAAiBJ,EAAiBvC,GACtC,IAAK2C,EACD,OAAO,KAGX,IAAI3M,EAAS,IAAI1a,WAAWqd,EAAkBvR,WAAaqb,EAAYrb,YACvE4O,EAAO5U,IAAIuX,GACX3C,EAAO5U,IAAIqhB,EAAY9J,EAAkBvR,YAGzC,IAAI+X,EAAYwD,EAAed,eAAe7L,EAAQ0M,GAEtD,OAAO,IAAIE,EAAA,GAEPzD,UAAWA,EAKXP,UAAW+D,EAAeb,yHC9WhB,IAAIlM,YA4KhB,SAAAiN,EAA4BtO,EAAUuO,EAAY/f,GAEpD,IAAI9S,EACJ,OAAQskB,GACJ,KAAKwO,EAAA,EAASC,MACV/yB,EAAQ,IAAIwG,aAAaqsB,GACzB,MACJ,KAAKC,EAAA,EAASE,OACVhzB,EAAQ,IAAIizB,aAAaJ,GACzB,MACJ,KAAKC,EAAA,EAASI,OACVlzB,EAAQ,IAAImzB,YAAYN,GACxB,MACJ,KAAKC,EAAA,EAASM,MACVpzB,EAAQ,IAAIqzB,WAAWR,GACvB,MACJ,KAAKC,EAAA,EAASQ,OACVtzB,EAAQ,IAAIuzB,YAAYV,GACxB,MACJ,KAAKC,EAAA,EAASU,MACVxzB,EAAQ,IAAIyzB,WAAWZ,GACvB,MACJ,KAAKC,EAAA,EAASY,KACV1zB,EAAQ,IAAIqL,WAAWwnB,GACvB,MACJ,KAAKC,EAAA,EAASa,MACV3zB,EAAQ,IAAI4zB,UAAUf,GACtB,MACJ,QAEI7yB,EAAQ,IAAI8E,MAAM+tB,GAClB,IAAK,IAAI9zB,EAAI,EAAGA,EAAI8zB,EAAY9zB,IAC5BiB,EAAMjB,GAAK+T,EAIvB,OAAO9S,EAGX,SAAA6zB,EAA4BC,EAAaC,GAErC,IAAKD,IAASC,EACV,OAAQD,IAASC,EAErB,GAAID,EAAK/uB,SAAWgvB,EAAKhvB,OACrB,OAAO,EAEX,GAAoB,IAAhB+uB,EAAK/uB,QAAgB,IAAMgvB,EAAKhvB,OAChC,OAAO,EAIX,IADA,IAAIvE,EAAIszB,EAAK/uB,OACJhG,EAAI,EAAGA,EAAIyB,EAAGzB,IACnB,IAAKU,OAAAqN,EAAA,EAAArN,CAAQq0B,EAAK/0B,GAAIg1B,EAAKh1B,IACvB,OAAO,EAGf,OAAO,EAGL,SAAAi1B,EAAsBjP,EAAIC,GAG5B,OAAID,IAAOC,MAGHD,GAAMC,GAASD,IAAOC,KAG1BD,EAAGE,YAAcD,EAAGC,YAGpBF,EAAGT,WAAaU,EAAGV,WAGnBS,EAAG/kB,QAAUglB,EAAGhlB,QAGhB+kB,EAAGE,YAAcgP,EAAA,EAAiBnvB,MAC3B+uB,EAAmB9O,EAAG/kB,MAAMglB,EAAGhlB,OAE/B+kB,EAAGE,YAAcgP,EAAA,EAAiBC,WACpCL,EAAmB9O,EAAGoP,WAAWnP,EAAGmP,aAGlCN,EAAmB9O,EAAG/kB,MAAMglB,EAAGhlB,+XCjQxCo0B,EAILvkB,YAAaC,GACZA,EAAUA,MACVL,KAAK4kB,eAAiBvkB,EAAsB,eAAIA,EAAQukB,eAAe,KACvE5kB,KAAKnQ,KAAOwQ,EAAY,KAAIA,EAAQxQ,KAAK,KAK1CuQ,OAAQuH,GACPc,EAAA,GAAgBzI,KAAK4kB,eAAejd,GACpCc,EAAA,GAAgBzI,KAAKnQ,KAAK8X,GAK3BvH,OAAQsI,GACP1I,KAAK4kB,eAAiBnc,EAAA,EAAgBC,GACtC1I,KAAKnQ,KAAO4Y,EAAA,EAAgBC,GAK7BtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIgc,GAEdhc,EAAOic,eAAiB5kB,KAAK4kB,eAC7Bjc,EAAO9Y,KAAOmQ,KAAKnQ,KACZ8Y,GAKH,SAAAkc,EAA+Bnc,GACnC,IAAIsE,EAAM,IAAI2X,EAEb,OADA3X,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAA4Y,EAAA,EAAA5Y,CAA0B,gBAAgB20B,EAAe30B,OAAA6Y,EAAA,EAAA7Y,CAAmB,GAAG,sEC1DnE80B,kBAAZ,SAAYA,GACRA,IAAA,mBACAA,IAAA,iBACAA,IAAA,mBAHJ,CAAYA,WAMZ9c,EAAA,oBAA8B,mBAAmB8c,EAAiB7c,EAAA,GAAYA,EAAA,iICN9E,IAEYqQ,EAFZqE,EAAAvtB,EAAA,IAUM,SAAA21B,EAAqC1X,EAA6B1F,GACvEA,EAAI5T,UAAUsZ,GAIT,SAAA2X,EAAqCtc,GAC1C,OAAOA,EAAIzU,aAdZ,SAAYqkB,GACTA,IAAA,qBACDA,IAAA,eACAA,IAAA,eACAA,IAAA,mCAJF,CAAYA,WAoBZtoB,OAAA2sB,EAAA,EAAA3sB,CAAoB,sBAAsBsoB,EAAoByM,EAA2BC,EAA2B,kGCN9GC,EAML7kB,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKklB,OAAS7kB,EAAc,OAAIA,EAAQ6kB,OAAO,KAC/CllB,KAAKoP,mBAAqB/O,EAA0B,mBAAIA,EAAQ+O,mBAAmB,KACnFpP,KAAKmlB,YAAc9kB,EAAmB,YAAIA,EAAQ8kB,eAKnD/kB,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKklB,OAAOvd,GAC5B3X,OAAAsf,EAAA,EAAAtf,CAAyBgQ,KAAKoP,mBAAmBzH,GACjDuG,EAAA,EAAelO,KAAKmlB,YAAYxd,GAKjCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKklB,OAAShX,EAAA,EAAgBxF,GAC9B1I,KAAKoP,mBAAqBpf,OAAAsf,EAAA,EAAAtf,CAAyB0Y,GACnD1I,KAAKmlB,YAAcjX,EAAA,EAAexF,EAAIoG,EAAA,GAKvC1O,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIsc,GAEVjlB,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOuc,OAASllB,KAAKklB,OACrBvc,EAAOyG,mBAAqBpP,KAAKoP,mBAC7BpP,KAAKmlB,cAAexc,EAAOwc,YAAcjX,EAAA,EAAqBlO,KAAKmlB,cAChExc,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,cAAci1B,EAAaj1B,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qCC1DtEo1B,EAKLhlB,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIgI,EAAA,GAClC1Q,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIyc,GAEVplB,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,eAAeo1B,EAAcp1B,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,wMCzE9EZ,EAAAQ,EAAA0T,EAAA,sBAAA+hB,IACQ,IAAIA,GACV/iB,MAAQzS,KAAK,OAAQU,MAAO,EAAGuP,YAAY,YAC3CwlB,oBAAsBz1B,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,iCACnFylB,kBAAoB11B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,mFAC/E0lB,gBAAkB31B,KAAM,iBAAmBU,MAAO,WAAYuP,YAAa,gDAC3E2lB,wBAA0B51B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,kDAC3F4lB,uBAAyB71B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,6CACzF6lB,kBAAoB91B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,4EAC/E8lB,kBAAoB/1B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,0DAC/E+lB,2BAA6Bh2B,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,iFACjGgmB,oBAAsBj2B,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,8DACnFimB,qBAAuBl2B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,+DACrFkmB,oBAAsBn2B,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,0DACnFmmB,YAAcp2B,KAAM,aAAeU,MAAO,WAAYuP,YAAa,4BACnEomB,uBAAyBr2B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,sDACzFqmB,aAAet2B,KAAM,cAAgBU,MAAO,WAAYuP,YAAa,yEACrEsmB,uBAAyBv2B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,uFACzFumB,iBAAmBx2B,KAAM,kBAAoBU,MAAO,WAAYuP,YAAa,2DAC7EwmB,gBAAkBz2B,KAAM,iBAAmBU,MAAO,WAAYuP,YAAa,4FAC3EymB,sBAAwB12B,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,gFACvF0mB,0BAA4B32B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,sGAC/F2mB,sBAAwB52B,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,6FACvF4mB,uBAAyB72B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,yDACzF6mB,yBAA2B92B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,yCAC7F8mB,2BAA6B/2B,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,oDACjG+mB,iCAAmCh3B,KAAM,kCAAoCU,MAAO,WAAYuP,YAAa,0DAC7GgnB,+BAAiCj3B,KAAM,gCAAkCU,MAAO,WAAYuP,YAAa,0FACzGinB,0BAA4Bl3B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,8FAC/FknB,6BAA+Bn3B,KAAM,8BAAgCU,MAAO,WAAYuP,YAAa,gEACrGmnB,mCAAqCp3B,KAAM,oCAAsCU,MAAO,WAAYuP,YAAa,uEACjHonB,yBAA2Br3B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,mCAC7FqnB,iCAAmCt3B,KAAM,kCAAoCU,MAAO,WAAYuP,YAAa,yEAC7GsnB,uCAAyCv3B,KAAM,wCAA0CU,MAAO,WAAYuP,YAAa,gFACzHunB,uBAAyBx3B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,qCACzFwnB,6BAA+Bz3B,KAAM,8BAAgCU,MAAO,WAAYuP,YAAa,4CACrGynB,+BAAiC13B,KAAM,gCAAkCU,MAAO,WAAYuP,YAAa,wCACzG0nB,qBAAuB33B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,qEACrF2nB,yBAA2B53B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,yCAC7F4nB,0BAA4B73B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,oEAC/F6nB,2BAA6B93B,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,oDACjG8nB,qBAAuB/3B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,6DACrF+nB,iBAAmBh4B,KAAM,kBAAoBU,MAAO,WAAYuP,YAAa,mFAC7EgoB,qBAAuBj4B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,gCACrFioB,kBAAoBl4B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,yCAC/EkoB,wBAA0Bn4B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,2EAC3FmoB,0BAA4Bp4B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,qCAC/FooB,yBAA2Br4B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,qDAC7FqoB,8BAAgCt4B,KAAM,+BAAiCU,MAAO,WAAYuP,YAAa,kDACvGsoB,6BAA+Bv4B,KAAM,8BAAgCU,MAAO,WAAYuP,YAAa,4CACrGuoB,qBAAuBx4B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,qCACrFwoB,6BAA+Bz4B,KAAM,8BAAgCU,MAAO,QAAUuP,YAAa,wDACnGyoB,6BAA+B14B,KAAM,8BAAgCU,MAAO,QAAUuP,YAAa,gDACnG0oB,cAAgB34B,KAAM,eAAiBU,MAAO,QAAUuP,YAAa,yDACrE2oB,aAAe54B,KAAM,cAAgBU,MAAO,QAAUuP,YAAa,mDACnE4oB,oBAAsB74B,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,iDACnF6oB,0BAA4B94B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,4EAC/F8oB,kBAAoB/4B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,2CAC/E+oB,kBAAoBh5B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,iFAC/EgpB,uBAAyBj5B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,0DACzFipB,sBAAwBl5B,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,uDACvFkpB,qBAAuBn5B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,yDACrFmpB,wBAA0Bp5B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,iCAC3FopB,4BAA8Br5B,KAAM,6BAA+BU,MAAO,WAAYuP,YAAa,yEACnGqpB,gBAAkBt5B,KAAM,iBAAmBU,MAAO,WAAYuP,YAAa,uEAC3EspB,gBAAkBv5B,KAAM,iBAAmBU,MAAO,WAAYuP,YAAa,wDAC3EupB,eAAiBx5B,KAAM,gBAAkBU,MAAO,WAAYuP,YAAa,+BACzEwpB,iBAAmBz5B,KAAM,kBAAoBU,MAAO,WAAYuP,YAAa,6CAC7EypB,aAAe15B,KAAM,cAAgBU,MAAO,WAAYuP,YAAa,+EACrE0pB,kBAAoB35B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,0DAC/E2pB,mBAAqB55B,KAAM,oBAAsBU,MAAO,WAAYuP,YAAa,2CACjF4pB,0BAA4B75B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,mCAC/F6pB,2BAA6B95B,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,oEACjG8pB,+BAAiC/5B,KAAM,gCAAkCU,MAAO,WAAYuP,YAAa,qDACzG+pB,mCAAqCh6B,KAAM,oCAAsCU,MAAO,WAAYuP,YAAa,oEACjHgqB,qBAAuBj6B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,mFACrFiqB,qBAAuBl6B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,yDACrFkqB,uBAAyBn6B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,kCACzFmqB,yBAA2Bp6B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,oCAC7FoqB,0BAA4Br6B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,sDAC/FqqB,8BAAgCt6B,KAAM,+BAAiCU,MAAO,WAAYuP,YAAa,iCACvGsqB,+BAAiCv6B,KAAM,gCAAkCU,MAAO,WAAYuP,YAAa,4GACzGuqB,yBAA2Bx6B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,sDAC7FwqB,yBAA2Bz6B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,wEAC7FyqB,yBAA2B16B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,gDAC7F0qB,6BAA+B36B,KAAM,8BAAgCU,MAAO,WAAYuP,YAAa,mDACrG2qB,yBAA2B56B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,6FAC7F4qB,2BAA6B76B,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,6FACjG6qB,2BAA6B96B,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,sCACjG8qB,kBAAoB/6B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,qCAC/E+qB,qBAAuBh7B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,qCACrFgrB,sBAAwBj7B,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,gCACvFirB,wBAA0Bl7B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,kCAC3FkrB,yBAA2Bn7B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,4DAC7FmrB,uBAAyBp7B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,iDACzForB,yBAA2Br7B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,uEAC7FqrB,2BAA6Bt7B,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,yEACjGsrB,oBAAsBv7B,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,0DACnFurB,yBAA2Bx7B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,mDAC7FwrB,gCAAkCz7B,KAAM,iCAAmCU,MAAO,WAAYuP,YAAa,8EAC3GyrB,wBAA0B17B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,iIAC3F0rB,+BAAiC37B,KAAM,gCAAkCU,MAAO,WAAYuP,YAAa,mFACzG2rB,8BAAgC57B,KAAM,+BAAiCU,MAAO,WAAYuP,YAAa,oEACvG4rB,wBAA0B77B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,yDAC3F6rB,wBAA0B97B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,iGAC3F8rB,mBAAqB/7B,KAAM,oBAAsBU,MAAO,WAAYuP,YAAa,mIACjF+rB,iBAAmBh8B,KAAM,kBAAoBU,MAAO,WAAYuP,YAAa,0DAC7EgsB,qBAAuBj8B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,gCACrFisB,sBAAwBl8B,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,+BACvFksB,yBAA2Bn8B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,+FAC7FmsB,0BAA4Bp8B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,yDAC/FosB,0BAA4Br8B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,4EAC/FqsB,wBAA0Bt8B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,uDAC3FssB,wBAA0Bv8B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,uDAC3FusB,iCAAmCx8B,KAAM,kCAAoCU,MAAO,WAAYuP,YAAa,4DAC7GwsB,yBAA2Bz8B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,uEAC7FysB,uBAAyB18B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,uEACzF0sB,mBAAqB38B,KAAM,oBAAsBU,MAAO,WAAYuP,YAAa,qDACjF2sB,8BAAgC58B,KAAM,+BAAiCU,MAAO,WAAYuP,YAAa,4DACvG4sB,uBAAyB78B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,kCACzF6sB,kBAAoB98B,KAAM,mBAAqBU,MAAO,UAAYuP,YAAa,oDAC/E8sB,yBAA2B/8B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,yDAC7F+sB,0BAA4Bh9B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,2DAC/FgtB,uBAAyBj9B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,uDACzFitB,+BAAiCl9B,KAAM,gCAAkCU,MAAO,WAAYuP,YAAa,8FACzGktB,4BAA8Bn9B,KAAM,6BAA+BU,MAAO,SAAUuP,YAAa,2HACjGmtB,sBAAwBp9B,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,yDACvFotB,+BAAiCr9B,KAAM,gCAAkCU,MAAO,WAAYuP,YAAa,qHACzGqtB,mBAAqBt9B,KAAM,oBAAsBU,MAAO,WAAYuP,YAAa,2DACjFstB,oBAAsBv9B,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,sEACnFutB,YAAcx9B,KAAM,aAAeU,MAAO,WAAYuP,YAAa,mDACnEwtB,kBAAoBz9B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,qCAC/EytB,6BAA+B19B,KAAM,8BAAgCU,MAAO,WAAYuP,YAAa,mEACrG0tB,4BAA8B39B,KAAM,6BAA+BU,MAAO,WAAYuP,YAAa,+CACnG2tB,gCAAkC59B,KAAM,iCAAmCU,MAAO,WAAYuP,YAAa,wDAC3G4tB,6BAA+B79B,KAAM,8BAAgCU,MAAO,WAAYuP,YAAa,gDACrG6tB,sBAAwB99B,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,gEACvF8tB,iBAAmB/9B,KAAM,kBAAoBU,MAAO,WAAYuP,YAAa,0FAC7E+tB,kBAAoBh+B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,sEAC/EguB,qBAAuBj+B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,yEACrFiuB,yBAA2Bl+B,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,gEAC7FkuB,2BAA6Bn+B,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,yEACjGmuB,mBAAqBp+B,KAAM,oBAAsBU,MAAO,WAAYuP,YAAa,wDACjFouB,0BAA4Br+B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,iDAC/FquB,wBAA0Bt+B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,8DAC3FsuB,8BAAgCv+B,KAAM,+BAAiCU,MAAO,WAAYuP,YAAa,oHACvGuuB,mBAAqBx+B,KAAM,oBAAsBU,MAAO,WAAYuP,YAAa,kDACjFwuB,qBAAuBz+B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,iEACrFyuB,0BAA4B1+B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,4DAC/F0uB,4BAA8B3+B,KAAM,6BAA+BU,MAAO,WAAYuP,YAAa,gEACnG2uB,uBAAyB5+B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,iEACzF4uB,0BAA4B7+B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,0DAC/F6uB,qBAAuB9+B,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,+BACrF8uB,0BAA4B/+B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,4DAC/F+uB,uBAAyBh/B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,oEACzFgvB,mBAAqBj/B,KAAM,oBAAsBU,MAAO,WAAYuP,YAAa,kDACjFivB,wBAA0Bl/B,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,uCAC3FkvB,8BAAgCn/B,KAAM,+BAAiCU,MAAO,WAAYuP,YAAa,+CACvGmvB,0BAA4Bp/B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,qCAC/FovB,+BAAiCr/B,KAAM,gCAAkCU,MAAO,WAAYuP,YAAa,8DACzGqvB,uBAAyBt/B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,uFACzFsvB,iBAAmBv/B,KAAM,kBAAoBU,MAAO,WAAYuP,YAAa,+DAC7EuvB,kBAAoBx/B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,4GAC/EwvB,kBAAoBz/B,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,qGAC/EyvB,iBAAmB1/B,KAAM,kBAAoBU,MAAO,WAAYuP,YAAa,8CAC7E0vB,0BAA4B3/B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,qCAC/F2vB,yCAA2C5/B,KAAM,0CAA4CU,MAAO,WAAYuP,YAAa,8GAC7H4vB,0BAA4B7/B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,0DAC/F6vB,0BAA4B9/B,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,oEAC/F8vB,uBAAyB//B,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,wGACzF+vB,4BAA8BhgC,KAAM,6BAA+BU,MAAO,WAAYuP,YAAa,6CACnGgwB,mCAAqCjgC,KAAM,oCAAsCU,MAAO,WAAYuP,YAAa,2EACjHiwB,oBAAsBlgC,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,qGACnFkwB,mBAAqBngC,KAAM,oBAAsBU,MAAO,QAAUuP,YAAa,kCAC/EmwB,sBAAwBpgC,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,iCACvFowB,6BAA+BrgC,KAAM,8BAAgCU,MAAO,WAAYuP,YAAa,6CACrGqwB,4BAA8BtgC,KAAM,6BAA+BU,MAAO,WAAYuP,YAAa,4CACnGswB,sBAAwBvgC,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,0BACvFuwB,mBAAqBxgC,KAAM,oBAAsBU,MAAO,WAAYuP,YAAa,6CACjFwwB,4BAA8BzgC,KAAM,6BAA+BU,MAAO,WAAYuP,YAAa,qCACnGywB,oBAAsB1gC,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,uCACnF0wB,0BAA4B3gC,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,6CAC/F2wB,gCAAkC5gC,KAAM,iCAAmCU,MAAO,WAAYuP,YAAa,uDAC3G4wB,oCAAsC7gC,KAAM,qCAAuCU,MAAO,WAAYuP,YAAa,oDACnH6wB,4BAA8B9gC,KAAM,6BAA+BU,MAAO,WAAYuP,YAAa,2CACnG8wB,wBAA0B/gC,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,2CAC3F+wB,2BAA6BhhC,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,qDACjGgxB,WAAajhC,KAAM,YAAcU,MAAO,WAAYuP,YAAa,gEACjEixB,kBAAoBlhC,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,wDAC/EkxB,sBAAwBnhC,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,wDACvFmxB,aAAephC,KAAM,cAAgBU,MAAO,WAAYuP,YAAa,2DACrEoxB,oBAAsBrhC,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,yFACnFqxB,gBAAkBthC,KAAM,iBAAmBU,MAAO,WAAYuP,YAAa,oFAC3EsxB,kBAAoBvhC,KAAM,mBAAqBU,MAAO,WAAYuP,YAAa,oFAC/EuxB,0BAA4BxhC,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,gKAC/FwxB,mBAAqBzhC,KAAM,oBAAsBU,MAAO,SAAUuP,YAAa,6EAC/EyxB,mBAAqB1hC,KAAM,oBAAsBU,MAAO,SAAUuP,YAAa,iFAC/E0xB,wBAA0B3hC,KAAM,yBAA2BU,MAAO,WAAYuP,YAAa,mGAC3F2xB,YAAc5hC,KAAM,aAAeU,MAAO,SAAUuP,YAAa,gEACjE4xB,cAAgB7hC,KAAM,eAAiBU,MAAO,SAAUuP,YAAa,iFACrE6xB,0BAA4B9hC,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,sFAC/F8xB,0BAA4B/hC,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,yDAC/F+xB,2BAA6BhiC,KAAM,4BAA8BU,MAAO,WAAYuP,YAAa,wEACjGgyB,mCAAqCjiC,KAAM,oCAAsCU,MAAO,WAAYuP,YAAa,gEACjHiyB,iBAAmBliC,KAAM,kBAAoBU,MAAO,SAAUuP,YAAa,0GAC3EkyB,sBAAwBniC,KAAM,uBAAyBU,MAAO,WAAYuP,YAAa,kGACvFmyB,YAAcpiC,KAAM,aAAeU,MAAO,SAAUuP,YAAa,mFACjEoyB,sBAAwBriC,KAAM,uBAAyBU,MAAO,SAAUuP,YAAa,0DACrFqyB,+BAAiCtiC,KAAM,gCAAkCU,MAAO,WAAYuP,YAAa,qHACzGsyB,2BAA6BviC,KAAM,4BAA8BU,MAAO,SAAUuP,YAAa,yFAC/FuyB,yBAA2BxiC,KAAM,0BAA4BU,MAAO,WAAYuP,YAAa,gMAC7FwyB,gCAAkCziC,KAAM,iCAAmCU,MAAO,WAAYuP,YAAa,4IAC3GyyB,0BAA4B1iC,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,sIAC/F0yB,wBAA0B3iC,KAAM,yBAA2BU,MAAO,SAAUuP,YAAa,gDACzF2yB,mBAAqB5iC,KAAM,oBAAsBU,MAAO,SAAUuP,YAAa,gCAC/E4yB,eAAiB7iC,KAAM,gBAAkBU,MAAO,SAAUuP,YAAa,+DACvE6yB,wBAA0B9iC,KAAM,yBAA2BU,MAAO,SAAUuP,YAAa,oCACzF8yB,oBAAsB/iC,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,sCACnF+yB,uBAAyBhjC,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,8DACzFgzB,eAAiBjjC,KAAM,gBAAkBU,MAAO,WAAYuP,YAAa,gDACzEizB,qBAAuBljC,KAAM,sBAAwBU,MAAO,WAAYuP,YAAa,2CACrFkzB,iBAAmBnjC,KAAM,kBAAoBU,MAAO,WAAYuP,YAAa,kEAC7EmzB,gBAAkBpjC,KAAM,iBAAmBU,MAAO,WAAYuP,YAAa,yCAC3EozB,oBAAsBrjC,KAAM,qBAAuBU,MAAO,WAAYuP,YAAa,0EACnFqzB,uBAAyBtjC,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,yDACzFszB,uBAAyBvjC,KAAM,wBAA0BU,MAAO,WAAYuP,YAAa,2DACzFuzB,0BAA4BxjC,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,gGAC/FwzB,eAAiBzjC,KAAM,gBAAkBU,MAAO,WAAYuP,YAAa,qEACzEyzB,gBAAkB1jC,KAAM,iBAAmBU,MAAO,WAAYuP,YAAa,kCAC3E0zB,0BAA4B3jC,KAAM,2BAA6BU,MAAO,WAAYuP,YAAa,2NClN3F4Q,EAQLtQ,YAAaC,GACZA,EAAUA,MACVL,KAAKzP,MAAQ8P,EAAa,MAAIA,EAAQ9P,MAAM,KAC5CyP,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAKyzB,gBAAkBpzB,EAAuB,gBAAIA,EAAQozB,gBAAgB,KAC1EzzB,KAAK0zB,kBAAoBrzB,EAAyB,kBAAIA,EAAQqzB,kBAAkB,KAChF1zB,KAAK2zB,gBAAkBtzB,EAAuB,gBAAIA,EAAQszB,gBAAgB,KAC1E3zB,KAAK4zB,kBAAoBvzB,EAAyB,kBAAIA,EAAQuzB,kBAAkB,KAKjFxzB,OAAQuH,GACP,IAAI9K,EAAe,EACD,MAAdmD,KAAKzP,QAAiBsM,GAAgB,GACnB,MAAnBmD,KAAKe,aAAsBlE,GAAgB,GACnB,MAAxBmD,KAAKyzB,kBAA2B52B,GAAgB,GACxB,MAAxBmD,KAAK2zB,kBAA2B92B,GAAgB,GACtB,MAA1BmD,KAAK0zB,oBAA6B72B,GAAgB,IACxB,MAA1BmD,KAAK4zB,oBAA6B/2B,GAAgB,IACtD8K,EAAI/V,SAASiL,GACI,MAAdmD,KAAKzP,OAAiByP,KAAKzP,MAAM0S,OAAO0E,GACrB,MAAnB3H,KAAKe,YAAsBkH,EAAA,GAAoBjI,KAAKe,WAAW4G,GACvC,MAAxB3H,KAAKyzB,iBAA2BxrB,EAAA,GAAkBjI,KAAKyzB,gBAAgB9rB,GAC7C,MAA1B3H,KAAK0zB,mBAA6BzrB,EAAA,GAAgBjI,KAAK0zB,kBAAkB/rB,GACjD,MAAxB3H,KAAK2zB,iBAA2B1rB,EAAA,GAAkBjI,KAAK2zB,gBAAgBhsB,GAC7C,MAA1B3H,KAAK4zB,mBAA6B3rB,EAAA,GAAgBjI,KAAK4zB,kBAAkBjsB,GAK7EvH,OAAQsI,GACP,IAAI7L,EAAe6L,EAAI5W,WAEnB+hC,EAA4C,IAAN,EAAfh3B,GACvBi3B,EAAiD,IAAN,EAAfj3B,GAC5Bk3B,EAAiD,IAAN,EAAfl3B,GAC5Bm3B,EAAoD,IAAP,GAAfn3B,GAC9Bo3B,EAAoD,IAAP,GAAfp3B,GALS,IAAN,EAAfA,KAQrBmD,KAAKzP,MAAO,IAAI2jC,EAAA,EAChBl0B,KAAKzP,MAAM6S,OAAOsF,IAEhBmrB,IACF7zB,KAAKe,WAAakH,EAAA,EAAoBS,IAEpCorB,IACF9zB,KAAKyzB,gBAAkBxrB,EAAA,EAAkBS,IAEvCsrB,IACFh0B,KAAK0zB,kBAAoBzrB,EAAA,EAAgBS,IAEvCqrB,IACF/zB,KAAK2zB,gBAAkB1rB,EAAA,EAAkBS,IAEvCurB,IACFj0B,KAAK4zB,kBAAoB3rB,EAAA,EAAgBS,IAM3CtI,MAAOuI,GAUN,OATIA,IACHA,EAAS,IAAI+H,GAEV1Q,KAAKzP,QAASoY,EAAOpY,MAAQyP,KAAKzP,MAAM4Y,SAC5CR,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAO8qB,gBAAkBzzB,KAAKyzB,gBAC9B9qB,EAAO+qB,kBAAoB1zB,KAAK0zB,kBAChC/qB,EAAOgrB,gBAAkB3zB,KAAK2zB,gBAC9BhrB,EAAOirB,kBAAoB5zB,KAAK4zB,kBACzBjrB,GAKH,SAAAwrB,EAA2BzrB,GAC/B,IAAIsE,EAAM,IAAI0D,EAEb,OADA1D,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAoZ,EAAA,EAAApZ,CAA0B,YAAY0gB,EAAW1gB,OAAAqZ,EAAA,EAAArZ,CAAmB,GAAG,0OCxGnEokC,EAAYC,EAAA,EAGLC,EAAU,IAAIx7B,KAAKA,KAAKgB,IAAI,KAAM,EAAG,EAAG,EAAG,IAalDy6B,IAGI1kC,KAAM,OAAQoT,OAAQ,aACvBG,OAAQ,WACP,OAAO,MACRC,aAAc,OAGbxT,KAAM,MACNoT,OAAQ,WACJjT,OAAAsW,EAAA,EAAAtW,EAAO,EAAO,iCAElBoT,OAAQ,WACJpT,OAAAsW,EAAA,EAAAtW,EAAO,EAAO,mCAIlBH,KAAM,UACNoT,OAAQoxB,EAAA,GACRjxB,OAAQixB,EAAA,EACRhxB,cAAc,EACdkU,OAAQ8c,EAAA,IAEXxkC,KAAM,OAAQoT,OAAQoxB,EAAA,GAAejxB,OAAQixB,EAAA,EAAehxB,aAAc,EAAGkU,OAAQ8c,EAAA,IACrFxkC,KAAM,QAASoT,OAAQoxB,EAAA,GAAgBjxB,OAAQixB,EAAA,EAAgBhxB,aAAc,EAAGkU,OAAQ8c,EAAA,IACxFxkC,KAAM,QAASoT,OAAQoxB,EAAA,GAAejxB,OAAQixB,EAAA,EAAehxB,aAAc,EAAGkU,OAAQ8c,EAAA,IACtFxkC,KAAM,OAAQoT,OAAQoxB,EAAA,GAAgBjxB,OAAQixB,EAAA,EAAgBhxB,aAAc,EAAGkU,OAAQ8c,EAAA,IACvFxkC,KAAM,QAASoT,OAAQoxB,EAAA,GAAgBjxB,OAAQixB,EAAA,EAAgBhxB,aAAc,EAAGkU,OAAQ8c,EAAA,IACxFxkC,KAAM,SAAUoT,OAAQoxB,EAAA,GAAiBjxB,OAAQixB,EAAA,EAAiBhxB,aAAc,EAAGkU,OAAQ8c,EAAA,IAC3FxkC,KAAM,QAASoT,OAAQoxB,EAAA,GAAgBjxB,OAAQixB,EAAA,EAAgBhxB,aAAc,EAAGkU,OAAQ8c,EAAA,IACxFxkC,KAAM,SAAUoT,OAAQoxB,EAAA,GAAiBjxB,OAAQixB,EAAA,EAAiBhxB,aAAc,EAAGkU,OAAQ8c,EAAA,IAExFxkC,KAAM,QACNoT,OAAQoxB,EAAA,GACRjxB,OAAQixB,EAAA,EACRhxB,aAAc,EACdkU,OAAQ8c,EAAA,IAGRxkC,KAAM,SACNoT,OAAQoxB,EAAA,GACRjxB,OAAQixB,EAAA,EACRhxB,aAAc,EACdkU,OAAQ8c,EAAA,IAEXxkC,KAAM,QAASoT,OAAQoxB,EAAA,GAAgBjxB,OAAQixB,EAAA,EAAgBhxB,aAAc,EAAKkU,OAAQ8c,EAAA,IAC1FxkC,KAAM,SAAUoT,OAAQoxB,EAAA,GAAiBjxB,OAAQixB,EAAA,EAAiBhxB,aAAc,EAAKkU,OAAQ8c,EAAA,IAC7FxkC,KAAM,SAAUoT,OAAQoxB,EAAA,GAAiBjxB,OAAQixB,EAAA,EAAiBhxB,aAAc,KAG7ExT,KAAM,WACNoT,OAAQoxB,EAAA,GACRjxB,OAAQixB,EAAA,EACRhxB,aAAcixB,EACd/c,OAAQ8c,EAAA,IAEXxkC,KAAM,OAAQoT,OAAQoxB,EAAA,GAAejxB,OAAQixB,EAAA,EAAehxB,aAAc+wB,IAGvEvkC,KAAM,aAAcoT,OAAQoxB,EAAA,GAAqBjxB,OAAQixB,EAAA,EAEzDhxB,aAAc,WACV,OAAO,IAAI7H,YAAY,IAG3B+b,OAAQ8c,EAAA,EAERG,OAAQ,SAAUjkC,GACd,MAAqB,iBAAVA,EACAA,GAEXP,OAAAsW,EAAA,EAAAtW,CAAOO,aAAiBiL,aACjBa,KAAK/D,OAAOC,aAAaiO,MAAMlO,OAAO,IAAIsD,WAAWrL,SAGnEV,KAAM,aAAcoT,OAAQoxB,EAAA,GAAiBjxB,OAAQixB,EAAA,EAAiBhxB,aA/EnD,KAmFhBxT,KAAM,SACNoT,OAAQoxB,EAAA,GAAiBjxB,OAAQixB,EAAA,EACjChxB,aAAcoxB,EAAA,EACdld,OAAQkd,EAAA,IAIR5kC,KAAM,iBACNoT,OAAQoxB,EAAA,GAAyBjxB,OAAQixB,EAAA,EACzChxB,aAAcwF,EAAA,EACd0O,OAAQ1O,EAAA,EAAe6rB,uBAmB1B7kC,KAAM,YAAaoT,OAAQoxB,EAAA,GAAiBjxB,OAAQixB,EAAA,EAAiBhxB,aAAc,aAQhFxT,KAAM,aACNoT,OAAQoxB,EAAA,GACRjxB,OAAQixB,EAAA,EACRhxB,aAAcsxB,EAAA,EAAYryB,KAC1BiV,OAAQ8c,EAAA,UAoBVO,EAMNx0B,YAAYC,GAER,IAAK,IAAIw0B,KAAQx0B,EACTA,EAAQlP,eAAe0jC,KACvB70B,KAAK60B,GAAQx0B,EAAQw0B,IAU7Bz0B,uBAAuBiD,GAcnB,YAXqBpR,IAAjBoR,IACAA,EAAerD,KAAKqD,cAEpB,mBAAsBA,IAGtBA,EAAeA,KAKZA,EASXjD,iBAAiB7P,EAAO8S,GAIpB,OAFArT,OAAAsW,EAAA,EAAAtW,CAAOgQ,gBAAgB40B,QAET3iC,IAAV1B,EACO8S,EAEU,OAAjBA,GACc,OAAV9S,EACO,UAID0B,IAAV1B,EACO8S,GAEDrD,KAAMuX,SACZhnB,EAAcyP,KAAMuX,OAAOhnB,IAExBA,IAUT,SAAAukC,EAA8CC,GAEhD,GADA/kC,OAAAsW,EAAA,EAAAtW,CAA8B,iBAAhB+kC,EAAOllC,MAClB,mBAAsBklC,EAAO9xB,OAC5B,MAAM,IAAI9J,MAAM,UAAW47B,EAAOllC,KAAO,2BAE7C,GAAG,mBAAsBklC,EAAO3xB,OAC5B,MAAM,IAAIjK,MAAM,UAAW47B,EAAOllC,KAAO,2BAI7CmlC,EAAgBD,EAAOllC,MAAQ,IAAI+kC,EAAWG,GAc5C,SAAAE,EAAyBplC,GAC3BG,OAAAsW,EAAA,EAAAtW,CAAOH,KAAQmlC,GACf,IAAIE,EAAaF,EAAgBnlC,GAEjC,OADAG,OAAAsW,EAAA,EAAAtW,CAAOklC,aAAsBN,GACtBM,EAKJ,IAAIF,KACX,IAAK,IAAIxkC,KAAK+jC,EACVO,EAAatkC,GAUX,SAAA2kC,EAA0BC,GAExBA,EAAavlC,OACbulC,EAAeA,EAAah8B,YAEhCpJ,OAAAsW,EAAA,EAAAtW,CAA+B,iBAAjBolC,EAA2B,wCAA0CA,GACnF,IAAI5kC,EAAIwkC,EAAgBI,GACxB,IAAK5kC,EACD,MAAM,IAAI2I,MAAM,YAAci8B,EAAe,uBAEjD,OAAI5kC,EAAE6kC,QACKF,EAAgB3kC,EAAE6kC,SAEtB7kC,qDCzSX8kC,EAAA,SAAApY,GACA,kBACA,IAAAjW,EAAAjX,OAAA0V,EAAA,EAAA1V,CAAAyW,WACA8uB,EAAAtuB,EAAA2U,MACAsB,EAAAztB,KAAAuQ,KAAAiH,EAAAsuB,cC2EA,SAAAC,EAAAD,EAAAE,EAAAllC,GACA,IACAglC,EAAAE,EAAAllC,GACK,MAAAwO,GACL/O,OAAA0lC,EAAA,EAAA1lC,CAAA2lC,EAAA52B,IAIA,SAAA42B,EAAAF,GACA,MAAAA,ECxFA,IAAAG,EAAA,mBAAAvlC,OAUAiT,EAAA,EAJA,SAAAuyB,GACA,OALA,SAAA3Y,GACA,OAAA0Y,GAAA,kBAAA1Y,EAAA7sB,OAAAC,aAIAwlC,CAAAD,GDmDA,SAAAjb,GACA,OAAA0a,EAAA,SAAAruB,EAAAsuB,GACA,IAAAlb,EACA,IACAA,EAAAO,EAAApU,MAAAxG,KAAAiH,GACS,MAAAlI,GACT,OAAAw2B,EAAAx2B,GAGA/O,OAAAmU,EAAA,EAAAnU,CAAAqqB,IAAA,mBAAAA,EAAA0b,KACA1b,EAAA0b,KAAA,SAAAxlC,GACAilC,EAAAD,EAAA,KAAAhlC,IACa,SAAAylC,GACbR,EAAAD,EAAAS,EAAAnxB,QAAAmxB,EAAA,IAAA78B,MAAA68B,MAGAT,EAAA,KAAAlb,KCnEA4b,CAAAJ,uDCNM,SAAAK,EAA4BvkC,GAS9B,OAAQwkC,QARM79B,OAAOC,aAAa5G,EAAOG,YACvCwG,OAAOC,aAAa5G,EAAOG,YAC3BwG,OAAOC,aAAa5G,EAAOG,YAMHskC,QAJZ99B,OAAOC,aAAa5G,EAAOG,YAIGwD,OAF/B3D,EAAOsC,uBCIpBoiC,GAAW,EAyDf,IAAIC,GACA,YACA,aACA,kBACA,qBACA,kBACA,iBACA,oBACA,iBACA,0BACA,yBAkBEC,UAA4BC,EAAA,aAuB9Bp2B,YAAYC,GACRQ,QACA7Q,OAAAkD,EAAA,EAAAlD,CApER,SAAgBgd,EAAKypB,GAEjB,IAAIC,EAAa,EAUjB,OARIL,GACArmC,OAAO2rB,KAAK3O,GAAK2pB,QAAQ,SAAU9lC,GAC3B4lC,EAAWtsB,QAAQtZ,GAAO,IAC1B8N,QAAQC,IAAI,4BAA6B/N,GACzC6lC,OAIU,IAAfA,EAwDIE,CAAOv2B,EAASi2B,IAEvBt2B,KAAK62B,UAAYx2B,EAAQw2B,UACzB72B,KAAK82B,WAAaz2B,EAAQy2B,YAAc,EACpC92B,KAAK82B,aACL92B,KAAK+2B,gBAAkB12B,EAAQ02B,gBAC/B/mC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBgQ,KAAK+2B,kBAEtC/2B,KAAKg3B,wBAAoD/kC,IAA/BoO,EAAQ22B,mBAAmC,EAAI32B,EAAQ22B,mBAC7Eh3B,KAAKg3B,mBAAqB,IAC1Bh3B,KAAKi3B,wBAA0B52B,EAAQ42B,wBACvCjnC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBgQ,KAAKi3B,0BAEtCj3B,KAAK2gB,gBAAkBtgB,EAAQsgB,iBAAmB,EAClD3gB,KAAKk3B,kBAAoB72B,EAAQ62B,kBACjCl3B,KAAKm3B,eAAiB92B,EAAQ82B,gBAAkB,EAChDn3B,KAAKo3B,gBAAkB/2B,EAAQ+2B,iBAAmB,EACrB,IAAzBp3B,KAAKo3B,iBACLpnC,OAAAkD,EAAA,EAAAlD,CAA+B,IAAxBgQ,KAAKm3B,gBAEZn3B,KAAKq3B,YAAer3B,KAAK62B,UAAY72B,KAAK82B,WAAa92B,KAAK2gB,gBAAkB3gB,KAAKg3B,qBAGnFhnC,OAAAkD,EAAA,EAAAlD,CAA+B,IAAxBgQ,KAAKm3B,gBAIZn3B,KAAKs3B,eAAiBj3B,EAAQi3B,eAC9BtnC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBgQ,KAAKs3B,gBAElCt3B,KAAKq3B,YAAcr3B,KAAKm3B,eAAiB3lC,KAAKc,OAAO0N,KAAK62B,UAAY72B,KAAK82B,WAAa92B,KAAK2gB,gBAAkB,GAAK3gB,KAAKo3B,iBAAmBp3B,KAAKg3B,mBAEjJh3B,KAAKu3B,SAAW/lC,KAAKc,OAAO0N,KAAK62B,UAAY72B,KAAK82B,YAAc92B,KAAKo3B,iBACrEp3B,KAAKq3B,YAAcr3B,KAAKm3B,eAAiBn3B,KAAKu3B,SAAWv3B,KAAKg3B,mBAAqBh3B,KAAK2gB,gBAAkB,EACtG3gB,KAAKm3B,eAAiB,MACtBn3B,KAAKq3B,aAAe,IAG5BrnC,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKq3B,YAAc,GAE1Br3B,KAAKw3B,WAAax3B,KAAK82B,WAAa92B,KAAKg3B,mBACzCh3B,KAAK6f,MAAQ,KACb7f,KAAKy3B,WAAa,KAClBz3B,KAAK03B,OAAS,EACd13B,KAAK23B,cAAgB,KASzBv3B,iBAAiByf,GACb,GAAI7f,KAAKk3B,kBAAmB,CACxBlnC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAuBgQ,KAAsB,mBACpDhQ,OAAAkD,EAAA,EAAAlD,CAAgC,IAAzBgQ,KAAK2gB,iBACZ,IAAIiX,EAAkB53B,KAAK63B,QACvBC,EAAkBjY,EAAMna,MAAM,EAAGkyB,GACjCnY,EAAYzf,KAAKk3B,kBAAkBY,GACvC9nC,OAAAkD,EAAA,EAAAlD,CAAOyvB,EAAUnqB,SAAW0K,KAAK2gB,iBACjClB,EAAUsY,KAAKlY,EAAO+X,QAGtB5nC,OAAAkD,EAAA,EAAAlD,CAAgC,IAAzBgQ,KAAK2gB,gBAAuB,qBAG3CvgB,SAASyf,GACL,GAAI7f,KAAKm3B,eAAiB,EAAG,CACzB,IAAIa,EAAqBh4B,KAAK82B,WAC1BmB,EAAmBj4B,KAAK63B,QAAU73B,KAAK2gB,gBACvCuX,EAAkBrY,EAAMna,MAAMsyB,EAAoBC,GACtDjoC,OAAAkD,EAAA,EAAAlD,CAAOkoC,EAAgB5iC,OAAS0K,KAAKm3B,gBAAmB,GACxD,IAAIgB,EAAUD,EAAgB5iC,OAAS0K,KAAKm3B,eACxCiB,EAAgBp4B,KAAKs3B,eAAeY,GACxCloC,OAAAkD,EAAA,EAAAlD,CAAOooC,EAAc9iC,OAAS0K,KAAKo3B,iBAAoB,GACvDpnC,OAAAkD,EAAA,EAAAlD,CAAOooC,EAAc9iC,SAAW6iC,EAAUn4B,KAAKo3B,iBAC/CgB,EAAcL,KAAKlY,EAAO7f,KAAK82B,WAAY,IAGnD12B,oBAAoBi4B,GAChB,GAAIr4B,KAAK23B,cAAe,CACpB,IAAIW,EAAkBt4B,KAAK23B,cAAcjwB,WACrC1H,KAAK82B,WAAa,GAIlB92B,KAAK+2B,gBAAgB,IAAItvB,SAASzH,KAAK23B,cAAc,EAAE33B,KAAK82B,YAAYuB,EAAQC,GAEhFt4B,KAAKg3B,mBAAqB,GAC1Bh3B,KAAKi3B,wBAAwB,IAAIxvB,SAASzH,KAAK23B,cAAc33B,KAAK82B,WAAkC92B,KAAKg3B,qBAE7Gh3B,KAAKu4B,iBAAiBv4B,KAAK23B,eAC3B33B,KAAKw4B,SAASx4B,KAAK23B,eAMnB33B,KAAKqe,KAAK,QAASre,KAAK23B,cAAeU,GACvCr4B,KAAK23B,cAAgB,MAQ7Bv3B,MAAMkW,EAAsBhhB,GACxBA,EAASA,GAAUghB,EAAO5O,WAC1B1X,OAAAkD,EAAA,EAAAlD,CAAOsmB,aAAkB9a,aAA2B,OAAX8a,GACzCtmB,OAAAkD,EAAA,EAAAlD,CAAOsF,EAAS,GAChB,IAAI/F,EAAI+F,EACJmjC,EAAe,EAInB,IAHAz4B,KAAK6f,MAAQ7f,KAAK6f,OAAS,IAAIrkB,YAAYwE,KAAK62B,WAChD72B,KAAKy3B,WAAaz3B,KAAKy3B,YAAc,IAAI77B,WAAWoE,KAAK6f,OAElDtwB,EAAI,GAAG,CACVS,OAAAkD,EAAA,EAAAlD,CAAOsF,EAASmjC,GAAiB,GACb,IAAhBz4B,KAAK03B,QACL13B,KAAK04B,qBAAoB,GAG7B,IAAIC,EAAa34B,KAAKq3B,YAAcr3B,KAAK03B,OACrCkB,EAAcpnC,KAAKY,IAAIkD,EAASmjC,EAAcE,GAClD,GAAIriB,EAAQ,CAER,IAAIuiB,EAAY,IAAIj9B,WAAW0a,EAAOmiB,EAAaA,EAAeG,GAClE54B,KAAKy3B,WAAW/1B,IAAIm3B,EAAU74B,KAAK03B,OAAS13B,KAAKw3B,YAGrDiB,GAAgBG,EAChB54B,KAAK03B,QAAUkB,EACX54B,KAAK03B,QAAU13B,KAAKq3B,aACpBr3B,KAAK84B,6BAETvpC,GAAKqpC,GAGbx4B,qBAAqB24B,GACjB,IAAIC,EAAgBD,EAAqB,IACrCE,EAAqBznC,KAAKc,MAAMymC,EAAqB,KACzD/oC,OAAAkD,EAAA,EAAAlD,CAA8B,IAAvBipC,GAA4Bj5B,KAAKm3B,eAAiB,IAAK,0DAE9Dn3B,KAAK6f,MAAM7f,KAAK03B,OAAS13B,KAAKw3B,YAAYwB,EAE1Ch5B,KAAK03B,QAAU,EACf,IAAK,IAAIpoC,EAAI,EAAGA,EAAIypC,EAAoBzpC,IACpC0Q,KAAK6f,MAAM7f,KAAK03B,OAAS13B,KAAKw3B,WAAaloC,GAAK0pC,EAEpDh5B,KAAK03B,QAAUqB,EACX/4B,KAAKm3B,eAAiB,MACtBn3B,KAAK6f,MAAM7f,KAAK03B,OAAS13B,KAAKw3B,YAAayB,EAC3Cj5B,KAAK03B,QAAU,GAGvBt3B,6BACI,IAAI84B,EAAyB,EAE7B,GAAIl5B,KAAKm3B,eAAiB,EAAG,CAMzB,IAAIgC,EAAYn5B,KAAKg3B,mBAAqBh3B,KAAK03B,OAAS13B,KAAK2gB,gBACzD3gB,KAAKm3B,eAAiB,IACtBgC,GAAa,EAGbA,GAAa,EAGjB,IAAIpoC,EAAKooC,EAAYn5B,KAAKm3B,eACtB4B,GAAsB/4B,KAAKm3B,eAAiBpmC,GAAKiP,KAAKm3B,eAC1Dn3B,KAAKo5B,qBAAqBL,GAC1B,IAAIM,EAAiBr5B,KAAKg3B,mBAAqBh3B,KAAK03B,OAAS13B,KAAK2gB,gBAClE3wB,OAAAkD,EAAA,EAAAlD,CAAOqpC,EAAiBr5B,KAAKm3B,gBAAmB,GAEhD+B,EADcG,EAAiBr5B,KAAKm3B,gBACAn3B,KAAKo3B,gBAAkBp3B,KAAKm3B,gBAEpEn3B,KAAK63B,QAAU73B,KAAKw3B,WAAax3B,KAAK03B,OAEtC,IAAIY,EAAkBt4B,KAAK63B,QAAU73B,KAAK2gB,gBAAkBuY,EAC5Dl5B,KAAK23B,cAAgB33B,KAAK6f,MAAMna,MAAM,EAAG4yB,GAKzCt4B,KAAK6f,MAAQ,KACb7f,KAAKy3B,WAAa,KAClBz3B,KAAK03B,OAAS,EAKlBt3B,MACQJ,KAAK03B,OAAS,GACd13B,KAAK84B,6BAET94B,KAAK04B,qBAAoB,gKCrT3BY,EAILl5B,YAAaC,GACZA,EAAUA,MACVL,KAAKu5B,aAAel5B,EAAoB,aAAIA,EAAQk5B,aAAa,KACjEv5B,KAAKw5B,aAAen5B,EAAoB,aAAIA,EAAQm5B,aAAa,IAAIC,EAAA,EAKtEr5B,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKu5B,aAAa5xB,GAClC3H,KAAKw5B,aAAav2B,OAAO0E,GAK1BvH,OAAQsI,GACP1I,KAAKu5B,aAAerrB,EAAA,EAAgBxF,GACpC1I,KAAKw5B,aAAap2B,OAAOsF,GAK1BtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI2wB,GAEd3wB,EAAO4wB,aAAev5B,KAAKu5B,aACvBv5B,KAAKw5B,eAAgB7wB,EAAO6wB,aAAex5B,KAAKw5B,aAAarwB,SAC1DR,GAKH,SAAA+wB,EAA4BhxB,GAChC,IAAIsE,EAAM,IAAIssB,EAEb,OADAtsB,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,aAAaspC,EAAYtpC,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sCCCtE2pC,EAAkC3pC,OAAA+M,EAAA,EAAA/M,CAAc,0BAChD4pC,EAAgC5pC,OAAA+M,EAAA,EAAA/M,CAAc,cAiB9C6pC,EAAU,IAAIC,OAAQ,IAFV,eAE0BC,OAAS,MAD/B,cACsDA,OAAQ,OAE9EC,EAAgB,IAAIF,OAAO,IADP,SAC8BC,OAAQ,OAASF,EAAQE,OAAO,KAClFE,EAAmB,IAAIH,OAAO,oBAAyBE,EAAcD,OAAQ,OAE7EG,EAAkB,IAAIJ,OAAO,IAAIG,EAAiBF,OAAO,KAAKC,EAAcD,OAAO,MAIvF,SAAAI,EAA2BC,GACvB,IAAIC,EAAUD,EAAG,IACjB,IAAKC,GAA4B,IAAjBA,EAAQ/kC,OACpB,OAAO,IAAIqvB,EAAA,EAEf,IAAIC,EAAiBwV,EAAG,IAAMpkC,SAASokC,EAAG,KAAO,EAC7CvqC,EATR,SAAkBuM,GACd,OAAOA,EAAI0e,QAAQ,KAAK,IAQbwf,CAASF,EAAG,KACvB,OAAQ,IAAIzV,EAAA,GAAeC,eAAgBA,EAAe/0B,KAAMA,IAgB9D,SAAA0qC,EAA2Bn+B,EAAYqN,GAIzC,IAAIrZ,EAAI,IAAIqpC,EAAA,GAAee,cAE3B,KAAOp+B,EAAI9G,OAAO,GAAG,CAEjB,IAMImlC,EAAgBC,EAAgBC,EANhC9uB,EAAUzP,EAAI2e,MAAMmf,GACxB,IAAKruB,EACD,MAAM,IAAI1S,MAAM,8BAAgCiD,EAAK,KASzD,IAAIw+B,EAAS/uB,EAAQ,GACrB,GAAe,MAAX+uB,EAEAH,EAAiBd,EACjBgB,GAAW,EACXD,GAAiB,OACf,GAAe,MAAXE,EAENH,EAAiBb,EACjBe,GAAW,EACXD,GAAiB,MACd,CAGHA,EAAkC,MAAf7uB,EAAQ,GAG3B8uB,EAA4B,MAAf9uB,EAAQ,GAKrB,IAAIlb,EAAKkb,EAAQ,GAAK7V,SAAS6V,EAAQ,IAAK,EACxChc,EAAOgc,EAAQ,GAOf4uB,EANE5uB,EAAQ,GAMQpC,EAAaoxB,kBAAkBhrC,EAAKc,GAJpCX,OAAA+M,EAAA,EAAA/M,CAAcH,GAMpCG,OAAAkD,EAAA,EAAAlD,CAAOyqC,IAAoBA,EAAgB53B,WAG/CzS,EAAEoqC,SAASniC,KAAK,IAAIyiC,EAAA,GAChBL,gBAAiBA,EACjBE,UAAWA,EACXD,gBAAiBA,EACjBK,WAAYZ,EAAkBtuB,MAGlCzP,EAAMA,EAAIkE,OAAOuL,EAAQ,GAAGvW,QAIhC,OAAO,IAAImkC,EAAA,EAAarpC,GCtKtB,SAAA4qC,EAAyBC,EAASC,GACpC,OAAO,IAAI5B,GACPC,aATR,SAAqB4B,GACjB,OAAIA,EAAKv+B,OACEu+B,EAAKv+B,OAET5M,OAAA+M,EAAA,EAAA/M,CAAcmrC,GAKHC,CAAYH,GAC1BzB,aAAce,EAAiBW,gBCFnCG,SAA2BrrC,OAAA+M,EAAA,EAAA/M,CAAW6P,EAAA,EAAiBy7B,yBAUrD,SAAAC,EAA+ChC,EAAciC,GAI/D,IAAIhB,GAFJgB,EAAaA,OAEqCC,IAAI,SAAUV,GAC5D,OACIN,gBAAiBY,EACjBV,WAAW,EACXD,iBAAiB,EACjBK,WAAYA,KAUpB,OANAS,EAAa,IAAIlC,GACbC,aAAcA,EAAa38B,OAC3B48B,aAAc,IAAIC,EAAA,GACde,SAAUA,uBCvBhBkB,EAILt7B,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAK27B,YAAct7B,EAAmB,YAAIA,EAAQs7B,eAKnDv7B,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,EAAelO,KAAK27B,YAAYh0B,GAKjCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAK27B,YAAcztB,EAAA,EAAexF,EAAIgxB,GAKvCt5B,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI+yB,GAEV17B,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAChEnJ,KAAK27B,cAAehzB,EAAOgzB,YAAcztB,EAAA,EAAqBlO,KAAK27B,cAChEhzB,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,uCAAuC0rC,EAAsC1rC,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCnDxH4rC,EAILx7B,YAAaC,GACZA,EAAUA,MACVL,KAAK67B,SAAWx7B,EAAgB,SAAIA,EAAQw7B,SAAS,KACrD77B,KAAK87B,mBAAqBz7B,EAA0B,mBAAIA,EAAQy7B,mBAAmB,KAKpF17B,OAAQuH,GACPuG,EAAA,GAAwBlO,KAAK67B,SAASl0B,GACtCuG,EAAA,GAAgBlO,KAAK87B,mBAAmBn0B,GAKzCvH,OAAQsI,GACP1I,KAAK67B,SAAW3tB,EAAA,EAAwBxF,GACxC1I,KAAK87B,mBAAqB5tB,EAAA,EAAgBxF,GAK3CtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIizB,GAEdjzB,EAAOkzB,SAAW77B,KAAK67B,SACvBlzB,EAAOmzB,mBAAqB97B,KAAK87B,mBAC1BnzB,GAKH,SAAAozB,EAAkCrzB,GACtC,IAAIsE,EAAM,IAAI4uB,EAEb,OADA5uB,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,mBAAmB4rC,EAAkB5rC,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC9ChFgsC,EAIL57B,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAKi8B,QAAU57B,EAAe,QAAIA,EAAQ47B,WAK3C77B,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKe,WAAW4G,GACpCuG,EAAA,EAAelO,KAAKi8B,QAAQt0B,GAK7BvH,OAAQsI,GACP1I,KAAKe,WAAamN,EAAA,EAAoBxF,GACtC1I,KAAKi8B,QAAU/tB,EAAA,EAAexF,EAAIqzB,GAKnC37B,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIqzB,GAEdrzB,EAAO5H,WAAaf,KAAKe,WACrBf,KAAKi8B,UAAWtzB,EAAOszB,QAAU/tB,EAAA,EAAqBlO,KAAKi8B,UACxDtzB,GAKH,SAAAuzB,EAAkCxzB,GACtC,IAAIsE,EAAM,IAAIgvB,EAEb,OADAhvB,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,mBAAmBgsC,EAAkBhsC,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,6BC5ChFmsC,EAKL/7B,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIwzB,GAClCl8B,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIwzB,GAEVn8B,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,wCAAwCmsC,EAAuCnsC,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qaC3D1HkzB,EAIL9iB,YAAaC,GACZA,EAAUA,MACVL,KAAKkf,UAAY7e,EAAiB,UAAIA,EAAQ6e,UAAU,KACxDlf,KAAKyf,UAAYpf,EAAiB,UAAIA,EAAQof,UAAU,KAKzDrf,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKkf,UAAUvX,GAC/Bc,EAAA,GAAoBzI,KAAKyf,UAAU9X,GAKpCvH,OAAQsI,GACP1I,KAAKkf,UAAYzW,EAAA,EAAgBC,GACjC1I,KAAKyf,UAAYhX,EAAA,EAAoBC,GAKtCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIua,GAEdva,EAAOuW,UAAYlf,KAAKkf,UACxBvW,EAAO8W,UAAYzf,KAAKyf,UACjB9W,GAgBT3Y,OAAA4Y,EAAA,EAAA5Y,CAA0B,gBAAgBkzB,EAAelzB,OAAA6Y,EAAA,EAAA7Y,CAAmB,IAAI,qOCvDhF,SAAAosC,EAA2BjG,GAIvB,OAHAnmC,OAAAsW,EAAA,EAAAtW,EAAQ,MAAO,MAAO,MAClB,MAAO,MAAO,OAChBma,QAAQgsB,IAAY,EAAG,yBAA2BA,IAC7C,EAIL,SAAAkG,EAAwB1qC,EAAqB2qC,GAK/C,IAGItvB,EACJ,OAPAhd,OAAAsW,EAAA,EAAAtW,CAAO2B,aAAkB4qC,EAAA,GACzBvsC,OAAAsW,EAAA,EAAAtW,CAAOssC,aAAqBE,SAAU,6BAA+BF,GAM9C,QAJVtsC,OAAAysC,EAAA,EAAAzsC,CAAkB2B,GAIpBwkC,UAEPnpB,EAAM,IAAI0vB,EAAA,GACNt5B,OAAOzR,GACJqb,KAEPA,EAAM,IAAIsvB,GACNl5B,OAAOzR,GACJqb,GAMT,SAAA2vB,EAAyBxG,EAASyG,GAEpC5sC,OAAAsW,EAAA,EAAAtW,CAAOosC,EAAkBjG,IAEzB,IAAI0G,EAAe,IAAIrhC,YAAY+gC,EAAA,EAAWv5B,gBAAgB45B,GAAmB,GAE7EjrC,EAAS,IAAI4qC,EAAA,EAAWM,GAG5B,OAFAC,EAAc3G,EAASyG,EAAiBjrC,GAEjCkrC,EAKL,SAAAE,EAA2BC,GAE7B,IAEInxB,EAFI,4DAEQE,KAAKixB,GAErB,IAAInxB,EACA,MAAM,IAAI1S,MAAM,wBAA0B6jC,GAE9C,OACIC,SAAUpxB,EAAQ,GAClBqxB,SAAUrxB,EAAQ,GAClBsxB,KAAMnnC,SAAS6V,EAAQ,GAAI,IAC3BuxB,QAASvxB,EAAQ,IAAM,IAGzB,SAAAwxB,EAA+BL,GAEjC,OADQD,EAAiBC,GAChB7rC,eAAe,YAatB,SAAAmsC,EAAgCnH,EAASoH,EAAWC,EAAc7rC,GAEhEA,aAAkB6J,cAClB7J,EAAS,IAAI4qC,EAAA,EAAW5qC,IAE5B3B,OAAAsW,EAAA,EAAAtW,CAAOosC,EAAkBjG,IACzBnmC,OAAAsW,EAAA,EAAAtW,EAA+C,KAAvC,IAAK,IAAK,KAAKma,QAAQozB,IAE/B5rC,EAAOC,SAASukC,EAAQ35B,WAAW,IACnC7K,EAAOC,SAASukC,EAAQ35B,WAAW,IACnC7K,EAAOC,SAASukC,EAAQ35B,WAAW,IAEnC7K,EAAOC,SAAS2rC,EAAU/gC,WAAW,IAErC7K,EAAOoC,UAAUypC,GAGrB,IAAIV,EAAgB,SAAU3G,EAASsH,EAAgB9rC,GAGnD,IAAI6rC,EAAejB,EAAA,EAAWv5B,gBAAgBy6B,GAAkB,EAEhEH,EAAsBnH,EAAS,IAAKqH,EAAc7rC,GAClD8rC,EAAex6B,OAAOtR,GACtB3B,OAAAsW,EAAA,EAAAtW,CAAOwtC,IAAiB7rC,EAAO2D,OAAQ,uDC3F3CgO,EAAA,EAJA,2OCZAlU,EAAAQ,EAAA0T,EAAA,sBAAAqH,IAEQ,IAAIN,GACXqzB,QAAS,EACTxZ,MAAO,EACPD,KAAM,EACNF,MAAO,EACPF,OAAQ,EACRF,MAAO,EACPF,OAAQ,EACRxO,MAAO,EACPD,OAAQ,EACRsO,MAAO,GACPC,OAAQ,GACRjrB,OAAQ,GACRqlC,SAAU,GACV9/B,KAAM,GACNF,WAAY,GACZigC,WAAY,GACZr0B,OAAQ,GACR5D,eAAgB,GAChB5F,WAAY,GACZ4kB,cAAe,GACftI,cAAe,GACfwhB,UAAW,GACXntB,UAAW,GACXotB,aAAc,GACd7xB,eAAgB,GAChBzZ,OAAQ,GACRurC,QAAS,GACTC,SAAU,GACVC,YAAa,GACbC,MAAO,GACPC,QAAS,GACTC,eAAgB,GAChBC,sBAAuB,GACvBC,mBAAoB,GACpBC,mBAAoB,GACpBC,cAAe,GACfC,oBAAqB,GACrBC,eAAgB,IAChBC,eAAgB,IAChBC,UAAW,IACXC,eAAgB,IAChBC,OAAQ,IACRC,UAAW,IACXC,KAAM,IACNC,WAAY,IACZC,eAAgB,IAChBC,aAAc,IACdC,iBAAkB,IAClBC,kBAAmB,IACnBC,WAAY,IACZC,SAAU,IACVC,aAAc,IACdC,cAAe,IACfC,UAAW,IACXC,QAAS,IACTC,SAAU,IACVC,aAAc,IACdC,KAAM,IACNhnC,KAAM,IACNinC,QAAS,IACTC,SAAU,IACVC,SAAU,IACVC,aAAc,IACd5nB,oBAAqB,IACrB6nB,cAAe,IACfC,gBAAiB,IACjBC,gBAAiB,IACjBC,uBAAwB,IACxBC,+BAAgC,IAChCC,oBAAqB,IACrB3oB,yBAA0B,IAC1B4oB,kBAAmB,IACnBC,uBAAwB,IACxBC,sBAAuB,IACvBC,kBAAmB,IACnBC,sBAAuB,IACvBC,UAAW,IACXC,0BAA2B,IAC3BC,mBAAoB,IACpBC,mBAAoB,IACpBC,eAAgB,IAChBC,iBAAkB,IAClBC,mBAAoB,IACpBC,iBAAkB,IAClBC,qBAAsB,IACtBC,uBAAwB,IACxBC,wBAAyB,IACzBC,mBAAoB,IACpBC,eAAgB,IAChBC,aAAc,IACdC,kBAAmB,IACnBC,gBAAiB,IACjBC,qBAAsB,IACtBC,2BAA4B,IAC5B75B,cAAe,IACfY,eAAgB,IAChBk5B,aAAc,IACdC,mBAAoB,IACpBC,oBAAqB,IACrBC,oBAAqB,IACrBC,qBAAsB,IACtBC,iBAAkB,IAClBC,sBAAuB,IACvBC,uBAAwB,IACxBC,qBAAsB,IACtBC,yBAA0B,IAC1BC,0BAA2B,IAC3BC,0BAA2B,IAC3BC,2BAA4B,IAC5B1f,cAAe,IACf2f,qBAAsB,IACtBC,sBAAuB,IACvBC,uBAAwB,IACxBC,wBAAyB,IACzBC,oBAAqB,IACrBC,qBAAsB,IACtBC,cAAe,IACfC,eAAgB,IAChBC,eAAgB,IAChBC,gBAAiB,IACjBC,iBAAkB,IAClBC,qBAAsB,IACtBC,sBAAuB,IACvBC,mBAAoB,IACpBC,oBAAqB,IACrBC,wBAAyB,IACzBC,yBAA0B,IAC1BC,gBAAiB,IACjBC,gBAAiB,IACjBC,kBAAmB,IACnBC,iBAAkB,IAClBC,qBAAsB,IACtBC,kBAAmB,IACnBC,aAAc,IACdC,cAAe,IACfC,eAAgB,IAChBC,kBAAmB,IACnBC,mBAAoB,IACpB1J,oBAAqB,IACrBrB,aAAc,IACdgL,WAAY,IACZC,iBAAkB,IAClBC,iBAAkB,IAClBC,qCAAsC,IACtCC,sCAAuC,IACvCC,qBAAsB,IACtBC,sBAAuB,IACvBC,uBAAwB,IACxBC,wBAAyB,IACzBC,qBAAsB,IACtBC,oBAAqB,IACrBC,eAAgB,IAChBC,aAAc,IACdC,cAAe,IACfC,qBAAsB,IACtBC,cAAe,IACfC,cAAe,IACfC,eAAgB,IAChBC,eAAgB,IAChBC,iBAAkB,IAClBC,uBAAwB,IACxBC,2BAA4B,IAC5B7yB,oBAAqB,IACrB8yB,cAAe,IACfC,kBAAmB,IACnBC,mBAAoB,IACpBC,iBAAkB,IAClBC,kBAAmB,IACnB72B,mBAAoB,IACpBR,YAAa,IACbs3B,YAAa,IACbC,aAAc,IACdC,mBAAoB,IACpBC,kBAAmB,IACnBC,mBAAoB,IACpBC,iBAAkB,IAClBC,uBAAwB,IACxBC,qBAAsB,IACtBC,kBAAmB,IACnBC,YAAa,IACbC,aAAc,IACdC,mBAAoB,IACpBC,oBAAqB,IACrBC,WAAY,IACZC,aAAc,IACdC,cAAe,IACfC,qBAAsB,IACtBC,kBAAmB,IACnBC,mBAAoB,IACpBC,yBAA0B,IAC1BC,oBAAqB,IACrBC,mBAAoB,IACpBC,oBAAqB,IACrBC,qBAAsB,IACtBC,sBAAuB,IACvBC,kBAAmB,IACnBC,iBAAkB,IAClBC,YAAa,IACbC,aAAc,IACd/6B,eAAgB,IAChBC,kBAAmB,IACnBC,aAAc,IACdgG,iBAAkB,IAClB80B,iBAAkB,IAClBC,YAAa,IACbC,gBAAiB,IACjBv1B,uBAAwB,IACxBw1B,kBAAmB,IACnBC,sBAAuB,IACvBp5B,qBAAsB,IACtBq5B,2BAA4B,IAC5BC,0BAA2B,IAC3BC,4BAA6B,IAC7BC,6BAA8B,IAC9BC,2BAA4B,IAC5BC,0BAA2B,IAC3BC,4BAA6B,IAC7BC,6BAA8B,IAC9BC,yBAA0B,IAC1BC,0BAA2B,IAC3BC,qBAAsB,IACtBC,sBAAuB,IACvBC,4BAA6B,IAC7BC,6BAA8B,IAC9BC,0BAA2B,IAC3BC,2BAA4B,IAC5BC,0BAA2B,IAC3BC,2BAA4B,IAC5BC,yBAA0B,IAC1BC,0BAA2B,IAC3BC,oBAAqB,IACrBC,0BAA2B,IAC3BC,uBAAwB,IACxBC,yBAA0B,IAC1BC,4BAA6B,IAC7BC,eAAgB,IAChBC,gBAAiB,IACjBC,iBAAkB,IAClBC,kBAAmB,IACnBC,eAAgB,IAChBC,6BAA8B,IAC9BC,8BAA+B,IAC/BC,2BAA4B,IAC5BC,4BAA6B,IAC7BC,kBAAmB,IACnBC,YAAa,IACbC,wBAAyB,IACzBC,oCAAqC,IACrCC,iCAAkC,IAClCC,qBAAsB,IACtBC,2BAA4B,IAC5BC,mCAAoC,IACpCC,uBAAwB,IACxBC,gCAAiC,IACjCC,6BAA8B,IAC9BC,MAAO,IACPC,cAAe,IACfC,yBAA0B,IAC1BC,WAAY,IACZC,0BAA2B,IAC3BC,gCAAiC,IACjCC,sBAAuB,IACvBC,eAAgB,IAChBC,sBAAuB,IACvBC,oBAAqB,IACrBh7B,iBAAkB,IAClBgD,uBAAwB,IACxBi4B,SAAU,IACVC,SAAU,KACVC,SAAU,KACVC,SAAU,KACVC,cAAe,KACfC,iBAAkB,KAClBC,iBAAkB,MAClBC,oBAAqB,MACrBC,kBAAmB,MACnBC,kBAAmB,MACnBC,2BAA4B,MAC5BC,qBAAsB,MACtBC,aAAc,MACdC,SAAU,MACVC,aAAc,MACdC,6BAA8B,MAC9BC,wBAAyB,MACzBC,qBAAsB,MACtBC,qBAAsB,MACtBC,gBAAiB,MACjBC,OAAQ,MACRC,kBAAmB,MACnBC,wBAAyB,MACzBC,gBAAiB,MACjBC,4BAA6B,MAC7BC,6BAA8B,MAC9BC,uBAAwB,MACxBC,wBAAyB,MACzBC,eAAgB,MAChBC,kBAAmB,MACnBC,UAAW,MACXC,MAAO,MACPC,iBAAkB,MAClBC,cAAe,MACfC,eAAgB,MAChBC,WAAY,MACZC,WAAY,MACZC,uBAAwB,MACxBC,2BAA4B,MAC5BC,aAAc,MACdC,gBAAiB,MACjBC,kBAAmB,MACnBC,2BAA4B,MAC5BC,kBAAmB,MACnBC,aAAc,MACdC,qBAAsB,MACtBC,wBAAyB,MACzBC,6BAA8B,MAC9BC,cAAe,MACfC,sBAAuB,MACvBC,kBAAmB,MACnBC,gBAAiB,MACjBC,YAAa,MACbC,8BAA+B,OAEpBtkC,GACXukC,WAAY,GACZC,0BAA2B,GAC3B9T,uBAAwB,GACxB+T,SAAU,GACVC,UAAW,GACXC,eAAgB,GAChBC,iBAAkB,GAClBC,YAAa,GACbC,eAAgB,GAChBC,kBAAmB,GACnBC,eAAgB,GAChBC,WAAY,GACZC,WAAY,GACZC,YAAa,GACbC,aAAc,GACdC,YAAa,GACbC,oBAAqB,GACrBC,UAAW,GACXC,QAAS,GACTC,SAAU,GACVC,UAAW,GACXC,2BAA4B,GAC5BC,mBAAoB,IACpBC,qBAAsB,KACtBC,gBAAiB,KACjBC,iBAAkB,KAClBC,aAAc,KACdC,yBAA0B,MAC1BC,iBAAkB,MAClBC,iBAAkB,MAClBC,gBAAiB,MACjBC,oBAAqB,MACrBC,sBAAuB,OAEZzmC,GACX0mC,eAAgB,GAChBC,WAAY,GACZC,mBAAoB,GACpBC,qBAAsB,GACtBC,kBAAmB,GACnBC,WAAY,KACZC,uBAAwB,KACxBC,sBAAuB,KACvBC,+BAAgC,KAChCC,6BAA8B,KAC9BC,qBAAsB,KACtBC,qBAAsB,KACtBC,0BAA2B,KAC3BC,6BAA8B,KAC9BC,cAAe,KACfC,eAAgB,KAChBC,uBAAwB,KACxBC,sBAAuB,KACvBC,gCAAiC,KACjCC,sBAAuB,KACvBC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,qBAAsB,KACtBC,0BAA2B,KAC3BC,sCAAuC,KACvCC,iCAAkC,KAClCC,iCAAkC,KAClCC,mCAAoC,KACpCC,iCAAkC,KAClCC,kCAAmC,KACnCC,6BAA8B,KAC9BC,uBAAwB,KACxBC,0BAA2B,KAC3BC,4BAA6B,KAC7BC,+BAAgC,KAChCC,qBAAsB,KACtBC,0BAA2B,KAC3BC,4BAA6B,KAC7BC,2BAA4B,KAC5BC,gBAAiB,KACjBC,uBAAwB,KACxBC,yBAA0B,KAC1BC,4BAA6B,KAC7BC,iBAAkB,KAClBC,UAAW,KACXC,iBAAkB,KAClBC,eAAgB,KAChBC,oBAAqB,KACrBC,0BAA2B,KAC3BC,gCAAiC,KACjCC,8BAA+B,KAC/BC,sBAAuB,KACvBC,2BAA4B,KAC5BC,wBAAyB,KACzBC,wBAAyB,KACzBC,0BAA2B,KAC3BC,uBAAwB,KACxBC,cAAe,KACfC,sBAAuB,KACvBC,oBAAqB,KACrBC,yBAA0B,KAC1BC,wBAAyB,KACzBC,8BAA+B,KAC/BC,+BAAgC,KAChCC,oBAAqB,KACrBC,6BAA8B,KAC9BC,mBAAoB,KACpBC,wBAAyB,KACzBC,eAAgB,KAChBC,iCAAkC,KAClCC,iCAAkC,KAClCC,4BAA6B,KAC7BC,qCAAsC,KACtCC,kCAAmC,KACnCC,iCAAkC,KAClCC,4BAA6B,KAC7BC,gCAAiC,KACjCC,+BAAgC,KAChCC,mCAAoC,KACpCC,+BAAgC,KAChCC,+BAAgC,KAChCC,wBAAyB,KACzBC,wBAAyB,KACzBC,+BAAgC,KAChCC,4BAA6B,KAC7BC,2BAA4B,KAC5BC,2BAA4B,MAC5BC,kCAAmC,MACnCC,+BAAgC,MAChCC,kBAAmB,MACnBC,mBAAoB,MACpBC,cAAe,MACfC,gCAAiC,MACjCC,uBAAwB,MACxBC,0BAA2B,MAC3BC,8BAA+B,MAC/BC,yBAA0B,MAC1BC,2BAA4B,MAC5BC,kBAAmB,MACnBC,4BAA6B,MAC7BC,oBAAqB,MACrBC,SAAU,MACVC,qBAAsB,MACtBC,sBAAuB,MACvBC,eAAgB,MAChBC,yBAA0B,MAC1BC,gCAAiC,MACjCC,oCAAqC,MACrCC,cAAe,MACfC,qBAAsB,MACtBC,gBAAiB,MACjBC,2BAA4B,MAC5BC,qBAAsB,MACtBC,iCAAkC,MAClCC,oCAAqC,MACrCC,+BAAgC,MAChCC,wBAAyB,MACzBC,iCAAkC,MAClCC,+BAAgC,MAChCC,kBAAmB,MACnBC,2BAA4B,MAC5BC,6BAA8B,MAC9BC,YAAa,MACbC,SAAU,MACVC,0BAA2B,MAC3BC,6BAA8B,MAC9BC,eAAgB,MAChBC,qBAAsB,MACtBC,yBAA0B,MAC1BC,qCAAsC,MACtCC,2BAA4B,MAC5BC,0BAA2B,MAC3BC,gCAAiC,MACjCC,+BAAgC,MAChCC,oCAAqC,MACrCC,iBAAkB,MAClBC,qCAAsC,MACtCC,sCAAuC,MACvCC,+BAAgC,MAChCC,4BAA6B,MAC7BC,mCAAoC,MACpCC,mCAAoC,MACpCC,8BAA+B,MAC/BC,0BAA2B,MAC3BC,8BAA+B,OAEpBzvC,GACX0vC,iBAAkB,GAClBC,qBAAsB,GACtBC,aAAc,GACdC,wBAAyB,GACzBC,uBAAwB,GACxBC,2BAA4B,KAC5BC,iBAAkB,KAClBC,6BAA8B,KAC9BC,qCAAsC,KACtCC,gCAAiC,KACjCC,iCAAkC,KAClCC,4BAA6B,KAC7BC,4BAA6B,KAC7BC,+BAAgC,KAChCC,oCAAqC,KACrCC,+BAAgC,KAChCC,aAAc,KACdC,eAAgB,KAChBC,iBAAkB,KAClBC,qBAAsB,KACtBC,uBAAwB,KACxBC,sBAAuB,KACvBC,kBAAmB,KACnBC,wBAAyB,KACzBC,uBAAwB,KACxBC,6BAA8B,KAC9BC,cAAe,KACfC,qBAAsB,KACtBC,sBAAuB,KACvBC,4BAA6B,MAC7BC,cAAe,MACfC,cAAe,MACfC,eAAgB,MAChBC,gBAAiB,MACjBC,cAAe,MACfC,aAAc,MACdC,wBAAyB,MACzBC,uBAAwB,MACxBC,kBAAmB,MACnBC,sBAAuB,MACvBC,kBAAmB,OAERpyC,GACXqyC,wBAAyB,GACzBC,8BAA+B,GAC/BC,uBAAwB,GACxBC,8BAA+B,GAC/BC,WAAY,GACZC,cAAe,GACfC,YAAa,GACbC,YAAa,GACbC,kBAAmB,GACnBC,oBAAqB,GACrBC,gBAAiB,GACjBC,qBAAsB,GACtBC,qBAAsB,GACtBC,2BAA4B,GAC5BC,0CAA2C,IAC3CC,2CAA4C,IAC5CC,sCAAuC,IACvCC,0CAA2C,IAC3CC,yBAA0B,IAC1BC,4BAA6B,IAC7BC,+BAAgC,IAChCC,kCAAmC,IACnCC,mCAAoC,IACpCC,sCAAuC,IACvCC,iCAAkC,IAClCC,oCAAqC,IACrCC,qCAAsC,IACtCC,wCAAyC,IACzCC,sCAAuC,IACvCC,yCAA0C,IAC1CC,+BAAgC,IAChCC,kCAAmC,IACnCC,6BAA8B,IAC9BC,gCAAiC,IACjCC,iCAAkC,IAClCC,oCAAqC,IACrCC,kCAAmC,IACnCC,qCAAsC,IACtCC,6BAA8B,IAC9BC,gCAAiC,IACjCC,iCAAkC,IAClCC,oCAAqC,IACrCC,oCAAqC,IACrCC,uCAAwC,IACxCC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,wCAAyC,IACzCC,2CAA4C,IAC5CC,sCAAuC,IACvCC,yCAA0C,IAC1CC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,sCAAuC,IACvCC,yCAA0C,IAC1CC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,8BAA+B,IAC/BC,iCAAkC,IAClCC,8CAA+C,IAC/CC,iDAAkD,IAClDC,mCAAoC,IACpCC,sCAAuC,IACvCC,qCAAsC,IACtCC,wCAAyC,IACzCC,uCAAwC,IACxCC,0CAA2C,IAC3CC,qCAAsC,IACtCC,wCAAyC,IACzCC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,4CAA6C,IAC7CC,+CAAgD,IAChDC,uCAAwC,IACxCC,0CAA2C,IAC3CC,mCAAoC,IACpCC,sCAAuC,IACvCC,iCAAkC,IAClCC,oCAAqC,IACrCC,sCAAuC,IACvCC,yCAA0C,IAC1CC,oCAAqC,IACrCC,uCAAwC,IACxCC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,kCAAmC,IACnCC,qCAAsC,IACtCC,mCAAoC,IACpCC,sCAAuC,IACvCC,iCAAkC,IAClCC,oCAAqC,IACrCC,uCAAwC,IACxCC,0CAA2C,IAC3CC,wCAAyC,IACzCC,2CAA4C,IAC5CC,wCAAyC,IACzCC,2CAA4C,IAC5CC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,qCAAsC,IACtCC,wCAAyC,IACzCC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,6CAA8C,IAC9CC,gDAAiD,IACjDC,8CAA+C,IAC/CC,iDAAkD,IAClDC,8CAA+C,IAC/CC,iDAAkD,IAClDC,+CAAgD,IAChDC,kDAAmD,IACnDC,kCAAmC,IACnCC,qCAAsC,IACtCC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,4CAA6C,IAC7CC,+CAAgD,IAChDC,wCAAyC,IACzCC,2CAA4C,IAC5CC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,kCAAmC,IACnCC,qCAAsC,IACtCC,mCAAoC,IACpCC,sCAAuC,IACvCC,mCAAoC,IACpCC,sCAAuC,IACvCC,oCAAqC,IACrCC,uCAAwC,IACxCC,qCAAsC,IACtCC,wCAAyC,IACzCC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,uCAAwC,IACxCC,0CAA2C,IAC3CC,wCAAyC,IACzCC,2CAA4C,IAC5CC,4CAA6C,IAC7CC,+CAAgD,IAChDC,6CAA8C,IAC9CC,gDAAiD,IACjDC,oCAAqC,IACrCC,uCAAwC,IACxCC,sCAAuC,IACvCC,yCAA0C,IAC1CC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,iCAAkC,IAClCC,oCAAqC,IACrCC,kCAAmC,IACnCC,qCAAsC,IACtCC,mCAAoC,IACpCC,sCAAuC,IACvCC,sCAAuC,IACvCC,yCAA0C,IAC1CC,uCAAwC,IACxCC,0CAA2C,IAC3CC,wCAAyC,IACzCC,2CAA4C,IAC5CC,iCAAkC,IAClCC,oCAAqC,IACrCC,+BAAgC,IAChCC,kCAAmC,IACnCC,qCAAsC,IACtCC,wCAAyC,IACzCC,qCAAsC,IACtCC,wCAAyC,IACzCC,yDAA0D,IAC1DC,4DAA6D,IAC7DC,0DAA2D,IAC3DC,6DAA8D,IAC9DC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,4CAA6C,IAC7CC,+CAAgD,IAChDC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,wCAAyC,IACzCC,2CAA4C,IAC5CC,iCAAkC,IAClCC,oCAAqC,IACrCC,kCAAmC,IACnCC,qCAAsC,IACtCC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,kCAAmC,IACnCC,qCAAsC,IACtCC,kCAAmC,IACnCC,qCAAsC,IACtCC,mCAAoC,IACpCC,sCAAuC,IACvCC,mCAAoC,IACpCC,sCAAuC,IACvCC,qCAAsC,IACtCC,wCAAyC,IACzCC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,+CAAgD,IAChDC,kDAAmD,IACnDC,wCAAyC,IACzCC,2CAA4C,IAC5CC,kCAAmC,IACnCC,qCAAsC,IACtCC,sCAAuC,IACvCC,yCAA0C,IAC1CC,uCAAwC,IACxCC,0CAA2C,IAC3CC,qCAAsC,IACtCC,wCAAyC,IACzCC,sCAAuC,IACvCC,yCAA0C,IAC1CC,gCAAiC,IACjCC,mCAAoC,IACpCC,gCAAiC,IACjCC,mCAAoC,IACpCC,iCAAkC,IAClCC,oCAAqC,IACrCC,uCAAwC,IACxCC,0CAA2C,IAC3CC,sCAAuC,IACvCC,yCAA0C,IAC1CC,uCAAwC,IACxCC,0CAA2C,IAC3CC,qCAAsC,IACtCC,wCAAyC,IACzCC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,sCAAuC,IACvCC,yCAA0C,IAC1CC,gCAAiC,IACjCC,mCAAoC,IACpCC,iCAAkC,IAClCC,oCAAqC,IACrCC,uCAAwC,IACxCC,0CAA2C,IAC3CC,wCAAyC,IACzCC,2CAA4C,IAC5CC,+BAAgC,IAChCC,kCAAmC,IACnCC,iCAAkC,IAClCC,oCAAqC,IACrCC,kCAAmC,IACnCC,qCAAsC,IACtCC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,sCAAuC,IACvCC,yCAA0C,IAC1CC,uCAAwC,IACxCC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,gDAAiD,IACjDC,wCAAyC,IACzCC,2CAA4C,IAC5CC,uCAAwC,IACxCC,0CAA2C,IAC3CC,wCAAyC,IACzCC,2CAA4C,IAC5CC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,sCAAuC,IACvCC,yCAA0C,IAC1CC,qCAAsC,IACtCC,wCAAyC,IACzCC,gCAAiC,IACjCC,mCAAoC,IACpCC,iCAAkC,IAClCC,oCAAqC,IACrCC,qCAAsC,IACtCC,wCAAyC,IACzCC,qCAAsC,IACtCC,wCAAyC,IACzCC,gCAAiC,IACjCC,mCAAoC,IACpCC,oCAAqC,IACrCC,uCAAwC,IACxCC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,sCAAuC,IACvCC,yCAA0C,IAC1CC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,+CAAgD,IAChDC,kDAAmD,IACnDC,8CAA+C,IAC/CC,iDAAkD,IAClDC,gDAAiD,IACjDC,mDAAoD,IACpDC,iDAAkD,IAClDC,oDAAqD,IACrDC,+CAAgD,IAChDC,kDAAmD,IACnDC,8CAA+C,IAC/CC,iDAAkD,IAClDC,gDAAiD,IACjDC,mDAAoD,IACpDC,iDAAkD,IAClDC,oDAAqD,IACrDC,6CAA8C,IAC9CC,gDAAiD,IACjDC,8CAA+C,IAC/CC,iDAAkD,IAClDC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,gDAAiD,IACjDC,mDAAoD,IACpDC,iDAAkD,IAClDC,oDAAqD,IACrDC,8CAA+C,IAC/CC,iDAAkD,IAClDC,+CAAgD,IAChDC,kDAAmD,IACnDC,8CAA+C,IAC/CC,iDAAkD,IAClDC,+CAAgD,IAChDC,kDAAmD,IACnDC,6CAA8C,IAC9CC,gDAAiD,IACjDC,8CAA+C,IAC/CC,iDAAkD,IAClDC,wCAAyC,IACzCC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,iDAAkD,IAClDC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,6CAA8C,IAC9CC,gDAAiD,IACjDC,gDAAiD,IACjDC,mDAAoD,IACpDC,mCAAoC,IACpCC,sCAAuC,IACvCC,oCAAqC,IACrCC,uCAAwC,IACxCC,qCAAsC,IACtCC,wCAAyC,IACzCC,sCAAuC,IACvCC,yCAA0C,IAC1CC,mCAAoC,IACpCC,sCAAuC,IACvCC,iDAAkD,IAClDC,oDAAqD,IACrDC,kDAAmD,IACnDC,qDAAsD,IACtDC,+CAAgD,IAChDC,kDAAmD,IACnDC,gDAAiD,IACjDC,mDAAoD,IACpDC,4CAA6C,IAC7CC,+CAAgD,IAChDC,wDAAyD,IACzDC,2DAA4D,IAC5DC,qDAAsD,IACtDC,wDAAyD,IACzDC,yCAA0C,IAC1CC,4CAA6C,IAC7CC,+CAAgD,IAChDC,kDAAmD,IACnDC,uDAAwD,IACxDC,0DAA2D,IAC3DC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,oDAAqD,IACrDC,uDAAwD,IACxDC,iDAAkD,IAClDC,oDAAqD,IACrDC,0BAA2B,IAC3BC,6BAA8B,IAC9BC,kCAAmC,IACnCC,qCAAsC,IACtCC,+BAAgC,IAChCC,kCAAmC,IACnCC,8CAA+C,IAC/CC,iDAAkD,IAClDC,oDAAqD,IACrDC,uDAAwD,IACxDC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,mCAAoC,IACpCC,sCAAuC,IACvCC,0CAA2C,IAC3CC,6CAA8C,IAC9CC,wCAAyC,IACzCC,2CAA4C,IAC5CC,qCAAsC,IACtCC,wCAAyC,IACzCC,2CAA4C,IAC5CC,8CAA+C,IAC/CC,8BAA+B,KAC/BC,6BAA8B,KAC9BC,4BAA6B,KAC7BC,4BAA6B,KAC7BC,sCAAuC,KACvCC,OAAQ,KACRC,0BAA2B,KAC3BC,yBAA0B,KAC1BC,wBAAyB,KACzBC,wBAAyB,KACzBC,gCAAiC,KACjCC,0BAA2B,KAC3BC,8BAA+B,KAC/BC,wBAAyB,KACzBC,0BAA2B,KAC3BC,0BAA2B,KAC3BC,oCAAqC,KACrCC,oCAAqC,KACrCC,wBAAyB,KACzBC,kCAAmC,KACnCC,wBAAyB,KACzBC,sCAAuC,KACvCC,wBAAyB,KACzBC,sBAAuB,KACvBC,wBAAyB,KACzBC,+BAAgC,KAChCC,8BAA+B,KAC/BC,8BAA+B,KAC/BC,6BAA8B,KAC9BC,+BAAgC,KAChCC,8BAA+B,KAC/BC,gCAAiC,KACjCC,kCAAmC,KACnCC,+BAAgC,KAChCC,sCAAuC,KACvCC,uCAAwC,KACxCC,wCAAyC,KACzCC,uCAAwC,KACxCC,2CAA4C,KAC5CC,2CAA4C,KAC5CC,0CAA2C,KAC3CC,yCAA0C,KAC1CC,sCAAuC,KACvCC,iDAAkD,KAClDC,0CAA2C,KAC3CC,kCAAmC,KACnCC,qCAAsC,KACtCC,uCAAwC,KACxCC,gDAAiD,KACjDC,kDAAmD,KACnDC,gDAAiD,KACjDC,qDAAsD,KACtDC,kDAAmD,KACnDC,qDAAsD,KACtDC,yCAA0C,KAC1CC,6CAA8C,KAC9CC,iBAAkB,KAClBC,uDAAwD,KACxDC,cAAe,KACfC,WAAY,KACZC,6CAA8C,KAC9CC,iDAAkD,KAClDC,wDAAyD,KACzDC,oDAAqD,KACrDC,wCAAyC,KACzCC,kCAAmC,KACnCC,qCAAsC,KACtCC,qCAAsC,KACtCC,wCAAyC,KACzCC,iCAAkC,KAClCC,6BAA8B,KAC9BC,wCAAyC,KACzCC,oCAAqC,KACrCC,mCAAoC,KACpCC,sCAAuC,KACvCC,2CAA4C,KAC5CC,2CAA4C,KAC5CC,8CAA+C,KAC/CC,8CAA+C,KAC/CC,sCAAuC,KACvCC,mCAAoC,KACpCC,sCAAuC,KACvCC,mCAAoC,KACpCC,6CAA8C,KAC9CC,0CAA2C,KAC3CC,0CAA2C,KAC3CC,uCAAwC,KACxCC,yCAA0C,KAC1CC,yCAA0C,MAC1CC,gDAAiD,MACjDC,6CAA8C,MAC9CC,gCAAiC,MACjCC,iCAAkC,MAClCC,4BAA6B,MAC7BC,iDAAkD,MAClDC,0BAA2B,MAC3BC,6CAA8C,MAC9CC,gBAAiB,MACjBC,uCAAwC,MACxCC,qCAAsC,MACtCC,wCAAyC,MACzCC,wCAAyC,MACzCC,2CAA4C,MAC5CC,+BAAgC,MAChCC,2BAA4B,MAC5BC,2BAA4B,MAC5BC,yBAA0B,MAC1BC,gCAAiC,MACjCC,+CAAgD,MAChDC,kDAAmD,MACnDC,yBAA0B,MAC1BC,qCAAsC,MACtCC,qCAAsC,MACtCC,sCAAuC,MACvCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,8CAA+C,MAC/CC,iCAAkC,MAClCC,qCAAsC,MACtCC,6BAA8B,MAC9BC,2BAA4B,MAC5BC,8BAA+B,MAC/BC,kCAAmC,MACnCC,mCAAoC,MACpCC,8CAA+C,MAC/CC,sBAAuB,MACvBC,uCAAwC,MACxCC,oCAAqC,MACrCC,+CAAgD,MAChDC,6DAA8D,MAC9DC,0CAA2C,MAC3CC,kBAAmB,MACnBC,uCAAwC,MACxCC,mDAAoD,MACpDC,mCAAoC,MACpCC,iCAAkC,MAClCC,6BAA8B,MAC9BC,oCAAqC,MACrCC,gCAAiC,MACjCC,4CAA6C,MAC7CC,yCAA0C,MAC1CC,+CAAgD,MAChDC,4CAA6C,MAC7CC,oCAAqC,MACrCC,2BAA4B,MAC5BC,uCAAwC,MACxCC,8BAA+B,MAC/BC,sDAAuD,MACvDC,sCAAuC,MACvCC,4CAA6C,MAC7CC,yCAA0C,MAC1CC,+CAAgD,MAChDC,oCAAqC,MACrCC,gDAAiD,MACjDC,iDAAkD,MAClDC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,uCAAwC,MACxCC,mDAAoD,MACpDC,oDAAqD,MACrDC,8CAA+C,MAC/CC,+CAAgD,MAChDC,oBAAqB,MACrBC,wEAAyE,MACzEC,sCAAuC,MACvCC,yCAA0C,MAC1CC,8BAA+B,MAC/BC,0BAA2B,MAC3BC,iCAAkC,MAClCC,6BAA8B,MAC9BC,2CAA4C,MAC5CC,+CAAgD,MAChDC,8CAA+C,MAC/CC,kDAAmD,MACnDC,6CAA8C,MAC9CC,gDAAiD,MACjDC,uCAAwC,MACxCC,+BAAgC,MAChCC,mDAAoD,MACpDC,6DAA8D,MAC9DC,6CAA8C,MAC9CC,uDAAwD,MACxDC,iDAAkD,MAClDC,2DAA4D,MAC5DC,uDAAwD,MACxDC,iEAAkE,MAClEC,0CAA2C,MAC3CC,kEAAmE,MACnEC,4EAA6E,MAC7EC,4DAA6D,MAC7DC,sEAAuE,MACvEC,gEAAiE,MACjEC,0EAA2E,MAC3EC,sCAAuC,MACvCC,wDAAyD,MACzDC,kEAAmE,MACnEC,4DAA6D,MAC7DC,sEAAuE,MACvEC,8DAA+D,MAC/DC,uCAAwC,MACxCC,wCAAyC,MACzCC,mCAAoC,MACpCC,mCAAoC,MACpCC,8BAA+B,MAC/BC,iCAAkC,MAClCC,sCAAuC,MACvCC,iCAAkC,MAClCC,oCAAqC,MACrCC,kCAAmC,MACnCC,6CAA8C,MAC9CC,uCAAwC,MACxCC,qCAAsC,MACtCC,wCAAyC,MACzCC,wCAAyC,MACzCC,oCAAqC,MACrCC,yCAA0C,MAC1CC,oCAAqC,MACrCC,0BAA2B,MAC3BC,kCAAmC,MACnCC,8BAA+B,MAC/BC,gCAAiC,MACjCC,oCAAqC,MACrCC,kCAAmC,MACnCC,sCAAuC,MACvCC,uCAAwC,MACxCC,gCAAiC,MACjCC,8BAA+B,MAC/BC,kCAAmC,MACnCC,mCAAoC,MACpCC,8BAA+B,MAC/BC,mCAAoC,MACpCC,+BAAgC,MAChCC,+BAAgC,MAChCC,2BAA4B,MAC5BC,sCAAuC,MACvCC,4CAA6C,MAC7CC,mCAAoC,MACpCC,oCAAqC,MACrCC,kCAAmC,MACnCC,kDAAmD,MACnDC,mDAAoD,MACpDC,wCAAyC,MACzCC,yCAA0C,MAC1CC,qCAAsC,MACtCC,iDAAkD,MAClDC,kDAAmD,MACnDC,qCAAsC,MACtCC,yCAA0C,MAC1CC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,sCAAuC,MACvCC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,4CAA6C,MAC7CC,gDAAiD,MACjDC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,0CAA2C,MAC3CC,8CAA+C,MAC/CC,+CAAgD,MAChDC,+CAAgD,MAChDC,gDAAiD,MACjDC,+CAAgD,MAChDC,mCAAoC,MACpCC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,uCAAwC,MACxCC,4CAA6C,MAC7CC,2CAA4C,MAC5CC,uCAAwC,MACxCC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,mCAAoC,MACpCC,oCAAqC,MACrCC,oCAAqC,MACrCC,sCAAuC,MACvCC,wCAAyC,MACzCC,sCAAuC,MACvCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,wCAAyC,MACzCC,oCAAqC,MACrCC,2CAA4C,MAC5CC,uCAAwC,MACxCC,kCAAmC,MACnCC,oCAAqC,MACrCC,qCAAsC,MACtCC,sCAAuC,MACvCC,uCAAwC,MACxCC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,qCAAsC,MACtCC,wCAAyC,MACzCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,qCAAsC,MACtCC,uCAAwC,MACxCC,0CAA2C,MAC3CC,kCAAmC,MACnCC,mCAAoC,MACpCC,oCAAqC,MACrCC,uCAAwC,MACxCC,wCAAyC,MACzCC,yCAA0C,MAC1CC,kCAAmC,MACnCC,gCAAiC,MACjCC,sCAAuC,MACvCC,sCAAuC,MACvCC,0DAA2D,MAC3DC,2DAA4D,MAC5DC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,2CAA4C,MAC5CC,0CAA2C,MAC3CC,yCAA0C,MAC1CC,kCAAmC,MACnCC,mCAAoC,MACpCC,0CAA2C,MAC3CC,mCAAoC,MACpCC,mCAAoC,MACpCC,oCAAqC,MACrCC,oCAAqC,MACrCC,sCAAuC,MACvCC,4CAA6C,MAC7CC,gDAAiD,MACjDC,yCAA0C,MAC1CC,mCAAoC,MACpCC,uCAAwC,MACxCC,wCAAyC,MACzCC,sCAAuC,MACvCC,uCAAwC,MACxCC,iCAAkC,MAClCC,iCAAkC,MAClCC,kCAAmC,MACnCC,wCAAyC,MACzCC,uCAAwC,MACxCC,wCAAyC,MACzCC,sCAAuC,MACvCC,4CAA6C,MAC7CC,0CAA2C,MAC3CC,uCAAwC,MACxCC,iCAAkC,MAClCC,sCAAuC,MACvCC,yCAA0C,MAC1CC,kCAAmC,MACnCC,wCAAyC,MACzCC,yCAA0C,MAC1CC,gCAAiC,MACjCC,kCAAmC,MACnCC,mCAAoC,MACpCC,0CAA2C,MAC3CC,uCAAwC,MACxCC,gDAAiD,MACjDC,wCAAyC,MACzCC,8CAA+C,MAC/CC,yCAA0C,MAC1CC,wCAAyC,MACzCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,uCAAwC,MACxCC,sCAAuC,MACvCC,iCAAkC,MAClCC,kCAAmC,MACnCC,sCAAuC,MACvCC,sCAAuC,MACvCC,iCAAkC,MAClCC,4CAA6C,MAC7CC,qCAAsC,MACtCC,4CAA6C,MAC7CC,uCAAwC,MACxCC,2CAA4C,MAC5CC,0CAA2C,MAC3CC,gDAAiD,MACjDC,+CAAgD,MAChDC,iDAAkD,MAClDC,kDAAmD,MACnDC,gDAAiD,MACjDC,+CAAgD,MAChDC,iDAAkD,MAClDC,kDAAmD,MACnDC,8CAA+C,MAC/CC,+CAAgD,MAChDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,iDAAkD,MAClDC,kDAAmD,MACnDC,+CAAgD,MAChDC,gDAAiD,MACjDC,+CAAgD,MAChDC,gDAAiD,MACjDC,8CAA+C,MAC/CC,+CAAgD,MAChDC,yCAA0C,MAC1CC,sCAAuC,MACvCC,4CAA6C,MAC7CC,+CAAgD,MAChDC,2CAA4C,MAC5CC,oCAAqC,MACrCC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,iDAAkD,MAClDC,oCAAqC,MACrCC,qCAAsC,MACtCC,sCAAuC,MACvCC,uCAAwC,MACxCC,oCAAqC,MACrCC,kDAAmD,MACnDC,mDAAoD,MACpDC,gDAAiD,MACjDC,iDAAkD,MAClDC,+BAAgC,MAChCC,6CAA8C,MAC9CC,6CAA8C,MAC9CC,0CAA2C,MAC3CC,yDAA0D,MAC1DC,sDAAuD,MACvDC,0CAA2C,MAC3CC,gDAAiD,MACjDC,wDAAyD,MACzDC,4CAA6C,MAC7CC,kCAAmC,MACnCC,qDAAsD,MACtDC,kDAAmD,MACnDC,qDAAsD,MACtDC,2BAA4B,MAC5BC,mCAAoC,MACpCC,uCAAwC,MACxCC,6CAA8C,MAC9CC,qCAAsC,MACtCC,4BAA6B,MAC7BC,+CAAgD,MAChDC,gCAAiC,MACjCC,kDAAmD,MACnDC,+CAAgD,MAChDC,gDAAiD,MACjDC,gCAAiC,MACjCC,iCAAkC,MAClCC,wBAAyB,MACzBC,gCAAiC,MACjCC,uBAAwB,MACxBC,oCAAqC,MACrCC,uBAAwB,MACxBC,yBAA0B,MAC1BC,4BAA6B,MAC7BC,6BAA8B,MAC9BC,4CAA6C,MAC7CC,+CAAgD,MAChDC,oDAAqD,MACrDC,kCAAmC,MACnCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,wCAAyC,MACzCC,mCAAoC,MACpCC,+CAAgD,MAChDC,uDAAwD,MACxDC,gDAAiD,MACjDC,8CAA+C,MAC/CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,iDAAkD,MAClDC,+CAAgD,MAChDC,yCAA0C,MAC1CC,iDAAkD,MAClDC,oDAAqD,MACrDC,iCAAkC,MAClCC,uBAAwB,MACxBC,qCAAsC,MACtCC,uBAAwB,MACxBC,uCAAwC,MACxCC,kCAAmC,MACnCC,oCAAqC,MACrCC,6BAA8B,MAC9BC,WAAY,MACZC,yCAA0C,MAC1CC,gCAAiC,MACjCC,gCAAiC,MACjCC,0CAA2C,MAC3CC,kDAAmD,MACnDC,gEAAiE,MACjEC,+DAAgE,MAChEC,4BAA6B,MAC7BC,sCAAuC,MACvCC,qCAAsC,MACtCC,+CAAgD,MAChDC,wCAAyC,MACzCC,kDAAmD,MACnDC,wCAAyC,MACzCC,kDAAmD,MACnDC,qCAAsC,MACtCC,+CAAgD,MAChDC,4CAA6C,MAC7CC,sDAAuD,MACvDC,yCAA0C,MAC1CC,mDAAoD,MACpDC,+CAAgD,MAChDC,yDAA0D,MAC1DC,4CAA6C,MAC7CC,sDAAuD,MACvDC,+BAAgC,MAChCC,yCAA0C,MAC1CC,gCAAiC,MACjCC,0CAA2C,MAC3CC,sCAAuC,MACvCC,gDAAiD,MACjDC,2BAA4B,MAC5BC,qCAAsC,MACtCC,4CAA6C,MAC7CC,sDAAuD,MACvDC,mCAAoC,MACpCC,kCAAmC,MACnCC,4CAA6C,MAC7CC,0CAA2C,MAC3CC,sCAAuC,MACvCC,6CAA8C,MAC9CC,yCAA0C,MAC1CC,sBAAuB,MACvBC,8CAA+C,MAC/CC,oCAAqC,MACrCC,uCAAwC,MACxCC,2BAA4B,MAC5BC,mDAAoD,MACpDC,4CAA6C,MAC7CC,2CAA4C,MAC5CC,qDAAsD,MACtDC,wCAAyC,MACzCC,uCAAwC,MACxCC,iDAAkD,MAClDC,kDAAmD,KACnDC,qDAAsD,OAE3C3tE,GACX4tE,wCAAyC,IACzCC,2CAA4C,IAC5CC,uCAAwC,IACxCC,oCAAqC,IACrCC,6BAA8B,IAC9BC,mCAAoC,IACpCC,kCAAmC,IACnCC,yCAA0C,IAC1CC,yCAA0C,IAC1CC,uBAAwB,KACxBC,0BAA2B,KAC3BC,wBAAyB,KACzBC,wBAAyB,KACzBC,0CAA2C,KAC3CC,qCAAsC,KACtCC,8CAA+C,KAC/CC,+CAAgD,KAChDC,uDAAwD,KACxDC,mDAAoD,KACpDC,kCAAmC,KACnCC,uDAAwD,KACxDC,+DAAgE,KAChEC,gDAAiD,KACjDC,wDAAyD,KACzDC,0DAA2D,KAC3DC,uCAAwC,KACxCC,0CAA2C,KAC3CC,+CAAgD,KAChDC,4CAA6C,KAC7CC,sBAAuB,KACvBC,wBAAyB,KACzBC,yBAA0B,KAC1BC,yBAA0B,KAC1BC,mBAAoB,KACpBC,0BAA2B,KAC3BC,sBAAuB,KACvBC,uBAAwB,KACxBC,+BAAgC,KAChCC,sBAAuB,KACvBC,wBAAyB,KACzBC,kCAAmC,KACnCC,4BAA6B,KAC7BC,kDAAmD,KACnDC,4CAA6C,KAC7CC,kDAAmD,KACnDC,6CAA8C,KAC9CC,kDAAmD,KACnDC,gCAAiC,KACjCC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,kDAAmD,KACnDC,yDAA0D,KAC1DC,gDAAiD,KACjDC,mCAAoC,KACpCC,sCAAuC,KACvCC,sDAAuD,KACvDC,iDAAkD,KAClDC,kCAAmC,KACnCC,wCAAyC,KACzCC,4CAA6C,KAC7CC,kDAAmD,KACnDC,qCAAsC,KACtCC,mCAAoC,KACpCC,mCAAoC,KACpCC,oCAAqC,KACrCC,0CAA2C,KAC3CC,oCAAqC,KACrCC,2BAA4B,KAC5BC,6BAA8B,KAC9BC,uBAAwB,KACxBC,2BAA4B,KAC5BC,6CAA8C,KAC9CC,iDAAkD,KAClDC,mDAAoD,KACpDC,0DAA2D,KAC3DC,kDAAmD,KACnDC,iDAAkD,KAClDC,+CAAgD,KAChDC,qDAAsD,KACtDC,sDAAuD,KACvDC,wDAAyD,KACzDC,2DAA4D,KAC5DC,mDAAoD,KACpDC,iDAAkD,KAClDC,sCAAuC,KACvCC,2CAA4C,KAC5CC,qCAAsC,KACtCC,+CAAgD,KAChDC,8CAA+C,KAC/CC,uDAAwD,KACxDC,8CAA+C,KAC/CC,wCAAyC,KACzCC,wCAAyC,KACzCC,yCAA0C,KAC1CC,kDAAmD,KACnDC,yDAA0D,KAC1DC,kDAAmD,KACnDC,iDAAkD,KAClDC,wDAAyD,KACzDC,yDAA0D,KAC1DC,gDAAiD,KACjDC,yDAA0D,KAC1DC,+CAAgD,KAChDC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,iDAAkD,KAClDC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,oDAAqD,KACrDC,oDAAqD,KACrDC,qDAAsD,KACtDC,yDAA0D,KAC1DC,0DAA2D,KAC3DC,6DAA8D,KAC9DC,yCAA0C,KAC1CC,gDAAiD,KACjDC,0CAA2C,KAC3CC,kDAAmD,KACnDC,yCAA0C,KAC1CC,yDAA0D,KAC1DC,yDAA0D,KAC1DC,sDAAuD,KACvDC,kDAAmD,KACnDC,yDAA0D,KAC1DC,uDAAwD,KACxDC,uDAAwD,KACxDC,sDAAuD,KACvDC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,0DAA2D,KAC3DC,wDAAyD,KACzDC,6CAA8C,KAC9CC,kDAAmD,KACnDC,gDAAiD,KACjDC,qDAAsD,KACtDC,2CAA4C,KAC5CC,+CAAgD,KAChDC,kEAAmE,KACnEC,+CAAgD,KAChDC,8CAA+C,KAC/CC,yCAA0C,KAC1CC,qDAAsD,KACtDC,mDAAoD,KACpDC,uDAAwD,KACxDC,wCAAyC,KACzCC,iDAAkD,KAClDC,4CAA6C,KAC7CC,iDAAkD,KAClDC,mBAAoB,KACpBC,sBAAuB,KACvBC,oBAAqB,KACrBC,8BAA+B,KAC/BC,gCAAiC,KACjCC,0BAA2B,KAC3BC,8BAA+B,KAC/BC,0CAA2C,KAC3CC,yCAA0C,KAC1CC,+CAAgD,KAChDC,8CAA+C,KAC/CC,0CAA2C,KAC3CC,wCAAyC,KACzCC,oBAAqB,KACrBC,6CAA8C,KAC9CC,wCAAyC,KACzCC,iDAAkD,KAClDC,kDAAmD,KACnDC,kEAAmE,KACnEC,sEAAuE,KACvEC,wEAAyE,KACzEC,+EAAgF,KAChFC,sEAAuE,KACvEC,oEAAqE,KACrEC,0EAA2E,KAC3EC,2EAA4E,KAC5EC,6EAA8E,KAC9EC,gFAAiF,KACjFC,wEAAyE,KACzEC,0DAA2D,KAC3DC,sDAAuD,KACvDC,qCAAsC,KACtCC,sBAAuB,KACvBC,gCAAiC,KACjCC,wCAAyC,KACzCC,2CAA4C,KAC5CC,gDAAiD,KACjDC,gDAAiD,KACjDC,mDAAoD,KACpDC,yDAA0D,KAC1DC,0DAA2D,KAC3DC,4DAA6D,KAC7DC,mDAAoD,KACpDC,oDAAqD,KACrDC,mDAAoD,KACpDC,kDAAmD,KACnDC,qDAAsD,KACtDC,wBAAyB,KACzBC,4BAA6B,KAC7BC,uBAAwB,KACxBC,+BAAgC,KAChCC,gCAAiC,KACjCC,gCAAiC,KACjCC,+BAAgC,KAChCC,mCAAoC,KACpCC,8CAA+C,KAC/CC,sCAAuC,KACvCC,uCAAwC,KACxCC,6CAA8C,KAC9CC,yCAA0C,KAC1CC,qCAAsC,KACtCC,0CAA2C,KAC3CC,+CAAgD,KAChDC,gDAAiD,KACjDC,yCAA0C,KAC1CC,6CAA8C,KAC9CC,kCAAmC,KACnCC,kCAAmC,KACnCC,mCAAoC,KACpCC,qCAAsC,KACtCC,sCAAuC,KACvCC,yCAA0C,KAC1CC,wCAAyC,KACzCC,2CAA4C,KAC5CC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,2CAA4C,KAC5CC,uDAAwD,KACxDC,wDAAyD,KACzDC,yDAA0D,KAC1DC,wDAAyD,KACzDC,4DAA6D,KAC7DC,4DAA6D,KAC7DC,2DAA4D,KAC5DC,0DAA2D,KAC3DC,uDAAwD,KACxDC,kDAAmD,KACnDC,oDAAqD,KACrDC,mDAAoD,KACpDC,kDAAmD,KACnDC,oDAAqD,KACrDC,sDAAuD,KACvDC,qDAAsD,KACtDC,uDAAwD,KACxDC,gCAAiC,KACjCC,oBAAqB,KACrBC,sCAAuC,KACvCC,4DAA6D,KAC7DC,wDAAyD,KACzDC,sCAAuC,KACvCC,sCAAuC,KACvCC,gDAAiD,KACjDC,qCAAsC,KACtCC,gCAAiC,KACjCC,qBAAsB,KACtBC,uBAAwB,KACxBC,yBAA0B,KAC1BC,uCAAwC,KACxCC,2BAA4B,KAC5BC,0BAA2B,KAC3BC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,sCAAuC,KACvCC,gCAAiC,KACjCC,8BAA+B,KAC/BC,gCAAiC,KACjCC,oCAAqC,KACrCC,sCAAuC,KACvCC,+BAAgC,KAChCC,8BAA+B,KAC/BC,4BAA6B,KAC7BC,qCAAsC,KACtCC,qCAAsC,KACtCC,2BAA4B,KAC5BC,mDAAoD,KACpDC,wCAAyC,KACzCC,mCAAoC,KACpCC,gBAAiB,KACjBC,oDAAqD,KACrDC,wCAAyC,KACzCC,sDAAuD,KACvDC,+CAAgD,KAChDC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,0CAA2C,KAC3CC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,6CAA8C,KAC9CC,wCAAyC,KACzCC,sDAAuD,KACvDC,2CAA4C,KAC5CC,2CAA4C,KAC5CC,sDAAuD,KACvDC,2CAA4C,KAC5CC,2CAA4C,KAC5CC,+CAAgD,KAChDC,4CAA6C,KAC7CC,sDAAuD,KACvDC,yBAA0B,KAC1BC,+BAAgC,KAChCC,0BAA2B,KAC3BC,8BAA+B,KAC/BC,0BAA2B,KAC3BC,wBAAyB,KACzBC,iDAAkD,KAClDC,KAAM,KACNC,YAAa,KACbC,UAAW,KACXC,WAAY,KACZC,WAAY,KACZC,eAAgB,KAChBC,gBAAiB,KACjBC,kCAAmC,KACnCC,oCAAqC,KACrCC,8BAA+B,KAC/BC,kCAAmC,KACnCC,6CAA8C,KAC9CC,mDAAoD,KACpDC,8CAA+C,KAC/CC,kDAAmD,KACnDC,8CAA+C,KAC/CC,4CAA6C,KAC7CC,4CAA6C,KAC7CC,uCAAwC,KACxCC,iDAAkD,KAClDC,4CAA6C,KAC7CC,qDAAsD,KACtDC,0DAA2D,KAC3DC,yDAA0D,KAC1DC,2DAA4D,KAC5DC,mDAAoD,KACpDC,sDAAuD,KACvDC,sEAAuE,KACvEC,0EAA2E,KAC3EC,4EAA6E,KAC7EC,mFAAoF,KACpFC,2EAA4E,KAC5EC,0EAA2E,KAC3EC,wEAAyE,KACzEC,8EAA+E,KAC/EC,+EAAgF,KAChFC,iFAAkF,KAClFC,oFAAqF,KACrFC,4EAA6E,KAC7EC,8DAA+D,KAC/DC,0DAA2D,KAC3DC,gFAAiF,KACjFC,wFAAyF,KACzFC,yCAA0C,KAC1CC,8CAA+C,KAC/CC,+DAAgE,KAChEC,mEAAoE,KACpEC,qEAAsE,KACtEC,4EAA6E,KAC7EC,oEAAqE,KACrEC,mEAAoE,KACpEC,iEAAkE,KAClEC,uEAAwE,KACxEC,wEAAyE,KACzEC,0EAA2E,KAC3EC,6EAA8E,KAC9EC,qEAAsE,KACtEC,yEAA0E,KAC1EC,iFAAkF,KAClFC,0DAA2D,KAC3DC,4DAA6D,KAC7DC,kEAAmE,KACnEC,0DAA2D,KAC3DC,4DAA6D,KAC7DC,0DAA2D,KAC3DC,qEAAsE,KACtEC,uEAAwE,KACxEC,qEAAsE,KACtEC,sEAAuE,KACvEC,0EAA2E,KAC3EC,2EAA4E,KAC5EC,8EAA+E,KAC/EC,0DAA2D,KAC3DC,iEAAkE,KAClEC,2DAA4D,KAC5DC,mEAAoE,KACpEC,0DAA2D,KAC3DC,0EAA2E,KAC3EC,0EAA2E,KAC3EC,uEAAwE,KACxEC,mEAAoE,KACpEC,0EAA2E,KAC3EC,wEAAyE,KACzEC,wEAAyE,KACzEC,uEAAwE,KACxEC,6DAA8D,KAC9DC,+DAAgE,KAChEC,2EAA4E,KAC5EC,yEAA0E,KAC1EC,8DAA+D,KAC/DC,mEAAoE,KACpEC,iEAAkE,KAClEC,sEAAuE,KACvEC,4DAA6D,KAC7DC,gEAAiE,KACjEC,mFAAoF,KACpFC,gEAAiE,KACjEC,+DAAgE,KAChEC,mEAAoE,KACpEC,qEAAsE,KACtEC,kEAAmE,KACnEC,8EAA+E,KAC/EC,4EAA6E,KAC7EC,gFAAiF,KACjFC,iEAAkE,KAClEC,0EAA2E,KAC3EC,qEAAsE,KACtEC,0EAA2E,KAC3EC,0EAA2E,KAC3EC,4CAA6C,KAC7CC,+CAAgD,KAChDC,wBAAyB,KACzBC,oCAAqC,KACrCC,sCAAuC,KACvCC,uCAAwC,KACxCC,uCAAwC,KACxCC,iCAAkC,KAClCC,wCAAyC,KACzCC,sCAAuC,KACvCC,oCAAqC,KACrCC,qCAAsC,KACtCC,uBAAwB,KACxBC,yBAA0B,KAC1BC,0BAA2B,KAC3BC,0BAA2B,KAC3BC,oBAAqB,KACrBC,2BAA4B,KAC5BC,yBAA0B,KAC1BC,uBAAwB,KACxBC,wBAAyB,KACzBC,+BAAgC,KAChCC,iCAAkC,KAClCC,kCAAmC,KACnCC,kCAAmC,KACnCC,4BAA6B,KAC7BC,mCAAoC,KACpCC,iCAAkC,KAClCC,+BAAgC,KAChCC,gCAAiC,KACjCC,uCAAwC,KACxCC,8BAA+B,KAC/BC,gCAAiC,KACjCC,0CAA2C,KAC3CC,oCAAqC,KACrCC,8BAA+B,KAC/BC,gCAAiC,KACjCC,iCAAkC,KAClCC,iCAAkC,KAClCC,2BAA4B,KAC5BC,kCAAmC,KACnCC,gCAAiC,KACjCC,8BAA+B,KAC/BC,+BAAgC,KAChCC,sCAAuC,KACvCC,6BAA8B,KAC9BC,+BAAgC,KAChCC,yCAA0C,KAC1CC,mCAAoC,KACpCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,2CAA4C,KAC5CC,2CAA4C,KAC5CC,qCAAsC,KACtCC,4CAA6C,KAC7CC,0CAA2C,KAC3CC,wCAAyC,KACzCC,yCAA0C,KAC1CC,gDAAiD,KACjDC,uCAAwC,KACxCC,yCAA0C,KAC1CC,mDAAoD,KACpDC,6CAA8C,KAC9CC,gDAAiD,KACjDC,8BAA+B,KAC/BC,gCAAiC,KACjCC,iCAAkC,KAClCC,iCAAkC,KAClCC,2BAA4B,KAC5BC,kCAAmC,KACnCC,gCAAiC,KACjCC,8BAA+B,KAC/BC,+BAAgC,KAChCC,sCAAuC,KACvCC,6BAA8B,KAC9BC,+BAAgC,KAChCC,yCAA0C,KAC1CC,mCAAoC,KACpCC,oCAAqC,KACrCC,sCAAuC,KACvCC,uCAAwC,KACxCC,uCAAwC,KACxCC,iCAAkC,KAClCC,wCAAyC,KACzCC,sCAAuC,KACvCC,oCAAqC,KACrCC,qCAAsC,KACtCC,4CAA6C,KAC7CC,mCAAoC,KACpCC,qCAAsC,KACtCC,+CAAgD,KAChDC,yCAA0C,KAC1CC,kCAAmC,KACnCC,oCAAqC,KACrCC,qCAAsC,KACtCC,qCAAsC,KACtCC,+BAAgC,KAChCC,sCAAuC,KACvCC,oCAAqC,KACrCC,kCAAmC,KACnCC,mCAAoC,KACpCC,0CAA2C,KAC3CC,iCAAkC,KAClCC,mCAAoC,KACpCC,6CAA8C,KAC9CC,uCAAwC,KACxCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,sDAAuD,KACvDC,gDAAiD,KACjDC,sCAAuC,KACvCC,wCAAyC,KACzCC,yCAA0C,KAC1CC,yCAA0C,KAC1CC,mCAAoC,KACpCC,0CAA2C,KAC3CC,wCAAyC,KACzCC,sCAAuC,KACvCC,uCAAwC,KACxCC,8CAA+C,KAC/CC,qCAAsC,KACtCC,uCAAwC,KACxCC,iDAAkD,KAClDC,2CAA4C,KAC5CC,wCAAyC,KACzCC,6BAA8B,KAC9BC,+BAAgC,KAChCC,gCAAiC,KACjCC,gCAAiC,KACjCC,0BAA2B,KAC3BC,iCAAkC,KAClCC,+BAAgC,KAChCC,6BAA8B,KAC9BC,8BAA+B,KAC/BC,qCAAsC,KACtCC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,wCAAyC,KACzCC,kCAAmC,KACnCC,+BAAgC,KAChCC,kCAAmC,KACnCC,oCAAqC,KACrCC,qCAAsC,KACtCC,qCAAsC,KACtCC,+BAAgC,KAChCC,sCAAuC,KACvCC,oCAAqC,KACrCC,kCAAmC,KACnCC,mCAAoC,KACpCC,0CAA2C,KAC3CC,iCAAkC,KAClCC,mCAAoC,KACpCC,6CAA8C,KAC9CC,uCAAwC,KACxCC,8CAA+C,KAC/CC,gDAAiD,KACjDC,iDAAkD,KAClDC,iDAAkD,KAClDC,2CAA4C,KAC5CC,kDAAmD,KACnDC,gDAAiD,KACjDC,8CAA+C,KAC/CC,+CAAgD,KAChDC,sDAAuD,KACvDC,6CAA8C,KAC9CC,+CAAgD,KAChDC,yDAA0D,KAC1DC,mDAAoD,KACpDC,kDAAmD,KACnDC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,4CAA6C,KAC7CC,sCAAuC,KACvCC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,iDAAkD,KAClDC,wCAAyC,KACzCC,0CAA2C,KAC3CC,oDAAqD,KACrDC,8CAA+C,KAC/CC,6CAA8C,KAC9CC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,4CAA6C,KAC7CC,sCAAuC,KACvCC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,iDAAkD,KAClDC,wCAAyC,KACzCC,0CAA2C,KAC3CC,oDAAqD,KACrDC,8CAA+C,KAC/CC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,8CAA+C,KAC/CC,8CAA+C,KAC/CC,wCAAyC,KACzCC,+CAAgD,KAChDC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,mDAAoD,KACpDC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,sDAAuD,KACvDC,gDAAiD,KACjDC,+CAAgD,KAChDC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,4CAA6C,KAC7CC,sCAAuC,KACvCC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,iDAAkD,KAClDC,wCAAyC,KACzCC,0CAA2C,KAC3CC,oDAAqD,KACrDC,8CAA+C,KAC/CC,6CAA8C,KAC9CC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,6CAA8C,KAC9CC,6CAA8C,KAC9CC,uCAAwC,KACxCC,8CAA+C,KAC/CC,4CAA6C,KAC7CC,0CAA2C,KAC3CC,2CAA4C,KAC5CC,kDAAmD,KACnDC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,qDAAsD,KACtDC,+CAAgD,KAChDC,8CAA+C,KAC/CC,qCAAsC,KACtCC,uCAAwC,KACxCC,wCAAyC,KACzCC,wCAAyC,KACzCC,kCAAmC,KACnCC,yCAA0C,KAC1CC,uCAAwC,KACxCC,qCAAsC,KACtCC,sCAAuC,KACvCC,6CAA8C,KAC9CC,oCAAqC,KACrCC,sCAAuC,KACvCC,gDAAiD,KACjDC,0CAA2C,KAC3CC,+BAAgC,KAChCC,iCAAkC,KAClCC,kCAAmC,KACnCC,kCAAmC,KACnCC,4BAA6B,KAC7BC,mCAAoC,KACpCC,iCAAkC,KAClCC,+BAAgC,KAChCC,gCAAiC,KACjCC,uCAAwC,KACxCC,8BAA+B,KAC/BC,gCAAiC,KACjCC,0CAA2C,KAC3CC,oCAAqC,KACrCC,kCAAmC,KACnCC,oCAAqC,KACrCC,qCAAsC,KACtCC,qCAAsC,KACtCC,+BAAgC,KAChCC,sCAAuC,KACvCC,oCAAqC,KACrCC,kCAAmC,KACnCC,mCAAoC,KACpCC,0CAA2C,KAC3CC,iCAAkC,KAClCC,mCAAoC,KACpCC,6CAA8C,KAC9CC,uCAAwC,KACxCC,oCAAqC,KACrCC,sCAAuC,KACvCC,uCAAwC,KACxCC,uCAAwC,KACxCC,iCAAkC,KAClCC,wCAAyC,KACzCC,sCAAuC,KACvCC,oCAAqC,KACrCC,qCAAsC,KACtCC,4CAA6C,KAC7CC,mCAAoC,KACpCC,qCAAsC,KACtCC,+CAAgD,KAChDC,yCAA0C,KAC1CC,uCAAwC,KACxCC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,0CAA2C,KAC3CC,oCAAqC,KACrCC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,uCAAwC,KACxCC,wCAAyC,KACzCC,+CAAgD,KAChDC,sCAAuC,KACvCC,wCAAyC,KACzCC,kDAAmD,KACnDC,4CAA6C,KAC7CC,6BAA8B,KAC9BC,+BAAgC,KAChCC,gCAAiC,KACjCC,gCAAiC,KACjCC,0BAA2B,KAC3BC,iCAAkC,KAClCC,+BAAgC,KAChCC,6BAA8B,KAC9BC,8BAA+B,KAC/BC,qCAAsC,KACtCC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,wCAAyC,KACzCC,kCAAmC,KACnCC,kCAAmC,KACnCC,oCAAqC,KACrCC,qCAAsC,KACtCC,qCAAsC,KACtCC,+BAAgC,KAChCC,sCAAuC,KACvCC,oCAAqC,KACrCC,kCAAmC,KACnCC,mCAAoC,KACpCC,0CAA2C,KAC3CC,iCAAkC,KAClCC,mCAAoC,KACpCC,6CAA8C,KAC9CC,uCAAwC,KACxCC,oCAAqC,KACrCC,sCAAuC,KACvCC,uCAAwC,KACxCC,uCAAwC,KACxCC,iCAAkC,KAClCC,wCAAyC,KACzCC,sCAAuC,KACvCC,oCAAqC,KACrCC,qCAAsC,KACtCC,4CAA6C,KAC7CC,mCAAoC,KACpCC,qCAAsC,KACtCC,+CAAgD,KAChDC,yCAA0C,KAC1CC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,4CAA6C,KAC7CC,sCAAuC,KACvCC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,iDAAkD,KAClDC,wCAAyC,KACzCC,0CAA2C,KAC3CC,oDAAqD,KACrDC,8CAA+C,KAC/CC,qDAAsD,KACtDC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,4CAA6C,KAC7CC,sCAAuC,KACvCC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,iDAAkD,KAClDC,wCAAyC,KACzCC,0CAA2C,KAC3CC,oDAAqD,KACrDC,8CAA+C,KAC/CC,qDAAsD,KACtDC,oCAAqC,KACrCC,sCAAuC,KACvCC,uCAAwC,KACxCC,uCAAwC,KACxCC,iCAAkC,KAClCC,wCAAyC,KACzCC,sCAAuC,KACvCC,oCAAqC,KACrCC,qCAAsC,KACtCC,4CAA6C,KAC7CC,mCAAoC,KACpCC,qCAAsC,KACtCC,+CAAgD,KAChDC,yCAA0C,KAC1CC,gDAAiD,KACjDC,6CAA8C,KAC9CC,+CAAgD,KAChDC,gDAAiD,KACjDC,gDAAiD,KACjDC,0CAA2C,KAC3CC,iDAAkD,KAClDC,+CAAgD,KAChDC,6CAA8C,KAC9CC,8CAA+C,KAC/CC,qDAAsD,KACtDC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,wDAAyD,KACzDC,kDAAmD,KACnDC,yDAA0D,KAC1DC,iDAAkD,KAClDC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,6CAA8C,KAC9CC,6CAA8C,KAC9CC,uCAAwC,KACxCC,8CAA+C,KAC/CC,4CAA6C,KAC7CC,0CAA2C,KAC3CC,2CAA4C,KAC5CC,kDAAmD,KACnDC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,qDAAsD,KACtDC,+CAAgD,KAChDC,sDAAuD,KACvDC,8CAA+C,KAC/CC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,4CAA6C,KAC7CC,sCAAuC,KACvCC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,iDAAkD,KAClDC,wCAAyC,KACzCC,0CAA2C,KAC3CC,oDAAqD,KACrDC,8CAA+C,KAC/CC,qDAAsD,KACtDC,6CAA8C,KAC9CC,mCAAoC,KACpCC,qCAAsC,KACtCC,sCAAuC,KACvCC,sCAAuC,KACvCC,gCAAiC,KACjCC,uCAAwC,KACxCC,qCAAsC,KACtCC,mCAAoC,KACpCC,oCAAqC,KACrCC,2CAA4C,KAC5CC,kCAAmC,KACnCC,oCAAqC,KACrCC,8CAA+C,KAC/CC,wCAAyC,KACzCC,wBAAyB,KACzBC,0BAA2B,KAC3BC,2BAA4B,KAC5BC,2BAA4B,KAC5BC,qBAAsB,KACtBC,4BAA6B,KAC7BC,0BAA2B,KAC3BC,wBAAyB,KACzBC,yBAA0B,KAC1BC,+BAAgC,KAChCC,iCAAkC,KAClCC,kCAAmC,KACnCC,kCAAmC,KACnCC,4BAA6B,KAC7BC,mCAAoC,KACpCC,iCAAkC,KAClCC,+BAAgC,KAChCC,gCAAiC,KACjCC,iCAAkC,KAClCC,mCAAoC,KACpCC,oCAAqC,KACrCC,oCAAqC,KACrCC,8BAA+B,KAC/BC,qCAAsC,KACtCC,mCAAoC,KACpCC,iCAAkC,KAClCC,kCAAmC,KACnCC,oCAAqC,KACrCC,sCAAuC,KACvCC,uCAAwC,KACxCC,uCAAwC,KACxCC,iCAAkC,KAClCC,wCAAyC,KACzCC,sCAAuC,KACvCC,oCAAqC,KACrCC,qCAAsC,KACtCC,gCAAiC,KACjCC,kCAAmC,KACnCC,mCAAoC,KACpCC,mCAAoC,KACpCC,6BAA8B,KAC9BC,oCAAqC,KACrCC,kCAAmC,KACnCC,gCAAiC,KACjCC,iCAAkC,KAClCC,sCAAuC,KACvCC,4CAA6C,KAC7CC,uCAAwC,KACxCC,2CAA4C,KAC5CC,uCAAwC,KACxCC,qCAAsC,KACtCC,+CAAgD,KAChDC,uEAAwE,KACxEC,4EAA6E,KAC7EC,oFAAqF,KACrFC,0CAA2C,KAC3CC,6BAA8B,KAC9BC,+BAAgC,KAChCC,6CAA8C,KAC9CC,kCAAmC,KACnCC,oCAAqC,KACrCC,4CAA6C,KAC7CC,iCAAkC,KAClCC,mCAAoC,KACpCC,qCAAsC,KACtCC,mDAAoD,KACpDC,mCAAoC,KACpCC,qCAAsC,KACtCC,uCAAwC,KACxCC,+CAAgD,KAChDC,uCAAwC,KACxCC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,yDAA0D,KAC1DC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,qDAAsD,KACtDC,6BAA8B,KAC9BC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,+BAAgC,KAChCC,+BAAgC,KAChCC,yBAA0B,KAC1BC,gCAAiC,KACjCC,8BAA+B,KAC/BC,4BAA6B,KAC7BC,6BAA8B,KAC9BC,iCAAkC,KAClCC,mCAAoC,KACpCC,qCAAsC,KACtCC,mDAAoD,KACpDC,+BAAgC,KAChCC,iCAAkC,KAClCC,mCAAoC,KACpCC,iDAAkD,KAClDC,kCAAmC,KACnCC,oCAAqC,KACrCC,sCAAuC,KACvCC,8CAA+C,KAC/CC,kCAAmC,KACnCC,oCAAqC,KACrCC,qCAAsC,KACtCC,qCAAsC,KACtCC,+BAAgC,KAChCC,sCAAuC,KACvCC,oCAAqC,KACrCC,kCAAmC,KACnCC,mCAAoC,KACpCC,0CAA2C,KAC3CC,iCAAkC,KAClCC,mCAAoC,KACpCC,6CAA8C,KAC9CC,uCAAwC,KACxCC,mCAAoC,KACpCC,yCAA0C,KAC1CC,0BAA2B,KAC3BC,8BAA+B,KAC/BC,4BAA6B,KAC7BC,gCAAiC,KACjCC,gCAAiC,KACjCC,oCAAqC,KACrCC,kCAAmC,KACnCC,sCAAuC,KACvCC,mCAAoC,KACpCC,qCAAsC,KACtCC,sCAAuC,KACvCC,sCAAuC,KACvCC,gCAAiC,KACjCC,uCAAwC,KACxCC,qCAAsC,KACtCC,mCAAoC,KACpCC,oCAAqC,KACrCC,qCAAsC,KACtCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,0DAA2D,KAC3DC,mCAAoC,KACpCC,sCAAuC,KACvCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,wDAAyD,KACzDC,sCAAuC,KACvCC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,qDAAsD,KACtDC,wCAAyC,KACzCC,0CAA2C,KAC3CC,2CAA4C,KAC5CC,2CAA4C,KAC5CC,qCAAsC,KACtCC,4CAA6C,KAC7CC,0CAA2C,KAC3CC,wCAAyC,KACzCC,yCAA0C,KAC1CC,gDAAiD,KACjDC,uCAAwC,KACxCC,yCAA0C,KAC1CC,mDAAoD,KACpDC,6CAA8C,KAC9CC,yCAA0C,KAC1CC,+CAAgD,KAChDC,2CAA4C,KAC5CC,2CAA4C,KAC5CC,2CAA4C,KAC5CC,8CAA+C,KAC/CC,gDAAiD,KACjDC,kDAAmD,KACnDC,0DAA2D,KAC3DC,qCAAsC,KACtCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,0DAA2D,KAC3DC,uCAAwC,KACxCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,sDAAuD,KACvDC,2DAA4D,KAC5DC,4DAA6D,KAC7DC,kEAAmE,KACnEC,8DAA+D,KAC/DC,0DAA2D,KAC3DC,+DAAgE,KAChEC,oEAAqE,KACrEC,qEAAsE,KACtEC,8DAA+D,KAC/DC,kEAAmE,KACnEC,oCAAqC,KACrCC,sBAAuB,KACvBC,wBAAyB,KACzBC,yBAA0B,KAC1BC,yBAA0B,KAC1BC,mBAAoB,KACpBC,0BAA2B,KAC3BC,wBAAyB,KACzBC,sBAAuB,KACvBC,uBAAwB,KACxBC,qBAAsB,KACtBC,8CAA+C,KAC/CC,8BAA+B,KAC/BC,gCAAiC,KACjCC,iCAAkC,KAClCC,iCAAkC,KAClCC,2BAA4B,KAC5BC,kCAAmC,KACnCC,gCAAiC,KACjCC,8BAA+B,KAC/BC,+BAAgC,KAChCC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,+BAAgC,KAChCC,+BAAgC,KAChCC,yBAA0B,KAC1BC,gCAAiC,KACjCC,8BAA+B,KAC/BC,4BAA6B,KAC7BC,6BAA8B,KAC9BC,iCAAkC,KAClCC,mCAAoC,KACpCC,oCAAqC,KACrCC,oCAAqC,KACrCC,8BAA+B,KAC/BC,qCAAsC,KACtCC,mCAAoC,KACpCC,iCAAkC,KAClCC,kCAAmC,KACnCC,gCAAiC,KACjCC,kCAAmC,KACnCC,mCAAoC,KACpCC,mCAAoC,KACpCC,6BAA8B,IAC9BC,oCAAqC,KACrCC,kCAAmC,KACnCC,gCAAiC,KACjCC,iCAAkC,KAClCC,wCAAyC,KACzCC,+BAAgC,KAChCC,iCAAkC,KAClCC,2CAA4C,KAC5CC,qCAAsC,KACtCC,iCAAkC,KAClCC,uCAAwC,KACxCC,sCAAuC,KACvCC,wCAAyC,KACzCC,yCAA0C,KAC1CC,yCAA0C,KAC1CC,mCAAoC,KACpCC,0CAA2C,KAC3CC,wCAAyC,KACzCC,sCAAuC,KACvCC,uCAAwC,KACxCC,8CAA+C,KAC/CC,qCAAsC,KACtCC,uCAAwC,KACxCC,iDAAkD,KAClDC,2CAA4C,KAC5CC,uCAAwC,KACxCC,6CAA8C,KAC9CC,uCAAwC,KACxCC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,0CAA2C,KAC3CC,oCAAqC,KACrCC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,uCAAwC,KACxCC,wCAAyC,KACzCC,+CAAgD,KAChDC,sCAAuC,KACvCC,wCAAyC,KACzCC,kDAAmD,KACnDC,4CAA6C,KAC7CC,wCAAyC,KACzCC,8CAA+C,KAC/CC,4BAA6B,KAC7BC,8BAA+B,KAC/BC,+BAAgC,KAChCC,+BAAgC,KAChCC,yBAA0B,KAC1BC,gCAAiC,KACjCC,8BAA+B,KAC/BC,4BAA6B,KAC7BC,6BAA8B,KAC9BC,2BAA4B,KAC5BC,oDAAqD,KACrDC,qCAAsC,KACtCC,uCAAwC,KACxCC,wCAAyC,KACzCC,wCAAyC,KACzCC,kCAAmC,KACnCC,yCAA0C,KAC1CC,uCAAwC,KACxCC,qCAAsC,KACtCC,sCAAuC,KACvCC,oCAAqC,KACrCC,6DAA8D,KAC9DC,2BAA4B,KAC5BC,6BAA8B,KAC9BC,8BAA+B,KAC/BC,8BAA+B,KAC/BC,wBAAyB,KACzBC,+BAAgC,KAChCC,6BAA8B,KAC9BC,2BAA4B,KAC5BC,4BAA6B,KAC7BC,0BAA2B,KAC3BC,mDAAoD,KACpDC,qCAAsC,KACtCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,0DAA2D,KAC3DC,uCAAwC,KACxCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,sDAAuD,KACvDC,8CAA+C,KAC/CC,iDAAkD,KAClDC,mDAAoD,KACpDC,qCAAsC,KACtCC,uBAAwB,KACxBC,yBAA0B,KAC1BC,0BAA2B,KAC3BC,0BAA2B,KAC3BC,oBAAqB,KACrBC,2BAA4B,KAC5BC,yBAA0B,KAC1BC,uBAAwB,KACxBC,wBAAyB,KACzBC,sBAAuB,KACvBC,+CAAgD,KAChDC,mBAAoB,KACpBC,gCAAiC,KACjCC,0BAA2B,KAC3BC,4BAA6B,KAC7BC,qCAAsC,KACtCC,4BAA6B,KAC7BC,2BAA4B,KAC5BC,+BAAgC,KAChCC,2BAA4B,KAC5BC,8BAA+B,KAC/BC,yBAA0B,KAC1BC,8BAA+B,KAC/BC,wBAAyB,KACzBC,qCAAsC,KACtCC,mBAAoB,KACpBC,mCAAoC,KACpCC,gCAAiC,KACjCC,4BAA6B,KAC7BC,4CAA6C,KAC7CC,+CAAgD,KAChDC,iCAAkC,KAClCC,iDAAkD,KAClDC,oDAAqD,KACrDC,gCAAiC,KACjCC,gDAAiD,KACjDC,mDAAoD,KACpDC,mCAAoC,KACpCC,mDAAoD,KACpDC,sDAAuD,KACvDC,0CAA2C,KAC3CC,0DAA2D,KAC3DC,6DAA8D,KAC9DC,uCAAwC,KACxCC,uDAAwD,KACxDC,0DAA2D,KAC3DC,qCAAsC,KACtCC,qDAAsD,KACtDC,wDAAyD,KACzDC,0CAA2C,KAC3CC,0DAA2D,KAC3DC,6DAA8D,KAC9DC,yCAA0C,KAC1CC,yDAA0D,KAC1DC,4DAA6D,KAC7DC,qCAAsC,KACtCC,qDAAsD,KACtDC,wDAAyD,KACzDC,uCAAwC,KACxCC,uDAAwD,KACxDC,0DAA2D,KAC3DC,yCAA0C,KAC1CC,yDAA0D,KAC1DC,4DAA6D,KAC7DC,6BAA8B,KAC9BC,6CAA8C,KAC9CC,gDAAiD,KACjDC,6CAA8C,KAC9CC,6DAA8D,KAC9DC,gEAAiE,KACjEC,gCAAiC,KACjCC,gDAAiD,KACjDC,mDAAoD,KACpDC,qCAAsC,KACtCC,qDAAsD,KACtDC,wDAAyD,KACzDC,mCAAoC,KACpCC,mDAAoD,KACpDC,sDAAuD,KACvDC,wCAAyC,KACzCC,wDAAyD,KACzDC,2DAA4D,KAC5DC,oCAAqC,KACrCC,oDAAqD,KACrDC,uDAAwD,KACxDC,wCAAyC,KACzCC,wDAAyD,KACzDC,2DAA4D,KAC5DC,iCAAkC,KAClCC,iDAAkD,KAClDC,oDAAqD,KACrDC,iCAAkC,KAClCC,iDAAkD,KAClDC,oDAAqD,KACrDC,kCAAmC,KACnCC,kDAAmD,KACnDC,qDAAsD,KACtDC,kCAAmC,KACnCC,kDAAmD,KACnDC,qDAAsD,KACtDC,oCAAqC,KACrCC,oDAAqD,KACrDC,uDAAwD,KACxDC,0CAA2C,KAC3CC,0DAA2D,KAC3DC,6DAA8D,KAC9DC,gCAAiC,KACjCC,gDAAiD,KACjDC,mDAAoD,KACpDC,oCAAqC,KACrCC,oDAAqD,KACrDC,uDAAwD,KACxDC,+BAAgC,KAChCC,+CAAgD,KAChDC,kDAAmD,KACnDC,0CAA2C,KAC3CC,0DAA2D,KAC3DC,6DAA8D,KAC9DC,yCAA0C,KAC1CC,yDAA0D,KAC1DC,4DAA6D,KAC7DC,2CAA4C,KAC5CC,2DAA4D,KAC5DC,8DAA+D,KAC/DC,uDAAwD,KACxDC,uEAAwE,KACxEC,0EAA2E,KAC3EC,oDAAqD,KACrDC,oEAAqE,KACrEC,uEAAwE,KACxEC,wCAAyC,KACzCC,wDAAyD,KACzDC,2DAA4D,KAC5DC,8CAA+C,KAC/CC,8DAA+D,KAC/DC,iEAAkE,KAClEC,sDAAuD,KACvDC,sEAAuE,KACvEC,yEAA0E,KAC1EC,0CAA2C,KAC3CC,0DAA2D,KAC3DC,6DAA8D,KAC9DC,mDAAoD,KACpDC,mEAAoE,KACpEC,sEAAuE,KACvEC,gDAAiD,KACjDC,gEAAiE,KACjEC,mEAAoE,KACpEC,mDAAoD,KACpDC,mEAAoE,KACpEC,sEAAuE,KACvEC,yBAA0B,KAC1BC,yCAA0C,KAC1CC,4CAA6C,KAC7CC,iCAAkC,KAClCC,iDAAkD,KAClDC,oDAAqD,KACrDC,8BAA+B,KAC/BC,8CAA+C,KAC/CC,iDAAkD,KAClDC,6CAA8C,KAC9CC,6DAA8D,KAC9DC,gEAAiE,KACjEC,gBAAiB,KACjBC,gCAAiC,KACjCC,6BAA8B,KAC9BC,yBAA0B,KAC1BC,yCAA0C,KAC1CC,4CAA6C,KAC7CC,8BAA+B,KAC/BC,8CAA+C,KAC/CC,iDAAkD,KAClDC,6BAA8B,KAC9BC,6CAA8C,KAC9CC,gDAAiD,KACjDC,gCAAiC,KACjCC,gDAAiD,KACjDC,mDAAoD,KACpDC,uCAAwC,KACxCC,uDAAwD,KACxDC,0DAA2D,KAC3DC,oCAAqC,KACrCC,oDAAqD,KACrDC,uDAAwD,KACxDC,kCAAmC,KACnCC,kDAAmD,KACnDC,qDAAsD,KACtDC,uCAAwC,KACxCC,uDAAwD,KACxDC,0DAA2D,KAC3DC,sCAAuC,KACvCC,sDAAuD,KACvDC,yDAA0D,KAC1DC,kCAAmC,KACnCC,kDAAmD,KACnDC,qDAAsD,KACtDC,oCAAqC,KACrCC,oDAAqD,KACrDC,uDAAwD,KACxDC,sCAAuC,KACvCC,sDAAuD,KACvDC,yDAA0D,KAC1DC,0BAA2B,KAC3BC,0CAA2C,KAC3CC,6CAA8C,KAC9CC,0CAA2C,KAC3CC,0DAA2D,KAC3DC,6DAA8D,KAC9DC,6BAA8B,KAC9BC,6CAA8C,KAC9CC,gDAAiD,KACjDC,kCAAmC,KACnCC,kDAAmD,KACnDC,qDAAsD,KACtDC,gCAAiC,KACjCC,gDAAiD,KACjDC,mDAAoD,KACpDC,qCAAsC,KACtCC,qDAAsD,KACtDC,wDAAyD,KACzDC,iCAAkC,KAClCC,iDAAkD,KAClDC,oDAAqD,KACrDC,qCAAsC,KACtCC,qDAAsD,KACtDC,wDAAyD,KACzDC,8BAA+B,KAC/BC,8CAA+C,KAC/CC,iDAAkD,KAClDC,8BAA+B,KAC/BC,8CAA+C,KAC/CC,iDAAkD,KAClDC,+BAAgC,KAChCC,+CAAgD,KAChDC,kDAAmD,KACnDC,+BAAgC,KAChCC,+CAAgD,KAChDC,kDAAmD,KACnDC,iCAAkC,KAClCC,iDAAkD,KAClDC,oDAAqD,KACrDC,uCAAwC,KACxCC,uDAAwD,KACxDC,0DAA2D,KAC3DC,6BAA8B,KAC9BC,6CAA8C,KAC9CC,gDAAiD,KACjDC,iCAAkC,KAClCC,iDAAkD,KAClDC,oDAAqD,KACrDC,4BAA6B,KAC7BC,4CAA6C,KAC7CC,+CAAgD,KAChDC,uCAAwC,KACxCC,uDAAwD,KACxDC,0DAA2D,KAC3DC,sCAAuC,KACvCC,sDAAuD,KACvDC,yDAA0D,KAC1DC,wCAAyC,KACzCC,wDAAyD,KACzDC,2DAA4D,KAC5DC,oDAAqD,KACrDC,oEAAqE,KACrEC,uEAAwE,KACxEC,iDAAkD,KAClDC,iEAAkE,KAClEC,oEAAqE,KACrEC,qCAAsC,KACtCC,qDAAsD,KACtDC,wDAAyD,KACzDC,2CAA4C,KAC5CC,2DAA4D,KAC5DC,8DAA+D,KAC/DC,mDAAoD,KACpDC,mEAAoE,KACpEC,sEAAuE,KACvEC,uCAAwC,KACxCC,uDAAwD,KACxDC,0DAA2D,KAC3DC,gDAAiD,KACjDC,gEAAiE,KACjEC,mEAAoE,KACpEC,6CAA8C,KAC9CC,6DAA8D,KAC9DC,gEAAiE,KACjEC,gDAAiD,KACjDC,gEAAiE,KACjEC,mEAAoE,KACpEC,sBAAuB,KACvBC,sCAAuC,KACvCC,yCAA0C,KAC1CC,8BAA+B,KAC/BC,8CAA+C,KAC/CC,iDAAkD,KAClDC,2BAA4B,KAC5BC,2CAA4C,KAC5CC,8CAA+C,KAC/CC,0CAA2C,KAC3CC,0DAA2D,KAC3DC,6DAA8D,KAC9DC,6CAA8C,KAC9CC,oDAAqD,KACrDC,kDAAmD,KACnDC,iDAAkD,KAClDC,uDAAwD,KACxDC,kDAAmD,KACnDC,+CAAgD,KAChDC,uDAAwD,KACxDC,yDAA0D,KAC1DC,+CAAgD,KAChDC,kEAAmE,KACnEC,iDAAkD,KAClDC,oDAAqD,KACrDC,oCAAqC,KACrCC,oDAAqD,KACrDC,uDAAwD,KACxDC,iCAAkC,KAClCC,iDAAkD,KAClDC,oDAAqD,KACrDC,uCAAwC,KACxCC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,0CAA2C,KAC3CC,oCAAqC,KACrCC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,uCAAwC,KACxCC,wCAAyC,KACzCC,+CAAgD,KAChDC,sCAAuC,KACvCC,wCAAyC,KACzCC,kDAAmD,KACnDC,4CAA6C,KAC7CC,wCAAyC,KACzCC,8CAA+C,KAC/CC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,8CAA+C,KAC/CC,8CAA+C,KAC/CC,wCAAyC,KACzCC,+CAAgD,KAChDC,6CAA8C,KAC9CC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,mDAAoD,KACpDC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,sDAAuD,KACvDC,gDAAiD,KACjDC,4CAA6C,KAC7CC,kDAAmD,KACnDC,uCAAwC,KACxCC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,0CAA2C,KAC3CC,oCAAqC,KACrCC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,uCAAwC,KACxCC,wCAAyC,KACzCC,+CAAgD,KAChDC,sCAAuC,KACvCC,wCAAyC,KACzCC,kDAAmD,KACnDC,4CAA6C,KAC7CC,wCAAyC,KACzCC,8CAA+C,KAC/CC,wBAAyB,KACzBC,0BAA2B,KAC3BC,4BAA6B,KAC7BC,0CAA2C,KAC3CC,oCAAqC,IACrCC,6CAA8C,KAC9CC,sCAAuC,KACvCC,0CAA2C,KAC3CC,4BAA6B,KAC7BC,uBAAwB,KACxBC,2BAA4B,KAC5BC,8BAA+B,KAC/BC,gCAAiC,KACjCC,kCAAmC,KACnCC,gDAAiD,KACjDC,0CAA2C,KAC3CC,mDAAoD,KACpDC,qCAAsC,KACtCC,sCAAuC,KACvCC,sBAAuB,KACvBC,sCAAuC,KACvCC,2BAA4B,KAC5BC,2CAA4C,KAC5CC,sBAAuB,KACvBC,sCAAuC,KACvCC,2BAA4B,KAC5BC,wCAAyC,KACzCC,wCAAyC,KACzCC,kCAAmC,KACnCC,6BAA8B,KAC9BC,iCAAkC,KAClCC,oCAAqC,KACrCC,sCAAuC,KACvCC,wCAAyC,KACzCC,sDAAuD,KACvDC,gDAAiD,KACjDC,yDAA0D,KAC1DC,2CAA4C,KAC5CC,4CAA6C,KAC7CC,4BAA6B,KAC7BC,4CAA6C,KAC7CC,iCAAkC,KAClCC,iDAAkD,KAClDC,4BAA6B,KAC7BC,4CAA6C,KAC7CC,iCAAkC,KAClCC,8CAA+C,KAC/CC,gCAAiC,KACjCC,mCAAoC,KACpCC,qCAAsC,KACtCC,uCAAwC,KACxCC,qDAAsD,KACtDC,+CAAgD,KAChDC,wDAAyD,KACzDC,0CAA2C,KAC3CC,2CAA4C,KAC5CC,sCAAuC,KACvCC,oCAAqC,KACrCC,+BAAgC,KAChCC,mCAAoC,KACpCC,iCAAkC,KAClCC,2CAA4C,KAC5CC,2CAA4C,KAC5CC,sCAAuC,KACvCC,0CAA2C,KAC3CC,6CAA8C,KAC9CC,+CAAgD,KAChDC,iDAAkD,KAClDC,+DAAgE,KAChEC,yDAA0D,KAC1DC,kEAAmE,KACnEC,oDAAqD,KACrDC,qDAAsD,KACtDC,qCAAsC,KACtCC,qDAAsD,KACtDC,0CAA2C,KAC3CC,0DAA2D,KAC3DC,qCAAsC,KACtCC,qDAAsD,KACtDC,0CAA2C,KAC3CC,uDAAwD,KACxDC,wCAAyC,KACzCC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,+CAAgD,KAChDC,6DAA8D,KAC9DC,uDAAwD,KACxDC,gEAAiE,KACjEC,kDAAmD,KACnDC,mDAAoD,KACpDC,4CAA6C,KAC7CC,+CAAgD,KAChDC,iDAAkD,KAClDC,mDAAoD,KACpDC,iEAAkE,KAClEC,2DAA4D,KAC5DC,oEAAqE,KACrEC,sDAAuD,KACvDC,uDAAwD,KACxDC,wDAAyD,KACzDC,oDAAqD,KACrDC,qCAAsC,KACtCC,iCAAkC,KAClCC,4BAA6B,KAC7BC,gCAAiC,KACjCC,mCAAoC,KACpCC,qCAAsC,KACtCC,uCAAwC,KACxCC,qDAAsD,KACtDC,+CAAgD,KAChDC,wDAAyD,KACzDC,0CAA2C,KAC3CC,2CAA4C,KAC5CC,2BAA4B,KAC5BC,2CAA4C,KAC5CC,gCAAiC,KACjCC,gDAAiD,KACjDC,2BAA4B,KAC5BC,2CAA4C,KAC5CC,gCAAiC,KACjCC,6CAA8C,KAC9CC,8BAA+B,KAC/BC,iCAAkC,KAClCC,mCAAoC,KACpCC,qCAAsC,KACtCC,mDAAoD,KACpDC,6CAA8C,KAC9CC,sDAAuD,KACvDC,wCAAyC,KACzCC,yCAA0C,KAC1CC,kCAAmC,KACnCC,qCAAsC,KACtCC,uCAAwC,KACxCC,yCAA0C,KAC1CC,uDAAwD,KACxDC,iDAAkD,KAClDC,0DAA2D,KAC3DC,4CAA6C,KAC7CC,6CAA8C,KAC9CC,8CAA+C,KAC/CC,0CAA2C,KAC3CC,+BAAgC,KAChCC,kCAAmC,KACnCC,oCAAqC,KACrCC,sCAAuC,KACvCC,oDAAqD,KACrDC,8CAA+C,KAC/CC,uDAAwD,KACxDC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,mCAAoC,KACpCC,sCAAuC,KACvCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,wDAAyD,KACzDC,kDAAmD,KACnDC,2DAA4D,KAC5DC,6CAA8C,KAC9CC,8CAA+C,KAC/CC,8CAA+C,KAC/CC,iDAAkD,KAClDC,mDAAoD,KACpDC,qDAAsD,KACtDC,mEAAoE,KACpEC,gDAAiD,KACjDC,mDAAoD,KACpDC,qDAAsD,KACtDC,uDAAwD,KACxDC,+DAAgE,KAChEC,8CAA+C,KAC/CC,4DAA6D,KAC7DC,uCAAwC,KACxCC,kCAAmC,KACnCC,6BAA8B,KAC9BC,wBAAyB,KACzBC,4BAA6B,KAC7BC,+BAAgC,KAChCC,iCAAkC,KAClCC,mCAAoC,KACpCC,iDAAkD,KAClDC,2CAA4C,KAC5CC,oDAAqD,KACrDC,sCAAuC,KACvCC,uCAAwC,KACxCC,uBAAwB,KACxBC,uCAAwC,KACxCC,4BAA6B,KAC7BC,4CAA6C,KAC7CC,uBAAwB,KACxBC,uCAAwC,KACxCC,4BAA6B,KAC7BC,yCAA0C,KAC1CC,0BAA2B,KAC3BC,6BAA8B,KAC9BC,+BAAgC,KAChCC,iCAAkC,KAClCC,+CAAgD,KAChDC,yCAA0C,KAC1CC,kDAAmD,KACnDC,oCAAqC,KACrCC,qCAAsC,KACtCC,8BAA+B,KAC/BC,iCAAkC,KAClCC,mCAAoC,KACpCC,qCAAsC,KACtCC,mDAAoD,KACpDC,6CAA8C,KAC9CC,sDAAuD,KACvDC,wCAAyC,KACzCC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,sCAAuC,KACvCC,2BAA4B,KAC5BC,8BAA+B,KAC/BC,gCAAiC,KACjCC,kCAAmC,KACnCC,gDAAiD,KACjDC,0CAA2C,KAC3CC,mDAAoD,KACpDC,qCAAsC,KACtCC,sCAAuC,KACvCC,+BAAgC,KAChCC,kCAAmC,KACnCC,oCAAqC,KACrCC,sCAAuC,KACvCC,oDAAqD,KACrDC,8CAA+C,KAC/CC,uDAAwD,KACxDC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,0CAA2C,KAC3CC,6CAA8C,KAC9CC,+CAAgD,KAChDC,iDAAkD,KAClDC,+DAAgE,KAChEC,4CAA6C,KAC7CC,+CAAgD,KAChDC,iDAAkD,KAClDC,mDAAoD,KACpDC,2DAA4D,KAC5DC,0CAA2C,KAC3CC,wDAAyD,KACzDC,mCAAoC,KACpCC,8BAA+B,KAC/BC,4CAA6C,KAC7CC,+CAAgD,KAChDC,iDAAkD,KAClDC,mDAAoD,KACpDC,iEAAkE,KAClEC,8CAA+C,KAC/CC,iDAAkD,KAClDC,mDAAoD,KACpDC,qDAAsD,KACtDC,6DAA8D,KAC9DC,oDAAqD,KACrDC,gDAAiD,KACjDC,+CAAgD,KAChDC,kDAAmD,KACnDC,gCAAiC,KACjCC,kCAAmC,KACnCC,mCAAoC,KACpCC,mCAAoC,KACpCC,6BAA8B,KAC9BC,oCAAqC,KACrCC,kCAAmC,KACnCC,gCAAiC,KACjCC,iCAAkC,KAClCC,sCAAuC,KACvCC,iCAAkC,KAClCC,+BAAgC,KAChCC,qCAAsC,KACtCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,0DAA2D,KAC3DC,oDAAqD,KACrDC,6DAA8D,KAC9DC,+CAAgD,KAChDC,gDAAiD,KACjDC,gCAAiC,KACjCC,gDAAiD,KACjDC,qCAAsC,KACtCC,qDAAsD,KACtDC,gCAAiC,KACjCC,gDAAiD,KACjDC,qCAAsC,KACtCC,kDAAmD,KACnDC,wDAAyD,KACzDC,mCAAoC,KACpCC,sCAAuC,KACvCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,wDAAyD,KACzDC,kDAAmD,KACnDC,2DAA4D,KAC5DC,6CAA8C,KAC9CC,8CAA+C,KAC/CC,uCAAwC,KACxCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,4DAA6D,KAC7DC,sDAAuD,KACvDC,+DAAgE,KAChEC,iDAAkD,KAClDC,kDAAmD,KACnDC,mDAAoD,KACpDC,+CAAgD,KAChDC,oCAAqC,KACrCC,uCAAwC,KACxCC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,yDAA0D,KAC1DC,mDAAoD,KACpDC,4DAA6D,KAC7DC,8CAA+C,KAC/CC,+CAAgD,KAChDC,wCAAyC,KACzCC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,+CAAgD,KAChDC,6DAA8D,KAC9DC,uDAAwD,KACxDC,gEAAiE,KACjEC,kDAAmD,KACnDC,mDAAoD,KACpDC,mDAAoD,KACpDC,sDAAuD,KACvDC,wDAAyD,KACzDC,0DAA2D,KAC3DC,wEAAyE,KACzEC,qDAAsD,KACtDC,wDAAyD,KACzDC,0DAA2D,KAC3DC,4DAA6D,KAC7DC,oEAAqE,KACrEC,mDAAoD,KACpDC,iEAAkE,KAClEC,4CAA6C,KAC7CC,uCAAwC,KACxCC,gDAAiD,KACjDC,mDAAoD,KACpDC,qDAAsD,KACtDC,uDAAwD,KACxDC,qEAAsE,KACtEC,kDAAmD,KACnDC,qDAAsD,KACtDC,uDAAwD,KACxDC,yDAA0D,KAC1DC,iEAAkE,KAClEC,sCAAuC,KACvCC,kCAAmC,KACnCC,iCAAkC,KAClCC,oCAAqC,KACrCC,gCAAiC,KACjCC,kCAAmC,KACnCC,mCAAoC,KACpCC,mCAAoC,KACpCC,6BAA8B,KAC9BC,oCAAqC,KACrCC,kCAAmC,KACnCC,gCAAiC,KACjCC,iCAAkC,KAClCC,sCAAuC,KACvCC,iCAAkC,KAClCC,+BAAgC,KAChCC,qCAAsC,KACtCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,0DAA2D,KAC3DC,oDAAqD,KACrDC,6DAA8D,KAC9DC,+CAAgD,KAChDC,gDAAiD,KACjDC,gCAAiC,KACjCC,gDAAiD,KACjDC,qCAAsC,KACtCC,qDAAsD,KACtDC,gCAAiC,KACjCC,gDAAiD,KACjDC,qCAAsC,KACtCC,kDAAmD,KACnDC,wDAAyD,KACzDC,mCAAoC,KACpCC,sCAAuC,KACvCC,wCAAyC,KACzCC,0CAA2C,KAC3CC,wDAAyD,KACzDC,kDAAmD,KACnDC,2DAA4D,KAC5DC,6CAA8C,KAC9CC,8CAA+C,KAC/CC,uCAAwC,KACxCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,4DAA6D,KAC7DC,sDAAuD,KACvDC,+DAAgE,KAChEC,iDAAkD,KAClDC,kDAAmD,KACnDC,mDAAoD,KACpDC,+CAAgD,KAChDC,oCAAqC,KACrCC,uCAAwC,KACxCC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,yDAA0D,KAC1DC,mDAAoD,KACpDC,4DAA6D,KAC7DC,8CAA+C,KAC/CC,+CAAgD,KAChDC,wCAAyC,KACzCC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,+CAAgD,KAChDC,6DAA8D,KAC9DC,uDAAwD,KACxDC,gEAAiE,KACjEC,kDAAmD,KACnDC,mDAAoD,KACpDC,mDAAoD,KACpDC,sDAAuD,KACvDC,wDAAyD,KACzDC,0DAA2D,KAC3DC,wEAAyE,KACzEC,qDAAsD,KACtDC,wDAAyD,KACzDC,0DAA2D,KAC3DC,4DAA6D,KAC7DC,oEAAqE,KACrEC,mDAAoD,KACpDC,iEAAkE,KAClEC,4CAA6C,KAC7CC,uCAAwC,KACxCC,gDAAiD,KACjDC,mDAAoD,KACpDC,qDAAsD,KACtDC,uDAAwD,KACxDC,qEAAsE,KACtEC,kDAAmD,KACnDC,qDAAsD,KACtDC,uDAAwD,KACxDC,yDAA0D,KAC1DC,iEAAkE,KAClEC,sCAAuC,KACvCC,kCAAmC,KACnCC,iCAAkC,KAClCC,oCAAqC,KACrCC,uCAAwC,KACxCC,yCAA0C,KAC1CC,0CAA2C,KAC3CC,0CAA2C,KAC3CC,oCAAqC,KACrCC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,uCAAwC,KACxCC,wCAAyC,KACzCC,6CAA8C,KAC9CC,wCAAyC,KACzCC,sCAAuC,KACvCC,4CAA6C,KAC7CC,+CAAgD,KAChDC,iDAAkD,KAClDC,mDAAoD,KACpDC,iEAAkE,KAClEC,2DAA4D,KAC5DC,oEAAqE,KACrEC,sDAAuD,KACvDC,uDAAwD,KACxDC,uCAAwC,KACxCC,uDAAwD,KACxDC,4CAA6C,KAC7CC,4DAA6D,KAC7DC,uCAAwC,KACxCC,uDAAwD,KACxDC,4CAA6C,KAC7CC,yDAA0D,KAC1DC,+DAAgE,KAChEC,0CAA2C,KAC3CC,6CAA8C,KAC9CC,+CAAgD,KAChDC,iDAAkD,KAClDC,+DAAgE,KAChEC,yDAA0D,KAC1DC,kEAAmE,KACnEC,oDAAqD,KACrDC,qDAAsD,KACtDC,8CAA+C,KAC/CC,iDAAkD,KAClDC,mDAAoD,KACpDC,qDAAsD,KACtDC,mEAAoE,KACpEC,6DAA8D,KAC9DC,sEAAuE,KACvEC,wDAAyD,KACzDC,yDAA0D,KAC1DC,0DAA2D,KAC3DC,sDAAuD,KACvDC,2CAA4C,KAC5CC,8CAA+C,KAC/CC,gDAAiD,KACjDC,kDAAmD,KACnDC,gEAAiE,KACjEC,0DAA2D,KAC3DC,mEAAoE,KACpEC,qDAAsD,KACtDC,sDAAuD,KACvDC,+CAAgD,KAChDC,kDAAmD,KACnDC,oDAAqD,KACrDC,sDAAuD,KACvDC,oEAAqE,KACrEC,8DAA+D,KAC/DC,uEAAwE,KACxEC,yDAA0D,KAC1DC,0DAA2D,KAC3DC,0DAA2D,KAC3DC,6DAA8D,KAC9DC,+DAAgE,KAChEC,iEAAkE,KAClEC,+EAAgF,KAChFC,4DAA6D,KAC7DC,+DAAgE,KAChEC,iEAAkE,KAClEC,mEAAoE,KACpEC,2EAA4E,KAC5EC,0DAA2D,KAC3DC,wEAAyE,KACzEC,mDAAoD,KACpDC,8CAA+C,KAC/CC,uDAAwD,KACxDC,0DAA2D,KAC3DC,4DAA6D,KAC7DC,8DAA+D,KAC/DC,4EAA6E,KAC7EC,yDAA0D,KAC1DC,4DAA6D,KAC7DC,8DAA+D,KAC/DC,gEAAiE,KACjEC,wEAAyE,KACzEC,6CAA8C,KAC9CC,yCAA0C,KAC1CC,wCAAyC,KACzCC,2CAA4C,KAC5CC,oCAAqC,KACrCC,sCAAuC,KACvCC,uCAAwC,KACxCC,uCAAwC,KACxCC,iCAAkC,KAClCC,wCAAyC,KACzCC,sCAAuC,KACvCC,oCAAqC,KACrCC,qCAAsC,KACtCC,0CAA2C,KAC3CC,qCAAsC,KACtCC,mCAAoC,KACpCC,yCAA0C,KAC1CC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,gDAAiD,KACjDC,8DAA+D,KAC/DC,wDAAyD,KACzDC,iEAAkE,KAClEC,mDAAoD,KACpDC,oDAAqD,KACrDC,oCAAqC,KACrCC,oDAAqD,KACrDC,yCAA0C,KAC1CC,yDAA0D,KAC1DC,oCAAqC,KACrCC,oDAAqD,KACrDC,yCAA0C,KAC1CC,sDAAuD,KACvDC,4DAA6D,KAC7DC,uCAAwC,KACxCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,4DAA6D,KAC7DC,sDAAuD,KACvDC,+DAAgE,KAChEC,iDAAkD,KAClDC,kDAAmD,KACnDC,2CAA4C,KAC5CC,8CAA+C,KAC/CC,gDAAiD,KACjDC,kDAAmD,KACnDC,gEAAiE,KACjEC,0DAA2D,KAC3DC,mEAAoE,KACpEC,qDAAsD,KACtDC,sDAAuD,KACvDC,uDAAwD,KACxDC,mDAAoD,KACpDC,wCAAyC,KACzCC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,+CAAgD,KAChDC,6DAA8D,KAC9DC,uDAAwD,KACxDC,gEAAiE,KACjEC,kDAAmD,KACnDC,mDAAoD,KACpDC,4CAA6C,KAC7CC,+CAAgD,KAChDC,iDAAkD,KAClDC,mDAAoD,KACpDC,iEAAkE,KAClEC,2DAA4D,KAC5DC,oEAAqE,KACrEC,sDAAuD,KACvDC,uDAAwD,KACxDC,uDAAwD,KACxDC,0DAA2D,KAC3DC,4DAA6D,KAC7DC,8DAA+D,KAC/DC,4EAA6E,KAC7EC,yDAA0D,KAC1DC,4DAA6D,KAC7DC,8DAA+D,KAC/DC,gEAAiE,KACjEC,wEAAyE,KACzEC,uDAAwD,KACxDC,qEAAsE,KACtEC,gDAAiD,KACjDC,2CAA4C,KAC5CC,oDAAqD,KACrDC,uDAAwD,KACxDC,yDAA0D,KAC1DC,2DAA4D,KAC5DC,yEAA0E,KAC1EC,sDAAuD,KACvDC,yDAA0D,KAC1DC,2DAA4D,KAC5DC,6DAA8D,KAC9DC,qEAAsE,KACtEC,0CAA2C,KAC3CC,sCAAuC,KACvCC,qCAAsC,KACtCC,wCAAyC,KACzCC,yCAA0C,KAC1CC,mCAAoC,KACpCC,qCAAsC,KACtCC,sCAAuC,KACvCC,sCAAuC,KACvCC,gCAAiC,KACjCC,uCAAwC,KACxCC,qCAAsC,KACtCC,mCAAoC,KACpCC,oCAAqC,KACrCC,yCAA0C,KAC1CC,oCAAqC,KACrCC,kCAAmC,KACnCC,wCAAyC,KACzCC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,+CAAgD,KAChDC,6DAA8D,KAC9DC,uDAAwD,KACxDC,gEAAiE,KACjEC,kDAAmD,KACnDC,mDAAoD,KACpDC,mCAAoC,KACpCC,mDAAoD,KACpDC,wCAAyC,KACzCC,wDAAyD,KACzDC,mCAAoC,KACpCC,mDAAoD,KACpDC,wCAAyC,KACzCC,qDAAsD,KACtDC,2DAA4D,KAC5DC,sCAAuC,KACvCC,yCAA0C,KAC1CC,2CAA4C,KAC5CC,6CAA8C,KAC9CC,2DAA4D,KAC5DC,qDAAsD,KACtDC,8DAA+D,KAC/DC,gDAAiD,KACjDC,iDAAkD,KAClDC,0CAA2C,KAC3CC,6CAA8C,KAC9CC,+CAAgD,KAChDC,iDAAkD,KAClDC,+DAAgE,KAChEC,yDAA0D,KAC1DC,kEAAmE,KACnEC,oDAAqD,KACrDC,qDAAsD,KACtDC,sDAAuD,KACvDC,kDAAmD,KACnDC,uCAAwC,KACxCC,0CAA2C,KAC3CC,4CAA6C,KAC7CC,8CAA+C,KAC/CC,4DAA6D,KAC7DC,sDAAuD,KACvDC,+DAAgE,KAChEC,iDAAkD,KAClDC,kDAAmD,KACnDC,2CAA4C,KAC5CC,8CAA+C,KAC/CC,gDAAiD,KACjDC,kDAAmD,KACnDC,gEAAiE,KACjEC,0DAA2D,KAC3DC,mEAAoE,KACpEC,qDAAsD,KACtDC,sDAAuD,KACvDC,sDAAuD,KACvDC,yDAA0D,KAC1DC,2DAA4D,KAC5DC,6DAA8D,KAC9DC,2EAA4E,KAC5EC,wDAAyD,KACzDC,2DAA4D,KAC5DC,6DAA8D,KAC9DC,+DAAgE,KAChEC,uEAAwE,KACxEC,sDAAuD,KACvDC,oEAAqE,MACrEC,+CAAgD,MAChDC,0CAA2C,MAC3CC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8DAA+D,MAC/DC,wDAAyD,MACzDC,iEAAkE,MAClEC,mDAAoD,MACpDC,oDAAqD,MACrDC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,oCAAqC,MACrCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,yDAA0D,MAC1DC,mDAAoD,MACpDC,4DAA6D,MAC7DC,8CAA+C,MAC/CC,+CAAgD,MAChDC,uCAAwC,MACxCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,4DAA6D,MAC7DC,sDAAuD,MACvDC,+DAAgE,MAChEC,iDAAkD,MAClDC,kDAAmD,MACnDC,yCAA0C,MAC1CC,qCAAsC,MACtCC,oCAAqC,MACrCC,uCAAwC,MACxCC,mCAAoC,MACpCC,qCAAsC,MACtCC,sCAAuC,MACvCC,sCAAuC,MACvCC,gCAAiC,MACjCC,uCAAwC,MACxCC,qCAAsC,MACtCC,mCAAoC,MACpCC,oCAAqC,MACrCC,yCAA0C,MAC1CC,oCAAqC,MACrCC,kCAAmC,MACnCC,wCAAyC,MACzCC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,6DAA8D,MAC9DC,uDAAwD,MACxDC,gEAAiE,MACjEC,kDAAmD,MACnDC,mDAAoD,MACpDC,mCAAoC,MACpCC,mDAAoD,MACpDC,wCAAyC,MACzCC,wDAAyD,MACzDC,mCAAoC,MACpCC,mDAAoD,MACpDC,wCAAyC,MACzCC,qDAAsD,MACtDC,2DAA4D,MAC5DC,sCAAuC,MACvCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,2DAA4D,MAC5DC,qDAAsD,MACtDC,8DAA+D,MAC/DC,gDAAiD,MACjDC,iDAAkD,MAClDC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,iDAAkD,MAClDC,+DAAgE,MAChEC,yDAA0D,MAC1DC,kEAAmE,MACnEC,oDAAqD,MACrDC,qDAAsD,MACtDC,sDAAuD,MACvDC,kDAAmD,MACnDC,uCAAwC,MACxCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,4DAA6D,MAC7DC,sDAAuD,MACvDC,+DAAgE,MAChEC,iDAAkD,MAClDC,kDAAmD,MACnDC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,gEAAiE,MACjEC,0DAA2D,MAC3DC,mEAAoE,MACpEC,qDAAsD,MACtDC,sDAAuD,MACvDC,sDAAuD,MACvDC,yDAA0D,MAC1DC,2DAA4D,MAC5DC,6DAA8D,MAC9DC,2EAA4E,MAC5EC,wDAAyD,MACzDC,2DAA4D,MAC5DC,6DAA8D,MAC9DC,+DAAgE,MAChEC,uEAAwE,MACxEC,sDAAuD,MACvDC,oEAAqE,MACrEC,+CAAgD,MAChDC,0CAA2C,MAC3CC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8DAA+D,MAC/DC,wDAAyD,MACzDC,iEAAkE,MAClEC,mDAAoD,MACpDC,oDAAqD,MACrDC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,oCAAqC,MACrCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,yDAA0D,MAC1DC,mDAAoD,MACpDC,4DAA6D,MAC7DC,8CAA+C,MAC/CC,+CAAgD,MAChDC,uCAAwC,MACxCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,4DAA6D,MAC7DC,sDAAuD,MACvDC,+DAAgE,MAChEC,iDAAkD,MAClDC,kDAAmD,MACnDC,yCAA0C,MAC1CC,qCAAsC,MACtCC,oCAAqC,MACrCC,uCAAwC,MACxCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,6CAA8C,MAC9CC,uCAAwC,MACxCC,8CAA+C,MAC/CC,4CAA6C,MAC7CC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,gDAAiD,MACjDC,2CAA4C,MAC5CC,yCAA0C,MAC1CC,+CAAgD,MAChDC,kDAAmD,MACnDC,oDAAqD,MACrDC,sDAAuD,MACvDC,oEAAqE,MACrEC,8DAA+D,MAC/DC,uEAAwE,MACxEC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,0CAA2C,MAC3CC,0DAA2D,MAC3DC,+CAAgD,MAChDC,+DAAgE,MAChEC,0CAA2C,MAC3CC,0DAA2D,MAC3DC,+CAAgD,MAChDC,4DAA6D,MAC7DC,kEAAmE,MACnEC,6CAA8C,MAC9CC,gDAAiD,MACjDC,kDAAmD,MACnDC,oDAAqD,MACrDC,kEAAmE,MACnEC,4DAA6D,MAC7DC,qEAAsE,MACtEC,uDAAwD,MACxDC,wDAAyD,MACzDC,iDAAkD,MAClDC,oDAAqD,MACrDC,sDAAuD,MACvDC,wDAAyD,MACzDC,sEAAuE,MACvEC,gEAAiE,MACjEC,yEAA0E,MAC1EC,2DAA4D,MAC5DC,4DAA6D,MAC7DC,6DAA8D,MAC9DC,yDAA0D,MAC1DC,8CAA+C,MAC/CC,iDAAkD,MAClDC,mDAAoD,MACpDC,qDAAsD,MACtDC,mEAAoE,MACpEC,6DAA8D,MAC9DC,sEAAuE,MACvEC,wDAAyD,MACzDC,yDAA0D,MAC1DC,kDAAmD,MACnDC,qDAAsD,MACtDC,uDAAwD,MACxDC,yDAA0D,MAC1DC,uEAAwE,MACxEC,iEAAkE,MAClEC,0EAA2E,MAC3EC,4DAA6D,MAC7DC,6DAA8D,MAC9DC,6DAA8D,MAC9DC,gEAAiE,MACjEC,kEAAmE,MACnEC,oEAAqE,MACrEC,kFAAmF,MACnFC,+DAAgE,MAChEC,kEAAmE,MACnEC,oEAAqE,MACrEC,sEAAuE,MACvEC,8EAA+E,MAC/EC,6DAA8D,MAC9DC,2EAA4E,MAC5EC,sDAAuD,MACvDC,iDAAkD,MAClDC,gDAAiD,MACjDC,mDAAoD,MACpDC,qDAAsD,MACtDC,uDAAwD,MACxDC,qEAAsE,MACtEC,+DAAgE,MAChEC,wEAAyE,MACzEC,0DAA2D,MAC3DC,2DAA4D,MAC5DC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,gEAAiE,MACjEC,0DAA2D,MAC3DC,mEAAoE,MACpEC,qDAAsD,MACtDC,sDAAuD,MACvDC,8CAA+C,MAC/CC,iDAAkD,MAClDC,mDAAoD,MACpDC,qDAAsD,MACtDC,mEAAoE,MACpEC,6DAA8D,MAC9DC,sEAAuE,MACvEC,wDAAyD,MACzDC,yDAA0D,MAC1DC,gDAAiD,MACjDC,4CAA6C,MAC7CC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,uCAAwC,MACxCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,0CAA2C,MAC3CC,oCAAqC,MACrCC,2CAA4C,MAC5CC,yCAA0C,MAC1CC,uCAAwC,MACxCC,wCAAyC,MACzCC,6CAA8C,MAC9CC,wCAAyC,MACzCC,sCAAuC,MACvCC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,uCAAwC,MACxCC,uDAAwD,MACxDC,4CAA6C,MAC7CC,4DAA6D,MAC7DC,uCAAwC,MACxCC,uDAAwD,MACxDC,4CAA6C,MAC7CC,yDAA0D,MAC1DC,+DAAgE,MAChEC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,iDAAkD,MAClDC,+DAAgE,MAChEC,yDAA0D,MAC1DC,kEAAmE,MACnEC,oDAAqD,MACrDC,qDAAsD,MACtDC,8CAA+C,MAC/CC,iDAAkD,MAClDC,mDAAoD,MACpDC,qDAAsD,MACtDC,mEAAoE,MACpEC,6DAA8D,MAC9DC,sEAAuE,MACvEC,wDAAyD,MACzDC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,sDAAuD,MACvDC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,gEAAiE,MACjEC,0DAA2D,MAC3DC,mEAAoE,MACpEC,qDAAsD,MACtDC,sDAAuD,MACvDC,+CAAgD,MAChDC,kDAAmD,MACnDC,oDAAqD,MACrDC,sDAAuD,MACvDC,oEAAqE,MACrEC,8DAA+D,MAC/DC,uEAAwE,MACxEC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,0DAA2D,MAC3DC,6DAA8D,MAC9DC,+DAAgE,MAChEC,iEAAkE,MAClEC,+EAAgF,MAChFC,4DAA6D,MAC7DC,+DAAgE,MAChEC,iEAAkE,MAClEC,mEAAoE,MACpEC,2EAA4E,MAC5EC,0DAA2D,MAC3DC,wEAAyE,MACzEC,mDAAoD,MACpDC,8CAA+C,MAC/CC,6CAA8C,MAC9CC,gDAAiD,MACjDC,kDAAmD,MACnDC,oDAAqD,MACrDC,kEAAmE,MACnEC,4DAA6D,MAC7DC,qEAAsE,MACtEC,uDAAwD,MACxDC,wDAAyD,MACzDC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8DAA+D,MAC/DC,wDAAyD,MACzDC,iEAAkE,MAClEC,mDAAoD,MACpDC,oDAAqD,MACrDC,wCAAyC,MACzCC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,6DAA8D,MAC9DC,uDAAwD,MACxDC,gEAAiE,MACjEC,kDAAmD,MACnDC,mDAAoD,MACpDC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,gEAAiE,MACjEC,0DAA2D,MAC3DC,mEAAoE,MACpEC,qDAAsD,MACtDC,sDAAuD,MACvDC,6CAA8C,MAC9CC,yCAA0C,MAC1CC,wCAAyC,MACzCC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,0BAA2B,MAC3BC,4BAA6B,MAC7BC,6BAA8B,MAC9BC,6BAA8B,MAC9BC,uBAAwB,MACxBC,8BAA+B,MAC/BC,4BAA6B,MAC7BC,0BAA2B,MAC3BC,2BAA4B,MAC5BC,gCAAiC,MACjCC,2BAA4B,MAC5BC,yBAA0B,MAC1BC,+BAAgC,MAChCC,kCAAmC,MACnCC,oCAAqC,MACrCC,sCAAuC,MACvCC,oDAAqD,MACrDC,8CAA+C,MAC/CC,uDAAwD,MACxDC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,0BAA2B,MAC3BC,0CAA2C,MAC3CC,+BAAgC,MAChCC,+CAAgD,MAChDC,0BAA2B,MAC3BC,0CAA2C,MAC3CC,+BAAgC,MAChCC,4CAA6C,MAC7CC,kDAAmD,MACnDC,6BAA8B,MAC9BC,gCAAiC,MACjCC,kCAAmC,MACnCC,oCAAqC,MACrCC,kDAAmD,MACnDC,4CAA6C,MAC7CC,qDAAsD,MACtDC,uCAAwC,MACxCC,wCAAyC,MACzCC,iCAAkC,MAClCC,oCAAqC,MACrCC,sCAAuC,MACvCC,wCAAyC,MACzCC,sDAAuD,MACvDC,gDAAiD,MACjDC,yDAA0D,MAC1DC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,yCAA0C,MAC1CC,8BAA+B,MAC/BC,iCAAkC,MAClCC,mCAAoC,MACpCC,qCAAsC,MACtCC,mDAAoD,MACpDC,6CAA8C,MAC9CC,sDAAuD,MACvDC,wCAAyC,MACzCC,yCAA0C,MAC1CC,kCAAmC,MACnCC,qCAAsC,MACtCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,uDAAwD,MACxDC,iDAAkD,MAClDC,0DAA2D,MAC3DC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,6CAA8C,MAC9CC,gDAAiD,MACjDC,kDAAmD,MACnDC,oDAAqD,MACrDC,kEAAmE,MACnEC,+CAAgD,MAChDC,kDAAmD,MACnDC,oDAAqD,MACrDC,sDAAuD,MACvDC,8DAA+D,MAC/DC,6CAA8C,MAC9CC,2DAA4D,MAC5DC,sCAAuC,MACvCC,iCAAkC,MAClCC,2BAA4B,MAC5BC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,8BAA+B,MAC/BC,wBAAyB,MACzBC,+BAAgC,MAChCC,6BAA8B,MAC9BC,2BAA4B,MAC5BC,4BAA6B,MAC7BC,iCAAkC,MAClCC,4BAA6B,MAC7BC,0BAA2B,MAC3BC,gCAAiC,MACjCC,mCAAoC,MACpCC,qCAAsC,MACtCC,uCAAwC,MACxCC,qDAAsD,MACtDC,+CAAgD,MAChDC,wDAAyD,MACzDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,2BAA4B,MAC5BC,2CAA4C,MAC5CC,gCAAiC,MACjCC,gDAAiD,MACjDC,2BAA4B,MAC5BC,2CAA4C,MAC5CC,gCAAiC,MACjCC,6CAA8C,MAC9CC,mDAAoD,MACpDC,8BAA+B,MAC/BC,iCAAkC,MAClCC,mCAAoC,MACpCC,qCAAsC,MACtCC,mDAAoD,MACpDC,6CAA8C,MAC9CC,sDAAuD,MACvDC,wCAAyC,MACzCC,yCAA0C,MAC1CC,kCAAmC,MACnCC,qCAAsC,MACtCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,uDAAwD,MACxDC,iDAAkD,MAClDC,0DAA2D,MAC3DC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,0CAA2C,MAC3CC,+BAAgC,MAChCC,kCAAmC,MACnCC,oCAAqC,MACrCC,sCAAuC,MACvCC,oDAAqD,MACrDC,8CAA+C,MAC/CC,uDAAwD,MACxDC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,mCAAoC,MACpCC,sCAAuC,MACvCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,wDAAyD,MACzDC,kDAAmD,MACnDC,2DAA4D,MAC5DC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,8CAA+C,MAC/CC,iDAAkD,MAClDC,mDAAoD,MACpDC,qDAAsD,MACtDC,mEAAoE,MACpEC,gDAAiD,MACjDC,mDAAoD,MACpDC,qDAAsD,MACtDC,uDAAwD,MACxDC,+DAAgE,MAChEC,8CAA+C,MAC/CC,4DAA6D,MAC7DC,uCAAwC,MACxCC,kCAAmC,MACnCC,sBAAuB,MACvBC,wBAAyB,MACzBC,yBAA0B,MAC1BC,yBAA0B,MAC1BC,mBAAoB,MACpBC,0BAA2B,MAC3BC,wBAAyB,MACzBC,sBAAuB,MACvBC,uBAAwB,MACxBC,4BAA6B,MAC7BC,uBAAwB,MACxBC,qBAAsB,MACtBC,2BAA4B,MAC5BC,8BAA+B,MAC/BC,gCAAiC,MACjCC,kCAAmC,MACnCC,gDAAiD,MACjDC,0CAA2C,MAC3CC,mDAAoD,MACpDC,qCAAsC,MACtCC,sCAAuC,MACvCC,sBAAuB,MACvBC,sCAAuC,MACvCC,2BAA4B,MAC5BC,2CAA4C,MAC5CC,sBAAuB,MACvBC,sCAAuC,MACvCC,2BAA4B,MAC5BC,wCAAyC,MACzCC,8CAA+C,MAC/CC,yBAA0B,MAC1BC,4BAA6B,MAC7BC,8BAA+B,MAC/BC,gCAAiC,MACjCC,8CAA+C,MAC/CC,wCAAyC,MACzCC,iDAAkD,MAClDC,mCAAoC,MACpCC,oCAAqC,MACrCC,6BAA8B,MAC9BC,gCAAiC,MACjCC,kCAAmC,MACnCC,oCAAqC,MACrCC,kDAAmD,MACnDC,4CAA6C,MAC7CC,qDAAsD,MACtDC,uCAAwC,MACxCC,wCAAyC,MACzCC,yCAA0C,MAC1CC,qCAAsC,MACtCC,0BAA2B,MAC3BC,6BAA8B,MAC9BC,+BAAgC,MAChCC,iCAAkC,MAClCC,+CAAgD,MAChDC,yCAA0C,MAC1CC,kDAAmD,MACnDC,oCAAqC,MACrCC,qCAAsC,MACtCC,8BAA+B,MAC/BC,iCAAkC,MAClCC,mCAAoC,MACpCC,qCAAsC,MACtCC,mDAAoD,MACpDC,6CAA8C,MAC9CC,sDAAuD,MACvDC,wCAAyC,MACzCC,yCAA0C,MAC1CC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8DAA+D,MAC/DC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,0DAA2D,MAC3DC,yCAA0C,MAC1CC,uDAAwD,MACxDC,kCAAmC,MACnCC,6BAA8B,MAC9BC,wCAAyC,MACzCC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,2CAA4C,MAC5CC,qCAAsC,MACtCC,4CAA6C,MAC7CC,0CAA2C,MAC3CC,wCAAyC,MACzCC,yCAA0C,MAC1CC,gDAAiD,MACjDC,uCAAwC,MACxCC,yCAA0C,MAC1CC,mDAAoD,MACpDC,6CAA8C,MAC9CC,yCAA0C,MAC1CC,+CAAgD,MAChDC,+BAAgC,MAChCC,gCAAiC,MACjCC,+BAAgC,MAChCC,iCAAkC,MAClCC,qCAAsC,MACtCC,uCAAwC,MACxCC,8CAA+C,MAC/CC,gDAAiD,MACjDC,oCAAqC,MACrCC,sCAAuC,MACvCC,6BAA8B,MAC9BC,gCAAiC,MACjCC,kCAAmC,MACnCC,yBAA0B,MAC1BC,6BAA8B,MAC9BC,yBAA0B,MAC1BC,wBAAyB,MACzBC,2BAA4B,MAC5BC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,kCAAmC,MACnCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,kCAAmC,MACnCC,gDAAiD,MACjDC,kDAAmD,MACnDC,yCAA0C,MAC1CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,sCAAuC,MACvCC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,qCAAsC,MACtCC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,qCAAsC,MACtCC,mDAAoD,MACpDC,qDAAsD,MACtDC,4CAA6C,MAC7CC,gDAAiD,MACjDC,kDAAmD,MACnDC,yCAA0C,MAC1CC,mCAAoC,MACpCC,qCAAsC,MACtCC,4BAA6B,MAC7BC,oCAAqC,MACrCC,sCAAuC,MACvCC,6BAA8B,MAC9BC,+BAAgC,MAChCC,+BAAgC,MAChCC,iCAAkC,MAClCC,wBAAyB,MACzBC,0BAA2B,MAC3BC,2EAA4E,MAC5EC,sEAAuE,MACvEC,uEAAwE,MACxEC,8EAA+E,MAC/EC,+CAAgD,MAChDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,kDAAmD,MACnDC,sDAAuD,MACvDC,+CAAgD,MAChDC,gDAAiD,MACjDC,+CAAgD,MAChDC,8CAA+C,MAC/CC,iDAAkD,MAClDC,2DAA4D,MAC5DC,sDAAuD,MACvDC,uDAAwD,MACxDC,8DAA+D,MAC/DC,wBAAyB,MACzBC,2BAA4B,MAC5BC,gCAAiC,MACjCC,gCAAiC,MACjCC,mCAAoC,MACpCC,yCAA0C,MAC1CC,YAAa,MACbC,sBAAuB,MACvBC,uCAAwC,MACxCC,2CAA4C,MAC5CC,uCAAwC,MACxCC,wDAAyD,MACzDC,kDAAmD,MACnDC,mDAAoD,MACpDC,yDAA0D,MAC1DC,8CAA+C,MAC/CC,+CAAgD,MAChDC,qDAAsD,MACtDC,oDAAqD,MACrDC,qDAAsD,MACtDC,oDAAqD,MACrDC,gDAAiD,MACjDC,iDAAkD,MAClDC,gDAAiD,MACjDC,wCAAyC,MACzCC,6CAA8C,MAC9CC,uCAAwC,MACxCC,iEAAkE,MAClEC,mEAAoE,MACpEC,iEAAkE,MAClEC,sEAAuE,MACvEC,mEAAoE,MACpEC,sEAAuE,MACvEC,4DAA6D,MAC7DC,4DAA6D,MAC7DC,+DAAgE,MAChEC,+DAAgE,MAChEC,YAAa,MACbC,YAAa,MACbC,0BAA2B,MAC3BC,4BAA6B,MAC7BC,6BAA8B,MAC9BC,6BAA8B,MAC9BC,uBAAwB,MACxBC,8BAA+B,MAC/BC,4BAA6B,MAC7BC,0BAA2B,MAC3BC,2BAA4B,MAC5BC,oCAAqC,MACrCC,sCAAuC,MACvCC,uCAAwC,MACxCC,uCAAwC,MACxCC,iCAAkC,MAClCC,wCAAyC,MACzCC,sCAAuC,MACvCC,oCAAqC,MACrCC,qCAAsC,MACtCC,+CAAgD,MAChDC,qDAAsD,MACtDC,wDAAyD,MACzDC,8DAA+D,MAC/DC,uDAAwD,MACxDC,wCAAyC,MACzCC,8DAA+D,MAC/DC,mEAAoE,MACpEC,+DAAgE,MAChEC,+DAAgE,MAChEC,wEAAyE,MACzEC,oEAAqE,MACrEC,sEAAuE,MACvEC,6EAA8E,MAC9EC,0EAA2E,MAC3EC,6EAA8E,MAC9EC,0EAA2E,MAC3EC,oFAAqF,MACrFC,iFAAkF,MAClFC,iFAAkF,MAClFC,8EAA+E,MAC/EC,gFAAiF,MACjFC,gFAAiF,MACjFC,uFAAwF,MACxFC,oFAAqF,MACrFC,uEAAwE,MACxEC,wEAAyE,MACzEC,mEAAoE,MACpEC,8CAA+C,MAC/CC,8BAA+B,MAC/BC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,wCAAyC,MACzCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,gBAAiB,MACjBC,+CAAgD,MAChDC,qDAAsD,MACtDC,oDAAqD,MACrDC,gDAAiD,MACjDC,+BAAgC,MAChCC,qCAAsC,MACtCC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,eAAgB,MAChBC,iBAAkB,MAClBC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,8DAA+D,MAC/DC,+DAAgE,MAChEC,oEAAqE,MACrEC,gEAAiE,MACjEC,uEAAwE,MACxEC,uFAAwF,MACxFC,wEAAyE,MACzEC,uEAAwE,MACxEC,sCAAuC,MACvCC,uCAAwC,MACxCC,uDAAwD,MACxDC,wDAAyD,MACzDC,6DAA8D,MAC9DC,yDAA0D,MAC1DC,gEAAiE,MACjEC,gFAAiF,MACjFC,iEAAkE,MAClEC,gEAAiE,MACjEC,oDAAqD,MACrDC,oCAAqC,MACrCC,qCAAsC,MACtCC,0CAA2C,MAC3CC,sCAAuC,MACvCC,6CAA8C,MAC9CC,6DAA8D,MAC9DC,8CAA+C,MAC/CC,6CAA8C,MAC9CC,cAAe,MACfC,mBAAoB,MACpBC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,8BAA+B,MAC/BC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,8BAA+B,MAC/BC,oCAAqC,MACrCC,qCAAsC,MACtCC,oCAAqC,MACrCC,0BAA2B,MAC3BC,+BAAgC,MAChCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,0CAA2C,MAC3CC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,0CAA2C,MAC3CC,gDAAiD,MACjDC,iDAAkD,MAClDC,gDAAiD,MACjDC,mCAAoC,MACpCC,uCAAwC,MACxCC,+CAAgD,MAChDC,wCAAyC,MACzCC,wCAAyC,MACzCC,+CAAgD,MAChDC,gDAAiD,MACjDC,yCAA0C,MAC1CC,8CAA+C,MAC/CC,wDAAyD,MACzDC,yDAA0D,MAC1DC,yDAA0D,MAC1DC,wDAAyD,MACzDC,yDAA0D,MAC1DC,yDAA0D,MAC1DC,+DAAgE,MAChEC,gEAAiE,MACjEC,+DAAgE,MAChEC,4DAA6D,MAC7DC,gEAAiE,MACjEC,wEAAyE,MACzEC,iEAAkE,MAClEC,iEAAkE,MAClEC,wEAAyE,MACzEC,yEAA0E,MAC1EC,kEAAmE,MACnEC,uEAAwE,MACxEC,iFAAkF,MAClFC,kFAAmF,MACnFC,kFAAmF,MACnFC,iFAAkF,MAClFC,kFAAmF,MACnFC,kFAAmF,MACnFC,wFAAyF,MACzFC,yFAA0F,MAC1FC,wFAAyF,MACzFC,wCAAyC,MACzCC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,oEAAqE,MACrEC,sBAAuB,MACvBC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,0DAA2D,MAC3DC,2DAA4D,MAC5DC,gEAAiE,MACjEC,4DAA6D,MAC7DC,mEAAoE,MACpEC,mFAAoF,MACpFC,oEAAqE,MACrEC,mEAAoE,MACpEC,8BAA+B,MAC/BC,+BAAgC,MAChCC,+BAAgC,MAChCC,8BAA+B,MAC/BC,+BAAgC,MAChCC,+BAAgC,MAChCC,qCAAsC,MACtCC,sCAAuC,MACvCC,qCAAsC,MACtCC,iCAAkC,MAClCC,mCAAoC,MACpCC,oCAAqC,MACrCC,oCAAqC,MACrCC,8BAA+B,MAC/BC,qCAAsC,MACtCC,mCAAoC,MACpCC,iCAAkC,MAClCC,kCAAmC,MACnCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,uCAAwC,MACxCC,kCAAmC,MACnCC,gCAAiC,MACjCC,sCAAuC,MACvCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,2DAA4D,MAC5DC,qDAAsD,MACtDC,8DAA+D,MAC/DC,gDAAiD,MACjDC,iDAAkD,MAClDC,iCAAkC,MAClCC,iDAAkD,MAClDC,sCAAuC,MACvCC,sDAAuD,MACvDC,iCAAkC,MAClCC,iDAAkD,MAClDC,sCAAuC,MACvCC,mDAAoD,MACpDC,yDAA0D,MAC1DC,oCAAqC,MACrCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,yDAA0D,MAC1DC,mDAAoD,MACpDC,4DAA6D,MAC7DC,8CAA+C,MAC/CC,+CAAgD,MAChDC,wCAAyC,MACzCC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,6DAA8D,MAC9DC,uDAAwD,MACxDC,gEAAiE,MACjEC,kDAAmD,MACnDC,mDAAoD,MACpDC,oDAAqD,MACrDC,gDAAiD,MACjDC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,mCAAoC,MACpCC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8DAA+D,MAC/DC,wDAAyD,MACzDC,iEAAkE,MAClEC,mDAAoD,MACpDC,oDAAqD,MACrDC,oDAAqD,MACrDC,uDAAwD,MACxDC,yDAA0D,MAC1DC,2DAA4D,MAC5DC,yEAA0E,MAC1EC,sDAAuD,MACvDC,yDAA0D,MAC1DC,2DAA4D,MAC5DC,6DAA8D,MAC9DC,qEAAsE,MACtEC,8EAA+E,MAC/EC,oDAAqD,MACrDC,kEAAmE,MACnEC,6CAA8C,MAC9CC,wCAAyC,MACzCC,qCAAsC,MACtCC,uCAAwC,MACxCC,gDAAiD,MACjDC,2CAA4C,MAC5CC,uCAAwC,MACxCC,6CAA8C,MAC9CC,wCAAyC,MACzCC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,2CAA4C,MAC5CC,qCAAsC,MACtCC,4CAA6C,MAC7CC,0CAA2C,MAC3CC,wCAAyC,MACzCC,yCAA0C,MAC1CC,gDAAiD,MACjDC,uCAAwC,MACxCC,yCAA0C,MAC1CC,mDAAoD,MACpDC,6CAA8C,MAC9CC,yCAA0C,MAC1CC,+CAAgD,MAChDC,2CAA4C,MAC5CC,2CAA4C,MAC5CC,iDAAkD,MAClDC,qBAAsB,MACtBC,8BAA+B,MAC/BC,4BAA6B,MAC7BC,6BAA8B,MAC9BC,6BAA8B,MAC9BC,yEAA0E,MAC1EC,wDAAyD,MACzDC,wBAAyB,MACzBC,wCAAyC,MACzCC,sDAAuD,MACvDC,mDAAoD,MACpDC,wDAAyD,MACzDC,wCAAyC,MACzCC,wDAAyD,MACzDC,2DAA4D,MAC5DC,qCAAsC,MACtCC,qDAAsD,MACtDC,wDAAyD,MACzDC,2CAA4C,MAC5CC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,wCAAyC,MACzCC,wDAAyD,MACzDC,2DAA4D,MAC5DC,yBAA0B,MAC1BC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,sBAAuB,MACvBC,+BAAgC,MAChCC,oBAAqB,MACrBC,4BAA6B,MAC7BC,0BAA2B,MAC3BC,8BAA+B,MAC/BC,+BAAgC,MAChCC,uBAAwB,MACxBC,gCAAiC,MACjCC,qBAAsB,MACtBC,6BAA8B,MAC9BC,+BAAgC,MAChCC,2BAA4B,MAC5BC,+BAAgC,MAChCC,gCAAiC,MACjCC,wBAAyB,MACzBC,iCAAkC,MAClCC,sBAAuB,MACvBC,8BAA+B,MAC/BC,gCAAiC,MACjCC,yBAA0B,MAC1BC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,sBAAuB,MACvBC,+BAAgC,MAChCC,oBAAqB,MACrBC,4BAA6B,MAC7BC,8BAA+B,MAC/BC,8BAA+B,MAC/BC,wBAAyB,MACzBC,4BAA6B,MAC7BC,6BAA8B,MAC9BC,qBAAsB,MACtBC,8BAA+B,MAC/BC,mBAAoB,MACpBC,2BAA4B,MAC5BC,6BAA8B,MAC9BC,6BAA8B,MAC9BC,6BAA8B,MAC9BC,mCAAoC,MACpCC,uCAAwC,MACxCC,wCAAyC,MACzCC,gCAAiC,MACjCC,yCAA0C,MAC1CC,8BAA+B,MAC/BC,sCAAuC,MACvCC,uCAAwC,MACxCC,iCAAkC,MAClCC,gCAAiC,MACjCC,gDAAiD,MACjDC,mDAAoD,MACpDC,uBAAwB,MACxBC,uCAAwC,MACxCC,0CAA2C,MAC3CC,mCAAoC,MACpCC,mDAAoD,MACpDC,sDAAuD,MACvDC,0BAA2B,MAC3BC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,yEAA0E,MAC1EC,mFAAoF,MACpFC,qFAAsF,MACtFC,2FAA4F,MAC5FC,mFAAoF,MACpFC,qFAAsF,MACtFC,mFAAoF,MACpFC,8FAA+F,MAC/FC,gGAAiG,MACjGC,8FAA+F,MAC/FC,+FAAgG,MAChGC,mGAAoG,MACpGC,oGAAqG,MACrGC,uGAAwG,MACxGC,2FAA4F,MAC5FC,kGAAmG,MACnGC,mFAAoF,MACpFC,0FAA2F,MAC3FC,oFAAqF,MACrFC,4FAA6F,MAC7FC,mFAAoF,MACpFC,mGAAoG,MACpGC,mGAAoG,MACpGC,gGAAiG,MACjGC,4FAA6F,MAC7FC,mGAAoG,MACpGC,iGAAkG,MAClGC,iGAAkG,MAClGC,gGAAiG,MACjGC,sFAAuF,MACvFC,wFAAyF,MACzFC,oGAAqG,MACrGC,kGAAmG,MACnGC,uFAAwF,MACxFC,4FAA6F,MAC7FC,0FAA2F,MAC3FC,+FAAgG,MAChGC,qFAAsF,MACtFC,yFAA0F,MAC1FC,4GAA6G,MAC7GC,yFAA0F,MAC1FC,wFAAyF,MACzFC,4FAA6F,MAC7FC,8FAA+F,MAC/FC,iFAAkF,MAClFC,2FAA4F,MAC5FC,uGAAwG,MACxGC,qGAAsG,MACtGC,yGAA0G,MAC1GC,0FAA2F,MAC3FC,mGAAoG,MACpGC,8FAA+F,MAC/FC,mGAAoG,MACpGC,mGAAoG,MACpGC,mFAAoF,MACpFC,yEAA0E,MAC1EC,2EAA4E,MAC5EC,2EAA4E,MAC5EC,6EAA8E,MAC9EC,kEAAmE,MACnEC,oEAAqE,MACrEC,oEAAqE,MACrEC,sEAAuE,MACvEC,+CAAgD,MAChDC,iDAAkD,MAClDC,iDAAkD,MAClDC,mDAAoD,MACpDC,qEAAsE,MACtEC,uEAAwE,MACxEC,uEAAwE,MACxEC,yEAA0E,MAC1EC,0BAA2B,MAC3BC,YAAa,MACbC,kCAAmC,MACnCC,kDAAmD,MACnDC,qDAAsD,MACtDC,wCAAyC,MACzCC,wDAAyD,MACzDC,2DAA4D,MAC5DC,qCAAsC,MACtCC,qDAAsD,MACtDC,wDAAyD,MACzDC,2CAA4C,MAC5CC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,gCAAiC,MACjCC,gDAAiD,MACjDC,mDAAoD,MACpDC,mCAAoC,MACpCC,mDAAoD,MACpDC,sDAAuD,MACvDC,0BAA2B,MAC3BC,2BAA4B,MAC5BC,uCAAwC,MACxCC,wCAAyC,MACzCC,yCAA0C,MAC1CC,wCAAyC,MACzCC,2CAA4C,MAC5CC,mBAAoB,MACpBC,wBAAyB,MACzBC,kCAAmC,MACnCC,mCAAoC,MACpCC,mCAAoC,MACpCC,kCAAmC,MACnCC,mCAAoC,MACpCC,mCAAoC,MACpCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,yCAA0C,MAC1CC,6BAA8B,MAC9BC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,4CAA6C,MAC7CC,+CAAgD,MAChDC,0BAA2B,MAC3BC,uCAAwC,MACxCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,0CAA2C,MAC3CC,oCAAqC,MACrCC,2CAA4C,MAC5CC,yCAA0C,MAC1CC,uCAAwC,MACxCC,wCAAyC,MACzCC,+CAAgD,MAChDC,sCAAuC,MACvCC,wCAAyC,MACzCC,kDAAmD,MACnDC,4CAA6C,MAC7CC,wCAAyC,MACzCC,8CAA+C,MAC/CC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,mDAAoD,MACpDC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,4CAA6C,MAC7CC,sCAAuC,MACvCC,6CAA8C,MAC9CC,2CAA4C,MAC5CC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,iDAAkD,MAClDC,wCAAyC,MACzCC,0CAA2C,MAC3CC,oDAAqD,MACrDC,8CAA+C,MAC/CC,0CAA2C,MAC3CC,gDAAiD,MACjDC,+CAAgD,MAChDC,qCAAsC,MACtCC,wCAAyC,MACzCC,6EAA8E,MAC9EC,kFAAmF,MACnFC,4FAA6F,MAC7FC,6FAA8F,MAC9FC,6FAA8F,MAC9FC,4FAA6F,MAC7FC,6FAA8F,MAC9FC,6FAA8F,MAC9FC,mGAAoG,MACpGC,oGAAqG,MACrGC,mGAAoG,MACpGC,uFAAwF,MACxFC,qGAAsG,MACtGC,sGAAuG,MACvGC,uGAAwG,MACxGC,sGAAuG,MACvGC,yGAA0G,MAC1GC,kCAAmC,MACnCC,kDAAmD,MACnDC,qDAAsD,MACtDC,qCAAsC,MACtCC,qDAAsD,MACtDC,wDAAyD,MACzDC,kBAAmB,MACnBC,sBAAuB,MACvBC,8BAA+B,MAC/BC,kCAAmC,MACnCC,6CAA8C,MAC9CC,iDAAkD,MAClDC,sEAAuE,MACvEC,0EAA2E,MAC3EC,uBAAwB,MACxBC,2BAA4B,MAC5BC,wCAAyC,MACzCC,4CAA6C,MAC7CC,2CAA4C,MAC5CC,uCAAwC,MACxCC,oCAAqC,MACrCC,oDAAqD,MACrDC,uDAAwD,MACxDC,6BAA8B,MAC9BC,6CAA8C,MAC9CC,gDAAiD,MACjDC,uCAAwC,MACxCC,uDAAwD,MACxDC,0DAA2D,MAC3DC,gCAAiC,MACjCC,gDAAiD,MACjDC,mDAAoD,MACpDC,4DAA6D,MAC7DC,6DAA8D,MAC9DC,wDAAyD,MACzDC,yDAA0D,MAC1DC,8CAA+C,MAC/CC,+CAAgD,MAChDC,gBAAiB,MACjBC,iDAAkD,MAClDC,kDAAmD,MACnDC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,iDAAkD,MAClDC,0BAA2B,MAC3BC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,sBAAuB,MACvBC,sCAAuC,MACvCC,yCAA0C,MAC1CC,6BAA8B,MAC9BC,6CAA8C,MAC9CC,gDAAiD,MACjDC,yBAA0B,MAC1BC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,0CAA2C,MAC3CC,wDAAyD,MACzDC,oDAAqD,MACrDC,iEAAkE,MAClEC,kFAAmF,MACnFC,4FAA6F,MAC7FC,+FAAgG,MAChGC,qGAAsG,MACtGC,yDAA0D,MAC1DC,mEAAoE,MACpEC,wEAAyE,MACzEC,kEAAmE,MACnEC,4EAA6E,MAC7EC,2EAA4E,MAC5EC,0EAA2E,MAC3EC,oFAAqF,MACrFC,2EAA4E,MAC5EC,qEAAsE,MACtEC,qEAAsE,MACtEC,sEAAuE,MACvEC,+EAAgF,MAChFC,sFAAuF,MACvFC,+EAAgF,MAChFC,8EAA+E,MAC/EC,qFAAsF,MACtFC,sFAAuF,MACvFC,6EAA8E,MAC9EC,sFAAuF,MACvFC,iFAAkF,MAClFC,4EAA6E,MAC7EC,iFAAkF,MAClFC,+EAAgF,MAChFC,8EAA+E,MAC/EC,oFAAqF,MACrFC,+EAAgF,MAChFC,4EAA6E,MAC7EC,oFAAqF,MACrFC,sFAAuF,MACvFC,4EAA6E,MAC7EC,iFAAkF,MAClFC,+CAAgD,MAChDC,yDAA0D,MAC1DC,2DAA4D,MAC5DC,iEAAkE,MAClEC,yDAA0D,MAC1DC,2DAA4D,MAC5DC,yDAA0D,MAC1DC,oEAAqE,MACrEC,sEAAuE,MACvEC,oEAAqE,MACrEC,qEAAsE,MACtEC,yEAA0E,MAC1EC,0EAA2E,MAC3EC,6EAA8E,MAC9EC,iEAAkE,MAClEC,wEAAyE,MACzEC,yDAA0D,MAC1DC,gEAAiE,MACjEC,0DAA2D,MAC3DC,kEAAmE,MACnEC,yDAA0D,MAC1DC,yEAA0E,MAC1EC,yEAA0E,MAC1EC,sEAAuE,MACvEC,kEAAmE,MACnEC,yEAA0E,MAC1EC,uEAAwE,MACxEC,uEAAwE,MACxEC,sEAAuE,MACvEC,4DAA6D,MAC7DC,8DAA+D,MAC/DC,0EAA2E,MAC3EC,wEAAyE,MACzEC,6DAA8D,MAC9DC,kEAAmE,MACnEC,gEAAiE,MACjEC,qEAAsE,MACtEC,2DAA4D,MAC5DC,+DAAgE,MAChEC,kFAAmF,MACnFC,+DAAgE,MAChEC,8DAA+D,MAC/DC,kEAAmE,MACnEC,oEAAqE,MACrEC,+DAAgE,MAChEC,yEAA0E,MAC1EC,qFAAsF,MACtFC,mFAAoF,MACpFC,uFAAwF,MACxFC,wEAAyE,MACzEC,iFAAkF,MAClFC,4EAA6E,MAC7EC,iFAAkF,MAClFC,iFAAkF,MAClFC,qCAAsC,MACtCC,iCAAkC,MAClCC,oCAAqC,MACrCC,+BAAgC,MAChCC,mDAAoD,MACpDC,2BAA4B,MAC5BC,+CAAgD,MAChDC,kDAAmD,MACnDC,uCAAwC,MACxCC,uDAAwD,MACxDC,0DAA2D,MAC3DC,2CAA4C,MAC5CC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,0CAA2C,MAC3CC,0DAA2D,MAC3DC,6DAA8D,MAC9DC,8CAA+C,MAC/CC,8DAA+D,MAC/DC,iEAAkE,MAClEC,oBAAqB,MACrBC,kDAAmD,MACnDC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,+CAAgD,MAChDC,2CAA4C,MAC5CC,qDAAsD,MACtDC,8DAA+D,MAC/DC,oDAAqD,MACrDC,gDAAiD,MACjDC,yDAA0D,MAC1DC,4DAA6D,MAC7DC,4DAA6D,MAC7DC,yDAA0D,MAC1DC,gEAAiE,MACjEC,6DAA8D,MAC9DC,mEAAoE,MACpEC,gEAAiE,MACjEC,mDAAoD,MACpDC,oDAAqD,MACrDC,0DAA2D,MAC3DC,+CAAgD,MAChDC,uCAAwC,MACxCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,0CAA2C,MAC3CC,oCAAqC,MACrCC,2CAA4C,MAC5CC,yCAA0C,MAC1CC,uCAAwC,MACxCC,wCAAyC,MACzCC,gDAAiD,MACjDC,kDAAmD,MACnDC,6CAA8C,MAC9CC,wCAAyC,MACzCC,sCAAuC,MACvCC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,uCAAwC,MACxCC,uDAAwD,MACxDC,4CAA6C,MAC7CC,4DAA6D,MAC7DC,uCAAwC,MACxCC,uDAAwD,MACxDC,4CAA6C,MAC7CC,yDAA0D,MAC1DC,+DAAgE,MAChEC,gEAAiE,MACjEC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,iDAAkD,MAClDC,+DAAgE,MAChEC,yDAA0D,MAC1DC,kEAAmE,MACnEC,oDAAqD,MACrDC,qDAAsD,MACtDC,8CAA+C,MAC/CC,iDAAkD,MAClDC,mDAAoD,MACpDC,qDAAsD,MACtDC,mEAAoE,MACpEC,6DAA8D,MAC9DC,sEAAuE,MACvEC,wDAAyD,MACzDC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,sDAAuD,MACvDC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,gEAAiE,MACjEC,0DAA2D,MAC3DC,mEAAoE,MACpEC,qDAAsD,MACtDC,sDAAuD,MACvDC,yCAA0C,MAC1CC,+CAAgD,MAChDC,kDAAmD,MACnDC,oDAAqD,MACrDC,sDAAuD,MACvDC,oEAAqE,MACrEC,8DAA+D,MAC/DC,uEAAwE,MACxEC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,0DAA2D,MAC3DC,6DAA8D,MAC9DC,+DAAgE,MAChEC,iEAAkE,MAClEC,+EAAgF,MAChFC,4DAA6D,MAC7DC,+DAAgE,MAChEC,iEAAkE,MAClEC,mEAAoE,MACpEC,2EAA4E,MAC5EC,oFAAqF,MACrFC,0DAA2D,MAC3DC,wEAAyE,MACzEC,mDAAoD,MACpDC,8CAA+C,MAC/CC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,+CAAgD,MAChDC,2CAA4C,MAC5CC,kBAAmB,MACnBC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,oCAAqC,MACrCC,qCAAsC,MACtCC,oCAAqC,MACrCC,oCAAqC,MACrCC,qCAAsC,MACtCC,+EAAgF,MAChFC,gFAAiF,MACjFC,0EAA2E,MAC3EC,2EAA4E,MAC5EC,0EAA2E,MAC3EC,2EAA4E,MAC5EC,4CAA6C,MAC7CC,gDAAiD,MACjDC,oDAAqD,MACrDC,iDAAkD,MAClDC,gDAAiD,MACjDC,2DAA4D,MAC5DC,4DAA6D,MAC7DC,4DAA6D,MAC7DC,2DAA4D,MAC5DC,4DAA6D,MAC7DC,4DAA6D,MAC7DC,kEAAmE,MACnEC,mEAAoE,MACpEC,kEAAmE,MACnEC,iDAAkD,MAClDC,kDAAmD,MACnDC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,wDAAyD,MACzDC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,8BAA+B,MAC/BC,6CAA8C,MAC9CC,sEAAuE,MACvEC,uBAAwB,MACxBC,oCAAqC,MACrCC,wCAAyC,MACzCC,4CAA6C,MAC7CC,yCAA0C,MAC1CC,wCAAyC,MACzCC,mDAAoD,MACpDC,oDAAqD,MACrDC,oDAAqD,MACrDC,mDAAoD,MACpDC,oDAAqD,MACrDC,oDAAqD,MACrDC,0DAA2D,MAC3DC,2DAA4D,MAC5DC,0DAA2D,MAC3DC,8CAA+C,MAC/CC,4DAA6D,MAC7DC,6DAA8D,MAC9DC,6DAA8D,MAC9DC,8DAA+D,MAC/DC,6DAA8D,MAC9DC,gEAAiE,MACjEC,sCAAuC,MACvCC,kDAAmD,MACnDC,iDAAkD,MAClDC,qDAAsD,MACtDC,sDAAuD,MACvDC,kEAAmE,MACnEC,sEAAuE,MACvEC,0EAA2E,MAC3EC,uEAAwE,MACxEC,sEAAuE,MACvEC,iFAAkF,MAClFC,kFAAmF,MACnFC,kFAAmF,MACnFC,iFAAkF,MAClFC,kFAAmF,MACnFC,kFAAmF,MACnFC,wFAAyF,MACzFC,yFAA0F,MAC1FC,wFAAyF,MACzFC,4EAA6E,MAC7EC,0FAA2F,MAC3FC,2FAA4F,MAC5FC,2FAA4F,MAC5FC,4FAA6F,MAC7FC,2FAA4F,MAC5FC,8FAA+F,MAC/FC,oEAAqE,MACrEC,4DAA6D,MAC7DC,gEAAiE,MACjEC,oEAAqE,MACrEC,iEAAkE,MAClEC,gEAAiE,MACjEC,2EAA4E,MAC5EC,4EAA6E,MAC7EC,4EAA6E,MAC7EC,2EAA4E,MAC5EC,4EAA6E,MAC7EC,4EAA6E,MAC7EC,kFAAmF,MACnFC,mFAAoF,MACpFC,kFAAmF,MACnFC,sEAAuE,MACvEC,oFAAqF,MACrFC,qFAAsF,MACtFC,qFAAsF,MACtFC,sFAAuF,MACvFC,qFAAsF,MACtFC,wFAAyF,MACzFC,8DAA+D,MAC/DC,gEAAiE,MACjEC,oEAAqE,MACrEC,wEAAyE,MACzEC,qEAAsE,MACtEC,oEAAqE,MACrEC,+EAAgF,MAChFC,gFAAiF,MACjFC,gFAAiF,MACjFC,+EAAgF,MAChFC,gFAAiF,MACjFC,gFAAiF,MACjFC,sFAAuF,MACvFC,uFAAwF,MACxFC,sFAAuF,MACvFC,0EAA2E,MAC3EC,wFAAyF,MACzFC,yFAA0F,MAC1FC,yFAA0F,MAC1FC,0FAA2F,MAC3FC,yFAA0F,MAC1FC,4FAA6F,MAC7FC,kEAAmE,MACnEC,sEAAuE,MACvEC,0EAA2E,MAC3EC,8EAA+E,MAC/EC,2EAA4E,MAC5EC,0EAA2E,MAC3EC,qFAAsF,MACtFC,sFAAuF,MACvFC,sFAAuF,MACvFC,qFAAsF,MACtFC,sFAAuF,MACvFC,sFAAuF,MACvFC,4FAA6F,MAC7FC,6FAA8F,MAC9FC,4FAA6F,MAC7FC,gFAAiF,MACjFC,8FAA+F,MAC/FC,+FAAgG,MAChGC,+FAAgG,MAChGC,gGAAiG,MACjGC,+FAAgG,MAChGC,kGAAmG,MACnGC,wEAAyE,MACzEC,iFAAkF,MAClFC,qFAAsF,MACtFC,yFAA0F,MAC1FC,sFAAuF,MACvFC,qFAAsF,MACtFC,gGAAiG,MACjGC,iGAAkG,MAClGC,iGAAkG,MAClGC,gGAAiG,MACjGC,iGAAkG,MAClGC,iGAAkG,MAClGC,uGAAwG,MACxGC,wGAAyG,MACzGC,uGAAwG,MACxGC,2FAA4F,MAC5FC,yGAA0G,MAC1GC,0GAA2G,MAC3GC,0GAA2G,MAC3GC,2GAA4G,MAC5GC,0GAA2G,MAC3GC,6GAA8G,MAC9GC,mFAAoF,MACpFC,2EAA4E,MAC5EC,+EAAgF,MAChFC,mFAAoF,MACpFC,gFAAiF,MACjFC,+EAAgF,MAChFC,0FAA2F,MAC3FC,2FAA4F,MAC5FC,2FAA4F,MAC5FC,0FAA2F,MAC3FC,2FAA4F,MAC5FC,2FAA4F,MAC5FC,iGAAkG,MAClGC,kGAAmG,MACnGC,iGAAkG,MAClGC,qFAAsF,MACtFC,mGAAoG,MACpGC,oGAAqG,MACrGC,oGAAqG,MACrGC,qGAAsG,MACtGC,oGAAqG,MACrGC,uGAAwG,MACxGC,6EAA8E,MAC9EC,+EAAgF,MAChFC,mFAAoF,MACpFC,uFAAwF,MACxFC,oFAAqF,MACrFC,mFAAoF,MACpFC,8FAA+F,MAC/FC,+FAAgG,MAChGC,+FAAgG,MAChGC,8FAA+F,MAC/FC,+FAAgG,MAChGC,+FAAgG,MAChGC,qGAAsG,MACtGC,sGAAuG,MACvGC,qGAAsG,MACtGC,yFAA0F,MAC1FC,uGAAwG,MACxGC,wGAAyG,MACzGC,wGAAyG,MACzGC,yGAA0G,MAC1GC,wGAAyG,MACzGC,2GAA4G,MAC5GC,iFAAkF,MAClFC,uEAAwE,MACxEC,2EAA4E,MAC5EC,+EAAgF,MAChFC,4EAA6E,MAC7EC,2EAA4E,MAC5EC,sFAAuF,MACvFC,uFAAwF,MACxFC,uFAAwF,MACxFC,sFAAuF,MACvFC,uFAAwF,MACxFC,uFAAwF,MACxFC,6FAA8F,MAC9FC,8FAA+F,MAC/FC,6FAA8F,MAC9FC,iFAAkF,MAClFC,+FAAgG,MAChGC,gGAAiG,MACjGC,gGAAiG,MACjGC,iGAAkG,MAClGC,gGAAiG,MACjGC,mGAAoG,MACpGC,yEAA0E,MAC1EC,2EAA4E,MAC5EC,+EAAgF,MAChFC,mFAAoF,MACpFC,gFAAiF,MACjFC,+EAAgF,MAChFC,0FAA2F,MAC3FC,2FAA4F,MAC5FC,2FAA4F,MAC5FC,0FAA2F,MAC3FC,2FAA4F,MAC5FC,2FAA4F,MAC5FC,iGAAkG,MAClGC,kGAAmG,MACnGC,iGAAkG,MAClGC,qFAAsF,MACtFC,mGAAoG,MACpGC,oGAAqG,MACrGC,oGAAqG,MACrGC,qGAAsG,MACtGC,oGAAqG,MACrGC,uGAAwG,MACxGC,6EAA8E,MAC9EC,iFAAkF,MAClFC,qFAAsF,MACtFC,iFAAkF,MAClFC,sGAAuG,MACvGC,+EAAgF,MAChFC,sCAAuC,MACvCC,oCAAqC,MACrCC,4CAA6C,MAC7CC,0BAA2B,MAC3BC,0BAA2B,MAC3BC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,6BAA8B,MAC9BC,6CAA8C,MAC9CC,gDAAiD,MACjDC,6BAA8B,MAC9BC,6CAA8C,MAC9CC,gDAAiD,MACjDC,gCAAiC,MACjCC,gDAAiD,MACjDC,mDAAoD,MACpDC,+CAAgD,MAChDC,kCAAmC,MACnCC,cAAe,MACfC,uBAAwB,MACxBC,mBAAoB,MACpBC,qCAAsC,MACtCC,uCAAwC,MACxCC,wCAAyC,MACzCC,wCAAyC,MACzCC,kCAAmC,MACnCC,yCAA0C,MAC1CC,uCAAwC,MACxCC,qCAAsC,MACtCC,sCAAuC,MACvCC,6CAA8C,MAC9CC,oCAAqC,MACrCC,sCAAuC,MACvCC,gDAAiD,MACjDC,0CAA2C,MAC3CC,sCAAuC,MACvCC,4CAA6C,MAC7CC,+BAAgC,MAChCC,gCAAiC,MACjCC,kCAAmC,MACnCC,sCAAuC,MACvCC,mCAAoC,MACpCC,8BAA+B,MAC/BC,iEAAkE,MAClEC,2BAA4B,MAC5BC,kEAAmE,MACnEC,uCAAwC,MACxCC,wCAAyC,MACzCC,8CAA+C,MAC/CC,0CAA2C,MAC3CC,sCAAuC,MACvCC,2CAA4C,MAC5CC,gDAAiD,MACjDC,iDAAkD,MAClDC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,0CAA2C,MAC3CC,8CAA+C,MAC/CC,8CAA+C,MAC/CC,8DAA+D,MAC/DC,iEAAkE,MAClEC,2CAA4C,MAC5CC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,kCAAmC,MACnCC,qDAAsD,MACtDC,kDAAmD,MACnDC,6BAA8B,MAC9BC,0BAA2B,MAC3BC,4CAA6C,MAC7CC,yCAA0C,MAC1CC,oDAAqD,MACrDC,iDAAkD,MAClDC,2CAA4C,MAC5CC,wCAAyC,MACzCC,2CAA4C,MAC5CC,wCAAyC,MACzCC,2CAA4C,MAC5CC,wCAAyC,MACzCC,6CAA8C,MAC9CC,0CAA2C,MAC3CC,iDAAkD,MAClDC,8CAA+C,MAC/CC,gDAAiD,MACjDC,6CAA8C,MAC9CC,4DAA6D,MAC7DC,+DAAgE,MAChEC,oCAAqC,MACrCC,uCAAwC,MACxCC,gCAAiC,MACjCC,qCAAsC,MACtCC,wCAAyC,MACzCC,mDAAoD,MACpDC,sDAAuD,MACvDC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,kDAAmD,MACnDC,qDAAsD,MACtDC,kDAAmD,MACnDC,qDAAsD,MACtDC,oDAAqD,MACrDC,uDAAwD,MACxDC,uDAAwD,MACxDC,0DAA2D,MAC3DC,wDAAyD,MACzDC,2DAA4D,MAC5DC,wCAAyC,MACzCC,wDAAyD,MACzDC,2DAA4D,MAC5DC,gCAAiC,MACjCC,gDAAiD,MACjDC,mDAAoD,MACpDC,2CAA4C,MAC5CC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,kDAAmD,MACnDC,6DAA8D,MAC9DC,8DAA+D,MAC/DC,+DAAgE,MAChEC,wDAAyD,MACzDC,yDAA0D,MAC1DC,iEAAkE,MAClEC,oEAAqE,MACrEC,sEAAuE,MACvEC,wEAAyE,MACzEC,sFAAuF,MACvFC,mEAAoE,MACpEC,sEAAuE,MACvEC,wEAAyE,MACzEC,0EAA2E,MAC3EC,kFAAmF,MACnFC,2FAA4F,MAC5FC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,+CAAgD,MAChDC,wCAAyC,MACzCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,iDAAkD,MAClDC,+DAAgE,MAChEC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,2DAA4D,MAC5DC,oEAAqE,MACrEC,8CAA+C,MAC/CC,qDAAsD,MACtDC,sDAAuD,MACvDC,oDAAqD,MACrDC,+CAAgD,MAChDC,gEAAiE,MACjEC,wEAAyE,MACzEC,iEAAkE,MAClEC,+DAAgE,MAChEC,+DAAgE,MAChEC,iEAAkE,MAClEC,kEAAmE,MACnEC,gEAAiE,MACjEC,0DAA2D,MAC3DC,oCAAqC,MACrCC,wCAAyC,MACzCC,gDAAiD,MACjDC,yCAA0C,MAC1CC,yCAA0C,MAC1CC,gDAAiD,MACjDC,iDAAkD,MAClDC,0CAA2C,MAC3CC,8CAA+C,MAC/CC,kDAAmD,MACnDC,+CAAgD,MAChDC,8CAA+C,MAC/CC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,0DAA2D,MAC3DC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,0DAA2D,MAC3DC,gEAAiE,MACjEC,iEAAkE,MAClEC,gEAAiE,MACjEC,mCAAoC,MACpCC,oCAAqC,MACrCC,sCAAuC,MACvCC,iCAAkC,MAClCC,kCAAmC,MACnCC,oCAAqC,MACrCC,6BAA8B,MAC9BC,6CAA8C,MAC9CC,gDAAiD,MACjDC,kDAAmD,MACnDC,qDAAsD,MACtDC,mCAAoC,MACpCC,mDAAoD,MACpDC,sDAAuD,MACvDC,sCAAuC,MACvCC,sDAAuD,MACvDC,yDAA0D,MAC1DC,8CAA+C,MAC/CC,kDAAmD,MACnDC,iDAAkD,MAClDC,6CAA8C,MAC9CC,iDAAkD,MAClDC,gDAAiD,MACjDC,sEAAuE,MACvEC,0EAA2E,MAC3EC,yEAA0E,MAC1EC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,2CAA4C,MAC5CC,+DAAgE,MAChEC,kEAAmE,MACnEC,4DAA6D,MAC7DC,+DAAgE,MAChEC,oBAAqB,MACrBC,sBAAuB,MACvBC,mBAAoB,MACpBC,uCAAwC,MACxCC,0CAA2C,MAC3CC,oCAAqC,MACrCC,uCAAwC,MACxCC,wCAAyC,MACzCC,2CAA4C,MAC5CC,qCAAsC,MACtCC,wCAAyC,MACzCC,mCAAoC,MACpCC,qCAAsC,MACtCC,kCAAmC,MACnCC,sDAAuD,MACvDC,yDAA0D,MAC1DC,mDAAoD,MACpDC,sDAAuD,MACvDC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,0CAA2C,MAC3CC,8DAA+D,MAC/DC,iEAAkE,MAClEC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,kCAAmC,MACnCC,oCAAqC,MACrCC,iCAAkC,MAClCC,qDAAsD,MACtDC,wDAAyD,MACzDC,kDAAmD,MACnDC,qDAAsD,MACtDC,kCAAmC,MACnCC,oCAAqC,MACrCC,iCAAkC,MAClCC,qDAAsD,MACtDC,wDAAyD,MACzDC,kDAAmD,MACnDC,qDAAsD,MACtDC,kCAAmC,MACnCC,oCAAqC,MACrCC,iCAAkC,MAClCC,qDAAsD,MACtDC,wDAAyD,MACzDC,kDAAmD,MACnDC,qDAAsD,MACtDC,oCAAqC,MACrCC,sCAAuC,MACvCC,mCAAoC,MACpCC,uDAAwD,MACxDC,0DAA2D,MAC3DC,oDAAqD,MACrDC,uDAAwD,MACxDC,uCAAwC,MACxCC,yCAA0C,MAC1CC,sCAAuC,MACvCC,0DAA2D,MAC3DC,6DAA8D,MAC9DC,uDAAwD,MACxDC,0DAA2D,MAC3DC,wCAAyC,MACzCC,0CAA2C,MAC3CC,uCAAwC,MACxCC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,wDAAyD,MACzDC,2DAA4D,MAC5DC,2DAA4D,MAC5DC,4DAA6D,MAC7DC,8DAA+D,MAC/DC,oDAAqD,MACrDC,qDAAsD,MACtDC,uDAAwD,MACxDC,uDAAwD,MACxDC,wDAAyD,MACzDC,0DAA2D,MAC3DC,mBAAoB,MACpBC,iCAAkC,MAClCC,uBAAwB,MACxBC,wEAAyE,MACzEC,yEAA0E,MAC1EC,mEAAoE,MACpEC,oEAAqE,MACrEC,mEAAoE,MACpEC,oEAAqE,MACrEC,qCAAsC,MACtCC,yCAA0C,MAC1CC,6CAA8C,MAC9CC,0CAA2C,MAC3CC,yCAA0C,MAC1CC,oDAAqD,MACrDC,qDAAsD,MACtDC,qDAAsD,MACtDC,oDAAqD,MACrDC,qDAAsD,MACtDC,qDAAsD,MACtDC,2DAA4D,MAC5DC,4DAA6D,MAC7DC,2DAA4D,MAC5DC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,qCAAsC,MACtCC,sCAAuC,MACvCC,iDAAkD,MAClDC,qCAAsC,MACtCC,sCAAuC,MACvCC,8DAA+D,MAC/DC,8CAA+C,MAC/CC,kCAAmC,MACnCC,oCAAqC,MACrCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,iDAAkD,MAClDC,mDAAoD,MACpDC,uCAAwC,MACxCC,yCAA0C,MAC1CC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,gCAAiC,MACjCC,mCAAoC,MACpCC,qCAAsC,MACtCC,uCAAwC,MACxCC,qDAAsD,MACtDC,+CAAgD,MAChDC,wDAAyD,MACzDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,kCAAmC,MACnCC,gCAAiC,MACjCC,2BAA4B,MAC5BC,4BAA6B,MAC7BC,oCAAqC,MACrCC,+BAAgC,MAChCC,sCAAuC,MACvCC,0DAA2D,MAC3DC,4DAA6D,MAC7DC,6DAA8D,MAC9DC,6DAA8D,MAC9DC,uDAAwD,MACxDC,8DAA+D,MAC/DC,4DAA6D,MAC7DC,0DAA2D,MAC3DC,2DAA4D,MAC5DC,mEAAoE,MACpEC,qEAAsE,MACtEC,sEAAuE,MACvEC,wEAAyE,MACzEC,gEAAiE,MACjEC,2DAA4D,MAC5DC,yDAA0D,MAC1DC,+DAAgE,MAChEC,kEAAmE,MACnEC,oEAAqE,MACrEC,sEAAuE,MACvEC,oFAAqF,MACrFC,8EAA+E,MAC/EC,uFAAwF,MACxFC,yEAA0E,MAC1EC,0EAA2E,MAC3EC,0DAA2D,MAC3DC,0EAA2E,MAC3EC,+DAAgE,MAChEC,+EAAgF,MAChFC,0DAA2D,MAC3DC,0EAA2E,MAC3EC,+DAAgE,MAChEC,4EAA6E,MAC7EC,6DAA8D,MAC9DC,gEAAiE,MACjEC,kEAAmE,MACnEC,oEAAqE,MACrEC,kFAAmF,MACnFC,4EAA6E,MAC7EC,qFAAsF,MACtFC,uEAAwE,MACxEC,wEAAyE,MACzEC,iEAAkE,MAClEC,oEAAqE,MACrEC,sEAAuE,MACvEC,wEAAyE,MACzEC,sFAAuF,MACvFC,gFAAiF,MACjFC,yFAA0F,MAC1FC,2EAA4E,MAC5EC,4EAA6E,MAC7EC,6EAA8E,MAC9EC,yEAA0E,MAC1EC,8DAA+D,MAC/DC,iEAAkE,MAClEC,mEAAoE,MACpEC,qEAAsE,MACtEC,mFAAoF,MACpFC,6EAA8E,MAC9EC,sFAAuF,MACvFC,wEAAyE,MACzEC,yEAA0E,MAC1EC,4DAA6D,MAC7DC,kEAAmE,MACnEC,qEAAsE,MACtEC,uEAAwE,MACxEC,yEAA0E,MAC1EC,uFAAwF,MACxFC,iFAAkF,MAClFC,0FAA2F,MAC3FC,4EAA6E,MAC7EC,6EAA8E,MAC9EC,oEAAqE,MACrEC,uEAAwE,MACxEC,yEAA0E,MAC1EC,2EAA4E,MAC5EC,yFAA0F,MAC1FC,mFAAoF,MACpFC,4FAA6F,MAC7FC,8EAA+E,MAC/EC,+EAAgF,MAChFC,+DAAgE,MAChEC,kEAAmE,MACnEC,oEAAqE,MACrEC,sEAAuE,MACvEC,oFAAqF,MACrFC,8EAA+E,MAC/EC,uFAAwF,MACxFC,yEAA0E,MAC1EC,0EAA2E,MAC3EC,6EAA8E,MAC9EC,gFAAiF,MACjFC,kFAAmF,MACnFC,oFAAqF,MACrFC,kGAAmG,MACnGC,+EAAgF,MAChFC,kFAAmF,MACnFC,oFAAqF,MACrFC,sFAAuF,MACvFC,8FAA+F,MAC/FC,uGAAwG,MACxGC,6EAA8E,MAC9EC,2FAA4F,MAC5FC,sEAAuE,MACvEC,iEAAkE,MAClEC,iEAAkE,MAClEC,+DAAgE,MAChEC,0DAA2D,MAC3DC,2DAA4D,MAC5DC,mEAAoE,MACpEC,8DAA+D,MAC/DC,qEAAsE,MACtEC,mCAAoC,MACpCC,qCAAsC,MACtCC,iCAAkC,MAClCC,oCAAqC,MACrCC,sCAAuC,MACvCC,wCAAyC,MACzCC,sDAAuD,MACvDC,gDAAiD,MACjDC,yDAA0D,MAC1DC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,4BAA6B,MAC7BC,+BAAgC,MAChCC,iCAAkC,MAClCC,mCAAoC,MACpCC,iDAAkD,MAClDC,2CAA4C,MAC5CC,oDAAqD,MACrDC,sCAAuC,MACvCC,uCAAwC,MACxCC,8BAA+B,MAC/BC,4BAA6B,MAC7BC,uBAAwB,MACxBC,wBAAyB,MACzBC,gCAAiC,MACjCC,2BAA4B,MAC5BC,kCAAmC,MACnCC,iCAAkC,MAClCC,6BAA8B,MAC9BC,4BAA6B,MAC7BC,+BAAgC,MAChCC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,iDAAkD,MAClDC,+DAAgE,MAChEC,yDAA0D,MAC1DC,kEAAmE,MACnEC,oDAAqD,MACrDC,qDAAsD,MACtDC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,uCAAwC,MACxCC,qCAAsC,MACtCC,gCAAiC,MACjCC,iCAAkC,MAClCC,yCAA0C,MAC1CC,oCAAqC,MACrCC,2CAA4C,MAC5CC,0CAA2C,MAC3CC,sCAAuC,MACvCC,qCAAsC,MACtCC,wCAAyC,MACzCC,+CAAgD,MAChDC,iDAAkD,MAClDC,6CAA8C,MAC9CC,gDAAiD,MACjDC,kDAAmD,MACnDC,oDAAqD,MACrDC,kEAAmE,MACnEC,4DAA6D,MAC7DC,qEAAsE,MACtEC,uDAAwD,MACxDC,wDAAyD,MACzDC,wCAAyC,MACzCC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,6DAA8D,MAC9DC,uDAAwD,MACxDC,gEAAiE,MACjEC,kDAAmD,MACnDC,mDAAoD,MACpDC,0CAA2C,MAC3CC,wCAAyC,MACzCC,mCAAoC,MACpCC,oCAAqC,MACrCC,4CAA6C,MAC7CC,uCAAwC,MACxCC,8CAA+C,MAC/CC,6CAA8C,MAC9CC,yCAA0C,MAC1CC,wCAAyC,MACzCC,2CAA4C,MAC5CC,+CAAgD,MAChDC,iDAAkD,MAClDC,6CAA8C,MAC9CC,gDAAiD,MACjDC,kDAAmD,MACnDC,oDAAqD,MACrDC,kEAAmE,MACnEC,4DAA6D,MAC7DC,qEAAsE,MACtEC,uDAAwD,MACxDC,wDAAyD,MACzDC,wCAAyC,MACzCC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,6DAA8D,MAC9DC,uDAAwD,MACxDC,gEAAiE,MACjEC,kDAAmD,MACnDC,mDAAoD,MACpDC,0CAA2C,MAC3CC,wCAAyC,MACzCC,mCAAoC,MACpCC,oCAAqC,MACrCC,4CAA6C,MAC7CC,uCAAwC,MACxCC,8CAA+C,MAC/CC,6CAA8C,MAC9CC,yCAA0C,MAC1CC,wCAAyC,MACzCC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,iDAAkD,MAClDC,+DAAgE,MAChEC,yDAA0D,MAC1DC,kEAAmE,MACnEC,oDAAqD,MACrDC,qDAAsD,MACtDC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,uCAAwC,MACxCC,qCAAsC,MACtCC,gCAAiC,MACjCC,iCAAkC,MAClCC,yCAA0C,MAC1CC,oCAAqC,MACrCC,2CAA4C,MAC5CC,0CAA2C,MAC3CC,sCAAuC,MACvCC,qCAAsC,MACtCC,wCAAyC,MACzCC,mDAAoD,MACpDC,qDAAsD,MACtDC,iDAAkD,MAClDC,oDAAqD,MACrDC,sDAAuD,MACvDC,wDAAyD,MACzDC,sEAAuE,MACvEC,gEAAiE,MACjEC,yEAA0E,MAC1EC,2DAA4D,MAC5DC,4DAA6D,MAC7DC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,8CAA+C,MAC/CC,4CAA6C,MAC7CC,uCAAwC,MACxCC,wCAAyC,MACzCC,gDAAiD,MACjDC,2CAA4C,MAC5CC,kDAAmD,MACnDC,iDAAkD,MAClDC,6CAA8C,MAC9CC,4CAA6C,MAC7CC,+CAAgD,MAChDC,gDAAiD,MACjDC,gDAAiD,MACjDC,kDAAmD,MACnDC,8CAA+C,MAC/CC,iDAAkD,MAClDC,mDAAoD,MACpDC,qDAAsD,MACtDC,mEAAoE,MACpEC,6DAA8D,MAC9DC,sEAAuE,MACvEC,wDAAyD,MACzDC,yDAA0D,MAC1DC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8DAA+D,MAC/DC,wDAAyD,MACzDC,iEAAkE,MAClEC,mDAAoD,MACpDC,oDAAqD,MACrDC,2CAA4C,MAC5CC,yCAA0C,MAC1CC,oCAAqC,MACrCC,qCAAsC,MACtCC,6CAA8C,MAC9CC,wCAAyC,MACzCC,+CAAgD,MAChDC,8CAA+C,MAC/CC,0CAA2C,MAC3CC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,sDAAuD,MACvDC,wDAAyD,MACzDC,oDAAqD,MACrDC,uDAAwD,MACxDC,yDAA0D,MAC1DC,2DAA4D,MAC5DC,yEAA0E,MAC1EC,mEAAoE,MACpEC,4EAA6E,MAC7EC,8DAA+D,MAC/DC,+DAAgE,MAChEC,+CAAgD,MAChDC,kDAAmD,MACnDC,oDAAqD,MACrDC,sDAAuD,MACvDC,oEAAqE,MACrEC,8DAA+D,MAC/DC,uEAAwE,MACxEC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,iDAAkD,MAClDC,+CAAgD,MAChDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,mDAAoD,MACpDC,8CAA+C,MAC/CC,qDAAsD,MACtDC,oDAAqD,MACrDC,gDAAiD,MACjDC,+CAAgD,MAChDC,kDAAmD,MACnDC,mDAAoD,MACpDC,mDAAoD,MACpDC,qDAAsD,MACtDC,iDAAkD,MAClDC,oDAAqD,MACrDC,sDAAuD,MACvDC,wDAAyD,MACzDC,sEAAuE,MACvEC,gEAAiE,MACjEC,yEAA0E,MAC1EC,2DAA4D,MAC5DC,4DAA6D,MAC7DC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,8CAA+C,MAC/CC,4CAA6C,MAC7CC,uCAAwC,MACxCC,wCAAyC,MACzCC,gDAAiD,MACjDC,2CAA4C,MAC5CC,kDAAmD,MACnDC,iDAAkD,MAClDC,6CAA8C,MAC9CC,4CAA6C,MAC7CC,+CAAgD,MAChDC,gDAAiD,MACjDC,sCAAuC,MACvCC,wCAAyC,MACzCC,oCAAqC,MACrCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,yDAA0D,MAC1DC,mDAAoD,MACpDC,4DAA6D,MAC7DC,8CAA+C,MAC/CC,+CAAgD,MAChDC,+BAAgC,MAChCC,kCAAmC,MACnCC,oCAAqC,MACrCC,sCAAuC,MACvCC,oDAAqD,MACrDC,8CAA+C,MAC/CC,uDAAwD,MACxDC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,iCAAkC,MAClCC,+BAAgC,MAChCC,0BAA2B,MAC3BC,2BAA4B,MAC5BC,mCAAoC,MACpCC,8BAA+B,MAC/BC,qCAAsC,MACtCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,gCAAiC,MACjCC,mCAAoC,MACpCC,qCAAsC,MACtCC,uCAAwC,MACxCC,qDAAsD,MACtDC,+CAAgD,MAChDC,wDAAyD,MACzDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,kCAAmC,MACnCC,gCAAiC,MACjCC,2BAA4B,MAC5BC,4BAA6B,MAC7BC,oCAAqC,MACrCC,+BAAgC,MAChCC,sCAAuC,MACvCC,6CAA8C,MAC9CC,+CAAgD,MAChDC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,gEAAiE,MACjEC,0DAA2D,MAC3DC,mEAAoE,MACpEC,qDAAsD,MACtDC,sDAAuD,MACvDC,sCAAuC,MACvCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,2DAA4D,MAC5DC,qDAAsD,MACtDC,8DAA+D,MAC/DC,gDAAiD,MACjDC,iDAAkD,MAClDC,wCAAyC,MACzCC,sCAAuC,MACvCC,iCAAkC,MAClCC,kCAAmC,MACnCC,0CAA2C,KAC3CC,qCAAsC,MACtCC,4CAA6C,MAC7CC,kCAAmC,MACnCC,oCAAqC,MACrCC,gCAAiC,MACjCC,mCAAoC,MACpCC,qCAAsC,MACtCC,uCAAwC,MACxCC,qDAAsD,MACtDC,+CAAgD,MAChDC,wDAAyD,MACzDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,2BAA4B,MAC5BC,8BAA+B,MAC/BC,gCAAiC,MACjCC,kCAAmC,MACnCC,gDAAiD,MACjDC,0CAA2C,MAC3CC,mDAAoD,MACpDC,qCAAsC,MACtCC,sCAAuC,MACvCC,6BAA8B,MAC9BC,2BAA4B,MAC5BC,sBAAuB,MACvBC,uBAAwB,MACxBC,+BAAgC,MAChCC,0BAA2B,MAC3BC,iCAAkC,MAClCC,mDAAoD,MACpDC,qDAAsD,MACtDC,iDAAkD,MAClDC,oDAAqD,MACrDC,sDAAuD,MACvDC,wDAAyD,MACzDC,sEAAuE,MACvEC,gEAAiE,MACjEC,yEAA0E,MAC1EC,2DAA4D,MAC5DC,4DAA6D,MAC7DC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,8CAA+C,MAC/CC,4CAA6C,MAC7CC,uCAAwC,MACxCC,wCAAyC,MACzCC,gDAAiD,MACjDC,2CAA4C,MAC5CC,kDAAmD,MACnDC,6BAA8B,MAC9BC,+BAAgC,MAChCC,gCAAiC,MACjCC,gCAAiC,MACjCC,0BAA2B,MAC3BC,iCAAkC,MAClCC,+BAAgC,MAChCC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,sCAAuC,MACvCC,wCAAyC,MACzCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,mCAAoC,MACpCC,8BAA+B,MAC/BC,4BAA6B,MAC7BC,kCAAmC,MACnCC,qCAAsC,MACtCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,uDAAwD,MACxDC,iDAAkD,MAClDC,0DAA2D,MAC3DC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,6BAA8B,MAC9BC,6CAA8C,MAC9CC,kCAAmC,MACnCC,kDAAmD,MACnDC,6BAA8B,MAC9BC,6CAA8C,MAC9CC,kCAAmC,MACnCC,+CAAgD,MAChDC,qDAAsD,MACtDC,sDAAuD,MACvDC,gCAAiC,MACjCC,mCAAoC,MACpCC,qCAAsC,MACtCC,uCAAwC,MACxCC,qDAAsD,MACtDC,+CAAgD,MAChDC,wDAAyD,MACzDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,oCAAqC,MACrCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,yDAA0D,MAC1DC,mDAAoD,MACpDC,4DAA6D,MAC7DC,8CAA+C,MAC/CC,+CAAgD,MAChDC,gDAAiD,MACjDC,4CAA6C,MAC7CC,iCAAkC,MAClCC,oCAAqC,MACrCC,sCAAuC,MACvCC,wCAAyC,MACzCC,sDAAuD,MACvDC,gDAAiD,MACjDC,yDAA0D,MAC1DC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,+BAAgC,MAChCC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,uCAAwC,MACxCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,4DAA6D,MAC7DC,sDAAuD,MACvDC,+DAAgE,MAChEC,iDAAkD,MAClDC,kDAAmD,MACnDC,kCAAmC,MACnCC,qCAAsC,MACtCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,uDAAwD,MACxDC,iDAAkD,MAClDC,0DAA2D,MAC3DC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,gDAAiD,MACjDC,mDAAoD,MACpDC,qDAAsD,MACtDC,uDAAwD,MACxDC,qEAAsE,MACtEC,kDAAmD,MACnDC,qDAAsD,MACtDC,uDAAwD,MACxDC,yDAA0D,MAC1DC,iEAAkE,MAClEC,0EAA2E,MAC3EC,gDAAiD,MACjDC,8DAA+D,MAC/DC,yCAA0C,MAC1CC,oCAAqC,MACrCC,oCAAqC,MACrCC,kCAAmC,MACnCC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,sCAAuC,MACvCC,iCAAkC,MAClCC,wCAAyC,MACzCC,qCAAsC,MACtCC,kCAAmC,MACnCC,+BAAgC,MAChCC,gDAAiD,MACjDC,oDAAqD,MACrDC,gDAAiD,MACjDC,wCAAyC,MACzCC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,2CAA4C,MAC5CC,qCAAsC,MACtCC,4CAA6C,MAC7CC,0CAA2C,MAC3CC,wCAAyC,MACzCC,yCAA0C,MAC1CC,gDAAiD,MACjDC,uCAAwC,MACxCC,yCAA0C,MAC1CC,mDAAoD,MACpDC,6CAA8C,MAC9CC,yCAA0C,MAC1CC,+CAAgD,MAChDC,uCAAwC,MACxCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,0CAA2C,MAC3CC,oCAAqC,MACrCC,2CAA4C,MAC5CC,yCAA0C,MAC1CC,uCAAwC,MACxCC,wCAAyC,MACzCC,+CAAgD,MAChDC,sCAAuC,MACvCC,wCAAyC,MACzCC,kDAAmD,MACnDC,4CAA6C,MAC7CC,wCAAyC,MACzCC,8CAA+C,MAC/CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,+CAAgD,MAChDC,+CAAgD,MAChDC,yCAA0C,MAC1CC,gDAAiD,MACjDC,8CAA+C,MAC/CC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,oDAAqD,MACrDC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,uDAAwD,MACxDC,iDAAkD,MAClDC,6CAA8C,MAC9CC,mDAAoD,MACpDC,2BAA4B,MAC5BC,4BAA6B,MAC7BC,oCAAqC,MACrCC,8BAA+B,MAC/BC,qCAAsC,MACtCC,kCAAmC,MACnCC,uCAAwC,MACxCC,kCAAmC,MACnCC,uCAAwC,MACxCC,kCAAmC,MACnCC,uCAAwC,MACxCC,qBAAsB,MACtBC,oCAAqC,MACrCC,mCAAoC,MACpCC,6CAA8C,MAC9CC,mCAAoC,MACpCC,yCAA0C,MAC1CC,uCAAwC,MACxCC,2CAA4C,MAC5CC,kCAAmC,MACnCC,uCAAwC,MACxCC,mDAAoD,MACpDC,8CAA+C,MAC/CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8CAA+C,MAC/CC,+CAAgD,MAChDC,6BAA8B,MAC9BC,wCAAyC,MACzCC,iBAAkB,MAClBC,uCAAwC,MACxCC,4CAA6C,MAC7CC,oEAAqE,MACrEC,yEAA0E,MAC1EC,6CAA8C,MAC9CC,kDAAmD,MACnDC,6CAA8C,MAC9CC,+CAAgD,MAChDC,gDAAiD,MACjDC,gDAAiD,MACjDC,0CAA2C,MAC3CC,iDAAkD,MAClDC,+CAAgD,MAChDC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,qDAAsD,MACtDC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,wDAAyD,MACzDC,kDAAmD,MACnDC,8CAA+C,MAC/CC,oDAAqD,MACrDC,iDAAkD,MAClDC,sDAAuD,MACvDC,gFAAiF,MACjFC,qFAAsF,MACtFC,wCAAyC,MACzCC,6CAA8C,MAC9CC,6CAA8C,MAC9CC,kDAAmD,MACnDC,+CAAgD,MAChDC,oDAAqD,MACrDC,sDAAuD,MACvDC,2DAA4D,MAC5DC,mDAAoD,MACpDC,wDAAyD,MACzDC,yDAA0D,MAC1DC,8DAA+D,MAC/DC,yDAA0D,MAC1DC,8DAA+D,MAC/DC,sDAAuD,MACvDC,2DAA4D,MAC5DC,mDAAoD,MACpDC,wDAAyD,MACzDC,6DAA8D,MAC9DC,kEAAmE,MACnEC,0DAA2D,MAC3DC,+DAAgE,MAChEC,uDAAwD,MACxDC,4DAA6D,MAC7DC,gEAAiE,MACjEC,qEAAsE,MACtEC,6DAA8D,MAC9DC,kEAAmE,MACnEC,0DAA2D,MAC3DC,+DAAgE,MAChEC,gDAAiD,MACjDC,qDAAsD,MACtDC,iDAAkD,MAClDC,sDAAuD,MACvDC,uDAAwD,MACxDC,4DAA6D,MAC7DC,4CAA6C,MAC7CC,iDAAkD,MAClDC,6DAA8D,MAC9DC,kEAAmE,MACnEC,mDAAoD,MACpDC,wDAAyD,MACzDC,wCAAyC,MACzCC,6CAA8C,MAC9CC,sFAAuF,MACvFC,+EAAgF,MAChFC,yDAA0D,MAC1DC,uCAAwC,MACxCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,mCAAoC,MACpCC,qCAAsC,MACtCC,sCAAuC,MACvCC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,+CAAgD,MAChDC,+CAAgD,MAChDC,iDAAkD,MAClDC,kDAAmD,MACnDC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,+CAAgD,MAChDC,mDAAoD,MACpDC,qDAAsD,MACtDC,sDAAuD,MACvDC,sDAAuD,MACvDC,wDAAyD,MACzDC,yDAA0D,MAC1DC,gDAAiD,MACjDC,kDAAmD,MACnDC,mDAAoD,MACpDC,mDAAoD,MACpDC,qDAAsD,MACtDC,sDAAuD,MACvDC,sCAAuC,MACvCC,wCAAyC,MACzCC,yCAA0C,MAC1CC,uCAAwC,MACxCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,gDAAiD,MACjDC,kCAAmC,MACnCC,oCAAqC,MACrCC,qCAAsC,MACtCC,mDAAoD,MACpDC,qDAAsD,MACtDC,sDAAuD,MACvDC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,yBAA0B,MAC1BC,2BAA4B,MAC5BC,4BAA6B,MAC7BC,2BAA4B,MAC5BC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,+DAAgE,MAChEC,6CAA8C,MAC9CC,oCAAqC,MACrCC,sCAAuC,MACvCC,uCAAwC,MACxCC,uCAAwC,MACxCC,iCAAkC,MAClCC,wCAAyC,MACzCC,sCAAuC,MACvCC,oCAAqC,MACrCC,qCAAsC,MACtCC,4CAA6C,MAC7CC,mCAAoC,MACpCC,qCAAsC,MACtCC,+CAAgD,MAChDC,yCAA0C,MAC1CC,qCAAsC,MACtCC,2CAA4C,MAC5CC,wCAAyC,MACzCC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,8CAA+C,MAC/CC,wCAAyC,MACzCC,+CAAgD,MAChDC,6CAA8C,MAC9CC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,mDAAoD,MACpDC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,sDAAuD,MACvDC,gDAAiD,MACjDC,4CAA6C,MAC7CC,kDAAmD,MACnDC,+CAAgD,MAChDC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,8CAA+C,MAC/CC,wCAAyC,MACzCC,+CAAgD,MAChDC,6CAA8C,MAC9CC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,mDAAoD,MACpDC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,sDAAuD,MACvDC,gDAAiD,MACjDC,4CAA6C,MAC7CC,kDAAmD,MACnDC,+CAAgD,MAChDC,iEAAkE,MAClEC,2CAA4C,MAC5CC,yDAA0D,MAC1DC,gEAAiE,MACjEC,iDAAkD,MAClDC,wDAAyD,MACzDC,+DAAgE,MAChEC,gEAAiE,MACjEC,iEAAkE,MAClEC,mFAAoF,MACpFC,8DAA+D,MAC/DC,0CAA2C,MAC3CC,mCAAoC,MACpCC,mDAAoD,MACpDC,sDAAuD,MACvDC,+BAAgC,MAChCC,+CAAgD,MAChDC,kDAAmD,MACnDC,oCAAqC,MACrCC,oDAAqD,MACrDC,uDAAwD,MACxDC,+BAAgC,MAChCC,+CAAgD,MAChDC,kDAAmD,MACnDC,sCAAuC,MACvCC,sDAAuD,MACvDC,yDAA0D,MAC1DC,kCAAmC,MACnCC,kDAAmD,MACnDC,qDAAsD,MACtDC,uCAAwC,MACxCC,uDAAwD,MACxDC,0DAA2D,MAC3DC,kCAAmC,MACnCC,kDAAmD,MACnDC,qDAAsD,MACtDC,gCAAiC,MACjCC,mCAAoC,MACpCC,qCAAsC,MACtCC,uCAAwC,MACxCC,qDAAsD,MACtDC,+CAAgD,MAChDC,wDAAyD,MACzDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,sEAAuE,MACvEC,wEAAyE,MACzEC,yEAA0E,MAC1EC,+DAAgE,MAChEC,kEAAmE,MACnEC,oEAAqE,MACrEC,sEAAuE,MACvEC,oFAAqF,MACrFC,8EAA+E,MAC/EC,uFAAwF,MACxFC,yEAA0E,MAC1EC,0EAA2E,MAC3EC,4BAA6B,MAC7BC,+BAAgC,MAChCC,iCAAkC,MAClCC,mCAAoC,MACpCC,iDAAkD,MAClDC,2CAA4C,MAC5CC,oDAAqD,MACrDC,sCAAuC,MACvCC,uCAAwC,MACxCC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,wCAAyC,MACzCC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,6DAA8D,MAC9DC,uDAAwD,MACxDC,gEAAiE,MACjEC,kDAAmD,MACnDC,mDAAoD,MACpDC,+CAAgD,MAChDC,iDAAkD,MAClDC,kDAAmD,MACnDC,wCAAyC,MACzCC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,6DAA8D,MAC9DC,uDAAwD,MACxDC,gEAAiE,MACjEC,kDAAmD,MACnDC,mDAAoD,MACpDC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,+CAAgD,MAChDC,kDAAmD,MACnDC,oDAAqD,MACrDC,sDAAuD,MACvDC,oEAAqE,MACrEC,8DAA+D,MAC/DC,uEAAwE,MACxEC,yDAA0D,MAC1DC,0DAA2D,MAC3DC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8DAA+D,MAC/DC,wDAAyD,MACzDC,iEAAkE,MAClEC,mDAAoD,MACpDC,oDAAqD,MACrDC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,+BAAgC,MAChCC,kCAAmC,MACnCC,oCAAqC,MACrCC,sCAAuC,MACvCC,oDAAqD,MACrDC,8CAA+C,MAC/CC,uDAAwD,MACxDC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,gCAAiC,MACjCC,mCAAoC,MACpCC,qCAAsC,MACtCC,uCAAwC,MACxCC,qDAAsD,MACtDC,+CAAgD,MAChDC,wDAAyD,MACzDC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,sCAAuC,MACvCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,2DAA4D,MAC5DC,qDAAsD,MACtDC,8DAA+D,MAC/DC,gDAAiD,MACjDC,iDAAkD,MAClDC,2BAA4B,MAC5BC,8BAA+B,MAC/BC,gCAAiC,MACjCC,kCAAmC,MACnCC,gDAAiD,MACjDC,0CAA2C,MAC3CC,mDAAoD,MACpDC,qCAAsC,MACtCC,sCAAuC,MACvCC,sCAAuC,MACvCC,wCAAyC,MACzCC,yCAA0C,MAC1CC,yCAA0C,MAC1CC,mCAAoC,MACpCC,0CAA2C,MAC3CC,wCAAyC,MACzCC,sCAAuC,MACvCC,uCAAwC,MACxCC,+CAAgD,MAChDC,iDAAkD,MAClDC,kDAAmD,MACnDC,oDAAqD,MACrDC,4CAA6C,MAC7CC,uCAAwC,MACxCC,qCAAsC,MACtCC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,gEAAiE,MACjEC,0DAA2D,MAC3DC,mEAAoE,MACpEC,qDAAsD,MACtDC,sDAAuD,MACvDC,sCAAuC,MACvCC,sDAAuD,MACvDC,2CAA4C,MAC5CC,2DAA4D,MAC5DC,sCAAuC,MACvCC,sDAAuD,MACvDC,2CAA4C,MAC5CC,wDAAyD,MACzDC,8DAA+D,MAC/DC,+DAAgE,MAChEC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8DAA+D,MAC/DC,wDAAyD,MACzDC,iEAAkE,MAClEC,mDAAoD,MACpDC,oDAAqD,MACrDC,6CAA8C,MAC9CC,gDAAiD,MACjDC,kDAAmD,MACnDC,oDAAqD,MACrDC,kEAAmE,MACnEC,4DAA6D,MAC7DC,qEAAsE,MACtEC,uDAAwD,MACxDC,wDAAyD,MACzDC,yDAA0D,MAC1DC,qDAAsD,MACtDC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,iDAAkD,MAClDC,+DAAgE,MAChEC,yDAA0D,MAC1DC,kEAAmE,MACnEC,oDAAqD,MACrDC,qDAAsD,MACtDC,wCAAyC,MACzCC,8CAA+C,MAC/CC,iDAAkD,MAClDC,mDAAoD,MACpDC,qDAAsD,MACtDC,mEAAoE,MACpEC,6DAA8D,MAC9DC,sEAAuE,MACvEC,wDAAyD,MACzDC,yDAA0D,MAC1DC,gDAAiD,MACjDC,mDAAoD,MACpDC,qDAAsD,MACtDC,uDAAwD,MACxDC,qEAAsE,MACtEC,+DAAgE,MAChEC,wEAAyE,MACzEC,0DAA2D,MAC3DC,2DAA4D,MAC5DC,yDAA0D,MAC1DC,4DAA6D,MAC7DC,8DAA+D,MAC/DC,gEAAiE,MACjEC,8EAA+E,MAC/EC,2DAA4D,MAC5DC,8DAA+D,MAC/DC,gEAAiE,MACjEC,kEAAmE,MACnEC,0EAA2E,MAC3EC,mFAAoF,MACpFC,4DAA6D,MAC7DC,iEAAkE,MAClEC,yDAA0D,MAC1DC,uEAAwE,MACxEC,kDAAmD,MACnDC,6CAA8C,MAC9CC,6CAA8C,MAC9CC,2CAA4C,MAC5CC,kDAAmD,MACnDC,oDAAqD,MACrDC,qDAAsD,MACtDC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,gEAAiE,MACjEC,0DAA2D,MAC3DC,mEAAoE,MACpEC,qDAAsD,MACtDC,sDAAuD,MACvDC,sCAAuC,MACvCC,uCAAwC,MACxCC,+CAAgD,MAChDC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,kDAAmD,MACnDC,gEAAiE,MACjEC,0DAA2D,MAC3DC,mEAAoE,MACpEC,qDAAsD,MACtDC,sDAAuD,MACvDC,0CAA2C,MAC3CC,iDAAkD,MAClDC,0CAA2C,MAC3CC,kCAAmC,MACnCC,oCAAqC,MACrCC,qCAAsC,MACtCC,qCAAsC,MACtCC,+BAAgC,MAChCC,sCAAuC,MACvCC,oCAAqC,MACrCC,kCAAmC,MACnCC,mCAAoC,MACpCC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,wCAAyC,MACzCC,mCAAoC,MACpCC,iCAAkC,MAClCC,uCAAwC,MACxCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,4DAA6D,MAC7DC,sDAAuD,MACvDC,+DAAgE,MAChEC,iDAAkD,MAClDC,kDAAmD,MACnDC,kCAAmC,MACnCC,kDAAmD,MACnDC,uCAAwC,MACxCC,uDAAwD,MACxDC,kCAAmC,MACnCC,kDAAmD,MACnDC,uCAAwC,MACxCC,oDAAqD,MACrDC,0DAA2D,MAC3DC,2DAA4D,MAC5DC,qCAAsC,MACtCC,wCAAyC,MACzCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,0DAA2D,MAC3DC,oDAAqD,MACrDC,6DAA8D,MAC9DC,+CAAgD,MAChDC,gDAAiD,MACjDC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,gDAAiD,MACjDC,8DAA+D,MAC/DC,wDAAyD,MACzDC,iEAAkE,MAClEC,mDAAoD,MACpDC,oDAAqD,MACrDC,qDAAsD,MACtDC,iDAAkD,MAClDC,sCAAuC,MACvCC,yCAA0C,MAC1CC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,2DAA4D,MAC5DC,qDAAsD,MACtDC,8DAA+D,MAC/DC,gDAAiD,MACjDC,iDAAkD,MAClDC,oCAAqC,MACrCC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,+CAAgD,MAChDC,iDAAkD,MAClDC,+DAAgE,MAChEC,yDAA0D,MAC1DC,kEAAmE,MACnEC,oDAAqD,MACrDC,qDAAsD,MACtDC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,qDAAsD,MACtDC,wDAAyD,MACzDC,0DAA2D,MAC3DC,4DAA6D,MAC7DC,0EAA2E,MAC3EC,uDAAwD,MACxDC,0DAA2D,MAC3DC,4DAA6D,MAC7DC,8DAA+D,MAC/DC,sEAAuE,MACvEC,+EAAgF,MAChFC,wDAAyD,MACzDC,6DAA8D,MAC9DC,qDAAsD,MACtDC,mEAAoE,MACpEC,8CAA+C,MAC/CC,yCAA0C,MAC1CC,yCAA0C,MAC1CC,uCAAwC,MACxCC,8CAA+C,MAC/CC,gDAAiD,MACjDC,iDAAkD,MAClDC,uCAAwC,MACxCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,4DAA6D,MAC7DC,sDAAuD,MACvDC,+DAAgE,MAChEC,iDAAkD,MAClDC,kDAAmD,MACnDC,kCAAmC,MACnCC,mCAAoC,MACpCC,2CAA4C,MAC5CC,uCAAwC,MACxCC,0CAA2C,MAC3CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,4DAA6D,MAC7DC,sDAAuD,MACvDC,+DAAgE,MAChEC,iDAAkD,MAClDC,kDAAmD,MACnDC,sCAAuC,MACvCC,6CAA8C,MAC9CC,sCAAuC,MACvCC,4CAA6C,MAC7CC,+CAAgD,MAChDC,iDAAkD,MAClDC,mDAAoD,MACpDC,iEAAkE,MAClEC,2DAA4D,MAC5DC,oEAAqE,MACrEC,sDAAuD,MACvDC,uDAAwD,MACxDC,kCAAmC,MACnCC,qCAAsC,MACtCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,uDAAwD,MACxDC,iDAAkD,MAClDC,0DAA2D,MAC3DC,4CAA6C,MAC7CC,6CAA8C,OAEnC19P,GACX29P,8BAA+B,KAC/BC,gCAAiC,KACjCC,+BAAgC,KAChCC,6BAA8B,KAC9BC,8BAA+B,KAC/BC,iCAAkC,KAClCC,sCAAuC,KACvCC,oCAAqC,KACrCC,qBAAsB,KACtBC,+BAAgC,KAChCC,qCAAsC,KACtCC,8CAA+C,KAC/CC,oCAAqC,KACrCC,sBAAuB,KACvBC,gCAAiC,KACjCC,2BAA4B,KAC5BC,qBAAsB,KACtBC,sBAAuB,KACvBC,yBAA0B,KAC1BC,yBAA0B,KAC1BC,2BAA4B,KAC5BC,4BAA6B,KAC7BC,+BAAgC,KAChCC,4BAA6B,KAC7BC,oCAAqC,KACrCC,qCAAsC,KACtCC,wCAAyC,KACzCC,yCAA0C,KAC1CC,qCAAsC,KACtCC,0BAA2B,KAC3BC,2BAA4B,KAC5BC,8BAA+B,KAC/BC,+BAAgC,KAChCC,2BAA4B,KAC5BC,0CAA2C,KAC3CC,+CAAgD,KAChDC,6CAA8C,KAC9CC,sBAAuB,KACvBC,uBAAwB,KACxBC,0BAA2B,KAC3BC,2BAA4B,KAC5BC,uBAAwB,KACxBC,sCAAuC,KACvCC,2CAA4C,KAC5CC,yCAA0C,KAC1CC,+BAAgC,KAChCC,gCAAiC,KACjCC,mCAAoC,KACpCC,yCAA0C,KAC1CC,oCAAqC,KACrCC,gCAAiC,KACjCC,+CAAgD,KAChDC,oDAAqD,KACrDC,kDAAmD,KACnDC,+BAAgC,KAChCC,gCAAiC,KACjCC,mCAAoC,KACpCC,yCAA0C,KAC1CC,oCAAqC,KACrCC,gCAAiC,KACjCC,+CAAgD,KAChDC,oDAAqD,KACrDC,kDAAmD,KACnDC,sCAAuC,KACvCC,uCAAwC,KACxCC,0CAA2C,KAC3CC,gDAAiD,KACjDC,2CAA4C,KAC5CC,uCAAwC,KACxCC,sDAAuD,KACvDC,2DAA4D,KAC5DC,yDAA0D,KAC1DC,mCAAoC,KACpCC,oCAAqC,KACrCC,uCAAwC,KACxCC,6CAA8C,KAC9CC,wCAAyC,KACzCC,oCAAqC,KACrCC,mDAAoD,KACpDC,wDAAyD,KACzDC,sDAAuD,KACvDC,kCAAmC,KACnCC,mCAAoC,KACpCC,sCAAuC,KACvCC,4CAA6C,KAC7CC,uCAAwC,KACxCC,mCAAoC,KACpCC,kDAAmD,MACnDC,uDAAwD,MACxDC,qDAAsD,MACtDC,kCAAmC,MACnCC,mCAAoC,MACpCC,sCAAuC,MACvCC,4CAA6C,MAC7CC,uCAAwC,MACxCC,mCAAoC,MACpCC,kDAAmD,MACnDC,uDAAwD,MACxDC,qDAAsD,MACtDC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,mDAAoD,MACpDC,8CAA+C,MAC/CC,0CAA2C,MAC3CC,yDAA0D,MAC1DC,8DAA+D,MAC/DC,4DAA6D,MAC7DC,sCAAuC,MACvCC,uCAAwC,MACxCC,0CAA2C,MAC3CC,gDAAiD,MACjDC,2CAA4C,MAC5CC,uCAAwC,MACxCC,sDAAuD,MACvDC,2DAA4D,MAC5DC,yDAA0D,MAC1DC,yBAA0B,MAC1BC,0BAA2B,MAC3BC,6BAA8B,MAC9BC,mCAAoC,MACpCC,8BAA+B,MAC/BC,0BAA2B,MAC3BC,yCAA0C,MAC1CC,8CAA+C,MAC/CC,4CAA6C,MAC7CC,0BAA2B,MAC3BC,2BAA4B,MAC5BC,8BAA+B,MAC/BC,oCAAqC,MACrCC,+BAAgC,MAChCC,2BAA4B,MAC5BC,0CAA2C,MAC3CC,+CAAgD,MAChDC,6CAA8C,MAC9CC,qBAAsB,MACtBC,sBAAuB,MACvBC,yBAA0B,MAC1BC,+BAAgC,MAChCC,0BAA2B,MAC3BC,sBAAuB,MACvBC,qCAAsC,MACtCC,0CAA2C,MAC3CC,wCAAyC,MACzCC,6BAA8B,MAC9BC,yBAA0B,MAC1BC,4BAA6B,MAC7BC,cAAe,MACfC,eAAgB,MAChBC,cAAe,MACfC,eAAgB,MAChBC,qBAAsB,MACtBC,qBAAsB,MACtBC,0BAA2B,MAC3BC,2BAA4B,MAC5BC,0BAA2B,MAC3BC,2BAA4B,MAC5BC,iCAAkC,MAClCC,iCAAkC,MAClCC,qCAAsC,MACtCC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,yCAA0C,MAC1CC,0CAA2C,MAC3CC,gDAAiD,MACjDC,gDAAiD,MACjDC,oDAAqD,MACrDC,kEAAmE,MACnEC,mEAAoE,MACpEC,kEAAmE,MACnEC,mEAAoE,MACpEC,yEAA0E,MAC1EC,yEAA0E,MAC1EC,6EAA8E,MAC9EC,eAAgB,MAChBC,gBAAiB,MACjBC,eAAgB,MAChBC,gBAAiB,MACjBC,sBAAuB,MACvBC,sBAAuB,MACvBC,iCAAkC,MAClCC,gCAAiC,MACjCC,oCAAqC,MACrCC,0CAA2C,MAC3CC,qCAAsC,MACtCC,iCAAkC,MAClCC,gDAAiD,MACjDC,qDAAsD,MACtDC,mDAAoD,MACpDC,wBAAyB,MACzBC,yBAA0B,MAC1BC,yBAA0B,MAC1BC,4BAA6B,MAC7BC,mBAAoB,MACpBC,oBAAqB,MACrBC,mBAAoB,MACpBC,oBAAqB,MACrBC,0BAA2B,MAC3BC,0BAA2B,MAC3BC,4BAA6B,MAC7BC,6BAA8B,MAC9BC,6BAA8B,MAC9BC,gCAAiC,MACjCC,4BAA6B,MAC7BC,0CAA2C,MAC3CC,6EAA8E,MAC9EC,8EAA+E,MAC/EC,6EAA8E,MAC9EC,8EAA+E,MAC/EC,oFAAqF,MACrFC,oFAAqF,MACrFC,sFAAuF,MACvFC,uFAAwF,MACxFC,uFAAwF,MACxFC,0FAA2F,MAC3FC,6CAA8C,MAC9CC,qCAAsC,MACtCC,yCAA0C,MAC1CC,iCAAkC,MAClCC,+BAAgC,MAChCC,kCAAmC,MACnCC,8BAA+B,MAC/BC,iCAAkC,MAClCC,0BAA2B,MAC3BC,wCAAyC,MACzCC,oCAAqC,MACrCC,sBAAuB,MACvBC,kBAAmB,MACnBC,qBAAsB,MACtBC,oCAAqC,MACrCC,gCAAiC,MACjCC,mCAAoC,MACpCC,gCAAiC,MACjCC,4BAA6B,MAC7BC,sCAAuC,MACvCC,+CAAgD,MAChDC,qCAAsC,MACtCC,iCAAkC,MAClCC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,6CAA8C,MAC9CC,0CAA2C,MAC3CC,iDAAkD,MAClDC,8CAA+C,MAC/CC,oDAAqD,KACrDC,iDAAkD,MAClDC,oCAAqC,MACrCC,qCAAsC,MACtCC,2CAA4C,MAC5CC,gCAAiC,MACjCC,uCAAwC,MACxCC,sCAAuC,MACvCC,0CAA2C,MAC3CC,gDAAiD,MACjDC,iDAAkD,MAClDC,2CAA4C,MAC5CC,uCAAwC,MACxCC,sDAAuD,MACvDC,2DAA4D,MAC5DC,yDAA0D,MAC1DC,0BAA2B,MAC3BC,qBAAsB,MACtBC,qBAAsB,MACtBC,qBAAsB,MACtBC,gEAAiE,MACjEC,2DAA4D,MAC5DC,2DAA4D,MAC5DC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,4CAA6C,MAC7CC,6CAA8C,MAC9CC,mDAAoD,MACpDC,mDAAoD,MACpDC,kCAAmC,MACnCC,6BAA8B,MAC9BC,yCAA0C,MAC1CC,6BAA8B,MAC9BC,oCAAqC,MACrCC,qCAAsC,MACtCC,oCAAqC,MACrCC,qCAAsC,MACtCC,2CAA4C,MAC5CC,2CAA4C,MAC5CC,6CAA8C,MAC9CC,8CAA+C,MAC/CC,8CAA+C,MAC/CC,iDAAkD,MAClDC,sCAAuC,MACvCC,kEAAmE,MACnEC,mEAAoE,MACpEC,kEAAmE,MACnEC,mEAAoE,MACpEC,yEAA0E,MAC1EC,yEAA0E,MAC1EC,2EAA4E,MAC5EC,4EAA6E,MAC7EC,4EAA6E,MAC7EC,+EAAgF,MAChFC,4DAA6D,MAC7DC,6DAA8D,MAC9DC,4DAA6D,MAC7DC,6DAA8D,MAC9DC,mEAAoE,MACpEC,mEAAoE,MACpEC,qEAAsE,MACtEC,sEAAuE,MACvEC,sEAAuE,MACvEC,yEAA0E,MAC1EC,gEAAiE,MACjEC,iEAAkE,MAClEC,gEAAiE,MACjEC,iEAAkE,MAClEC,uEAAwE,MACxEC,uEAAwE,MACxEC,yEAA0E,MAC1EC,0EAA2E,MAC3EC,0EAA2E,MAC3EC,6EAA8E,MAC9EC,sEAAuE,MACvEC,uEAAwE,MACxEC,sEAAuE,MACvEC,uEAAwE,MACxEC,6EAA8E,MAC9EC,6EAA8E,MAC9EC,+EAAgF,MAChFC,gFAAiF,MACjFC,gFAAiF,MACjFC,mFAAoF,MACpFC,iFAAkF,MAClFC,kFAAmF,MACnFC,iFAAkF,MAClFC,kFAAmF,MACnFC,wFAAyF,MACzFC,wFAAyF,MACzFC,0FAA2F,MAC3FC,2FAA4F,MAC5FC,2FAA4F,MAC5FC,8FAA+F,MAC/FC,2EAA4E,MAC5EC,4EAA6E,MAC7EC,2EAA4E,MAC5EC,4EAA6E,KAC7EC,kFAAmF,MACnFC,kFAAmF,MACnFC,oFAAqF,MACrFC,qFAAsF,MACtFC,qFAAsF,MACtFC,wFAAyF,MACzFC,+EAAgF,MAChFC,gFAAiF,MACjFC,+EAAgF,MAChFC,gFAAiF,MACjFC,sFAAuF,MACvFC,sFAAuF,MACvFC,wFAAyF,MACzFC,yFAA0F,MAC1FC,yFAA0F,MAC1FC,4FAA6F,MAC7FC,uEAAwE,MACxEC,wEAAyE,MACzEC,uEAAwE,MACxEC,wEAAyE,MACzEC,8EAA+E,MAC/EC,8EAA+E,MAC/EC,gFAAiF,MACjFC,iFAAkF,MAClFC,iFAAkF,MAClFC,oFAAqF,MACrFC,2EAA4E,MAC5EC,4EAA6E,MAC7EC,2EAA4E,MAC5EC,4EAA6E,MAC7EC,kFAAmF,MACnFC,kFAAmF,MACnFC,oFAAqF,MACrFC,qFAAsF,MACtFC,qFAAsF,MACtFC,wFAAyF,MACzFC,6CAA8C,MAC9CC,gDAAiD,MACjDC,qBAAsB,MACtBC,wBAAyB,MACzBC,sBAAuB,MACvBC,yBAA0B,MAC1BC,oCAAqC,MACrCC,uCAAwC,MACxCC,4CAA6C,MAC7CC,+CAAgD,MAChDC,mCAAoC,MACpCC,sCAAuC,MACvCC,mCAAoC,MACpCC,sCAAuC,MACvCC,qCAAsC,MACtCC,wCAAyC,MACzCC,wCAAyC,MACzCC,2CAA4C,MAC5CC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,8CAA+C,MAC/CC,+CAAgD,MAChDC,yCAA0C,MAC1CC,0DAA2D,MAC3DC,8BAA+B,MAC/BC,+BAAgC,MAChCC,yBAA0B,MAC1BC,mCAAoC,MACpCC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,iDAAkD,MAClDC,iDAAkD,MAClDC,qDAAsD,MACtDC,oBAAqB,MACrBC,uBAAwB,KACxBC,kBAAmB,MACnBC,qBAAsB,MACtBC,mCAAoC,MACpCC,sCAAuC,MACvCC,gDAAiD,MACjDC,mDAAoD,MACpDC,6CAA8C,MAC9CC,gDAAiD,MACjDC,wBAAyB,MACzBC,2BAA4B,MAC5BC,qBAAsB,MACtBC,wBAAyB,MACzBC,yBAA0B,MAC1BC,4BAA6B,MAC7BC,sBAAuB,MACvBC,yBAA0B,MAC1BC,uCAAwC,MACxCC,0CAA2C,MAC3CC,oCAAqC,MACrCC,uCAAwC,MACxCC,+CAAgD,MAChDC,kDAAmD,MACnDC,4CAA6C,MAC7CC,+CAAgD,MAChDC,sCAAuC,MACvCC,yCAA0C,MAC1CC,mCAAoC,MACpCC,sCAAuC,MACvCC,sCAAuC,MACvCC,yCAA0C,MAC1CC,mCAAoC,MACpCC,sCAAuC,MACvCC,sCAAuC,MACvCC,yCAA0C,MAC1CC,mCAAoC,MACpCC,sCAAuC,MACvCC,wCAAyC,MACzCC,2CAA4C,MAC5CC,qCAAsC,MACtCC,wCAAyC,MACzCC,2CAA4C,MAC5CC,8CAA+C,MAC/CC,wCAAyC,MACzCC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,+CAAgD,MAChDC,yCAA0C,MAC1CC,4CAA6C,MAC7CC,4CAA6C,MAC7CC,+CAAgD,MAChDC,qCAAsC,MACtCC,wCAAyC,MACzCC,wCAAyC,MACzCC,2CAA4C,MAC5CC,yDAA0D,MAC1DC,oDAAqD,MACrDC,oDAAqD,MACrDC,qCAAsC,MACtCC,sCAAuC,MACvCC,qCAAsC,MACtCC,sCAAuC,MACvCC,4CAA6C,MAC7CC,4CAA6C,MAC7CC,2BAA4B,MAC5BC,sBAAuB,MACvBC,kCAAmC,MACnCC,sBAAuB,MACvBC,2BAA4B,MAC5BC,4BAA6B,MAC7BC,0DAA2D,MAC3DC,yDAA0D,MAC1DC,6DAA8D,MAC9DC,8DAA+D,MAC/DC,0DAA2D,MAC3DC,yEAA0E,MAC1EC,8EAA+E,MAC/EC,4EAA6E,MAC7EC,0DAA2D,MAC3DC,2DAA4D,MAC5DC,uBAAwB,MACxBC,wBAAyB,MACzBC,gCAAiC,MACjCC,iCAAkC,MAClCC,mCAAoC,MACpCC,oCAAqC,MACrCC,mCAAoC,MACpCC,oCAAqC,MACrCC,gCAAiC,MACjCC,iCAAkC,MAClCC,uCAAwC,MACxCC,wCAAyC,MACzCC,oCAAqC,MACrCC,qCAAsC,MACtCC,0CAA2C,MAC3CC,2CAA4C,MAC5CC,uCAAwC,MACxCC,wCAAyC,MACzCC,0BAA2B,MAC3BC,2BAA4B,MAC5BC,2BAA4B,MAC5BC,4BAA6B,MAC7BC,iCAAkC,MAClCC,kCAAmC,MACnCC,sBAAuB,MACvBC,uBAAwB,MACxBC,uCAAwC,MACxCC,wCAAyC,MACzCC,6BAA8B,MAC9BC,4BAA6B,MAC7BC,gCAAiC,MACjCC,sCAAuC,MACvCC,uCAAwC,MACxCC,iCAAkC,MAClCC,6BAA8B,MAC9BC,4CAA6C,MAC7CC,iDAAkD,MAClDC,+CAAgD,MAChDC,6BAA8B,MAC9BC,8BAA+B,MAC/BC,uEAAwE,MACxEC,gEAAiE,MACjEC,8BAA+B,MAC/BC,qCAAsC,MACtCC,kCAAmC,MACnCC,6DAA8D,MAC9DC,oEAAqE,MACrEC,iEAAkE,MAClEC,0BAA2B,MAC3BC,iCAAkC,MAClCC,8BAA+B,MAC/BC,mCAAoC,MACpCC,0CAA2C,MAC3CC,uCAAwC,MACxCC,sCAAuC,MACvCC,6CAA8C,MAC9CC,0CAA2C,MAC3CC,6CAA8C,MAC9CC,0CAA2C,MAC3CC,mCAAoC,MACpCC,0CAA2C,MAC3CC,uCAAwC,MACxCC,0CAA2C,MAC3CC,iDAAkD,MAClDC,8CAA+C,MAC/CC,6CAA8C,MAC9CC,oDAAqD,MACrDC,iDAAkD,MAClDC,uCAAwC,MACxCC,8CAA+C,MAC/CC,2CAA4C,MAC5CC,0CAA2C,MAC3CC,iDAAkD,MAClDC,8CAA+C,MAC/CC,6BAA8B,MAC9BC,oCAAqC,MACrCC,iCAAkC,MAClCC,8BAA+B,MAC/BC,qCAAsC,MACtCC,kCAAmC,MACnCC,oCAAqC,MACrCC,2CAA4C,MAC5CC,wCAAyC,MACzCC,yBAA0B,MAC1BC,gCAAiC,MACjCC,6BAA8B,MAC9BC,0CAA2C,MAC3CC,iDAAkD,MAClDC,8CAA+C,MAC/CC,gCAAiC,MACjCC,uCAAwC,MACxCC,oCAAqC,MACrCC,gDAAiD,MACjDC,gDAAiD,MACjDC,8BAA+B,MAC/BC,oEAAqE,MACrEC,oEAAqE,MACrEC,yBAA0B,MAC1BC,wDAAyD,MACzDC,qBAAsB,MACtBC,8BAA+B,MAC/BC,iCAAkC,MAClCC,sCAAuC,MACvCC,iCAAkC,MAClCC,8BAA+B,MAC/BC,qCAAsC,MACtCC,wCAAyC,MACzCC,kCAAmC,MACnCC,qCAAsC,MACtCC,wBAAyB,MACzBC,yBAA0B,MAC1BC,+BAAgC,MAChCC,oBAAqB,MACrBC,sCAAuC,MACvCC,qCAAsC,MACtCC,yCAA0C,MAC1CC,+CAAgD,MAChDC,gDAAiD,MACjDC,0CAA2C,MAC3CC,sCAAuC,MACvCC,wDAAyD,MACzDC,qDAAsD,MACtDC,0DAA2D,MAC3DC,sCAAuC,MACvCC,uCAAwC,MACxCC,yCAA0C,MAC1CC,gDAAiD,MACjDC,6CAA8C,MAC9CC,oCAAqC,MACrCC,kCAAmC,MACnCC,iCAAkC,MAClCC,qCAAsC,MACtCC,2CAA4C,MAC5CC,4CAA6C,MAC7CC,sCAAuC,MACvCC,kCAAmC,MACnCC,oDAAqD,MACrDC,iDAAkD,MAClDC,sDAAuD,MACvDC,kCAAmC,MACnCC,mCAAoC,MACpCC,qCAAsC,MACtCC,4CAA6C,MAC7CC,yCAA0C,MAC1CC,gCAAiC,MACjCC,qCAAsC,MACtCC,2BAA4B,MAC5BC,uBAAwB,4GCt1PnB92P,EAGLr5B,YAAaC,GACZA,EAAUA,MACVL,KAAKw6B,SAAWn6B,EAAgB,SAAIA,EAAQm6B,YAK7Cp6B,OAAQuH,GACPM,EAAA,EAAejI,KAAKw6B,SAAS7yB,GAK9BvH,OAAQsI,GACP1I,KAAKw6B,SAAWvyB,EAAA,EAAeS,EAAI8nR,EAAA,GAKpCpwR,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAI8wB,GAEVz5B,KAAKw6B,WAAY7xB,EAAO6xB,SAAWvyB,EAAA,EAAqBjI,KAAKw6B,WAC1D7xB,GAgBT3Y,OAAAoZ,EAAA,EAAApZ,CAA0B,eAAeypC,EAAczpC,OAAAqZ,EAAA,EAAArZ,CAAmB,IAAI,8MCpD9E,SAAAygS,EAAenhS,EAAGohS,GACd,OAAQ,kBAAoBphS,EAAE8J,SAAS,KAAKkH,QAAQowR,GAIxD,SAAAv+R,EAAsBC,EAAKC,GACvB,OAAOb,KAAKc,MAAMd,KAAKC,UAAYY,EAAMD,EAAM,IAAMA,EAGzD,IAAIu+R,EAAY,+EAUV,SAAAC,EAAsBvyR,GACxB,OAAOsyR,EAAUz+R,KAAKmM,GAKnB,IAAI+1B,EAAY,uCAEjB,SAAAy8P,IAGE,IADA,IAAIl1R,EAAI,IAAIm1R,EAAA,EAAW,IACdxhS,EAAI,EAAGA,EAAI,GAAIA,IACpBqM,EAAE/J,SAASO,EAAa,EAAG,MAI/B,OAFAwJ,EAAEo1R,SACUC,EAAWr1R,GAIzB,SAAAs1R,EAAqB5yR,EAAe1M,GAElC,IAAKi/R,EAAYvyR,GACb,MAAM,IAAIlF,MAAM,oBAAsB8L,KAAKC,UAAU7G,GAAO,MAOhE,SAAsB6yR,GAClB,IAAIr3Q,EAAMvqB,EAAEyB,EAAImgS,EAAO57R,OACvB,IAAKhG,EAAE,EAAEA,EAAEyB,EAAEzB,IACTuqB,EAAQq3Q,EAAO5hS,GACfqC,EAAOoC,UAAUiC,SAASqI,EAAKiC,OAAOuZ,EAAO,GAAI,KAoBzDs3Q,EAAc,IAhBd,SAAsBD,GAClB,IAAIr3Q,EAAMvqB,EAAEyB,EAAImgS,EAAO57R,OACvB,IAAKhG,EAAE,EAAEA,EAAEyB,EAAEzB,IACTuqB,EAAQq3Q,EAAO5hS,GACfqC,EAAOiB,UAAUoD,SAASqI,EAAKiC,OAAOuZ,EAAO,GAAI,KAazDu3Q,EAAc,EAAG,KATjB,SAAqBF,GACjB,IAAIr3Q,EAAMvqB,EAAEyB,EAAImgS,EAAO57R,OACvB,IAAKhG,EAAE,EAAEA,EAAEyB,EAAEzB,IACTuqB,EAAQq3Q,EAAO5hS,GACfqC,EAAOC,SAASoE,SAASqI,EAAKiC,OAAOuZ,EAAO,GAAI,KAMxDw3Q,EAAa,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,GAAI,KAIvC,SAAAL,EAAqBr/R,GAMvB,SAAA2/R,IACI,OAAOb,EAAM9+R,EAAOmB,YAAa,GAGrC,SAAAy+R,IACI,OAAOd,EAAM9+R,EAAOG,WAAY,GAGpC,SAAA0/R,EAAmB52Q,EAAM81Q,GAErB,IADA,IAAIr2Q,EAAS,GACJ/qB,EAAI,EAAGA,EAAIohS,EAAIphS,IACpB+qB,GAAUO,IAEd,OAAOP,EAeX,OA/BWo2Q,EAAM9+R,EAAOsC,YAAa,GA6BlB,IARPq9R,IAQqB,IANrBA,IAMmC,IAJjCE,EAAUD,EAAY,GAI2B,IAFjDC,EAAUD,EAAY,IAIxB1pR,4JCjGdy4B,EASLlgC,YAAaC,GACZA,EAAUA,MACVL,KAAKyxR,eAAiBpxR,EAAsB,eAAIA,EAAQoxR,eAAe,KACvEzxR,KAAK0xR,WAAarxR,EAAkB,WAAIA,EAAQqxR,WAAW,KAC3D1xR,KAAK2xR,gBAAkBtxR,EAAuB,gBAAIA,EAAQsxR,gBAAgB,IAAIC,EAAA,EAC9E5xR,KAAK6xR,gBAAkBxxR,EAAuB,gBAAIA,EAAQwxR,gBAAgB,KAC1E7xR,KAAK8xR,iBAAmBzxR,EAAwB,iBAAIA,EAAQyxR,iBAAiB,KAC7E9xR,KAAK+xR,oBAAsB1xR,EAA2B,oBAAIA,EAAQ0xR,oBAAoB,KACtF/xR,KAAKgyR,cAAgB3xR,EAAqB,cAAIA,EAAQ2xR,iBAKvD5xR,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKyxR,eAAe9pR,GACpCc,EAAA,GAAgBzI,KAAK0xR,WAAW/pR,GAChC3H,KAAK2xR,gBAAgB1uR,OAAO0E,GAC5B3X,OAAAiiS,EAAA,EAAAjiS,CAAsBgQ,KAAK6xR,gBAAgBlqR,GAC3Cc,EAAA,GAAgBzI,KAAK8xR,iBAAiBnqR,GACtCc,EAAA,GAAgBzI,KAAK+xR,oBAAoBpqR,GACzCc,EAAA,EAAezI,KAAKgyR,cAAcrqR,EAAIc,EAAA,IAKvCrI,OAAQsI,GACP1I,KAAKyxR,eAAiBhpR,EAAA,EAAgBC,GACtC1I,KAAK0xR,WAAajpR,EAAA,EAAgBC,GAClC1I,KAAK2xR,gBAAgBvuR,OAAOsF,GAC5B1I,KAAK6xR,gBAAkB7hS,OAAAiiS,EAAA,EAAAjiS,CAAsB0Y,GAC7C1I,KAAK8xR,iBAAmBrpR,EAAA,EAAgBC,GACxC1I,KAAK+xR,oBAAsBtpR,EAAA,EAAgBC,GAC3C1I,KAAKgyR,cAAgBvpR,EAAA,EAAeC,EAAID,EAAA,GAKzCrI,MAAOuI,GAWN,OAVIA,IACHA,EAAS,IAAI23B,GAEd33B,EAAO8oR,eAAiBzxR,KAAKyxR,eAC7B9oR,EAAO+oR,WAAa1xR,KAAK0xR,WACrB1xR,KAAK2xR,kBAAmBhpR,EAAOgpR,gBAAkB3xR,KAAK2xR,gBAAgBxoR,SAC1ER,EAAOkpR,gBAAkB7xR,KAAK6xR,gBAC9BlpR,EAAOmpR,iBAAmB9xR,KAAK8xR,iBAC/BnpR,EAAOopR,oBAAsB/xR,KAAK+xR,oBAClCppR,EAAOqpR,cAAgBvpR,EAAA,EAAczI,KAAKgyR,eACnCrpR,GAKH,SAAAupR,EAAwCxpR,GAC5C,IAAIsE,EAAM,IAAIszB,EAEb,OADAtzB,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAmiS,EAAA,EAAAniS,CAA0B,yBAAyBswC,EAAwBtwC,OAAAoiS,EAAA,EAAApiS,CAAmB,IAAI,oFCvF5FqiS,EAyBNjyR,kBAEI,IAAIzO,EAAS,IAAI2gS,EAAA,EAEjB,OADAtyR,KAAKiD,OAAOtR,GACLA,EAAO2D,OAOlB8K,WACI,OAAOJ,KAAKw0B,SAUhBp0B,UAEI,OAAO,EAKXA,SACI,OAAO6E,KAAKC,UAAUlF,0IC1DdyqC,UAYN,SAAA8nP,EAA6BllR,EAAqB1F,GACvDA,EAAI5T,UAAUsZ,GAIT,SAAAmlR,EAA6B9pR,GAClC,OAAOA,EAAIzU,aAlBZ,SAAYw2C,GACTA,IAAA,qBACDA,IAAA,mBACAA,IAAA,qCACAA,IAAA,yBACAA,IAAA,uBACAA,IAAA,eACAA,IAAA,2CACAA,IAAA,qBARF,CAAYA,WAwBZz6C,OAAA2sB,EAAA,EAAA3sB,CAAoB,cAAcy6C,EAAY8nP,EAAmBC,EAAmB,wDCxBpFC,EAAA,yBACAC,EAAA,oBACAC,EAAA,6BACAC,EAAA,iBA6BA,IAAAC,EAVA,SAAAtiS,GACA,IAAAP,OAAAmU,EAAA,EAAAnU,CAAAO,GACA,SAIA,IAAAuiS,EAAA9iS,OAAA+iS,EAAA,EAAA/iS,CAAAO,GACA,OAAAuiS,GAAAJ,GAAAI,GAAAH,GAAAG,GAAAL,GAAAK,GAAAF,WCDAtvR,EAAA,EAJA,SAAA/S,GACA,aAAAA,GAAAP,OAAAgjS,EAAA,EAAAhjS,CAAAO,EAAA+E,UAAAu9R,EAAAtiS,sCClBY0iS,WAAZ,SAAYA,GACRA,IAAA,yBACAA,IAAA,uBACAA,IAAA,6BACAA,IAAA,6BAJJ,CAAYA,uECMNC,EAML9yR,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKg9B,YAAc38B,EAAmB,YAAIA,EAAQ28B,YAAY,KAC9Dh9B,KAAKmzR,UAAY9yR,EAAiB,UAAIA,EAAQ8yR,aAC9CnzR,KAAKozR,YAAc/yR,EAAmB,YAAIA,EAAQ+yR,eAKnDhzR,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKg9B,YAAYr1B,GACjCuG,EAAA,EAAelO,KAAKmzR,UAAUxrR,EAAIuG,EAAA,IAClCA,EAAA,EAAelO,KAAKozR,YAAYzrR,EAAIuG,EAAA,IAKrC9N,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKg9B,YAAc9uB,EAAA,EAAgBxF,GACnC1I,KAAKmzR,UAAYjlR,EAAA,EAAexF,EAAIwF,EAAA,GACpClO,KAAKozR,YAAcllR,EAAA,EAAexF,EAAIwF,EAAA,GAKvC9N,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIuqR,GAEVlzR,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOq0B,YAAch9B,KAAKg9B,YAC1Br0B,EAAOwqR,UAAYjlR,EAAA,EAAclO,KAAKmzR,WACtCxqR,EAAOyqR,YAAcllR,EAAA,EAAclO,KAAKozR,aACjCzqR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,sBAAsBkjS,EAAqBljS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qBC1DtFqjS,EAILjzR,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAKszR,UAAYjzR,EAAiB,UAAIA,EAAQizR,aAK/ClzR,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAKszR,UAAU3rR,GAK/BvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAKszR,UAAYplR,EAAA,EAAexF,EAAI83B,EAAA,GAKrCpgC,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI0qR,GAEVrzR,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAKszR,YAAa3qR,EAAO2qR,UAAYplR,EAAA,EAAqBlO,KAAKszR,YAC5D3qR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,uBAAuBqjS,EAAsBrjS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,yVClC1F04C,EAA6B6qP,EAAA,QAE3BC,UAAiCC,EAAA,aAYvCrzR,YAAYszR,EAAmC7kR,EAA8B8kR,GACzE9yR,QAKAb,KAAK4zR,eAAiB,IAAIC,EAAA,EAAyBhlR,GACnD7O,KAAK8zR,sBAAwB,IAAIC,EAAA,EAAqBJ,GACtD3zR,KAAKg0R,cAAgBN,EACrB1zR,KAAKi0R,gBAAkBV,EAAA,EAAoCW,UAC3DlkS,OAAAmkS,EAAA,EAAAnkS,CAAmD,OAA5CgQ,KAAK8zR,sBAAsBrjR,aAAqC,uCAG3EkjR,2BACI,OAAO3zR,KAAK8zR,sBAGhBjlR,oBACI,OAAO7O,KAAK4zR,eAGhBh3R,aACI,OAAOoD,KAAK4zR,eAAeh3R,OAG/BmS,qBACI,OAAO/O,KAAKi0R,gBAGhBzkR,sBACI,OAAOxP,KAAKo0R,iBAITh0R,qBAAqB7P,GAMvB,IACEyP,KAAKqe,KAAK,UAAW9tB,GAEvB,MAAMylC,GACJr3B,QAAQC,IAAI,uFAAuFo3B,GACnGr3B,QAAQC,IAAI,+DAITwB,0BAaN,GAXApQ,OAAAmkS,EAAA,EAAAnkS,CAA6C,YAAtCgQ,KAAKg0R,cAAc1lR,gBAC1Bte,OAAAmkS,EAAA,EAAAnkS,CAAiE,OAA1DgQ,KAAK8zR,sBAAsBrjR,aAAqC,uCACvEzQ,KAAK8zR,sBAAsBrjR,aAAezQ,KAAKg0R,cAAcK,mBAC7DrkS,OAAAmkS,EAAA,EAAAnkS,CAAOgQ,KAAK8zR,sBAAsBrjR,aAAe,GAAiD,OAA5CzQ,KAAK8zR,sBAAsBrjR,cAQ7EzQ,KAAK4zR,eAAeU,cAAgBC,EAAA,EAAaC,eAiBjD,GAHAx0R,KAAK8zR,sBAAsBW,OAASz0R,KAAK8zR,sBAAsBW,QAAU,IAAIlB,EAAA,QAE9CvzR,KAAK8zR,sBAAsBW,kBAClClB,EAAA,GACpB,OAAO,IAAIp6R,MACP,yKAKL,GAAI6G,KAAK4zR,eAAeU,cAAgBC,EAAA,EAAaG,YAQxD,GAAI10R,KAAK8zR,sBAAsBW,OAC3B,OAAO,IAAIt7R,MACP,0IAKZ,OAAO,IAAIo6R,EAAA,GACP1kR,cAAe7O,KAAK4zR,eACpB7kR,eAAgB/O,KAAKi0R,gBACrBjlR,oBAAqBhP,KAAK8zR,wBAKxB1zR,cAAcu0R,GAIpB,GAFA30R,KAAK40R,YAAcD,EAAoB5zR,WAEnC4zR,EAAoB5zR,aAAewzR,EAAA,EAAYjyR,KAG/CtC,KAAK60R,QAAUF,EACf30R,KAAKo0R,iBAAmBO,EAAoBnlR,gBAC5CxP,KAAK8zR,sBAAsBgB,iBAAmBH,EAAoBllR,wBAClEzP,KAAK8zR,sBAAsBiB,UAAYJ,EAAoBjlR,iBAC3D1P,KAAKg1R,cAAgBL,EAAoBhlR,aAGzC3P,KAAKg0R,cAAciB,oBAAoBj1R,KAAK8zR,sBAAsBrjR,aAAczQ,MAKhFA,KAAKqe,KAAK,mBAEP,CAOH,IAAI2X,EAAM,IAAI78B,MAAMw7R,EAAoB5zR,WAAW3H,YACnD4G,KAAKqe,KAAK,MAAO2X,EAAInxB,SACrB7E,KAAKqe,KAAK,eAIXje,wBAAwBszR,EAAmCtkR,EAAoB0B,EAAsCokR,GACxHllS,OAAAmkS,EAAA,EAAAnkS,CAAQ,mBAAsBklS,GAAiD,iBAAhCxB,EAAaplR,gBAE5D,IADA,IAAIe,KACK/f,EAAI,EAAGA,EAAIwhB,EAAexb,OAAQhG,IAAK,CAE5C,IACI6lS,EADgBrkR,EAAexhB,GACK8lS,wBAAwBF,GAChE,GAAkC,iBAAvBC,EAAa1/P,OAAsB0/P,EAAa1/P,iBAAiBn9B,OACxE,OAAO48R,EAAK,IAAI/7R,MAAMg8R,EAAa1/P,QAEvCpmB,EAAchX,KAAK88R,GAGvB,GAA0C,iBAAhCzB,EAAaplR,eAEnB,MAAM,IAAInV,MAAM,4EAA8Eu6R,EAAaplR,gBAG/G,IAAI+mR,EAA4B,IAAI9B,EAAA,GAChCjlR,eAAgBolR,EAAaplR,eAC7Bc,mBAAoBA,EACpBC,cAAeA,IAGnBrf,OAAAmkS,EAAA,EAAAnkS,CAAO0jS,EAAa4B,SACpB5B,EAAa4B,QAAQC,qBAAqBF,EAA2B,SAAUr/P,EAAKw/P,GAGhF,GAAIx/P,OAIG,CACHhmC,OAAAmkS,EAAA,EAAAnkS,CAAOwlS,aAAoBjC,EAAA,GAE3B,IAAK,IAAIjkS,EAAI,EAAGA,EAAIkmS,EAAS1lR,QAAQxa,OAAQhG,IAAK,CAC9C,IAAIqlS,EAAsBa,EAAS1lR,QAAQxgB,GACvBwhB,EAAexhB,GACrBmmS,cAAcd,IAGpCO,EAAKl/P,KAIN51B,uBAAuBszR,EAAmC5iR,EAAsC4kR,EAAqCtmR,EAAyCmmB,GAEjLvlC,OAAAmkS,EAAA,EAAAnkS,MAAoBiC,IAAbsjC,GAA2B,mBAAsBA,GAExD,IAAIogQ,EAAgB7kR,EAAe2qB,IAAI,SAAUm6P,GAC7C,IAAIC,EAAY,IAAI9B,EAAA,EAAqB2B,GAEzC,OADAG,EAAUplR,aAAemlR,EAAcjC,qBAAqBljR,aACrD,IAAIi4B,GACPl5B,gBAAiBomR,EAAcxB,iBAC/BplR,oBAAqB6mR,MAGzBC,EAA8B,IAAIC,EAAA,GAClCznR,eAAwBolR,EAAaplR,eACrCc,mBAAoBA,EACpBumR,cAAeA,IAGnBjC,EAAa4B,QAAQU,qBAAqBF,EAA6B,SAAU9/P,EAAKw/P,GAGlF,GAAIx/P,EACA,OAAOT,EAASS,GAEpBhmC,OAAAmkS,EAAA,EAAAnkS,CAAOwlS,EAAS1lR,QAAQxa,SAAWwb,EAAexb,QAElD,IAAI2gS,EAAMT,EAAS1lR,QAAQ,GAG3B,GAAgC,IAA5B0lR,EAAS1lR,QAAQxa,QAAgB2gS,EAAIl1R,aAAewzR,EAAA,EAAYjyR,KAChE,OAAOizB,EAAS,IAAIp8B,MAAM,QAAU88R,EAAIl1R,WAAW3H,aAEvDm8B,EAAS,KAAMigQ,EAAS1lR,WAGzB1P,kCAAkCszR,EAAmC5iR,EAAsC/B,EAAiCwmB,GAE/I,IAAIvjB,EAAmBlB,EAAe2qB,IAAI,SAAUm6P,GAChD,OAAOA,EAAcxB,mBAGrB8B,GACA5nR,eAAgBolR,EAAaplR,eAC7BS,eAAgBA,EAChBiD,iBAAkBA,GAEtB0hR,EAAa4B,QAAQa,kBAAkBD,EAA0B,CAAClgQ,EAAKlmB,KAC9DkmB,GACDllB,EAAe6lB,QAASi/P,IACpBA,EAAc3B,gBAAkBllR,IAGpCwmB,GACAA,EAASS,EAAKlmB,EAAUA,EAAQ,GAAK,mJChR3C,SAAAsmR,EAA+BjgQ,GAKjC,MAHkC,QAAZA,EAClB,IAAIkgQ,EAAA,EACJ,IAAIA,EAAA,QAgCNC,UAAyCC,EAAA,aAU/Cn2R,YAAa+1B,EAAS91B,EAA4Cm2R,EAAgBC,GAC9E51R,QACAb,KAAK02R,UAAW,EAEhBvgQ,EAAUA,GAAW,MAErBqgQ,EAAiBA,GAAkBJ,EAAqBjgQ,GACxDnmC,OAAAsW,EAAA,EAAAtW,CAAiC,iBAAnBwmS,GAIdx2R,KAAK22R,WAAat2R,EAAQw2B,WAAa,OAEvC72B,KAAK42R,SAAWzgQ,EAEhB91B,EAAQw2R,gBAAkBx2R,EAAQw2R,iBAAmB,EACrD7mS,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAAS4N,EAAQw2R,kBAC/B72R,KAAK82R,iBAAmBz2R,EAAQw2R,gBAEhC,IAAIt9Q,EAAYlZ,EAAQkZ,UAExBvZ,KAAK+2R,yBAA2BN,EAEhCz2R,KAAKg3R,gBAAkBR,EAEvBxmS,OAAAsW,EAAA,EAAAtW,CAAOupB,EAAY,EAAG,gCAEtBvZ,KAAKi3R,gBAAkB,IAAIZ,EAAA,GAAgB98Q,UAAWA,EAAWtJ,gBAAiB,IAElF,IAAIinR,EAAqBC,EAAA,EAAWn0R,gBAAgBhD,KAAKg3R,iBACrDhgQ,EAAqBmgQ,EAAA,EAAWn0R,gBAAgBhD,KAAKi3R,iBACzDjnS,OAAAsW,EAAA,EAAAtW,CAA8B,IAAvBgnC,GAEPh3B,KAAKo3R,YAAc,GAAKF,EACxB,IAAInyR,EAAO/E,KACPq3R,GACAxgQ,UAAW72B,KAAK22R,WAEhB7/P,WAAY92B,KAAKo3R,YACjBrgQ,gBAAkB,CAACugQ,EAAOj/P,EAAQk/P,KAE9B,IAAIC,EAASn/P,EAAS,IAAM,IAC5Bm/P,EAASx3R,KAAK02R,SAAW,IAAMc,EAC/Bx3R,KAAKy3R,aAAaD,EAAQF,EAAOC,IAGrCvgQ,mBAAoB32B,EAAQ22B,mBAC5BC,wBAAyB,SAAUqgQ,GAC/BtnS,OAAAsW,EAAA,EAAAtW,CAAOsnS,EAAM5vR,aAAe1H,KAAKg3B,oBACjCjyB,EAAK2yR,oBAAoBJ,IAI7B32Q,gBAAiBtgB,EAAQsgB,gBACzBuW,kBAAmB72B,EAAQs3R,YAG3BxgQ,eAAgB92B,EAAQ82B,eACxBC,gBAAiB/2B,EAAQ+2B,gBACzBE,eAAgBj3B,EAAQi3B,gBAG5Bt3B,KAAK43R,cAAgB,IAAIC,EAAA,EAAaR,GAEtCr3R,KAAK43R,cAAch5Q,GAAG,QAAS,CAACiB,EAAOi4Q,KAKnC93R,KAAKqe,KAAK,QAASwB,EAAOi4Q,GAAW93R,KAAK02R,YAK3Ct2R,aAAao3R,EAAQl7R,EAA6BhH,GAErDtF,OAAAsW,EAAA,EAAAtW,CAAOsM,EAAIoL,WAAa,IACxB1X,OAAAsW,EAAA,EAAAtW,CAAyB,IAAlBwnS,EAAOliS,QAEVgH,aAAemL,WACfnL,EAAM,IAAI66R,EAAA,EAAW76R,IAYzBA,EAAI1K,SAASoO,KAAK42R,SAASp6R,WAAW,IACtCF,EAAI1K,SAASoO,KAAK42R,SAASp6R,WAAW,IACtCF,EAAI1K,SAASoO,KAAK42R,SAASp6R,WAAW,IACtCF,EAAI1K,SAAS4lS,EAAOh7R,WAAW,IAE/BF,EAAIvI,UAAUuB,GACdgH,EAAIvI,UAAUiM,KAAK82R,kBAEnB9mS,OAAAsW,EAAA,EAAAtW,CAAsB,KAAfsM,EAAIhH,QAIX0K,KAAKg3R,gBAAgB/zR,OAAO3G,GAC5BtM,OAAAsW,EAAA,EAAAtW,CAAOsM,EAAIhH,SAAW0K,KAAKo3R,aAGxBh3R,oBAAoBk3R,GACnBA,aAAiB7vR,WACjB6vR,EAAQ,IAAIH,EAAA,EAAWG,IAG3Bt3R,KAAKi3R,gBAAgBhnR,eAAiBjQ,KAAK+2R,yBAAyBgB,OACpE/3R,KAAKi3R,gBAAgBh0R,OAAOq0R,GAC5BtnS,OAAAsW,EAAA,EAAAtW,CAAwB,IAAjBsnS,EAAMhiS,QASV8K,MAAMkW,EAAsBhhB,GAC/BA,EAASA,GAAUghB,EAAO5O,WAC1B1H,KAAK43R,cAAcI,MAAM1hR,EAAQhhB,GAO9B8K,QACHJ,KAAK02R,UAAW,EAChB12R,KAAK8Z,MAMF1Z,MACHJ,KAAK43R,cAAc99Q,MACnB9Z,KAAKqe,KAAK,2GC1LRpP,EAOL7O,YAAaC,GACZA,EAAUA,MACVL,KAAKyQ,aAAepQ,EAAoB,aAAIA,EAAQoQ,aAAa,KACjEzQ,KAAK80R,iBAAmBz0R,EAAwB,iBAAIA,EAAQy0R,iBAAiB,KAC7E90R,KAAKy0R,OAASp0R,EAAc,OAAIA,EAAQo0R,OAAO,KAC/Cz0R,KAAK+0R,UAAY10R,EAAiB,UAAIA,EAAQ00R,UAAU,KACxD/0R,KAAKi4R,cAAgB53R,EAAqB,cAAIA,EAAQ43R,cAAc,KAKrE73R,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKyQ,aAAa9I,GAClCc,EAAA,GAAgBzI,KAAK80R,iBAAiBntR,GACtCc,EAAA,GAAyBzI,KAAKy0R,OAAO9sR,GACrCc,EAAA,GAAgBzI,KAAK+0R,UAAUptR,GAC/Bc,EAAA,GAAiBzI,KAAKi4R,cAActwR,GAKrCvH,OAAQsI,GACP1I,KAAKyQ,aAAehI,EAAA,EAAgBC,GACpC1I,KAAK80R,iBAAmBrsR,EAAA,EAAgBC,GACxC1I,KAAKy0R,OAAShsR,EAAA,EAAyBC,GACvC1I,KAAK+0R,UAAYtsR,EAAA,EAAgBC,GACjC1I,KAAKi4R,cAAgBxvR,EAAA,EAAiBC,GAKvCtI,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAIsG,GAEdtG,EAAO8H,aAAezQ,KAAKyQ,aAC3B9H,EAAOmsR,iBAAmB90R,KAAK80R,iBAC/BnsR,EAAO8rR,OAASz0R,KAAKy0R,OACrB9rR,EAAOosR,UAAY/0R,KAAK+0R,UACxBpsR,EAAOsvR,cAAgBj4R,KAAKi4R,cACrBtvR,GAgBT3Y,OAAA4Y,EAAA,EAAA5Y,CAA0B,uBAAuBif,EAAsBjf,OAAA6Y,EAAA,EAAA7Y,CAAmB,IAAI,iGC1DxFkoS,EASL93R,YAAaC,GACZA,EAAUA,MACVL,KAAKy6B,gBAAkBp6B,EAAuB,gBAAIA,EAAQo6B,gBAAgB,KAC1Ez6B,KAAKm4R,UAAY93R,EAAiB,UAAIA,EAAQ83R,UAAU,KACxDn4R,KAAKpD,OAASyD,EAAc,OAAIA,EAAQzD,OAAO,KAC/CoD,KAAK8J,WAAazJ,EAAkB,WAAIA,EAAQyJ,WAAW,IAAI6a,EAAA,EAC/D3kB,KAAKo4R,YAAc/3R,EAAmB,YAAIA,EAAQ+3R,YAAY,IAAI/7Q,EAAA,EAClErc,KAAKq4R,UAAYh4R,EAAiB,UAAIA,EAAQg4R,UAAU,KACxDr4R,KAAKs4R,eAAiBj4R,EAAsB,eAAIA,EAAQi4R,eAAe,KAKxEl4R,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKy6B,gBAAgB9yB,GACrCuG,EAAA,GAAiBlO,KAAKm4R,UAAUxwR,GAChCuG,EAAA,GAAwBlO,KAAKpD,OAAO+K,GACpC3H,KAAK8J,WAAW7G,OAAO0E,GACvB3H,KAAKo4R,YAAYn1R,OAAO0E,GACxB3X,OAAA+uC,EAAA,EAAA/uC,CAAgBgQ,KAAKq4R,UAAU1wR,GAC/BuG,EAAA,GAAwBlO,KAAKs4R,eAAe3wR,GAK7CvH,OAAQsI,GACP1I,KAAKy6B,gBAAkBvsB,EAAA,EAAgBxF,GACvC1I,KAAKm4R,UAAYjqR,EAAA,EAAiBxF,GAClC1I,KAAKpD,OAASsR,EAAA,EAAwBxF,GACtC1I,KAAK8J,WAAW1G,OAAOsF,GACvB1I,KAAKo4R,YAAYh1R,OAAOsF,GACxB1I,KAAKq4R,UAAYroS,OAAA+uC,EAAA,EAAA/uC,CAAgB0Y,GACjC1I,KAAKs4R,eAAiBpqR,EAAA,EAAwBxF,GAK/CtI,MAAOuI,GAWN,OAVIA,IACHA,EAAS,IAAIuvR,GAEdvvR,EAAO8xB,gBAAkBz6B,KAAKy6B,gBAC9B9xB,EAAOwvR,UAAYn4R,KAAKm4R,UACxBxvR,EAAO/L,OAASoD,KAAKpD,OACjBoD,KAAK8J,aAAcnB,EAAOmB,WAAa9J,KAAK8J,WAAWX,SACvDnJ,KAAKo4R,cAAezvR,EAAOyvR,YAAcp4R,KAAKo4R,YAAYjvR,SAC9DR,EAAO0vR,UAAYr4R,KAAKq4R,UACxB1vR,EAAO2vR,eAAiBt4R,KAAKs4R,eACtB3vR,GAKH,SAAA4vR,EAAsC7vR,GAC1C,IAAIsE,EAAM,IAAIkrR,EAEb,OADAlrR,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,uBAAuBkoS,EAAsBloS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC9ExFwoS,EAKLp4R,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAKy4R,kBAAoBp4R,EAAyB,kBAAIA,EAAQo4R,kBAAkB,KAChFz4R,KAAK04R,WAAar4R,EAAkB,WAAIA,EAAQq4R,cAKjDt4R,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKe,WAAW4G,GACpCuG,EAAA,GAAoBlO,KAAKy4R,kBAAkB9wR,GAC3CuG,EAAA,EAAelO,KAAK04R,WAAW/wR,GAKhCvH,OAAQsI,GACP1I,KAAKe,WAAamN,EAAA,EAAoBxF,GACtC1I,KAAKy4R,kBAAoBvqR,EAAA,EAAoBxF,GAC7C1I,KAAK04R,WAAaxqR,EAAA,EAAexF,EAAI6vR,GAKtCn4R,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI6vR,GAEd7vR,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAO8vR,kBAAoBz4R,KAAKy4R,kBAC5Bz4R,KAAK04R,aAAc/vR,EAAO+vR,WAAaxqR,EAAA,EAAqBlO,KAAK04R,aAC9D/vR,GAKH,SAAAgwR,EAA8BjwR,GAClC,IAAIsE,EAAM,IAAIwrR,EAEb,OADAxrR,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,eAAewoS,EAAcxoS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBCnDxE4oS,EAQLx4R,YAAaC,GACZA,EAAUA,MACVL,KAAKpD,OAASyD,EAAc,OAAIA,EAAQzD,OAAO,KAC/CoD,KAAK64R,gBAAkBx4R,EAAuB,gBAAIA,EAAQw4R,gBAAgB,KAC1E74R,KAAKy6B,gBAAkBp6B,EAAuB,gBAAIA,EAAQo6B,gBAAgB,KAC1Ez6B,KAAK06B,gBAAkBr6B,EAAuB,gBAAIA,EAAQq6B,gBAAgB,KAC1E16B,KAAK84R,cAAgBz4R,EAAqB,cAAIA,EAAQy4R,cAAc,KACpE94R,KAAK+4R,WAAa14R,EAAkB,WAAIA,EAAQ04R,WAAW,KAK5D34R,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKpD,OAAO+K,GAC5B3X,OAAA8zC,EAAA,EAAA9zC,CAAsBgQ,KAAK64R,gBAAgBlxR,GAC3CuG,EAAA,GAAgBlO,KAAKy6B,gBAAgB9yB,GACrCuG,EAAA,GAAiBlO,KAAK06B,gBAAgB/yB,GACtCuG,EAAA,GAAgBlO,KAAK84R,cAAcnxR,GACnCuG,EAAA,GAAgBlO,KAAK+4R,WAAWpxR,GAKjCvH,OAAQsI,GACP1I,KAAKpD,OAASsR,EAAA,EAAgBxF,GAC9B1I,KAAK64R,gBAAkB7oS,OAAA8zC,EAAA,EAAA9zC,CAAsB0Y,GAC7C1I,KAAKy6B,gBAAkBvsB,EAAA,EAAgBxF,GACvC1I,KAAK06B,gBAAkBxsB,EAAA,EAAiBxF,GACxC1I,KAAK84R,cAAgB5qR,EAAA,EAAgBxF,GACrC1I,KAAK+4R,WAAa7qR,EAAA,EAAgBxF,GAKnCtI,MAAOuI,GAUN,OATIA,IACHA,EAAS,IAAIiwR,GAEdjwR,EAAO/L,OAASoD,KAAKpD,OACrB+L,EAAOkwR,gBAAkB74R,KAAK64R,gBAC9BlwR,EAAO8xB,gBAAkBz6B,KAAKy6B,gBAC9B9xB,EAAO+xB,gBAAkB16B,KAAK06B,gBAC9B/xB,EAAOmwR,cAAgB94R,KAAK84R,cAC5BnwR,EAAOowR,WAAa/4R,KAAK+4R,WAClBpwR,GAKH,SAAAqwR,EAAmCtwR,GACvC,IAAIsE,EAAM,IAAI4rR,EAEb,OADA5rR,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,oBAAoB4oS,EAAmB5oS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,6BCnElFipS,EAML74R,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKwH,KAAOnH,EAAY,KAAIA,EAAQmH,KAAK,IAAIu8B,EAAA,EAC7C/jC,KAAKk5R,8BAAgC74R,EAAqC,8BAAIA,EAAQ64R,8BAA8B,KACpHl5R,KAAKm5R,cAAgB94R,EAAqB,cAAIA,EAAQ84R,iBAKvD/4R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1B3H,KAAKwH,KAAKvE,OAAO0E,GACjBuG,EAAA,GAAgBlO,KAAKk5R,8BAA8BvxR,GACnDuG,EAAA,EAAelO,KAAKm5R,cAAcxxR,GAKnCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKwH,KAAKpE,OAAOsF,GACjB1I,KAAKk5R,8BAAgChrR,EAAA,EAAgBxF,GACrD1I,KAAKm5R,cAAgBjrR,EAAA,EAAexF,EAAIswR,GAKzC54R,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIswR,GAEVj5R,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAChEnJ,KAAKwH,OAAQmB,EAAOnB,KAAOxH,KAAKwH,KAAK2B,SACzCR,EAAOuwR,8BAAgCl5R,KAAKk5R,8BACxCl5R,KAAKm5R,gBAAiBxwR,EAAOwwR,cAAgBjrR,EAAA,EAAqBlO,KAAKm5R,gBACpExwR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,gBAAgBipS,EAAejpS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,6BC1D1EopS,EAKLh5R,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIiwR,GAClC34R,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIywR,GAEVp5R,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,iBAAiBopS,EAAgBppS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCzD5EqpS,EAKLj5R,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKs5R,0BAA4Bj5R,EAAiC,0BAAIA,EAAQi5R,0BAA0B,KACxGt5R,KAAKu5R,mBAAqBl5R,EAA0B,mBAAIA,EAAQk5R,sBAKjEn5R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAiBlO,KAAKs5R,0BAA0B3xR,GAChDuG,EAAA,EAAelO,KAAKu5R,mBAAmB5xR,EAAIuG,EAAA,IAK5C9N,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKs5R,0BAA4BprR,EAAA,EAAiBxF,GAClD1I,KAAKu5R,mBAAqBrrR,EAAA,EAAexF,EAAIwF,EAAA,GAK9C9N,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI0wR,GAEVr5R,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAO2wR,0BAA4Bt5R,KAAKs5R,0BACxC3wR,EAAO4wR,mBAAqBrrR,EAAA,EAAclO,KAAKu5R,oBACxC5wR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,oBAAoBqpS,EAAmBrpS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCjDlFwpS,EAKLp5R,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIiwR,GAClC34R,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI6wR,GAEVx5R,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,qBAAqBwpS,EAAoBxpS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,iWC3DpF,SAAAypS,EAAgClpS,GAElC,IAAImpS,EAAcnpS,EAAMwF,MAAM,KAC1B6uB,EAAiB,EAMrB,OALKnf,MAAM3N,WAAW4hS,EAAY,MAAQjnS,SAASinS,EAAY,KAAOlnS,OAAOmnS,UAAU7hS,WAAW4hS,EAAY,MAAQA,EAAYpkS,OAAS,IACvIsvB,EAAiB5uB,SAAS0jS,EAAY,IACtCA,EAAYE,QACZrpS,EAAQmpS,EAAYlhS,KAAK,MAEtB,IAAImsB,EAAA,GAAeC,eAAgBA,EAAgB/0B,KAAMU,IAI9D,SAAAspS,EAA4BtpS,GAE9B,OAAKA,EAEMA,aAAiBo0B,EAAA,EACjBp0B,EACiB,iBAAVA,GAAsBA,aAAiB+H,OAC9CmhS,EAAsBlpS,IAE7BP,OAAAkD,EAAA,EAAAlD,CAAOO,EAAMY,eAAe,mBAC5BnB,OAAAkD,EAAA,EAAAlD,CAAOO,EAAMY,eAAe,SACrB,IAAIwzB,EAAA,EAAcp0B,IARlB,2ECdTupS,EAKL15R,YAAaC,GACZA,EAAUA,MACVL,KAAKzP,MAAQ8P,EAAa,MAAIA,EAAQ9P,MAAM,KAC5CyP,KAAKo4R,YAAc/3R,EAAmB,YAAIA,EAAQ+3R,YAAY,IAAI/7Q,EAAA,EAClErc,KAAKF,YAAcO,EAAmB,YAAIA,EAAQP,YAAY,IAAIuc,EAAA,EAKnEjc,OAAQuH,GACPuG,EAAA,GAAelO,KAAKzP,MAAMoX,GAC1B3H,KAAKo4R,YAAYn1R,OAAO0E,GACxB3H,KAAKF,YAAYmD,OAAO0E,GAKzBvH,OAAQsI,GACP1I,KAAKzP,MAAQ2d,EAAA,EAAexF,GAC5B1I,KAAKo4R,YAAYh1R,OAAOsF,GACxB1I,KAAKF,YAAYsD,OAAOsF,GAKzBtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAImxR,GAEdnxR,EAAOpY,MAAQyP,KAAKzP,MAChByP,KAAKo4R,cAAezvR,EAAOyvR,YAAcp4R,KAAKo4R,YAAYjvR,SAC1DnJ,KAAKF,cAAe6I,EAAO7I,YAAcE,KAAKF,YAAYqJ,SACvDR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,gBAAgB8pS,EAAe9pS,OAAA8N,EAAA,EAAA9N,CAAmB,KAAK,QC/DrEgxC,WAAZ,SAAYA,GACTA,IAAA,eACDA,IAAA,6BACAA,IAAA,qCACAA,IAAA,2BACAA,IAAA,qCACAA,IAAA,wBACAA,IAAA,8BACAA,IAAA,8BACAA,IAAA,mCACAA,IAAA,6BACAA,IAAA,+BACAA,IAAA,gCACAA,IAAA,8BACAA,IAAA,wDACAA,IAAA,4BACAA,IAAA,uBACAA,IAAA,6BACAA,IAAA,yCACAA,IAAA,wCACAA,IAAA,sCACAA,IAAA,8BACAA,IAAA,+BACAA,IAAA,qDACAA,IAAA,iDACAA,IAAA,2CACAA,IAAA,kDACAA,IAAA,wCA3BF,CAAYA,WA2CZhxC,OAAAyd,EAAA,EAAAzd,CAAoB,qBAAqBgxC,EAZnC,SAAoC3zB,EAA4B1F,GACrEA,EAAI5T,UAAUsZ,IAIT,SAAoC3E,GACzC,OAAOA,EAAIzU,aAMoG,YCnC1G8lS,EAIL35R,YAAaC,GACZA,EAAUA,MACVL,KAAK9F,OAASmG,EAAc,OAAIA,EAAQnG,OAAO,KAC/C8F,KAAKg6R,uBAAyB35R,EAA8B,uBAAIA,EAAQ25R,uBAAuB,KAKhG55R,OAAQuH,GACPuG,EAAA,GAAelO,KAAK9F,OAAOyN,GAC3BuG,EAAA,GAAiBlO,KAAKg6R,uBAAuBryR,GAK9CvH,OAAQsI,GACP1I,KAAK9F,OAASgU,EAAA,EAAexF,GAC7B1I,KAAKg6R,uBAAyB9rR,EAAA,EAAiBxF,GAKhDtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIoxR,GAEdpxR,EAAOzO,OAAS8F,KAAK9F,OACrByO,EAAOqxR,uBAAyBh6R,KAAKg6R,uBAC9BrxR,GC3CH,SAAAsxR,EAA8B1pS,GAChC,YAAc0B,IAAV1B,GAAiC,OAAVA,EAChB,KAEU,iBAAVA,EACA,IAAI8rB,EAAA,GAAejQ,OAAQ,KAAMkQ,KAAM/rB,IAE9CA,aAAiB8rB,EAAA,EACV9rB,GAEXP,OAAAkD,EAAA,EAAAlD,CAAOO,EAAMY,eAAe,WAC5BnB,OAAAkD,EAAA,EAAAlD,CAAOO,EAAMY,eAAe,SACrB,IAAIkrB,EAAA,EAAc9rB,ID+C7BP,OAAAme,EAAA,EAAAne,CAA0B,mBAAmB+pS,EAAkB/pS,OAAA8N,EAAA,EAAA9N,CAAmB,KAAK,iXE1DvFZ,EAAAQ,EAAA0T,EAAA,sBAAA22R,kICAA,IAEY55P,EAFZ1jB,EAAAvtB,EAAA,IAUM,SAAA8qS,EAAiC7sR,EAAyB1F,GAC/DA,EAAI5T,UAAUsZ,GAIT,SAAA8sR,EAAiCzxR,GACtC,OAAOA,EAAIzU,aAdZ,SAAYosC,GACTA,IAAA,mBACDA,IAAA,mBACAA,IAAA,qCACAA,IAAA,qCAJF,CAAYA,WAoBZrwC,OAAA2sB,EAAA,EAAA3sB,CAAoB,kBAAkBqwC,EAAgB65P,EAAuBC,EAAuB,oCC1BpG,SAAAC,EAAAl9Q,GACA,kBACA,UAAAA,EAAA,UAAA/jB,MAAA,gCACA,IAAAkhS,EAAAn9Q,EACAA,EAAA,KACAm9Q,EAAA7zR,MAAAxG,KAAAyG,0ECLA,SAAAf,EAAA40R,EAAAzgR,GACAA,GAAA,EAGA,IAFA,IAAArD,EAAAhlB,KAAAa,IAAAioS,EAAAhlS,OAAAukB,EAAA,GACA0gR,EAAAllS,MAAAmhB,GACAgkR,EAAA,EAAoBA,EAAAhkR,EAAcgkR,IAClCD,EAAAC,GAAAF,EAAAzgR,EAAA2gR,GAEA,OAAAD,wHCaAE,EAAAzqS,OAAA0qS,EAAA,GAAAC,EAAA,KC+CA,SAAAC,EAAAC,EAAAtlQ,IC9DA,SAAAulQ,EAAAD,EAAAtlQ,GACAA,KAAAwlQ,EAAA,EACA,IAAAjrR,EAAA9f,OAAAgrS,EAAA,EAAAhrS,CAAA6qS,SAEAC,EAAAD,EAAA,SAAAI,EAAApqS,EAAA0kC,GACAvlC,OAAAkrS,EAAA,EAAAlrS,CAAAirS,EAAAjrS,CAAA,SAAAgmC,EAAA3b,GACA5T,UAAAnR,OAAA,IACA+kB,EAAArqB,OAAA0V,EAAA,EAAA1V,CAAAyW,UAAA,IAEAqJ,EAAAjf,GAAAwpB,EACAkb,EAAAS,MAEK,SAAAA,GACLT,EAAAS,EAAAlmB,KDkDAqrR,CAAAV,EAAAI,EAAAtlQ,iKEhEA,IAEYuO,EAFZnnB,EAAAvtB,EAAA,IAUM,SAAAgsS,EAAiC/tR,EAAyB1F,GAC/DA,EAAI5T,UAAUsZ,GAIT,SAAAguR,EAAiC3yR,GACtC,OAAOA,EAAIzU,aAdZ,SAAY6vC,GACTA,IAAA,qBACDA,IAAA,qBACAA,IAAA,eACAA,IAAA,qBAJF,CAAYA,WAoBZ9zC,OAAA2sB,EAAA,EAAA3sB,CAAoB,kBAAkB8zC,EAAgBs3P,EAAuBC,EAAuB,oICtBpG,IAEYt8P,EAFZpiB,EAAAvtB,EAAA,IAeM,SAAAksS,EAA2BjuR,EAAmB1F,GACnDA,EAAI5T,UAAUsZ,GAIT,SAAAkuR,EAA2B7yR,GAChC,OAAOA,EAAIzU,aAnBZ,SAAY8qC,GACTA,IAAA,6BACDA,IAAA,mBACAA,IAAA,uBACAA,IAAA,mBACAA,IAAA,2BACAA,IAAA,gCACAA,IAAA,kCACAA,IAAA,wBACAA,IAAA,iBATF,CAAYA,WAyBZ/uC,OAAA2sB,EAAA,EAAA3sB,CAAoB,YAAY+uC,EAAUu8P,EAAiBC,EAAiB,kRCtBxEC,EAAwBxrS,OAAA+M,EAAA,EAAA/M,CAAa6P,EAAA,EAAYgiF,iCAI/C45M,UAA6CjlQ,EAAA,aAQnDp2B,YAAck1R,GACVz0R,QACAb,KAAKs1R,QAAUA,EACft1R,KAAK07R,QAAU,EAYZt7R,YAAYm1B,GACfA,EAAWA,GAAY,aACvB,IAAIomQ,EAAc37R,KAAKs1R,QACvB,OAAKqG,EAIK7iS,KAAKoC,MAEwBygS,EAAYC,yBAClB57R,KAAK67R,YAG3BtmQ,SAKXomQ,EAAYG,kBAAkBN,EAAuB,CAACxlQ,EAAK+lQ,KACvD,GAAI/lQ,EACAr3B,QAAQC,IAAI,wDAAyDo3B,EAAInxB,SACzE7E,KAAKg8R,OAOLh8R,KAAKqe,KAAK,eAEP,CACH,GAAI09Q,EAAUh7R,aAAelB,EAAA,EAAYyC,KAAM,CAC3C,IAAI25R,EAAWxxP,EAAA,EAAYsxP,EAAUxrS,MAAMA,OAEvC0rS,IAAaj8R,KAAKk8R,gBAClBv9R,QAAQC,IAAI,mBAAoBq9R,EAAS7iS,YAE7C4G,KAAKk8R,eAAiBD,EAG1Bj8R,KAAKqe,KAAK,YAAYre,KAAKk8R,gBAE/B3mQ,MAtCOA,IA2CRn1B,QAEHpQ,OAAAkD,EAAA,EAAAlD,EAAQgQ,KAAK07R,SACb1rS,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKs1R,QAAQ6G,QAAU,KAE9Bn8R,KAAK67R,YAAwC,EAAvB77R,KAAKs1R,QAAQ6G,QAAY,EAC/Cn8R,KAAKo8R,cAAiBp8R,KAAK67R,YAAe,EAC1C77R,KAAK07R,QAAUW,YAAYr8R,KAAKs8R,YAAYxrS,KAAKkP,MAAMA,KAAKo8R,eAGzDh8R,OACCJ,KAAK07R,UACLa,cAAcv8R,KAAK07R,SACnB17R,KAAK07R,QAAU,yIChFjBc,EAKLp8R,YAAaC,GACZA,EAAUA,MACVL,KAAKw5B,aAAen5B,EAAoB,aAAIA,EAAQm5B,aAAa,IAAIC,EAAA,EACrEz5B,KAAKs0R,YAAcj0R,EAAmB,YAAIA,EAAQi0R,YAAY,KAC9Dt0R,KAAKy8R,WAAap8R,EAAkB,WAAIA,EAAQo8R,WAAW,KAK5Dr8R,OAAQuH,GACP3H,KAAKw5B,aAAav2B,OAAO0E,GACzBuG,EAAA,GAAgBlO,KAAKs0R,YAAY3sR,GACjCuG,EAAA,GAAgBlO,KAAKy8R,WAAW90R,GAKjCvH,OAAQsI,GACP1I,KAAKw5B,aAAap2B,OAAOsF,GACzB1I,KAAKs0R,YAAcpmR,EAAA,EAAgBxF,GACnC1I,KAAKy8R,WAAavuR,EAAA,EAAgBxF,GAKnCtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI6zR,GAEVx8R,KAAKw5B,eAAgB7wB,EAAO6wB,aAAex5B,KAAKw5B,aAAarwB,SACjER,EAAO2rR,YAAct0R,KAAKs0R,YAC1B3rR,EAAO8zR,WAAaz8R,KAAKy8R,WAClB9zR,GAKH,SAAA+zR,EAAsCh0R,GAC1C,IAAIsE,EAAM,IAAIwvR,EAEb,OADAxvR,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,uBAAuBwsS,EAAsBxsS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCpDxF2sS,EAKLv8R,YAAaC,GACZA,EAAUA,MACVL,KAAK48R,mBAAqBv8R,EAA0B,mBAAIA,EAAQu8R,mBAAmB,KACnF58R,KAAK68R,gBAAkBx8R,EAAuB,gBAAIA,EAAQw8R,gBAAgB,KAC1E78R,KAAK88R,aAAez8R,EAAoB,aAAIA,EAAQy8R,gBAKrD18R,OAAQuH,GACPuG,EAAA,GAAwBlO,KAAK48R,mBAAmBj1R,GAChDuG,EAAA,GAAiBlO,KAAK68R,gBAAgBl1R,GACtCuG,EAAA,EAAelO,KAAK88R,aAAan1R,GAKlCvH,OAAQsI,GACP1I,KAAK48R,mBAAqB1uR,EAAA,EAAwBxF,GAClD1I,KAAK68R,gBAAkB3uR,EAAA,EAAiBxF,GACxC1I,KAAK88R,aAAe5uR,EAAA,EAAexF,EAAIg0R,GAKxCt8R,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIg0R,GAEdh0R,EAAOi0R,mBAAqB58R,KAAK48R,mBACjCj0R,EAAOk0R,gBAAkB78R,KAAK68R,gBAC1B78R,KAAK88R,eAAgBn0R,EAAOm0R,aAAe5uR,EAAA,EAAqBlO,KAAK88R,eAClEn0R,GAKH,SAAAo0R,EAAqCr0R,GACzC,IAAIsE,EAAM,IAAI2vR,EAEb,OADA3vR,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,sBAAsB2sS,EAAqB3sS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,uBC/CtFgtS,EAQL58R,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKwH,KAAOnH,EAAY,KAAIA,EAAQmH,KAAK,IAAIu8B,EAAA,EAC7C/jC,KAAKi9R,UAAY58R,EAAiB,UAAIA,EAAQ48R,aAC9Cj9R,KAAKy0R,OAASp0R,EAAc,OAAIA,EAAQo0R,OAAO,IAAIjvP,EAAA,EACnDxlC,KAAKk9R,oBAAsB78R,EAA2B,oBAAIA,EAAQ68R,oBAAoB,KACtFl9R,KAAKm9R,sBAAwB98R,EAA6B,sBAAIA,EAAQ88R,sBAAsB,KAK7F/8R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1B3H,KAAKwH,KAAKvE,OAAO0E,GACjBuG,EAAA,EAAelO,KAAKi9R,UAAUt1R,GAC9B3H,KAAKy0R,OAAOxxR,OAAO0E,GACnBuG,EAAA,GAAgBlO,KAAKk9R,oBAAoBv1R,GACzCuG,EAAA,GAAgBlO,KAAKm9R,sBAAsBx1R,GAK5CvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKwH,KAAKpE,OAAOsF,GACjB1I,KAAKi9R,UAAY/uR,EAAA,EAAexF,EAAIq0R,GACpC/8R,KAAKy0R,OAAOrxR,OAAOsF,GACnB1I,KAAKk9R,oBAAsBhvR,EAAA,EAAgBxF,GAC3C1I,KAAKm9R,sBAAwBjvR,EAAA,EAAgBxF,GAK9CtI,MAAOuI,GAUN,OATIA,IACHA,EAAS,IAAIq0R,GAEVh9R,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAChEnJ,KAAKwH,OAAQmB,EAAOnB,KAAOxH,KAAKwH,KAAK2B,SACrCnJ,KAAKi9R,YAAat0R,EAAOs0R,UAAY/uR,EAAA,EAAqBlO,KAAKi9R,YAC/Dj9R,KAAKy0R,SAAU9rR,EAAO8rR,OAASz0R,KAAKy0R,OAAOtrR,SAC/CR,EAAOu0R,oBAAsBl9R,KAAKk9R,oBAClCv0R,EAAOw0R,sBAAwBn9R,KAAKm9R,sBAC7Bx0R,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,oBAAoBgtS,EAAmBhtS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qBC1ElFotS,EAKLh9R,YAAaC,GACZA,EAAUA,MACVL,KAAKpD,OAASyD,EAAc,OAAIA,EAAQzD,OAAO,KAC/CoD,KAAK48R,mBAAqBv8R,EAA0B,mBAAIA,EAAQu8R,mBAAmB,KACnF58R,KAAKq9R,OAASh9R,EAAc,OAAIA,EAAQg9R,UAKzCj9R,OAAQuH,GACPuG,EAAA,GAAwBlO,KAAKpD,OAAO+K,GACpCuG,EAAA,GAAwBlO,KAAK48R,mBAAmBj1R,GAChDuG,EAAA,EAAelO,KAAKq9R,OAAO11R,GAK5BvH,OAAQsI,GACP1I,KAAKpD,OAASsR,EAAA,EAAwBxF,GACtC1I,KAAK48R,mBAAqB1uR,EAAA,EAAwBxF,GAClD1I,KAAKq9R,OAASnvR,EAAA,EAAexF,EAAI0I,EAAA,GAKlChR,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIy0R,GAEdz0R,EAAO/L,OAASoD,KAAKpD,OACrB+L,EAAOi0R,mBAAqB58R,KAAK48R,mBAC7B58R,KAAKq9R,SAAU10R,EAAO00R,OAASnvR,EAAA,EAAqBlO,KAAKq9R,SACtD10R,GAKH,SAAA20R,EAA8B50R,GAClC,IAAIsE,EAAM,IAAIowR,EAEb,OADApwR,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,eAAeotS,EAAcptS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBCrDxEutS,EAKLn9R,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAKw9R,gBAAkBn9R,EAAuB,gBAAIA,EAAQm9R,mBAC1Dx9R,KAAKy9R,oBAAsBp9R,EAA2B,oBAAIA,EAAQo9R,uBAKnEr9R,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKe,WAAW4G,GACpCuG,EAAA,EAAelO,KAAKw9R,gBAAgB71R,EAAIuG,EAAA,IACxCA,EAAA,EAAelO,KAAKy9R,oBAAoB91R,GAKzCvH,OAAQsI,GACP1I,KAAKe,WAAamN,EAAA,EAAoBxF,GACtC1I,KAAKw9R,gBAAkBtvR,EAAA,EAAexF,EAAIwF,EAAA,GAC1ClO,KAAKy9R,oBAAsBvvR,EAAA,EAAexF,EAAIuD,EAAA,GAK/C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI40R,GAEd50R,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAO60R,gBAAkBtvR,EAAA,EAAclO,KAAKw9R,iBACxCx9R,KAAKy9R,sBAAuB90R,EAAO80R,oBAAsBvvR,EAAA,EAAqBlO,KAAKy9R,sBAChF90R,GAKH,SAAA+0R,EAA+Bh1R,GACnC,IAAIsE,EAAM,IAAIuwR,EAEb,OADAvwR,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,gBAAgButS,EAAevtS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBC5C1E2tS,EAQLv9R,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK49R,cAAgBv9R,EAAqB,cAAIA,EAAQu9R,iBACtD59R,KAAKy4R,kBAAoBp4R,EAAyB,kBAAIA,EAAQo4R,kBAAkB,KAChFz4R,KAAK69R,eAAiBx9R,EAAsB,eAAIA,EAAQw9R,kBACxD79R,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAC1D/P,KAAK2P,aAAetP,EAAoB,aAAIA,EAAQsP,aAAa,IAAIsD,EAAA,EAKtE7S,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK49R,cAAcj2R,GAClCuG,EAAA,GAAoBlO,KAAKy4R,kBAAkB9wR,GAC3CuG,EAAA,EAAelO,KAAK69R,eAAel2R,GACnCuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GACpC3H,KAAK2P,aAAa1M,OAAO0E,GAK1BvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK49R,cAAgB1vR,EAAA,EAAexF,EAAI40R,GACxCt9R,KAAKy4R,kBAAoBvqR,EAAA,EAAoBxF,GAC7C1I,KAAK69R,eAAiB3vR,EAAA,EAAexF,EAAIg1R,GACzC19R,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAC1CjM,KAAK2P,aAAavM,OAAOsF,GAK1BtI,MAAOuI,GAUN,OATIA,IACHA,EAAS,IAAIg1R,GAEV39R,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK49R,gBAAiBj1R,EAAOi1R,cAAgB1vR,EAAA,EAAqBlO,KAAK49R,gBAC3Ej1R,EAAO8vR,kBAAoBz4R,KAAKy4R,kBAC5Bz4R,KAAK69R,iBAAkBl1R,EAAOk1R,eAAiB3vR,EAAA,EAAqBlO,KAAK69R,iBACzE79R,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBAC3E/P,KAAK2P,eAAgBhH,EAAOgH,aAAe3P,KAAK2P,aAAaxG,SAC1DR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,qBAAqB2tS,EAAoB3tS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC9EpF8tS,EAKL19R,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAK+9R,yBAA2B19R,EAAgC,yBAAIA,EAAQ09R,yBAAyB,KACrG/9R,KAAKy4R,kBAAoBp4R,EAAyB,kBAAIA,EAAQo4R,kBAAkB,KAKjFr4R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAiBlO,KAAK+9R,yBAAyBp2R,GAC/CuG,EAAA,GAAoBlO,KAAKy4R,kBAAkB9wR,GAK5CvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAK+9R,yBAA2B7vR,EAAA,EAAiBxF,GACjD1I,KAAKy4R,kBAAoBvqR,EAAA,EAAoBxF,GAK9CtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIm1R,GAEV99R,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOo1R,yBAA2B/9R,KAAK+9R,yBACvCp1R,EAAO8vR,kBAAoBz4R,KAAKy4R,kBACzB9vR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,mBAAmB8tS,EAAkB9tS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCnDhFguS,EAKL59R,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK49R,cAAgBv9R,EAAqB,cAAIA,EAAQu9R,iBACtD59R,KAAKi+R,yBAA2B59R,EAAgC,yBAAIA,EAAQ49R,yBAAyB,KAKtG79R,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK49R,cAAcj2R,GAClCuG,EAAA,GAAoBlO,KAAKi+R,yBAAyBt2R,GAKnDvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK49R,cAAgB1vR,EAAA,EAAexF,EAAI40R,GACxCt9R,KAAKi+R,yBAA2B/vR,EAAA,EAAoBxF,GAKrDtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIq1R,GAEVh+R,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK49R,gBAAiBj1R,EAAOi1R,cAAgB1vR,EAAA,EAAqBlO,KAAK49R,gBAC3Ej1R,EAAOs1R,yBAA2Bj+R,KAAKi+R,yBAChCt1R,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,oBAAoBguS,EAAmBhuS,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,QCN5E8zC,yEAAZ,SAAYA,GACRA,IAAA,sBACAA,IAAA,qBACAA,IAAA,qBACAA,IAAA,eAJJ,CAAYA,iBA0BNo6P,UAA6B1nQ,EAAA,aAsC/Bp2B,YAAa+9R,GACTt9R,QAk1BEb,KAAAo+R,wBAA0B,WAC5Bp+R,KAAKq+R,iBACLr+R,KAAKq+R,eAAeC,YACpBt+R,KAAKq+R,eAAiB,OAp1BtBr+R,KAAKu+R,4BAA6B,EAClCv+R,KAAKw+R,QAAUL,EACfn+R,KAAKq+R,eAAiB,KACtBr+R,KAAKy+R,SAAU,EAtBnBN,aACI,OAAOn+R,KAAKw+R,QAGhBL,WAAWO,GACP1+R,KAAKw+R,QAAUE,EAInBC,aACI,OAAO3+R,KAAKy+R,QAGhBE,WAAWA,GACP3+R,KAAKy+R,QAAUE,EAgBvBC,eACI,OAAO5+R,KAAKw+R,QAAQI,SAGxBzC,cACI,OAAOn8R,KAAK6+R,SAGhB1C,YAAmB3rS,GACfwP,KAAK6+R,SAAWruS,EAOpB4P,mBAMI,OAJKJ,KAAKq+R,iBACNr+R,KAAKq+R,eAAiB,IAAIS,EAAA,EAAwB9+R,OAG/CA,KAAKq+R,eAGTj+R,+BAA+BiN,GAClC,MAAoB,iBAATA,GAAqBA,aAAgBtQ,EAAA,EACrCmhS,EAAca,yBACjBniS,OAAQyQ,EACRqtB,iBAAiB,EACjBm+P,gBAAiB/0P,EAAgBk7P,QACjClG,cAAe,EACfC,WAAY,MAGhB1rR,EAAKzQ,OAAS5M,OAAA+M,EAAA,EAAA/M,CAAcqd,EAAKzQ,QACjCyQ,EAAKotB,gBAAkBptB,EAAKotB,gBAAkBzqC,OAAA+M,EAAA,EAAA/M,CAAcqd,EAAKotB,iBAAmB,KAC7E,IAAIwkQ,EAAA,EAAiC5xR,IA6DpDjN,OAAO8+R,EAA+E3pQ,GAElFv1B,KAAKm/R,+BAAiCn/R,KAAKm/R,gCAAkC,IAC7EnvS,OAAAkD,EAAA,EAAAlD,CAAOwC,OAAOC,SAASuN,KAAKm/R,iCAC5BnvS,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAExBlgC,MAAM8G,QAAQ+iS,KACTA,GAAUA,IAGpB,IAAI/F,EAAsB+F,EAAOzjQ,IAAIyiQ,EAAca,yBAE/CK,EAAU,IAAIH,EAAA,GACd9F,cAAeA,EACfD,8BAA+Bl5R,KAAKm/R,iCAGxCn/R,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAE1C,IAAIlmS,EAAGc,EAGP,GAAI4lC,EACA,OAAOT,EAASS,EAAK,KAAMw/P,GAK/B,GAFAxlS,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoByJ,EAAA,GAEvBj/R,KAAKm/R,+BAAiC,EAEtC,IAAK7vS,EAAI,EAAGA,EAAIkmS,EAAS1lR,QAAQxa,OAAQhG,KACrCc,EAAIolS,EAAS1lR,QAAQxgB,IAGfopS,YAActoS,EAAEsoS,WAAWpjS,OAAS0K,KAAKm/R,iCAC3CxgS,QAAQC,IAAI,+FACZD,QAAQC,IAAI,+CAAiDoB,KAAKm/R,gCAClExgS,QAAQC,IAAI,eAAiBxO,EAAEsoS,WAAWpjS,OAAS,OAAS6jS,EAAc7pS,GAAGsN,OAAOxD,YACpFuF,QAAQC,IAAI,6BAA8BxO,EAAEqoS,oBAIxD,IAAKnpS,EAAI,EAAGA,EAAIkmS,EAAS1lR,QAAQxa,OAAQhG,KACrCc,EAAIolS,EAAS1lR,QAAQxgB,IACnBopS,WAAatoS,EAAEsoS,eAIrB,IAAKppS,EAAI,EAAGA,EAAIkmS,EAAS1lR,QAAQxa,OAAQhG,IAGT,QAF5Bc,EAAIolS,EAAS1lR,QAAQxgB,IAEfmpS,oBACF95R,QAAQC,IAAI,+IACZD,QAAQC,IAAI,mDAAoDoB,KAAKm/R,gCACrExgS,QAAQC,IAAI,gCAAiCxO,EAAEqoS,oBAGvDljQ,EAAS,KAAMigQ,EAAS1lR,QAAS0lR,EAASzlR,mBAwClD3P,kBAAkB8+R,EACE3pQ,GAEZvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAGjC,IAAIp5B,EAAU9G,MAAM8G,QAAQ+iS,GACvB/iS,IACD+iS,GAA8CA,IAGlD,IAAI/5Q,KAiBI+5Q,EAAOvoQ,QAAQ,SAAUwE,GAC7BhW,EAAY9sB,KAhBhB,SAA2B8iC,GAEvB,MAAoB,iBAATA,GAAqBA,aAAgBp+B,EAAA,EACrC,IAAIuiS,EAAA,GACH1iS,OAAQ5M,OAAA+M,EAAA,EAAA/M,CAAcmrC,GACtBm5P,YAAagL,EAAA,EAA0B5K,MACvC+H,WAAY,KACZ8C,aAAc,IAAI56Q,EAAA,GAAgBC,eAAgB,EAAG/0B,KAAM,UAInEG,OAAAkD,EAAA,EAAAlD,CAAOmrC,aAAgBnrC,QAChB,IAAIsvS,EAAA,EAAyBnkQ,IAIvBqkQ,CAAkBrkQ,MAGvC,IAAIikQ,EAAU,IAAIE,EAAA,GACdn6Q,YAAaA,EACb/V,mBAAoBkwR,EAAA,EAAgCG,UAGxDzvS,OAAAkD,EAAA,EAAAlD,CAAekvS,EAAO5pS,SAAW8pS,EAAQj6Q,YAAY7vB,QAErD0K,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAG1C,GAAIx/P,EACA,OAAOT,EAASS,EAAKw/P,GAEzB,GAAIA,EAASnnR,eAAetF,gBAAkB22R,EAAA,EAAYp9R,KACtD,OAAOizB,EAAS,IAAIp8B,MAAMq8R,EAASnnR,eAAetF,cAAc3P,aAEpEpJ,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoB8J,EAAA,GAC3BtvS,OAAAkD,EAAA,EAAAlD,CAAekvS,EAAO5pS,SAAWkgS,EAAS1lR,QAAQxa,QAElDkgS,EAAS1lR,QAAU0lR,EAAS1lR,YAC5B0lR,EAASzlR,gBAAkBylR,EAASzlR,oBACpC,IAAID,EAAU3T,EAAUq5R,EAAS1lR,QAAU0lR,EAAS1lR,QAAQ,GACxD6vR,EAAUxjS,EAAUq5R,EAASzlR,gBAAkBylR,EAASzlR,gBAAgB,GAE5EwlB,EAAS,KAAMzlB,EAAS6vR,KAqBhCv/R,iBAAiB8+R,EAAOrlR,EAAOC,EAAKyb,GAChCvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GACxBlgC,MAAM8G,QAAQ+iS,KACfA,GAASA,IAGb,IAAI/5Q,KAEJ+5Q,EAAMvoQ,QAAQ,SAAUwE,GACpBhW,EAAY9sB,MACRuE,OAAQ5M,OAAA+M,EAAA,EAAA/M,CAAcmrC,GACtBshQ,WAAY,KACZ8C,cAAe36Q,eAAgB,EAAG/0B,KAAM,MACxC4oS,kBAAmB,SAI3B,IAAI/xP,EAAyB,IAAIk5P,EAAA,GAC7BC,gBAAgB,EAChBrsR,UAAWqG,EACXimR,QAAShmR,EACTimR,iBAAkB,EAClBC,cAAc,IAGdZ,EAAU,IAAIQ,EAAA,GACdz6Q,YAAaA,EACb86Q,mBAAoBv5P,EACpBt3B,mBAAoBkwR,EAAA,EAAgCY,KACpD5G,2BAA2B,IAG/BtpS,OAAAkD,EAAA,EAAAlD,CAAOkvS,EAAM5pS,SAAW8pS,EAAQj6Q,YAAY7vB,QAC5C0K,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,IAEtCx/P,EACOT,EAASS,EAAKw/P,GAGrBA,EAASnnR,eAAetF,gBAAkB22R,EAAA,EAAYp9R,KAC/CizB,EAAS,IAAIp8B,MAAMq8R,EAASnnR,eAAetF,cAAc3P,cAGpEpJ,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoBoK,EAAA,GAC3B5vS,OAAAkD,EAAA,EAAAlD,CAAOkvS,EAAM5pS,SAAWkgS,EAAS1lR,QAAQxa,aAEzCigC,EAAS,KAAMigQ,EAAS1lR,QAAS0lR,EAASzlR,mBAelD3P,MAAM+/R,EAAc5qQ,GAEhBvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAC7BvlC,OAAAkD,EAAA,EAAAlD,CAAOqF,MAAM8G,QAAQgkS,IAErB,IAAIf,EAAU,IAAIgB,EAAA,GAA4BD,aAAcA,IAE5DngS,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,IAGtCx/P,EACOT,EAASS,EAAKw/P,GAErBA,EAASnnR,eAAetF,gBAAkB22R,EAAA,EAAYp9R,KAC/CizB,EAAS,IAAIp8B,MAAMq8R,EAASnnR,eAAetF,cAAc3P,cAEpEpJ,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoB4K,EAAA,GAC3BpwS,OAAAkD,EAAA,EAAAlD,CAAOmwS,EAAa7qS,SAAWkgS,EAAS1lR,QAAQxa,aAChDigC,EAAS,KAAMigQ,EAAS1lR,QAAS0lR,EAASzlR,mBAiBlD3P,gBAAgBxD,EAAiBrM,EAAiBglC,GAE9CvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7B,IAAI4qQ,KAEJA,EAAa9nS,MACTuE,OAAQ5M,OAAA+M,EAAA,EAAA/M,CAAc4M,GACtB03R,YAAagL,EAAA,EAA0B5K,MACvC+H,WAAY,KACZlsS,MAAO,IAAI8vS,EAAA,GAAW9vS,MAAOA,MAEjCyP,KAAKg4R,MAAMmI,EAAc,SAAUnqQ,EAAKsqQ,EAAavwR,GAGjD,GAAIimB,EACA,OAAOT,EAASS,GAGpBhmC,OAAAkD,EAAA,EAAAlD,CAA8B,IAAvBswS,EAAYhrS,QACnB,IAAI2b,EAAiBlB,EAAkBA,EAAgB,GAAK,KAC5DwlB,EAAS,KAAM+qQ,EAAY,GAAIrvR,KAwBvC7Q,kBAAkB8+R,EAAkB3pQ,GAEhCvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GACxBlgC,MAAM8G,QAAQ+iS,KACfA,GAASA,IAIb,IAAI/5Q,KAEJ+5Q,EAAMvoQ,QAAQ,SAAUwE,GACpBnrC,OAAO2rB,KAAK2jR,EAAA,GAA2B3oQ,QAAQ,SAAU9lC,GACrD,IAAIyjS,EAAcgL,EAAA,EAA0BzuS,GAC5Cs0B,EAAY9sB,MACRuE,OAAQ5M,OAAA+M,EAAA,EAAA/M,CAAcmrC,GACtBm5P,YAAaA,EACbmI,WAAY,KACZ8C,cAAe36Q,eAAgB,EAAG/0B,KAAM,YAKpDmQ,KAAKugS,KAAKp7Q,EAAa,SAAU6Q,EAAK7Q,EAAa9K,EAAQtK,GACvDwlB,EAASS,EAAK7Q,EAAa9K,EAAQtK,KAoCpC3P,KAAK+kB,EAAaD,EAASqQ,GAEzBA,IACDA,EAAWrQ,EACXA,EAAS,GAGbl1B,OAAAkD,EAAA,EAAAlD,CAAOqF,MAAM8G,QAAQgpB,IACrBn1B,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAG7BpQ,EAAYwR,QAAQ,SAAUwE,GAC1BA,EAAKv+B,OAAS5M,OAAA+M,EAAA,EAAA/M,CAAcmrC,EAAKv+B,UAGrC,IAAIwiS,EAAU,IAAIE,EAAA,GACdn6Q,YAAaA,EACbD,OAAQA,EACR9V,mBAAoBkwR,EAAA,EAAgCY,OAGxDlgS,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAG1C,GAAIx/P,EACA,OAAOT,EAASS,EAAKw/P,GAEzBxlS,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoB8J,EAAA,GAC3B/pQ,EAAS,KAAMpQ,EAAaqwQ,EAAS1lR,QAAS0lR,EAASzlR,mBAKxD3P,eAAeW,GAIbf,KAAKu+R,6BACNvuS,OAAA+pB,EAAA,EAAA/pB,CAAS,gCACTgQ,KAAKu+R,4BAA6B,EAClCv+R,KAAKqe,KAAK,iBAAiBtd,IAIzBX,gBAAgBogS,EAAaC,EAAcpgS,EAASk1B,GAE1DvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7B,IAAI6pQ,EAAU,IAAIoB,EAAYngS,GAG1B0Z,EAAA,IACAqlR,EAAQsB,OAAQ,IAAIvnS,OAAQqM,OAGhCxF,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAG1C,GAAIx/P,EAAK,CAEL,GAAIA,EAAInxB,QAAQkW,MAAM,oBAAqB,CAIvC,IAAI7f,EAAM,IAAIpC,KACd9I,OAAA+pB,EAAA,EAAA/pB,CAAU,mCACVA,OAAA+pB,EAAA,EAAA/pB,CAAU,8BAAgCgQ,KAAK6+R,UAC/C7uS,OAAA+pB,EAAA,EAAA/pB,CAAU,8BAAgC,IAAI8I,KAAKkH,KAAK2gS,qBAAqBC,eAAsB1lS,EAAM8E,KAAK2gS,sBAC9G3wS,OAAA+pB,EAAA,EAAA/pB,CAAU,8BAAgC,IAAI8I,KAAKkH,KAAK47R,0BAA0BgF,eAAsB1lS,EAAM8E,KAAK47R,2BAEnH57R,KAAKo+R,0BAKLp+R,KAAK6gS,eAAenB,EAAA,EAAY33Q,kBAIpC,OAAOwN,EAASS,EAAKw/P,GAEzBxlS,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoBiL,GAC3BlrQ,EAAS,KAAMigQ,KA0BvBp1R,mBAAmBC,EAAsCk1B,GAErDvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7B,IAAI6pQ,EAAU,IAAI0B,EAAA,EAA+CzgS,GAEjEL,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAG1C,GAAIx/P,EACA,OAAOT,EAASS,EAAKw/P,GAEzBxlS,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoBsL,EAAA,GAC3BvrQ,EAAS,KAAMigQ,KAgBvBp1R,oBAAoBC,EAAuCk1B,GACvDv1B,KAAK+gS,gBACDD,EAAA,EACAA,EAAA,EACAzgS,EAASk1B,GAYjBn1B,sBAAsBC,EAAuCk1B,GACzDv1B,KAAK+gS,gBACDD,EAAA,EACAA,EAAA,EACAzgS,EAASk1B,GAYVn1B,qBAAqBC,EAAwCk1B,GAChEv1B,KAAK+gS,gBACDD,EAAA,EACAA,EAAA,EACAzgS,EAASk1B,GAYVn1B,qBAAqBC,EAAuCk1B,GAC/Dv1B,KAAK+gS,gBACDD,EAAA,EACAA,EAAA,EACAzgS,EAASk1B,GAYVn1B,mBAAmBC,EAASk1B,GAC/Bv1B,KAAK+gS,gBACDD,EAAA,EACAA,EAAA,EACAzgS,EAASk1B,GAGVn1B,kBAAkBC,EAASk1B,GAC9Bv1B,KAAK+gS,gBACDD,EAAA,EACAA,EAAA,EACAzgS,EAASk1B,GAYVn1B,QAAQC,EAA0Bk1B,GACrCv1B,KAAK+gS,gBACDD,EAAA,EACAA,EAAA,EACAzgS,EAASk1B,GAYVn1B,UAAUC,EAA4Bk1B,GACzCv1B,KAAK+gS,gBACDD,EAAA,EACAA,EAAA,EACAzgS,EAASk1B,GAWVn1B,qBAAqBC,EAAwCk1B,GAChEv1B,KAAK+gS,gBACDD,EAAA,EACAA,EAAA,EACAzgS,EAASk1B,GAYVn1B,kBAAkB4N,EAA6BmE,EAAmCojB,GACrFvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAC7BvlC,OAAAkD,EAAA,EAAAlD,EAA6B,IAAtBge,IAAoD,IAAtBA,GAChC3Y,MAAM8G,QAAQgW,KACfniB,OAAAkD,EAAA,EAAAlD,CAAkC,iBAApBmiB,GACdA,GAAmBA,IAGvB,IAAIitR,EAAU,IAAI0B,EAAA,GACd9yR,kBAAmBA,EACnBmE,gBAAiBA,IAGrBnS,KAAKq/R,0BAA0BD,EAAS,SAAUppQ,EAAKw/P,GAGnD,GAAIx/P,EACA,OAAOT,EAASS,EAAK,MAGzBT,EAASS,EAAKw/P,EAAS1lR,WAiBxB1P,oBAAoBo7B,EAA4EjG,GACnGvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7B,IAAIyrQ,GAAsB3rS,MAAM8G,QAAQq/B,GACxCA,EAAawlQ,GAAoDxlQ,GAA8CA,EAE/G,IAAI4jQ,EAAU,IAAI6B,EAAA,GACdtlQ,YAAaH,IAGjBx7B,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAG1C,GAAIx/P,EACA,OAAOT,EAASS,EAAKw/P,GAEzBxlS,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoByL,EAAA,GAC3B1rQ,EAAS,KAAMyrQ,EAAqBxL,EAAS1lR,QAAQ,GAAK0lR,EAAS1lR,WAMpE1P,iBAEH,OADApQ,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKw+R,SACLx+R,KAAKw+R,QAAQ0C,eAAiBlhS,KAAKw+R,QAAQ0C,cAAcC,WAG7D/gS,0BAA0Bg/R,EAAS7pQ,GAKtC,GAHAvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAC7BvlC,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKw+R,UAEPx+R,KAAKohS,iBAGN,OADAziS,QAAQC,IAAI,iFACL22B,EAAS,IAAIp8B,MAAM,qBAE9BimS,EAAQzxR,cAAcxF,oBAAsBnI,KAAKmI,oBAEjDnI,KAAK2gS,oBAAsB7nS,KAAKoC,MAEhC8E,KAAKw+R,QAAQa,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAKlD,GAHAx1R,KAAK47R,yBAA2B9iS,KAAKoC,MAGjC86B,EACA,OAAOT,EAASS,EAAKw/P,GAGrBA,EAASnnR,eAAetF,gBAAkB22R,EAAA,EAAYp9R,OACtD0zB,EAAM,IAAI78B,MAAM,qBAAuBq8R,EAASnnR,eAAetF,cAAc3P,aAEjFm8B,EAASS,EAAKw/P,KAkBfp1R,MAAMihS,GAA+B,EAAK9rQ,GAEpB,IAArB9uB,UAAUnR,SACVigC,EAAW8rQ,EACXA,GAAqB,GAEzBrxS,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7BvlC,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKw+R,SAEZx+R,KAAKo+R,0BACLp+R,KAAKw+R,QAAQ8C,aAAathS,KAAKqhS,EAAmB9rQ,GAQ/Cn1B,gBACH,OAAO/C,EAAA,EAAwB2C,KAAKw+R,UAAYx+R,KAAKy+R,QAiClDr+R,KAAKmhS,EAAqChsQ,GAE7CvlC,OAAAkD,EAAA,EAAAlD,CAAOqF,MAAM8G,QAAQolS,IAQrB,IAAInC,EAAU,IAAIoC,EAAA,GAA0BD,cAAeA,IAE3DvhS,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAG1C,GAAIx/P,EACA,OAAOT,EAASS,GAGpBhmC,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoBgM,EAAA,GAC3BjsQ,EAAS,KAAMigQ,EAAS1lR,WAgBzB1P,kBAAkBkO,EAAyBinB,GAK9C,IACIgsQ,EACA,IAAI15P,EAAA,GACA45P,SAAUzxS,OAAA+M,EAAA,EAAA/M,CAAa,eACvB0xS,SAAU1xS,OAAA+M,EAAA,EAAA/M,CAAa,gBACvB2xS,gBAEI,IAAIvwR,EAAA,GAASyD,SAAUwO,EAAA,EAASI,OAAQlzB,MAAO+d,OAPhDtO,KAWNvQ,MAAM8xS,GAAgB,CAACvrQ,EAAK3b,EAAQpJ,KAGjC,GAAI+kB,EACA,OAAOT,EAASS,GAGpB,IAAIigQ,EAAM57Q,EAAO,GAKjB,GAJApJ,EAAiBA,EAAiBA,EAAe,GAAK,KAIlDglR,EAAIl1R,aAAe2+R,EAAA,EAAYp9R,KAE/BizB,EAAS,IAAIp8B,MAAM88R,EAAIl1R,WAAW3H,YAAaihB,EAAQpJ,OAEpD,CAEHjhB,OAAAkD,EAAA,EAAAlD,CAAsC,IAA/BimS,EAAI2L,gBAAgBtsS,QAC3B,IAAI+X,GACAw0R,cAAe5L,EAAI2L,gBAAgB,GAAGrxS,MACtCuxS,cAAe7L,EAAI2L,gBAAgB,GAAGrxS,OAK1C8c,EAAKw0R,cAAgBx0R,EAAKw0R,eAAiB3D,EAAc6D,iBACzD10R,EAAKy0R,cAAgBz0R,EAAKy0R,eAAiB5D,EAAc6D,iBAEzD/xS,OAAAkD,EAAA,EAAAlD,CAAOqd,EAAKw0R,yBAAyBn+Q,aACrC1zB,OAAAkD,EAAA,EAAAlD,CAAOqd,EAAKy0R,yBAAyBp+Q,aACrC6R,EAAS,KAAMloB,EAAM4D,MAgB9B7Q,sBAAsBshS,EAAmBnsQ,GAE5CvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAC7BvlC,OAAAkD,EAAA,EAAAlD,CAAO0xS,aAAoB3kS,EAAA,GAE3B,IAAIilS,IACAplS,OAAQ8kS,EACRjnQ,gBAAiBzqC,OAAA+M,EAAA,EAAA/M,CAAc,eAC/B6oS,gBAAiB/0P,EAAgBk7P,QACjClG,cAAe/5P,EAAA,EAAUkjQ,SACzBvnQ,iBAAiB,EACjBq+P,WAAYkG,EAAA,EAAgCiD,aAIhDliS,KAAKmiS,OAAOH,EAAmB,CAAChsQ,EAAKlmB,KAGjC,GAAIkmB,EACA,OAAOT,EAASS,GAEpBlmB,EAAQ,GAAG4oR,WAAa5oR,EAAQ,GAAG4oR,eAGnC,IAAI0J,EAAmBtyR,EAAQ,GAAG4oR,WAAWjE,OAAO,SAAUrkS,GAC1D,MAA6B,mBAAtBA,EAAE0Z,WAAWja,OAIxBuyS,EAAgD,IAA5BA,EAAiB9sS,OAAsB8sS,EAAiB,GAAK,KAEjF,IAAIC,EAAoBvyR,EAAQ,GAAG4oR,WAAWjE,OAAO,SAAUrkS,GAC3D,MAA6B,oBAAtBA,EAAE0Z,WAAWja,OAIxBwyS,EAAkD,IAA7BA,EAAkB/sS,OAAsB+sS,EAAkB,GAAK,KAKpF,IAAIV,KAAqBC,KAErBz8Q,KACAm9Q,KAiBJ,GAfGF,IACCj9Q,EAAY9sB,MACRuE,OAAoCwlS,EAAkBxlS,OACtD03R,YAAagL,EAAA,EAA0B5K,QAE3C4N,EAAQjqS,KAAK,SAASgiB,GAAUsnR,EAAiBtnR,EAAO9pB,MAAMA,SAE/D8xS,IACCl9Q,EAAY9sB,MACRuE,OAAoCylS,EAAmBzlS,OACnD03R,YAAagL,EAAA,EAA0B5K,QAE/C4N,EAAQjqS,KAAK,SAASgiB,GAAUunR,EAAkBvnR,EAAO9pB,MAAMA,SAGxC,IAAvB40B,EAAY7vB,OACZ,OAAOigC,EAAS,KAAMosQ,EAAgBC,GAG1C5hS,KAAKugS,KAAKp7Q,EAAY,CAAC6Q,EAAKusQ,EAAoBzyR,KAG5C,GAAIkmB,EACA,OAAOT,EAASS,GAGpBlmB,EAAQ6mB,QAAQ,SAAStc,EAAOmoR,GAAQF,EAAQE,GAAO/yS,KAAK,KAAK4qB,KAGjEkb,EAAS,KAAMosQ,EAAgBC,OAepCxhS,WAAWqiS,EAAkBltQ,GAChCvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7B,IAAI6pQ,EAAU,IAAIpC,EAAgCyF,GAElDziS,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAE1C,GAAIx/P,EACA,OAAOT,EAASS,GAEpBhmC,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoBmI,GAC3BpoQ,EAAS,KAAMigQ,EAAS1lR,WAIzB1P,wBACHpQ,OAAAkD,EAAA,EAAAlD,EAAQgQ,KAAK0iS,kBAAkB,mCAC/B1iS,KAAK0iS,kBAAoB,IAAIjH,EAA8Bz7R,MAG3DA,KAAK0iS,kBAAkB9jR,GAAG,UAAU,KAChC5e,KAAK2iS,uBAML3iS,KAAKqe,KAAK,uBAEdre,KAAK0iS,kBAAkB9jR,GAAG,YAAY,SAASgkR,GAI3C5iS,KAAKqe,KAAK,YAAYukR,KAE1B5iS,KAAK0iS,kBAAkB7oR,QAGpBzZ,uBACCJ,KAAK0iS,oBACL1iS,KAAK0iS,kBAAkB1G,OACvBh8R,KAAK0iS,kBAAoB,MAI1BtiS,UACHpQ,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKu+R,4BACZv+R,KAAKo+R,0BACLp+R,KAAK2iS,uBACL3iS,KAAK6e,qBAGFze,WAEH,IAAIlF,EAAMpC,KAAKoC,MAEfyD,QAAQC,IAAK,8BAA8BoB,KAAKnQ,MAChD8O,QAAQC,IAAK,8BAA8BoB,KAAK6iS,WAChDlkS,QAAQC,IAAK,8BAA8BoB,KAAKmI,qBAChDxJ,QAAQC,IAAK,8BAA8BoB,KAAK6+R,UAChDlgS,QAAQC,IAAK,8BAA8BoB,KAAK2Y,YAAYvf,SAAS,QACrEuF,QAAQC,IAAK,8BAA8BoB,KAAK8iS,kBAAkB1pS,SAAS,WAC3EuF,QAAQC,IAAK,8BAA8BoB,KAAK+iS,iBAChDpkS,QAAQC,IAAK,8BAA8B,IAAI9F,KAAKkH,KAAK2gS,qBAAqBC,cAAe1lS,EAAM8E,KAAK2gS,qBACxGhiS,QAAQC,IAAK,8BAA8B,IAAI9F,KAAKkH,KAAK47R,0BAA0BgF,cAAe1lS,EAAM8E,KAAK47R,0BAGvGx7R,oBAAoBk1R,EAAQ0N,EAAWztQ,GAI7C,GAFAvlC,OAAAkD,EAAA,EAAAlD,CAAOgzS,aAAsBjmS,EAAA,GAEzBimS,EAAWzyS,OAAQ,GAAI,CAEvB,IAAIskB,EAAWwO,EAAA,EAAS2/Q,EAAWzyS,OACnCglC,EAAS,KAAK1gB,OACX,CAGH,IAAIouR,EAAe,IAAIhE,EAAA,GACnBxkQ,gBAAiBzqC,OAAA+M,EAAA,EAAA/M,CAAW6P,EAAA,EAAiBiwC,YAC7CpV,iBAAiB,EACjBm+P,gBAAiB/0P,EAAgBo/P,QACjCtmS,OAAQomS,EACRjK,WAAYkG,EAAA,EAAgCkE,kBAGhD7N,EAAQ6M,QAAQc,GAAc,SAASjtQ,EAAIlmB,GACvC,IAAIuK,EAASvK,EAAQ,GACrB,GAAIkmB,EAAK,OAAOT,EAASS,GACzB,IAAIotQ,EAAe/oR,EAAOq+Q,WAAW,GAAG97R,OACxC,OAAOoD,KAAKqjS,oBAAoB/N,EAAQ8N,EAAa7tQ,MA2B1Dn1B,mBAAmBxD,EAAO24B,GAE7B,IAAIytQ,EAAa,KAEb1N,EAAUt1R,KACVsjS,IAEI1mS,OAAQA,EACR03R,YAAaz0R,EAAA,EAAakI,WAGlCutR,EAAQiL,KAAK+C,EAAe,EAAG,CAACttQ,EAAIstQ,EAAcC,IAC1CvtQ,EAAYT,EAASS,GACrButQ,EAAW,GAAGxiS,aAAe2+R,EAAA,EAAYp9R,KAClCizB,EAAS,IAAIp8B,MAAM,kCAAoCoqS,EAAW,GAAGxiS,WAAW3H,cAE3F4pS,EAAaO,EAAW,GAAGhzS,MAAMA,MACjCP,OAAAkD,EAAA,EAAAlD,CAAOgzS,aAAsBjmS,EAAA,QAC7BiD,KAAKqjS,oBAAoB/N,EAAQ0N,EAAWztQ,KAK7Cn1B,sBAECJ,KAAKq+R,eAAemF,kBAAkB,GACtCxjS,KAAKq+R,eAAeoF,mCArvCPvF,EAAA6D,iBAAmB,IAAIr+Q,YAAY,iCC9GxD,IAAYggR,kCAAZ,SAAYA,GACRA,IAAA,mBACAA,IAAA,yBACAA,IAAA,2BACAA,IAAA,6BACAA,IAAA,6BACAA,IAAA,yBACAA,IAAA,iCACAA,IAAA,2BACAA,IAAA,yBACAA,IAAA,8BACAA,IAAA,sCACAA,IAAA,kCACAA,IAAA,kBACAA,IAAA,wBACAA,IAAA,0BACAA,IAAA,sCACAA,IAAA,8BACAA,IAAA,sCACAA,IAAA,sDACAA,IAAA,8BACAA,IAAA,4BACAA,IAAA,oCACAA,IAAA,uBAvBJ,CAAYA,oPCWN,SAAAC,EAAuB1sR,EAAkBtlB,EAAqBiyS,GAEhE,GAAY,OAAR3sR,EAOJ,GAHAjnB,OAAAsW,EAAA,EAAAtW,CAAOqF,MAAM8G,QAAQ8a,IACrBtlB,EAAOoC,UAAUkjB,EAAI3hB,QAEjBsuS,EACA,IAAK,IAAIt0S,EAAI,EAAGA,EAAI2nB,EAAI3hB,SAAUhG,EAC9Bs0S,EAAoB3sR,EAAI3nB,GAAIqC,QAGhC,IAASrC,EAAI,EAAGA,EAAG2nB,EAAI3hB,SAAUhG,EAC7B2nB,EAAI3nB,GAAG2T,OAAOtR,QAZlBA,EAAOoC,UAAU,YAsBnB,SAAA8vS,EAAuBlyS,EAAqBmyS,GAG9C,IAAIxuS,EAAS3D,EAAOgC,WACpB,IAAgB,IAAZ2B,EACA,OAAO,KAIX,IADA,IAAI2hB,KACK3nB,EAAI,EAAGA,EAAIgG,EAAQhG,IACxB2nB,EAAI5e,KAAKyrS,EAAoBnyS,IAGjC,OAAOslB,EAKL,SAAA8sR,EAAsB9sR,GACxB,IAAItP,KAEJ,GAAIsP,GAAOA,EAAI3hB,OAAS,EACpB,IAAK,IAAI0uS,KAAS/sR,EACdtP,EAAItP,KAAK2rS,GAIjB,OAAOr8R,EAGL,SAAAs8R,EAA4BhtR,GAC9B,IAAItP,KAEJ,GAAIsP,GAAOA,EAAI3hB,OAAS,EACpB,IAAK,IAAI0uS,KAAS/sR,EACdtP,EAAItP,KAAK2rS,EAAK76R,SAItB,OAAOxB,EAIL,SAAAu8R,EAAmJC,GACrJ,IAAIzoS,EAAe,EACnB,IAAK,IAAI8H,KAAM2gS,EACXzoS,GAAO8H,EAAGlO,OAGd,IAAIgH,EAAM,IAAU6nS,EAAO,GAAGrhS,YAAapH,GACvCxB,EAAS,EACb,IAAK,IAAIsJ,KAAM2gS,EACX7nS,EAAIoF,IAAI8B,EAAGtJ,GACXA,GAAUsJ,EAAGlO,OAEjB,OAAOgH,EAGL,SAAA8nS,EAA6BD,GAC/B,GAAqB,GAAjBA,EAAO7uS,OACP,OAAO6uS,EAAO,GAElB,IAAIzoS,EAAe,EACnB,IAAK,IAAI8H,KAAM2gS,EACXzoS,GAAO8H,EAAGkE,WAGd,IAAIpL,EAAM,IAAIV,WAAWF,GAErBxB,EAAS,EACb,IAAK,IAAIsJ,KAAM2gS,EACX7nS,EAAIoF,IAAI,IAAI9F,WAAW4H,GAAItJ,GAC3BA,GAAUsJ,EAAGkE,WAEjB,OAAOpL,EAAIga,6IC7FTxH,EAML1O,YAAaC,GACZA,EAAUA,MACVL,KAAKpD,OAASyD,EAAc,OAAIA,EAAQzD,OAAO,KAC/CoD,KAAKs0R,YAAcj0R,EAAmB,YAAIA,EAAQi0R,YAAY,KAC9Dt0R,KAAKy8R,WAAap8R,EAAkB,WAAIA,EAAQo8R,WAAW,KAC3Dz8R,KAAKu/R,aAAel/R,EAAoB,aAAIA,EAAQk/R,aAAa,IAAI8E,EAAA,EAKtEjkS,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKpD,OAAO+K,GAC5Bc,EAAA,GAAgBzI,KAAKs0R,YAAY3sR,GACjCc,EAAA,GAAgBzI,KAAKy8R,WAAW90R,GAChC3H,KAAKu/R,aAAat8R,OAAO0E,GAK1BvH,OAAQsI,GACP1I,KAAKpD,OAAS6L,EAAA,EAAgBC,GAC9B1I,KAAKs0R,YAAc7rR,EAAA,EAAgBC,GACnC1I,KAAKy8R,WAAah0R,EAAA,EAAgBC,GAClC1I,KAAKu/R,aAAan8R,OAAOsF,GAK1BtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAImG,GAEdnG,EAAO/L,OAASoD,KAAKpD,OACrB+L,EAAO2rR,YAAct0R,KAAKs0R,YAC1B3rR,EAAO8zR,WAAaz8R,KAAKy8R,WACrBz8R,KAAKu/R,eAAgB52R,EAAO42R,aAAev/R,KAAKu/R,aAAap2R,SAC1DR,GAKH,SAAA27R,EAA6B57R,GACjC,IAAIsE,EAAM,IAAI8B,EAEb,OADA9B,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAoZ,EAAA,EAAApZ,CAA0B,cAAc8e,EAAa9e,OAAAqZ,EAAA,EAAArZ,CAAmB,IAAI,yIC1DtE63C,EAKLznC,YAAaC,GACZA,EAAUA,MACVL,KAAKyhS,SAAWphS,EAAgB,SAAIA,EAAQohS,SAAS,KACrDzhS,KAAK0hS,SAAWrhS,EAAgB,SAAIA,EAAQqhS,SAAS,KACrD1hS,KAAK2hS,eAAiBthS,EAAsB,eAAIA,EAAQshS,kBAKzDvhS,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKyhS,SAAS95R,GAC9Bc,EAAA,GAAgBzI,KAAK0hS,SAAS/5R,GAC9Bc,EAAA,EAAezI,KAAK2hS,eAAeh6R,GAKpCvH,OAAQsI,GACP1I,KAAKyhS,SAAWh5R,EAAA,EAAgBC,GAChC1I,KAAK0hS,SAAWj5R,EAAA,EAAgBC,GAChC1I,KAAK2hS,eAAiBl5R,EAAA,EAAeC,EAAI67R,EAAA,GAK1CnkS,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIk/B,GAEdl/B,EAAO84R,SAAWzhS,KAAKyhS,SACvB94R,EAAO+4R,SAAW1hS,KAAK0hS,SACnB1hS,KAAK2hS,iBAAkBh5R,EAAOg5R,eAAiBl5R,EAAA,EAAqBzI,KAAK2hS,iBACtEh5R,GAKH,SAAA67R,EAAmC97R,GACvC,IAAIsE,EAAM,IAAI66B,EAEb,OADA76B,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAoZ,EAAA,EAAApZ,CAA0B,oBAAoB63C,EAAmB73C,OAAAqZ,EAAA,EAAArZ,CAAmB,IAAI,yJC9ClFwwC,EAULpgC,YAAaC,GACZA,EAAUA,MACVL,KAAKg9B,YAAc38B,EAAmB,YAAIA,EAAQ28B,YAAY,KAC9Dh9B,KAAKykS,OAASpkS,EAAc,OAAIA,EAAQokS,OAAO,IAAIC,EAAA,EACnD1kS,KAAK8iS,kBAAoBziS,EAAyB,kBAAIA,EAAQyiS,kBAAkB,KAChF9iS,KAAKmY,aAAe9X,EAAoB,aAAIA,EAAQ8X,aAAa,KACjEnY,KAAKgZ,kBAAoB3Y,EAAyB,kBAAIA,EAAQ2Y,kBAAkB,KAChFhZ,KAAK2kS,mBAAqBtkS,EAA0B,mBAAIA,EAAQskS,sBAChE3kS,KAAK4kS,oBAAsBvkS,EAA2B,oBAAIA,EAAQukS,oBAAoB,KACtF5kS,KAAK6kS,cAAgBxkS,EAAqB,cAAIA,EAAQwkS,cAAc,KAKrEzkS,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKg9B,YAAYr1B,GACjC3H,KAAKykS,OAAOxhS,OAAO0E,GACnBc,EAAA,GAAoBzI,KAAK8iS,kBAAkBn7R,GAC3C3X,OAAA80S,EAAA,EAAA90S,CAA0BgQ,KAAKmY,aAAaxQ,GAC5Cc,EAAA,GAAgBzI,KAAKgZ,kBAAkBrR,GACvCc,EAAA,EAAezI,KAAK2kS,mBAAmBh9R,GACvCc,EAAA,GAAgBzI,KAAK4kS,oBAAoBj9R,GACzCc,EAAA,GAAczI,KAAK6kS,cAAcl9R,GAKlCvH,OAAQsI,GACP1I,KAAKg9B,YAAcv0B,EAAA,EAAgBC,GACnC1I,KAAKykS,OAAOrhS,OAAOsF,GACnB1I,KAAK8iS,kBAAoBr6R,EAAA,EAAoBC,GAC7C1I,KAAKmY,aAAenoB,OAAA80S,EAAA,EAAA90S,CAA0B0Y,GAC9C1I,KAAKgZ,kBAAoBvQ,EAAA,EAAgBC,GACzC1I,KAAK2kS,mBAAqBl8R,EAAA,EAAeC,EAAIq8R,EAAA,GAC7C/kS,KAAK4kS,oBAAsBn8R,EAAA,EAAgBC,GAC3C1I,KAAK6kS,cAAgBp8R,EAAA,EAAcC,GAKpCtI,MAAOuI,GAYN,OAXIA,IACHA,EAAS,IAAI63B,GAEd73B,EAAOq0B,YAAch9B,KAAKg9B,YACtBh9B,KAAKykS,SAAU97R,EAAO87R,OAASzkS,KAAKykS,OAAOt7R,SAC/CR,EAAOm6R,kBAAoB9iS,KAAK8iS,kBAChCn6R,EAAOwP,aAAenY,KAAKmY,aAC3BxP,EAAOqQ,kBAAoBhZ,KAAKgZ,kBAC5BhZ,KAAK2kS,qBAAsBh8R,EAAOg8R,mBAAqBl8R,EAAA,EAAqBzI,KAAK2kS,qBACrFh8R,EAAOi8R,oBAAsB5kS,KAAK4kS,oBAClCj8R,EAAOk8R,cAAgB7kS,KAAK6kS,cACrBl8R,GAKH,SAAAq8R,EAAqCt8R,GACzC,IAAIsE,EAAM,IAAIwzB,EAEb,OADAxzB,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAi1S,EAAA,EAAAj1S,CAA0B,sBAAsBwwC,EAAqBxwC,OAAAk1S,EAAA,EAAAl1S,CAAmB,IAAI,iHCpFtFijB,EAIL7S,YAAaC,GACZA,EAAUA,MACVL,KAAKmlS,eAAiB9kS,EAAsB,eAAIA,EAAQ8kS,kBACxDnlS,KAAKolS,uBAAyB/kS,EAA8B,uBAAIA,EAAQ+kS,0BAKzEhlS,OAAQuH,GACP09R,EAAA,EAAerlS,KAAKmlS,eAAex9R,GACnC09R,EAAA,EAAerlS,KAAKolS,uBAAuBz9R,GAK5CvH,OAAQsI,GACP1I,KAAKmlS,eAAiBE,EAAA,EAAe38R,EAAI48R,EAAA,GACzCtlS,KAAKolS,uBAAyBC,EAAA,EAAe38R,EAAIO,EAAA,GAKlD7I,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIsK,GAEVjT,KAAKmlS,iBAAkBx8R,EAAOw8R,eAAiBE,EAAA,EAAqBrlS,KAAKmlS,iBACzEnlS,KAAKolS,yBAA0Bz8R,EAAOy8R,uBAAyBC,EAAA,EAAqBrlS,KAAKolS,yBACtFz8R,GAgBT3Y,OAAAmiS,EAAA,EAAAniS,CAA0B,sBAAsBijB,EAAqBjjB,OAAAoiS,EAAA,EAAApiS,CAAmB,IAAI,iGCjDtF4jB,EAOLxT,YAAaC,GACZA,EAAUA,MACVL,KAAKulS,8BAAgCllS,EAAqC,8BAAIA,EAAQklS,8BAA8B,KACpHvlS,KAAKwlS,oBAAsBnlS,EAA2B,oBAAIA,EAAQmlS,oBAAoB,KACtFxlS,KAAKylS,eAAiBplS,EAAsB,eAAIA,EAAQolS,eAAe,KACvEzlS,KAAK0lS,gBAAkBrlS,EAAuB,gBAAIA,EAAQqlS,gBAAgB,KAC1E1lS,KAAK2lS,uBAAyBtlS,EAA8B,uBAAIA,EAAQslS,uBAAuB,KAKhGvlS,OAAQuH,GACPc,EAAA,GAAiBzI,KAAKulS,8BAA8B59R,GACpDc,EAAA,GAAiBzI,KAAKwlS,oBAAoB79R,GAC1Cc,EAAA,GAAczI,KAAKylS,eAAe99R,GAClCc,EAAA,GAAczI,KAAK0lS,gBAAgB/9R,GACnCc,EAAA,GAAiBzI,KAAK2lS,uBAAuBh+R,GAK9CvH,OAAQsI,GACP1I,KAAKulS,8BAAgC98R,EAAA,EAAiBC,GACtD1I,KAAKwlS,oBAAsB/8R,EAAA,EAAiBC,GAC5C1I,KAAKylS,eAAiBh9R,EAAA,EAAcC,GACpC1I,KAAK0lS,gBAAkBj9R,EAAA,EAAcC,GACrC1I,KAAK2lS,uBAAyBl9R,EAAA,EAAiBC,GAKhDtI,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAIiL,GAEdjL,EAAO48R,8BAAgCvlS,KAAKulS,8BAC5C58R,EAAO68R,oBAAsBxlS,KAAKwlS,oBAClC78R,EAAO88R,eAAiBzlS,KAAKylS,eAC7B98R,EAAO+8R,gBAAkB1lS,KAAK0lS,gBAC9B/8R,EAAOg9R,uBAAyB3lS,KAAK2lS,uBAC9Bh9R,GAgBT3Y,OAAA4Y,EAAA,EAAA5Y,CAA0B,yBAAyB4jB,EAAwB5jB,OAAA6Y,EAAA,EAAA7Y,CAAmB,IAAI,iGChE5FwyC,EAMLpiC,YAAaC,GACZA,EAAUA,MACVL,KAAK4lS,UAAYvlS,EAAiB,UAAIA,EAAQulS,UAAU,KACxD5lS,KAAKoZ,QAAU/Y,EAAe,QAAIA,EAAQ+Y,QAAQ,KAClDpZ,KAAK0Z,UAAYrZ,EAAiB,UAAIA,EAAQqZ,UAAU,KACxD1Z,KAAK2Z,gBAAkBtZ,EAAuB,gBAAIA,EAAQsZ,gBAAgB,KAK3EvZ,OAAQuH,GACPc,EAAA,GAAgBzI,KAAK4lS,UAAUj+R,GAC/Bc,EAAA,GAAgBzI,KAAKoZ,QAAQzR,GAC7Bc,EAAA,GAAkBzI,KAAK0Z,UAAU/R,GACjCc,EAAA,GAAgBzI,KAAK2Z,gBAAgBhS,GAKtCvH,OAAQsI,GACP1I,KAAK4lS,UAAYn9R,EAAA,EAAgBC,GACjC1I,KAAKoZ,QAAU3Q,EAAA,EAAgBC,GAC/B1I,KAAK0Z,UAAYjR,EAAA,EAAkBC,GACnC1I,KAAK2Z,gBAAkBlR,EAAA,EAAgBC,GAKxCtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAI65B,GAEd75B,EAAOi9R,UAAY5lS,KAAK4lS,UACxBj9R,EAAOyQ,QAAUpZ,KAAKoZ,QACtBzQ,EAAO+Q,UAAY1Z,KAAK0Z,UACxB/Q,EAAOgR,gBAAkB3Z,KAAK2Z,gBACvBhR,GAgBT3Y,OAAA4Y,EAAA,EAAA5Y,CAA0B,uBAAuBwyC,EAAsBxyC,OAAA6Y,EAAA,EAAA7Y,CAAmB,IAAI,yICzDxF8qC,EAML16B,YAAaC,GACZA,EAAUA,MACVL,KAAKy6B,gBAAkBp6B,EAAuB,gBAAIA,EAAQo6B,gBAAgB,KAC1Ez6B,KAAK26B,UAAYt6B,EAAiB,UAAIA,EAAQs6B,UAAU,KACxD36B,KAAK06B,gBAAkBr6B,EAAuB,gBAAIA,EAAQq6B,gBAAgB,KAC1E16B,KAAK+6B,WAAa16B,EAAkB,WAAIA,EAAQ06B,WAAW,IAAIspQ,EAAA,EAKhEjkS,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKy6B,gBAAgB9yB,GACrCc,EAAA,GAAiBzI,KAAK26B,UAAUhzB,GAChCc,EAAA,GAAiBzI,KAAK06B,gBAAgB/yB,GACtC3H,KAAK+6B,WAAW93B,OAAO0E,GAKxBvH,OAAQsI,GACP1I,KAAKy6B,gBAAkBhyB,EAAA,EAAgBC,GACvC1I,KAAK26B,UAAYlyB,EAAA,EAAiBC,GAClC1I,KAAK06B,gBAAkBjyB,EAAA,EAAiBC,GACxC1I,KAAK+6B,WAAW33B,OAAOsF,GAKxBtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAImyB,GAEdnyB,EAAO8xB,gBAAkBz6B,KAAKy6B,gBAC9B9xB,EAAOgyB,UAAY36B,KAAK26B,UACxBhyB,EAAO+xB,gBAAkB16B,KAAK06B,gBAC1B16B,KAAK+6B,aAAcpyB,EAAOoyB,WAAa/6B,KAAK+6B,WAAW5xB,SACpDR,GAKH,SAAAk9R,EAAqCn9R,GACzC,IAAIsE,EAAM,IAAI8tB,EAEb,OADA9tB,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAoZ,EAAA,EAAApZ,CAA0B,sBAAsB8qC,EAAqB9qC,OAAAqZ,EAAA,EAAArZ,CAAmB,IAAI,qNCxDxFmyC,EAAsB2jQ,EAAA,EACtB1jQ,EAAuB0jQ,EAAA,EAWvB7jQ,EAAqB8jQ,EAAA,EACrB7jQ,EAAsB6jQ,EAAA,EAG1B,SAAA/+R,EAAkB3V,GACV20S,EAAA,GACAC,EAAA,MAAU50S,GAclB,IAAI60S,GACAC,SAAc,IACdC,aAAc,IACdC,SAAc,IACdC,oBAAqB,UAwDnBC,UAA+BC,EAAA,aAiHjCpmS,YAAYC,GACRQ,QA1FUb,KAAAymS,SAAY,IAAIC,EAAA,EA4F1BrmS,EAAUA,MAeVL,KAAK2mS,aAAe,IAAIC,EAAA,EAAkBvmS,GAE1CL,KAAKymS,SAAW,IAAIC,EAAA,EAExB1mS,KAAK6mS,gBAAkB,EAEvB7mS,KAAK8mS,aAGL9mS,KAAK+mS,qBACL/mS,KAAKgnS,eAAiB,KAEtBhnS,KAAKinS,2BAA6B5mS,EAAQ6mS,4BAA8B,IACxElnS,KAAKmY,aAAe9X,EAAQ8X,cAAgBgvR,EAAA,EAAoBrxR,KAMhE9V,KAAKsgB,eAAiBjgB,EAAQigB,gBAAkBtwB,OAAAo3S,EAAA,EAAAp3S,CAAM,QACtDgQ,KAAKsgB,eAAiB8mR,EAAA,EAAepnS,KAAKsgB,gBAM1CtgB,KAAK8iS,kBAAoBziS,EAAQyiS,mBAAqB,KAGtD9iS,KAAKqnS,mBAAmBhnS,EAAQgnS,kBAAmBhnS,EAAQgnS,iBAG3DrnS,KAAKsnS,UAAe,EACpBtnS,KAAKunS,aAAe,EACpBvnS,KAAKwnS,uBAAyB,EAC9BxnS,KAAKynS,sBAAwB,EAW7BznS,KAAK0nS,mBAAoBrnS,EAAQqnS,oBAAsBxB,EA5HnDyB,gBACI,OAAO3nS,KAAKsnS,WAAatnS,KAAKgnS,eAAiBhnS,KAAKgnS,eAAeW,UAAY,GAQvFC,mBACI,OAAO5nS,KAAKunS,cAAgBvnS,KAAKgnS,eAAkBhnS,KAAKgnS,eAAeY,aAAe,GAQ1FC,4BACI,OAAO7nS,KAAKwnS,wBAA0BxnS,KAAKgnS,eAAiBhnS,KAAKgnS,eAAea,sBAAwB,GAG5GC,2BACI,OAAO9nS,KAAKynS,uBAAyBznS,KAAKgnS,eAAiBhnS,KAAKgnS,eAAec,qBAAuB,GAQ1GC,0BACI,OAAQ/nS,KAAK+mS,mBAAqB/mS,KAAK+mS,kBAAkBzxS,OAAQ,EAOrE0yS,qBACI,SAAUhoS,KAAKgnS,iBAAkBhnS,KAAKgnS,eAAeiB,cAQzDC,yBACI,OAAQloS,KAAK0nS,mBAAmBvB,SAAU,EAG9CjF,oBACI,OAAOlhS,KAAKgnS,eAGhBhqQ,kBACI,OAAOh9B,KAAKmoS,aAsEhB/nS,aAAagoS,EAAWC,EAAWC,GAC/B,MAAM,IAAInvS,MAAM,2BAShBiH,QAAQ48B,EAAqBzH,GAMrB,GALAvlC,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,EAAU,wBAEvCv1B,KAAKmoS,aAAenrQ,EAGQ,OAAxBh9B,KAAKgnS,eAAT,CAOA,IAAKhnS,KAAK8iS,mBAAqB9iS,KAAKmY,eAAgBgvR,EAAA,EAAoBrxR,KAepE,OAAOywR,EAAgBgC,eAAevrQ,EAAYh9B,KAAKmY,aAAanY,KAAKsgB,eAAe,CAAC0V,EAAI4oQ,IACrF5oQ,EAAcT,EAASS,GACtB4oQ,EAKE5+R,KAAKwoS,QAAQxrQ,EAAYzH,GAJrBA,EAAS,IAAIp8B,MAAM,2BAYtC,IAAIsvS,EAAcz4S,OAAA04S,EAAA,EAAA14S,CAAK24S,EAAA,SAAiBpzQ,IAAYA,EAAW,KAE/Dv1B,KAAKymS,SAASmC,SAAS5oS,MAEvBA,KAAK6oS,gCAAgC,CAAC7yQ,EAAIkrQ,KACtCuH,EAAYzyQ,UAzCZN,EAAa,KACTH,EAAS,IAAIp8B,MAAM,6BA6CnCiH,WAAWm1B,GAIX,GAFJvlC,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,GAErBv1B,KAAKgoS,eAGL,OAFAhhS,EAAS,uEAEFhH,KAAK8oS,qBAAsB9yQ,IAC9BhmC,OAAAsW,EAAA,EAAAtW,EAAQgmC,EAAI,0BACZhmC,OAAAsW,EAAA,EAAAtW,EAAQgQ,KAAKgoS,gBAEbhoS,KAAK+oS,WAAWxzQ,KAGxB,GAAIv1B,KAAK8mS,UAAUxxS,OAOf,OANAqJ,QAAQC,IAAI,2DAGZoB,KAAKgpS,wBAAwB,KACzBhpS,KAAK+oS,WAAWxzQ,KASxB,GAJAvlC,OAAAsW,EAAA,EAAAtW,CAAiC,IAA1BgQ,KAAK8mS,UAAUxxS,OAAc,uDAEpC0K,KAAKymS,SAASwC,WAAWjpS,MAErBA,KAAKgnS,eAAgB,CAErB,IAAIkC,EAAclpS,KAAKgnS,eAEvBhnS,KAAKmpS,0BAELD,EAAYE,MAAM,KAEdpiS,EAAS,sBAIThH,KAAKqe,KAAK,QAAS,MACnBqX,EAAaH,UAGjBv1B,KAAKqe,KAAK,QAAS,MACnBkX,IAKJn1B,0BAA0Bg/R,EACtB7pQ,GAEY,IAAKv1B,KAAKgnS,eAGN,OAAOzxQ,EAAS,IAAIp8B,MAAM,4EAE9BnJ,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKgnS,gBACZh3S,OAAAsW,EAAA,EAAAtW,CAAOovS,GACPpvS,OAAAsW,EAAA,EAAAtW,CAAOovS,EAAQzxR,eACf3d,OAAAsW,EAAA,EAAAtW,CAA2B,mBAAbulC,GACdv1B,KAAKgnS,eAAe3H,0BAA0BD,EAAS7pQ,GAWxEn1B,YAAYC,EAA+Bk1B,GAE1C,GAAKv1B,KAAKgnS,eAAV,CAaA,IAAI5H,EAAU,IAAIn9P,GACdjF,YAAa38B,EAAQ28B,aAAeh9B,KAAKmoS,aACzChV,UAAW9yR,EAAQ8yR,cACnBkW,WAAYhpS,EAAQgpS,iBAIxBrpS,KAAKq/R,0BAA0BD,EAAS,SAAUppQ,EAAKw/P,GACnD,GAAIx/P,EACA,OAAOT,EAASS,GAEpBhmC,OAAAsW,EAAA,EAAAtW,CAAOwlS,aAAoBtzP,GAC3B3M,EAAS,KAAMigQ,EAAS8T,gBAxBxB5zQ,EAAa,WACTH,EAAS,IAAIp8B,MAAM,6BA4BrBiH,wBAAwBm1B,GAE9BvlC,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,GAE7B,IAAIg0Q,EAAWvpS,KAAK8mS,UAAUphS,QAC9B1V,OAAAw5S,EAAA,EAAAx5S,CAAUu5S,EAAU,SAAUjU,EAAwByC,GAElD/nS,OAAAsW,EAAA,EAAAtW,CAAOslS,EAAQ6I,SAAWn+R,MAC1Bs1R,EAAQ8T,OAAM,EAAK,SAASpzQ,GAIpBA,GACAhvB,EAAS,6BAA+BsuR,EAAQntR,oBAAoB/O,YAExE2+R,OAGL,SAAU/hQ,GAGLh2B,KAAK8mS,UAAUxxS,OAAO,GACtBqJ,QAAQC,IAAIoB,KAAK8mS,UAAUrrQ,IAAI,SAASpqC,GAAI,OAAOA,EAAE8W,oBAAoB/O,aAAaZ,KAAK,MAG/FxI,OAAAsW,EAAA,EAAAtW,CAAiC,IAA1BgQ,KAAK8mS,UAAUxxS,OAAc,2CACpCigC,EAASS,KAkBd51B,aAAaC,EAAgCk1B,GACvCA,IACDA,EAAWl1B,EACXA,MAGCA,IACDA,MAGJrQ,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,GAE7Bl1B,EAAQ28B,YAAc38B,EAAQ28B,aAAeh9B,KAAKmoS,aAClD9nS,EAAQ8yR,UAAY9yR,EAAQ8yR,cAC5B9yR,EAAQ+yR,YAAc/yR,EAAQ+yR,gBAE9B,IAAIgM,EAAU,IAAIj9P,GACdnF,YAAa38B,EAAQ28B,YACrBm2P,UAAa9yR,EAAQ8yR,UACrBC,YAAa/yR,EAAQ+yR,YACrBzlR,cAAe,IAAI87R,EAAA,GACfnhS,aAAc,SAItBtI,KAAKq/R,0BAA0BD,EAAS,CAACppQ,EAAKw/P,KAC1Cx1R,KAAK+mS,kBAAoB,KACpB/wQ,IACDhmC,OAAAsW,EAAA,EAAAtW,CAAOwlS,aAAoBpzP,GAC3BpiC,KAAK+mS,kBAAoBvR,EAASlC,WAEtC/9P,EAASS,EAAKh2B,KAAK+mS,qBAOb3mS,6BAA6Bm1B,GACnCA,IAIMn1B,YAAYk1R,GAClBtlS,OAAAsW,EAAA,EAAAtW,EAAQslS,EAAQkJ,SAAWlJ,EAAQkJ,UAAYx+R,MAC/ChQ,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK8mS,UAAU38R,QAAQmrR,GAAW,EAAG,yBAC5CA,EAAQkJ,QAAUx+R,KAClBA,KAAK8mS,UAAUzuS,KAAKi9R,GAEhBt1R,KAAKqnS,kBACL/R,EAAQoU,wBAKNtpS,eAAek1R,GACrB,IAAIkN,EAAQxiS,KAAK8mS,UAAU38R,QAAQmrR,GAC/BkN,GAAS,IACTxiS,KAAK8mS,UAAU6C,OAAOnH,EAAO,GAC7BxyS,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK8mS,UAAU38R,QAAQmrR,GAAW,GACzCA,EAAQsU,WAEZ55S,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK8mS,UAAU38R,QAAQmrR,GAAW,GAS9Cl1R,aAAa48B,EAAa7kB,EAAcmI,GAE3C,OADAtwB,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK+nS,oBAAqB,sCAC1B/nS,KAAK+mS,kBAAkB8C,KAAK,SAAUjL,GACzC,OAAOA,EAAS5hQ,cAAgBA,GAC5B4hQ,EAASzmR,eAAiBA,GAC1BymR,EAAS5lR,oBAAsBsH,IAM5BlgB,WAECzB,QAAQC,IAAI,oCAAoCoB,KAAKinS,4BACrDtoS,QAAQC,IAAI,oCAAoCoB,KAAKmY,aAAa/e,YAClEuF,QAAQC,IAAI,oCAAoCoB,KAAKsgB,eAAelnB,YAEpEuF,QAAQC,IAAI,oCAAoCoB,KAAKqnS,kBACrD1oS,QAAQC,IAAI,oCAAoCoB,KAAK2nS,WACrDhpS,QAAQC,IAAI,oCAAoCoB,KAAK4nS,cACrDjpS,QAAQC,IAAI,oCAAoCoB,KAAK6nS,uBACrDlpS,QAAQC,IAAI,oCAAoCoB,KAAK8nS,sBACrDnpS,QAAQC,IAAI,yBACZD,QAAQC,IAAI,oCAAoCoB,KAAK0nS,mBAAmBvB,UACxExnS,QAAQC,IAAI,oCAAoCoB,KAAK0nS,mBAAmBtB,cACxEznS,QAAQC,IAAI,oCAAoCoB,KAAK0nS,mBAAmBrB,UACxE1nS,QAAQC,IAAI,oCAAoCoB,KAAK0nS,mBAAmBpB,qBACxE3nS,QAAQC,IAAI,oCAAoCoB,KAAKqnS,kBAI3DjnS,0BAGFJ,KAAKgnS,iBAEDhB,EAAA,GACAh/R,EAAS,8BAA8BhH,KAAKgnS,eAAe8C,2BAI/D9pS,KAAKunS,cAAgBvnS,KAAKgnS,eAAeY,aACzC5nS,KAAKsnS,WAAgBtnS,KAAKgnS,eAAeW,UACzC3nS,KAAKwnS,wBAA0BxnS,KAAKgnS,eAAea,sBACnD7nS,KAAKynS,uBAAyBznS,KAAKgnS,eAAec,qBAGlD9nS,KAAKgnS,eAAe4C,UAEpB5pS,KAAKgnS,eAAenoR,qBACpB7e,KAAKgnS,eAAiB,MAItB5mS,sBAAsB48B,EAAY7kB,EAAamI,EAAeiV,GAElE,IAAI4oQ,EAAS,IAAIoI,EAEbwD,EAAoB,KAEpBlP,GACA,SAAStlQ,GACL4oQ,EAAOqK,QAAQxrQ,EAAazH,IAEhC,SAAUA,GACN4oQ,EAAO6L,aAAc,KAAK,CAACh0Q,EAAKs9P,KAEvBt9P,GACDs9P,EAAU38P,QAAQ,SAAUioQ,EAAUtvS,GAC9BsvS,EAASzmR,eAAiBA,GAAgBymR,EAAS5lR,mBAAqBsH,EAAe/vB,QACvFw5S,EAAoBnL,KAIhCrpQ,EAASS,MAGjB,SAAUT,GACN4oQ,EAAO4K,WAAWxzQ,KAI1BvlC,OAAAi6S,EAAA,EAAAj6S,CAAa6qS,EAAM,SAAS7kQ,GACzB,GAAGA,EAAO,OAAOT,EAASS,GACpB+zQ,GACDx0Q,EAAU,IAAIp8B,MAAM,qDACGgf,EAAa/e,WAChC,YAAcknB,EAAelnB,aAErCm8B,EAAS,KAAKw0Q,EA9BE,QAmCd3pS,qBAAqBm1B,GAE3B,IAAKv1B,KAAKgnS,eACN,OAAOzxQ,EAAS,MAEpBv1B,KAAKgnS,eAAekD,gBAAiBl0Q,IACjCh2B,KAAKgnS,eAAiB,KACtBzxQ,MAIEn1B,yBAAyBm1B,GAM/B,GAJAvuB,EAAS,+BAEThX,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,IAExBv1B,KAAK+nS,oBACN,OAAOxyQ,EAAS,IAAIp8B,MAAM,iDAE9BnJ,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK+nS,qBAEZ/3S,OAAAsW,EAAA,EAAAtW,EAAQgQ,KAAKgoS,gBAQbhoS,KAAKqe,KAAK,sBAIVqX,EAAa,KAET11B,KAAKmpS,0BAELn5S,OAAAsW,EAAA,EAAAtW,EAAQgQ,KAAKgnS,gBAEbhnS,KAAK6oS,gCAAkC7yQ,IAG/BA,EACAhvB,EAAS,yCAEThX,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKgnS,gBAEZhgS,EAAS,4EAGbuuB,EAASS,GAOTh2B,KAAKqe,KAAK,qBAAqB2X,OAQjC51B,gCAAiCm1B,GAEvC,IAAI2rQ,EACJlxS,OAAAsW,EAAA,EAAAtW,CAA+B,OAAxBgQ,KAAKgnS,gBACZh3S,OAAAsW,EAAA,EAAAtW,CAAqC,iBAAtBgQ,KAAKmoS,cAAkCnoS,KAAKmoS,wBAAwB7vS,QAEnFtI,OAAAi6S,EAAA,EAAAj6S,EAGKm6S,IAEGjJ,EAAgB,IAAIkJ,EAAA,GAChBnD,2BAA4BjnS,KAAKinS,2BACjC9uR,aAAcnY,KAAKmY,aACnBmI,eAAgBtgB,KAAKsgB,eACrBwiR,kBAAmB9iS,KAAK8iS,kBACxBuH,OAAQrqS,KAER0nS,mBAAoB1nS,KAAK0nS,qBAG7B1nS,KAAKgnS,eAAiB9F,EAEtBA,EAAc2F,gBAAkB7mS,KAAK6mS,gBAErC3F,EAActwS,OAAOoP,KAAKmoS,aAAenyQ,IACjCA,GACAhvB,EAAS,+BACThH,KAAKmpS,2BAEN5C,EAAgB+D,uCAAuCtqS,KAAKkhS,GAE/DiJ,EAAgBn0Q,KAGpBkrQ,EAActiR,GAAG,UAAU,CAAC2rR,EAAOC,KAC/BxqS,KAAKqe,KAAK,UAAUksR,EAAOC,KAG/BtJ,EAActiR,GAAG,QAAQ,KACrB5e,KAAKqe,KAAK,YAMjB8rR,IAEQnqS,KAAK+nS,oBAONoC,EAAgB,OANhBn6S,OAAAsW,EAAA,EAAAtW,CAA+B,OAAxBgQ,KAAKgnS,gBACZhnS,KAAKgqS,aAAa,KAAMh0Q,IACpBm0Q,EAAgBn0Q,QAQ5BA,IAEIA,GAGAh2B,KAAKgnS,eAAiB,KACtBzxQ,EAASS,IAETT,EAASS,EAAIkrQ,KAQjB9gS,8CAA8C+9R,EAAyB+C,GAE3ElxS,OAAAsW,EAAA,EAAAtW,CAAOmuS,aAAkBoI,GAEzBrF,EAActiR,GAAG,aAAe6rR,IAM5BtM,EAAO9/Q,KAAK,aAAcosR,KAG9BvJ,EAActiR,GAAG,gBAAkB6rR,IAM/BtM,EAAO9/Q,KAAK,gBAAiBosR,KAGjCvJ,EAActiR,GAAG,eAAiB/Z,IAM9Bs5R,EAAO9/Q,KAAK,eAAgBxZ,KAGhCq8R,EAActiR,GAAG,mBAAqB/Z,IAMlCs5R,EAAO9/Q,KAAK,mBAAoBxZ,KAGpCq8R,EAActiR,GAAG,cAAgB8rR,IAE7B1jS,EAAS,gCAAkC0jS,EAAMtxR,QAAU,2DAE3D+kR,EAAO9/Q,KAAK,cAAeqsR,KAG/BxJ,EAActiR,GAAG,yBAA0B,KAEvCu/Q,EAAO9/Q,KAAK,4BAGhB6iR,EAActiR,GAAG,QAAUoX,IAIvB,GAFAhvB,EAAS,kCAAqCgvB,IAEzCA,IAAQmoQ,EAAO+J,mBAUhB,OAJA/J,EAAO9/Q,KAAK,QAAS2X,QACrBN,EAAc,KACVyoQ,EAAOgL,4BAMXhL,EAAOwM,yBAA0B30Q,IAE7BhvB,EAAgFgvB,EAAInxB,SAChFmxB,EAEAmoQ,EAAO9/Q,KAAK,QAAQ2X,IAOpBmoQ,EAAO9/Q,KAAK,4BAGR8/Q,EAAOyM,+BACP56S,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBmuS,EAAOyM,8BACpCzM,EAAOyM,6BAA8B50Q,IAE7BA,IACAhvB,EAAS,uCACTm3R,EAAO4K,WAAW,iBAY9C7H,EAActiR,GAAG,oBAAsBwgR,IAMnCjB,EAAO9/Q,KAAK,oBAAqB+gR,KAQlCh/R,iBACH,OAAOJ,KAAKgnS,eAAe5uR,YAGxBhY,gBACH,OAAOJ,KAAK2mS,aAAakE,gBAItBzqS,iBACH,OAAOJ,KAAK2mS,aAAamE,iBAGtB1qS,sBACH,OAAOJ,KAAK2mS,aAAaoE,sBAUtB3qS,wBAAwB+X,EAAoCmI,GAE/D,OADAtwB,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK+nS,oBAAqB,sCAC1B/nS,KAAK+mS,kBAAkB8C,KAAMjL,GACzBA,EAASzmR,eAAiBA,GAC1BymR,EAAS5lR,oBAAsBsH,8GCv7B9C0qR,EAAA57S,EAAA,SAIM+jB,EAEL/S,eAEAA,MAAOuI,GAIN,OAHIA,IACHA,EAAS,IAAIwK,GAEPxK,GAOT3Y,OAAAi7S,EAAA,EAAAj7S,CAA0B,mBAAmBmjB,EAAkBnjB,OAAAg7S,EAAA,EAAAh7S,CAAmB,IAAI,kCCtBtF,SAAAotB,EAAAF,GACA,kBACA,UAAAA,EAAA,CACA,IAAAm9Q,EAAAn9Q,EACAA,EAAA,KACAm9Q,EAAA7zR,MAAAxG,KAAAyG,2ECHAnD,EAAA,mCCFA,SAAAo3R,EAAAx9Q,EAAAguR,GACA,gBAAAC,EAAAC,EAAA71Q,GACA,OAAArY,EAAAiuR,EAAAD,EAAAE,EAAA71Q,8FCFA81Q,EAAA,mBAAAh7S,eAAAi7S,SAEAC,EAAA,SAAAC,GACA,OAAAH,GAAAG,EAAAH,IAAAG,EAAAH,MCgBA,IAAAI,EAVA,SAAA16S,EAAAq6S,GAIA,IAHA,IAAA5I,GAAA,EACAnoR,EAAAhlB,MAAAtE,KAEAyxS,EAAAzxS,GACAspB,EAAAmoR,GAAA4I,EAAA5I,GAEA,OAAAnoR,WCYA,IAAAqxR,EAJA,SAAAn7S,GACA,aAAAA,GAAA,iBAAAA,GCrBAo7S,EAAA,qBAaA,IAAAC,EAJA,SAAAr7S,GACA,OAAAm7S,EAAAn7S,IAAAP,OAAA+iS,EAAA,EAAA/iS,CAAAO,IAAAo7S,GCVAE,EAAA77S,OAAAkB,UAGA46S,EAAAD,EAAA16S,eAGA46S,EAAAF,EAAAE,qBAyBAC,EALAJ,EAAA,WAA8C,OAAAnlS,UAA9C,IAAkEmlS,EAAA,SAAAr7S,GAClE,OAAAm7S,EAAAn7S,IAAAu7S,EAAAr8S,KAAAc,EAAA,YACAw7S,EAAAt8S,KAAAc,EAAA,WCPA07S,EAFA52S,MAAA8G,iBCtBA+vS,EAAA,iBAGAC,EAAA,mBAoBA,IAAAC,EAVA,SAAA77S,EAAA+E,GACA,IAAA+lB,SAAA9qB,EAGA,SAFA+E,EAAA,MAAAA,EAAA42S,EAAA52S,KAGA,UAAA+lB,GACA,UAAAA,GAAA8wR,EAAAj6S,KAAA3B,KACAA,GAAA,GAAAA,EAAA,MAAAA,EAAA+E,WCWA+2S,KACAA,EAZA,yBAYAA,EAXA,yBAYAA,EAXA,sBAWAA,EAVA,uBAWAA,EAVA,uBAUAA,EATA,uBAUAA,EATA,8BASAA,EARA,wBASAA,EARA,yBAQA,EACAA,EAjCA,sBAiCAA,EAhCA,kBAiCAA,EApBA,wBAoBAA,EAhCA,oBAiCAA,EApBA,qBAoBAA,EAhCA,iBAiCAA,EAhCA,kBAgCAA,EA/BA,qBAgCAA,EA/BA,gBA+BAA,EA9BA,mBA+BAA,EA9BA,mBA8BAA,EA7BA,mBA8BAA,EA7BA,gBA6BAA,EA5BA,mBA6BAA,EA5BA,qBA4BA,EAcA,IAAAC,EALA,SAAA/7S,GACA,OAAAm7S,EAAAn7S,IACAP,OAAAgjS,EAAA,EAAAhjS,CAAAO,EAAA+E,WAAA+2S,EAAAr8S,OAAA+iS,EAAA,EAAA/iS,CAAAO,KC3CA,IAAAg8S,EANA,SAAA3xR,GACA,gBAAArqB,GACA,OAAAqqB,EAAArqB,cCJAi8S,EAAAC,EAAA,GAAAA,EAAA,EAAAC,aAqBAC,EAFAH,EAAAD,EAAAC,GAAAF,ECbAM,EAHA58S,OAAAkB,UAGAC,eAqCA,IAAA07S,EA3BA,SAAAt8S,EAAAu8S,GACA,IAAAC,EAAAd,EAAA17S,GACAy8S,GAAAD,GAAAf,EAAAz7S,GACA08S,GAAAF,IAAAC,GAAAh9S,OAAAk9S,EAAA,EAAAl9S,CAAAO,GACA48S,GAAAJ,IAAAC,IAAAC,GAAAN,EAAAp8S,GACA68S,EAAAL,GAAAC,GAAAC,GAAAE,EACA9yR,EAAA+yR,EAAA3B,EAAAl7S,EAAA+E,OAAAgD,WACAhD,EAAA+kB,EAAA/kB,OAEA,QAAAzE,KAAAN,GACAu8S,IAAAF,EAAAn9S,KAAAc,EAAAM,IACAu8S,IAEA,UAAAv8S,GAEAo8S,IAAA,UAAAp8S,GAAA,UAAAA,IAEAs8S,IAAA,UAAAt8S,GAAA,cAAAA,GAAA,cAAAA,IAEAu7S,EAAAv7S,EAAAyE,KAEA+kB,EAAAhiB,KAAAxH,GAGA,OAAAwpB,GC5CAgzR,EAAAr9S,OAAAkB,UAgBA,IAAAo8S,EAPA,SAAA/8S,GACA,IAAAg9S,EAAAh9S,KAAAuS,YAGA,OAAAvS,KAFA,mBAAAg9S,KAAAr8S,WAAAm8S,ICEA,ICTAG,EDGA,SAAA5yR,EAAA6yR,GACA,gBAAA/pS,GACA,OAAAkX,EAAA6yR,EAAA/pS,KCPAgqS,CAAA19S,OAAA2rB,KAAA3rB,QCIA29S,EAHA39S,OAAAkB,UAGAC,eAsBA,IAAAy8S,EAbA,SAAA58S,GACA,IAAAs8S,EAAAt8S,GACA,OAAAw8S,EAAAx8S,GAEA,IAAAqpB,KACA,QAAAxpB,KAAAb,OAAAgB,GACA28S,EAAAl+S,KAAAuB,EAAAH,IAAA,eAAAA,GACAwpB,EAAAhiB,KAAAxH,GAGA,OAAAwpB,GCUA,IAAAwzR,EAJA,SAAA78S,GACA,OAAAhB,OAAAgrS,EAAA,EAAAhrS,CAAAgB,GAAA67S,EAAA77S,GAAA48S,EAAA58S,ICAA,SAAA88S,EAAAtC,GACA,GAAAx7S,OAAAgrS,EAAA,EAAAhrS,CAAAw7S,GACA,OA/BA,SAAAA,GACA,IAAAl8S,GAAA,EACAoM,EAAA8vS,EAAAl2S,OACA,kBACA,QAAAhG,EAAAoM,GAA4BnL,MAAAi7S,EAAAl8S,GAAAuB,IAAAvB,GAAuB,MA2BnDy+S,CAAAvC,GAGA,IAAAF,EAAAC,EAAAC,GACA,OAAAF,EA3BA,SAAAA,GACA,IAAAh8S,GAAA,EACA,kBACA,IAAA00S,EAAAsH,EAAAvT,OACA,OAAAiM,EAAA9O,KACA,MACA5lS,KACgBiB,MAAAyzS,EAAAzzS,MAAAM,IAAAvB,KAoBhB0+S,CAAA1C,GAhBA,SAAAt+R,GACA,IAAAihS,EAAAJ,EAAA7gS,GACA1d,GAAA,EACAoM,EAAAuyS,EAAA34S,OACA,kBACA,IAAAzE,EAAAo9S,IAAA3+S,GACA,OAAAA,EAAAoM,GAA0BnL,MAAAyc,EAAAnc,UAA0B,MAUpDq9S,CAAA1C,mCChBA,SAAA7Q,EAAA6Q,EAAAN,EAAAE,EAAA71Q,ICfA,SAAA21Q,GACA,gBAAAl+R,EAAAo+R,EAAA71Q,GAEA,GADAA,EAAAvlC,OAAAotB,EAAA,EAAAptB,CAAAulC,GAAAwlQ,EAAA,GACAmQ,GAAA,IAAAl+R,EACA,OAAAuoB,EAAA,MAEA,IAAA44Q,EAAAL,EAAA9gS,GACAkoR,GAAA,EACAkZ,EAAA,EACAC,GAAA,EAEA,SAAAC,EAAAt4Q,EAAAzlC,GAEA,GADA69S,GAAA,EACAp4Q,EACAk/P,GAAA,EACA3/P,EAAAS,OAEA,IAAAzlC,IAAAg+S,EAAA,GAAArZ,GAAAkZ,GAAA,EAEA,OADAlZ,GAAA,EACA3/P,EAAA,MAEA84Q,GACAG,KAIA,SAAAA,IAEA,IADAH,GAAA,EACAD,EAAAlD,IAAAhW,GAAA,CACA,IAAAuZ,EAAAN,IACA,UAAAM,EAKA,OAJAvZ,GAAA,OACAkZ,GAAA,GACA74Q,EAAA,OAIA64Q,GAAA,EACAhD,EAAAqD,EAAAl+S,MAAAk+S,EAAA59S,IAAAb,OAAAoqS,EAAA,EAAApqS,CAAAs+S,IAEAD,GAAA,EAGAG,KD3BAE,CAAAxD,EAAAwD,CAAAlD,EAAAx7S,OAAAkrS,EAAA,EAAAlrS,CAAAo7S,GAAA71Q,gHETMo5Q,EAGLvuS,YAAaC,GACZA,EAAUA,MACVL,KAAKujS,WAAaljS,EAAkB,WAAIA,EAAQkjS,cAKjDnjS,OAAQuH,GACPuG,EAAA,EAAelO,KAAKujS,WAAW57R,GAKhCvH,OAAQsI,GACP1I,KAAKujS,WAAar1R,EAAA,EAAexF,EAAIgI,EAAA,GAKtCtQ,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAIgmS,GAEV3uS,KAAKujS,aAAc56R,EAAO46R,WAAar1R,EAAA,EAAqBlO,KAAKujS,aAC9D56R,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,cAAc2+S,EAAa3+S,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,QCtDhEq8C,UAQN,SAAAuiQ,EAAmCvhS,EAA2B1F,GACnEA,EAAI5T,UAAUsZ,GAIT,SAAAwhS,EAAmCnmS,GACxC,OAAOA,EAAIzU,aAdZ,SAAYo4C,GACTA,IAAA,mBACDA,IAAA,qBACAA,IAAA,mBACAA,IAAA,mBAJF,CAAYA,WAoBZr8C,OAAAyd,EAAA,EAAAzd,CAAoB,oBAAoBq8C,EAAkBuiQ,EAAyBC,EAAyB,YCRtGC,EAKL1uS,YAAaC,GACZA,EAAUA,MACVL,KAAK+uS,iBAAmB1uS,EAAwB,iBAAIA,EAAQ0uS,iBAAiB,KAC7E/uS,KAAKgvS,WAAa3uS,EAAkB,WAAIA,EAAQ2uS,WAAW,KAC3DhvS,KAAKivS,SAAW5uS,EAAgB,SAAIA,EAAQ4uS,SAAS,KAKtD7uS,OAAQuH,GACPuG,EAAA,GAAkBlO,KAAK+uS,iBAAiBpnS,GACxCinS,EAAwB5uS,KAAKgvS,WAAWrnS,GACxCuG,EAAA,GAAgBlO,KAAKivS,SAAStnS,GAK/BvH,OAAQsI,GACP1I,KAAK+uS,iBAAmB7gS,EAAA,EAAkBxF,GAC1C1I,KAAKgvS,WAAaH,EAAwBnmS,GAC1C1I,KAAKivS,SAAW/gS,EAAA,EAAgBxF,GAKjCtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAImmS,GAEdnmS,EAAOomS,iBAAmB/uS,KAAK+uS,iBAC/BpmS,EAAOqmS,WAAahvS,KAAKgvS,WACzBrmS,EAAOsmS,SAAWjvS,KAAKivS,SAChBtmS,GAKH,SAAAumS,EAAkCxmS,GACtC,IAAIsE,EAAM,IAAI8hS,EAEb,OADA9hS,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,mBAAmB8+S,EAAkB9+S,OAAA8N,EAAA,EAAA9N,CAAmB,MAAM,UCnDlFm/S,UAAmCR,EAIxCvuS,YAAaC,GAEZQ,MADAR,EAAUA,OAEVL,KAAKovS,eAAiB/uS,EAAsB,eAAIA,EAAQ+uS,eAAe,KACvEpvS,KAAKqvS,kBAAoBhvS,EAAyB,kBAAIA,EAAQgvS,qBAK/DjvS,OAAQuH,GACP9G,MAAMoC,OAAO0E,GACbuG,EAAA,GAAelO,KAAKovS,eAAeznS,GACnCuG,EAAA,EAAelO,KAAKqvS,kBAAkB1nS,GAKvCvH,OAAQsI,GACP7H,MAAMuC,OAAOsF,GACb1I,KAAKovS,eAAiBlhS,EAAA,EAAexF,GACrC1I,KAAKqvS,kBAAoBnhS,EAAA,EAAexF,EAAIwmS,GAK7C9uS,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIwmS,GAEdtuS,MAAMsI,MAAMR,GACZA,EAAOymS,eAAiBpvS,KAAKovS,eACzBpvS,KAAKqvS,oBAAqB1mS,EAAO0mS,kBAAoBnhS,EAAA,EAAqBlO,KAAKqvS,oBAC5E1mS,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,sBAAsBm/S,EAAqBn/S,OAAA8N,EAAA,EAAA9N,CAAmB,MAAM,UC/DxFw2C,EAELpmC,eAEAA,MAAOuI,GAIN,OAHIA,IACHA,EAAS,IAAI69B,GAEP79B,GAOT3Y,OAAAme,EAAA,EAAAne,CAA0B,qBAAqBw2C,EAAoBx2C,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBCLpFs/S,EAMLlvS,YAAaC,GACZA,EAAUA,MACVL,KAAKpD,OAASyD,EAAc,OAAIA,EAAQzD,OAAO,KAC/CoD,KAAKy8R,WAAap8R,EAAkB,WAAIA,EAAQo8R,WAAW,KAC3Dz8R,KAAKu/R,aAAel/R,EAAoB,aAAIA,EAAQk/R,aAAa,IAAI56Q,EAAA,EACrE3kB,KAAKy4R,kBAAoBp4R,EAAyB,kBAAIA,EAAQo4R,kBAAkB,KAKjFr4R,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKpD,OAAO+K,GAC5BuG,EAAA,GAAgBlO,KAAKy8R,WAAW90R,GAChC3H,KAAKu/R,aAAat8R,OAAO0E,GACzBuG,EAAA,GAAoBlO,KAAKy4R,kBAAkB9wR,GAK5CvH,OAAQsI,GACP1I,KAAKpD,OAASsR,EAAA,EAAgBxF,GAC9B1I,KAAKy8R,WAAavuR,EAAA,EAAgBxF,GAClC1I,KAAKu/R,aAAan8R,OAAOsF,GACzB1I,KAAKy4R,kBAAoBvqR,EAAA,EAAoBxF,GAK9CtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAI2mS,GAEd3mS,EAAO/L,OAASoD,KAAKpD,OACrB+L,EAAO8zR,WAAaz8R,KAAKy8R,WACrBz8R,KAAKu/R,eAAgB52R,EAAO42R,aAAev/R,KAAKu/R,aAAap2R,SACjER,EAAO8vR,kBAAoBz4R,KAAKy4R,kBACzB9vR,GAKH,SAAA4mS,EAAoC7mS,GACxC,IAAIsE,EAAM,IAAIsiS,EAEb,OADAtiS,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,qBAAqBs/S,EAAoBt/S,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC5DpFw/S,EAKLpvS,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAKy4R,kBAAoBp4R,EAAyB,kBAAIA,EAAQo4R,kBAAkB,KAChFz4R,KAAKyvS,YAAcpvS,EAAmB,YAAIA,EAAQovS,YAAY,KAK/DrvS,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKe,WAAW4G,GACpCuG,EAAA,GAAoBlO,KAAKy4R,kBAAkB9wR,GAC3CuG,EAAA,GAAyBlO,KAAKyvS,YAAY9nS,GAK3CvH,OAAQsI,GACP1I,KAAKe,WAAamN,EAAA,EAAoBxF,GACtC1I,KAAKy4R,kBAAoBvqR,EAAA,EAAoBxF,GAC7C1I,KAAKyvS,YAAcvhS,EAAA,EAAyBxF,GAK7CtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI6mS,GAEd7mS,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAO8vR,kBAAoBz4R,KAAKy4R,kBAChC9vR,EAAO8mS,YAAczvS,KAAKyvS,YACnB9mS,GAKH,SAAA+mS,EAAmChnS,GACvC,IAAIsE,EAAM,IAAIwiS,EAEb,OADAxiS,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,oBAAoBw/S,EAAmBx/S,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBCnDlF2/S,EAKLvvS,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAK4vS,iBAAmBvvS,EAAwB,iBAAIA,EAAQuvS,oBAC5D5vS,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKe,WAAW4G,GACpCuG,EAAA,EAAelO,KAAK4vS,iBAAiBjoS,EAAIuG,EAAA,IACzCA,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKe,WAAamN,EAAA,EAAoBxF,GACtC1I,KAAK4vS,iBAAmB1hS,EAAA,EAAexF,EAAIwF,EAAA,GAC3ClO,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIgnS,GAEdhnS,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAOinS,iBAAmB1hS,EAAA,EAAclO,KAAK4vS,kBACzC5vS,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAKH,SAAAknS,EAAqCnnS,GACzC,IAAIsE,EAAM,IAAI2iS,EAEb,OADA3iS,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,sBAAsB2/S,EAAqB3/S,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,6BCjDtF8/S,EAOL1vS,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKigS,mBAAqB5/R,EAA0B,mBAAIA,EAAQ4/R,mBAAmB,KACnFjgS,KAAKoP,mBAAqB/O,EAA0B,mBAAIA,EAAQ+O,mBAAmB,KACnFpP,KAAKs5R,0BAA4Bj5R,EAAiC,0BAAIA,EAAQi5R,0BAA0B,KACxGt5R,KAAKmlB,YAAc9kB,EAAmB,YAAIA,EAAQ8kB,eAKnD/kB,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAyBlO,KAAKigS,mBAAmBt4R,GACjD3X,OAAAsf,EAAA,EAAAtf,CAAyBgQ,KAAKoP,mBAAmBzH,GACjDuG,EAAA,GAAiBlO,KAAKs5R,0BAA0B3xR,GAChDuG,EAAA,EAAelO,KAAKmlB,YAAYxd,GAKjCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKigS,mBAAqB/xR,EAAA,EAAyBxF,GACnD1I,KAAKoP,mBAAqBpf,OAAAsf,EAAA,EAAAtf,CAAyB0Y,GACnD1I,KAAKs5R,0BAA4BprR,EAAA,EAAiBxF,GAClD1I,KAAKmlB,YAAcjX,EAAA,EAAexF,EAAI6mS,GAKvCnvS,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAImnS,GAEV9vS,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOs3R,mBAAqBjgS,KAAKigS,mBACjCt3R,EAAOyG,mBAAqBpP,KAAKoP,mBACjCzG,EAAO2wR,0BAA4Bt5R,KAAKs5R,0BACpCt5R,KAAKmlB,cAAexc,EAAOwc,YAAcjX,EAAA,EAAqBlO,KAAKmlB,cAChExc,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,qBAAqB8/S,EAAoB9/S,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qBChEpF+/S,EAKL3vS,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIgnS,GAClC1vS,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIonS,GAEV/vS,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,sBAAsB+/S,EAAqB//S,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC1DtFggT,EAIL5vS,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKiwS,qBAAuB5vS,EAA4B,qBAAIA,EAAQ4vS,wBAKrE7vS,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,EAAelO,KAAKiwS,qBAAqBtoS,EAAIuG,EAAA,IAK9C9N,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKiwS,qBAAuB/hS,EAAA,EAAexF,EAAIwF,EAAA,GAKhD9N,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIqnS,GAEVhwS,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOsnS,qBAAuB/hS,EAAA,EAAclO,KAAKiwS,sBAC1CtnS,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,uBAAuBggT,EAAsBhgT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC3CxFkgT,EAKL9vS,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAImnS,GAClC7vS,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIunS,GAEVlwS,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,wBAAwBkgT,EAAuBlgT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCvD1FmgT,UAAsC3pQ,EAO3CpmC,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAK6/R,eAAiBx/R,EAAsB,eAAIA,EAAQw/R,eAAe,KACvE7/R,KAAKwT,UAAYnT,EAAiB,UAAIA,EAAQmT,UAAU,KACxDxT,KAAK8/R,QAAUz/R,EAAe,QAAIA,EAAQy/R,QAAQ,KAClD9/R,KAAK+/R,iBAAmB1/R,EAAwB,iBAAIA,EAAQ0/R,iBAAiB,KAC7E//R,KAAKggS,aAAe3/R,EAAoB,aAAIA,EAAQ2/R,aAAa,KAKlE5/R,OAAQuH,GACPuG,EAAA,GAAiBlO,KAAK6/R,eAAel4R,GACrCuG,EAAA,GAAkBlO,KAAKwT,UAAU7L,GACjCuG,EAAA,GAAkBlO,KAAK8/R,QAAQn4R,GAC/BuG,EAAA,GAAgBlO,KAAK+/R,iBAAiBp4R,GACtCuG,EAAA,GAAiBlO,KAAKggS,aAAar4R,GAKpCvH,OAAQsI,GACP1I,KAAK6/R,eAAiB3xR,EAAA,EAAiBxF,GACvC1I,KAAKwT,UAAYtF,EAAA,EAAkBxF,GACnC1I,KAAK8/R,QAAU5xR,EAAA,EAAkBxF,GACjC1I,KAAK+/R,iBAAmB7xR,EAAA,EAAgBxF,GACxC1I,KAAKggS,aAAe9xR,EAAA,EAAiBxF,GAKtCtI,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAIwnS,GAEdxnS,EAAOk3R,eAAiB7/R,KAAK6/R,eAC7Bl3R,EAAO6K,UAAYxT,KAAKwT,UACxB7K,EAAOm3R,QAAU9/R,KAAK8/R,QACtBn3R,EAAOo3R,iBAAmB//R,KAAK+/R,iBAC/Bp3R,EAAOq3R,aAAehgS,KAAKggS,aACpBr3R,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,yBAAyBmgT,EAAwBngT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC/D5FogT,UAAoC5pQ,EAOzCpmC,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAKwT,UAAYnT,EAAiB,UAAIA,EAAQmT,UAAU,KACxDxT,KAAK8/R,QAAUz/R,EAAe,QAAIA,EAAQy/R,QAAQ,KAClD9/R,KAAK0T,mBAAqBrT,EAA0B,mBAAIA,EAAQqT,mBAAmB,KACnF1T,KAAKyT,cAAgBpT,EAAqB,cAAIA,EAAQoT,iBACtDzT,KAAK2T,uBAAyBtT,EAA8B,uBAAIA,EAAQsT,uBAAuB,IAAIC,EAAA,EAKpGxT,OAAQuH,GACPuG,EAAA,GAAkBlO,KAAKwT,UAAU7L,GACjCuG,EAAA,GAAkBlO,KAAK8/R,QAAQn4R,GAC/BuG,EAAA,GAAgBlO,KAAK0T,mBAAmB/L,GACxCuG,EAAA,EAAelO,KAAKyT,cAAc9L,EAAIuG,EAAA,IACtClO,KAAK2T,uBAAuB1Q,OAAO0E,GAKpCvH,OAAQsI,GACP1I,KAAKwT,UAAYtF,EAAA,EAAkBxF,GACnC1I,KAAK8/R,QAAU5xR,EAAA,EAAkBxF,GACjC1I,KAAK0T,mBAAqBxF,EAAA,EAAgBxF,GAC1C1I,KAAKyT,cAAgBvF,EAAA,EAAexF,EAAIwF,EAAA,GACxClO,KAAK2T,uBAAuBvQ,OAAOsF,GAKpCtI,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAIynS,GAEdznS,EAAO6K,UAAYxT,KAAKwT,UACxB7K,EAAOm3R,QAAU9/R,KAAK8/R,QACtBn3R,EAAO+K,mBAAqB1T,KAAK0T,mBACjC/K,EAAO8K,cAAgBvF,EAAA,EAAclO,KAAKyT,eACtCzT,KAAK2T,yBAA0BhL,EAAOgL,uBAAyB3T,KAAK2T,uBAAuBxK,SACxFR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,uBAAuBogT,EAAsBpgT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCpExFqgT,UAAiC7pQ,EAItCpmC,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAKswS,SAAWjwS,EAAgB,SAAIA,EAAQiwS,YAC5CtwS,KAAKuwS,gBAAkBlwS,EAAuB,gBAAIA,EAAQkwS,gBAAgB,KAK3EnwS,OAAQuH,GACPuG,EAAA,EAAelO,KAAKswS,SAAS3oS,EAAIuG,EAAA,IACjCA,EAAA,GAAiBlO,KAAKuwS,gBAAgB5oS,GAKvCvH,OAAQsI,GACP1I,KAAKswS,SAAWpiS,EAAA,EAAexF,EAAIwF,EAAA,GACnClO,KAAKuwS,gBAAkBriS,EAAA,EAAiBxF,GAKzCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI0nS,GAEd1nS,EAAO2nS,SAAWpiS,EAAA,EAAclO,KAAKswS,UACrC3nS,EAAO4nS,gBAAkBvwS,KAAKuwS,gBACvB5nS,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,oBAAoBqgT,EAAmBrgT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBC9ClFwgT,UAAgChqQ,EAMrCpmC,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAK+/R,iBAAmB1/R,EAAwB,iBAAIA,EAAQ0/R,iBAAiB,KAC7E//R,KAAKwT,UAAYnT,EAAiB,UAAIA,EAAQmT,UAAU,KACxDxT,KAAK8/R,QAAUz/R,EAAe,QAAIA,EAAQy/R,QAAQ,KAClD9/R,KAAKy0R,OAASp0R,EAAc,OAAIA,EAAQo0R,OAAO,IAAIvsP,EAAA,EAKpD9nC,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAK+/R,iBAAiBp4R,GACtCuG,EAAA,GAAkBlO,KAAKwT,UAAU7L,GACjCuG,EAAA,GAAkBlO,KAAK8/R,QAAQn4R,GAC/B3H,KAAKy0R,OAAOxxR,OAAO0E,GAKpBvH,OAAQsI,GACP1I,KAAK+/R,iBAAmB7xR,EAAA,EAAgBxF,GACxC1I,KAAKwT,UAAYtF,EAAA,EAAkBxF,GACnC1I,KAAK8/R,QAAU5xR,EAAA,EAAkBxF,GACjC1I,KAAKy0R,OAAOrxR,OAAOsF,GAKpBtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAI6nS,GAEd7nS,EAAOo3R,iBAAmB//R,KAAK+/R,iBAC/Bp3R,EAAO6K,UAAYxT,KAAKwT,UACxB7K,EAAOm3R,QAAU9/R,KAAK8/R,QAClB9/R,KAAKy0R,SAAU9rR,EAAO8rR,OAASz0R,KAAKy0R,OAAOtrR,SACxCR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,mBAAmBwgT,EAAkBxgT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,wiBCxEtFygT,QAFA,EAAApgT,OCAAw7S,EAAA77S,OAAAkB,UAGAw/S,EAAA7E,EAAA16S,eAOAw/S,EAAA9E,EAAAzyS,SAGAw3S,EAAAH,IAAAngT,iBAAA2B,EA6BA,IAAA4+S,EApBA,SAAAtgT,GACA,IAAAugT,EAAAJ,EAAAjhT,KAAAc,EAAAqgT,GACA9d,EAAAviS,EAAAqgT,GAEA,IACArgT,EAAAqgT,QAAA3+S,EACA,IAAA8+S,GAAA,EACG,MAAAhyS,IAEH,IAAAsb,EAAAs2R,EAAAlhT,KAAAc,GAQA,OAPAwgT,IACAD,EACAvgT,EAAAqgT,GAAA9d,SAEAviS,EAAAqgT,IAGAv2R,GClCA22R,EAPAhhT,OAAAkB,UAOAkI,SAaA,IAAA63S,EAJA,SAAA1gT,GACA,OAAAygT,EAAAvhT,KAAAc,ICbA2gT,EAAA,gBACAC,EAAA,qBAGAC,EAAAX,IAAAngT,iBAAA2B,EAkBAqR,EAAA,EATA,SAAA/S,GACA,aAAAA,OACA0B,IAAA1B,EAAA4gT,EAAAD,EAEAE,QAAAphT,OAAAO,GACAsgT,EAAAtgT,GACA0gT,EAAA1gT,qBCxBA,IAAA8gT,EAAAC,GAMA,SAAA1iT,EAAA2iT,GACA,kBAEAt/S,KAAAq/S,EAAA,mBAAAD,EAMC,WAID,IAAAtW,EAAA,aACAyW,EAAA,YAEAC,GACA,QACA,QACA,OACA,OACA,SAIA,SAAAC,EAAA1kS,EAAA2kS,GACA,IAAAC,EAAA5kS,EAAA2kS,GACA,sBAAAC,EAAA9gT,KACA,OAAA8gT,EAAA9gT,KAAAkc,GAEA,IACA,OAAAwvB,SAAAtrC,UAAAJ,KAAArB,KAAAmiT,EAAA5kS,GACa,MAAAjO,GAEb,kBACA,OAAAy9B,SAAAtrC,UAAAsV,YAAAorS,GAAA5kS,EAAAvG,cA0BA,SAAAorS,EAAAC,EAAAC,GAEA,QAAAziT,EAAA,EAAuBA,EAAAmiT,EAAAn8S,OAAuBhG,IAAA,CAC9C,IAAAqiT,EAAAF,EAAAniT,GACA0Q,KAAA2xS,GAAAriT,EAAAwiT,EACA/W,EACA/6R,KAAAgyS,cAAAL,EAAAG,EAAAC,GAIA/xS,KAAApB,IAAAoB,KAAA+Z,MAgBA,SAAAk4R,EAAAN,EAAAG,EAAAC,GAEA,OA9CA,SAAAJ,GACA,UAAAA,IACAA,EAAA,OAGA,cAAAhzS,UAAA6yS,SAESv/S,IAAA0M,QAAAgzS,GACTD,EAAA/yS,QAAAgzS,QACS1/S,IAAA0M,QAAAC,IACT8yS,EAAA/yS,QAAA,OAEAo8R,GAkCAmX,CAAAP,IAbA,SAAAA,EAAAG,EAAAC,GACA,yBACApzS,UAAA6yS,IACAK,EAAApiT,KAAAuQ,KAAA8xS,EAAAC,GACA/xS,KAAA2xS,GAAAnrS,MAAAxG,KAAAyG,cAUAD,MAAAxG,KAAAyG,WAGA,SAAA0rS,EAAAtiT,EAAAuiT,EAAAvjT,GACA,IACAwjT,EADAttS,EAAA/E,KAEAsyS,EAAA,WAuBA,SAAAC,IACA,IAAAC,EAEA,UAAAtjT,SAAAsiT,EAAA,CAEA,IACAgB,EAAAtjT,OAAAujT,aAAAH,GACW,MAAAI,IAGX,UAAAF,IAAAhB,EACA,IACA,IAAAmB,EAAAzjT,OAAA0jT,SAAAD,OACAE,EAAAF,EAAAxoS,QACA2oS,mBAAAR,GAAA,MACA,IAAAO,IACAL,EAAA,WAA0CzmS,KAAA4mS,EAAAjtS,MAAAmtS,IAAA,IAE3B,MAAAH,IAQf,YAJAzgT,IAAA8S,EAAAguS,OAAAP,KACAA,OAAAvgT,GAGAugT,GAhDA3iT,IACAyiT,GAAA,IAAAziT,GAwDAkV,EAAAlV,OAEAkV,EAAAguS,QAAqBC,MAAA,EAAAC,MAAA,EAAAC,KAAA,EAAAC,KAAA,EACrBC,MAAA,EAAAC,OAAA,GAEAtuS,EAAAitS,cAAAnjT,GAAAojT,EAEAltS,EAAAuuS,SAAA,WACA,OAAAjB,GAGAttS,EAAAwuS,SAAA,SAAAzB,EAAA0B,GAIA,GAHA,iBAAA1B,QAAA7/S,IAAA8S,EAAAguS,OAAAjB,EAAAjqS,iBACAiqS,EAAA/sS,EAAAguS,OAAAjB,EAAAjqS,kBAEA,iBAAAiqS,MAAA,GAAAA,GAAA/sS,EAAAguS,OAAAM,QAUA,kDAAAvB,EAJA,GALAO,EAAAP,GACA,IAAA0B,GAtEA,SAAAC,GACA,IAAAC,GAAAjC,EAAAgC,IAAA,UAAA5rS,cAEA,UAAA3Y,SAAAsiT,EAAA,OAGA,IAEA,YADAtiT,OAAAujT,aAAAH,GAAAoB,GAEW,MAAAhB,IAGX,IACAxjT,OAAA0jT,SAAAD,OACAG,mBAAAR,GAAA,IAAAoB,EAAA,IACW,MAAAhB,KAwDXiB,CAAA7B,GAEAD,EAAApiT,KAAAsV,EAAA+sS,EAAAjiT,UACA8O,UAAA6yS,GAAAM,EAAA/sS,EAAAguS,OAAAM,OACA,0CAOAtuS,EAAA6uS,gBAAA,SAAA9B,GACAS,KACAxtS,EAAAwuS,SAAAzB,GAAA,IAIA/sS,EAAA8uS,UAAA,SAAAL,GACAzuS,EAAAwuS,SAAAxuS,EAAAguS,OAAAC,MAAAQ,IAGAzuS,EAAA+uS,WAAA,SAAAN,GACAzuS,EAAAwuS,SAAAxuS,EAAAguS,OAAAM,OAAAG,IAIA,IAAAO,EAAAxB,IACA,MAAAwB,IACAA,EAAA,MAAA3B,EAAA,OAAAA,GAEArtS,EAAAwuS,SAAAQ,GAAA,GASA,IAAAC,EAAA,IAAA7B,EAEA8B,KACAD,EAAAE,UAAA,SAAArkT,GACA,oBAAAA,GAAA,KAAAA,EACA,UAAAwtB,UAAA,kDAGA,IAAA82R,EAAAF,EAAApkT,GAKA,OAJAskT,IACAA,EAAAF,EAAApkT,GAAA,IAAAsiT,EACAtiT,EAAAmkT,EAAAV,WAAAU,EAAAhC,gBAEAmC,GAIA,IAAAC,SAAAllT,SAAAsiT,EAAAtiT,OAAA0P,SAAA3M,EAcA,OAbA+hT,EAAAK,WAAA,WAMA,cALAnlT,SAAAsiT,GACAtiT,OAAA0P,MAAAo1S,IACA9kT,OAAA0P,IAAAw1S,GAGAJ,GAGAA,EAAAM,WAAA,WACA,OAAAL,GAGAD,IA/OA3C,EAAA5hT,KAAAX,EAAAM,EAAAN,EAAAC,GAAAsiT,KAAAtiT,EAAAD,QAAAwiT,GAHA,gLCiBIiD,GAZcC,EAAA,EACAA,EAAA,EAWM,KACpBC,EAA8B,GAC9BC,EAAmB,SAoBjBC,UAAuBC,EAAA,EAO7Bx0S,YAAYC,GAERQ,QAPGb,KAAA6U,SAAsBggS,EAAA,EAASC,KAC/B90S,KAAAwV,UAA+Bu/R,EAAA,EAAiBt/R,OAEhDzV,KAAA0kB,WAAwB,UAaDzyB,KAR1BoO,EAAeA,OAQFwU,UACT7U,KAAKg1S,YAAY30S,EAAQwU,eASF5iB,IAAtBoO,EAAQmV,WACTxV,KAAKi1S,aAAa50S,EAAQmV,gBASPvjB,IAAlBoO,EAAQ9P,QACTyP,KAAKzP,MAAQ8P,EAAQ9P,YASE0B,IAAvBoO,EAAQqkB,aACZ1kB,KAAK0kB,WAAarkB,EAAQqkB,YAOvBtkB,YAAY7P,GACf,KAAOA,KAASskT,EAAA,GACZ,MAAM,IAAI17S,MAAM,wCAA0C5I,GAG/DyP,KAAK6U,SAAWtkB,EAGZ6P,aAAa7P,GAChB,KAAOA,KAASwkT,EAAA,GACZ,MAAM,IAAI57S,MAAM,gDAAkD5I,GAGvEyP,KAAKwV,UAAYjlB,EAeb6P,OAAOuH,GACV,IAAI9K,EAAemD,KAAK6U,UAEpB7U,KAAKwV,YAAcu/R,EAAA,EAAiB1/S,OAAS2K,KAAKwV,YAAcu/R,EAAA,EAAiBtwR,SACjF5nB,GAAgB03S,GAEhBv0S,KAAK0kB,aACL7nB,GAAgB43S,GAEpBD,EAAA,GAAe33S,EAAc8K,GAEzB3H,KAAKwV,YAAcu/R,EAAA,EAAiB1/S,OAAS2K,KAAKwV,YAAcu/R,EAAA,EAAiBtwR,QA2MzF,SAA4B5P,EAAUljB,EAAqBpB,GAEvD,GAAIA,EAAM+lB,QAAU/lB,EAAM+lB,kBAAkB9a,YACxC,IACIg5S,EAAA,GAAgBjkT,EAAM+E,OAAQ3D,GAC9BA,EAAOujT,iBAAiB3kT,EAAM+lB,OAAQ/lB,EAAM4kT,WAAY5kT,EAAMmX,YAChE,MAAOsuB,GACLr3B,QAAQC,IAAI,aAAeiW,GAC3BlW,QAAQC,IAAI,UAAYrO,EAAM+E,QAG/B8/S,EAAmBvgS,EAAUljB,EAAQpB,GArNxC8kT,CAAmBr1S,KAAK6U,SAAUlN,EAAK3H,KAAKzP,OAG/B+kT,EAAYt1S,KAAK6U,SAC9B5R,CAAOjD,KAAKzP,MAAOoX,GAGnB3H,KAAK0kB,YACL0wR,EAAmBP,EAAA,EAASpxR,OAAQ9b,EAAK3H,KAAK0kB,YAU/CtkB,OAAOsI,GACV,IAAI7L,EAAe23S,EAAA,EAAe9rS,GAE9BvM,GAAYU,EAAe03S,KAAuBA,EAElDgB,GAAkB14S,EAAe43S,KAAmCA,EAIxE,GAFAz0S,KAAK6U,SAAWhY,EAAe63S,IAExB10S,KAAK6U,YAAYggS,EAAA,GACpB,MAAM,IAAI17S,MAAM,8CAAgD0D,EAAe63S,GAAkBt7S,SAAS,KAE9G,GAAI+C,EACA6D,KAAKwV,UAAY+/R,EAAeR,EAAA,EAAiBtwR,OAASswR,EAAA,EAAiB1/S,MAC3E2K,KAAKzP,MAyMb,SAA4BskB,EAAqBljB,GAE7C,IAAI2D,EAASk/S,EAAA,EAAgB7iT,GAC7B,GAAe,aAAX2D,EACA,OAAO,KAEX,OAAOuf,GACH,KAAKggS,EAAA,EAASvxR,MACV,OAAO,IAAIvsB,aAAapF,EAAO6jT,gBAAgBlgT,EAASyB,aAAa0+S,oBACzE,KAAKZ,EAAA,EAAStxR,OACV,OAAO,IAAIC,aAAa7xB,EAAO6jT,gBAAgBlgT,EAASkuB,aAAaiyR,oBACzE,KAAKZ,EAAA,EAAS3wR,MACV,OAAO,IAAIC,UAAUxyB,EAAO6jT,gBAAgBlgT,IAChD,KAAKu/S,EAAA,EAAS5wR,KACV,OAAOtyB,EAAO6jT,gBAAgBlgT,GAClC,KAAKu/S,EAAA,EAAS9wR,MACV,OAAO,IAAIC,WAAWryB,EAAO6jT,gBAAgBlgT,EAAS0uB,WAAWyxR,oBACrE,KAAKZ,EAAA,EAASlxR,MACV,OAAO,IAAIC,WAAWjyB,EAAO6jT,gBAAgBlgT,EAASsuB,WAAW6xR,oBACrE,KAAKZ,EAAA,EAAShxR,OACV,OAAO,IAAIC,YAAYnyB,EAAO6jT,gBAAgBlgT,EAASouB,YAAY+xR,oBACvE,KAAKZ,EAAA,EAASpxR,OACV,OAAO,IAAIC,YAAY/xB,EAAO6jT,gBAAgBlgT,EAASouB,YAAY+xR,oBAK3E,OAAOC,EAAmB7gS,EAAUljB,GApOnBgkT,CAAmB31S,KAAK6U,SAAUnM,OAE9C,CACD1I,KAAKwV,UAAYu/R,EAAA,EAAiBt/R,OAClC,IAAIrS,EAASwyS,EAAY51S,KAAK6U,UAC9B7U,KAAKzP,MAAQ6S,EAAOsF,GAExB,GAAI6sS,IACAv1S,KAAK0kB,WAAagxR,EAAmBb,EAAA,EAASpxR,OAAQ/a,GA+N9D,SAA2BmtS,GACvB,OAAOA,EAAMC,OAAO,SAAU/kT,EAAGK,GAC7B,OAAOL,EAAIK,GACZ,GAjOoB2kT,CAAkB/1S,KAAK0kB,cACrB1kB,KAAKzP,MAAM+E,QAC5B,MAAM,IAAI6D,MAAM,oBAKrBiH,cAAc41S,GACjB,IAAIzlT,EAAUylT,aAAuBrB,EAAWqB,EAAc,IAAIrB,EAAQqB,GAE1E,OADAhmT,OAAAsW,EAAA,EAAAtW,CAAOO,aAAiBokT,GACjBpkT,EASJ6P,QACH,OAAO,IAAIu0S,EAAQ30S,OA6GvB,SAAAs1S,EAAqBzgS,GACjB,IAAI5R,EAASjT,OAAAimT,EAAA,EAAAjmT,CAAgB6kT,EAAA,EAAShgS,IAAW5R,OAEjD,IAAKA,EACD,MAAM,IAAI9J,MAAM,4CAA8C0b,GAElE,OAAO5R,EAGX,SAAA2yS,EAAqB/gS,GACjB,IAAIzR,EAASpT,OAAAimT,EAAA,EAAAjmT,CAAgB6kT,EAAA,EAAShgS,IAAWzR,OAEjD,IAAKA,EACD,MAAM,IAAIjK,MAAM,iDAAmD0b,GAEvE,OAAOzR,EAIX,SAAAgyS,EAA4BvgS,EAAqBljB,EAAQpB,GAErD,IAAI0mB,EAAM1mB,MACVP,OAAAsW,EAAA,EAAAtW,CAAOinB,aAAe5hB,OACtBrF,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASwkB,EAAI3hB,SAC3Bk/S,EAAA,GAAgBv9R,EAAI3hB,OAAQ3D,GAC5B,IACIrC,EADA2T,EAASqyS,EAAYzgS,GAClB9jB,EAAIkmB,EAAI3hB,OACf,IAAKhG,EAAI,EAAGA,EAAIyB,EAAGzB,IACf2T,EAAOgU,EAAI3nB,GAAIqC,GAkBvB,SAAA+jT,EAA4B7gS,EAAUljB,GAElC,IAAI2D,EAASk/S,EAAA,EAAgB7iT,GAE7B,GAAe,aAAX2D,EACA,OAAO,KAMX,IAHA,IAAI8N,EAASwyS,EAAY/gS,GAErBoC,KACK3nB,EAAI,EAAGA,EAAIgG,EAAQhG,IACxB2nB,EAAI5e,KAAK+K,EAAOzR,IAEpB,OAAOslB,EAuCL,SAAAi/R,EAAyBxtS,GAC3B,IAAIsE,EAAM,IAAI2nS,EAAQ,MAElB,OADA3nS,EAAI5J,OAAOsF,GACJsE,EA1Mfhd,OAAAmmT,EAAA,EAAAnmT,CAA0B,UAAU2kT,EAAQ3kT,OAAAqZ,EAAA,EAAArZ,CAAmBA,OAAAomT,EAAA,gBAAApmT,KAC/DA,OAAAqmT,EAAA,EAAArmT,CAA8B2kT,EAAQ,6BCpNtC,SAAA2B,GAAA,IAAAC,OAAA,IAAAD,MACA,oBAAAvxS,YACA7V,OACAsX,EAAAg2B,SAAAtrC,UAAAsV,MAiBA,SAAAgwS,EAAAC,EAAAC,GACA12S,KAAA22S,IAAAF,EACAz2S,KAAA42S,SAAAF,EAfA5nT,EAAA+nT,WAAA,WACA,WAAAL,EAAAhwS,EAAA/W,KAAAonT,WAAAN,EAAA9vS,WAAAqwS,eAEAhoT,EAAAutS,YAAA,WACA,WAAAma,EAAAhwS,EAAA/W,KAAA4sS,YAAAka,EAAA9vS,WAAA81R,gBAEAztS,EAAAgoT,aACAhoT,EAAAytS,cAAA,SAAAJ,GACAA,GACAA,EAAAiN,SAQAoN,EAAAtlT,UAAA6lT,MAAAP,EAAAtlT,UAAA8lT,IAAA,aACAR,EAAAtlT,UAAAk4S,MAAA,WACAppS,KAAA42S,SAAAnnT,KAAA8mT,EAAAv2S,KAAA22S,MAIA7nT,EAAAmoT,OAAA,SAAAjT,EAAAkT,GACAJ,aAAA9S,EAAAmT,gBACAnT,EAAAoT,aAAAF,GAGApoT,EAAAuoT,SAAA,SAAArT,GACA8S,aAAA9S,EAAAmT,gBACAnT,EAAAoT,cAAA,GAGAtoT,EAAAwoT,aAAAxoT,EAAAyoT,OAAA,SAAAvT,GACA8S,aAAA9S,EAAAmT,gBAEA,IAAAD,EAAAlT,EAAAoT,aACAF,GAAA,IACAlT,EAAAmT,eAAAN,WAAA,WACA7S,EAAAwT,YACAxT,EAAAwT,cACKN,KAKL9nT,EAAA,KAIAN,EAAA4mC,aAAA,oBAAA3wB,WAAA2wB,mBACA,IAAA4gR,KAAA5gR,cACA11B,WAAA01B,aACA5mC,EAAA2oT,eAAA,oBAAA1yS,WAAA0yS,qBACA,IAAAnB,KAAAmB,gBACAz3S,WAAAy3S,0GC3DM,SAAA79S,IAEF,IACIC,EADU,IAAIf,KAAKA,KAAKgB,IAAI,KAAM,EAAG,EAAG,EAAG,EAAG,IAC9BC,UAKhBC,EAAS,OAHc,IAAIlB,KAAKA,KAAKgB,IAAI,KAAM,EAAG,EAAG,EAAG,EAAG,IAC3BC,UAEqBF,GAKrDI,GAAiCJ,EAHvB,IAAIf,KAAKA,KAAKgB,IAAI,KAAM,EAAG,EAAG,EAAG,EAAG,IAC9BC,UAMpB,OAFA/J,OAAAkD,EAAA,EAAAlD,CAAkB,MAAXgK,GACPhK,OAAAkD,EAAA,EAAAlD,CAAyC,cAAlCiK,IACCA,EAA+BD,GAI3C,IAAIE,EAASN,EAAmB,GAG5BQ,GAFSR,EAAmB,GAExB,YAGCpI,KAAKc,MAAM4H,EAASE,eCkG7B,SAAAs9S,EAAkBC,EAAMC,GAEpB,OAAID,IAAUC,KAGVD,IAAUC,QAGTD,GAASC,IAGPD,EAAM59S,YAAc69S,EAAM79S,WAG/B,SAAA89S,EAAoCC,EAAYC,GAOlD,OALA/nT,OAAAkD,EAAA,EAAAlD,CAAO8nT,EAAW,8BAClB9nT,OAAAkD,EAAA,EAAAlD,CAAO+nT,EAAW,+BAEbL,EAASI,EAAWrkR,gBAAiBskR,EAAWtkR,kBAChDqkR,EAAWpkR,oBAAsBqkR,EAAWrkR,kBAI/C,SAAAskR,EAAoCF,EAAYC,GAMlD,OALA/nT,OAAAkD,EAAA,EAAAlD,CAAO8nT,EAAW,8BAClB9nT,OAAAkD,EAAA,EAAAlD,CAAO+nT,EAAW,+BAEbL,EAASI,EAAWnkR,gBAAiBokR,EAAWpkR,kBAChDmkR,EAAWlkR,oBAAsBmkR,EAAWnkR,kBA+B/C,SAAAqkR,EAAwB3iS,EAAeC,EAAcnG,GAEvD,OAAIkG,IAAOC,KAGPD,IAAOC,OAGPA,IAAOD,KAGPA,EAAGvU,aAAewU,EAAGxU,gBAWpBuU,EAAGme,kBAAmBle,EAAGke,iBAAqBokR,EAA0BviS,EAAGC,MAjD9E,SAA8BuiS,EAAYC,EAAW3oS,GAGvD,IAAKA,EACD,OAAOyoS,EAA0BC,EAAWC,IAAeC,EAA0BF,EAAWC,GAEpG,OAAO3oS,EAAmBve,KACtB,IAAK,UACD,OAAO,EACX,IAAK,OACD,OAAOgnT,EAA0BC,EAAWC,IAAeC,EAA0BF,EAAWC,GACpG,IAAK,SACD,OAAOF,EAA0BC,EAAWC,GAChD,QAEI,OADA/nT,OAAAkD,EAAA,EAAAlD,CAAkC,WAA3Bof,EAAmBve,KACnBmnT,EAA0BF,EAAWC,IAqChDG,CAAoB5iS,EAAGC,EAAGnG,IAIvBpf,OAAAmoT,EAAA,EAAAnoT,CAAYslB,EAAG/kB,MAAOglB,EAAGhlB,UA7MpCP,OAAAnB,EAAA,8BAAAmB,CAA8B0gB,EAAA,EAAU,2OCWlC0nS,EAULh4S,YAAaC,GACZA,EAAUA,MACVL,KAAKq4S,UAAYh4S,EAAiB,UAAIA,EAAQg4S,UAAU,KACxDr4S,KAAK0xR,WAAarxR,EAAkB,WAAIA,EAAQqxR,WAAW,KAC3D1xR,KAAKs4S,YAAcj4S,EAAmB,YAAIA,EAAQi4S,eAClDt4S,KAAKu4S,WAAal4S,EAAkB,WAAIA,EAAQk4S,WAAW,KAC3Dv4S,KAAK8xR,iBAAmBzxR,EAAwB,iBAAIA,EAAQyxR,iBAAiB,KAC7E9xR,KAAKgyR,cAAgB3xR,EAAqB,cAAIA,EAAQ2xR,iBACtDhyR,KAAKw4S,kBAAoBn4S,EAAyB,kBAAIA,EAAQm4S,kBAAkB,KAChFx4S,KAAKy4S,SAAWp4S,EAAgB,SAAIA,EAAQo4S,SAAS,KAKtDr4S,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKq4S,UAAU1wS,GAC/BuG,EAAA,GAAgBlO,KAAK0xR,WAAW/pR,GAChCuG,EAAA,EAAelO,KAAKs4S,YAAY3wS,GAChC3X,OAAAqwC,EAAA,EAAArwC,CAAsBgQ,KAAKu4S,WAAW5wS,GACtCuG,EAAA,GAAgBlO,KAAK8xR,iBAAiBnqR,GACtCuG,EAAA,EAAelO,KAAKgyR,cAAcrqR,EAAIuG,EAAA,IACtCA,EAAA,GAAgBlO,KAAKw4S,kBAAkB7wS,GACvCuG,EAAA,GAAiBlO,KAAKy4S,SAAS9wS,GAKhCvH,OAAQsI,GACP1I,KAAKq4S,UAAYnqS,EAAA,EAAgBxF,GACjC1I,KAAK0xR,WAAaxjR,EAAA,EAAgBxF,GAClC1I,KAAKs4S,YAAcpqS,EAAA,EAAexF,EAAI2T,EAAA,GACtCrc,KAAKu4S,WAAavoT,OAAAqwC,EAAA,EAAArwC,CAAsB0Y,GACxC1I,KAAK8xR,iBAAmB5jR,EAAA,EAAgBxF,GACxC1I,KAAKgyR,cAAgB9jR,EAAA,EAAexF,EAAIwF,EAAA,GACxClO,KAAKw4S,kBAAoBtqS,EAAA,EAAgBxF,GACzC1I,KAAKy4S,SAAWvqS,EAAA,EAAiBxF,GAKlCtI,MAAOuI,GAYN,OAXIA,IACHA,EAAS,IAAIyvS,GAEdzvS,EAAO0vS,UAAYr4S,KAAKq4S,UACxB1vS,EAAO+oR,WAAa1xR,KAAK0xR,WACrB1xR,KAAKs4S,cAAe3vS,EAAO2vS,YAAcpqS,EAAA,EAAqBlO,KAAKs4S,cACvE3vS,EAAO4vS,WAAav4S,KAAKu4S,WACzB5vS,EAAOmpR,iBAAmB9xR,KAAK8xR,iBAC/BnpR,EAAOqpR,cAAgB9jR,EAAA,EAAclO,KAAKgyR,eAC1CrpR,EAAO6vS,kBAAoBx4S,KAAKw4S,kBAChC7vS,EAAO8vS,SAAWz4S,KAAKy4S,SAChB9vS,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,mBAAmBooT,EAAkBpoT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qBCrFhF0oT,EAILt4S,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKykS,OAASpkS,EAAc,OAAIA,EAAQokS,OAAO,IAAI2T,EAKpDh4S,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1B3H,KAAKykS,OAAOxhS,OAAO0E,GAKpBvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKykS,OAAOrhS,OAAOsF,GAKpBtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI+vS,GAEV14S,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAChEnJ,KAAKykS,SAAU97R,EAAO87R,OAASzkS,KAAKykS,OAAOt7R,SACxCR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,wBAAwB0oT,EAAuB1oT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qBClD1F2oT,EAGLv4S,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAK5E1I,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAK5BvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAK5BtI,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAIgwS,GAEV34S,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SAChER,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,yBAAyB2oT,EAAwB3oT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCxC5F4oT,EAMLx4S,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKg9B,YAAc38B,EAAmB,YAAIA,EAAQ28B,YAAY,KAC9Dh9B,KAAKmzR,UAAY9yR,EAAiB,UAAIA,EAAQ8yR,aAC9CnzR,KAAKqpS,WAAahpS,EAAkB,WAAIA,EAAQgpS,cAKjDjpS,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKg9B,YAAYr1B,GACjCuG,EAAA,EAAelO,KAAKmzR,UAAUxrR,EAAIuG,EAAA,IAClCA,EAAA,EAAelO,KAAKqpS,WAAW1hS,EAAIuG,EAAA,IAKpC9N,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKg9B,YAAc9uB,EAAA,EAAgBxF,GACnC1I,KAAKmzR,UAAYjlR,EAAA,EAAexF,EAAIwF,EAAA,GACpClO,KAAKqpS,WAAan7R,EAAA,EAAexF,EAAIwF,EAAA,GAKtC9N,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIiwS,GAEV54S,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOq0B,YAAch9B,KAAKg9B,YAC1Br0B,EAAOwqR,UAAYjlR,EAAA,EAAclO,KAAKmzR,WACtCxqR,EAAO0gS,WAAan7R,EAAA,EAAclO,KAAKqpS,YAChC1gS,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,qBAAqB4oT,EAAoB5oT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBC1DpF6oT,EAILz4S,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAKspS,QAAUjpS,EAAe,QAAIA,EAAQipS,WAK3ClpS,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAKspS,QAAQ3hS,GAK7BvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAKspS,QAAUp7R,EAAA,EAAexF,EAAI43B,EAAA,GAKnClgC,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIkwS,GAEV74S,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAKspS,UAAW3gS,EAAO2gS,QAAUp7R,EAAA,EAAqBlO,KAAKspS,UACxD3gS,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,sBAAsB6oT,EAAqB7oT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,yOC/CtF8oT,EAOL14S,YAAaC,GACZA,EAAUA,MACVL,KAAKnQ,KAAOwQ,EAAY,KAAIA,EAAQxQ,KAAK,KACzCmQ,KAAK6U,SAAWxU,EAAgB,SAAIA,EAAQwU,SAAS,KACrD7U,KAAK+4S,UAAY14S,EAAiB,UAAIA,EAAQ04S,UAAU,KACxD/4S,KAAKg5S,gBAAkB34S,EAAuB,gBAAIA,EAAQ24S,mBAC1Dh5S,KAAKF,YAAcO,EAAmB,YAAIA,EAAQP,YAAY,IAAIuc,EAAA,EAKnEjc,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKnQ,KAAK8X,GAC1BuG,EAAA,GAAgBlO,KAAK6U,SAASlN,GAC9BuG,EAAA,GAAelO,KAAK+4S,UAAUpxS,GAC9BuG,EAAA,EAAelO,KAAKg5S,gBAAgBrxS,EAAIuG,EAAA,IACxClO,KAAKF,YAAYmD,OAAO0E,GAKzBvH,OAAQsI,GACP1I,KAAKnQ,KAAOqe,EAAA,EAAgBxF,GAC5B1I,KAAK6U,SAAW3G,EAAA,EAAgBxF,GAChC1I,KAAK+4S,UAAY7qS,EAAA,EAAexF,GAChC1I,KAAKg5S,gBAAkB9qS,EAAA,EAAexF,EAAIwF,EAAA,GAC1ClO,KAAKF,YAAYsD,OAAOsF,GAKzBtI,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAImwS,GAEdnwS,EAAO9Y,KAAOmQ,KAAKnQ,KACnB8Y,EAAOkM,SAAW7U,KAAK6U,SACvBlM,EAAOowS,UAAY/4S,KAAK+4S,UACxBpwS,EAAOqwS,gBAAkB9qS,EAAA,EAAclO,KAAKg5S,iBACxCh5S,KAAKF,cAAe6I,EAAO7I,YAAcE,KAAKF,YAAYqJ,SACvDR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,WAAW8oT,EAAU9oT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,6BChEhEipT,EAIL74S,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKuhS,cAAgBlhS,EAAqB,cAAIA,EAAQkhS,iBAKvDnhS,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,EAAelO,KAAKuhS,cAAc55R,GAKnCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKuhS,cAAgBrzR,EAAA,EAAexF,EAAIm/B,EAAA,GAKzCznC,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIswS,GAEVj5S,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAChEnJ,KAAKuhS,gBAAiB54R,EAAO44R,cAAgBrzR,EAAA,EAAqBlO,KAAKuhS,gBACpE54R,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,cAAcipT,EAAajpT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,8BC7CtEkpT,EAML94S,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAKm5S,qBAAuB94S,EAA4B,qBAAIA,EAAQ84S,wBACpEn5S,KAAKo5S,6BAA+B/4S,EAAoC,6BAAIA,EAAQ+4S,gCACpFp5S,KAAK4hS,gBAAkBvhS,EAAuB,gBAAIA,EAAQuhS,mBAK3DxhS,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAKe,WAAW4G,GACpCuG,EAAA,EAAelO,KAAKm5S,qBAAqBxxS,EAAIuG,EAAA,IAC7CA,EAAA,EAAelO,KAAKo5S,6BAA6BzxS,GACjDuG,EAAA,EAAelO,KAAK4hS,gBAAgBj6R,GAKrCvH,OAAQsI,GACP1I,KAAKe,WAAamN,EAAA,EAAoBxF,GACtC1I,KAAKm5S,qBAAuBjrS,EAAA,EAAexF,EAAIwF,EAAA,GAC/ClO,KAAKo5S,6BAA+BlrS,EAAA,EAAexF,EAAIuD,EAAA,GACvDjM,KAAK4hS,gBAAkB1zR,EAAA,EAAexF,EAAI0I,EAAA,GAK3ChR,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIuwS,GAEdvwS,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAOwwS,qBAAuBjrS,EAAA,EAAclO,KAAKm5S,sBAC7Cn5S,KAAKo5S,+BAAgCzwS,EAAOywS,6BAA+BlrS,EAAA,EAAqBlO,KAAKo5S,+BACrGp5S,KAAK4hS,kBAAmBj5R,EAAOi5R,gBAAkB1zR,EAAA,EAAqBlO,KAAK4hS,kBACxEj5R,GAKH,SAAA0wS,EAAkC3wS,GACtC,IAAIsE,EAAM,IAAIksS,EAEb,OADAlsS,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,mBAAmBkpT,EAAkBlpT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qBC1DhFspT,EAKLl5S,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,GAC5BuG,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAI2wS,GAClCr5S,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI2wS,GAEVt5S,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACnEnJ,KAAK8P,UAAWnH,EAAOmH,QAAU5B,EAAA,EAAqBlO,KAAK8P,UAC3D9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,eAAespT,EAActpT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sICzE9EZ,EAAAQ,EAAA0T,EAAA,sBAAAg2S,yECiBMC,EAMLn5S,YAAaC,GACZA,EAAUA,MACVL,KAAKpD,OAASyD,EAAc,OAAIA,EAAQzD,OAAO,KAC/CoD,KAAKs0R,YAAcj0R,EAAmB,YAAIA,EAAQi0R,YAAY,KAC9Dt0R,KAAKy8R,WAAap8R,EAAkB,WAAIA,EAAQo8R,WAAW,KAC3Dz8R,KAAKzP,MAAQ8P,EAAa,MAAIA,EAAQ9P,MAAM,IAAImgB,EAAA,EAKjDtQ,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKpD,OAAO+K,GAC5BuG,EAAA,GAAgBlO,KAAKs0R,YAAY3sR,GACjCuG,EAAA,GAAgBlO,KAAKy8R,WAAW90R,GAChC3H,KAAKzP,MAAM0S,OAAO0E,GAKnBvH,OAAQsI,GACP1I,KAAKpD,OAASsR,EAAA,EAAgBxF,GAC9B1I,KAAKs0R,YAAcpmR,EAAA,EAAgBxF,GACnC1I,KAAKy8R,WAAavuR,EAAA,EAAgBxF,GAClC1I,KAAKzP,MAAM6S,OAAOsF,GAKnBtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAI4wS,GAEd5wS,EAAO/L,OAASoD,KAAKpD,OACrB+L,EAAO2rR,YAAct0R,KAAKs0R,YAC1B3rR,EAAO8zR,WAAaz8R,KAAKy8R,WACrBz8R,KAAKzP,QAASoY,EAAOpY,MAAQyP,KAAKzP,MAAM4Y,SACrCR,GAKH,SAAA6wS,EAA4B9wS,GAChC,IAAIsE,EAAM,IAAIusS,EAEb,OADAvsS,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,aAAaupT,EAAYvpT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,qBC1DpEypT,EAILr5S,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKmgS,aAAe9/R,EAAoB,aAAIA,EAAQ8/R,gBAKrD//R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,EAAelO,KAAKmgS,aAAax4R,GAKlCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKmgS,aAAejyR,EAAA,EAAexF,EAAI8wS,GAKxCp5S,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI8wS,GAEVz5S,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAChEnJ,KAAKmgS,eAAgBx3R,EAAOw3R,aAAejyR,EAAA,EAAqBlO,KAAKmgS,eAClEx3R,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,eAAeypT,EAAczpT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,6BC/CxE0pT,EAKLt5S,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,EAAelO,KAAK8P,QAAQnI,EAAIuG,EAAA,IAChCA,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIwF,EAAA,GAClClO,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,EAAA,GAK3C7L,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI+wS,GAEV15S,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAOmH,QAAU5B,EAAA,EAAclO,KAAK8P,SAChC9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,gBAAgB0pT,EAAe1pT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,6PC1D1E,SAAA2pT,EAA+BtsS,GACjC,IAAIusS,EAAgB5pT,OAAA6pT,EAAA,EAAA7pT,CAAkB,IAAIusC,EAAA,EAAWlvB,IACrD,OACI/X,OAAQskT,EAActkT,OACtBskT,cAAeA,SAIjBE,UAA2CrmB,EAAA,aAmB7CrzR,YAAYC,GACRQ,QACAR,EAAUA,MACVL,KAAK2gB,gBAAkBtgB,EAAQsgB,iBAAmB,EAClD3gB,KAAKK,QAAUA,EACfL,KAAK+5S,gBAAkB,IAAIC,EAAA,GAAkBC,gBAAiBN,IAE9D35S,KAAK+5S,gBAAgBn7R,GAAG,UAAaie,IACjC78B,KAAKk6S,mBAAmBr9Q,KAE5B78B,KAAK+5S,gBAAgBn7R,GAAG,aAAe,CAACu7R,EAAM9sS,KAE1CrN,KAAKo6S,OAASpqT,OAAAia,EAAA,EAAAja,GAQdgQ,KAAKqe,KAAK,cAAe87R,EAAM9sS,KAEnCrN,KAAKq6S,mBAAoB,EACzBr6S,KAAKs6S,gBAAkB,EACvBt6S,KAAKu6S,mBAAqB,EAC1Bv6S,KAAKw6S,YAECp6S,YACNJ,KAAKq6S,mBAAoB,EACzBr6S,KAAKy6S,cAAe,EACpBz6S,KAAKs6S,gBAAkB,EACvBt6S,KAAKu6S,mBAAqB,EAC1Bv6S,KAAK06S,UACL16S,KAAK26S,kBAECv6S,cAAcw6S,GAMpB,OALA56S,KAAK45S,cAAgB5pT,OAAA6pT,EAAA,EAAA7pT,CAAkB4qT,GACvC5qT,OAAAmkS,EAAA,EAAAnkS,CAA+B,IAAxB4qT,EAAatlT,QACpB0K,KAAK62R,gBAAkB+jB,EAAa3mT,YACpCjE,OAAAmkS,EAAA,EAAAnkS,CAA+B,KAAxB4qT,EAAatlT,SAEhB0K,KAAK66S,0BAA4B76S,KAAK62R,kBAAoB72R,KAAK66S,0BACxD76S,KAAK86S,cAAc,6BAUxB16S,QAAQqqS,GACd,GAAIzqS,KAAKy6S,aAEL,OAAO,EAGXhQ,EAAiBA,aAAyBjvS,YAAeivS,EAAgBA,EAAcn0R,OAEvFtW,KAAK26S,eAAetiT,KAAKoyS,GACzBzqS,KAAKu6S,oBAAsB9P,EAAc/iS,WACzC,IAAIkzS,EAAe,IAAIr+Q,EAAA,EAAWkuQ,GAClC,IAAKzqS,KAAK+6S,cAAcH,GACpB,OAAO,EAIX,GAFA5qT,OAAAmkS,EAAA,EAAAnkS,CAAO4qT,EAAatlT,QAAS,IAEzB0K,KAAK45S,cAActkT,SAAWm1S,EAAc/iS,WAC5C,OAAO1H,KAAK86S,cAAc,oDACKrQ,EAAc/iS,WAAa,oCAC5B1H,KAAK45S,cAActkT,QAGrD,IAAI0lT,EAAkBJ,EAAatlT,OAE/B2lT,EAAgBL,EAAatkS,OAAO5O,WACxC1H,KAAKs6S,iBAAoBW,EAAgBD,EACzCh7S,KAAKg7S,gBAAkBA,EAIvB,IAAIE,EAAazQ,EAAc/kS,MAAMs1S,EAAiBC,GACtDj7S,KAAK06S,OAAOriT,KAAK6iT,GAOrB96S,KAAKiN,GACIrN,KAAKq6S,mBAAsBr6S,KAAKy6S,cACjCz6S,KAAK+5S,gBAAgBoB,KAAK9tS,GAGxBjN,mBAAmBy8B,GACzB7sC,OAAAmkS,EAAA,EAAAnkS,CAAO6sC,GACP,IAAI+8Q,EAAgB5pT,OAAA6pT,EAAA,EAAA7pT,CAAkB,IAAIusC,EAAA,EAAWM,IAOrD,GADA78B,KAAKqe,KAAK,QAASwe,GACW,MAA1B+8Q,EAAcxjR,QAAiB,CAG/B,GADAp2B,KAAKo7S,QAAQv+Q,GACT78B,KAAKy6S,aACL,OAAO,EAEX,IAAIY,EAAoBrrT,OAAAsrT,EAAA,EAAAtrT,CAAmBgQ,KAAK06S,QAchD,OAZA16S,KAAKu7S,OAASvrT,OAAAia,EAAA,EAAAja,GAMdgQ,KAAKqe,KAAK,oBAAqBg9R,GAC3Br7S,KAAKw7S,sBACLx7S,KAAKw7S,qBAAqBH,GAG9Br7S,KAAKw6S,aACE,EAEN,MAA8B,MAA1BZ,EAAcxjR,QACZp2B,KAAK86S,cAAc,8BAEK,MAA1BlB,EAAcxjR,QACZp2B,KAAKo7S,QAAQv+Q,QADnB,EAITz8B,cAAcq7S,GASV,OARAz7S,KAAKy6S,cAAe,EAOpBz6S,KAAKqe,KAAK,QAAS,IAAIllB,MAAMsiT,GAAez7S,KAAK07S,eAAiB17S,KAAK07S,eAAeniS,UAAY,OAC3F,mBCtLf,IAAAoiS,EAGAA,EAAA,WACA,OAAA37S,KADA,GAIA,IAEA27S,KAAAn/Q,SAAA,cAAAA,KAAA,EAAAo/Q,MAAA,QACC,MAAA78S,GAED,iBAAA7P,SAAAysT,EAAAzsT,QAOAH,EAAAD,QAAA6sT,gECfA,IAEY13Q,EAFZtnB,EAAAvtB,EAAA,KAEA,SAAY60C,GACTA,IAAA,eACDA,IAAA,qCACAA,IAAA,yBACAA,IAAA,yBACAA,IAAA,2BACAA,IAAA,8BACAA,IAAA,oCACAA,IAAA,cACAA,IAAA,yCACAA,IAAA,4BAVF,CAAYA,WA0BZj0C,OAAA2sB,EAAA,EAAA3sB,CAAoB,mBAAmBi0C,EAZjC,SAAkC52B,EAA0B1F,GACjEA,EAAI5T,UAAUsZ,IAIT,SAAkC3E,GACvC,OAAOA,EAAIzU,aAM4F,oCChClG,SAAAmpB,EAAeF,EAAeC,GACnC,IAAI9C,EAEJ,OAAO,YAAYpT,GAMlB,OALGiW,IACF7C,EAAS6C,EAAG1W,MAAM2W,GAAWnd,KAAMyG,WACnCyW,EAAK,MAGC7C,oHCgBH,SAAAwhS,EAAwCC,EAAgBjsT,GAE1DG,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsB8rT,GAE7B9rT,OAAAynB,EAAA,EAAAznB,EACIH,KAAMA,EACNoT,OAzBR,SAAsB84S,GAElB,OADA/rT,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsB+rT,GACtB,SAAUxrT,EAAOoB,GACfpB,GAAUA,EAAM0S,SACjB1S,EAAQ,IAAIwrT,EAAKxrT,IAErBA,EAAM0S,OAAOtR,IAmBLqqT,CAAaF,GACrB14S,OAjBR,SAAsB24S,GAGlB,OAFA/rT,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsB+rT,GAEtB,SAAUpqT,GACb,IAAIpB,EAAQ,IAAIwrT,EAEhB,OADAxrT,EAAM6S,OAAOzR,GACNpB,GAWC0rT,CAAaH,GACrBz4S,aAAc,4ECtBhB64S,EAcN97S,YAAYC,GAKRL,KAAKm8S,aAAe,KACpBn8S,KAAKo8S,iBAAmB/7S,EAAQg8S,gBAEhCr8S,KAAKs8S,iBAAmB,KACxBt8S,KAAKu8S,gBAAkBl8S,EAAQm8S,eAQ5Bp8S,iBAEH,IAAKJ,KAAKm8S,aAAc,CACDn8S,KAAK+qS,sBACxB/qS,KAAKm8S,aAAgB,KAEzB,OAAOn8S,KAAKm8S,aAOT/7S,sBAMH,OAJKJ,KAAKy8S,oBAENz8S,KAAKy8S,kBAAoB,MAEtBz8S,KAAKy8S,kBAQTr8S,gBAEH,OAAO,4ICxDLsoC,EAILtoC,YAAaC,GACZA,EAAUA,MACVL,KAAKwP,gBAAkBnP,EAAuB,gBAAIA,EAAQmP,gBAAgB,KAC1ExP,KAAKgP,oBAAsB3O,EAA2B,oBAAIA,EAAQ2O,oBAAoB,IAAI0tS,EAAA,EAK3Ft8S,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKwP,gBAAgB7H,GACrC3H,KAAKgP,oBAAoB/L,OAAO0E,GAKjCvH,OAAQsI,GACP1I,KAAKwP,gBAAkB/G,EAAA,EAAgBC,GACvC1I,KAAKgP,oBAAoB5L,OAAOsF,GAKjCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI+/B,GAEd//B,EAAO6G,gBAAkBxP,KAAKwP,gBAC1BxP,KAAKgP,sBAAuBrG,EAAOqG,oBAAsBhP,KAAKgP,oBAAoB7F,SAC/ER,GAKH,SAAAg0S,EAA4Cj0S,GAChD,IAAIsE,EAAM,IAAI07B,EAEb,OADA17B,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAoZ,EAAA,EAAApZ,CAA0B,6BAA6B04C,EAA4B14C,OAAAqZ,EAAA,EAAArZ,CAAmB,IAAI,wHC3CpG44C,EAMLxoC,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIivS,EAAA,EACxE58S,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAKoP,mBAAqB/O,EAA0B,mBAAIA,EAAQ+O,mBAAmB,KACnFpP,KAAK21R,cAAgBt1R,EAAqB,cAAIA,EAAQs1R,iBAKvDv1R,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BM,EAAA,GAAgBjI,KAAKsO,eAAe3G,GACpC3X,OAAA6sT,EAAA,EAAA7sT,CAAyBgQ,KAAKoP,mBAAmBzH,GACjDM,EAAA,EAAejI,KAAK21R,cAAchuR,GAKnCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKsO,eAAiBrG,EAAA,EAAgBS,GACtC1I,KAAKoP,mBAAqBpf,OAAA6sT,EAAA,EAAA7sT,CAAyB0Y,GACnD1I,KAAK21R,cAAgB1tR,EAAA,EAAeS,EAAIo0S,EAAA,GAKzC18S,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIigC,GAEV5oC,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAOyG,mBAAqBpP,KAAKoP,mBAC7BpP,KAAK21R,gBAAiBhtR,EAAOgtR,cAAgB1tR,EAAA,EAAqBjI,KAAK21R,gBACpEhtR,GAgBT3Y,OAAAi1S,EAAA,EAAAj1S,CAA0B,8BAA8B44C,EAA6B54C,OAAAk1S,EAAA,EAAAl1S,CAAmB,IAAI,yIC7DtG81C,EAKL1lC,YAAaC,GACZA,EAAUA,MACVL,KAAKe,WAAaV,EAAkB,WAAIA,EAAQU,WAAW,KAC3Df,KAAK+8S,mBAAqB18S,EAA0B,mBAAIA,EAAQ08S,sBAChE/8S,KAAKg9S,uBAAyB38S,EAA8B,uBAAIA,EAAQ28S,0BAKzE58S,OAAQuH,GACPc,EAAA,GAAoBzI,KAAKe,WAAW4G,GACpCc,EAAA,EAAezI,KAAK+8S,mBAAmBp1S,EAAIc,EAAA,IAC3CA,EAAA,EAAezI,KAAKg9S,uBAAuBr1S,GAK5CvH,OAAQsI,GACP1I,KAAKe,WAAa0H,EAAA,EAAoBC,GACtC1I,KAAK+8S,mBAAqBt0S,EAAA,EAAeC,EAAID,EAAA,GAC7CzI,KAAKg9S,uBAAyBv0S,EAAA,EAAeC,EAAIO,EAAA,GAKlD7I,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIm9B,GAEdn9B,EAAO5H,WAAaf,KAAKe,WACzB4H,EAAOo0S,mBAAqBt0S,EAAA,EAAczI,KAAK+8S,oBAC3C/8S,KAAKg9S,yBAA0Br0S,EAAOq0S,uBAAyBv0S,EAAA,EAAqBzI,KAAKg9S,yBACtFr0S,GAKH,SAAAs0S,EAA4Cv0S,GAChD,IAAIsE,EAAM,IAAI84B,EAEb,OADA94B,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAoZ,EAAA,EAAApZ,CAA0B,6BAA6B81C,EAA4B91C,OAAAqZ,EAAA,EAAArZ,CAAmB,IAAI,wEChDpGktT,EAKN98S,cAEIJ,KAAKm9S,KAAK,GAOd/8S,OACI,IAAIg9S,EAAUp9S,KAAKq9S,SAKnB,OAJAr9S,KAAKq9S,UAAY,EACbr9S,KAAKq9S,SAAWH,EAAwBI,UACxCt9S,KAAKm9S,KAAK,GAEPC,EAMXh9S,SACI,OAAOJ,KAAKq9S,SAOhBj9S,KAAK7P,GACDyP,KAAKq9S,SAAW9sT,GAhCG2sT,EAAAI,SAAoB,8LC+BrCC,UAAkC9pB,EAAA,aAqCxCrzR,YAAak1R,EAAyBj1R,GAClCQ,QApCUb,KAAAw9S,aAAwB,EAqClCxtT,OAAAmkS,EAAA,EAAAnkS,CAAOslS,aAAmBmoB,EAAA,GAE1Bz9S,KAAKq+R,eAAiB/I,EAAQooB,oBAa9Br9S,EAAUA,OACFuN,4BAA8BvN,EAAQuN,6BAA+B,IAC7EvN,EAAQwN,uBAAyBxN,EAAQwN,wBAA0B,GACnExN,EAAQyN,2BAA6BzN,EAAQyN,4BAA8B,GAC3EzN,EAAQ0N,2BAAoE,MAAtC1N,EAAQ0N,iCAA4E9b,GAAtCoO,EAAQ0N,2BAA2C,EAAI1N,EAAQ0N,2BACnJ1N,EAAQ2N,oBAAoB3N,EAAQ2N,kBACpC3N,EAAQ4N,SAAW5N,EAAQ4N,UAAY,EAGvCjO,KAAK29S,oBAAsBt9S,EAAQuN,4BACnC5N,KAAK49S,cAAgBv9S,EAAQwN,uBAC7B7N,KAAK69S,kBAAoBx9S,EAAQyN,2BACjC9N,KAAK+N,2BAA6B1N,EAAQ0N,2BAC1C/N,KAAK89S,mBAAqBz9S,EAAQ2N,kBAClChO,KAAKiO,SAAW5N,EAAQ4N,SAExBjO,KAAK+9S,gBAAkB,UAEvB/9S,KAAKg+S,oBAAsB,EAC3Bh+S,KAAK8Q,kBAQL9Q,KAAKw9S,aAAc,EAEnB9nR,EAAa,KAET11B,KAAKi+S,sBAAwBjoR,IAEpBA,GAGDN,EAAa,KAKT11B,KAAKqe,KAAK,UAAWre,KAAKsO,sBAvE1CgnR,cACI,OAAOt1R,KAAKq+R,eAAe/I,QAG/BhnR,qBACI,OAAOtO,KAAK+9S,gBAGhBx1S,kBACI,OAAOvI,KAAKk+S,aAsEV99S,sBAAsBm1B,GAE5BvlC,OAAAmkS,EAAA,EAAAnkS,CAAQ,mBAAsBulC,GAE9B,IAAI+/P,EAAUt1R,KAAKq+R,eAAe/I,QAElCtlS,OAAAmuT,EAAA,EAAAnuT,CAAS,+BAET,IAAIovS,EAAU,IAAIgf,EAAA,GACdxwS,4BAA6B5N,KAAK29S,oBAClC9vS,uBAAwB7N,KAAK49S,cAC7B9vS,2BAA4B9N,KAAK69S,kBACjC9vS,2BAA4B/N,KAAK+N,2BACjCC,kBAAmBhO,KAAK89S,mBACxB7vS,SAAUjO,KAAKiO,WAGnBqnR,EAAQ+oB,mBAAmBjf,EAAS,CAACppQ,EAAKw/P,KAEtC,GAAIx/P,GAGA,GADAh2B,KAAKqe,KAAK,iBAAkB2X,GACxBT,EACA,OAAOA,EAASS,QAIpBh2B,KAAK+9S,gBAAkBvoB,EAASlnR,eAChCtO,KAAK29S,oBAAsBnoB,EAASjnR,0BACpCvO,KAAK49S,cAAgBpoB,EAAShnR,qBAC9BxO,KAAK69S,kBAAoBroB,EAAS/mR,yBAElCzO,KAAKk+S,cAAgBl+S,KAAK69S,kBAAoB,IAAO79S,KAAK29S,oBAEtDQ,EAAA,IACAnuT,OAAAmuT,EAAA,EAAAnuT,CAAS,wBACTA,OAAAmuT,EAAA,EAAAnuT,CAAS,oCAAsCgQ,KAAK29S,qBACpD3tT,OAAAmuT,EAAA,EAAAnuT,CAAS,oCAAsCgQ,KAAK49S,eACpD5tT,OAAAmuT,EAAA,EAAAnuT,CAAS,oCAAsCgQ,KAAK69S,mBACpD7tT,OAAAmuT,EAAA,EAAAnuT,CAAS,oCAAsCgQ,KAAKk+S,eAGxDl+S,KAAKq+R,eAAeigB,qBAAqBt+S,MAErCu1B,GACAA,EAASS,KAOf51B,6CAA6Cm+S,GAEnDvuT,OAAAmkS,EAAA,EAAAnkS,CAAOuuT,aAAwBH,EAAA,GAEVG,EAAaztS,eAEnB6lB,QAAUi/P,IAErB,IAAI4oB,EAAiBx+S,KAAK8Q,eAAe8kR,EAAcnlR,cACnD+tS,IACIA,EAAe3vS,cAAcylR,cAAgBC,EAAA,EAAaC,eAC1D71R,QAAQC,IAAI,0GACZD,QAAQC,IAAI,6FAEZ4/S,EAAeC,qBAAqB7oB,EAAcrlS,UAQxD6P,+CAA+Cm+S,GAErDvuT,OAAAmkS,EAAA,EAAAnkS,CAAOuuT,aAAwBH,EAAA,GAE/BpuT,OAAAmuT,EAAA,EAAAnuT,CAAS,oDAAsDuuT,EAAavtS,OAAO5X,YAGnF4G,KAAKq+R,eAAeqgB,wCAA8CH,EAAcjwS,gBAE5EiwS,EAAavtS,SAAWujR,EAAA,EAAYjsQ,8BAIpC3pB,QAAQC,IAAI,mGACZoB,KAAKw9S,aAAc,EACnBx9S,KAAKs+R,UAAU,SAEfigB,EAAavtS,SAAWujR,EAAA,EAAYtuQ,aAgBpCjmB,KAAKw9S,aAAc,EACnBx9S,KAAKs+R,UAAU,SAMnBt+R,KAAKqe,KAAK,iBAAkBkgS,EAAavtS,OAAQutS,EAAattS,gBAIxD7Q,4CAA6Cm+S,GACnDvuT,OAAAmkS,EAAA,EAAAnkS,CAAOuuT,aAAwBH,EAAA,GAE/BG,EAAahtS,OAAOolB,QAAS1Z,IACzB,IAAIuhS,EAAiBx+S,KAAK8Q,eAAemM,EAAMxM,cAC/CzgB,OAAAmkS,EAAA,EAAAnkS,CAAOwuT,EAAgB,8BAGvBA,EAAeC,qBAAqBxhS,EAAM9L,eAI3C/Q,sBAAsBuR,GACzB3hB,OAAAmkS,EAAA,EAAAnkS,CAAO2hB,EAAoBxgB,eAAe,mBAE1C6O,KAAK2+S,mBAAqBhtS,EAAoB1B,eAE9CjQ,KAAKqe,KAAK,mBAAoB1M,GAE9B,IAAIpB,EAAmBoB,EAAoBpB,iBAEX,IAA5BA,EAAiBjb,QAEjBtF,OAAAmuT,EAAA,EAAAnuT,CAAS,2DAKTgQ,KAAKqe,KAAK,eASVre,KAAKqe,KAAK,yBAA0B1M,GAIpCpB,EAAiBomB,QAAU4nR,IAEvB,OAASA,EAAaz7S,aAClB,KAAKs7S,EAAA,EAEDp+S,KAAK4+S,6CAA0FL,GAC/F,MACJ,KAAKH,EAAA,EACDp+S,KAAK6+S,+CAA8FN,GACnG,MACJ,KAAKH,EAAA,EACDp+S,KAAK8+S,4CAAwFP,GAC7F,MACJ,QACI5/S,QAAQC,IAAI,0BAA2B2/S,EAAanlT,gBAU9DgH,iBAAiBm1B,GACvBG,EAAa,KAKT11B,KAAK+9S,gBAAkB,aACvB/9S,KAAKqe,KAAK,cACVkX,MAUDn1B,UAAUm1B,GAIb,GAFAvlC,OAAAmkS,EAAA,EAAAnkS,CAAO,mBAAsBulC,EAAS,iCAET,eAAzBv1B,KAAK+9S,gBAEL,OAAOxoR,EAAS,IAAIp8B,MAAM,uBAG9B,GAAI3G,OAAOC,SAAcuN,KAAK+9S,iBAAkB,CAI5C,GAFA/9S,KAAKq+R,eAAe0gB,uBAAuB/+S,KAAK+9S,kBAE3C/9S,KAAKs1R,QACN,OAAOt1R,KAAKg/S,iBAAiBzpR,GAIjCv1B,KAAKs1R,QAAQ2pB,qBACT9sS,iBAA0BnS,KAAK+9S,kBAC/B/nR,IAEIA,GAMAh2B,KAAKqe,KAAK,iBAAkB2X,GAEhCh2B,KAAKg/S,iBAAiBzpR,UAI1BvlC,OAAAmkS,EAAA,EAAAnkS,CAAgC,YAAzBgQ,KAAK+9S,iBACZ/9S,KAAKg/S,iBAAiBzpR,GAQvBn1B,mBAEH,OADAJ,KAAKg+S,qBAAuB,EACrBh+S,KAAKg+S,oBAIT59S,oBAAoBqQ,EAAcmlR,GACrC5lS,OAAAmkS,EAAA,EAAAnkS,CAAOgQ,KAAKk/S,WAAY,kDACxBlvT,OAAAmkS,EAAA,EAAAnkS,CAAO4lS,EAAcjC,qBAAqBljR,eAAiBA,GAC3DzQ,KAAK8Q,eAAeL,GAAgBmlR,EAOpC51R,KAAKqe,KAAK,aAAcu3Q,GAIlBx1R,mCAAmC80R,GAEzC,IAAInwR,EAAO/E,KAwBX01B,EApBA,SAAAypR,IAEIC,EAE6B,YAAzBr6S,EAAKg5S,gBAGLroR,EAAaypR,GAEmB,eAAzBp6S,EAAKg5S,gBAGR,mBAAsB7oB,GACtBA,EAAK,IAAI/7R,MAAM,kCAGnB+7R,MA0HL90R,QAAQyO,EAA6BG,EAA6CI,EAAyC8lR,GAC9HllS,OAAAmkS,EAAA,EAAAnkS,MAAgBiC,IAATijS,GAAuB,mBAAsBA,GAEpDrmR,EAAcjS,OAAS5M,OAAAqvT,EAAA,EAAArvT,CAAc6e,EAAcjS,QACnD,IAAIg5R,EAAgB,IAAI0pB,EAAA,EAAct/S,KAAM6O,EAAeG,EAAqBI,GAahF,OAXApP,KAAKu/S,mCAAoCvpR,IACrC,GAAIA,EACA,OAAOk/P,GAAQA,EAAKl/P,GAExB4/P,EAAc4pB,SAAS,SAASxpR,GAC5B,GAAGA,EACC,OAAOk/P,GAAQA,EAAKl/P,GAExBk/P,GAAQA,EAAKl/P,EAAI4/P,OAGlBA,EAWJx1R,aAAaq/S,EAAiCzwS,EAA6CI,EAA0C8lR,GAExIuqB,EAAe9oR,QAAQ,SAAU9nB,GAC7BA,EAAcjS,OAAS5M,OAAAqvT,EAAA,EAAArvT,CAAc6e,EAAcjS,UAGvD,IAAI8iT,EAAqB,IAAIC,EAAA,EAAmB3/S,KAAMy/S,EAAgBzwS,EAAqBI,GAa3F,OAXApP,KAAKu/S,mCAAmC,SAAUvpR,GAC9C,GAAIA,EACA,OAAOk/P,GAAQA,EAAKl/P,GAExB0pR,EAAmBF,SAAS,SAASxpR,GACjC,GAAGA,EACC,OAAOk/P,GAAQA,EAAKl/P,GAExBk/P,GAAQA,EAAKl/P,EAAI0pR,OAGlBA,EAgDJt/S,WACH,MAAuC,iBAAzBJ,KAAK+9S,gBAGb39S,QAAQw1R,GAEd,IAAInlR,EAAemlR,EAAcjC,qBAAqBljR,aACtDzgB,OAAAmkS,EAAA,EAAAnkS,CAAOygB,GACPzgB,OAAAmkS,EAAA,EAAAnkS,CAAOygB,KAAgBzQ,KAAK8Q,gBAC5B8kR,EAAc/2Q,4BACP7e,KAAK8Q,eAAeL,GAGxBrQ,wBAAwB0Q,EAAsCykB,GACjEvlC,OAAAmkS,EAAA,EAAAnkS,CAAOqF,MAAM8G,QAAQ2U,IAErB9gB,OAAAmkS,EAAA,EAAAnkS,CAAOgQ,KAAKk/S,YAEZpuS,EAAe6lB,QAAUi/P,IACrB51R,KAAK4/S,QAAQhqB,KAGjB51R,KAAKs1R,QAAQuqB,sBACTvxS,eAAwBtO,KAAKsO,eAC7B0D,iBAAkBlB,EAAe2qB,IAAI,SAAUm6P,GAC3C,OAAOA,EAAcpmR,mBAE1B,SAAUwmB,GAGTT,EAASS,KAIP51B,uBAAuBw1R,EAAmCrgQ,GAChEv1B,KAAK8/S,yBAAyBlqB,GAAgBrgQ,GAG3Cn1B,kBAAkB4N,EAAmBunB,GACxCvlC,OAAAmkS,EAAA,EAAAnkS,CAAO,mBAAsBulC,GAC7Bv1B,KAAKs1R,QAAQyqB,kBAAkB/xS,EAA2BhO,KAAK+9S,gBAAiB,CAAC/nR,EAAKlmB,IAC9EkmB,EACOT,EAASS,GAEhBlmB,EAAQ,KAAOykR,EAAA,EAAYjyR,KACpBizB,EAAS,IAAIp8B,MAAM,4BAA8B2W,EAAQ,GAAG1W,kBAEvEm8B,KAUDn1B,qCAAqCm1B,GAExCvlC,OAAAmuT,EAAA,EAAAnuT,CAAS,2DAET,IAAIgwT,EAAqBhgT,KAAK8Q,eAE9B9Q,KAAKq+R,eAAe0gB,uBAAuB/+S,KAAK+9S,iBAEhD/tT,OAAAiwT,EAAA,EAAAjwT,EAEIgQ,KAAKi+S,sBAAsBntT,KAAKkP,MAEhC,SAAUu1B,GAEN,IAAIrjC,EAAO8N,KAAKq+R,eAAe6hB,gBAAwBlgT,KAAKsO,gBAC5Dte,OAAAmkS,EAAA,EAAAnkS,CAAOkC,IAAS8N,MAIhB,IAAIqP,KAEJ,IAAK,IAAIxe,KAAOmvT,EAAoB,CAChC,IAAIpqB,EAAgBoqB,EAAmBnvT,GACvCb,OAAAmkS,EAAA,EAAAnkS,CAAO4lS,EAAcjC,qBAAqBljR,aAAe,GACzDpB,EAAchX,KAAK,IAAI+lT,EAAA,GACnBvvS,cAAe+mR,EAAc/mR,cAC7BE,eAAgB6mR,EAAc7mR,eAC9BC,oBAAqB4mR,EAAcjC,wBAI3C,IAAI0B,EAA4B,IAAI+oB,EAAA,GAChC9vS,eAAwBtO,KAAK+9S,gBAC7B3uS,mBAAoB+wS,EAAA,EAAmBjgB,KACvC7wR,cAAeA,IAGnBrP,KAAKs1R,QAAQC,qBAAqBF,EAA2B,CAACr/P,EAAKw/P,KAE1Dx/P,IACDhmC,OAAAmkS,EAAA,EAAAnkS,CAAOwlS,aAAoB4oB,EAAA,GACA5oB,EAAS1lR,QAEf6mB,QAAQ,SAAUg+P,EAAqB6N,GAExD,IAAI/xR,EAAepB,EAAcmzR,GAAOxzR,oBAAoByB,aACxDmlR,EAAgB51R,KAAK8Q,eAAeL,GAEpCkkR,EAAoB5zR,aAAewzR,EAAA,EAAYjyR,MAE/CszR,EAAcv7Q,OAASs6Q,EACvBiB,EAAcpmR,gBAAkBmlR,EAAoBnlR,gBACpDomR,EAAcjC,qBAAqBmB,iBAAmBH,EAAoBllR,wBAC1EmmR,EAAcjC,qBAAqBoB,UAAYJ,EAAoBjlR,iBACnEkmR,EAAcjmR,aAAeglR,EAAoBhlR,aAG7CwuS,EAAA,GACAnuT,OAAAmuT,EAAA,EAAAnuT,CAAS,oCAAsC2kS,EAAoBv7R,aAKvEpJ,OAAAmuT,EAAA,EAAAnuT,CAAS,oCAAsC2kS,EAAoB5zR,WAAW3H,eAK1Fm8B,EAASS,OAKlBT,oICrvBD6qR,UAA6BC,EAAA,EAEnCjgT,YAAaszR,EAAmC7kR,EAA8B8kR,EAA8CvkR,GAExHvO,MAAM6yR,EAAa7kR,EAAc8kR,GACjC3zR,KAAKsgT,oBAAsBlxS,GAAsBmxS,EAAA,EAAmB9gB,QAGjEr/R,WAEH,IAAIiH,EAAM,GAMV,OALAA,GAAK,yBAA2BrH,KAAK4zR,eAAex6R,WAAa,KACjEiO,GAAK,yBAA2BrH,KAAK8zR,sBAAsB16R,WAAa,KACxEiO,GAAK,yBAA2BrH,KAAKsgT,oBAAoBlnT,WAAa,KACtEiO,GAAK,yBAA2BrH,KAAKo0R,iBAAmB,KACxD/sR,GAAmDrH,KAAK40R,YAAYx7R,WAUjEgH,UAAU80R,GAEbllS,OAAAsW,EAAA,EAAAtW,EAAQklS,GAAS,mBAAsBA,GAKvCl1R,KAAKqe,KAAK,cAEVre,KAAKg0R,cAAc8rB,yBAAyB9/S,MAAO,SAAUg2B,GACrDk/P,GACAA,EAAKl/P,KAWV51B,SAAS80R,GACZllS,OAAAsW,EAAA,EAAAtW,MAAgBiC,IAATijS,GAAuB,mBAAsBA,GAEpDmrB,EAAA,EAAkBG,iBAAiBxgT,KAAKg0R,cAAeh0R,KAAKsgT,qBAAsBtgT,MAAQg2B,IAClFA,IACAh2B,KAAKqe,KAAK,MAAO2X,EAAInxB,SACrB7E,KAAKqe,KAAK,eAIV62Q,GACAA,EAAKl/P,KAWV51B,OAAOs1R,EAAYtmR,EAAyCmmB,GAC3D,mBAAsBnmB,IACtBmmB,EAAWnmB,EACXA,EAAqB,MAEzBpP,KAAKsgT,oBAAsBlxS,GAAsBpP,KAAKsgT,oBACtDD,EAAA,EAAkBI,gBAAgBzgT,KAAKg0R,eAAgBh0R,MAAO01R,EAAY11R,KAAKsgT,oBAAqB,SAAUtqR,EAAKlmB,GAC/G,GAAIkmB,EACA,OAAOT,EAASS,GAEpBhmC,OAAAsW,EAAA,EAAAtW,CAA0B,IAAnB8f,EAAQxa,QACfigC,EAAS,KAAMzlB,EAAQ,MAIxB1P,kBAAkB2O,EAAiCwmB,GACtD8qR,EAAA,EAAkBK,2BAA2B1gT,KAAKg0R,eAAgBh0R,MAAO+O,EAAgBwmB,0ECjHvFkQ,EAELrlC,eAEAA,MAAOuI,GAIN,OAHIA,IACHA,EAAS,IAAI88B,GAEP98B,GAOT3Y,OAAAme,EAAA,EAAAne,CAA0B,gBAAgBy1C,EAAez1C,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCH1E2wT,UAAsCl7Q,EAM3CrlC,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAK4gT,iBAAmBvgT,EAAwB,iBAAIA,EAAQugT,iBAAiB,KAC7E5gT,KAAKw7B,WAAan7B,EAAkB,WAAIA,EAAQm7B,cAChDx7B,KAAKs0R,YAAcj0R,EAAmB,YAAIA,EAAQi0R,YAAY,KAC9Dt0R,KAAKy8R,WAAap8R,EAAkB,WAAIA,EAAQo8R,WAAW,KAK5Dr8R,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAK4gT,iBAAiBj5S,GACtCuG,EAAA,EAAelO,KAAKw7B,WAAW7zB,GAC/BuG,EAAA,GAAgBlO,KAAKs0R,YAAY3sR,GACjCuG,EAAA,GAAgBlO,KAAKy8R,WAAW90R,GAKjCvH,OAAQsI,GACP1I,KAAK4gT,iBAAmB1yS,EAAA,EAAgBxF,GACxC1I,KAAKw7B,WAAattB,EAAA,EAAexF,EAAIic,EAAA,GACrC3kB,KAAKs0R,YAAcpmR,EAAA,EAAgBxF,GACnC1I,KAAKy8R,WAAavuR,EAAA,EAAgBxF,GAKnCtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIg4S,GAEdh4S,EAAOi4S,iBAAmB5gT,KAAK4gT,iBAC3B5gT,KAAKw7B,aAAc7yB,EAAO6yB,WAAattB,EAAA,EAAqBlO,KAAKw7B,aACrE7yB,EAAO2rR,YAAct0R,KAAKs0R,YAC1B3rR,EAAO8zR,WAAaz8R,KAAKy8R,WAClB9zR,GAKH,SAAAk4S,EAAwCn4S,GAC5C,IAAIsE,EAAM,IAAI2zS,EAEb,OADA3zS,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,yBAAyB2wT,EAAwB3wT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,+DC5D5F8wT,UAA2B3tS,EAAA,EAIhC/S,YAAaC,GACZA,EAAUA,MACVQ,QACAb,KAAK+gT,cAAgB1gT,EAAqB,cAAIA,EAAQ0gT,iBACtD/gT,KAAKghT,YAAc3gT,EAAmB,YAAIA,EAAQ2gT,YAAY,IAAIx7Q,EAAA,EAKnEplC,OAAQuH,GACPuG,EAAA,EAAelO,KAAK+gT,cAAcp5S,GAClC3H,KAAKghT,YAAY/9S,OAAO0E,GAKzBvH,OAAQsI,GACP1I,KAAK+gT,cAAgB7yS,EAAA,EAAexF,EAAIm4S,GACxC7gT,KAAKghT,YAAY59S,OAAOsF,GAKzBtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIm4S,GAEV9gT,KAAK+gT,gBAAiBp4S,EAAOo4S,cAAgB7yS,EAAA,EAAqBlO,KAAK+gT,gBACvE/gT,KAAKghT,cAAer4S,EAAOq4S,YAAchhT,KAAKghT,YAAY73S,SACvDR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,cAAc8wT,EAAa9wT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sCC7DhEmwC,iBAQN,SAAA8gR,EAA+B5zS,EAAuB1F,GAC3DA,EAAI5T,UAAUsZ,GAIT,SAAA6zS,EAA+Bx4S,GACpC,OAAOA,EAAIzU,aAdZ,SAAYksC,GACTA,IAAA,yBACDA,IAAA,uBACAA,IAAA,6BACAA,IAAA,6BAJF,CAAYA,WAoBZnwC,OAAAyd,EAAA,EAAAzd,CAAoB,gBAAgBmwC,EAAc8gR,EAAqBC,EAAqB,8DCRtFC,EAOL/gT,YAAaC,GACZA,EAAUA,MACVL,KAAKohT,SAAW/gT,EAAgB,SAAIA,EAAQ+gT,SAAS,KACrDphT,KAAKqhT,UAAYhhT,EAAiB,UAAIA,EAAQghT,UAAU,KACxDrhT,KAAKshT,gBAAkBjhT,EAAuB,gBAAIA,EAAQihT,gBAAgB,KAC1EthT,KAAKuhT,kBAAoBlhT,EAAyB,kBAAIA,EAAQkhT,kBAAkB,KAChFvhT,KAAKgZ,kBAAoB3Y,EAAyB,kBAAIA,EAAQ2Y,kBAAkB,KAKjF5Y,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKohT,SAASz5S,GAC9Bs5S,EAAoBjhT,KAAKqhT,UAAU15S,GACnCuG,EAAA,GAAgBlO,KAAKshT,gBAAgB35S,GACrCuG,EAAA,GAAgBlO,KAAKuhT,kBAAkB55S,GACvCuG,EAAA,GAAgBlO,KAAKgZ,kBAAkBrR,GAKxCvH,OAAQsI,GACP1I,KAAKohT,SAAWlzS,EAAA,EAAgBxF,GAChC1I,KAAKqhT,UAAYH,EAAoBx4S,GACrC1I,KAAKshT,gBAAkBpzS,EAAA,EAAgBxF,GACvC1I,KAAKuhT,kBAAoBrzS,EAAA,EAAgBxF,GACzC1I,KAAKgZ,kBAAoB9K,EAAA,EAAgBxF,GAK1CtI,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAIw4S,GAEdx4S,EAAOy4S,SAAWphT,KAAKohT,SACvBz4S,EAAO04S,UAAYrhT,KAAKqhT,UACxB14S,EAAO24S,gBAAkBthT,KAAKshT,gBAC9B34S,EAAO44S,kBAAoBvhT,KAAKuhT,kBAChC54S,EAAOqQ,kBAAoBhZ,KAAKgZ,kBACzBrQ,GAKH,SAAA64S,EAAiC94S,GACrC,IAAIsE,EAAM,IAAIm0S,EAEb,OADAn0S,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,kBAAkBmxT,EAAiBnxT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,iGClE9E+zC,EAKL3jC,YAAaC,GACZA,EAAUA,MACVL,KAAKyhT,OAASphT,EAAc,OAAIA,EAAQohT,OAAO,KAC/CzhT,KAAK7E,UAAYkF,EAAiB,UAAIA,EAAQlF,UAAU,KACxD6E,KAAK0hT,YAAcrhT,EAAmB,YAAIA,EAAQqhT,YAAY,KAK/DthT,OAAQuH,GACPc,EAAA,GAAgBzI,KAAKyhT,OAAO95S,GAC5Bc,EAAA,GAAkBzI,KAAK7E,UAAUwM,GACjCc,EAAA,GAAgBzI,KAAK0hT,YAAY/5S,GAKlCvH,OAAQsI,GACP1I,KAAKyhT,OAASh5S,EAAA,EAAgBC,GAC9B1I,KAAK7E,UAAYsN,EAAA,EAAkBC,GACnC1I,KAAK0hT,YAAcj5S,EAAA,EAAgBC,GAKpCtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIo7B,GAEdp7B,EAAO84S,OAASzhT,KAAKyhT,OACrB94S,EAAOxN,UAAY6E,KAAK7E,UACxBwN,EAAO+4S,YAAc1hT,KAAK0hT,YACnB/4S,GAgBT3Y,OAAA4Y,EAAA,EAAA5Y,CAA0B,kBAAkB+zC,EAAiB/zC,OAAA6Y,EAAA,EAAA7Y,CAAmB,IAAI,6FC1DhF+W,GAAU,QAUR46S,UAA+BluB,EAAA,aAOrCrzR,YAAaC,GACTQ,QACAb,KAAK4hT,UACL5hT,KAAK6hT,eAAiB,EACtB7hT,KAAK8hT,cAAgB,EAErB9hT,KAAKi6S,gBAAkB55S,EAAQ45S,gBAC/Bj6S,KAAK+hT,mBAAqB1hT,EAAQ0hT,oBAAsB,EAExD/xT,OAAAgyT,EAAA,EAAAhyT,CAAO,mBAAsBgQ,KAAKi6S,gBAAiB,+CAI7C75S,kBAAkBiN,GACxB,OAAOrN,KAAKi6S,gBAAgB5sS,GAGtBjN,YAAYiN,GAClB,OAAIA,GAA+B,IAAvBrN,KAAK4hT,OAAOtsT,OACb+X,EAENA,GAA+B,IAAvBrN,KAAK4hT,OAAOtsT,QAKzB0K,KAAK4hT,OAAOvpT,KAAKgV,GACjBA,EAAOrd,OAAAiyT,EAAA,EAAAjyT,CAAkBgQ,KAAK4hT,QAC9B5hT,KAAK4hT,OAAOtsT,OAAS,EACd+X,IAPHA,EAAOrN,KAAK4hT,OAAO,GACnB5hT,KAAK4hT,OAAOtsT,OAAS,EACd+X,GAQRjN,KAAKiN,GAER,IAEIwvB,EA2BJ,GAtB4B,IAAxB78B,KAAK6hT,gBAAwB7hT,KAAK8hT,cAAgBz0S,EAAK3F,YAAc1H,KAAK+hT,qBAKtE/hT,KAAK4hT,OAAOtsT,OAAS,IACrB+X,EAAOrN,KAAKkiT,YAAY70S,GACxBrN,KAAK8hT,cAAgB,GAIzB9hT,KAAKmiT,YAAcniT,KAAKoiT,kBAAkB/0S,GAE1CrN,KAAK6hT,eAAiB7hT,KAAKmiT,YAAY7sT,OACvCtF,OAAAgyT,EAAA,EAAAhyT,CAA8B,IAAvBgQ,KAAK8hT,eACZ9xT,OAAAgyT,EAAA,EAAAhyT,CAAOgQ,KAAK6hT,eAAiB,GAG7B7hT,KAAKqe,KAAK,aAAcre,KAAKmiT,YAAa90S,IAIlB,IAAxBrN,KAAK6hT,gBAAwB7hT,KAAK8hT,cAAgBz0S,EAAK3F,WAAa1H,KAAK6hT,eAEzE7hT,KAAK4hT,OAAOvpT,KAAKgV,GACjBrN,KAAK8hT,eAAiBz0S,EAAK3F,gBAGxB,GAAI1H,KAAK8hT,cAAgBz0S,EAAK3F,aAAe1H,KAAK6hT,eAAgB,CAOrE,GALA7hT,KAAK8hT,eAAiBz0S,EAAK3F,WAE3Bm1B,EAAe78B,KAAKkiT,YAAY70S,GAG5BtG,EAAS,CACT,IAAIo7S,EAAcniT,KAAKoiT,kBAAkBvlR,GACzC7sC,OAAAgyT,EAAA,EAAAhyT,CAAOgQ,KAAKmiT,YAAY7sT,SAAW6sT,EAAY7sT,QAC/CtF,OAAAgyT,EAAA,EAAAhyT,CAAO6sC,EAAavnC,SAAW6sT,EAAY7sT,QAG/C0K,KAAK8hT,cAAgB,EACrB9hT,KAAK6hT,eAAiB,EAEtB7hT,KAAKqe,KAAK,UAAWwe,OAElB,CAGH,IAAIwlR,EAAQriT,KAAK6hT,eAAiB7hT,KAAK8hT,cACvC,GAAIO,EAAQ,EAAG,CACX,IAAIC,EAAS,IAAI76S,SAAS4F,EAAKiJ,OAAO,EAAE+rS,GA1DrCriT,KA2DEm7S,KAAKmH,GAEd,IAAIC,EAAS,IAAI96S,SAAS4F,EAAKiJ,OAAO+rS,GAClCE,EAAO76S,WAAa,GA9DjB1H,KA+DEm7S,KAAKoH,qGC5HtBC,EAAApzT,EAAA,IAsBIqzT,GAFch6S,EAAA,EACAA,EAAA,EACMA,EAAA,IACpBi6S,EAAoBj6S,EAAA,EACpBk6S,EAAgBl6S,EAAA,GAChBm6S,EAAgBn6S,EAAA,QAado6S,UAA+BC,EAAA,EAGrC1iT,YAAYC,GAERQ,QACAR,EAAUA,MAOVL,KAAKe,WAAaV,EAAQU,WAOzBf,KAAK+iT,OAAS1iT,EAAQ0iT,OAapB3iT,OAAOzO,GACV8wT,EAAkBziT,KAAKe,WAAWpP,GAClCgxT,EAAc3iT,KAAK+iT,OAAOpxT,GASvByO,OAAOzO,GACVqO,KAAKe,WAAa2hT,EAAkB/wT,GACpCqO,KAAK+iT,OAASH,EAAcjxT,GAGzByO,MAAMuI,GACT,MAAM,IAAIxP,MAAM,4BAzBN0pT,EAAAjgT,sBAAwB5S,OAAAg7S,EAAA,EAAAh7S,CAAmBA,OAAAwyT,EAAA,gBAAAxyT,IA+BzDA,OAAAmiS,EAAA,EAAAniS,CAA0B,kBAAkB6yT,EAAgB7yT,OAAAg7S,EAAA,EAAAh7S,CAAmBA,OAAAwyT,EAAA,gBAAAxyT,mCC7F/E,IAAAk8S,EAAA,iBAiCA5oS,EAAA,EALA,SAAA/S,GACA,uBAAAA,GACAA,GAAA,GAAAA,EAAA,MAAAA,GAAA27S,iCCDA5oS,EAAA,EALA,SAAA/S,GACA,IAAA8qB,SAAA9qB,EACA,aAAAA,IAAA,UAAA8qB,GAAA,YAAAA,+CCxBA2nS,EAAA,iBAAAj+S,iBAAA/U,iBAAA+U,KAGAnW,EAAAq0T,EAAA,GAAAD,GAAAxmR,SAAA,cAAAA,GAEAl5B,EAAA,mCCRA,SAAAgzS,GACA,IAAA4M,EAAA,iBAAA5M,QAAAtmT,iBAAAsmT,EAEAhzS,EAAA,yHCQA,SAAA6/S,EAAA3X,EAAAJ,EAAA71Q,GACAA,EAAAvlC,OAAAotB,EAAA,EAAAptB,CAAAulC,GAAAwlQ,EAAA,GACA,IAAAyH,EAAA,EACA4gB,EAAA,EACA9tT,EAAAk2S,EAAAl2S,OAKA,SAAA+tT,EAAArtR,EAAAzlC,GACAylC,EACAT,EAAAS,KACSotR,IAAA9tT,GAAA/E,IAAAg+S,EAAA,GACTh5Q,EAAA,MAIA,IAZA,IAAAjgC,GACAigC,EAAA,MAWUitQ,EAAAltS,EAAgBktS,IAC1B4I,EAAAI,EAAAhJ,KAAAxyS,OAAAoqS,EAAA,EAAApqS,CAAAqzT,IAKA,IAAAC,EAAAtzT,OAAA0qS,EAAA,EAAA1qS,CAAA2qS,EAAA,EAAA4oB,KAyCAC,EAAA,SAAAhY,EAAAJ,EAAA71Q,IACAvlC,OAAAgrS,EAAA,EAAAhrS,CAAAw7S,GAAA2X,EAAAG,GACA9X,EAAAx7S,OAAAkrS,EAAA,EAAAlrS,CAAAo7S,GAAA71Q,ICtCAjyB,EAAA,ECpCA,SAAA4Z,GACA,gBAAAlQ,EAAAo+R,EAAA71Q,GACA,OAAArY,EAAAsmS,EAAAx2S,EAAAhd,OAAAkrS,EAAA,EAAAlrS,CAAAo7S,GAAA71Q,IDkCA,CEpCA,SAAAulQ,EAAA7jR,EAAAm0R,EAAA71Q,GACAA,KAAAwlQ,EAAA,EACA9jR,QACA,IAAAnH,KACA2zS,EAAA,EACAC,EAAA1zT,OAAAkrS,EAAA,EAAAlrS,CAAAo7S,GAEAtQ,EAAA7jR,EAAA,SAAA1mB,EAAAozT,EAAApuR,GACA,IAAAitQ,EAAAihB,IACAC,EAAAnzT,EAAA,SAAAylC,EAAAlgC,GACAga,EAAA0yR,GAAA1sS,EACAy/B,EAAAS,MAEK,SAAAA,GACLT,EAAAS,EAAAlmB,yCCbYs1B,UAsBN,SAAAw+Q,EAAgCv2S,EAAwB1F,GAC7DA,EAAI5T,UAAUsZ,GAIT,SAAAw2S,EAAgCn7S,GACrC,OAAOA,EAAIzU,aA5BZ,SAAYmxC,GACTA,IAAA,mBACDA,IAAA,mBACAA,IAAA,6BACAA,IAAA,uBACAA,IAAA,2CACAA,IAAA,qCACAA,IAAA,eACAA,IAAA,aACAA,IAAA,qBACAA,IAAA,mBACAA,IAAA,cACAA,IAAA,YACAA,IAAA,gBACAA,IAAA,oBACAA,IAAA,oBACAA,IAAA,0BACAA,IAAA,4BACAA,IAAA,0BAlBF,CAAYA,WAkCZp1C,OAAAyd,EAAA,EAAAzd,CAAoB,iBAAiBo1C,EAAew+Q,EAAsBC,EAAsB,qCCvB1FC,EAIL1jT,YAAaC,GACZA,EAAUA,MACVL,KAAK+jT,eAAiB1jT,EAAsB,eAAIA,EAAQ0jT,eAAe,KACvE/jT,KAAKgkT,eAAiB3jT,EAAsB,eAAIA,EAAQ2jT,kBAKzD5jT,OAAQuH,GACPi8S,EAAqB5jT,KAAK+jT,eAAep8S,GACzCuG,EAAA,EAAelO,KAAKgkT,eAAer8S,EAAIuG,EAAA,IAKxC9N,OAAQsI,GACP1I,KAAK+jT,eAAiBF,EAAqBn7S,GAC3C1I,KAAKgkT,eAAiB91S,EAAA,EAAexF,EAAIwF,EAAA,GAK1C9N,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIm7S,GAEdn7S,EAAOo7S,eAAiB/jT,KAAK+jT,eAC7Bp7S,EAAOq7S,eAAiB91S,EAAA,EAAclO,KAAKgkT,gBACpCr7S,GAKH,SAAAs7S,EAAsCv7S,GAC1C,IAAIsE,EAAM,IAAI82S,EAEb,OADA92S,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,uBAAuB8zT,EAAsB9zT,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,0CChDxFk0T,EAGL9jT,YAAaC,GACZA,EAAUA,MACVL,KAAKw6B,SAAWn6B,EAAgB,SAAIA,EAAQm6B,YAK7Cp6B,OAAQuH,GACPuG,EAAA,EAAelO,KAAKw6B,SAAS7yB,GAK9BvH,OAAQsI,GACP1I,KAAKw6B,SAAWtsB,EAAA,EAAexF,EAAIu7S,GAKpC7jT,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAIu7S,GAEVlkT,KAAKw6B,WAAY7xB,EAAO6xB,SAAWtsB,EAAA,EAAqBlO,KAAKw6B,WAC1D7xB,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,gBAAgBk0T,EAAel0T,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,wECxD1Em0T,EAKF/jT,YAAYgkT,GACRpkT,KAAKqkT,YAAcD,EACnBpkT,KAAKskT,UACLH,EAAeI,WAAWlsT,KAAK2H,MAG5BI,SAAS4M,GAEHhN,KAAKqkT,cACNrkT,KAAKqkT,YAAcr3S,EAAIlK,aAGtBkK,EAAIw3S,YACLx3S,EAAIw3S,UAAYL,EAAeM,YAC/BN,EAAeM,aAAe,EAC9BzkT,KAAKskT,OAAOt3S,EAAIw3S,WAAax3S,GAM9B5M,WAAW4M,GACdhN,KAAKskT,OAAOt3S,EAAIw3S,WAAa,YACtBxkT,KAAKskT,OAAOt3S,EAAIw3S,WAGpBpkT,QACH,OAAOpQ,OAAO2rB,KAAK3b,KAAKskT,QAAQhvT,OAG7B8K,WAEH,IACIhE,EAAM,eADM4D,KAAK0kT,eACmB,aAAe1kT,KAAKmH,QAAW,oBAEvE,IAAK,IAAItW,KAAOmP,KAAKskT,OAAQ,CACzB,IAAIt3S,EAAMhN,KAAKskT,OAAOzzT,GACtBuL,GAAa4Q,EAAIlK,YAAajT,KAAO,IAAMmd,EAAI5T,WAAY,KAG/D,OAAOgD,EAGJgE,eACH,OAAOJ,KAAKqkT,YAAcrkT,KAAKqkT,YAAYx0T,KAAO,SA9C5Cs0T,EAAAI,cACCJ,EAAAM,YAAuB,0DCH1CE,EAAA,iBAAA71T,2BAAA81T,UAAA91T,QAGA+1T,EAAAF,GAAA,iBAAA51T,SAAA61T,UAAA71T,EAMA+1T,EAHAD,KAAA/1T,UAAA61T,GAGA1B,EAAA,EAAA8B,QAGAC,EAAA,WACA,IAEA,IAAAC,EAAAJ,KAAAK,SAAAL,EAAAK,QAAA,QAAAD,MAEA,OAAAA,GAKAH,KAAAK,SAAAL,EAAAK,QAAA,QACG,MAAApmT,KAXH,GAcAuE,EAAA,6DCrBK8hT,gBCFCC,UAAuB7uR,EAAA,aAO7Bp2B,YAAYklT,GACRzkT,QAEAb,KAAKulT,iBAAmBD,EACxBtlT,KAAKwlT,mBAAqB,EAC1BxlT,KAAKylT,eAAiB,EACtBzlT,KAAK0lT,cAAgB,EACrB1lT,KAAK2lT,YAAc,EAEnB3lT,KAAKke,UACD0nS,QAAS5lT,KAAK6lT,WAAW/0T,KAAKkP,OAO/BI,UAAU0lT,GACb,GAAIA,GAAoB,EACpB,MAAM,IAAI3sT,MAAM,6DAChB2sT,GAEJ9lT,KAAKwlT,kBAAoBM,EAKtB1lT,QAAQ41B,GACX,IAAyB,IAArBh2B,KAAK2lT,WACL,MAAM,IAAIxsT,MAAM,wBAGhB6G,KAAKylT,iBAAmBzlT,KAAKwlT,mBAC7BxlT,KAAKqe,KAAK,OAAQ2X,GAClBh2B,KAAK+lT,UAEL/lT,KAAK0lT,cAAgB1lT,KAAKulT,iBAAiBxtB,OAC3C/3R,KAAK2lT,WAAa9O,WAAW72S,KAAKke,SAAS0nS,QAAS5lT,KAAK0lT,eACzD1lT,KAAKqe,KAAK,UAAWre,KAAKylT,eAAgBzlT,KAAK0lT,cAAe1vR,IAK5D51B,aACNJ,KAAK2lT,YAAc,EACnB3lT,KAAKqe,KAAK,QAASre,KAAKylT,eAAgBzlT,KAAK0lT,eAC7C1lT,KAAKylT,iBAIFrlT,QACHJ,KAAKylT,eAAiB,EACtBzlT,KAAKulT,iBAAiBQ,QACtBjP,aAAa92S,KAAK2lT,YAClB3lT,KAAK2lT,YAAc,GC9DvB,SAAAK,EAAez1T,GACX,YAAiB0B,IAAV1B,GAAiC,OAAVA,QAW5B01T,EAKN7lT,YAAYC,GAGR,GAAI2lT,GAFJ3lT,EAAUA,OAEQ+lS,eAAiB/lS,EAAQ+lS,aAAe,EACtD,MAAM,IAAIjtS,MAAM,+CACb,GAAI6sT,EAAM3lT,EAAQgmS,WAAahmS,EAAQgmS,SAAW,EACrD,MAAM,IAAIltS,MAAM,+CAMpB,GAHA6G,KAAKkmT,cAAgB7lT,EAAQ+lS,cAAgB,IAC7CpmS,KAAKmmT,UAAY9lT,EAAQgmS,UAAY,IAEjCrmS,KAAKmmT,WAAanmT,KAAKkmT,cACvB,MAAM,IAAI/sT,MAAM,6EAIpB,GAAI6sT,EAAM3lT,EAAQimS,uBACbjmS,EAAQimS,oBAAsB,GAAKjmS,EAAQimS,oBAAsB,GAClE,MAAM,IAAIntS,MAAM,qDAGpB6G,KAAKomT,qBAAuB/lT,EAAQimS,qBAAuB,EAIxDlmS,cACH,OAAOJ,KAAKmmT,UAIT/lT,kBACH,OAAOJ,KAAKkmT,cAKT9lT,OACH,IAAIimT,EAAermT,KAAKsmT,QACpBC,EAAwB,EAAI/0T,KAAKC,SAAWuO,KAAKomT,qBAErD,OADsB50T,KAAKg1T,MAAMH,EAAeE,GAM1CnmT,QACN,MAAM,IAAIjH,MAAM,0CAIbiH,QACHJ,KAAKymT,SAKCrmT,SACN,MAAM,IAAIjH,MAAM,kDC1EdutT,UAAwCT,EAG9C7lT,YAAYC,GACRQ,MAAMR,GACNL,KAAK0lT,cAAgB,EACrB1lT,KAAK2mT,kBAAoB3mT,KAAK4mT,kBAGxBxmT,QACN,IAAIimT,EAAe70T,KAAKY,IAAI4N,KAAK2mT,kBAAmB3mT,KAAK6mT,eAGzD,OAFA7mT,KAAK2mT,mBAAqB3mT,KAAK0lT,cAC/B1lT,KAAK0lT,cAAgBW,EACdA,EAGDjmT,SACNJ,KAAK2mT,kBAAoB3mT,KAAK4mT,kBAC9B5mT,KAAK0lT,cAAgB,IHhBzB,SAAKN,GAEDA,IAAA,qBAEAA,IAAA,qBAGAA,IAAA,yBAEAA,IAAA,qBATJ,CAAKA,iBAYC0B,UAA4BtwR,EAAA,aAYlCp2B,YAAY8c,EAAejW,EAAcsuB,GACrC10B,QAGAb,KAAK+mT,UAAY7pS,EACjBld,KAAKgnT,WAAa//S,EAClBjH,KAAKinT,UAAY1xR,EACjBv1B,KAAKknT,eACLlnT,KAAKmnT,YAAc,EAEnBnnT,KAAKonT,SAAW,KAChBpnT,KAAKqnT,UAAY,KACjBrnT,KAAKsnT,YAAc,EACnBtnT,KAAKunT,gBAAkBT,EAAaU,yBAEpCxnT,KAAKynT,OAASrC,EAAkBsC,QAI7BtnT,gCAAgC41B,GACrC,OAAO,EAIF51B,YACH,OAAOJ,KAAKynT,QAAUrC,EAAkBsC,QAIrCtnT,YACH,OAAOJ,KAAKynT,QAAUrC,EAAkBuC,QAIrCvnT,cACH,OAAOJ,KAAKynT,QAAUrC,EAAkBwC,UAIrCxnT,YACH,OAAOJ,KAAKynT,QAAUrC,EAAkByC,QAKrCznT,YAAY0nT,GACf,IAAK9nT,KAAK+nT,YACN,MAAM,IAAI5uT,MAAM,6BAGpB,OADA6G,KAAKqnT,UAAYS,EACV9nT,KAOJI,QAAQ4nT,GACX,IAAKhoT,KAAK+nT,YACN,MAAM,IAAI5uT,MAAM,6BAGpB,OADA6G,KAAKunT,gBAAkBS,EAChBhoT,KAKJI,gBACH,OAAOJ,KAAKknT,YAAYlpS,SAIrB5d,gBACH,OAAOJ,KAAKmnT,YAIT/mT,UAAU0lT,GACb,IAAK9lT,KAAK+nT,YACN,MAAM,IAAI5uT,MAAM,6BAGpB,OADA6G,KAAKsnT,WAAaxB,EACX9lT,KAIJI,QACCJ,KAAKioT,eAAiBjoT,KAAKkoT,cAI3BloT,KAAKmoT,aACLnoT,KAAKonT,SAASrB,QAGlB/lT,KAAKynT,OAASrC,EAAkByC,QAChC7nT,KAAKknT,aAAe,IAAI/tT,MAAM,qBAC9B6G,KAAKqe,KAAK,SACVre,KAAKooT,eAKFhoT,MAAMioT,GACT,IAAKroT,KAAK+nT,YACN,MAAM,IAAI5uT,MAAM,iCAEpB,GAAI6G,KAAKkoT,YACL,MAAM,IAAI/uT,MAAM,4BAGpB,IAAI2uT,EAAW9nT,KAAKqnT,WAAa,IAAIX,EAErC1mT,KAAKonT,SAAWiB,EACZA,EAAeP,GACf,IAAIzC,EAAQyC,GAEhB9nT,KAAKonT,SAASxoS,GAAG,QAAS5e,KAAKsoT,QAAQx3T,KAAKkP,MAAM,IAClDA,KAAKonT,SAASxoS,GAAG,OAAQ5e,KAAKooT,YAAYt3T,KAAKkP,OAC/CA,KAAKonT,SAASxoS,GAAG,UAAW5e,KAAKuoT,eAAez3T,KAAKkP,OAEjDA,KAAKsnT,WAAa,GAClBtnT,KAAKonT,SAASoB,UAAUxoT,KAAKsnT,YAGjCtnT,KAAKynT,OAASrC,EAAkBuC,QAChC3nT,KAAKsoT,SAAQ,GAIPloT,QAAQqoT,GACVA,GACAzoT,KAAKmnT,cAET,IAAIuB,GAAa,QAAQ1qS,OAAOhe,KAAKgnT,YACrChnT,KAAKqe,KAAUqqS,GACf,IAAInzR,EAAWv1B,KAAK2oT,wBAAwB73T,KAAKkP,MACjDA,KAAK+mT,UAAUvgT,MAAM,KAAMxG,KAAKgnT,WAAWhpS,OAAOuX,IAK5Cn1B,cACNJ,KAAKinT,UAAUzgT,MAAM,KAAMxG,KAAKknT,aAK1B9mT,0BACN,IAAIJ,KAAKkoT,YAAT,CAIA,IAAIjhT,EAAO5R,MAAMnE,UAAUwU,MAAMjW,KAAKgX,WACtCzG,KAAKknT,YAAcjgT,EACnBjH,KAAKqe,MAAY,YAAYL,OAAO/W,IAEpC,IAAI+uB,EAAM/uB,EAAK,GACX+uB,GAAOh2B,KAAKunT,gBAAgBvxR,GAC5Bh2B,KAAKonT,SAASxB,QAAQ5vR,IAEtBh2B,KAAKynT,OAASrC,EAAkBwC,UAChC5nT,KAAKooT,gBAKHhoT,eAAemqS,EAAQC,EAAOx0Q,GACpCh2B,KAAKqe,KAAK,UAAWksR,EAAQC,EAAOx0Q,UIhMlC4yR,UAA0C3C,EAS5C7lT,YAAYC,GAMR,GALAQ,MAAMR,GACNL,KAAK0lT,cAAgB,EACrB1lT,KAAK2mT,kBAAoB3mT,KAAK4mT,kBAC9B5mT,KAAK6oT,QAAUD,EAA2BE,eAEtCzoT,QAA8BpO,IAAnBoO,EAAQrG,OAAsB,CACzC,GAAIqG,EAAQrG,QAAU,EAClB,MAAM,IAAIb,MAAM,uDAAyDkH,EAAQrG,QAErFgG,KAAK6oT,QAAUxoT,EAAQrG,QAKrBoG,QAGN,OAFAJ,KAAK0lT,cAAgBl0T,KAAKY,IAAI4N,KAAK2mT,kBAAmB3mT,KAAK6mT,eAC3D7mT,KAAK2mT,kBAAoB3mT,KAAK0lT,cAAgB1lT,KAAK6oT,QAC5C7oT,KAAK0lT,cAGNtlT,SACNJ,KAAK0lT,cAAgB,EACrB1lT,KAAK2mT,kBAAoB3mT,KAAK4mT,mBCfhC,SAAAn3T,EAAeytB,EAAe6rS,EAAQxzR,GACxC,IAAItuB,EAAO5R,MAAMnE,UAAUwU,MAAMjW,KAAKgX,WAItC,OAHAyW,EAAKjW,EAAK,GACV8hT,EAAQ9hT,EAAKvB,MAAM,EAAGuB,EAAK3R,OAAS,GACpCigC,EAAWtuB,EAAKA,EAAK3R,OAAS,GACvB,IAAIwxT,EAAa5pS,EAAI6rS,EAAOxzR,GDdZqzR,EAAAE,eAAyB,8OE2E/CE,uBA3FLC,EAAA75T,EAAA,KAiCI85T,EAAwB,uBASxBC,GACAt5T,KAAM,eACNu5T,QAAS,WACT/lT,aAAc,WACV,OAAO,IAAIw8B,GAEf58B,OAAQ,SAAU1S,EAAOoB,GACrB3B,OAAAsW,EAAA,EAAAtW,CAAiB,OAAVO,GAAkBA,aAAiBsvC,GAC1CtvC,EAAmB,OAAVA,EAAkB,KAAOA,EAAM84T,qBACxChkB,EAAA,GAAgB90S,EAAOoB,IAI3ByR,OAAQ,SAAUzR,GACd,IAAIyK,EAAMipS,EAAA,EAAgB1zS,GAC1B,OAAO,IAAIkuC,EAAazjC,IAI5Bmb,OAAQ,SAAUhnB,GACd,OAAIA,aAAiBsvC,EACVtvC,EAEG,OAAVA,QAA4B0B,IAAV1B,EACX,IAAIsvC,EAEXtvC,IAAU24T,EACH,IAAIrpR,GAEf7vC,OAAAsW,EAAA,EAAAtW,CAAwB,iBAAVO,GAAsB8E,MAAM8G,QAAQ5L,IAC3C,IAAIsvC,EAAatvC,KAI5BkB,OAAQ,WACJ,SAAArB,IACI,OAAOoB,KAAK83T,KAAqB,IAAhB93T,KAAKC,UAG1B,IAAIooB,EAAQzpB,IACR0pB,EAAMD,EAAQzpB,IAClB,OAAO,IAAIyvC,EAAahmB,EAAOC,KAMvC9pB,OAAAi5T,EAAA,EAAAj5T,CAAkBm5T,GAElB,SAAKH,GACDA,IAAA,iBAAOA,IAAA,6BAAaA,IAAA,2BAAYA,IAAA,6BAAaA,IAAA,+BADjD,CAAKA,WAIL,IAAIO,EAAoB,aAExB,SAAAC,EAAsB7zT,EAAcE,GAChC,QAAUF,GAAOE,GAAUF,EAAM,GAAKE,EAAO,GAGjD,SAAA4zT,EAAiDrtT,GAE7C,IAAIihS,EAASjhS,EAAIrG,MAAM,KACvB,IAAI2zT,EAAQ,IAAI7pR,EAEhB,GAAsB,IAAlBw9P,EAAO/nS,OAGP,OAFAo0T,EAAMruS,KAAO2tS,EAAiBW,YAC9BD,EAAMn5T,MAAQyF,SAASqnS,EAAO,GAAI,IAC3BqsB,EACJ,GAAsB,IAAlBrsB,EAAO/nS,OAAc,CAE5B,IAAIugT,EAAQxY,EAAO5hQ,IAAI,SAAUvgB,GAC7B,OAAOllB,SAASklB,EAAG,MAEvB,OAAKsuS,EAAa3T,EAAM,GAAIA,EAAM,KAKlC6T,EAAMruS,KAAO2tS,EAAiBY,WAC9BF,EAAMn5T,MAAQslT,EACP6T,IANHA,EAAMruS,KAAO2tS,EAAiBa,aAC9BH,EAAMn5T,MAAQ6L,EACPstT,GAQX,OAFAA,EAAMruS,KAAO2tS,EAAiBa,aAC9BH,EAAMn5T,MAAQ6L,EACPstT,EAIf,SAAAI,EAAoB/qT,GAChB,OAAOA,EAAEsc,OAAS2tS,EAAiBW,aAAe5qT,EAAExO,MAAOwO,EAAExO,OAASwO,EAAExO,MA4C5E,SAAAw5T,EAAgChlT,EAAqBxU,GACjD,IAAIy5T,EA1CR,SAA6C5tT,GACzC,IAAIstT,EAAuB,IAAI7pR,EAC/B,IAAK0pR,EAAkBr3T,KAAKkK,GAGxB,OAFAstT,EAAMruS,KAAO2tS,EAAiBa,aAC9BH,EAAMn5T,MAAQ6L,EACPstT,EAIX,IAAIrsB,EAASjhS,EAAIrG,MAAM,KAEvB,GAAsB,IAAlBsnS,EAAO/nS,OACP,OAAOm0T,EAAwCpsB,EAAO,IAEnD,GAAsB,IAAlBA,EAAO/nS,OAAc,CAE5B,IAAI20T,EAAUC,EACV1vR,EAAW6iQ,EAAO5hQ,IAAIguR,GAG1B,OAFAQ,EAAWzvR,EAAS,GACpB0vR,EAAW1vR,EAAS,GAChByvR,EAAS5uS,OAAS2tS,EAAiBa,cAAgBK,EAAS7uS,OAAS2tS,EAAiBa,cACtFH,EAAMruS,KAAO2tS,EAAiBa,aAC9BH,EAAMn5T,MAAQ6L,EACPstT,IAGXO,EAAWH,EAAWG,GACtBC,EAAWJ,EAAWI,GACtBR,EAAMruS,KAAO2tS,EAAiBmB,YAC9BT,EAAMn5T,OAAS05T,EAASC,GACjBR,GAKP,OAFAA,EAAMruS,KAAO2tS,EAAiBa,aAC9BH,EAAMn5T,MAAQ6L,EACPstT,EAOFU,CAAoC75T,GAC7CwU,EAAKsW,KAAO2uS,EAAG3uS,KACftW,EAAKxU,MAAQy5T,EAAGz5T,YAgCdsvC,EAGNz/B,YAAY7P,EAAQ85T,GA4CbrqT,KAAAsqT,QAAU,WACb,OAAOtqT,KAAKqb,OAAS2tS,EAAiBa,cA+EnC7pT,KAAAw0B,OAAS,WACZ,OAAOx0B,KAAK5G,YAzHZpJ,OAAAsW,EAAA,EAAAtW,GAAQO,GAAWA,aAAiBsvC,GAAe,uCAE9B,iBAAVtvC,EACPw5T,EALO/pT,KAKsBzP,GACtBiC,OAAOC,SAASlC,SAAsB,IAAVA,EAxC3C,SAAgCwU,EAAqBxU,EAAO85T,GACxD,QAAqB,IAAjBA,EACMtlT,EAAMwlT,kBAAkBh6T,OAE3B,CAEH,IAAKiC,OAAOC,SAAS43T,GACjB,MAAM,IAAIlxT,MAAM,gDAEd4L,EAAMylT,iBAAiBj6T,EAAO85T,IAgCpCI,CAPOzqT,KAOsBzP,EAAO85T,GAE7Bh1T,MAAM8G,QAAQ5L,GA7B7B,SAA+BwU,EAAqBxU,GAEhD,GADAP,OAAAsW,EAAA,EAAAtW,CAAwB,IAAjBO,EAAM+E,QACT9C,OAAOC,SAASlC,EAAM,IAAK,CAC3B,IAAKiC,OAAOC,SAASlC,EAAM,IACvB,MAAM,IAAI4I,MAAM,qBAAuB5I,GAErCwU,EAAMylT,iBAAiBj6T,EAAM,GAAIA,EAAM,KAwB7Cm6T,CAVO1qT,KAUqBzP,GAErBA,aAAiBsvC,EAtBhC,SAAsC96B,EAAqBxU,GACvDwU,EAAKxU,MAAQA,EAAMA,MACnBwU,EAAKsW,KAAO9qB,EAAM8qB,KAqBdsvS,CAbO3qT,KAa4BzP,IAEnCyP,KAAKzP,MAAQ,YACbyP,KAAKqb,KAAO2tS,EAAiB4B,OAGjC56T,OAAAsW,EAAA,EAAAtW,CAAQgQ,KAAKqb,OAAS2tS,EAAiBY,YAAev0T,MAAM8G,QAAQ6D,KAAKzP,QAGnE6P,kBAAkB7P,GACxBP,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASlC,IACvByP,KAAKzP,MAAQA,EACbyP,KAAKqb,KAAO2tS,EAAiBW,YACzB3pT,KAAKzP,MAAQ,IACbyP,KAAKqb,KAAO2tS,EAAiBa,cAI3BzpT,iBAAiBzK,EAAcE,GACrC7F,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASkD,IACvB3F,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASoD,IACvBmK,KAAKzP,OAASoF,EAAKE,GACnBmK,KAAKqb,KAAO2tS,EAAiBY,WAExB5pT,KAAK6qT,iBACN7qT,KAAKqb,KAAO2tS,EAAiBa,cAQ9BzpT,UACH,OAAOJ,KAAKqb,OAAS2tS,EAAiB4B,MAIhCxqT,eAEN,OAAIJ,KAAKqb,OAAS2tS,EAAiBmB,aAC/Bn6T,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASuN,KAAKzP,MAAM,GAAG,KACrCP,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASuN,KAAKzP,MAAM,GAAG,KACrCP,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASuN,KAAKzP,MAAM,GAAG,KACrCP,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASuN,KAAKzP,MAAM,GAAG,KAE9Bi5T,EAAaxpT,KAAKzP,MAAM,GAAG,GAAIyP,KAAKzP,MAAM,GAAG,KAChDi5T,EAAaxpT,KAAKzP,MAAM,GAAG,GAAIyP,KAAKzP,MAAM,GAAG,KAE1CyP,KAAKqb,OAAS2tS,EAAiBY,WAC/BJ,EAAaxpT,KAAKzP,MAAM,GAAIyP,KAAKzP,MAAM,IACvCyP,KAAKqb,OAAS2tS,EAAiBW,aAC/B3pT,KAAKzP,OAAS,EAOtB6P,qBACH,OAAQJ,KAAKqb,MACT,KAAK2tS,EAAiBW,YACtB,KAAKX,EAAiBY,WACtB,KAAKZ,EAAiBmB,YAClB,OAAOnqT,KAAK5G,WAChB,KAAK4vT,EAAiBa,aAClB,OAAO7pT,KAAKzP,MAChB,QACI,OAAO,MAIZ6P,WAEH,SAAA0qT,EAA+BztB,GAE3B,OADArtS,OAAAsW,EAAA,EAAAtW,CAAOqF,MAAM8G,QAAQkhS,IACC,IAAlBA,EAAO/nS,QAAgB+nS,EAAO,KAAOA,EAAO,GACrCA,EAAO,GAAGjkS,WAEdikS,EAAO5hQ,IAAI,SAAUlrC,GACxB,OAAOA,EAAM6I,SAAS,MACvBZ,KAAK,KASZ,OAAQwH,KAAKqb,MACT,KAAK2tS,EAAiBW,YAClB,OAAO3pT,KAAKzP,MAAM6I,SAAS,IAE/B,KAAK4vT,EAAiBY,WAClB,OAAOkB,EAAsB9qT,KAAKzP,OAEtC,KAAKy4T,EAAiB4B,MAClB,OAAO1B,EAEX,KAAKF,EAAiBmB,YAClB,OAjBR,SAAgC9sB,GAC5B,OAAOA,EAAO5hQ,IAAI,SAAUlrC,GACxB,OAAQ8E,MAAM8G,QAAQ5L,GAAUu6T,EAAsBv6T,GAASA,EAAM6I,SAAS,MAC/EZ,KAAK,KAcGuyT,CAAuB/qT,KAAKzP,OAEvC,QAEI,OADAP,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKqb,OAAS2tS,EAAiBa,cAC/B,0BAQZzpT,YACH,OAAOJ,KAAKqb,OAAS2tS,EAAiB4B,OAAS5qT,KAAKqb,OAAS2tS,EAAiBa,aAS3EzpT,eAAgBy1S,EAAenxR,GAElC,IAAKmxR,EACD,OACIA,MAAOA,EACP90S,WAAYf,KAAKqb,OAAS2tS,EAAiB4B,MAAQr2B,EAAA,EAAYjyR,KAAOiyR,EAAA,EAAYvrQ,qBAG1F,OAAQhpB,KAAKqb,MACT,KAAK2tS,EAAiB4B,MAClB,OAkGZ,SAAuB/U,EAAOnxR,GAC1B,OACImxR,MAAOnwS,EAAMmwS,EAAO,EAAGA,EAAMvgT,QAC7BovB,WAAYA,EACZ3jB,WAAYwzR,EAAA,EAAYjyR,MAtGb0oT,CAAcnV,EAAOnxR,GAEhC,KAAKskS,EAAiBW,YAElB,OAsGZ,SAA8B9T,EAAerT,GACzC,GAAIA,GAASqT,EAAMvgT,OACf,OAAQugT,SAAW90S,WAAYwzR,EAAA,EAAYvrQ,qBAE/C,OACI6sR,MAAOnwS,EAAMmwS,EAAOrT,EAAOA,EAAQ,GACnCzhS,WAAYwzR,EAAA,EAAYjyR,MA5Gb2oT,CAAqBpV,EADhB71S,KAAKzP,OAGrB,KAAKy4T,EAAiBY,WAGlB,OAAOsB,EAAoBrV,EAFX71S,KAAKzP,MAAM,GACVyP,KAAKzP,MAAM,IAGhC,KAAKy4T,EAAiBmB,YAGlB,OA2HZ,SAA8BtU,EAAeoU,EAAUC,EAAUiB,GAE7D,GADAn7T,OAAAsW,EAAA,EAAAtW,CAAOqF,MAAM8G,QAAQ8tT,IAAa50T,MAAM8G,QAAQ+tT,IAC3B,IAAjBrU,EAAMvgT,OACN,OACIugT,SACA90S,WAAYwzR,EAAA,EAAYvrQ,qBAGhC,GAZJ,SAAqBz4B,GACjB,OAAOiC,OAAOC,SAASlC,EAAM+E,SAAW/E,EAAMY,eAAe,UAWzD6pS,CAAY6a,EAAM,MAAQsV,EAAW,CAGrC,IADA,IAAI9wS,EAAS6wS,EAAoBrV,EAAOoU,EAAS,GAAIA,EAAS,IACrD36T,EAAI,EAAGA,EAAI+qB,EAAOw7R,MAAMvgT,OAAQhG,IAAK,CAC1C,IAAIyP,EAAIsb,EAAOw7R,MAAMvmT,GACrB+qB,EAAOw7R,MAAMvmT,GAAK47T,EAAoBnsT,EAAGmrT,EAAS,GAAIA,EAAS,IAAIrU,MAEvE,OAAOx7R,EAEX,IAAK8wS,EACD,OACItV,SACA90S,WAAYwzR,EAAA,EAAYvrQ,qBAIhCh5B,OAAAsW,EAAA,EAAAtW,CAAOm7T,EAAW,qFAGlB,IAAIC,EAASnB,EAAS,GAClBoB,EAAUpB,EAAS,GACnBqB,EAASpB,EAAS,GAClBqB,EAAUrB,EAAS,GAGnBsB,GADQL,EAAU,GACVA,EAAU,IAElBM,EAAYJ,EAAUD,EAAS,EAC/BM,EAAYH,EAAUD,EAAS,EAMnC,IAEI1jT,EAAK+jT,EAAKv7T,EAAGT,EAFb4R,EAAM,IAAUqqT,EADT/V,EAAM/yS,aACS4oT,EAAYD,GAItC,IADAr7T,EAAI,EACCwX,EAAMwjT,EAAQxjT,GAAOyjT,EAASzjT,IAAO,CAEtC,IADAjY,EAAI,EACCg8T,EAAML,EAAQK,GAAOJ,EAASI,IAAO,CACtC,IAAIE,EAAWjkT,EAAM4jT,EAAQG,EACzBG,EAAY17T,EAAIs7T,EAAY/7T,EAChC4R,EAAIuqT,GAAajW,EAAMgW,GACvBl8T,IAEJS,GAAK,EAET,OACIylT,MAAOt0S,EACPmjB,YAAa+mS,EAAWC,GACxB3qT,WAAYwzR,EAAA,EAAYjyR,MAtLbypT,CAAqBlW,EAFb71S,KAAKzP,MAAM,GACXyP,KAAKzP,MAAM,GAC6Bm0B,GAE3D,QACI,OAAQmxR,SAAW90S,WAAYwzR,EAAA,EAAYxrQ,uBAKhD3oB,WAAW4rT,EAAcC,GAK5B,IAAIC,EAAWC,EAEf,OALAC,EAAuBJ,GACvBI,EAAuBH,GAIfjsT,KAAKqb,MACT,KAAK2tS,EAAiB4B,MAClBsB,EAAY,EACZC,EAAaH,EAAa12T,OAAS,EACnC,MACJ,KAAK0zT,EAAiBW,YAClBuC,EAAYlsT,KAAKzP,MACjB47T,EAAansT,KAAKzP,MAClB,MACJ,KAAKy4T,EAAiBY,WAClBsC,EAAYlsT,KAAKzP,MAAM,GACvB47T,EAAansT,KAAKzP,MAAM,GACxB,MACJ,KAAKy4T,EAAiBmB,YAElB,OAAQtU,MAAOmW,EAAcjrT,WAAYwzR,EAAA,EAAYvrQ,qBACzD,QACI,OAAQ6sR,SAAW90S,WAAYwzR,EAAA,EAAYxrQ,sBAGnD,OAAIojS,GAAcH,EAAa12T,QAAU42T,GAAaF,EAAa12T,QACvDugT,SAAW90S,WAAYwzR,EAAA,EAAYvrQ,qBAE1ChpB,KAAKqb,OAAS2tS,EAAiB4B,OAAUqB,EAAU32T,SAAY62T,EAAaD,EAAY,GACjFrW,SAAW90S,WAAYwzR,EAAA,EAAYxrQ,uBAM3C8sR,OAFiBxgT,MAAM8G,QAAQ6vT,GAAgBK,EAA8BL,aAAwBM,EAASC,EAAsBC,GAE/GR,EAAcE,EAAWC,EAAYF,GAC1DlrT,WAAYwzR,EAAA,EAAYjyR,OAUhC,SAAAoD,EAAeuR,EAAK4C,EAAOC,GAIvB,OAFA9pB,OAAAsW,EAAA,EAAAtW,CAAOinB,EAAK,4BAEA,IAAR4C,GAAaC,IAAQ7C,EAAI3hB,OAClB2hB,GAKPA,EAAIX,kBAAkB9a,YAEtBy6R,EAAMh/Q,EAAIw1S,SAAS5yS,EAAOC,IAI1B9pB,OAAAsW,EAAA,EAAAtW,CAA4B,mBAAdinB,EAAIvR,OAClB1V,OAAAsW,EAAA,EAAAtW,CAAOinB,aAAe5hB,OAAwB,iBAAR4hB,GACtCg/Q,EAAMh/Q,EAAIvR,MAAMmU,EAAOC,IAEvBm8Q,aAAer6R,YAAcqb,aAAezb,cAG5Cy6R,EAAMA,EAAI3/Q,QAEP2/Q,GAjBP,IAAIA,EAsCR,SAAAi1B,EAA6BrV,EAAeqW,EAAWC,GAInD,OAHAn8T,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASy5T,IAAc15T,OAAOC,SAAS05T,IACrDn8T,OAAAsW,EAAA,EAAAtW,CAAOk8T,GAAa,GACpBl8T,OAAAsW,EAAA,EAAAtW,CAAOk8T,GAAaC,GAChBD,GAAarW,EAAMvgT,QACXugT,SAAW90S,WAAYwzR,EAAA,EAAYvrQ,sBAM3C6sR,MAAOnwS,EAAMmwS,EAAOqW,GAHxBC,EAAa36T,KAAKY,IAAI+5T,EAAYtW,EAAMvgT,OAAS,IAGD,GAC5CyL,WAAYwzR,EAAA,EAAYjyR,MA0EhC,SAAA8pT,EAAgCvW,GAC5B7lT,OAAAsW,EAAA,EAAAtW,CAAOqF,MAAM8G,QAAQ05S,IAAWA,EAAMv/R,kBAAkB9a,aAAgBq6S,aAAiByW,GAG7F,SAAAD,EAAoCL,EAAcr2T,EAAKE,EAAMo2T,GACzD,IAAIhlT,GAAQtR,EAAKE,EAAOF,EAAM,GAAGqoB,OAAOiuS,GAExC,OADAD,EAAariB,OAAOnjS,MAAMwlT,EAAc/kT,GACjC+kT,EAGX,SAAAQ,EAAiCR,EAAcr2T,EAAKE,EAAMo2T,GAEtD,OAAY,IAARt2T,GAAaE,IAASm2T,EAAa12T,OAAS,EACrC,IAAI02T,EAAalpT,YAAYmpT,IAExCj8T,OAAAsW,EAAA,EAAAtW,CAAOi8T,EAAU32T,SAAWO,EAAOF,EAAM,GACzCq2T,EAAaS,SAAS92T,EAAKE,EAAO,GAAG6L,IAAIuqT,GAClCD,GAGX,SAAAO,EAA6BG,EAAe/2T,EAAKE,EAAMo2T,GACnD,GAAY,IAARt2T,GAAaE,IAAS62T,EAAcp3T,OAAS,EAC7C,OAAOg3T,EAAOK,KAAKV,GAEvBj8T,OAAAsW,EAAA,EAAAtW,CAAOi8T,EAAU32T,SAAWO,EAAOF,EAAM,GACzC,IAAK,IAAIrG,EAAI,EAAGA,EAAI28T,EAAU32T,OAAQhG,IAClCo9T,EAAcp9T,EAAIqG,GAAOs2T,EAAU38T,GAEvC,OAAOo9T,EAOC,IAAI7sR,+CCtlBhB,SAAAy2Q,EAAAyO,IAAA,SAAAzO,EAAArkT,GACA,aAEA,IAAAqkT,EAAA5gR,aAAA,CAIA,IAIAk3R,EAJAC,EAAA,EACAC,KACAC,GAAA,EACAC,EAAA1W,EAAA1D,SAoJAqa,EAAAj9T,OAAAk9T,gBAAAl9T,OAAAk9T,eAAA5W,GACA2W,OAAApW,WAAAoW,EAAA3W,EAGU,wBAAAl9S,SAAA3J,KAAA6mT,EAAAyO,SApFV6H,EAAA,SAAAO,GACApI,EAAAqI,SAAA,WAA0CC,EAAAF,MAI1C,WAGA,GAAA7W,EAAAgX,cAAAhX,EAAAiX,cAAA,CACA,IAAAC,GAAA,EACAC,EAAAnX,EAAAoX,UAMA,OALApX,EAAAoX,UAAA,WACAF,GAAA,GAEAlX,EAAAgX,YAAA,QACAhX,EAAAoX,UAAAD,EACAD,GAwEKG,GApEL,WAKA,IAAAC,EAAA,gBAAAp8T,KAAAC,SAAA,IACAo8T,EAAA,SAAA5wS,GACAA,EAAA8c,SAAAu8Q,GACA,iBAAAr5R,EAAA5P,MACA,IAAA4P,EAAA5P,KAAAlD,QAAAyjT,IACAP,GAAApwS,EAAA5P,KAAA3H,MAAAkoT,EAAAt4T,UAIAghT,EAAAwX,iBACAxX,EAAAwX,iBAAA,UAAAD,GAAA,GAEAvX,EAAAyX,YAAA,YAAAF,GAGAjB,EAAA,SAAAO,GACA7W,EAAAgX,YAAAM,EAAAT,EAAA,MAiDAa,GAEK1X,EAAA2X,eA/CL,WACA,IAAAC,EAAA,IAAAD,eACAC,EAAAC,MAAAT,UAAA,SAAAzwS,GAEAowS,EADApwS,EAAA5P,OAIAu/S,EAAA,SAAAO,GACAe,EAAAE,MAAAd,YAAAH,IAyCAkB,GAEKrB,GAAA,uBAAAA,EAAAsB,cAAA,UAvCL,WACA,IAAAC,EAAAvB,EAAAwB,gBACA5B,EAAA,SAAAO,GAGA,IAAAsB,EAAAzB,EAAAsB,cAAA,UACAG,EAAAC,mBAAA,WACArB,EAAAF,GACAsB,EAAAC,mBAAA,KACAH,EAAAI,YAAAF,GACAA,EAAA,MAEAF,EAAAK,YAAAH,IA6BAI,GAxBAjC,EAAA,SAAAO,GACAtW,WAAAwW,EAAA,EAAAF,IA8BAF,EAAAv3R,aA1KA,SAAAH,GAEA,mBAAAA,IACAA,EAAA,IAAAiH,SAAA,GAAAjH,IAIA,IADA,IAAAtuB,EAAA,IAAA5R,MAAAoR,UAAAnR,OAAA,GACAhG,EAAA,EAAqBA,EAAA2X,EAAA3R,OAAiBhG,IACtC2X,EAAA3X,GAAAmX,UAAAnX,EAAA,GAGA,IAAA2rS,GAAkB1lQ,WAAAtuB,QAGlB,OAFA6lT,EAAAD,GAAA5xB,EACA2xB,EAAAC,GACAA,KA6JAI,EAAAxV,iBA1JA,SAAAA,EAAA0V,UACAL,EAAAK,GAyBA,SAAAE,EAAAF,GAGA,GAAAJ,EAGAlW,WAAAwW,EAAA,EAAAF,OACS,CACT,IAAAlyB,EAAA6xB,EAAAK,GACA,GAAAlyB,EAAA,CACA8xB,GAAA,EACA,KAjCA,SAAA9xB,GACA,IAAA1lQ,EAAA0lQ,EAAA1lQ,SACAtuB,EAAAg0R,EAAAh0R,KACA,OAAAA,EAAA3R,QACA,OACAigC,IACA,MACA,OACAA,EAAAtuB,EAAA,IACA,MACA,OACAsuB,EAAAtuB,EAAA,GAAAA,EAAA,IACA,MACA,OACAsuB,EAAAtuB,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA,MACA,QACAsuB,EAAA/uB,MAAAvU,EAAAgV,IAiBA6nT,CAAA7zB,GACiB,QACjBwc,EAAA0V,GACAJ,GAAA,MAvEA,CAyLC,oBAAAhoT,UAAA,IAAAuxS,EAAAt2S,KAAAs2S,EAAAvxS,+CCxLD,IAOAgqT,EACAC,EARAjK,EAAAh2T,EAAAD,WAUA,SAAAmgU,IACA,UAAA91T,MAAA,mCAEA,SAAA+1T,IACA,UAAA/1T,MAAA,qCAsBA,SAAAg2T,EAAAC,GACA,GAAAL,IAAAlY,WAEA,OAAAA,WAAAuY,EAAA,GAGA,IAAAL,IAAAE,IAAAF,IAAAlY,WAEA,OADAkY,EAAAlY,WACAA,WAAAuY,EAAA,GAEA,IAEA,OAAAL,EAAAK,EAAA,GACK,MAAArwT,GACL,IAEA,OAAAgwT,EAAAt/T,KAAA,KAAA2/T,EAAA,GACS,MAAArwT,GAET,OAAAgwT,EAAAt/T,KAAAuQ,KAAAovT,EAAA,MAvCA,WACA,IAEAL,EADA,mBAAAlY,WACAA,WAEAoY,EAEK,MAAAlwT,GACLgwT,EAAAE,EAEA,IAEAD,EADA,mBAAAlY,aACAA,aAEAoY,EAEK,MAAAnwT,GACLiwT,EAAAE,GAjBA,GAwEA,IAEAG,EAFAC,KACAC,GAAA,EAEAC,GAAA,EAEA,SAAAC,IACAF,GAAAF,IAGAE,GAAA,EACAF,EAAA/5T,OACAg6T,EAAAD,EAAArxS,OAAAsxS,GAEAE,GAAA,EAEAF,EAAAh6T,QACAo6T,KAIA,SAAAA,IACA,IAAAH,EAAA,CAGA,IAAApzB,EAAAgzB,EAAAM,GACAF,GAAA,EAGA,IADA,IAAA7zT,EAAA4zT,EAAAh6T,OACAoG,GAAA,CAGA,IAFA2zT,EAAAC,EACAA,OACAE,EAAA9zT,GACA2zT,GACAA,EAAAG,GAAAV,MAGAU,GAAA,EACA9zT,EAAA4zT,EAAAh6T,OAEA+5T,EAAA,KACAE,GAAA,EAnEA,SAAAI,GACA,GAAAX,IAAAlY,aAEA,OAAAA,aAAA6Y,GAGA,IAAAX,IAAAE,IAAAF,IAAAlY,aAEA,OADAkY,EAAAlY,aACAA,aAAA6Y,GAEA,IAEAX,EAAAW,GACK,MAAA5wT,GACL,IAEA,OAAAiwT,EAAAv/T,KAAA,KAAAkgU,GACS,MAAA5wT,GAGT,OAAAiwT,EAAAv/T,KAAAuQ,KAAA2vT,KAgDAC,CAAAzzB,IAiBA,SAAA0zB,EAAAT,EAAAvZ,GACA71S,KAAAovT,MACApvT,KAAA61S,QAYA,SAAA9a,KA5BAgqB,EAAAqI,SAAA,SAAAgC,GACA,IAAAnoT,EAAA,IAAA5R,MAAAoR,UAAAnR,OAAA,GACA,GAAAmR,UAAAnR,OAAA,EACA,QAAAhG,EAAA,EAAuBA,EAAAmX,UAAAnR,OAAsBhG,IAC7C2X,EAAA3X,EAAA,GAAAmX,UAAAnX,GAGAggU,EAAAj3T,KAAA,IAAAw3T,EAAAT,EAAAnoT,IACA,IAAAqoT,EAAAh6T,QAAAi6T,GACAJ,EAAAO,IASAG,EAAA3+T,UAAA49T,IAAA,WACA9uT,KAAAovT,IAAA5oT,MAAA,KAAAxG,KAAA61S,QAEAkP,EAAA+K,MAAA,UACA/K,EAAAgL,SAAA,EACAhL,EAAAiL,OACAjL,EAAAkL,QACAlL,EAAAmL,QAAA,GACAnL,EAAAoL,YAIApL,EAAAnmS,GAAAm8Q,EACAgqB,EAAAhoS,YAAAg+Q,EACAgqB,EAAA3nS,KAAA29Q,EACAgqB,EAAAjmS,IAAAi8Q,EACAgqB,EAAApmS,eAAAo8Q,EACAgqB,EAAAlmS,mBAAAk8Q,EACAgqB,EAAA1mS,KAAA08Q,EACAgqB,EAAAqL,gBAAAr1B,EACAgqB,EAAAsL,oBAAAt1B,EAEAgqB,EAAA9mS,UAAA,SAAApuB,GAAqC,UAErCk1T,EAAAI,QAAA,SAAAt1T,GACA,UAAAsJ,MAAA,qCAGA4rT,EAAAuL,IAAA,WAA2B,WAC3BvL,EAAAwL,MAAA,SAAAC,GACA,UAAAr3T,MAAA,mCAEA4rT,EAAA0L,MAAA,WAA4B,yBCvL5B1hU,EAAAD,QAAA,SAAA4hU,GACA,IAAAA,EAAAC,gBAAA,CACA,IAAA5hU,EAAAiB,OAAAY,OAAA8/T,GAEA3hU,EAAA6hU,WAAA7hU,EAAA6hU,aACA5gU,OAAAC,eAAAlB,EAAA,UACAmB,YAAA,EACAC,IAAA,WACA,OAAApB,EAAAQ,KAGAS,OAAAC,eAAAlB,EAAA,MACAmB,YAAA,EACAC,IAAA,WACA,OAAApB,EAAAO,KAGAU,OAAAC,eAAAlB,EAAA,WACAmB,YAAA,IAEAnB,EAAA4hU,gBAAA,EAEA,OAAA5hU,2FCiBM,SAAA8hU,EAA4B97R,GAC9B,IAAIllC,EAAOklC,EAAOllC,KAEdW,EAAIsgU,EAAA,EAAgB/7R,EAAOq0R,SAG/B,IAAK54T,EAED,MADAmO,QAAQC,IAAIqG,KAAKC,UAAU6vB,IACrB,IAAI57B,MAAM,wBAA0B47B,EAAOq0R,SAErDp5T,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBQ,EAAE4S,QAE/B,IAAI2tT,EAAah8R,EAAO9xB,QAAUzS,EAAEyS,OACpCjT,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsB+gU,GAE7B,IAAIC,EAAaj8R,EAAO3xB,QAAU5S,EAAE4S,OACpCpT,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBghU,GAE7B,IAAI3tT,OAAwCpR,IAAxB8iC,EAAO1xB,aAA+B7S,EAAE6S,aAAe0xB,EAAO1xB,aAG9E4tT,EAAal8R,EAAOxd,QAAU/mB,EAAE+mB,OAEhC25S,EAAan8R,EAAOP,QAAUhkC,EAAEgkC,OAEhC/iC,EAASsjC,EAAOtjC,QAAU4R,EAE1B8tT,GACAthU,KAAMA,EACNoT,OAAQ8tT,EACR3tT,OAAQ4tT,EACR3tT,aAAcA,EACdkU,OAAQ05S,EACRz8R,OAAQ08R,EACR77R,QAASN,EAAOq0R,QAChB33T,OAAQA,GAEZzB,OAAA8gU,EAAA,EAAA9gU,CAAamhU,GAOjBN,GAAmBhhU,KAAM,UAAWu5T,QAAS,WAE7CyH,GAAmBhhU,KAAM,WAAYu5T,QAAS,WAC9CyH,GAAmBhhU,KAAM,WAAYu5T,QAAS,WAC9CyH,GAAmBhhU,KAAM,UAAYu5T,QAAS,aAC9CyH,GAAmBhhU,KAAM,OAAYu5T,QAAS,UAC9CyH,GAAmBhhU,KAAM,QAAYu5T,QAAS,SAE9CyH,GAAmBhhU,KAAM,OAAYu5T,QAAS,WAG9CyH,GAAmBhhU,KAAM,WACrBu5T,QAAS,SACTnmT,OAAQgF,EAAA,GACR7E,OAAQ6E,EAAA,EACRmpT,SAAUnpT,EAAA,GACV5E,aAAc,OAGlBwtT,GAAmBhhU,KAAM,oBAAqBu5T,QAAS,eACvDyH,GAAmBhhU,KAAM,QAAYu5T,QAAS,eAC9CyH,GAAmBhhU,KAAM,WAAYu5T,QAAS,eAC9CyH,GAAmBhhU,KAAM,WAAYu5T,QAAS,eAC9CyH,GAAmBhhU,KAAM,WAAYu5T,QAAS,eAC9CyH,GAAmBhhU,KAAM,WAAYu5T,QAAS,iCCpG9C,SAAAv5T,EAAA0hT,QACA,IAAAxiT,KAAAD,QAAAC,EAAAD,QAAAyiT,IACAniT,EAAA,IAAAA,CAAAS,EAAA0hT,GAFA,CAIC,qBAED,IAAAp0R,EAAAnd,KACAqxT,EAAAl0S,EAAAm0S,QACAC,EAAA,EAGA,SAAA7rT,EAAAuR,EAAA3nB,GACA,OAAA+F,MAAAnE,UAAAwU,MAAAjW,KAAAwnB,EAAA3nB,GAIA,SAAAk7S,EAAAttR,EAAAs0S,EAAAC,GACA,IAAAxqT,EAAAvB,EAAAe,UAAA,GACA,OAAAowS,WAAA,WACA35R,EAAA1W,MAAAirT,GAAA,KAAAxqT,IACKuqT,GASL,SAAAF,IACA,IAAArqT,EAAAvB,EAAAe,WACA,kBACA,OAAA+jS,EAAAhkS,MAAA,KAAAS,EAAA+W,OAAAtY,EAAAe,cAUA,SAAAirT,EAAAx0S,EAAAs0S,EAAAC,GACA,IAAAxqT,EAAAvB,EAAAe,UAAA,GACA01R,EAAA,KAEA,kBACA,IAAAw1B,EAAAjsT,EAAAe,WAMA,OAFA,MAAA01R,GACA2a,aAAA3a,GACAA,EAAA0a,WALA,WACA,OAAA35R,EAAA1W,MAAAirT,GAAA,KAAAxqT,EAAA+W,OAAA2zS,KAIAH,IAWA,OACAhnB,QACAonB,MA1CA,SAAA10S,EAAAu0S,GACA,OAAAjnB,EAAAhkS,MAAA,MAAA0W,EAAAq0S,EAAAE,GAAAzzS,OAAAtY,EAAAe,UAAA,MA0CA6qT,UACAO,SA/BA,SAAA30S,EAAAu0S,GACA,OAAAH,EAAA9qT,MAAA,MAAA0W,EAAAq0S,EAAAE,GAAAzzS,OAAAtY,EAAAe,UAAA,MA+BA4tS,WAXA,WAEA,OADAl3R,EAAAm0S,QAAAD,EACArxT,MAUA0xT,oBACAI,SAAAJ,+MC7DIK,EAAkB7iU,OAAO6iU,QAAgB7iU,OAAQ8iU,SAGjDz3S,EAAiB03S,EAAA,EAYjBxvR,EAA2ByvR,EAAA,EAC3BvvR,EAA4BuvR,EAAA,EAC5BxvR,EAA4BwvR,EAAA,EAC5BC,EAAoCD,EAAA,EACpClwR,EAAekwR,EAAA,EACfr6S,EAA2Bq6S,EAAA,EAE3BE,GAAmB,EACnBC,GAAsB,EAE1B,SAAAC,EAAkCC,EAAcv8R,EAAKw/P,GAEjDxlS,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBuiU,EAAah9R,UAErCigQ,GAAax/P,GAAgC,QAAzBu8R,EAAap8R,UAGlCH,EAAM,IAAI78B,MAAM,mFAEhBq8R,GAAYA,aAAoBxzP,IAEhCwzP,EAASnnR,eAAenF,YAAcssR,EAASnnR,eAAenF,gBAC9DssR,EAASnnR,eAAenF,aAAessR,EAASnnR,eAAenF,YAAY1Q,KAAK,QAChFw9B,EAAM,IAAI78B,MAAM,oCAAsCq8R,EAASp8R,aAC3Do8R,SAAWA,EACfA,EAAW,MAGfxlS,OAAAsW,EAAA,EAAAtW,CAAiC,QAAzBuiU,EAAap8R,SAAwBH,IAAQw/P,IAAex/P,GAAOw/P,GAE3E,IAAIg9B,EAAoBD,EAAah9R,SACrCg9R,EAAah9R,SAAW,KACxBi9R,EAAkBx8R,EAAKw/P,GA2D3B,IAAIi9B,EAAc,EACdC,EAA4B,IAc1B,SAAAC,EAAsCC,GAGxC,SAAAC,EAAWz2T,GACP,OAAQ,qBAAuBA,GAAKkE,QAAQ,IAGhD3B,QAAQC,IAAI,oFACZD,QAAQC,IAAI,kCACVg0T,EAAMxzB,QAAQ0zB,QAAQjjU,KAAKuJ,WAAW25T,OAAQ,MAC9CH,EAAMp9B,SAASs9B,QAAQjjU,KAAKuJ,WAAW25T,OAAQ,MAC/CH,EAAMp9B,SAASnnR,eAAetF,cAAc3P,YAC9CuF,QAAQC,IAAI,kCAAmCi0T,EAAED,EAAMjrB,WAAY,UACnEhpS,QAAQC,IAAI,kCAAmCi0T,EAAED,EAAMhrB,cAAe,UACtEjpS,QAAQC,IAAI,kCAAmCi0T,EAAED,EAAMI,gBAAgBC,QAAQ,IAAK,iBACpFt0T,QAAQC,IAAI,kCAAmCi0T,EAAGD,EAAyB,oBAAEK,QAAQ,IAAK,iBAC1Ft0T,QAAQC,IAAI,kCAAmCi0T,EAAGD,EAA0B,qBAAEK,QAAQ,IAAK,iBAC3Ft0T,QAAQC,IAAI,kCAAmCi0T,EAAGD,EAA4B,uBAAEK,QAAQ,IAAK,iBAC7Ft0T,QAAQC,IAAI,kCAAmCi0T,EAAGD,EAA6B,wBAAEK,QAAQ,IAAK,iBAE9Ft0T,QAAQC,IAAI,uFAyBVs0T,UAAwC38B,EAAA,aAyF1Cn2R,YAAYC,GACZQ,QAjEUb,KAAAmzT,6BAAwC,EACxCnzT,KAAAozT,gCAA2C,EAC3CpzT,KAAAqzT,wBAAmC,EACnCrzT,KAAAszT,wBAA0B,KA+DpCjzT,EAAUA,MAEVL,KAAKuzT,eAAiB,EACtBvzT,KAAKqqS,OAAShqS,EAAQgqS,OACtBrqS,KAAKwzT,aAAe,KACpBxzT,KAAK6mS,gBAAkB,EAGvB7mS,KAAKyzT,eAAiB,IAAIC,EAAA,GACtBpyS,YAAa,OAGjBthB,KAAKinS,2BAA6B5mS,EAAQ6mS,4BAA8B,IAExElnS,KAAK2zT,cAAgBtzT,EAAQ8X,cAAgB+5S,EAAA,EAAoBp8S,KAEjE9V,KAAKsgB,eAAiBjgB,EAAQigB,gBAAkBszS,EAAA,EAAe99S,KAE/D9V,KAAK8iS,kBAAoBziS,EAAQyiS,kBAEjC9yS,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK2zT,gBAAkBzB,EAAA,EAAoB9xS,QAAS,yBACvDpgB,KAAK2zT,gBAAkBzB,EAAA,EAAoBp8S,OAC3C9lB,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK8iS,kBAAkB,gEAC9B9yS,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKsgB,iBAAmBszS,EAAA,EAAe99S,KAAM,+CAGxD9V,KAAK6zT,eAAiB,IAAIC,EAAA,EAC1B9zT,KAAK6zT,eAAe17S,aAAenY,KAAK2zT,cACxC3zT,KAAK6zT,eAAerzS,WAAaxgB,KAAK6qS,gBAEtC7qS,KAAK+zT,iBAEL/zT,KAAK6zT,eACJj1S,GAAG,UAhPR,SAA8B42Q,EAAUr/P,EAAS5c,GAI7CvpB,OAAAsW,EAAA,EAAAtW,CAAmB,QAAZmmC,GAGHi8R,GACAzzT,QAAQC,IAAI,sCAAuC2a,EAAWi8Q,EAASs9B,QAAQjjU,MAGnF,IAAI0iU,EAAevyT,KAAK+zT,cAAcx6S,GACtC,IAAKg5S,EAED,MADA5zT,QAAQC,IAAI,sCAAuC2a,EAAWi8Q,EAASs9B,QAAQjjU,MACzE,IAAIsJ,MAAM,2BAA6BogB,GAOjD,GAJAy6S,EAAA,MAAU,+BAAgCz6S,UACnCvZ,KAAK+zT,cAAcx6S,GAGtBi8Q,EAASnnR,eAAejG,gBAAkBmqT,EAAanzB,QAAQzxR,cAAcvF,cAAe,CAC5F,IAAIzD,EAAW4tT,EAAanzB,QAAQzxR,cAAcvF,cAC9C1D,EAAS8wR,EAASnnR,eAAejG,cACjC6rT,EAAW,WAAaz+B,EAASs9B,QAAQjjU,KAC7C8O,QAAQC,IAAK,wEACQ+F,EAASvL,SAAS,IACrC,eAAiBsL,EAAOtL,SAAS,IAAM,IAAM66T,GAGnD1B,EAAa/8B,SAAWA,EAGpB0+B,EAAA,IACAF,EAAA,MAAU,cACVA,EAAA,MAAUx+B,EAASp8R,aAGvBm5T,EAAa4B,OAASn0T,KAAK6zT,eAAetY,OAC1CgX,EAAa5qB,UAAY3nS,KAAK6zT,eAAetZ,mBAG7CgY,EAAa6B,OAAS75S,IACtB+3S,EAAyBC,EAAc,KAAM/8B,GAI7C+8B,EAAa8B,OAAS95S,IAEtBva,KAAKs0T,+BAA+B/B,GAGpCvyT,KAAKu0T,yBAAyBv0T,KAAKw0T,yBA4LC1jU,KAAKkP,OACxC4e,GAAG,cAAe,cAGhBA,GAAG,QAAS,CAACoX,EAAKzc,KAEjBvpB,OAAAkkU,EAAA,EAAAlkU,CAAS,gBAAkBupB,EAAYyc,GACvC,IAAIu8R,EAAevyT,KAAK+zT,cAAcx6S,GACtC5a,QAAQC,IAAI,iBACZD,QAAQC,IAAI2zT,GACPA,IACDA,EAAevyT,KAAK+zT,cAAcx6S,EAAY,GAC9C5a,QAAQC,IAAI,kBAAmB2zT,EAAeA,EAAanzB,QAAQhmS,WAAa,aAMxF4G,KAAKmzT,6BAA8B,EACnCnzT,KAAKozT,gCAAkC,EACvCpzT,KAAKqzT,wBAA0B,EAC/BrzT,KAAKszT,wBAA0B,KAC/BtzT,KAAKy0T,iBAAmBp0T,EAAQo0T,kBAAoBvB,EAAyBwB,wBAC7E10T,KAAK4lS,UAAY6sB,EACjBA,GAAe,EAGfpyT,EAAQqnS,mBAAqBrnS,EAAQqnS,uBACrC1nS,KAAK0nS,sBACL1nS,KAAK0nS,mBAAmBvB,SAAW8rB,EAAA,EAAwB5xT,EAAQqnS,mBAAmBvB,UAAY,GAAK9lS,EAAQqnS,mBAAmBvB,SAClInmS,KAAK0nS,mBAAmBtB,aAAe/lS,EAAQqnS,mBAAmBtB,cAAgB,GAClFpmS,KAAK0nS,mBAAmBrB,SAAWhmS,EAAQqnS,mBAAmBrB,UAAY,IAE1E,IAAIj2S,EAAIiQ,EAAQqnS,mBAAmBpB,oBACnCtmS,KAAK0nS,mBAAmBpB,yBAA6Br0S,IAAN7B,EAAmB,EAAIA,EAvJtEgQ,mBAAmBgoS,GACf,MAAM,IAAIjvS,MAAM,2BAiDpB8uS,mBACI,QAAUjoS,KAAK20T,OAGnBhtB,gBACI,OAAO3nS,KAAK40T,WAAa50T,KAAK40T,WAAWjtB,UAAY,EAGzDC,mBACI,OAAO5nS,KAAK40T,WAAa50T,KAAK40T,WAAWhtB,aAAe,EAG5DzvR,mBACI,OAAOnY,KAAK2zT,cAGhB9rB,4BACI,OAAO7nS,KAAKuzT,eAGhBzrB,2BACI,OAAO9nS,KAAKqzT,wBAGhBj7S,kBACI,OAAOpY,KAAKwzT,aAGhBx2R,kBACI,OAAOh9B,KAAK40T,WAAW53R,YAiFxB58B,gBACH,OAAOJ,KAAKqqS,OAASrqS,KAAKqqS,OAAOQ,gBAAkB,KAGhDzqS,sBACH,OAAOJ,KAAKqqS,OAASrqS,KAAKqqS,OAAOU,sBAAwB,KAInD3qS,yBAAyBy0T,GAE3BX,EAAA,GAEAvB,EAA4BkC,GAEhC70T,KAAKqe,KAAK,kBAAmBw2S,GAGvBz0T,+BAA+BmyT,GASrCvyT,KAAKw0T,wBACDp1B,QAASmzB,EAAanzB,QACtB5J,SAAU+8B,EAAa/8B,SACvBoS,aAAc2qB,EAAauC,mBAAqBvC,EAAawC,oBAC7DptB,UAAW4qB,EAAa5qB,UACxBqtB,oBAAqBzC,EAAahX,OAASgX,EAAanY,OACxD6a,qBAAsB1C,EAAa4B,OAAS5B,EAAahX,OACzD2Z,uBAAwB3C,EAAa6B,OAAS7B,EAAa4B,OAC3DgB,wBAAyB5C,EAAa8B,OAAS9B,EAAa6B,OAC5DpB,gBAAiBT,EAAa8B,OAAS9B,EAAanY,QAIpDiY,GACAM,EAA4B3yT,KAAKw0T,wBAMlCp0T,0BAEH,OAAOpQ,OAAO2rB,KAAK3b,KAAK+zT,eAAez+T,OAAS,EAG1C8K,6BAA6B41B,GAGnChmC,OAAAkkU,EAAA,EAAAlkU,CAAS,iCAAmCA,OAAO2rB,KAAK3b,KAAK+zT,gBAAmB/zT,KAAK40T,WAAa50T,KAAK40T,WAAW/kU,KAAO,iBAEzHG,OAAAsW,EAAA,EAAAtW,CAAsB,iBAARgmC,EAAkB,yBAChChmC,OAAO2rB,KAAK3b,KAAK+zT,eAAep9R,QAAQ,SAAU9lC,GAC9C,IAAI0hU,EAAevyT,KAAK+zT,cAAcljU,GACtCb,OAAAkkU,EAAA,EAAAlkU,CAAS,uCAAyCuiU,EAAa1hU,IAAM0hU,EAAap8R,QAAUo8R,EAAanzB,QAAQ0zB,QAAQjjU,MACzHyiU,EAAyBC,EAAcv8R,EAAK,QAGhDh2B,KAAK+zT,iBAIC3zT,qBAAqBq1B,GAE3BzlC,OAAAkkU,EAAA,EAAAlkU,CAAS,oDAGLgQ,KAAKmzT,8BACL19R,EAAQ,MAUZz1B,KAAKqe,KAAK,QAASoX,GACnBz1B,KAAKo1T,6BAA6B3/R,GAElCz1B,KAAK40T,WAAa,KAIZx0T,qCAENpQ,OAAAkkU,EAAA,EAAAlkU,CAAS,2BAA6BgQ,KAAKq1T,eAAej8S,QAAU,wDASpEpZ,KAAKqe,KAAK,cAAere,KAAKq1T,gBAE9Br1T,KAAKs1T,wBAICl1T,kCAEFJ,KAAKszT,0BACLxc,aAAa92S,KAAKszT,yBAClBtzT,KAAKszT,wBAA0B,MAK7BlzT,mCAMN,IAAIm1T,EAAWv1T,KAAKq1T,eAAe17S,gBACnC3pB,OAAAsW,EAAA,EAAAtW,CAAOulU,GAAYA,EAAW,IAC9BvlU,OAAAkkU,EAAA,EAAAlkU,CAAS,sBAAwBulU,GAEjCvlU,OAAAsW,EAAA,EAAAtW,CAAwC,OAAjCgQ,KAAKszT,yBACZtzT,KAAKszT,wBAA0Bzc,WAAY,KACvC72S,KAAKszT,wBAA0B,KAC/BtzT,KAAKw1T,sCAEK,GAAXD,EAAgB,KAGbn1T,sBAEN,GAAIJ,KAAK2zT,gBAAkBzB,EAAA,EAAoBp8S,KAC3C,OAAO,KAQX,IAAI2/S,EAAiCzlU,OAAA4jU,EAAA,EAAA5jU,CAAiBgQ,KAAKsgB,gBAC3D,IAAKm1S,EAED,OAAO,KAEXzlU,OAAAsW,EAAA,EAAAtW,CAAgC,iBAAlBylU,GACd,IAAIx+S,EAAM,IAAIrb,WAAW65T,EAAczzS,oBAEvC,OADA+vS,EAAO2D,gBAAgBz+S,GAChBA,EAKD7W,6BAA6Bu1T,EAAYpgS,GAE/CvlC,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK2zT,gBAAkBzB,EAAA,EAAoB9xS,QAAS,yBAO3D,IACIlI,EAAc,EAAeL,EAAyB+9S,MAAQ/9S,EAAyBg+S,MAE3F71T,KAAKwzT,aAAexzT,KAAK81T,sBAEzB91T,KAAK+1T,WAAaJ,EAGlB,IAAIK,EAAM,IAAIvzR,GACVxqB,sBAAuBjY,KAAK6mS,gBAC5B3uR,YAAaA,EACbC,aAAcnY,KAAK2zT,cACnBhmT,cAAe,IAAIukT,EAAA,GACf5pT,aAAc,OAElB8P,YAAapY,KAAKwzT,aAClBn7S,kBAAmBrY,KAAKinS,6BAG5BjnS,KAAKi2T,2BAnBS,MAmB2BD,EAAK,CAACvgS,EAAO+/P,KAKlD,GAHIA,GAAYA,EAASnnR,eAAetF,gBAAkBmtT,EAAA,EAAY5zT,OAClEmzB,EAAQ,IAAIt8B,MAAMq8R,EAASnnR,eAAetF,cAAc3P,cAEvDq8B,EAAO,CAmBR,GAhBIy+R,EAAA,GACAlkU,OAAAkkU,EAAA,EAAAlkU,CAASwlS,EAASp8R,YAEtBpJ,OAAAsW,EAAA,EAAAtW,CAAOwlS,aAAoB9yP,GAO3B1iC,KAAKq1T,eAAiB7/B,EAAS/8Q,cAC/BzoB,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKq1T,eAAej8S,QAAU,IAAK+c,EAAmB,8CAC7DnmC,OAAAsW,EAAA,EAAAtW,CAAOwlS,EAASrkS,eAAe,gBAE/B6O,KAAKm2T,aAAe3gC,EAAS78Q,YAEzB3Y,KAAK2zT,gBAAkBzB,EAAA,EAAoBp8S,KAAM,CAIjD,IAAK9V,KAAKm2T,aAEN,OADAx3T,QAAQC,IAAI,uCACL22B,EAAS,IAAIp8B,MAAM,0BAI9B,GAAI6G,KAAKm2T,aAAa7gU,SAAW0K,KAAKwzT,aAAal+T,OAE/C,OADAqJ,QAAQC,IAAI,uCACL22B,EAAS,IAAIp8B,MAAM,iCAKlC,IAAIs8T,EAAgBz1T,KAAK6zT,eAAe4B,cACpCA,IACAzlU,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKm2T,wBAAwBv6T,YACpCoE,KAAKo2T,aAAeX,EAAcp0S,qBAAqBrhB,KAAKm2T,aAAcn2T,KAAKwzT,eAGnF,IAAIhyS,EAAoBxhB,KAAKo2T,aAAep2T,KAAKo2T,aAAa50S,kBAAoB,KAClFxhB,KAAK6zT,eAAewC,aAAar2T,KAAKq1T,eAAgB7zS,GAEtDxhB,KAAKs2T,mCACLt2T,KAAK+1T,WAAY,EAGrBxgS,EAASE,KAIPr1B,eAAem2T,EAAWhhS,EAAUS,GAM1C,GAAIA,EAEAhmC,OAAAkkU,EAAA,EAAAlkU,CAAS,4BACTulC,EAASS,OAEN,CAEHh2B,KAAK40T,WAAa2B,EAElBv2T,KAAK40T,WAAWh2S,GAAG,UAAY6rR,IAM3BzqS,KAAKqe,KAAK,gBAAiBosR,GAC3BzqS,KAAKw2T,0BAA0B/rB,KAInCzqS,KAAK40T,WAAWh2S,GAAG,QAAS,IAAI5e,KAAKy2T,sBAErCz2T,KAAK40T,WAAWh2S,GAAG,mBAAoB,KACnC5uB,OAAAkkU,EAAA,EAAAlkU,CAAS,kCACTgQ,KAAKy2T,qBAAqB,IAAIt9T,MAAM,uBAGxC6G,KAAK40T,WAAWh2S,GAAG,QAAS,WACxB5uB,OAAAkkU,EAAA,EAAAlkU,CAAS,YAKbgQ,KAAK02T,8BADY,EAC6BnhS,IAqC/Cn1B,OAAOu2T,EAAwBphS,GAKlC,GAHAvlC,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,GAGzBv1B,KAAK2zT,gBAAkBzB,EAAA,EAAoBp8S,OAGtC9V,KAAK8iS,kBACN,OAAOvtQ,EAAS,IAAIp8B,MAAM,oGAuBlC,IAAIo9T,EAAY,IAAIK,EAAA,EACpBL,EAAUp6B,QAAUn8R,KAAKy0T,iBACzB8B,EAAU1vB,gBAAkB7mS,KAAK6mS,gBAML,EAAC0vB,EAA8BI,EAAcphS,KAGrE,IAAIshS,EAAW,KAEXC,EAAYC,IAER/2T,KAAK20T,QAAU30T,KAAK20T,OAAOqC,gBAI/BT,EAAU/tB,QAAQmuB,EAAe3gS,IAU7B,GAAIA,EAAK,CAEL,IAAIihS,GAAe,EAEfjhS,EAAInxB,QAAQkW,MAAM,gBAClBk8S,GAAe,GAEfjhS,EAAInxB,QAAQkW,MAAM,mCAClBk8S,GAAe,GAEnBJ,EAAW7gS,EAEPh2B,KAAK20T,SAEDsC,GACAjnU,OAAAkkU,EAAA,EAAAlkU,CAAS,kDAAoDgmC,EAAInxB,SACjE7E,KAAK20T,OAAOuC,SAEZlnU,OAAAkkU,EAAA,EAAAlkU,CAAS,kCAAoCgmC,EAAInxB,UAI7DkyT,EAAY/gS,MAKpB,GAAIh2B,KAAK0nS,mBAAmBvB,UAAY,EAEpC,OADAnmS,KAAK20T,OAAS,EACPmC,EAASvhS,GAIpB,IAAI4hS,EAAuBnhS,IAEnBh2B,KAAK20T,SAEL4B,EAAUa,cAAgBb,EAAUa,eAAiB,EACrDb,EAAUa,eAAiBp3T,KAAK20T,OAAO0C,gBACvCr3T,KAAK20T,OAAO91S,qBACZ7e,KAAK20T,OAAS,KAEV3+R,EACAT,EAASshS,GAETthS,MAKZv1B,KAAK20T,OAAS2C,EAAA,EAAaR,EAAUK,GAGrCn3T,KAAK20T,OAAOnM,UAAUh3T,KAAKa,IAAI2N,KAAK0nS,mBAAmBvB,SAAU,IAGjEnmS,KAAK20T,OAAO/1S,GAAG,UAAW,CAAC2rR,EAAQC,KAE/Bx6S,OAAAkkU,EAAA,EAAAlkU,CAAS,aAAeu6S,EAAS,WAAaC,EAAQxqS,KAAK20T,OAAOnP,mBAMlExlT,KAAKqe,KAAK,UAAWksR,EAAQC,KAGjCxqS,KAAK20T,OAAO/1S,GAAG,QAAS,KACpB5uB,OAAAkkU,EAAA,EAAAlkU,CAAS,kBAAoBgQ,KAAK20T,OAAO0C,gBAAkB,YAM3Dr3T,KAAKqe,KAAK,SAEVqX,EAAa,WACTyhS,EAAoB,IAAIh+T,MAAM,6BAKtC6G,KAAK20T,OAAO4C,YAAY,IAAID,EAAA,EAA4Bt3T,KAAK0nS,qBAC7D1nS,KAAK20T,OAAO96S,SAIhB29S,CAAsBjB,EAAWI,EAAc,IAAI32T,KAAKy3T,eAAelB,EAAWhhS,IAI/En1B,UAEHJ,KAAK03T,kCACD13T,KAAK20T,QACL30T,KAAK20T,OAAOuC,QAKb92T,gBAAgBm1B,GACnBvlC,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,GAEzBv1B,KAAK20T,QACL30T,KAAK20T,OAAOv3S,KAAK,QAAS,WACtBy5R,WAAWthR,EAAU,MAGzBv1B,KAAK20T,OAAOqC,gBAAiB,EAC7Bh3T,KAAK20T,OAAOuC,SAGZ3hS,IAKEn1B,wBAGNpQ,OAAAkkU,EAAA,EAAAlkU,CAAS,kDASLgQ,KAAK02T,8BADY,EAC8B1gS,IAGtCA,EASDr3B,QAAQ82B,MAAM,yEARdzlC,OAAAkkU,EAAA,EAAAlkU,CAAS,kBAKTgQ,KAAKqe,KAAK,6BAMlBre,KAAKozT,gCAAkC,EAIrChzT,0BAA0BqqS,GAKhC,GAAIypB,EAAA,EAAS,CACT,IAAIyD,EAAU,IAAIC,EAAA,EAAWntB,GACzBmP,EAAgB5pT,OAAA6nU,EAAA,EAAA7nU,CAAkB2nU,GACtC3nU,OAAAkkU,EAAA,EAAAlkU,CAAS,mBAAsBiV,KAAKC,UAAU00S,IAC9C5pT,OAAAkkU,EAAA,EAAAlkU,CAAS,KAAOA,OAAAkkU,EAAA,EAAAlkU,CAAQy6S,IACxBz6S,OAAAkkU,EAAA,EAAAlkU,CAASA,OAAA8nU,EAAA,EAAA9nU,CAAsBy6S,IAEnCzqS,KAAK6zT,eAAe1Y,KAAK1Q,GAQtBrqS,gBAEH,OADAJ,KAAKuzT,gBAAkB,EAChBvzT,KAAKuzT,eAiCTnzT,0BAA0B23T,EAAgBxiS,GAC7CvlC,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,GAC7Bv1B,KAAKi2T,2BAA2B,MAAO8B,EAAgBxiS,GAGpDn1B,UAEH,OAAOJ,KAAK40T,YAAc50T,KAAK40T,WAAWtK,UAEvClqT,WAEH,OAAOJ,KAAKsqT,WAAatqT,KAAK+1T,UAsBxB31T,2BAA2B+1B,EAAS4hS,EAAgBxiS,GAO1D,GAHAvlC,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,IAGxBv1B,KAAKsqT,UACN,OAAO/0R,EAAS,IAAIp8B,MAAM,mDAI9B,IAAI6+T,EAAiBziS,EAEjB4mQ,EAAU47B,EAAepqT,cAAcpF,aAAemqT,EAEtDh3B,EAAU,KAEV8hB,GAAc,EAElB,IAAKya,EAAoB,CAACjiS,EAAKw/P,KAW3B,GARI0+B,EAAA,IACAlkU,OAAAkkU,EAAA,EAAAlkU,CAAS,iDACLwlS,GACAxlS,OAAAkkU,EAAA,EAAAlkU,CAASwlS,EAASp8R,aAKrB4+T,EAAL,EAIKxa,GAAe9hB,GAChBob,aAAapb,GAEjBA,EAAU,MAEL1lQ,GAAOw/P,GAMRx1R,KAAKqe,KAAK,mBAAoBm3Q,GAElCxlS,OAAAsW,EAAA,EAAAtW,EAAQgmC,GAAQA,aAAe78B,OAI/B,IAEI6+T,EAAehiS,EAAIw/P,GAEvB,MAAOx/P,GACHr3B,QAAQC,IAAI,sEAAuEo3B,GACnFT,EAASS,WAGTgiS,EAAiB,QAIzBt8B,EAAUmb,WAAY,KAClBnb,EAAU,KACV/8R,QAAQC,IAAI,0CAA2Cm5T,EAAej1T,YAAYjT,KAAMkoU,EAAepqT,cAAcvU,YAErHokT,GAAc,EACdya,EAAkB,IAAI9+T,MAAM,6BAA8B,MAE1D6G,KAAKqzT,yBAA2B,EAOhCrzT,KAAKqe,KAAK,oBAAqB05S,IAEhC57B,GAEH,IAAI+7B,GAAoB/hS,QAASA,EAASipQ,QAAS24B,EAAgBxiS,SAAU0iS,GAI7Ej4T,KAAKm4T,8BAA8BD,GAW7B93T,8BAA8B83T,GAMpC,GAFAloU,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBkoU,EAAiB3iS,UAEzCv1B,KAAK40T,WAAV,CAMA5kU,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK40T,WAAY,gCAExB,IAAIz+R,EAAU+hS,EAAiB/hS,QAC3B4hS,EAAiBG,EAAiB94B,QACtCpvS,OAAAsW,EAAA,EAAAtW,CAA0B,IAAnBmmC,EAAQ7gC,QAEftF,OAAAsW,EAAA,EAAAtW,CAAO+nU,aAA0B/nU,QAGjC,IAAIupB,EAAYvZ,KAAKo4T,gBAGjBhG,GACAzzT,QAAQC,IAAI,sCAAwC2a,EAAYw+S,EAAejF,QAAQjjU,MAE3FmQ,KAAK+zT,cAAcx6S,IACf6lR,QAAS24B,EACT5hS,QAASA,EACTZ,SAAU2iS,EAAiB3iS,SAE3Bw/R,oBAAqB/0T,KAAK4nS,aAC1BktB,mBAAoB,EAGpB1a,OAAQ7/R,IAERghS,OAAQ,KAER4Y,OAAQ,KAERC,OAAQ,KAERC,OAAQ,KACRgE,YAAa,GAGjBr4T,KAAKs4T,wBAAwBniS,EAAS4hS,EAAgBx+S,QAzClDs9R,WAAW,WACPqhB,EAAiB3iS,SAAS,IAAIp8B,MAAM,0BACrC,KA2CDiH,YAAYmZ,EAAWsjB,GAE7B,IAAI01R,EAAevyT,KAAK+zT,cAAcx6S,GAElCsjB,GAOA78B,KAAKqe,KAAK,aAAcwe,GASxB7sC,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK40T,YACZ50T,KAAK40T,WAAW58B,MAAMn7P,GACtB01R,EAAa8F,aAAe,IAMxBnE,EAAA,GACAlkU,OAAAkkU,EAAA,EAAAlkU,CAAS,qBAETuiU,IAEAA,EAAahX,OAAShhS,IACtBg4S,EAAauC,mBAAqB90T,KAAK4nS,eAKzCxnS,6BAENpQ,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK7O,eAAe,iBAC3BnB,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAK7O,eAAe,mBAG3B6O,KAAKu4T,qBAAuBv4T,KAAK8iS,kBAEjC,IAAItM,EAAiB,KACrB,OAAQx2R,KAAK2zT,eACT,KAAKzB,EAAA,EAAoBsG,KACzB,KAAKtG,EAAA,EAAoBuG,eACrBzoU,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKsgB,iBAAmBszS,EAAA,EAAe99S,MAG9C0gR,EAAiB,IAAI27B,GACjBn5S,kBAAmBhpB,OAAA4jU,EAAA,EAAA5jU,CAAMgQ,KAAKsgB,gBAC9BrH,kBAAmBjZ,KAAK+qS,sBACxB7xR,8BAJa,OAMjB,MACJ,QAEIlpB,OAAAsW,EAAA,EAAAtW,EAAO,EAAO,yBAItBgQ,KAAKg3R,gBAAkBR,EAiEjBp2R,wBAAwB+1B,EAAS4hS,EAAgBx+S,GAIvD,IAAIlZ,GACAkZ,UAAWA,EACXs9Q,gBAAiB72R,KAAKq1T,eAAiBr1T,KAAKq1T,eAAezvB,UAAgC,EAC3FxsR,QAASpZ,KAAKq1T,eAAiBr1T,KAAKq1T,eAAej8S,QAAU,GAI7DpZ,KAAK40T,WAAWl/B,YAAc11R,KAAK40T,WAAWl/B,WAAWgjC,iBACzDr4T,EAAQw2B,UAAY72B,KAAK40T,WAAWl/B,WAAWgjC,gBAGnDX,EAAepqT,cAAcvF,cAAgB/H,EAAQkZ,UAErDw+S,EAAepqT,cAActF,kBAAoB,EAG7C6rT,EAAA,IACAlkU,OAAAkkU,EAAA,EAAAlkU,CAAS,kEACTA,OAAAkkU,EAAA,EAAAlkU,CAAS,eAAiBqQ,EAAQw2R,iBAClC7mS,OAAAkkU,EAAA,EAAAlkU,CAAS+nU,EAAe3+T,aAa5B4G,KAAKqe,KAAK,eAAgB05S,GAE1B/3T,KAAKyzT,eAAekF,mBAAmBxiS,EAAS91B,EAAS03T,EAAgB/3T,KAAK44T,YAAY9nU,KAAKkP,KAAMuZ,IAclGnZ,MAAMm1B,GAWTvlC,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBulC,EAAU,0CAA4CA,GAGnFv1B,KAAK03T,kCAEL1nU,OAAAkkU,EAAA,EAAAlkU,CAAS,+CAET,IAAIovS,EAAU,IAAIz8P,EAIlB,GAFA3iC,KAAKmzT,6BAA8B,GAE9BnzT,KAAK40T,YAAc50T,KAAK40T,WAAWiE,cAEpC,OADA74T,KAAK4pS,UACEr0Q,EAAS,IAAIp8B,MAAM,2BAG9B6G,KAAKi2T,2BAA2B,MAAO72B,EAAS,KAE5Cp/R,KAAK4pS,UACLr0Q,OAvlCU29R,EAAAwB,wBAAmC,4IC5NrDoE,EAAA1pU,EAAA,IAiBM,SAAA2pU,EAAgCl8R,GAElC,IAAIlrC,EAAS,IAAI4qC,EAAA,EAAWM,GAExB+8Q,EAAgB5pT,OAAAysC,EAAA,EAAAzsC,CAAkB2B,GACtC,GAA8B,QAA1BioT,EAAczjR,SAA+C,QAA1ByjR,EAAczjR,QACjD,OAAOyjR,EAAczjR,QAAU,IAAMyjR,EAAcxjR,QAAU,eAAiBwjR,EAActkT,OAIhG,IAAIkhS,EAAiBxmS,OAAAgpU,EAAA,EAAAhpU,CAAqB4pT,EAAczjR,SAEpDulR,EAAiB,IAAIod,EAAA,EACzB9oU,OAAAsW,EAAA,EAAAtW,CAAyB,IAAlB2B,EAAO2D,QAEd,IAAIuhS,EAAkBllS,EAAOsC,YAC7BuiS,EAAepzR,OAAOzR,GACtB+pT,EAAet4S,OAAOzR,GAEtB,IAAI+T,EAAQm3B,EAAan3B,MAAM,EAAG/T,EAAO2D,QAGzC,OAAOskT,EAAczjR,QAAU,IAC3ByjR,EAAcxjR,QACd,eAAiBwjR,EAActkT,OAC/B,eAAiBuhS,EACjB,eAAiB6kB,EAAezrS,eAChC,eAAiByrS,EAAeniS,UAChC,iBAAmBtU,KAAKC,UAAUsxR,GAClC,OAASxmS,OAAAipU,EAAA,EAAAjpU,CAAQ0V,0HCxBnBwzT,EAOF1iC,qBACI,OAAOx2R,KAAKg3R,gBAGhBR,mBAAmB2iC,GACfn5T,KAAKg3R,gBAAkBmiC,EAG3B/4T,YAAYC,GAERL,KAAK+2R,yBAA2B,IAAIqiC,EAAA,EACpCp5T,KAAKq5T,OAAOh5T,GAUbD,OAAOC,IAEVA,EAAUA,OACFm2R,eAAiBn2R,EAAQm2R,gBAC7B,IAAIH,EAAA,GAAmCr9Q,kBAAmB,oDAE9DhpB,OAAAsW,EAAA,EAAAtW,CAA0B,iBAAZqQ,GACdrQ,OAAAsW,EAAA,EAAAtW,CAAyC,iBAA3BqQ,EAAQm2R,gBAEtBx2R,KAAKg3R,gBAAkB32R,EAAQm2R,eAC/Bx2R,KAAKo2T,aAAe/1T,EAAQihB,aAAe,KAiBxClhB,mBAAmB+1B,EAAS91B,EAASwE,EAASy0T,GAEjDj5T,EAAUA,MACVrQ,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsBspU,GAG7B,IAQI9iC,EARA+iC,EAAUh9R,EAAA,EAAWv5B,gBAAgB6B,GAAW,EAEhDlT,EAAS,IAAI4qC,EAAA,EAAWg9R,GAC5Bv5T,KAAK23T,QAAUhmU,EAEf0zS,EAAA,GAAwBxgS,EAAQjC,sBAAuBjR,GACvDkT,EAAQ5B,OAAOtR,GAIX6kS,EADY,QAAZrgQ,EACiBn2B,KAAKg3R,gBAEL,IAAIX,EAAA,GAAkCj9Q,QAAS/Y,EAAQ+Y,UAG5E,IAAIogT,EAAiB,IAAIC,EAAA,EACrBtjS,EAAS91B,EAASm2R,EAAgBx2R,KAAK+2R,0BAEtCn4Q,GAAG,QAAS,SAAUie,GACnBy8R,EAAqBz8R,KAExBje,GAAG,WAAY,WACZ06S,EAAqB,QAG7BE,EAAexhC,MAAMrmS,EAAO2kB,OAAQ3kB,EAAO2kB,OAAO5O,YAClD8xT,EAAe1/S,wECzGnB6qS,EAAA,iBAAA71T,2BAAA81T,UAAA91T,QAGA+1T,EAAAF,GAAA,iBAAA51T,SAAA61T,UAAA71T,EAMAu9T,EAHAzH,KAAA/1T,UAAA61T,EAGA+U,EAAA,EAAApN,YAAAr6T,EAsBAi7S,GAnBAof,IAAApf,cAAAj7S,IAmBA0nU,EAAA,EAEAr2T,EAAA,yDCpBAA,EAAA,EAJA,WACA,2DCMAs2T,UAhBAC,EAAA,mBAAAnkS,KACAokS,EAAA,iBAAA/U,GAAA,mBAAAA,EAAAqI,SAkBAwM,EADAC,EACAnkS,EACCokS,EACD/U,EAAAqI,SAlBA,SAAAlwS,GACA25R,WAAA35R,EAAA,IAsBA5Z,EAAA,EAnBA,SAAAsuT,GACA,gBAAA10S,GACA,IAAAjW,EAAAjX,OAAA+pU,EAAA,EAAA/pU,CAAAyW,UAAA,GACAmrT,EAAA,WACA10S,EAAA1W,MAAA,KAAAS,MAeA,CAAA2yT,sLCAMI,EAWN55T,YAAak1R,GACTtlS,OAAAsW,EAAA,EAAAtW,CAAOslS,aAAmBtlS,QAE1BgQ,KAAKi6T,SAAW3kC,EAEhBt1R,KAAKoQ,gCACLpQ,KAAKk6T,mBAELl6T,KAAKuI,YAAc,IAEnBvI,KAAKm6T,wBAA0B,EAG/Bn6T,KAAKo6T,yBAA2B,EAIhCp6T,KAAKq6T,qCAAuC,IAE5Cr6T,KAAKs6T,aAAc,EASvB92B,wBACI,OAAOxzS,OAAO2rB,KAAK3b,KAAKk6T,iBAAiB5kU,OAG7CggS,cACI,OAAOt1R,KAAKi6T,SAIT75T,QAAQm6T,GACXvqU,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKs6T,gBAAkBC,EAAK,iBACnCv6T,KAAKs6T,cAAgBC,EACjBv6T,KAAKs6T,aAGLt6T,KAAKyjS,kCASNrjS,yBAAyBkO,EAAyB2B,GAWrDjQ,KAAKoQ,6BAA6B/X,KAAK,IAAIk7R,EAAA,GACvCjlR,eAAgBA,EAChB2B,eAAgBA,KAIjB7P,wCAAwCkO,GAE3CtO,KAAKoQ,6BAA+BpQ,KAAKoQ,6BAA6BqkR,OAAO,SAAUv5Q,GACnF,OAAOA,EAAE5M,iBAAmBA,IAO7BlO,uBACCJ,KAAKs6T,aAILt6T,KAAKo6T,0BAA4Bp6T,KAAKq6T,uCAItCr6T,KAAKi6T,WAAaj6T,KAAKi6T,SAAS74B,iBAEhCyV,WAAW,KACH72S,KAAKwjS,mBACLxjS,KAAKw6T,wBAEV,KAEH9kS,EAAc,KACL11B,KAAKs1R,UAAWt1R,KAAKs6T,aAI1Bt6T,KAAKy6T,2BAOPr6T,wBACNpQ,OAAAsW,EAAA,EAAAtW,CAAOgQ,KAAKi6T,SAAU,wCACtBjqU,OAAAsW,EAAA,EAAAtW,EAAQgQ,KAAKs6T,YAAY,2BAEzBt6T,KAAKo6T,0BAA2B,EAEhCpqU,OAAA0qU,EAAA,EAAA1qU,CAAS,2BAA6BgQ,KAAKo6T,0BAE3C,IAAIhqT,EAA+BpQ,KAAKoQ,6BACxCpQ,KAAKoQ,gCA+BLpgB,OAAAsW,EAAA,EAAAtW,CAAQgQ,KAAKo6T,yBAA0B,GACvC,IAAIO,EAAoB36T,KAAKo6T,yBAA2Bp6T,KAAKuI,YAEzDqyT,EAAkB,IAAIrnC,EAAA,GACtB5lR,cAAe,IAAIktT,EAAA,GAAetyT,YAAaoyT,IAC/CvqT,6BAA8BA,IAG9BmnS,GAAS,EAEbv3S,KAAKi6T,SAASa,QAAQF,EAAiB,CAAC5kS,EAAKw/P,KAEzCx1R,KAAKo6T,0BAA4B,EAC7BpkS,GACAhmC,OAAA0qU,EAAA,EAAA1qU,CAAS,sEAAwEgmC,EAAInxB,SACrF7U,OAAA0qU,EAAA,EAAA1qU,CAAS,IAAMgmC,EAAInxB,QAAU,KAE1BmxB,EAAInxB,QAAQkW,MAAM,mBACjB/qB,OAAA0qU,EAAA,EAAA1qU,CAAS,4EACTA,OAAA0qU,EAAA,EAAA1qU,CAAS,iCAAmCgQ,KAAKm6T,yBAIjD5iB,GAAS,GAGTvhR,EAAInxB,QAAQkW,MAAM,sBAAyB/a,KAAKm6T,yBAA0B,IAK1EnqU,OAAA0qU,EAAA,EAAA1qU,CAAS,+EACTA,OAAA0qU,EAAA,EAAA1qU,CAAS,iCAAmCgQ,KAAKm6T,yBACjD5iB,GAAS,GAGTvhR,EAAInxB,QAAQkW,MAAM,0CAMlB/qB,OAAA0qU,EAAA,EAAA1qU,CAAS,2DACTA,OAAA0qU,EAAA,EAAA1qU,CAAS,mGAETunT,GAAS,GAETvhR,EAAInxB,QAAQkW,MAAM,+BAUlB/a,KAAKq6T,qCAAuC7oU,KAAKY,IAAI4N,KAAKo6T,yBAAyBp6T,KAAKq6T,sCACxF9iB,GAAS,EAETvnT,OAAA0qU,EAAA,EAAA1qU,CAAS,2EACTA,OAAA0qU,EAAA,EAAA1qU,CAAS,2CAA6CgQ,KAAKo6T,0BAC3DpqU,OAAA0qU,EAAA,EAAA1qU,CAAS,6CAA+CgQ,KAAKq6T,yCAG7DK,EAAA,GACA1qU,OAAA0qU,EAAA,EAAA1qU,CAAS,qEAEbgQ,KAAK+6T,0BAA0BvlC,IAI/B+hB,GAAWv3S,KAAKm6T,wBAAwB,GACxCn6T,KAAKw6T,yBAKVp6T,YACHJ,KAAKi6T,SAAW,KAUb75T,qBAAqBszR,GAExB1jS,OAAA0qU,EAAA,EAAA1qU,CAAS,gDAAkD0jS,EAAaplR,gBAExEte,OAAAsW,EAAA,EAAAtW,CAA4B,IAArByW,UAAUnR,QACjBtF,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAAcihS,EAAaplR,iBACzCte,OAAAsW,EAAA,EAAAtW,EAAQgQ,KAAKk6T,gBAAgB/oU,eAAeuiS,EAAat6R,aACzDpJ,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsB0jS,EAAasnC,uBAC1ChrU,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAASihS,EAAanrR,cAEpCvI,KAAKm6T,yBAA2B,EAChCn6T,KAAKk6T,gBAAgBxmC,EAAaplR,gBAAkBolR,EAEpD1zR,KAAKuI,YAAc/W,KAAKa,IAAI2N,KAAKuI,YAAamrR,EAAanrR,aAC3DvY,OAAA0qU,EAAA,EAAA1qU,CAAS,gDAAkDgQ,KAAKuI,YAAcmrR,EAAanrR,aAE3FvI,KAAKyjS,kCAGFrjS,kCASHJ,KAAKw6T,uBAEL,IAAK,IAAIlrU,EAAI,EAAGA,EAAI0qU,EAAwBiB,8BAAgC,EAAG3rU,IAC3E0Q,KAAKw6T,uBASNp6T,uBAAuBkO,GAE1Bte,OAAA0qU,EAAA,EAAA1qU,CAAS,kDAAoDse,GAE7Dte,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAAc6b,IAAmBA,EAAgB,GAE/DtO,KAAKm6T,yBAA2B,EAChCnqU,OAAAsW,EAAA,EAAAtW,CAAOse,KAAkBtO,KAAKk6T,wBACvBl6T,KAAKk6T,gBAAgB5rT,GAGzBlO,qBACH,OAAOpQ,OAAO2rB,KAAK3b,KAAKk6T,iBAAiBz+R,IAAIzlC,UAU1CoK,gBAAgBkO,GAInB,OAFAte,OAAAsW,EAAA,EAAAtW,CAAOwC,OAAOC,SAAS6b,IAAmBA,EAAgB,GAC1Dte,OAAAsW,EAAA,EAAAtW,CAFWgQ,KAECk6T,gBAAgB/oU,eAAemd,EAAelV,aAF/C4G,KAGCk6T,gBAAgB5rT,GAGtBlO,0BAA2Bo1R,GAEjCxlS,OAAA0qU,EAAA,EAAA1qU,CAAS,4BACT,IAGIse,EAAiBknR,EAASlnR,eAS1BqD,EAAsB6jR,EAAS7jR,oBAKnCA,EAAoBpB,iBAAmBoB,EAAoBpB,qBAEP,IAAhDoB,EAAoBpB,iBAAiBjb,QAnB9B0K,KAoBFk7T,yBAAyB5sT,EAAgBqD,EAAoB1B,gBAQtE,IAAIyjR,EA5BO1zR,KA4Bak6T,gBAAgB5rT,GAExC,GAAIolR,GAAkC,OA9B3B1zR,KA8Bci6T,SAErB,IAEGvmC,EAAasnC,sBAAsBrpT,GAEtC,MAAMqkB,GACA0kS,EAAA,IACF/7T,QAAQC,IAAIo3B,GACZhmC,OAAA0qU,EAAA,EAAA1qU,CAAS,4CAKbA,OAAA0qU,EAAA,EAAA1qU,CAAS,gCAAkC2hB,EAAsB,oBAAsBrD,GACvFte,OAAA0qU,EAAA,EAAA1qU,CAAS,sCACTA,OAAA0qU,EAAA,EAAA1qU,CAAS,gFAIVoQ,UAAUm1B,GAEb,IAAIxwB,EAAO/E,KA4EXhQ,OAAAmrU,EAAA,EAAAnrU,CAAU+U,EAAKm1T,gBAzBf,SAA4BxmC,EAAaplR,EAAe8sT,IA5CxD,SAAoB1nC,EAAaplR,EAAeyoT,GAE5C/mU,OAAAsW,EAAA,EAAAtW,CAAO0jS,EAAaplR,kBAAoBA,GAExC,IAAI+sT,GAAU,EAEd,SAAAC,EAAyBC,GACrB,IAAIn8B,EAAU,IAAI7L,EAAA,GACdjlR,eAAgBolR,EAAaplR,eAC7BuD,yBAA0B6hR,EAAairB,mBAAmB,IAI1D+b,EAAA,GACA1qU,OAAA0qU,EAAA,EAAA1qU,CAAS,sCACLovS,EAAQ9wR,eAAiB,6BAA+B8wR,EAAQvtR,0BAGxE9M,EAAKk1T,SAASuB,UAAUp8B,EAAQ,SAASppQ,EAAIw/P,GACpCx/P,GAAQw/P,EAASnnR,eAAetF,gBAAkB0yT,EAAA,EAAYn5T,MAG1D0zB,IACDA,EAAM,IAAI78B,MAAMq8R,EAASnnR,eAAetF,cAAc3P,aAE1DpJ,OAAA0qU,EAAA,EAAA1qU,CAAS,8BAAgCgmC,EAAInxB,SAC7Cw2T,GAAU,GANV3nC,EAAasnC,sBAAsBxlC,EAAS7jR,qBAQhD4pT,EAAYvlS,KAIpBN,EAAa,WAET1lC,OAAAsW,EAAA,EAAAtW,CAAO,mBAAsB+mU,GAC7B/mU,OAAA0rU,EAAA,EAAA1rU,CAAO,WAAa,OAAQqrU,GAASC,EAAgB,SAAStlS,GAE1DhmC,OAAA0qU,EAAA,EAAA1qU,CAAS,6BAA+B+U,EAAKq1T,0BAC7CpqU,OAAA0qU,EAAA,EAAA1qU,CAAS,0BAA4BgmC,EAAMA,EAAInxB,QAAU,SACzDkyT,EAAY/gS,OAOpB2lS,CAAWjoC,EAAaplR,EAAe,SAAU0nB,GAG7C,GAAIA,GAAOA,EAAInxB,QAAQkW,MAAM,yBAYzB,OADA/qB,OAAA0qU,EAAA,EAAA1qU,CAAS,iFACF0jS,EAAakoC,qCAAqCR,GAE7DA,OAM0C7lS,IAtbpCykS,EAAAiB,8BAAyC,oICA3D,SAAAY,EAAA3pU,EAAAk5S,EAAA71Q,GACAA,EAAAvlC,OAAA8rU,EAAA,EAAA9rU,CAAAulC,GAAAwmS,EAAA,GACA,IAAArY,EAAA1zT,OAAAgsU,EAAA,EAAAhsU,CAAAo7S,GACA,IAAAl5S,IAAA,OAAAqjC,EAAA,MACA,IAAAwiQ,EAAA,SAAA/hQ,GACA,GAAAA,EAAA,OAAAT,EAAAS,GACA,GAAA9jC,IAAA,OAAAwxT,EAAA3rB,GACA,IAAA9wR,EAAAjX,OAAAisU,EAAA,EAAAjsU,CAAAyW,UAAA,GACA8uB,EAAA/uB,MAAA,YAAAwX,OAAA/W,KAEAy8S,EAAA3rB,sGCvCA,SAAAorB,EAAA3X,EAAAJ,EAAA71Q,GACAA,EAAAvlC,OAAAksU,EAAA,EAAAlsU,CAAAulC,GAAA4mS,EAAA,GACA,IAAA35B,EAAA,EACA4gB,EAAA,EACA9tT,EAAAk2S,EAAAl2S,OAKA,SAAA+tT,EAAArtR,EAAAzlC,GACAylC,EACAT,EAAAS,KACSotR,IAAA9tT,GAAA/E,IAAA6rU,EAAA,GACT7mS,EAAA,MAIA,IAZA,IAAAjgC,GACAigC,EAAA,MAWUitQ,EAAAltS,EAAgBktS,IAC1B4I,EAAAI,EAAAhJ,KAAAxyS,OAAAqsU,EAAA,EAAArsU,CAAAqzT,IAKA,IAAAC,EAAAtzT,OAAAssU,EAAA,EAAAtsU,CAAAusU,EAAA,EAAAhZ,KAyCAjgT,EAAA,WAAAkoS,EAAAJ,EAAA71Q,IACAvlC,OAAAwsU,EAAA,EAAAxsU,CAAAw7S,GAAA2X,EAAAG,GACA9X,EAAAx7S,OAAAysU,EAAA,EAAAzsU,CAAAo7S,GAAA71Q,mHCpCMmnS,UAAkCjpC,EAAA,aAKxCrzR,YAAaszR,EAAmC+rB,EAAiC9rB,EAA8CvkR,GAC3HvO,QACA7Q,OAAAgyT,EAAA,EAAAhyT,CAAOqF,MAAM8G,QAAQsjT,IAErBrwS,EAAqBA,GAAsB+wS,EAAA,EAAmB1gB,QAE9Dz/R,KAAKg0R,cAAgBN,EAErB1zR,KAAK28T,gBAAkBld,EAAehkR,IAAI,SAAU5sB,GAChD,OAAO,IAAIwxS,EAAA,EAAkB3sB,EAAc7kR,EAAe8kR,KAG9D3zR,KAAKsgT,oBAAsBlxS,EAC3BpP,KAAKi0R,gBAAkB2oC,EAAA,EAAoC1oC,UAG/DpjR,qBACI,OAAO9Q,KAAK28T,gBAGTv8T,WAGH,IAAIiH,EAAM,GAOV,OANAA,GAAO,0BAA4BrH,KAAK28T,gBAAgBlhS,IAAMvgB,GACjDA,EAAEte,OAAOxD,YACjBZ,KAAK,MAEV6O,GAAO,yBAA2BrH,KAAKsgT,oBAAoBlnT,WAAa,KACxEiO,GAAO,yBAA2BrH,KAAKi0R,gBAUpC7zR,UAAU80R,GAEbllS,OAAAgyT,EAAA,EAAAhyT,EAAQklS,GAAS,mBAAsBA,GAMvCl1R,KAAKqe,KAAK,cACVre,KAAKg0R,cAAc8rB,wBAAwB9/S,KAAK28T,gBAAiB,SAAU3mS,GACnEk/P,GACAA,EAAKl/P,KAYV51B,SAAS80R,GACZllS,OAAAgyT,EAAA,EAAAhyT,MAAgBiC,IAATijS,GAAuB,mBAAsBA,GAGpDl1R,KAAK28T,gBAAgBhmS,QAAQ,CAACi/P,EAAe4M,KACzC5M,EAAch3Q,GAAG,UAAam9Q,IAQ1B,IACI/7R,KAAKqe,KAAK,UAAWu3Q,EAAemG,EAAWyG,GAEnD,MAAOxsQ,GACHr3B,QAAQC,IAAIo3B,QAMxBqqR,EAAA,EAAkBG,iBAAiBxgT,KAAKg0R,cAAeh0R,KAAKsgT,oBAAqBtgT,KAAK28T,gBAAkB3mS,IAChGA,EACAh2B,KAAKqe,KAAK,cAEVre,KAAKqe,KAAK,eAIV62Q,GACAA,EAAKl/P,KAWV51B,OAAOs1R,EAAYtmR,EAAyCmmB,GAE/Dv1B,KAAKsgT,oBAAsBlxS,GAAsBpP,KAAKsgT,oBACtDD,EAAA,EAAkBI,gBAAgBzgT,KAAKg0R,cAAeh0R,KAAK28T,gBAAiBjnC,EAAY11R,KAAKsgT,oBAAqB/qR,GAG/Gn1B,kBAAkB2O,EAAiCwmB,GAEtD8qR,EAAA,EAAkBK,2BAA2B1gT,KAAKg0R,cAAeh0R,KAAK28T,gBAAiB5tT,EAAgBwmB,GAIpGn1B,UAAUm1B,GACbv1B,KAAK4e,GAAG,UAAU2W,GAGfn1B,aAAam1B,GAChBv1B,KAAK4e,GAAG,aAAa2W,GAGlBn1B,cAAcm1B,GACjBv1B,KAAK4e,GAAG,cAAc2W,6FC3JtBsnS,GAAoBC,SAAS,GAajC,IAAIC,EAAS,QAQPC,UAA2BxmS,EAAA,aAyBjCp2B,cACIS,QA0LMb,KAAAi9T,yBAA4B,SAASjnS,GAGvCh2B,KAAKk9T,oBAGTl9T,KAAKm9T,iBAAmB,KACxBn9T,KAAKo9T,kBAAoB,KAEzBptU,OAAA+pB,EAAA,EAAA/pB,CAAS,8BAAgC+U,KAAKlV,MAC9CG,OAAAkD,EAAA,EAAAlD,EAAQgQ,KAAKk9T,mBACblnS,EAAMA,GAAO,IAAI78B,MAAM,gDAEvB6G,KAAKq9T,gBAAgBrnS,GAErBh2B,KAAKk9T,mBAAoB,EAEzBltU,OAAA+pB,EAAA,EAAA/pB,CAAS,mBAAqBgQ,KAAK2nS,WACnC33S,OAAA+pB,EAAA,EAAA/pB,CAAS,mBAAqBgQ,KAAK4nS,cACnC5nS,KAAKs9T,0BAA0B,IAAInkU,MAAM,2CAA6C68B,EAAMA,EAAInxB,QAAU,QAvM1G7E,KAAKm8R,QAAU,IAEfn8R,KAAKu9T,QAAU,KAOfv9T,KAAK82B,WAAa,EAOlB92B,KAAKw9T,iBAAmB,EAExBx9T,KAAKk9T,mBAAoB,EAEzBl9T,KAAK4nS,aAAe,EACpB5nS,KAAK2nS,UAAY,EAEjB3nS,KAAKo7T,cAAgB,KAOrBp7T,KAAKy9T,kBAAmB,EAKxBz9T,KAAK09T,eAAgB,EA9CrB7E,oBACI,OAAO74T,KAAKk9T,kBA+Db98T,YAAYu9T,EAAUC,EAAoBtoU,GAE7CtF,OAAAkD,EAAA,EAAAlD,CAAoB,QAAb2tU,GACP3tU,OAAAkD,EAAA,EAAAlD,MAAgCiC,IAAzB+N,KAAK69T,gBAA+B,0DAE3C,IAAIrgS,EAAeloC,EAAS0K,KAAK82B,WAC7BxgB,EAAS,IAAI9a,YAAYgiC,GAK7B,OAJAxtC,OAAA8tU,EAAA,EAAA9tU,CAAsB,MAAO4tU,EAAYpgS,EAAclnB,GAEvDtW,KAAK69T,gBAAkBvnT,EAEhBA,EAMDlW,aAAaqqS,GAEfzqS,KAAKu9T,UACLv9T,KAAK4nS,cAAgB6C,EAAcn1S,OACnC0K,KAAKy9T,oBACLz9T,KAAKu9T,QAAQQ,KAAKtzB,IAcnBrqS,MAAMqqS,GAETz6S,OAAAkD,EAAA,EAAAlD,MAAiCiC,IAAzB+N,KAAK69T,iBAAkC79T,KAAK69T,kBAAoBpzB,EAAe,4DAEvF,IAAI0uB,EAASnpU,OAAAguU,EAAA,EAAAhuU,CAAqBy6S,GAClCz6S,OAAAkD,EAAA,EAAAlD,CAAOmpU,EAAO7jU,SAAWm1S,EAAc/iS,YACvC1X,OAAAkD,EAAA,EAAAlD,EAAkE,KAA1D,IAAK,IAAK,KAAKma,QAAQgvT,EAAOvf,cAAcxjR,UAEpDp2B,KAAKi+T,aAAaxzB,GAElBzqS,KAAK69T,qBAAkB5rU,EAIjBmO,0BAA0B41B,EAAK3oB,GAErCrN,KAAKk+T,kBAEL,IAAIC,EAAen+T,KAAKo7T,cAGxB,OAFAp7T,KAAKo7T,cAAgB,OAEjB+C,IACAA,EAAanoS,EAAK3oB,IACX,GAMLjN,qBAAqBqqS,GAC3B,IAAI2zB,EAAep+T,KAAKs9T,0BAA0B,KAAK7yB,GACvDzqS,KAAK09T,iBAEAU,GAMDp+T,KAAKqe,KAAK,UAAWosR,GAKnBrqS,kBAGFJ,KAAKq+T,WACLvnB,aAAa92S,KAAKq+T,UAClBr+T,KAAKq+T,SAAW,MAIdj+T,uBAGNpQ,OAAAkD,EAAA,EAAAlD,EAAQgQ,KAAKq+T,SAAU,yBACvBr+T,KAAKq+T,SAAWnvU,OAAO2nT,WAAY,KAC/B72S,KAAKq+T,SAAU,KACfr+T,KAAKs9T,0BAA0B,IAAInkU,MAAM,yDAA2D6G,KAAKm8R,QAAU,WACpHn8R,KAAKm8R,SAIL/7R,iBAAiB41B,GAEhBh2B,KAAKs+T,2BAGTtuU,OAAAkD,EAAA,EAAAlD,EAAQgQ,KAAKs+T,0BACbt+T,KAAKs+T,0BAA2B,EAMhCt+T,KAAKqe,KAAK,gBAAiB2X,GAAO,OAG/B51B,gBAAgB41B,GAEnBhmC,OAAAkD,EAAA,EAAAlD,EAAQgQ,KAAKu+T,yBACbv+T,KAAKu+T,yBAA0B,EAM/Bv+T,KAAKqe,KAAK,QAAS2X,GAAO,MA+BpB51B,gBAAgBo+T,GAEtBxuU,OAAAkD,EAAA,EAAAlD,CAAOwuU,GAGPx+T,KAAKnQ,KAAO,cAAgBktU,EAC5BA,GAAW,EAEX/8T,KAAKu9T,QAAUiB,EAGfx+T,KAAK+5S,gBAAkB,IAAI0kB,EAAA,GACvBxkB,gBAAiB+jB,EAAA,EACjBjc,mBAAoB/hT,KAAK82B,aAG7B92B,KAAK+5S,gBAAgBn7R,GAAG,UAAY6rR,IAChCzqS,KAAK0+T,qBAAsBj0B,KAG/BzqS,KAAKu9T,QAAQ7P,UAAY,CAACnwS,IACtBvd,KAAK2nS,WAAapqR,EAAIlQ,KAAK3F,WACvB6V,EAAIlQ,KAAK3F,WAAa,GACtB1H,KAAK+5S,gBAAgBoB,KAAK,IAAI1zS,SAAS8V,EAAIlQ,SAKnDrN,KAAKu9T,QAAQoB,QAAU,CAACphT,IAEhBxD,EAAA,GACA/pB,OAAA+pB,EAAA,EAAA/pB,CAAS,2BAA6ButB,EAAIwlS,OAAS,SAAWxlS,EAAItc,KAAQ,SAAWjB,KAAKnQ,MAE1FmQ,KAAKu9T,SACLvtU,OAAA+pB,EAAA,EAAA/pB,CAAS,sBAAwBgQ,KAAKu9T,QAAQqB,KAGlD,IAAI5oS,EAAM,KACM,KAAZzY,EAAItc,OAML+0B,EAAM,IAAI78B,MAAM,2BAA6BokB,EAAIwlS,OAAS,SAAWxlS,EAAItc,KAAQ,SAAWjB,KAAKnQ,OAGpGmQ,KAAK6+T,iBAAiB7oS,KAe1Bh2B,KAAKu9T,QAAQuB,QAAU,CAACvhT,IAEhBxD,EAAA,GACA/pB,OAAA+pB,EAAA,EAAA/pB,CAAS,mBAAqBgQ,KAAKnQ,QA4BrCuQ,mCAAmCm1B,GAGzCvlC,OAAAkD,EAAA,EAAAlD,EAAQgQ,KAAKo7T,cAAe,wBAC5BprU,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAC7Bv1B,KAAKo7T,cAAgB7lS,EACrBv1B,KAAK++T,uBAYF3+T,WAAWm1B,GAEdvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,EAAU,0CAA4CA,GAG/Ev1B,KAAKk9T,kBACL3nS,KAIJvlC,OAAAkD,EAAA,EAAAlD,EAAQgQ,KAAKk9T,kBAAmB,+CAChCl9T,KAAKk9T,mBAAoB,EAEzBltU,OAAAkD,EAAA,EAAAlD,EAAQgQ,KAAKo7T,cAAe,wFAC5Bp7T,KAAKk+T,kBAEDl+T,KAAKu9T,UACLv9T,KAAKu9T,QAAQoB,QAAU,MACnB3+T,KAAKq9T,gBAAgB,MACrB9nS,MAEJv1B,KAAKu9T,QAAQn0B,QACbppS,KAAKu9T,QAAU,OAKhBn9T,UACH,OAAOJ,KAAKu9T,SAAYv9T,KAAKu9T,QAAQyB,YAAch/T,KAAKu9T,QAAQ0B,OAAUj/T,KAAKk9T,4DChZ/EgC,GAFchxT,EAAA,EACAA,EAAA,EACEA,EAAA,IAChBixT,EAAgBjxT,EAAA,EAChBkxT,EAAkBlxT,EAAA,GAClBmxT,EAAkBnxT,EAAA,QAehBoxT,UAA4BhmT,EAAA,EAQlClZ,YAAYC,GAEVQ,QACER,EAAUA,MAOVL,KAAK6mS,gBAAkBxmS,EAAQwmS,gBAO/B7mS,KAAKu/T,kBAAoBl/T,EAAQk/T,kBAOjCv/T,KAAK04T,eAAiBr4T,EAAQq4T,eAO9B14T,KAAKw/T,eAAiBn/T,EAAQm/T,eAO9Bx/T,KAAKy/T,cAAgBp/T,EAAQo/T,cAO7Bz/T,KAAKg9B,YAAc38B,EAAQ28B,YAexB58B,OAAOzO,GACVutU,EAAcl/T,KAAK6mS,gBAAgBl1S,GACnCutU,EAAcl/T,KAAKu/T,kBAAkB5tU,GACrCutU,EAAcl/T,KAAK04T,eAAe/mU,GAClCutU,EAAcl/T,KAAKw/T,eAAe7tU,GAClCutU,EAAcl/T,KAAKy/T,cAAc9tU,GACjCytU,EAAgBp/T,KAAKg9B,YAAYrrC,GAS9ByO,OAAOzO,GAGVqO,KAAK6mS,gBAAkBs4B,EAAcxtU,GACrCqO,KAAKu/T,kBAAoBJ,EAAcxtU,GACvCqO,KAAK04T,eAAiByG,EAAcxtU,GACpCqO,KAAKw/T,eAAiBL,EAAcxtU,GACpCqO,KAAKy/T,cAAgBN,EAAcxtU,GACnCqO,KAAKg9B,YAAcqiS,EAAgB1tU,GAGhCyO,MAAMuI,GACX,MAAM,IAAIxP,MAAM,4BApCJmmU,EAAA18T,sBAAwB5S,OAAA8N,EAAA,EAAA9N,CAAmBA,OAAAnB,EAAA,gBAAAmB,IAwCzDA,OAAAme,EAAA,EAAAne,CAA0B,eAAesvU,EAAatvU,OAAA8N,EAAA,EAAA9N,CAAmBA,OAAAnB,EAAA,gBAAAmB,iBCrHrE0vU,EAAgBxxT,EAAA,GAChByxT,EAAgBzxT,EAAA,QAcd0xT,UAAkCtmT,EAAA,EAOxClZ,YAAYC,GAERQ,QACAR,EAAUA,MAQVL,KAAK6mS,gBAAkBxmS,EAAQwmS,gBAO/B7mS,KAAKu/T,kBAAoBl/T,EAAQk/T,kBAOjCv/T,KAAK04T,eAAiBr4T,EAAQq4T,eAO9B14T,KAAKw/T,eAAiBn/T,EAAQm/T,eAO9Bx/T,KAAKy/T,cAAgBp/T,EAAQo/T,cAa1Br/T,OAAOzO,GAGV+tU,EAAc1/T,KAAK6mS,gBAAgBl1S,GACnC+tU,EAAc1/T,KAAKu/T,kBAAkB5tU,GACrC+tU,EAAc1/T,KAAK04T,eAAe/mU,GAClC+tU,EAAc1/T,KAAKw/T,eAAe7tU,GAClC+tU,EAAc1/T,KAAKy/T,cAAc9tU,GAS9ByO,OAAOzO,GAGVqO,KAAK6mS,gBAAkB84B,EAAchuU,GACrCqO,KAAKu/T,kBAAoBI,EAAchuU,GACvCqO,KAAK04T,eAAiBiH,EAAchuU,GACpCqO,KAAKw/T,eAAiBG,EAAchuU,GACpCqO,KAAKy/T,cAAgBE,EAAchuU,GAGhCyO,MAAMuI,GACX,MAAM,IAAIxP,MAAM,4BAnCJymU,EAAAh9T,sBAAwB5S,OAAA8N,EAAA,EAAA9N,CAAmBA,OAAAnB,EAAA,gBAAAmB,IAyCzDA,OAAAme,EAAA,EAAAne,CAA0B,qBAAqB4vU,EAAmB5vU,OAAA8N,EAAA,EAAA9N,CAAmBA,OAAAnB,EAAA,gBAAAmB,GAAkB,gBC/FvG,SAAA6vU,EAA4B7iS,GAExB,IAAI8iS,EAAK9vU,OAAA8tU,EAAA,EAAA9tU,CAAiBgtC,GACf8iS,EAAG3iS,KACC2iS,EAAG5iS,SAClB,OAAQ4iS,EAAG7iS,UACP,IAAK,YACL,IAAK,UACL,IAAK,KAED,IAAI8iS,EAAY,IAAIC,UAAUhjS,GAQ/B,OAPC+iS,EAAUE,WAAc,cAOlBF,EAEV,IAAK,OACD,IAAIG,EH3BV,WACF,GAAIrD,EAAWC,QACX,MAAM,IAAI3jU,MAAM,4FAEpB,OAAO0jU,EGuBkBsD,GAKjB,OAJAnwU,OAAAkD,EAAA,EAAAlD,CAAuB,SAAhB8vU,EAAG7iS,SAAqB,mCAC/B45Q,WAAW,WACDqpB,EAAY7hT,KAAK,YACzB,GACgB6hT,EACtB,IAAK,OACL,IAAK,QAML,QACI,MAAM,IAAI/mU,MAAM,uDAAyD2mU,EAAG7iS,iDA4ClFmjS,UAAiCpD,EAQnCn2B,sBACI,OAAO7mS,KAAKw9T,iBAGhB32B,oBAAoB/wS,GAChBkK,KAAKw9T,iBAAmB1nU,EAG5BuqU,gBACI,OAAOrgU,KAAKsgU,WAGhB5qC,iBACI,OAAO11R,KAAKugU,YAGpBngU,cACIS,QAEAb,KAAKsgU,YAAa,EAGflgU,gBAAgB41B,GACfh2B,KAAKsgU,YACLz/T,MAAMw8T,gBAAgBrnS,GAWvB51B,QAAQ48B,EAAsBzH,EAAqBl1B,GAEtDrQ,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7Bl1B,EAAUA,MAEVL,KAAKw9T,sBAAgDvrU,IAA5BoO,EAAQwmS,gBAAiCxmS,EAAQwmS,gBAAkB7mS,KAAKw9T,iBACjGxtU,OAAAkD,EAAA,EAAAlD,CAAOwC,OAAOC,SAASuN,KAAKw9T,mBAE5B,IAAIsC,EAAK9vU,OAAA8tU,EAAA,EAAA9tU,CAAiBgtC,GAEtBE,EAAWhuC,OAAO2jT,SAAS31Q,SAC/Bl9B,KAAKg9B,YAAcA,EAEnBh9B,KAAKq4S,UAAY,OAASn7Q,EAAW,UAErCltC,OAAA+pB,EAAA,EAAA/pB,CAAS,gBAAiBgtC,EAAa,KAAM8iS,GAG7C,IACI9/T,KAAKu9T,QAAUsC,EAAmB7iS,GAEtC,MAAOhH,GACH,OAAOT,EAASS,GAGpBh2B,KAAKwgU,gBAAgBxgU,KAAKu9T,SAE1Bv9T,KAAKu9T,QAAQkD,OAAU,MAEnBzgU,KAAK0gU,6BAA8B1qS,IAC3BA,EAWAhmC,OAAA+pB,EAAA,EAAA/pB,CAAS,oDAAoDgmC,EAAInxB,UATjE7E,KAAKsgU,YAAa,EAOlBtgU,KAAKqe,KAAK,YAIdkX,EAASS,OAMX51B,qBAAqBqqS,EAAel1Q,GAE1C,IAUIorS,EAAenrC,EAVfmiC,EAAU,IAAI50T,EAAA,EAAW0nS,GACzBmP,EAAgB5pT,OAAA4wU,EAAA,EAAA5wU,CAAkB2nU,GAGtC,GAA8B,MAA1B/d,EAAcxjR,QAQlB,GAA8B,QAA1BwjR,EAAczjR,QAAmB,CACjCwqS,EAAgB9d,EAAA,EAChB8U,EAAQ5mC,SACRyE,EAAWxlS,OAAA8tU,EAAA,EAAA9tU,CAAc2nU,EAASgJ,GAElC,IAAI3qS,EAAK,IAAI78B,MAAM,qBAAuBq8R,EAASz0R,WAAW3H,WAAa,MAAQo8R,EAASutB,QACtF/sR,EAAKj1B,WAAcy0R,EAASz0R,WAClCw0B,EAASS,QAGT2qS,EAAgBf,EAChBjI,EAAQ5mC,SACRyE,EAAWxlS,OAAA8tU,EAAA,EAAA9tU,CAAc2nU,EAASgJ,GAClC3gU,KAAKugU,YAAc/qC,EACnBjgQ,EAAS,WApBTA,EADM,IAAIp8B,MAAM,yBA0BdiH,sBAGNpQ,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKu9T,SACZvtU,OAAAkD,EAAA,EAAAlD,CAAOwC,OAAOC,SAASuN,KAAKw9T,mBAC5BxtU,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKg9B,YAAY1nC,OAAS,EAAG,mCAIpC,IAAI8pS,EAAU,IAAIkgC,GACdz4B,gBAAiB7mS,KAAKw9T,iBACtB+B,kBAAsB,OACtB7G,eAAsB,OACtB8G,eAAsB,EACtBC,cAAsB,EACtBziS,YAAah9B,KAAKg9B,cAGlBH,EAAe7sC,OAAA8tU,EAAA,EAAA9tU,CAAe,MAAOovS,GACzCp/R,KAAKi+T,aAAaphS,GAKZz8B,6BAA6Bm1B,GAGnCvlC,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKu9T,SACZvtU,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7B,IAAIkuR,EAAU,EAEdzjT,KAAK6gU,mCAAmC,CAAC7qS,EAAK3oB,KAE1Crd,OAAAkD,EAAA,EAAAlD,CAAmB,IAAZyzT,GACPA,GAAW,EAEPztR,GACAT,EAASS,GACTh2B,KAAKu9T,QAAQn0B,MAAM,IAAK,+BAExBppS,KAAK8gU,qBAAqBzzT,EAAM,SAAU0zT,GACtCxrS,EAASwrS,OAIrB/gU,KAAKghU,8IC7QLC,EAAS,gLACb,SAAAC,EAAWnwU,EAAGowU,GACV,IAAI9vU,EAAIN,EAAEqI,WACV,OAAQ/H,EAAI,UAAUiP,OAAO,EAAG9O,KAAKa,IAAIhB,EAAEiE,OAAQ6rU,IAmBvD,SAAAC,EAAmBvnT,EAAOC,EAAKxD,GAC3B,IAAIvlB,EAAI+oB,EAAMD,EACVwnT,EAASrxU,OAAAqN,EAAA,EAAArN,CAAgBsmB,GAC7B,MAAO,KAAO4qT,EAAErnT,EAAO,GAAK,MAAQqnT,EAAEpnT,EAAK,GAAK,MAAQonT,EAAEnwU,EAAG,GAAK,IAAMswU,EAI5E,SAAAC,EAAqBhrT,EAAQqJ,EAASzlB,GAElCylB,EAAUA,GAAW,EACrBzlB,EAASA,GAAU,EAEnB,IAAIqnU,EAAM,WACN,MAAO,0DAA0DjhU,OAAO,EAAGqf,IAG/E,SAAA6hT,EAAiBplU,EAAcqlU,GAC3BA,EAAWA,GAAY,GAGvB,IAAIC,EAAoB,EACxB,IAAK,IAAIpyU,EAAE,EAAEA,EAAE8M,EAAI9G,OAAQhG,IACR,MAAX8M,EAAI9M,IAAkBoyU,IAE9B,IAAIC,EAA4B,EAApBD,EACZ/iU,QAAQC,KAAK2iU,IAAQnlU,EAAM6kU,GAAQ3gU,OAAO,EAAG,IAAMqhU,GAAS,IAAMF,GA6FtE,OA1EIG,QAEIC,KAAM,SAAU/R,EAAOv/T,GACnBixU,EAAQ1R,EAAQ,KAAOv/T,EAAM6I,aAGjCgF,cAAe,SAAU0jU,EAAeC,EAAWloT,EAAOC,GAEtD0nT,EAAQ,cAAeJ,EAAUvnT,EAAOC,EADhCxD,EAAO5Q,MAAMmU,EAAOC,KAnE5C,SAA+B6F,EAASmiT,EAAeE,GACnD,IAAIC,KACJ,IAAK,IAAIj+B,KAAQg+B,EACb,GAAIvvU,SAASD,OAAOwxS,IAAQ,CACxBrlS,QAAQC,IAAIolS,GACZ,IAAIzjS,EAAO/N,OAAOwxS,IAElBi+B,GAAQ,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,MADtCzwU,KAAKoN,IAAI2B,GAAQ/O,KAAKoN,IAAI,KAEtBkjU,EAAgBvhU,KAAUA,EAAQ,IAAM,IAEtD5B,QAAQC,IAAI+gB,EAAU,IAAKsiT,EAAKzpU,KAAK,IAAK,WAAaspU,EAAcvhU,KA2DjE2hU,CAAsBX,IAAOO,EAAeC,IAGhDrhC,MAAO,SAAUyhC,EAAWtyU,EAAMU,EAAOspB,EAAOC,EAAKsoT,GAEjD,IAAIzmU,EAAI2a,EAAO5Q,MAAMmU,EAAOC,GAG5B,OAAQqoT,GAEJ,IAAK,QACDxiT,GAAW,EACX6hT,EAAQ3xU,EAAKuJ,YACb,MAEJ,IAAK,MACDumB,GAAW,EACX,MAEJ,IAAK,cACD6hT,EAAQ,IAAM3xU,EAAO,cAAgBU,EAAQ,MAAY6wU,EAAUvnT,EAAOC,EAAKne,IAC/EgkB,GAAW,EACX,MAEJ,IAAK,YACDA,GAAW,EACX6hT,EAAQ,QAAU3xU,GAClB,MAEJ,IAAK,gBACD2xU,EAAQ,KAAOjxU,EAAQ,MACvBovB,GAAW,EACX,MAEJ,IAAK,cACDA,GAAW,EACX6hT,EAAQ,WAAajxU,GACrB,MAGJ,IAAK,SACDixU,EAAQ,IAAM3xU,EAAO,MAAQuyU,GAE7B,IAAIC,EAAW,GACX9xU,aAAiBiL,cACjB6mU,EAAWryU,OAAA+pB,EAAA,EAAA/pB,CAAQO,GACnBoO,QAAQC,IAAIyjU,GACZ9xU,EAAQ,YAEZixU,EAAS,IAAMjxU,EAAQ6wU,EAAUvnT,EAAOC,EAAKne,IAEzCpL,GAASA,EAAM0S,SACG,oBAAdm/T,EA7E5B,SAA4B7xU,EAAO+lB,EAAqBuD,EAAgBC,GACpE,IAAIwoT,EAAUhsT,EAAOA,OAAO5Q,MAAMmU,EAAMC,GACpCnoB,EAAS,IAAIoR,EAAA,EAAWu/T,GACxB1lU,EAASsR,EAAA,EAAgBvc,GACzB4wU,EAAer0T,EAAA,EAAcvc,GAC7B2D,EAAS4Y,EAAA,EAAgBvc,GAE7B6vU,EAAQ,wBAA0B5kU,GAClC4kU,EAAQ,wBAA0Be,GAClCf,EAAQ,wBAA0BlsU,GAClCktU,EAAgBF,EAAQ58T,MAAM/T,EAAO2D,QAAS/E,EAAMqS,sBAAuB+c,EAAU,EAAG9F,EAAQloB,EAAO2D,QAoE/EmtU,CAAmBlyU,EAAO+lB,EAAQuD,EAAOC,GAGzC0nT,EADMjxU,EAAM6I,YAAc,gBAwBpD,SAAAopU,EAA0BlsT,EAAsBmgS,EAAK92R,EAAmBzlB,EAAkBwoU,GAI5F,IAEIC,EAFAhxU,EAAS,IAAIoR,EAAA,EAAWuT,GAGvBmgS,EAIoB,iBAAPA,GAAmBA,EAAGqc,UACpC6P,EAAalsB,GAHbA,EAAKvoS,EAAA,EAAwBvc,GAMjC,IACIgxU,EAAaA,GAAcx0T,EAAA,EAA0BsoS,GAEzD,MAAOzgR,GACHr3B,QAAQC,IAAI63S,GACZ93S,QAAQC,IAAIo3B,GACZr3B,QAAQC,IAAI,+CAAiD5O,OAAA+pB,EAAA,EAAA/pB,CAAQ2B,EAAO2kB,SAGhF,IAAIjW,EAAUihU,EAAYhrT,EAAQqJ,EAASzlB,GAC3CmG,EAAQxQ,KAAO,UAEf,IAAK,IAAI+yU,KAAYF,EAAkBriU,EAAQuiU,GAAYF,EAAeE,GAE1E,IACID,EAAWE,aAAalxU,EAAQ0O,GAEpC,MAAO21B,GACHr3B,QAAQC,IAAI,aAAco3B,GAC1Br3B,QAAQC,IAAI,aAAco3B,EAAIxwB,OAC9B7G,QAAQC,IAAI,eAAgB+jU,gDC1LpC,IAAIlqU,EAAeyV,EAAA,EAWflN,EAAmBkN,EAAA,QAGjB40T,UAA8B9E,EAAA,EAkBhC59T,YAAYC,GAERQ,MADAR,EAAUA,OAGVL,KAAK+iU,gBAAkBC,EAAA,EAAe5iT,QACtCpgB,KAAKmY,aAAe9X,EAAQ8X,cAAgBG,EAAA,EAAoB8H,QAEhEpgB,KAAKijU,eAAiB5iU,EAAQ6iU,eAAiBr0U,EAE/CmB,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBgQ,KAAKijU,eAAe18T,gBAAiB,4DAElEvG,KAAKmjU,0BAA4B,EACjCnzU,OAAAkD,EAAA,EAAAlD,CAAOwC,OAAOC,SAASuN,KAAKmjU,2BAGhC3iT,eAAe3vB,GACXmP,KAAKojU,YAAcvyU,EAGvB4kU,oBACI,OAAOz1T,KAAKqjU,eAIbjjU,YAAY+X,EAAoCmI,GACnDtwB,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKmY,eAAiBG,EAAA,EAAoB8H,QAAS,wBAC1DpgB,KAAK+iU,gBAAkBziT,EACvBtgB,KAAKmY,aAAeA,EACpBnoB,OAAAkD,EAAA,EAAAlD,MAAgCiC,IAAzB+N,KAAK+iU,gBAA+B,2BAA6BziT,GACxEtwB,OAAAkD,EAAA,EAAAlD,MAA6BiC,IAAtB+N,KAAKmY,aAA4B,yBAA2BA,GACnEnoB,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAK+iU,kBAAoBC,EAAA,EAAe5iT,SAC/CpwB,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKmY,eAAiBG,EAAA,EAAoB8H,SAI3ChgB,wBAAwB6P,GAM9B,IAAIqzT,EACJ,GAJAtzU,OAAAkD,EAAA,EAAAlD,CAAOwC,OAAOC,SAASuN,KAAKmjU,2BAC5BnzU,OAAAkD,EAAA,EAAAlD,CAAOwC,OAAOC,SAASwd,IAAmBA,GAAkB,IAGrB,IAAnCjQ,KAAKmjU,2BAELG,EAAyBtjU,KAAKmjU,yBAA2B,KAE1BlzT,EAAgB,CAC3C,IAAIszT,EAAa,4CAA8CD,EAAyB,SAAWrzT,EAAiB,IACpHjgB,OAAA+pB,EAAA,EAAA/pB,CAASuzU,GAOTvjU,KAAKqe,KAAK,0BAA2BilT,EAAwBrzT,GAKjE8J,EAAA,GACA/pB,OAAA+pB,EAAA,EAAA/pB,CAAS,sBAAwBigB,GAErCjQ,KAAKmjU,yBAA2BlzT,EA0F7B7P,aAAaqY,EAAe6I,GAE/BtxB,OAAAkD,EAAA,EAAAlD,CAAOyoB,EAActnB,eAAe,YAGpC6O,KAAKwjU,YAAcxjU,KAAKwjU,gBACxBxzU,OAAAkD,EAAA,EAAAlD,CAAmC,IAA5BgQ,KAAKwjU,YAAYluU,QAAgB0K,KAAKwjU,YAAY,GAAGpqT,UAAYX,EAAcW,SACtFpZ,KAAKwjU,YAAYnrU,MAAMogB,cAAeA,EAAe6I,YAAaA,IAI5DlhB,uBAAuBgZ,GAE7B,IAAIqqT,GAAgB,EAEpB,IADAzjU,KAAKwjU,YAAcxjU,KAAKwjU,gBACjBxjU,KAAKwjU,YAAYluU,QAAQ,CAC5B,GAAgC,IAA5B0K,KAAKwjU,YAAYluU,OACjB,OAAO,KAEX,GAAI0K,KAAKwjU,YAAY,GAAG/qT,cAAcW,UAAYA,EAI9C,OAHIqqT,GACAzjU,KAAKqe,KAAK,YAAajF,GAEpBpZ,KAAKwjU,YAAY,GAG5BxjU,KAAKwjU,YAAcxjU,KAAKwjU,YAAY99T,MAAM,GAC1C+9T,GAAgB,GA8GdrjU,cAAcw6S,GAEpB/5S,MAAMk6S,cAAcH,GACpB5qT,OAAAkD,EAAA,EAAAlD,CAA+B,KAAxB4qT,EAAatlT,QAEpB,IAAI6gC,EAAUn2B,KAAK45S,cAAczjR,QAEjC,GAAgB,QAAZA,GAAiC,QAAZA,EAErBn2B,KAAK+iU,gBAAkBC,EAAA,EAAeltT,SACnC,IAAgB,QAAZqgB,EAAmB,CAI1B,IAAIutS,EAAY1iU,EAAiB45S,GAC7B/1S,EAAUpM,EAAamiT,GAI3B,OAFAj8S,QAAQC,IAAI,8BAA+B8kU,EAAUtqU,WAAWuqU,KAAM9+T,GACtElG,QAAQC,IAAI5O,OAAA+pB,EAAA,EAAA/pB,CAAQ4qT,EAAatkS,UAC1B,EAIPtW,KAAKg3R,gBAAkBhnS,OAAA4zU,EAAA,EAAA5zU,CAAqBmmC,GAC5Cn2B,KAAKg3R,gBAAgB5zR,OAAOw3S,GAEZ,QAAZzkR,IACAn2B,KAAK+iU,gBAAkBC,EAAA,EAAyBhjU,KAAKg3R,gBAAgBh+Q,mBACrEhZ,KAAKqjU,eAAiBL,EAAA,EAAkChjU,KAAK+iU,kBASjE/iU,KAAK07S,eAAiB,IAAImoB,EAAA,EAC1B7jU,KAAK07S,eAAet4S,OAAOw3S,GAGvB7gS,EAAA,GACA/pB,OAAA+pB,EAAA,EAAA/pB,CAAS,mBAAoBgQ,KAAK07S,gBAGtC17S,KAAK8jU,wBAAwB9jU,KAAK07S,eAAezrS,gBAErD,OAAO,EAID7P,0BAA0Bi7S,EAAmBsnB,EAAiC/nB,GACpF,IAEI,IAAIv6S,EAAUL,KAAKijU,eACnBN,EAAWv/T,OAAOw3S,EAAav6S,GAEnC,MAAO21B,GAUH,OATAr3B,QAAQC,IAAIo3B,GACZr3B,QAAQC,IAAIo3B,EAAIxwB,OAChB7G,QAAQC,IAAI5O,OAAA+pB,EAAA,EAAA/pB,CAAQqrT,IACpBmnB,EAAgBnnB,GAEhB18S,QAAQC,IAAI,2BACZoB,KAAK26S,eAAehkR,QAAQ,SAAUkG,GAClCl+B,QAAQC,IAAI5O,OAAA+pB,EAAA,EAAA/pB,CAAQ6sC,OAEjB,EAEX,OAAO,EAGDz8B,qBAAqBi7S,GAE3B,IAAIT,EAAe,IAAI73S,EAAA,EAAWs4S,GAC9BllR,EAAUn2B,KAAK45S,cAAczjR,QAEjC,GAAgB,QAAZA,EAGA,OADAn2B,KAAK86S,cAAc,mBACZ,EAEX,GAAgB,QAAZ3kR,GAAiC,QAAZA,EAGrB,OADAn2B,KAAK86S,cAAc,qCACZ,EAIX,IAAIrE,EAAKvoS,EAAA,EAAwB0sS,GAG7B+nB,EAAa3iU,KAAKijU,eAAe18T,gBAAgBkwS,GAErD,IAAKksB,EAED,OADA3iU,KAAK86S,cAAc,uCAAyCrE,IACrD,EAMP,GAFAzmT,OAAA+pB,EAAA,EAAA/pB,CAAS,iBAAiBgQ,KAAKu6S,mBAAmB,eAAev6S,KAAKs6S,kBAElEt6S,KAAK+jU,0BAA0B1oB,EAAmBsnB,EAAY/nB,GAmB3D,CACH,IAAI/1S,EAAU,mDAAqD4xS,EAAGr9S,WAAa,IAAMupU,EAAW7/T,YAAYjT,KAGhH,OAFA8O,QAAQC,IAAIiG,GACZ7E,KAAK86S,cAAcj2S,IACZ,EAtBP,IAQI7E,KAAKqe,KAAK,UAAWskT,EAAYxsS,EAASn2B,KAAK07S,eAAeniS,UAAWvZ,KAAK62R,iBAElF,MAAO7gQ,GAIHr3B,QAAQC,IAAI,oDACZD,QAAQC,IAAIo3B,GACZr3B,QAAQC,IAAIo3B,EAAIxwB,OAS5B,OAAO,mCChdX,SAAA8wS;;;;;;;AAUA,IAAA0tB,EAAA50U,EAAA,KACA60U,EAAA70U,EAAA,KACA+M,EAAA/M,EAAA,KAmDA,SAAA80U,IACA,OAAA5X,EAAA6X,oBACA,WACA,WAGA,SAAAC,EAAAC,EAAA/uU,GACA,GAAA4uU,IAAA5uU,EACA,UAAAgvU,WAAA,8BAcA,OAZAhY,EAAA6X,qBAEAE,EAAA,IAAAzoU,WAAAtG,IACAsoB,UAAA0uS,EAAAp7T,WAGA,OAAAmzU,IACAA,EAAA,IAAA/X,EAAAh3T,IAEA+uU,EAAA/uU,UAGA+uU,EAaA,SAAA/X,EAAA5oT,EAAA6gU,EAAAjvU,GACA,KAAAg3T,EAAA6X,qBAAAnkU,gBAAAssT,GACA,WAAAA,EAAA5oT,EAAA6gU,EAAAjvU,GAIA,oBAAAoO,EAAA,CACA,oBAAA6gU,EACA,UAAAprU,MACA,qEAGA,OAAAqrU,EAAAxkU,KAAA0D,GAEA,OAAAipT,EAAA3sT,KAAA0D,EAAA6gU,EAAAjvU,GAWA,SAAAq3T,EAAA0X,EAAA9zU,EAAAg0U,EAAAjvU,GACA,oBAAA/E,EACA,UAAA8sB,UAAA,yCAGA,0BAAA7hB,aAAAjL,aAAAiL,YA6HA,SAAA6oU,EAAAxuB,EAAAV,EAAA7/S,GAGA,GAFAugT,EAAAnuS,WAEAytS,EAAA,GAAAU,EAAAnuS,WAAAytS,EACA,UAAAmvB,WAAA,6BAGA,GAAAzuB,EAAAnuS,WAAAytS,GAAA7/S,GAAA,GACA,UAAAgvU,WAAA,6BAIAzuB,OADA5jT,IAAAkjT,QAAAljT,IAAAqD,EACA,IAAAsG,WAAAi6S,QACG5jT,IAAAqD,EACH,IAAAsG,WAAAi6S,EAAAV,GAEA,IAAAv5S,WAAAi6S,EAAAV,EAAA7/S,GAGAg3T,EAAA6X,qBAEAE,EAAAxuB,GACAj4R,UAAA0uS,EAAAp7T,UAGAmzU,EAAAI,EAAAJ,EAAAxuB,GAEA,OAAAwuB,EAvJAK,CAAAL,EAAA9zU,EAAAg0U,EAAAjvU,GAGA,iBAAA/E,EAwFA,SAAA8zU,EAAAv8T,EAAA68T,GACA,iBAAAA,GAAA,KAAAA,IACAA,EAAA,QAGA,IAAArY,EAAAsY,WAAAD,GACA,UAAAtnT,UAAA,8CAGA,IAAA/nB,EAAA,EAAAoS,EAAAI,EAAA68T,GAGAjgU,GAFA2/T,EAAAD,EAAAC,EAAA/uU,IAEA0iS,MAAAlwR,EAAA68T,GAEAjgU,IAAApP,IAIA+uU,IAAA3+T,MAAA,EAAAhB,IAGA,OAAA2/T,EA5GAQ,CAAAR,EAAA9zU,EAAAg0U,GAsJA,SAAAF,EAAAr3T,GACA,GAAAs/S,EAAApf,SAAAlgS,GAAA,CACA,IAAAtR,EAAA,EAAAopU,EAAA93T,EAAA1X,QAGA,YAFA+uU,EAAAD,EAAAC,EAAA3oU,IAEApG,OACA+uU,GAGAr3T,EAAA+qB,KAAAssS,EAAA,IAAA3oU,GACA2oU,GAGA,GAAAr3T,EAAA,CACA,uBAAAxR,aACAwR,EAAAsJ,kBAAA9a,aAAA,WAAAwR,EACA,uBAAAA,EAAA1X,QA+8CA,SAAAohB,GACA,OAAAA,KAh9CAquT,CAAA/3T,EAAA1X,QACA8uU,EAAAC,EAAA,GAEAI,EAAAJ,EAAAr3T,GAGA,cAAAA,EAAAqO,MAAAlf,EAAA6Q,EAAAK,MACA,OAAAo3T,EAAAJ,EAAAr3T,EAAAK,MAIA,UAAAgQ,UAAA,sFA9KA2nT,CAAAX,EAAA9zU,GA4BA,SAAA00U,EAAA75T,GACA,oBAAAA,EACA,UAAAiS,UAAA,oCACG,GAAAjS,EAAA,EACH,UAAAk5T,WAAA,wCA4BA,SAAAE,EAAAH,EAAAj5T,GAGA,GAFA65T,EAAA75T,GACAi5T,EAAAD,EAAAC,EAAAj5T,EAAA,MAAA05T,EAAA15T,KACAkhT,EAAA6X,oBACA,QAAA70U,EAAA,EAAmBA,EAAA8b,IAAU9b,EAC7B+0U,EAAA/0U,GAAA,EAGA,OAAA+0U,EAwCA,SAAAI,EAAAJ,EAAAxuB,GACA,IAAAvgT,EAAAugT,EAAAvgT,OAAA,MAAAwvU,EAAAjvB,EAAAvgT,QACA+uU,EAAAD,EAAAC,EAAA/uU,GACA,QAAAhG,EAAA,EAAiBA,EAAAgG,EAAYhG,GAAA,EAC7B+0U,EAAA/0U,GAAA,IAAAumT,EAAAvmT,GAEA,OAAA+0U,EA+DA,SAAAS,EAAAxvU,GAGA,GAAAA,GAAA4uU,IACA,UAAAI,WAAA,0DACAJ,IAAA9qU,SAAA,cAEA,SAAA9D,EAsFA,SAAAoS,EAAAI,EAAA68T,GACA,GAAArY,EAAApf,SAAAplS,GACA,OAAAA,EAAAxS,OAEA,uBAAAkG,aAAA,mBAAAA,YAAA0pU,SACA1pU,YAAA0pU,OAAAp9T,iBAAAtM,aACA,OAAAsM,EAAAJ,WAEA,iBAAAI,IACAA,EAAA,GAAAA,GAGA,IAAApM,EAAAoM,EAAAxS,OACA,OAAAoG,EAAA,SAIA,IADA,IAAAypU,GAAA,IAEA,OAAAR,GACA,YACA,aACA,aACA,OAAAjpU,EACA,WACA,YACA,UAAAzJ,EACA,OAAAmzU,EAAAt9T,GAAAxS,OACA,WACA,YACA,cACA,eACA,SAAAoG,EACA,UACA,OAAAA,IAAA,EACA,aACA,OAAA2pU,EAAAv9T,GAAAxS,OACA,QACA,GAAA6vU,EAAA,OAAAC,EAAAt9T,GAAAxS,OACAqvU,GAAA,GAAAA,GAAArqT,cACA6qT,GAAA,GAgFA,SAAAG,EAAA3pU,EAAA5K,EAAArB,GACA,IAAAJ,EAAAqM,EAAA5K,GACA4K,EAAA5K,GAAA4K,EAAAjM,GACAiM,EAAAjM,GAAAJ,EAmIA,SAAAi2U,EAAAjvT,EAAAI,EAAAy+R,EAAAwvB,EAAAnU,GAEA,OAAAl6S,EAAAhhB,OAAA,SAmBA,GAhBA,iBAAA6/S,GACAwvB,EAAAxvB,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAEAA,KACA1vS,MAAA0vS,KAEAA,EAAAqb,EAAA,EAAAl6S,EAAAhhB,OAAA,GAIA6/S,EAAA,IAAAA,EAAA7+R,EAAAhhB,OAAA6/S,GACAA,GAAA7+R,EAAAhhB,OAAA,CACA,GAAAk7T,EAAA,SACArb,EAAA7+R,EAAAhhB,OAAA,OACG,GAAA6/S,EAAA,GACH,IAAAqb,EACA,SADArb,EAAA,EAUA,GALA,iBAAAz+R,IACAA,EAAA41S,EAAAK,KAAAj2S,EAAAiuT,IAIArY,EAAApf,SAAAx2R,GAEA,WAAAA,EAAAphB,QACA,EAEAkwU,EAAAlvT,EAAAI,EAAAy+R,EAAAwvB,EAAAnU,GACG,oBAAA95S,EAEH,OADAA,GAAA,IACA41S,EAAA6X,qBACA,mBAAAvoU,WAAA1K,UAAAiZ,QACAqmT,EACA50T,WAAA1K,UAAAiZ,QAAA1a,KAAA6mB,EAAAI,EAAAy+R,GAEAv5S,WAAA1K,UAAAu0U,YAAAh2U,KAAA6mB,EAAAI,EAAAy+R,GAGAqwB,EAAAlvT,GAAAI,GAAAy+R,EAAAwvB,EAAAnU,GAGA,UAAAnzS,UAAA,wCAGA,SAAAmoT,EAAAvuT,EAAAP,EAAAy+R,EAAAwvB,EAAAnU,GACA,IA0BAlhU,EA1BAo2U,EAAA,EACAC,EAAA1uT,EAAA3hB,OACAswU,EAAAlvT,EAAAphB,OAEA,QAAArD,IAAA0yU,IAEA,UADAA,EAAArsU,OAAAqsU,GAAArqT,gBACA,UAAAqqT,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAA1tT,EAAA3hB,OAAA,GAAAohB,EAAAphB,OAAA,EACA,SAEAowU,EAAA,EACAC,GAAA,EACAC,GAAA,EACAzwB,GAAA,EAIA,SAAA5U,EAAAjkS,EAAAhN,GACA,WAAAo2U,EACAppU,EAAAhN,GAEAgN,EAAAupU,aAAAv2U,EAAAo2U,GAKA,GAAAlV,EAAA,CACA,IAAAsV,GAAA,EACA,IAAAx2U,EAAA6lT,EAAwB7lT,EAAAq2U,EAAer2U,IACvC,GAAAixS,EAAAtpR,EAAA3nB,KAAAixS,EAAA7pR,GAAA,IAAAovT,EAAA,EAAAx2U,EAAAw2U,IAEA,IADA,IAAAA,MAAAx2U,GACAA,EAAAw2U,EAAA,IAAAF,EAAA,OAAAE,EAAAJ,OAEA,IAAAI,IAAAx2U,KAAAw2U,GACAA,GAAA,OAKA,IADA3wB,EAAAywB,EAAAD,IAAAxwB,EAAAwwB,EAAAC,GACAt2U,EAAA6lT,EAAwB7lT,GAAA,EAAQA,IAAA,CAEhC,IADA,IAAAy2U,GAAA,EACAxpU,EAAA,EAAqBA,EAAAqpU,EAAerpU,IACpC,GAAAgkS,EAAAtpR,EAAA3nB,EAAAiN,KAAAgkS,EAAA7pR,EAAAna,GAAA,CACAwpU,GAAA,EACA,MAGA,GAAAA,EAAA,OAAAz2U,EAIA,SAeA,SAAA02U,EAAA1pU,EAAAwL,EAAA5N,EAAA5E,GACA4E,EAAA1H,OAAA0H,IAAA,EACA,IAAA+rU,EAAA3pU,EAAAhH,OAAA4E,EACA5E,GAGAA,EAAA9C,OAAA8C,IACA2wU,IACA3wU,EAAA2wU,GAJA3wU,EAAA2wU,EASA,IAAAC,EAAAp+T,EAAAxS,OACA,GAAA4wU,EAAA,eAAA7oT,UAAA,sBAEA/nB,EAAA4wU,EAAA,IACA5wU,EAAA4wU,EAAA,GAEA,QAAA52U,EAAA,EAAiBA,EAAAgG,IAAYhG,EAAA,CAC7B,IAAA62U,EAAAnwU,SAAA8R,EAAAxH,OAAA,EAAAhR,EAAA,OACA,GAAAmW,MAAA0gU,GAAA,OAAA72U,EACAgN,EAAApC,EAAA5K,GAAA62U,EAEA,OAAA72U,EAGA,SAAA82U,EAAA9pU,EAAAwL,EAAA5N,EAAA5E,GACA,OAAA+wU,EAAAjB,EAAAt9T,EAAAxL,EAAAhH,OAAA4E,GAAAoC,EAAApC,EAAA5E,GAGA,SAAAgxU,EAAAhqU,EAAAwL,EAAA5N,EAAA5E,GACA,OAAA+wU,EAq6BA,SAAAjqU,GAEA,IADA,IAAAmqU,KACAj3U,EAAA,EAAiBA,EAAA8M,EAAA9G,SAAgBhG,EAEjCi3U,EAAAluU,KAAA,IAAA+D,EAAAI,WAAAlN,IAEA,OAAAi3U,EA36BAC,CAAA1+T,GAAAxL,EAAApC,EAAA5E,GAGA,SAAAmxU,EAAAnqU,EAAAwL,EAAA5N,EAAA5E,GACA,OAAAgxU,EAAAhqU,EAAAwL,EAAA5N,EAAA5E,GAGA,SAAAoxU,EAAApqU,EAAAwL,EAAA5N,EAAA5E,GACA,OAAA+wU,EAAAhB,EAAAv9T,GAAAxL,EAAApC,EAAA5E,GAGA,SAAAqxU,EAAArqU,EAAAwL,EAAA5N,EAAA5E,GACA,OAAA+wU,EAk6BA,SAAAjqU,EAAAwqU,GAGA,IAFA,IAAAj3U,EAAA4J,EAAAC,EACA+sU,KACAj3U,EAAA,EAAiBA,EAAA8M,EAAA9G,WACjBsxU,GAAA,QADiCt3U,EAGjCK,EAAAyM,EAAAI,WAAAlN,GACAiK,EAAA5J,GAAA,EACA6J,EAAA7J,EAAA,IACA42U,EAAAluU,KAAAmB,GACA+sU,EAAAluU,KAAAkB,GAGA,OAAAgtU,EA/6BAM,CAAA/+T,EAAAxL,EAAAhH,OAAA4E,GAAAoC,EAAApC,EAAA5E,GAkFA,SAAAwxU,EAAAxqU,EAAAud,EAAAC,GACA,WAAAD,GAAAC,IAAAxd,EAAAhH,OACA0uU,EAAA+C,cAAAzqU,GAEA0nU,EAAA+C,cAAAzqU,EAAAoJ,MAAAmU,EAAAC,IAIA,SAAAktT,EAAA1qU,EAAAud,EAAAC,GACAA,EAAAtoB,KAAAY,IAAAkK,EAAAhH,OAAAwkB,GAIA,IAHA,IAAAm8Q,KAEA3mS,EAAAuqB,EACAvqB,EAAAwqB,GAAA,CACA,IAQAmtT,EAAAC,EAAAC,EAAAC,EARAC,EAAA/qU,EAAAhN,GACAg4U,EAAA,KACAC,EAAAF,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,EAEA,GAAA/3U,EAAAi4U,GAAAztT,EAGA,OAAAytT,GACA,OACAF,EAAA,MACAC,EAAAD,GAEA,MACA,OAEA,WADAJ,EAAA3qU,EAAAhN,EAAA,OAEA83U,GAAA,GAAAC,IAAA,KAAAJ,GACA,MACAK,EAAAF,GAGA,MACA,OACAH,EAAA3qU,EAAAhN,EAAA,GACA43U,EAAA5qU,EAAAhN,EAAA,GACA,UAAA23U,IAAA,UAAAC,KACAE,GAAA,GAAAC,IAAA,OAAAJ,IAAA,KAAAC,GACA,OAAAE,EAAA,OAAAA,EAAA,SACAE,EAAAF,GAGA,MACA,OACAH,EAAA3qU,EAAAhN,EAAA,GACA43U,EAAA5qU,EAAAhN,EAAA,GACA63U,EAAA7qU,EAAAhN,EAAA,GACA,UAAA23U,IAAA,UAAAC,IAAA,UAAAC,KACAC,GAAA,GAAAC,IAAA,OAAAJ,IAAA,OAAAC,IAAA,KAAAC,GACA,OAAAC,EAAA,UACAE,EAAAF,GAMA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACKD,EAAA,QAELA,GAAA,MACArxC,EAAA59R,KAAAivU,IAAA,eACAA,EAAA,WAAAA,GAGArxC,EAAA59R,KAAAivU,GACAh4U,GAAAi4U,EAGA,OAQA,SAAAC,GACA,IAAA9rU,EAAA8rU,EAAAlyU,OACA,GAAAoG,GAAA+rU,EACA,OAAAnvU,OAAAC,aAAAiO,MAAAlO,OAAAkvU,GAIA,IAAAvxC,EAAA,GACA3mS,EAAA,EACA,KAAAA,EAAAoM,GACAu6R,GAAA39R,OAAAC,aAAAiO,MACAlO,OACAkvU,EAAA9hU,MAAApW,KAAAm4U,IAGA,OAAAxxC,EAvBAyxC,CAAAzxC,GA98BAnnS,EAAAw9T,SACAx9T,EAAA64U,WAoTA,SAAAryU,IACAA,OACAA,EAAA,GAEA,OAAAg3T,EAAAsb,OAAAtyU,IAvTAxG,EAAA+4U,kBAAA,GA0BAvb,EAAA6X,yBAAAlyU,IAAAqkT,EAAA6tB,oBACA7tB,EAAA6tB,oBAQA,WACA,IACA,IAAAltT,EAAA,IAAArb,WAAA,GAEA,OADAqb,EAAA2G,WAAqBA,UAAAhiB,WAAA1K,UAAA42U,IAAA,WAAmD,YACxE,KAAA7wT,EAAA6wT,OACA,mBAAA7wT,EAAAw1S,UACA,IAAAx1S,EAAAw1S,SAAA,KAAA/kT,WACG,MAAA3I,GACH,UAfAgpU,GAKAj5U,EAAAo1U,eAkEA5X,EAAA0b,SAAA,KAGA1b,EAAA2b,SAAA,SAAAhxT,GAEA,OADAA,EAAA2G,UAAA0uS,EAAAp7T,UACA+lB,GA2BAq1S,EAAAK,KAAA,SAAAp8T,EAAAg0U,EAAAjvU,GACA,OAAAq3T,EAAA,KAAAp8T,EAAAg0U,EAAAjvU,IAGAg3T,EAAA6X,sBACA7X,EAAAp7T,UAAA0sB,UAAAhiB,WAAA1K,UACAo7T,EAAA1uS,UAAAhiB,WACA,oBAAAvL,eAAA63U,SACA5b,EAAAj8T,OAAA63U,WAAA5b,GAEAt8T,OAAAC,eAAAq8T,EAAAj8T,OAAA63U,SACA33U,MAAA,KACA43U,cAAA,KAiCA7b,EAAAsb,MAAA,SAAAx8T,EAAAg9T,EAAAzD,GACA,OArBA,SAAAN,EAAAj5T,EAAAg9T,EAAAzD,GAEA,OADAM,EAAA75T,GACAA,GAAA,EACAg5T,EAAAC,EAAAj5T,QAEAnZ,IAAAm2U,EAIA,iBAAAzD,EACAP,EAAAC,EAAAj5T,GAAAg9T,OAAAzD,GACAP,EAAAC,EAAAj5T,GAAAg9T,QAEAhE,EAAAC,EAAAj5T,GAQAw8T,CAAA,KAAAx8T,EAAAg9T,EAAAzD,IAiBArY,EAAAkY,YAAA,SAAAp5T,GACA,OAAAo5T,EAAA,KAAAp5T,IAKAkhT,EAAA+b,gBAAA,SAAAj9T,GACA,OAAAo5T,EAAA,KAAAp5T,IAiHAkhT,EAAApf,SAAA,SAAAvxS,GACA,cAAAA,MAAA2sU,YAGAhc,EAAAic,QAAA,SAAArtT,EAAAvf,GACA,IAAA2wT,EAAApf,SAAAhyR,KAAAoxS,EAAApf,SAAAvxS,GACA,UAAA0hB,UAAA,6BAGA,GAAAnC,IAAAvf,EAAA,SAKA,IAHA,IAAA6sU,EAAAttT,EAAA5lB,OACAmzU,EAAA9sU,EAAArG,OAEAhG,EAAA,EAAAoM,EAAAlK,KAAAY,IAAAo2U,EAAAC,GAAuCn5U,EAAAoM,IAASpM,EAChD,GAAA4rB,EAAA5rB,KAAAqM,EAAArM,GAAA,CACAk5U,EAAAttT,EAAA5rB,GACAm5U,EAAA9sU,EAAArM,GACA,MAIA,OAAAk5U,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GAGAlc,EAAAsY,WAAA,SAAAD,GACA,OAAArsU,OAAAqsU,GAAArqT,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,SACA,QACA,WAIAgyS,EAAAtuS,OAAA,SAAA0qT,EAAApzU,GACA,IAAA6G,EAAAusU,GACA,UAAArrT,UAAA,+CAGA,OAAAqrT,EAAApzU,OACA,OAAAg3T,EAAAsb,MAAA,GAGA,IAAAt4U,EACA,QAAA2C,IAAAqD,EAEA,IADAA,EAAA,EACAhG,EAAA,EAAeA,EAAAo5U,EAAApzU,SAAiBhG,EAChCgG,GAAAozU,EAAAp5U,GAAAgG,OAIA,IAAAghB,EAAAg2S,EAAAkY,YAAAlvU,GACAihB,EAAA,EACA,IAAAjnB,EAAA,EAAaA,EAAAo5U,EAAApzU,SAAiBhG,EAAA,CAC9B,IAAAgN,EAAAosU,EAAAp5U,GACA,IAAAg9T,EAAApf,SAAA5wS,GACA,UAAA+gB,UAAA,+CAEA/gB,EAAAy7B,KAAAzhB,EAAAC,GACAA,GAAAja,EAAAhH,OAEA,OAAAghB,GA8CAg2S,EAAA5kT,aA0EA4kT,EAAAp7T,UAAAo3U,WAAA,EAQAhc,EAAAp7T,UAAAy3U,OAAA,WACA,IAAAjtU,EAAAsE,KAAA1K,OACA,GAAAoG,EAAA,KACA,UAAA4oU,WAAA,6CAEA,QAAAh1U,EAAA,EAAiBA,EAAAoM,EAASpM,GAAA,EAC1Bg2U,EAAAtlU,KAAA1Q,IAAA,GAEA,OAAA0Q,MAGAssT,EAAAp7T,UAAA03U,OAAA,WACA,IAAAltU,EAAAsE,KAAA1K,OACA,GAAAoG,EAAA,KACA,UAAA4oU,WAAA,6CAEA,QAAAh1U,EAAA,EAAiBA,EAAAoM,EAASpM,GAAA,EAC1Bg2U,EAAAtlU,KAAA1Q,IAAA,GACAg2U,EAAAtlU,KAAA1Q,EAAA,EAAAA,EAAA,GAEA,OAAA0Q,MAGAssT,EAAAp7T,UAAA23U,OAAA,WACA,IAAAntU,EAAAsE,KAAA1K,OACA,GAAAoG,EAAA,KACA,UAAA4oU,WAAA,6CAEA,QAAAh1U,EAAA,EAAiBA,EAAAoM,EAASpM,GAAA,EAC1Bg2U,EAAAtlU,KAAA1Q,IAAA,GACAg2U,EAAAtlU,KAAA1Q,EAAA,EAAAA,EAAA,GACAg2U,EAAAtlU,KAAA1Q,EAAA,EAAAA,EAAA,GACAg2U,EAAAtlU,KAAA1Q,EAAA,EAAAA,EAAA,GAEA,OAAA0Q,MAGAssT,EAAAp7T,UAAAkI,SAAA,WACA,IAAA9D,EAAA,EAAA0K,KAAA1K,OACA,WAAAA,EAAA,GACA,IAAAmR,UAAAnR,OAAA0xU,EAAAhnU,KAAA,EAAA1K,GAxHA,SAAAqvU,EAAA9qT,EAAAC,GACA,IAAAqrT,GAAA,EAcA,SALAlzU,IAAA4nB,KAAA,KACAA,EAAA,GAIAA,EAAA7Z,KAAA1K,OACA,SAOA,SAJArD,IAAA6nB,KAAA9Z,KAAA1K,UACAwkB,EAAA9Z,KAAA1K,QAGAwkB,GAAA,EACA,SAOA,IAHAA,KAAA,KACAD,KAAA,GAGA,SAKA,IAFA8qT,MAAA,UAGA,OAAAA,GACA,UACA,OAAAmE,EAAA9oU,KAAA6Z,EAAAC,GAEA,WACA,YACA,OAAAktT,EAAAhnU,KAAA6Z,EAAAC,GAEA,YACA,OAAAivT,EAAA/oU,KAAA6Z,EAAAC,GAEA,aACA,aACA,OAAAkvT,EAAAhpU,KAAA6Z,EAAAC,GAEA,aACA,OAAAgtT,EAAA9mU,KAAA6Z,EAAAC,GAEA,WACA,YACA,cACA,eACA,OAAAmvT,EAAAjpU,KAAA6Z,EAAAC,GAEA,QACA,GAAAqrT,EAAA,UAAA9nT,UAAA,qBAAAsnT,GACAA,KAAA,IAAArqT,cACA6qT,GAAA,IAwDA3+T,MAAAxG,KAAAyG,YAGA6lT,EAAAp7T,UAAAg4U,OAAA,SAAAvtU,GACA,IAAA2wT,EAAApf,SAAAvxS,GAAA,UAAA0hB,UAAA,6BACA,OAAArd,OAAArE,GACA,IAAA2wT,EAAAic,QAAAvoU,KAAArE,IAGA2wT,EAAAp7T,UAAAi4U,QAAA,WACA,IAAA/sU,EAAA,GACA/J,EAAAvD,EAAA+4U,kBAKA,OAJA7nU,KAAA1K,OAAA,IACA8G,EAAA4D,KAAA5G,SAAA,QAAA/G,GAAA0oB,MAAA,SAAkDviB,KAAA,KAClDwH,KAAA1K,OAAAjD,IAAA+J,GAAA,UAEA,WAAAA,EAAA,KAGAkwT,EAAAp7T,UAAAq3U,QAAA,SAAA5/T,EAAAkR,EAAAC,EAAAsvT,EAAAC,GACA,IAAA/c,EAAApf,SAAAvkS,GACA,UAAA0U,UAAA,6BAgBA,QAbAprB,IAAA4nB,IACAA,EAAA,QAEA5nB,IAAA6nB,IACAA,EAAAnR,IAAArT,OAAA,QAEArD,IAAAm3U,IACAA,EAAA,QAEAn3U,IAAAo3U,IACAA,EAAArpU,KAAA1K,QAGAukB,EAAA,GAAAC,EAAAnR,EAAArT,QAAA8zU,EAAA,GAAAC,EAAArpU,KAAA1K,OACA,UAAAgvU,WAAA,sBAGA,GAAA8E,GAAAC,GAAAxvT,GAAAC,EACA,SAEA,GAAAsvT,GAAAC,EACA,SAEA,GAAAxvT,GAAAC,EACA,SAQA,GALAD,KAAA,EACAC,KAAA,EACAsvT,KAAA,EACAC,KAAA,EAEArpU,OAAA2I,EAAA,SASA,IAPA,IAAA6/T,EAAAa,EAAAD,EACAX,EAAA3uT,EAAAD,EACAne,EAAAlK,KAAAY,IAAAo2U,EAAAC,GAEAa,EAAAtpU,KAAA0F,MAAA0jU,EAAAC,GACAE,EAAA5gU,EAAAjD,MAAAmU,EAAAC,GAEAxqB,EAAA,EAAiBA,EAAAoM,IAASpM,EAC1B,GAAAg6U,EAAAh6U,KAAAi6U,EAAAj6U,GAAA,CACAk5U,EAAAc,EAAAh6U,GACAm5U,EAAAc,EAAAj6U,GACA,MAIA,OAAAk5U,EAAAC,GAAA,EACAA,EAAAD,EAAA,EACA,GA6HAlc,EAAAp7T,UAAAs4U,SAAA,SAAA9yT,EAAAy+R,EAAAwvB,GACA,WAAA3kU,KAAAmK,QAAAuM,EAAAy+R,EAAAwvB,IAGArY,EAAAp7T,UAAAiZ,QAAA,SAAAuM,EAAAy+R,EAAAwvB,GACA,OAAAY,EAAAvlU,KAAA0W,EAAAy+R,EAAAwvB,GAAA,IAGArY,EAAAp7T,UAAAu0U,YAAA,SAAA/uT,EAAAy+R,EAAAwvB,GACA,OAAAY,EAAAvlU,KAAA0W,EAAAy+R,EAAAwvB,GAAA,IAkDArY,EAAAp7T,UAAA8mS,MAAA,SAAAlwR,EAAA5N,EAAA5E,EAAAqvU,GAEA,QAAA1yU,IAAAiI,EACAyqU,EAAA,OACArvU,EAAA0K,KAAA1K,OACA4E,EAAA,OAEG,QAAAjI,IAAAqD,GAAA,iBAAA4E,EACHyqU,EAAAzqU,EACA5E,EAAA0K,KAAA1K,OACA4E,EAAA,MAEG,KAAAzH,SAAAyH,GAWH,UAAAf,MACA,2EAXAe,GAAA,EACAzH,SAAA6C,IACAA,GAAA,OACArD,IAAA0yU,MAAA,UAEAA,EAAArvU,EACAA,OAAArD,GASA,IAAAg0U,EAAAjmU,KAAA1K,OAAA4E,EAGA,SAFAjI,IAAAqD,KAAA2wU,KAAA3wU,EAAA2wU,GAEAn+T,EAAAxS,OAAA,IAAAA,EAAA,GAAA4E,EAAA,IAAAA,EAAA8F,KAAA1K,OACA,UAAAgvU,WAAA,0CAGAK,MAAA,QAGA,IADA,IAAAQ,GAAA,IAEA,OAAAR,GACA,UACA,OAAAqB,EAAAhmU,KAAA8H,EAAA5N,EAAA5E,GAEA,WACA,YACA,OAAA8wU,EAAApmU,KAAA8H,EAAA5N,EAAA5E,GAEA,YACA,OAAAgxU,EAAAtmU,KAAA8H,EAAA5N,EAAA5E,GAEA,aACA,aACA,OAAAmxU,EAAAzmU,KAAA8H,EAAA5N,EAAA5E,GAEA,aAEA,OAAAoxU,EAAA1mU,KAAA8H,EAAA5N,EAAA5E,GAEA,WACA,YACA,cACA,eACA,OAAAqxU,EAAA3mU,KAAA8H,EAAA5N,EAAA5E,GAEA,QACA,GAAA6vU,EAAA,UAAA9nT,UAAA,qBAAAsnT,GACAA,GAAA,GAAAA,GAAArqT,cACA6qT,GAAA,IAKA7Y,EAAAp7T,UAAAsjC,OAAA,WACA,OACAnZ,KAAA,SACAhO,KAAAhY,MAAAnE,UAAAwU,MAAAjW,KAAAuQ,KAAAypU,MAAAzpU,KAAA,KAwFA,IAAAynU,EAAA,KAoBA,SAAAsB,EAAAzsU,EAAAud,EAAAC,GACA,IAAAzS,EAAA,GACAyS,EAAAtoB,KAAAY,IAAAkK,EAAAhH,OAAAwkB,GAEA,QAAAxqB,EAAAuqB,EAAqBvqB,EAAAwqB,IAASxqB,EAC9B+X,GAAA/O,OAAAC,aAAA,IAAA+D,EAAAhN,IAEA,OAAA+X,EAGA,SAAA2hU,EAAA1sU,EAAAud,EAAAC,GACA,IAAAzS,EAAA,GACAyS,EAAAtoB,KAAAY,IAAAkK,EAAAhH,OAAAwkB,GAEA,QAAAxqB,EAAAuqB,EAAqBvqB,EAAAwqB,IAASxqB,EAC9B+X,GAAA/O,OAAAC,aAAA+D,EAAAhN,IAEA,OAAA+X,EAGA,SAAAyhU,EAAAxsU,EAAAud,EAAAC,GACA,IAAApe,EAAAY,EAAAhH,SAEAukB,KAAA,KAAAA,EAAA,KACAC,KAAA,GAAAA,EAAApe,KAAAoe,EAAApe,GAGA,IADA,IAAAiM,EAAA,GACArY,EAAAuqB,EAAqBvqB,EAAAwqB,IAASxqB,EAC9BqY,GAAA8oR,EAAAn0R,EAAAhN,IAEA,OAAAqY,EAGA,SAAAshU,EAAA3sU,EAAAud,EAAAC,GAGA,IAFA,IAAAnD,EAAAra,EAAAoJ,MAAAmU,EAAAC,GACAm8Q,EAAA,GACA3mS,EAAA,EAAiBA,EAAAqnB,EAAArhB,OAAkBhG,GAAA,EACnC2mS,GAAA39R,OAAAC,aAAAoe,EAAArnB,GAAA,IAAAqnB,EAAArnB,EAAA,IAEA,OAAA2mS,EA0CA,SAAAyzC,EAAAxvU,EAAAyvU,EAAAr0U,GACA,GAAA4E,EAAA,MAAAA,EAAA,YAAAoqU,WAAA,sBACA,GAAApqU,EAAAyvU,EAAAr0U,EAAA,UAAAgvU,WAAA,yCA+JA,SAAAsF,EAAAttU,EAAA/L,EAAA2J,EAAAyvU,EAAAt3U,EAAAD,GACA,IAAAk6T,EAAApf,SAAA5wS,GAAA,UAAA+gB,UAAA,+CACA,GAAA9sB,EAAA8B,GAAA9B,EAAA6B,EAAA,UAAAkyU,WAAA,qCACA,GAAApqU,EAAAyvU,EAAArtU,EAAAhH,OAAA,UAAAgvU,WAAA,sBAkDA,SAAAuF,EAAAvtU,EAAA/L,EAAA2J,EAAAuc,GACAlmB,EAAA,IAAAA,EAAA,MAAAA,EAAA,GACA,QAAAjB,EAAA,EAAAiN,EAAA/K,KAAAY,IAAAkK,EAAAhH,OAAA4E,EAAA,GAAuD5K,EAAAiN,IAAOjN,EAC9DgN,EAAApC,EAAA5K,IAAAiB,EAAA,QAAAkmB,EAAAnnB,EAAA,EAAAA,MACA,GAAAmnB,EAAAnnB,EAAA,EAAAA,GA8BA,SAAAw6U,EAAAxtU,EAAA/L,EAAA2J,EAAAuc,GACAlmB,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA,QAAAjB,EAAA,EAAAiN,EAAA/K,KAAAY,IAAAkK,EAAAhH,OAAA4E,EAAA,GAAuD5K,EAAAiN,IAAOjN,EAC9DgN,EAAApC,EAAA5K,GAAAiB,IAAA,GAAAkmB,EAAAnnB,EAAA,EAAAA,GAAA,IAmJA,SAAAy6U,EAAAztU,EAAA/L,EAAA2J,EAAAyvU,EAAAt3U,EAAAD,GACA,GAAA8H,EAAAyvU,EAAArtU,EAAAhH,OAAA,UAAAgvU,WAAA,sBACA,GAAApqU,EAAA,YAAAoqU,WAAA,sBAGA,SAAA0F,EAAA1tU,EAAA/L,EAAA2J,EAAAuc,EAAAwzT,GAKA,OAJAA,GACAF,EAAAztU,EAAA/L,EAAA2J,EAAA,GAEA+pU,EAAAjsC,MAAA17R,EAAA/L,EAAA2J,EAAAuc,EAAA,MACAvc,EAAA,EAWA,SAAAgwU,EAAA5tU,EAAA/L,EAAA2J,EAAAuc,EAAAwzT,GAKA,OAJAA,GACAF,EAAAztU,EAAA/L,EAAA2J,EAAA,GAEA+pU,EAAAjsC,MAAA17R,EAAA/L,EAAA2J,EAAAuc,EAAA,MACAvc,EAAA,EA/cAoyT,EAAAp7T,UAAAwU,MAAA,SAAAmU,EAAAC,GACA,IAoBAqwT,EApBAzuU,EAAAsE,KAAA1K,OAqBA,GApBAukB,MACAC,OAAA7nB,IAAA6nB,EAAApe,IAAAoe,EAEAD,EAAA,GACAA,GAAAne,GACA,IAAAme,EAAA,GACGA,EAAAne,IACHme,EAAAne,GAGAoe,EAAA,GACAA,GAAApe,GACA,IAAAoe,EAAA,GACGA,EAAApe,IACHoe,EAAApe,GAGAoe,EAAAD,IAAAC,EAAAD,GAGAyyS,EAAA6X,qBACAgG,EAAAnqU,KAAAysT,SAAA5yS,EAAAC,IACA8D,UAAA0uS,EAAAp7T,cACG,CACH,IAAAk5U,EAAAtwT,EAAAD,EACAswT,EAAA,IAAA7d,EAAA8d,OAAAn4U,GACA,QAAA3C,EAAA,EAAmBA,EAAA86U,IAAc96U,EACjC66U,EAAA76U,GAAA0Q,KAAA1Q,EAAAuqB,GAIA,OAAAswT,GAWA7d,EAAAp7T,UAAAm5U,WAAA,SAAAnwU,EAAAwN,EAAAuiU,GACA/vU,GAAA,EACAwN,GAAA,EACAuiU,GAAAP,EAAAxvU,EAAAwN,EAAA1H,KAAA1K,QAKA,IAHA,IAAAohB,EAAA1W,KAAA9F,GACAowU,EAAA,EACAh7U,EAAA,IACAA,EAAAoY,IAAA4iU,GAAA,MACA5zT,GAAA1W,KAAA9F,EAAA5K,GAAAg7U,EAGA,OAAA5zT,GAGA41S,EAAAp7T,UAAAq5U,WAAA,SAAArwU,EAAAwN,EAAAuiU,GACA/vU,GAAA,EACAwN,GAAA,EACAuiU,GACAP,EAAAxvU,EAAAwN,EAAA1H,KAAA1K,QAKA,IAFA,IAAAohB,EAAA1W,KAAA9F,IAAAwN,GACA4iU,EAAA,EACA5iU,EAAA,IAAA4iU,GAAA,MACA5zT,GAAA1W,KAAA9F,IAAAwN,GAAA4iU,EAGA,OAAA5zT,GAGA41S,EAAAp7T,UAAAs5U,UAAA,SAAAtwU,EAAA+vU,GAEA,OADAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA0K,KAAA9F,IAGAoyT,EAAAp7T,UAAAu5U,aAAA,SAAAvwU,EAAA+vU,GAEA,OADAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA0K,KAAA9F,GAAA8F,KAAA9F,EAAA,OAGAoyT,EAAAp7T,UAAA20U,aAAA,SAAA3rU,EAAA+vU,GAEA,OADAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA0K,KAAA9F,IAAA,EAAA8F,KAAA9F,EAAA,IAGAoyT,EAAAp7T,UAAAw5U,aAAA,SAAAxwU,EAAA+vU,GAGA,OAFAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,SAEA0K,KAAA9F,GACA8F,KAAA9F,EAAA,MACA8F,KAAA9F,EAAA,QACA,SAAA8F,KAAA9F,EAAA,IAGAoyT,EAAAp7T,UAAAy5U,aAAA,SAAAzwU,EAAA+vU,GAGA,OAFAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QAEA,SAAA0K,KAAA9F,IACA8F,KAAA9F,EAAA,OACA8F,KAAA9F,EAAA,MACA8F,KAAA9F,EAAA,KAGAoyT,EAAAp7T,UAAA05U,UAAA,SAAA1wU,EAAAwN,EAAAuiU,GACA/vU,GAAA,EACAwN,GAAA,EACAuiU,GAAAP,EAAAxvU,EAAAwN,EAAA1H,KAAA1K,QAKA,IAHA,IAAAohB,EAAA1W,KAAA9F,GACAowU,EAAA,EACAh7U,EAAA,IACAA,EAAAoY,IAAA4iU,GAAA,MACA5zT,GAAA1W,KAAA9F,EAAA5K,GAAAg7U,EAMA,OAFA5zT,IAFA4zT,GAAA,OAEA5zT,GAAAllB,KAAAmF,IAAA,IAAA+Q,IAEAgP,GAGA41S,EAAAp7T,UAAA25U,UAAA,SAAA3wU,EAAAwN,EAAAuiU,GACA/vU,GAAA,EACAwN,GAAA,EACAuiU,GAAAP,EAAAxvU,EAAAwN,EAAA1H,KAAA1K,QAKA,IAHA,IAAAhG,EAAAoY,EACA4iU,EAAA,EACA5zT,EAAA1W,KAAA9F,IAAA5K,GACAA,EAAA,IAAAg7U,GAAA,MACA5zT,GAAA1W,KAAA9F,IAAA5K,GAAAg7U,EAMA,OAFA5zT,IAFA4zT,GAAA,OAEA5zT,GAAAllB,KAAAmF,IAAA,IAAA+Q,IAEAgP,GAGA41S,EAAAp7T,UAAA45U,SAAA,SAAA5wU,EAAA+vU,GAEA,OADAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA,IAAA0K,KAAA9F,IACA,OAAA8F,KAAA9F,GAAA,GADA8F,KAAA9F,IAIAoyT,EAAAp7T,UAAA65U,YAAA,SAAA7wU,EAAA+vU,GACAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA,IAAAohB,EAAA1W,KAAA9F,GAAA8F,KAAA9F,EAAA,MACA,aAAAwc,EAAA,WAAAA,KAGA41S,EAAAp7T,UAAA85U,YAAA,SAAA9wU,EAAA+vU,GACAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA,IAAAohB,EAAA1W,KAAA9F,EAAA,GAAA8F,KAAA9F,IAAA,EACA,aAAAwc,EAAA,WAAAA,KAGA41S,EAAAp7T,UAAA+5U,YAAA,SAAA/wU,EAAA+vU,GAGA,OAFAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QAEA0K,KAAA9F,GACA8F,KAAA9F,EAAA,MACA8F,KAAA9F,EAAA,OACA8F,KAAA9F,EAAA,QAGAoyT,EAAAp7T,UAAAg6U,YAAA,SAAAhxU,EAAA+vU,GAGA,OAFAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QAEA0K,KAAA9F,IAAA,GACA8F,KAAA9F,EAAA,OACA8F,KAAA9F,EAAA,MACA8F,KAAA9F,EAAA,IAGAoyT,EAAAp7T,UAAAi6U,YAAA,SAAAjxU,EAAA+vU,GAEA,OADAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA2uU,EAAA1jC,KAAAvgS,KAAA9F,GAAA,SAGAoyT,EAAAp7T,UAAAk6U,YAAA,SAAAlxU,EAAA+vU,GAEA,OADAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA2uU,EAAA1jC,KAAAvgS,KAAA9F,GAAA,SAGAoyT,EAAAp7T,UAAAm6U,aAAA,SAAAnxU,EAAA+vU,GAEA,OADAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA2uU,EAAA1jC,KAAAvgS,KAAA9F,GAAA,SAGAoyT,EAAAp7T,UAAAo6U,aAAA,SAAApxU,EAAA+vU,GAEA,OADAA,GAAAP,EAAAxvU,EAAA,EAAA8F,KAAA1K,QACA2uU,EAAA1jC,KAAAvgS,KAAA9F,GAAA,SASAoyT,EAAAp7T,UAAAq6U,YAAA,SAAAh7U,EAAA2J,EAAAwN,EAAAuiU,IACA15U,KACA2J,GAAA,EACAwN,GAAA,EACAuiU,IAEAL,EAAA5pU,KAAAzP,EAAA2J,EAAAwN,EADAlW,KAAAmF,IAAA,IAAA+Q,GAAA,EACA,GAGA,IAAA4iU,EAAA,EACAh7U,EAAA,EAEA,IADA0Q,KAAA9F,GAAA,IAAA3J,IACAjB,EAAAoY,IAAA4iU,GAAA,MACAtqU,KAAA9F,EAAA5K,GAAAiB,EAAA+5U,EAAA,IAGA,OAAApwU,EAAAwN,GAGA4kT,EAAAp7T,UAAAs6U,YAAA,SAAAj7U,EAAA2J,EAAAwN,EAAAuiU,IACA15U,KACA2J,GAAA,EACAwN,GAAA,EACAuiU,IAEAL,EAAA5pU,KAAAzP,EAAA2J,EAAAwN,EADAlW,KAAAmF,IAAA,IAAA+Q,GAAA,EACA,GAGA,IAAApY,EAAAoY,EAAA,EACA4iU,EAAA,EAEA,IADAtqU,KAAA9F,EAAA5K,GAAA,IAAAiB,IACAjB,GAAA,IAAAg7U,GAAA,MACAtqU,KAAA9F,EAAA5K,GAAAiB,EAAA+5U,EAAA,IAGA,OAAApwU,EAAAwN,GAGA4kT,EAAAp7T,UAAAu6U,WAAA,SAAAl7U,EAAA2J,EAAA+vU,GAMA,OALA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,SACAoyT,EAAA6X,sBAAA5zU,EAAAiB,KAAAc,MAAA/B,IACAyP,KAAA9F,GAAA,IAAA3J,EACA2J,EAAA,GAWAoyT,EAAAp7T,UAAAw6U,cAAA,SAAAn7U,EAAA2J,EAAA+vU,GAUA,OATA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,WACAoyT,EAAA6X,qBACAnkU,KAAA9F,GAAA,IAAA3J,EACAyP,KAAA9F,EAAA,GAAA3J,IAAA,GAEAs5U,EAAA7pU,KAAAzP,EAAA2J,GAAA,GAEAA,EAAA,GAGAoyT,EAAAp7T,UAAAy6U,cAAA,SAAAp7U,EAAA2J,EAAA+vU,GAUA,OATA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,WACAoyT,EAAA6X,qBACAnkU,KAAA9F,GAAA3J,IAAA,EACAyP,KAAA9F,EAAA,OAAA3J,GAEAs5U,EAAA7pU,KAAAzP,EAAA2J,GAAA,GAEAA,EAAA,GAUAoyT,EAAAp7T,UAAA06U,cAAA,SAAAr7U,EAAA2J,EAAA+vU,GAYA,OAXA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,gBACAoyT,EAAA6X,qBACAnkU,KAAA9F,EAAA,GAAA3J,IAAA,GACAyP,KAAA9F,EAAA,GAAA3J,IAAA,GACAyP,KAAA9F,EAAA,GAAA3J,IAAA,EACAyP,KAAA9F,GAAA,IAAA3J,GAEAu5U,EAAA9pU,KAAAzP,EAAA2J,GAAA,GAEAA,EAAA,GAGAoyT,EAAAp7T,UAAA26U,cAAA,SAAAt7U,EAAA2J,EAAA+vU,GAYA,OAXA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,gBACAoyT,EAAA6X,qBACAnkU,KAAA9F,GAAA3J,IAAA,GACAyP,KAAA9F,EAAA,GAAA3J,IAAA,GACAyP,KAAA9F,EAAA,GAAA3J,IAAA,EACAyP,KAAA9F,EAAA,OAAA3J,GAEAu5U,EAAA9pU,KAAAzP,EAAA2J,GAAA,GAEAA,EAAA,GAGAoyT,EAAAp7T,UAAA46U,WAAA,SAAAv7U,EAAA2J,EAAAwN,EAAAuiU,GAGA,GAFA15U,KACA2J,GAAA,GACA+vU,EAAA,CACA,IAAA/+B,EAAA15S,KAAAmF,IAAA,IAAA+Q,EAAA,GAEAkiU,EAAA5pU,KAAAzP,EAAA2J,EAAAwN,EAAAwjS,EAAA,GAAAA,GAGA,IAAA57S,EAAA,EACAg7U,EAAA,EACAyB,EAAA,EAEA,IADA/rU,KAAA9F,GAAA,IAAA3J,IACAjB,EAAAoY,IAAA4iU,GAAA,MACA/5U,EAAA,OAAAw7U,GAAA,IAAA/rU,KAAA9F,EAAA5K,EAAA,KACAy8U,EAAA,GAEA/rU,KAAA9F,EAAA5K,IAAAiB,EAAA+5U,GAAA,GAAAyB,EAAA,IAGA,OAAA7xU,EAAAwN,GAGA4kT,EAAAp7T,UAAA86U,WAAA,SAAAz7U,EAAA2J,EAAAwN,EAAAuiU,GAGA,GAFA15U,KACA2J,GAAA,GACA+vU,EAAA,CACA,IAAA/+B,EAAA15S,KAAAmF,IAAA,IAAA+Q,EAAA,GAEAkiU,EAAA5pU,KAAAzP,EAAA2J,EAAAwN,EAAAwjS,EAAA,GAAAA,GAGA,IAAA57S,EAAAoY,EAAA,EACA4iU,EAAA,EACAyB,EAAA,EAEA,IADA/rU,KAAA9F,EAAA5K,GAAA,IAAAiB,IACAjB,GAAA,IAAAg7U,GAAA,MACA/5U,EAAA,OAAAw7U,GAAA,IAAA/rU,KAAA9F,EAAA5K,EAAA,KACAy8U,EAAA,GAEA/rU,KAAA9F,EAAA5K,IAAAiB,EAAA+5U,GAAA,GAAAyB,EAAA,IAGA,OAAA7xU,EAAAwN,GAGA4kT,EAAAp7T,UAAA+6U,UAAA,SAAA17U,EAAA2J,EAAA+vU,GAOA,OANA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,YACAoyT,EAAA6X,sBAAA5zU,EAAAiB,KAAAc,MAAA/B,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACAyP,KAAA9F,GAAA,IAAA3J,EACA2J,EAAA,GAGAoyT,EAAAp7T,UAAAg7U,aAAA,SAAA37U,EAAA2J,EAAA+vU,GAUA,OATA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,gBACAoyT,EAAA6X,qBACAnkU,KAAA9F,GAAA,IAAA3J,EACAyP,KAAA9F,EAAA,GAAA3J,IAAA,GAEAs5U,EAAA7pU,KAAAzP,EAAA2J,GAAA,GAEAA,EAAA,GAGAoyT,EAAAp7T,UAAAi7U,aAAA,SAAA57U,EAAA2J,EAAA+vU,GAUA,OATA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,gBACAoyT,EAAA6X,qBACAnkU,KAAA9F,GAAA3J,IAAA,EACAyP,KAAA9F,EAAA,OAAA3J,GAEAs5U,EAAA7pU,KAAAzP,EAAA2J,GAAA,GAEAA,EAAA,GAGAoyT,EAAAp7T,UAAAk7U,aAAA,SAAA77U,EAAA2J,EAAA+vU,GAYA,OAXA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,0BACAoyT,EAAA6X,qBACAnkU,KAAA9F,GAAA,IAAA3J,EACAyP,KAAA9F,EAAA,GAAA3J,IAAA,EACAyP,KAAA9F,EAAA,GAAA3J,IAAA,GACAyP,KAAA9F,EAAA,GAAA3J,IAAA,IAEAu5U,EAAA9pU,KAAAzP,EAAA2J,GAAA,GAEAA,EAAA,GAGAoyT,EAAAp7T,UAAAm7U,aAAA,SAAA97U,EAAA2J,EAAA+vU,GAaA,OAZA15U,KACA2J,GAAA,EACA+vU,GAAAL,EAAA5pU,KAAAzP,EAAA2J,EAAA,0BACA3J,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA+7T,EAAA6X,qBACAnkU,KAAA9F,GAAA3J,IAAA,GACAyP,KAAA9F,EAAA,GAAA3J,IAAA,GACAyP,KAAA9F,EAAA,GAAA3J,IAAA,EACAyP,KAAA9F,EAAA,OAAA3J,GAEAu5U,EAAA9pU,KAAAzP,EAAA2J,GAAA,GAEAA,EAAA,GAgBAoyT,EAAAp7T,UAAAo7U,aAAA,SAAA/7U,EAAA2J,EAAA+vU,GACA,OAAAD,EAAAhqU,KAAAzP,EAAA2J,GAAA,EAAA+vU,IAGA3d,EAAAp7T,UAAAq7U,aAAA,SAAAh8U,EAAA2J,EAAA+vU,GACA,OAAAD,EAAAhqU,KAAAzP,EAAA2J,GAAA,EAAA+vU,IAWA3d,EAAAp7T,UAAAs7U,cAAA,SAAAj8U,EAAA2J,EAAA+vU,GACA,OAAAC,EAAAlqU,KAAAzP,EAAA2J,GAAA,EAAA+vU,IAGA3d,EAAAp7T,UAAAu7U,cAAA,SAAAl8U,EAAA2J,EAAA+vU,GACA,OAAAC,EAAAlqU,KAAAzP,EAAA2J,GAAA,EAAA+vU,IAIA3d,EAAAp7T,UAAA6mC,KAAA,SAAApvB,EAAA+jU,EAAA7yT,EAAAC,GAQA,GAPAD,MAAA,GACAC,GAAA,IAAAA,MAAA9Z,KAAA1K,QACAo3U,GAAA/jU,EAAArT,SAAAo3U,EAAA/jU,EAAArT,QACAo3U,MAAA,GACA5yT,EAAA,GAAAA,EAAAD,IAAAC,EAAAD,GAGAC,IAAAD,EAAA,SACA,OAAAlR,EAAArT,QAAA,IAAA0K,KAAA1K,OAAA,SAGA,GAAAo3U,EAAA,EACA,UAAApI,WAAA,6BAEA,GAAAzqT,EAAA,GAAAA,GAAA7Z,KAAA1K,OAAA,UAAAgvU,WAAA,6BACA,GAAAxqT,EAAA,YAAAwqT,WAAA,2BAGAxqT,EAAA9Z,KAAA1K,SAAAwkB,EAAA9Z,KAAA1K,QACAqT,EAAArT,OAAAo3U,EAAA5yT,EAAAD,IACAC,EAAAnR,EAAArT,OAAAo3U,EAAA7yT,GAGA,IACAvqB,EADAoM,EAAAoe,EAAAD,EAGA,GAAA7Z,OAAA2I,GAAAkR,EAAA6yT,KAAA5yT,EAEA,IAAAxqB,EAAAoM,EAAA,EAAqBpM,GAAA,IAAQA,EAC7BqZ,EAAArZ,EAAAo9U,GAAA1sU,KAAA1Q,EAAAuqB,QAEG,GAAAne,EAAA,MAAA4wT,EAAA6X,oBAEH,IAAA70U,EAAA,EAAeA,EAAAoM,IAASpM,EACxBqZ,EAAArZ,EAAAo9U,GAAA1sU,KAAA1Q,EAAAuqB,QAGAje,WAAA1K,UAAAwQ,IAAAjS,KACAkZ,EACA3I,KAAAysT,SAAA5yS,IAAAne,GACAgxU,GAIA,OAAAhxU,GAOA4wT,EAAAp7T,UAAAk3U,KAAA,SAAA1xT,EAAAmD,EAAAC,EAAA6qT,GAEA,oBAAAjuT,EAAA,CASA,GARA,iBAAAmD,GACA8qT,EAAA9qT,EACAA,EAAA,EACAC,EAAA9Z,KAAA1K,QACK,iBAAAwkB,IACL6qT,EAAA7qT,EACAA,EAAA9Z,KAAA1K,QAEA,IAAAohB,EAAAphB,OAAA,CACA,IAAA2L,EAAAyV,EAAAla,WAAA,GACAyE,EAAA,MACAyV,EAAAzV,GAGA,QAAAhP,IAAA0yU,GAAA,iBAAAA,EACA,UAAAtnT,UAAA,6BAEA,oBAAAsnT,IAAArY,EAAAsY,WAAAD,GACA,UAAAtnT,UAAA,qBAAAsnT,OAEG,iBAAAjuT,IACHA,GAAA,KAIA,GAAAmD,EAAA,GAAA7Z,KAAA1K,OAAAukB,GAAA7Z,KAAA1K,OAAAwkB,EACA,UAAAwqT,WAAA,sBAGA,GAAAxqT,GAAAD,EACA,OAAA7Z,KAQA,IAAA1Q,EACA,GANAuqB,KAAA,EACAC,OAAA7nB,IAAA6nB,EAAA9Z,KAAA1K,OAAAwkB,IAAA,EAEApD,MAAA,GAGA,iBAAAA,EACA,IAAApnB,EAAAuqB,EAAmBvqB,EAAAwqB,IAASxqB,EAC5B0Q,KAAA1Q,GAAAonB,MAEG,CACH,IAAAC,EAAA21S,EAAApf,SAAAx2R,GACAA,EACA0uT,EAAA,IAAA9Y,EAAA51S,EAAAiuT,GAAAvrU,YACAsC,EAAAib,EAAArhB,OACA,IAAAhG,EAAA,EAAeA,EAAAwqB,EAAAD,IAAiBvqB,EAChC0Q,KAAA1Q,EAAAuqB,GAAAlD,EAAArnB,EAAAoM,GAIA,OAAAsE,MAMA,IAAA2sU,EAAA,qBAmBA,SAAAl8C,EAAA1/R,GACA,OAAAA,EAAA,OAAAA,EAAAqI,SAAA,IACArI,EAAAqI,SAAA,IAGA,SAAAgsU,EAAAt9T,EAAA8+T,GAEA,IAAAU,EADAV,KAAArjB,IAMA,IAJA,IAAAjuT,EAAAwS,EAAAxS,OACAs3U,EAAA,KACAj2T,KAEArnB,EAAA,EAAiBA,EAAAgG,IAAYhG,EAAA,CAI7B,IAHAg4U,EAAAx/T,EAAAtL,WAAAlN,IAGA,OAAAg4U,EAAA,OAEA,IAAAsF,EAAA,CAEA,GAAAtF,EAAA,QAEAV,GAAA,OAAAjwT,EAAAte,KAAA,aACA,SACS,GAAA/I,EAAA,IAAAgG,EAAA,EAETsxU,GAAA,OAAAjwT,EAAAte,KAAA,aACA,SAIAu0U,EAAAtF,EAEA,SAIA,GAAAA,EAAA,QACAV,GAAA,OAAAjwT,EAAAte,KAAA,aACAu0U,EAAAtF,EACA,SAIAA,EAAA,OAAAsF,EAAA,UAAAtF,EAAA,YACKsF,IAELhG,GAAA,OAAAjwT,EAAAte,KAAA,aAMA,GAHAu0U,EAAA,KAGAtF,EAAA,KACA,IAAAV,GAAA,WACAjwT,EAAAte,KAAAivU,QACK,GAAAA,EAAA,MACL,IAAAV,GAAA,WACAjwT,EAAAte,KACAivU,GAAA,MACA,GAAAA,EAAA,UAEK,GAAAA,EAAA,OACL,IAAAV,GAAA,WACAjwT,EAAAte,KACAivU,GAAA,OACAA,GAAA,SACA,GAAAA,EAAA,SAEK,MAAAA,EAAA,SASL,UAAAnuU,MAAA,sBARA,IAAAytU,GAAA,WACAjwT,EAAAte,KACAivU,GAAA,OACAA,GAAA,UACAA,GAAA,SACA,GAAAA,EAAA,MAOA,OAAA3wT,EA4BA,SAAA0uT,EAAAjpU,GACA,OAAA4nU,EAAA6I,YAhIA,SAAAzwU,GAIA,IAFAA,EAUA,SAAAA,GACA,OAAAA,EAAA0wU,KAAA1wU,EAAA0wU,OACA1wU,EAAA0e,QAAA,iBAZAiyT,CAAA3wU,GAAA0e,QAAA6xT,EAAA,KAEAr3U,OAAA,WAEA,KAAA8G,EAAA9G,OAAA,MACA8G,GAAA,IAEA,OAAAA,EAuHA4wU,CAAA5wU,IAGA,SAAAiqU,EAAA4G,EAAAC,EAAAhzU,EAAA5E,GACA,QAAAhG,EAAA,EAAiBA,EAAAgG,KACjBhG,EAAA4K,GAAAgzU,EAAA53U,QAAAhG,GAAA29U,EAAA33U,UAD6BhG,EAE7B49U,EAAA59U,EAAA4K,GAAA+yU,EAAA39U,GAEA,OAAAA,oDCrvDAR,EAAA4Y,WAuCA,SAAAylU,GACA,IAAAC,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACA,UAAAE,EAAAC,GAAA,EAAAA,GA1CAz+U,EAAA+9U,YAiDA,SAAAM,GAeA,IAdA,IAAA5rU,EACA6rU,EAAAC,EAAAF,GACAG,EAAAF,EAAA,GACAG,EAAAH,EAAA,GAEAn2T,EAAA,IAAAu2T,EAVA,SAAAL,EAAAG,EAAAC,GACA,UAAAD,EAAAC,GAAA,EAAAA,EASAE,CAAAN,EAAAG,EAAAC,IAEAG,EAAA,EAGAhyU,EAAA6xU,EAAA,EACAD,EAAA,EACAA,EAEAh+U,EAAA,EAAiBA,EAAAoM,EAASpM,GAAA,EAC1BiS,EACAosU,EAAAR,EAAA3wU,WAAAlN,KAAA,GACAq+U,EAAAR,EAAA3wU,WAAAlN,EAAA,QACAq+U,EAAAR,EAAA3wU,WAAAlN,EAAA,OACAq+U,EAAAR,EAAA3wU,WAAAlN,EAAA,IACA2nB,EAAAy2T,KAAAnsU,GAAA,OACA0V,EAAAy2T,KAAAnsU,GAAA,MACA0V,EAAAy2T,KAAA,IAAAnsU,EAGA,IAAAgsU,IACAhsU,EACAosU,EAAAR,EAAA3wU,WAAAlN,KAAA,EACAq+U,EAAAR,EAAA3wU,WAAAlN,EAAA,OACA2nB,EAAAy2T,KAAA,IAAAnsU,GAGA,IAAAgsU,IACAhsU,EACAosU,EAAAR,EAAA3wU,WAAAlN,KAAA,GACAq+U,EAAAR,EAAA3wU,WAAAlN,EAAA,OACAq+U,EAAAR,EAAA3wU,WAAAlN,EAAA,OACA2nB,EAAAy2T,KAAAnsU,GAAA,MACA0V,EAAAy2T,KAAA,IAAAnsU,GAGA,OAAA0V,GA1FAnoB,EAAAi4U,cAiHA,SAAA6G,GAQA,IAPA,IAAArsU,EACA7F,EAAAkyU,EAAAt4U,OACAu4U,EAAAnyU,EAAA,EACAoyU,KAIAx+U,EAAA,EAAAy+U,EAAAryU,EAAAmyU,EAA0Cv+U,EAAAy+U,EAAUz+U,GAHpD,MAIAw+U,EAAAz1U,KAAA21U,EACAJ,EAAAt+U,IALA,MAKAy+U,IAAAz+U,EALA,QAUA,IAAAu+U,GACAtsU,EAAAqsU,EAAAlyU,EAAA,GACAoyU,EAAAz1U,KACA41U,EAAA1sU,GAAA,GACA0sU,EAAA1sU,GAAA,MACA,OAEG,IAAAssU,IACHtsU,GAAAqsU,EAAAlyU,EAAA,OAAAkyU,EAAAlyU,EAAA,GACAoyU,EAAAz1U,KACA41U,EAAA1sU,GAAA,IACA0sU,EAAA1sU,GAAA,MACA0sU,EAAA1sU,GAAA,MACA,MAIA,OAAAusU,EAAAt1U,KAAA,KA1IA,IALA,IAAAy1U,KACAN,KACAH,EAAA,oBAAA5xU,sBAAAvG,MAEA4L,EAAA,mEACA3R,EAAA,EAAAoM,EAAAuF,EAAA3L,OAAkChG,EAAAoM,IAASpM,EAC3C2+U,EAAA3+U,GAAA2R,EAAA3R,GACAq+U,EAAA1sU,EAAAzE,WAAAlN,MAQA,SAAA+9U,EAAAF,GACA,IAAAzxU,EAAAyxU,EAAA73U,OAEA,GAAAoG,EAAA,IACA,UAAAvC,MAAA,kDAKA,IAAAm0U,EAAAH,EAAAhjU,QAAA,KAOA,OANA,IAAAmjU,MAAA5xU,IAMA4xU,EAJAA,IAAA5xU,EACA,EACA,EAAA4xU,EAAA,GA8DA,SAAAY,EAAAC,GACA,OAAAF,EAAAE,GAAA,OACAF,EAAAE,GAAA,OACAF,EAAAE,GAAA,MACAF,EAAA,GAAAE,GAGA,SAAAH,EAAAJ,EAAA/zT,EAAAC,GAGA,IAFA,IAAAvY,EACA6sU,KACA9+U,EAAAuqB,EAAqBvqB,EAAAwqB,EAASxqB,GAAA,EAC9BiS,GACAqsU,EAAAt+U,IAAA,cACAs+U,EAAAt+U,EAAA,cACA,IAAAs+U,EAAAt+U,EAAA,IACA8+U,EAAA/1U,KAAA61U,EAAA3sU,IAEA,OAAA6sU,EAAA51U,KAAA,IAhGAm1U,EAAA,IAAAnxU,WAAA,OACAmxU,EAAA,IAAAnxU,WAAA,sBCnBA1N,EAAAyxS,KAAA,SAAAjqR,EAAApc,EAAAm0U,EAAAC,EAAAC,GACA,IAAAxvU,EAAArP,EACA8+U,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAr/U,EAAA++U,EAAAE,EAAA,IACA3+U,EAAAy+U,GAAA,IACAh9U,EAAAilB,EAAApc,EAAA5K,GAOA,IALAA,GAAAM,EAEAmP,EAAA1N,GAAA,IAAAs9U,GAAA,EACAt9U,KAAAs9U,EACAA,GAAAH,EACQG,EAAA,EAAW5vU,EAAA,IAAAA,EAAAuX,EAAApc,EAAA5K,MAAAM,EAAA++U,GAAA,GAKnB,IAHAj/U,EAAAqP,GAAA,IAAA4vU,GAAA,EACA5vU,KAAA4vU,EACAA,GAAAL,EACQK,EAAA,EAAWj/U,EAAA,IAAAA,EAAA4mB,EAAApc,EAAA5K,MAAAM,EAAA++U,GAAA,GAEnB,OAAA5vU,EACAA,EAAA,EAAA2vU,MACG,IAAA3vU,IAAA0vU,EACH,OAAA/+U,EAAAk/U,IAAArrB,KAAAlyT,GAAA,KAEA3B,GAAA8B,KAAAmF,IAAA,EAAA23U,GACAvvU,GAAA2vU,EAEA,OAAAr9U,GAAA,KAAA3B,EAAA8B,KAAAmF,IAAA,EAAAoI,EAAAuvU,IAGAx/U,EAAAkpS,MAAA,SAAA1hR,EAAA/lB,EAAA2J,EAAAm0U,EAAAC,EAAAC,GACA,IAAAxvU,EAAArP,EAAAC,EACA6+U,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAI,EAAA,KAAAP,EAAA98U,KAAAmF,IAAA,OAAAnF,KAAAmF,IAAA,SACArH,EAAA++U,EAAA,EAAAE,EAAA,EACA3+U,EAAAy+U,EAAA,KACAh9U,EAAAd,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAmCA,IAjCAA,EAAAiB,KAAA4jB,IAAA7kB,GAEAkV,MAAAlV,QAAAgzT,KACA7zT,EAAA+V,MAAAlV,GAAA,IACAwO,EAAA0vU,IAEA1vU,EAAAvN,KAAAc,MAAAd,KAAAoN,IAAArO,GAAAiB,KAAAs9U,KACAv+U,GAAAZ,EAAA6B,KAAAmF,IAAA,GAAAoI,IAAA,IACAA,IACApP,GAAA,IAGAY,GADAwO,EAAA2vU,GAAA,EACAG,EAAAl/U,EAEAk/U,EAAAr9U,KAAAmF,IAAA,IAAA+3U,IAEA/+U,GAAA,IACAoP,IACApP,GAAA,GAGAoP,EAAA2vU,GAAAD,GACA/+U,EAAA,EACAqP,EAAA0vU,GACK1vU,EAAA2vU,GAAA,GACLh/U,GAAAa,EAAAZ,EAAA,GAAA6B,KAAAmF,IAAA,EAAA23U,GACAvvU,GAAA2vU,IAEAh/U,EAAAa,EAAAiB,KAAAmF,IAAA,EAAA+3U,EAAA,GAAAl9U,KAAAmF,IAAA,EAAA23U,GACAvvU,EAAA,IAIQuvU,GAAA,EAAWh4T,EAAApc,EAAA5K,GAAA,IAAAI,EAAAJ,GAAAM,EAAAF,GAAA,IAAA4+U,GAAA,GAInB,IAFAvvU,KAAAuvU,EAAA5+U,EACA8+U,GAAAF,EACQE,EAAA,EAAUl4T,EAAApc,EAAA5K,GAAA,IAAAyP,EAAAzP,GAAAM,EAAAmP,GAAA,IAAAyvU,GAAA,GAElBl4T,EAAApc,EAAA5K,EAAAM,IAAA,IAAAyB,kBClFA,IAAA+H,KAAiBA,SAEjBrK,EAAAD,QAAAuG,MAAA8G,SAAA,SAAA8a,GACA,wBAAA7d,EAAA3J,KAAAwnB,mBCHAloB,EAAAD,QAAA,WACA,UAAAqK,MAAA,sMCgBM41U,EAML3uU,YAAaC,GACZA,EAAUA,MACVL,KAAK9C,aAAemD,EAAoB,aAAIA,EAAQnD,aAAa,KACjE8C,KAAKgvU,OAAS3uU,EAAc,OAAIA,EAAQ2uU,OAAO,KAC/ChvU,KAAKo4R,YAAc/3R,EAAmB,YAAIA,EAAQ+3R,YAAY,IAAI/7Q,EAAA,EAClErc,KAAKF,YAAcO,EAAmB,YAAIA,EAAQP,YAAY,IAAIuc,EAAA,EAKnEjc,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAK9C,aAAayK,GAClCuG,EAAA,GAAelO,KAAKgvU,OAAOrnU,GAC3B3H,KAAKo4R,YAAYn1R,OAAO0E,GACxB3H,KAAKF,YAAYmD,OAAO0E,GAKzBvH,OAAQsI,GACP1I,KAAK9C,aAAegR,EAAA,EAAgBxF,GACpC1I,KAAKgvU,OAAS9gU,EAAA,EAAexF,GAC7B1I,KAAKo4R,YAAYh1R,OAAOsF,GACxB1I,KAAKF,YAAYsD,OAAOsF,GAKzBtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIomU,GAEdpmU,EAAOzL,aAAe8C,KAAK9C,aAC3ByL,EAAOqmU,OAAShvU,KAAKgvU,OACjBhvU,KAAKo4R,cAAezvR,EAAOyvR,YAAcp4R,KAAKo4R,YAAYjvR,SAC1DnJ,KAAKF,cAAe6I,EAAO7I,YAAcE,KAAKF,YAAYqJ,SACvDR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,gBAAgB++U,EAAe/+U,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC7D1Ei/U,EAIL7uU,YAAaC,GACZA,EAAUA,MACVL,KAAKrK,IAAM0K,EAAW,IAAIA,EAAQ1K,IAAI,KACtCqK,KAAKnK,KAAOwK,EAAY,KAAIA,EAAQxK,KAAK,KAK1CuK,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKrK,IAAIgS,GACzBuG,EAAA,GAAgBlO,KAAKnK,KAAK8R,GAK3BvH,OAAQsI,GACP1I,KAAKrK,IAAMuY,EAAA,EAAgBxF,GAC3B1I,KAAKnK,KAAOqY,EAAA,EAAgBxF,GAK7BtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIsmU,GAEdtmU,EAAOhT,IAAMqK,KAAKrK,IAClBgT,EAAO9S,KAAOmK,KAAKnK,KACZ8S,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,QAAQi/U,EAAOj/U,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,QC1DpD+8C,UAON,SAAAmiS,EAAsC7hU,EAA8B1F,GACzEA,EAAI5T,UAAUsZ,GAIT,SAAA8hU,EAAsCzmU,GAC3C,OAAOA,EAAIzU,aAbZ,SAAY84C,GACTA,IAAA,mBACDA,IAAA,aACAA,IAAA,WAHF,CAAYA,WAmBZ/8C,OAAAyd,EAAA,EAAAzd,CAAoB,uBAAuB+8C,EAAqBmiS,EAA4BC,EAA4B,YCFlHC,EAOLhvU,YAAaC,GACZA,EAAUA,MACVL,KAAKqvU,iBAAmBhvU,EAAwB,iBAAIA,EAAQgvU,iBAAiB,IAAIN,EACjF/uU,KAAKsvU,QAAUjvU,EAAe,QAAIA,EAAQivU,QAAQ,IAAIL,EACtDjvU,KAAK8vT,MAAQzvT,EAAa,MAAIA,EAAQyvT,MAAM,IAAIzzS,EAAA,EAChDrc,KAAKuvU,cAAgBlvU,EAAqB,cAAIA,EAAQkvU,cAAc,KACpEvvU,KAAKwvU,UAAYnvU,EAAiB,UAAIA,EAAQmvU,aAK/CpvU,OAAQuH,GACP3H,KAAKqvU,iBAAiBpsU,OAAO0E,GAC7B3H,KAAKsvU,QAAQrsU,OAAO0E,GACpB3H,KAAK8vT,MAAM7sT,OAAO0E,GAClBunU,EAA2BlvU,KAAKuvU,cAAc5nU,GAC9CuG,EAAA,EAAelO,KAAKwvU,UAAU7nU,EAAIuG,EAAA,IAKnC9N,OAAQsI,GACP1I,KAAKqvU,iBAAiBjsU,OAAOsF,GAC7B1I,KAAKsvU,QAAQlsU,OAAOsF,GACpB1I,KAAK8vT,MAAM1sT,OAAOsF,GAClB1I,KAAKuvU,cAAgBJ,EAA2BzmU,GAChD1I,KAAKwvU,UAAYthU,EAAA,EAAexF,EAAIwF,EAAA,GAKrC9N,MAAOuI,GASN,OARIA,IACHA,EAAS,IAAIymU,GAEVpvU,KAAKqvU,mBAAoB1mU,EAAO0mU,iBAAmBrvU,KAAKqvU,iBAAiBlmU,SACzEnJ,KAAKsvU,UAAW3mU,EAAO2mU,QAAUtvU,KAAKsvU,QAAQnmU,SAC9CnJ,KAAK8vT,QAASnnT,EAAOmnT,MAAQ9vT,KAAK8vT,MAAM3mT,SAC5CR,EAAO4mU,cAAgBvvU,KAAKuvU,cAC5B5mU,EAAO6mU,UAAYthU,EAAA,EAAclO,KAAKwvU,WAC/B7mU,GCjCH,SAAA8mU,EAA4BxuU,GAI9B,IAFA,IAAgBtR,EAAZq/U,EAAS,EACTt/U,EAAI8B,KAAKY,IAAI,EAAG6O,EAAK3L,QAChBhG,EAAI,EAAGA,EAAII,EAAGJ,IAAK,CAGxB,GAAU,KAFVK,EAAIsR,EAAKzE,WAAWlN,IAGhB,OAAO0/U,EAEXA,GAAU,IACVA,GAAUr/U,EAEd,OAAOq/U,EAGL,SAAAU,EAA4BC,EAAiBC,EAAmBC,GAElE,OAAO,IAAI/gV,QAAQs8C,eACf4jS,OAAQlgV,QAAQ2gV,iBAAiBE,GACjCv3C,aAAc97Q,KAAMszT,GACpB9vU,aAAcwc,KAAMuzT,KD4B5B7/U,OAAAme,EAAA,EAAAne,CAA0B,kBAAkBo/U,EAAiBp/U,OAAA8N,EAAA,EAAA9N,CAAmB,MAAM,ICtB/E,IAAI8/U,GACPC,OAAsBL,EAAkB,MAAO,IAAS,UACxDM,IAAsBN,EAAkB,MAAO,MAAS,mCACxDO,UAAsBP,EAAkB,MAAO,KAAS,6BACxDQ,cAAsBR,EAAkB,KAAM,MAAU,2BACxDS,cAAsBT,EAAkB,MAAO,MAAS,2BACxDU,MAAsBV,EAAkB,MAAO,KAAS,sBACxDW,mBAAsBX,EAAkB,MAAO,QAAS,sCACxDY,iBAAsBZ,EAAkB,MAAO,OAAS,+BACxDa,4BAA6Bb,EAAkB,KAAS,SAAU,+BAClEc,YAAsBd,EAAkB,MAAO,MAAS,eACxDe,qBAAsBf,EAAkB,MAAO,MAAS,gDACxDgB,OAAsBhB,EAAkB,KAAM,IAAU,0BACxDiB,eAAsBjB,EAAkB,MAAO,KAAS,kBACxDkB,kBAAsBlB,EAAkB,MAAO,KAAS,mCACxDmB,OAAsBnB,EAAkB,MAAO,IAAS,iBACxDoB,cAAsBpB,EAAkB,MAAO,MAAS,gBACxDqB,cAAsBrB,EAAkB,MAAO,KAAS,iBACxDsB,mBAAsBtB,EAAkB,MAAO,MAAS,sBACxDuB,mBAAsBvB,EAAkB,MAAO,MAAS,sBACxDwB,MAAsBxB,EAAkB,MAAO,IAAS,oCACxDyB,KAAsBzB,EAAkB,MAAO,IAAS,kBACxD0B,MAAsB1B,EAAkB,MAAO,IAAS,SACxD2B,UAAsB3B,EAAkB,MAAO,MAAS,0BACxD4B,MAAsB5B,EAAkB,MAAO,IAAS,SACxD6B,WAAsB7B,EAAkB,MAAO,KAAS,uBACxD8B,WAAsB9B,EAAkB,MAAO,KAAS,2BACxD+B,SAAsB/B,EAAkB,MAAO,KAAS,aACxDgC,OAAsBhC,EAAkB,MAAO,IAAS,uBAExDiC,QAAsBjC,EAAkB,KAAM,IAAU,iDACxDkC,MAAsBlC,EAAkB,MAAO,GAAS,gFACxDmC,KAAsBnC,EAAkB,MAAO,IAAS,QACxDoC,KAAsBpC,EAAkB,MAAO,IAAS,QACxDqC,OAAsBrC,EAAkB,MAAO,IAAS,UACxDsC,YAAsBtC,EAAkB,MAAO,KAAS,4BACxDuC,YAAsBvC,EAAkB,MAAO,KAAS,yCCnFtDwC,EAKL9xU,YAAaC,GACZA,EAAUA,MACVL,KAAKmyU,SAAW9xU,EAAgB,SAAIA,EAAQ8xU,SAAS,KACrDnyU,KAAKoyU,aAAe/xU,EAAoB,aAAIA,EAAQ+xU,aAAa,KACjEpyU,KAAKqyU,KAAOhyU,EAAY,KAAIA,EAAQgyU,KAAK,KAK1CjyU,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKmyU,SAASxqU,GAC9BuG,EAAA,GAAgBlO,KAAKoyU,aAAazqU,GAClCuG,EAAA,GAAclO,KAAKqyU,KAAK1qU,GAKzBvH,OAAQsI,GACP1I,KAAKmyU,SAAWjkU,EAAA,EAAgBxF,GAChC1I,KAAKoyU,aAAelkU,EAAA,EAAgBxF,GACpC1I,KAAKqyU,KAAOnkU,EAAA,EAAcxF,GAK3BtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIupU,GAEdvpU,EAAOwpU,SAAWnyU,KAAKmyU,SACvBxpU,EAAOypU,aAAepyU,KAAKoyU,aAC3BzpU,EAAO0pU,KAAOryU,KAAKqyU,KACZ1pU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,+BAA+BkiV,EAA8BliV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCzBxGsiV,EAiCLlyU,YAAaC,GACZA,EAAUA,MACVL,KAAK6iS,UAAYxiS,EAAiB,UAAIA,EAAQwiS,UAAU,KACxD7iS,KAAKsO,eAAiBjO,EAAsB,eAAIA,EAAQiO,eAAe,KACvEtO,KAAKiO,SAAW5N,EAAgB,SAAIA,EAAQ4N,SAAS,KACrDjO,KAAKuyU,mBAAqBlyU,EAA0B,mBAAIA,EAAQkyU,mBAAmB,KACnFvyU,KAAK69S,kBAAoBx9S,EAAyB,kBAAIA,EAAQw9S,kBAAkB,KAChF79S,KAAKwyU,iBAAmBnyU,EAAwB,iBAAIA,EAAQmyU,iBAAiB,KAC7ExyU,KAAK+N,2BAA6B1N,EAAkC,2BAAIA,EAAQ0N,2BAA2B,KAC3G/N,KAAKgO,kBAAoB3N,EAAyB,kBAAIA,EAAQ2N,kBAAkB,KAChFhO,KAAKyyU,YAAcpyU,EAAmB,YAAIA,EAAQoyU,YAAY,KAC9DzyU,KAAK0yU,YAAcryU,EAAmB,YAAIA,EAAQqyU,YAAY,KAC9D1yU,KAAK2yU,aAAetyU,EAAoB,aAAIA,EAAQsyU,aAAa,KACjE3yU,KAAK4yU,sBAAwBvyU,EAA6B,sBAAIA,EAAQuyU,sBAAsB,KAC5F5yU,KAAK6yU,6BAA+BxyU,EAAoC,6BAAIA,EAAQwyU,6BAA6B,KACjH7yU,KAAK8yU,sBAAwBzyU,EAA6B,sBAAIA,EAAQyyU,sBAAsB,KAC5F9yU,KAAK+yU,qBAAuB1yU,EAA4B,qBAAIA,EAAQ0yU,qBAAqB,KACzF/yU,KAAKgzU,4BAA8B3yU,EAAmC,4BAAIA,EAAQ2yU,4BAA4B,KAC9GhzU,KAAKizU,6BAA+B5yU,EAAoC,6BAAIA,EAAQ4yU,6BAA6B,KACjHjzU,KAAKkzU,oBAAsB7yU,EAA2B,oBAAIA,EAAQ6yU,oBAAoB,KACtFlzU,KAAKmzU,6BAA+B9yU,EAAoC,6BAAIA,EAAQ8yU,6BAA6B,KACjHnzU,KAAKozU,wBAA0B/yU,EAA+B,wBAAIA,EAAQ+yU,wBAAwB,KAClGpzU,KAAKqzU,mBAAqBhzU,EAA0B,mBAAIA,EAAQgzU,mBAAmB,KACnFrzU,KAAKszU,wBAA0BjzU,EAA+B,wBAAIA,EAAQizU,wBAAwB,KAClGtzU,KAAKuzU,sBAAwBlzU,EAA6B,sBAAIA,EAAQkzU,sBAAsB,KAC5FvzU,KAAKwzU,qBAAuBnzU,EAA4B,qBAAIA,EAAQmzU,qBAAqB,KACzFxzU,KAAKyzU,2BAA6BpzU,EAAkC,2BAAIA,EAAQozU,2BAA2B,KAC3GzzU,KAAK0zU,sBAAwBrzU,EAA6B,sBAAIA,EAAQqzU,sBAAsB,KAC5F1zU,KAAK2zU,mBAAqBtzU,EAA0B,mBAAIA,EAAQszU,mBAAmB,KACnF3zU,KAAK4zU,2BAA6BvzU,EAAkC,2BAAIA,EAAQuzU,2BAA2B,KAC3G5zU,KAAK6zU,6BAA+BxzU,EAAoC,6BAAIA,EAAQwzU,6BAA6B,KACjH7zU,KAAK8zU,mBAAqBzzU,EAA0B,mBAAIA,EAAQyzU,mBAAmB,KACnF9zU,KAAK+zU,wBAA0B1zU,EAA+B,wBAAIA,EAAQ0zU,wBAAwB,KAKnG3zU,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAK6iS,UAAUl7R,GAC/BuG,EAAA,GAAgBlO,KAAKsO,eAAe3G,GACpCuG,EAAA,GAAclO,KAAKiO,SAAStG,GAC5BuG,EAAA,GAAgBlO,KAAKuyU,mBAAmB5qU,GACxCuG,EAAA,GAAgBlO,KAAK69S,kBAAkBl2S,GACvCuG,EAAA,GAAgBlO,KAAKwyU,iBAAiB7qU,GACtCuG,EAAA,GAAgBlO,KAAK+N,2BAA2BpG,GAChDuG,EAAA,GAAiBlO,KAAKgO,kBAAkBrG,GACxCuG,EAAA,GAAgBlO,KAAKyyU,YAAY9qU,GACjCuG,EAAA,GAAgBlO,KAAK0yU,YAAY/qU,GACjCuG,EAAA,GAAgBlO,KAAK2yU,aAAahrU,GAClCuG,EAAA,GAAgBlO,KAAK4yU,sBAAsBjrU,GAC3CuG,EAAA,GAAgBlO,KAAK6yU,6BAA6BlrU,GAClDuG,EAAA,GAAgBlO,KAAK8yU,sBAAsBnrU,GAC3CuG,EAAA,GAAgBlO,KAAK+yU,qBAAqBprU,GAC1CuG,EAAA,GAAgBlO,KAAKgzU,4BAA4BrrU,GACjDuG,EAAA,GAAgBlO,KAAKizU,6BAA6BtrU,GAClDuG,EAAA,GAAgBlO,KAAKkzU,oBAAoBvrU,GACzCuG,EAAA,GAAgBlO,KAAKmzU,6BAA6BxrU,GAClDuG,EAAA,GAAgBlO,KAAKozU,wBAAwBzrU,GAC7CuG,EAAA,GAAgBlO,KAAKqzU,mBAAmB1rU,GACxCuG,EAAA,GAAgBlO,KAAKszU,wBAAwB3rU,GAC7CuG,EAAA,GAAgBlO,KAAKuzU,sBAAsB5rU,GAC3CuG,EAAA,GAAgBlO,KAAKwzU,qBAAqB7rU,GAC1CuG,EAAA,GAAgBlO,KAAKyzU,2BAA2B9rU,GAChDuG,EAAA,GAAgBlO,KAAK0zU,sBAAsB/rU,GAC3CuG,EAAA,GAAgBlO,KAAK2zU,mBAAmBhsU,GACxCuG,EAAA,GAAgBlO,KAAK4zU,2BAA2BjsU,GAChDuG,EAAA,GAAgBlO,KAAK6zU,6BAA6BlsU,GAClDuG,EAAA,GAAgBlO,KAAK8zU,mBAAmBnsU,GACxCuG,EAAA,GAAgBlO,KAAK+zU,wBAAwBpsU,GAK9CvH,OAAQsI,GACP1I,KAAK6iS,UAAY30R,EAAA,EAAgBxF,GACjC1I,KAAKsO,eAAiBJ,EAAA,EAAgBxF,GACtC1I,KAAKiO,SAAWC,EAAA,EAAcxF,GAC9B1I,KAAKuyU,mBAAqBrkU,EAAA,EAAgBxF,GAC1C1I,KAAK69S,kBAAoB3vS,EAAA,EAAgBxF,GACzC1I,KAAKwyU,iBAAmBtkU,EAAA,EAAgBxF,GACxC1I,KAAK+N,2BAA6BG,EAAA,EAAgBxF,GAClD1I,KAAKgO,kBAAoBE,EAAA,EAAiBxF,GAC1C1I,KAAKyyU,YAAcvkU,EAAA,EAAgBxF,GACnC1I,KAAK0yU,YAAcxkU,EAAA,EAAgBxF,GACnC1I,KAAK2yU,aAAezkU,EAAA,EAAgBxF,GACpC1I,KAAK4yU,sBAAwB1kU,EAAA,EAAgBxF,GAC7C1I,KAAK6yU,6BAA+B3kU,EAAA,EAAgBxF,GACpD1I,KAAK8yU,sBAAwB5kU,EAAA,EAAgBxF,GAC7C1I,KAAK+yU,qBAAuB7kU,EAAA,EAAgBxF,GAC5C1I,KAAKgzU,4BAA8B9kU,EAAA,EAAgBxF,GACnD1I,KAAKizU,6BAA+B/kU,EAAA,EAAgBxF,GACpD1I,KAAKkzU,oBAAsBhlU,EAAA,EAAgBxF,GAC3C1I,KAAKmzU,6BAA+BjlU,EAAA,EAAgBxF,GACpD1I,KAAKozU,wBAA0BllU,EAAA,EAAgBxF,GAC/C1I,KAAKqzU,mBAAqBnlU,EAAA,EAAgBxF,GAC1C1I,KAAKszU,wBAA0BplU,EAAA,EAAgBxF,GAC/C1I,KAAKuzU,sBAAwBrlU,EAAA,EAAgBxF,GAC7C1I,KAAKwzU,qBAAuBtlU,EAAA,EAAgBxF,GAC5C1I,KAAKyzU,2BAA6BvlU,EAAA,EAAgBxF,GAClD1I,KAAK0zU,sBAAwBxlU,EAAA,EAAgBxF,GAC7C1I,KAAK2zU,mBAAqBzlU,EAAA,EAAgBxF,GAC1C1I,KAAK4zU,2BAA6B1lU,EAAA,EAAgBxF,GAClD1I,KAAK6zU,6BAA+B3lU,EAAA,EAAgBxF,GACpD1I,KAAK8zU,mBAAqB5lU,EAAA,EAAgBxF,GAC1C1I,KAAK+zU,wBAA0B7lU,EAAA,EAAgBxF,GAKhDtI,MAAOuI,GAmCN,OAlCIA,IACHA,EAAS,IAAI2pU,GAEd3pU,EAAOk6R,UAAY7iS,KAAK6iS,UACxBl6R,EAAO2F,eAAiBtO,KAAKsO,eAC7B3F,EAAOsF,SAAWjO,KAAKiO,SACvBtF,EAAO4pU,mBAAqBvyU,KAAKuyU,mBACjC5pU,EAAOk1S,kBAAoB79S,KAAK69S,kBAChCl1S,EAAO6pU,iBAAmBxyU,KAAKwyU,iBAC/B7pU,EAAOoF,2BAA6B/N,KAAK+N,2BACzCpF,EAAOqF,kBAAoBhO,KAAKgO,kBAChCrF,EAAO8pU,YAAczyU,KAAKyyU,YAC1B9pU,EAAO+pU,YAAc1yU,KAAK0yU,YAC1B/pU,EAAOgqU,aAAe3yU,KAAK2yU,aAC3BhqU,EAAOiqU,sBAAwB5yU,KAAK4yU,sBACpCjqU,EAAOkqU,6BAA+B7yU,KAAK6yU,6BAC3ClqU,EAAOmqU,sBAAwB9yU,KAAK8yU,sBACpCnqU,EAAOoqU,qBAAuB/yU,KAAK+yU,qBACnCpqU,EAAOqqU,4BAA8BhzU,KAAKgzU,4BAC1CrqU,EAAOsqU,6BAA+BjzU,KAAKizU,6BAC3CtqU,EAAOuqU,oBAAsBlzU,KAAKkzU,oBAClCvqU,EAAOwqU,6BAA+BnzU,KAAKmzU,6BAC3CxqU,EAAOyqU,wBAA0BpzU,KAAKozU,wBACtCzqU,EAAO0qU,mBAAqBrzU,KAAKqzU,mBACjC1qU,EAAO2qU,wBAA0BtzU,KAAKszU,wBACtC3qU,EAAO4qU,sBAAwBvzU,KAAKuzU,sBACpC5qU,EAAO6qU,qBAAuBxzU,KAAKwzU,qBACnC7qU,EAAO8qU,2BAA6BzzU,KAAKyzU,2BACzC9qU,EAAO+qU,sBAAwB1zU,KAAK0zU,sBACpC/qU,EAAOgrU,mBAAqB3zU,KAAK2zU,mBACjChrU,EAAOirU,2BAA6B5zU,KAAK4zU,2BACzCjrU,EAAOkrU,6BAA+B7zU,KAAK6zU,6BAC3ClrU,EAAOmrU,mBAAqB9zU,KAAK8zU,mBACjCnrU,EAAOorU,wBAA0B/zU,KAAK+zU,wBAC/BprU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,kCAAkCsiV,EAAiCtiV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBC5N9GgkV,EAKL5zU,YAAaC,GACZA,EAAUA,MACVL,KAAKi0U,SAAW5zU,EAAgB,SAAIA,EAAQ4zU,SAAS,KACrDj0U,KAAKk0U,aAAe7zU,EAAoB,aAAIA,EAAQ6zU,aAAa,KACjEl0U,KAAKm0U,YAAc9zU,EAAmB,YAAIA,EAAQ8zU,YAAY,KAK/D/zU,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKi0U,SAAStsU,GAC9BuG,EAAA,GAAclO,KAAKk0U,aAAavsU,GAChC3X,OAAAy6C,EAAA,EAAAz6C,CAAkBgQ,KAAKm0U,YAAYxsU,GAKpCvH,OAAQsI,GACP1I,KAAKi0U,SAAW/lU,EAAA,EAAgBxF,GAChC1I,KAAKk0U,aAAehmU,EAAA,EAAcxF,GAClC1I,KAAKm0U,YAAcnkV,OAAAy6C,EAAA,EAAAz6C,CAAkB0Y,GAKtCtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAIqrU,GAEdrrU,EAAOsrU,SAAWj0U,KAAKi0U,SACvBtrU,EAAOurU,aAAel0U,KAAKk0U,aAC3BvrU,EAAOwrU,YAAcn0U,KAAKm0U,YACnBxrU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,0BAA0BgkV,EAAyBhkV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCrD9FokV,EAMLh0U,YAAaC,GACZA,EAAUA,MACVL,KAAK80R,iBAAmBz0R,EAAwB,iBAAIA,EAAQy0R,iBAAiB,KAC7E90R,KAAK2zU,mBAAqBtzU,EAA0B,mBAAIA,EAAQszU,mBAAmB,KACnF3zU,KAAKq0U,sBAAwBh0U,EAA6B,sBAAIA,EAAQg0U,sBAAsB,KAC5Fr0U,KAAK4zU,2BAA6BvzU,EAAkC,2BAAIA,EAAQuzU,2BAA2B,KAK5GxzU,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAK80R,iBAAiBntR,GACtCuG,EAAA,GAAgBlO,KAAK2zU,mBAAmBhsU,GACxCuG,EAAA,GAAgBlO,KAAKq0U,sBAAsB1sU,GAC3CuG,EAAA,GAAgBlO,KAAK4zU,2BAA2BjsU,GAKjDvH,OAAQsI,GACP1I,KAAK80R,iBAAmB5mR,EAAA,EAAgBxF,GACxC1I,KAAK2zU,mBAAqBzlU,EAAA,EAAgBxF,GAC1C1I,KAAKq0U,sBAAwBnmU,EAAA,EAAgBxF,GAC7C1I,KAAK4zU,2BAA6B1lU,EAAA,EAAgBxF,GAKnDtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIyrU,GAEdzrU,EAAOmsR,iBAAmB90R,KAAK80R,iBAC/BnsR,EAAOgrU,mBAAqB3zU,KAAK2zU,mBACjChrU,EAAO0rU,sBAAwBr0U,KAAKq0U,sBACpC1rU,EAAOirU,2BAA6B5zU,KAAK4zU,2BAClCjrU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,sCAAsCokV,EAAqCpkV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC5DtHskV,EAILl0U,YAAaC,GACZA,EAAUA,MACVL,KAAKmyU,SAAW9xU,EAAgB,SAAIA,EAAQ8xU,SAAS,KACrDnyU,KAAKoyU,aAAe/xU,EAAoB,aAAIA,EAAQ+xU,aAAa,KAKlEhyU,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKmyU,SAASxqU,GAC9BuG,EAAA,GAAgBlO,KAAKoyU,aAAazqU,GAKnCvH,OAAQsI,GACP1I,KAAKmyU,SAAWjkU,EAAA,EAAgBxF,GAChC1I,KAAKoyU,aAAelkU,EAAA,EAAgBxF,GAKrCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI2rU,GAEd3rU,EAAOwpU,SAAWnyU,KAAKmyU,SACvBxpU,EAAOypU,aAAepyU,KAAKoyU,aACpBzpU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,kCAAkCskV,EAAiCtkV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCtC9GukV,EAcLn0U,YAAaC,GACZA,EAAUA,MACVL,KAAKw0U,gBAAkBn0U,EAAuB,gBAAIA,EAAQm0U,gBAAgB,KAC1Ex0U,KAAKy0U,oBAAsBp0U,EAA2B,oBAAIA,EAAQo0U,oBAAoB,KACtFz0U,KAAK00U,sBAAwBr0U,EAA6B,sBAAIA,EAAQq0U,sBAAsB,KAC5F10U,KAAK20U,6BAA+Bt0U,EAAoC,6BAAIA,EAAQs0U,6BAA6B,KACjH30U,KAAK40U,qBAAuBv0U,EAA4B,qBAAIA,EAAQu0U,qBAAqB,KACzF50U,KAAK60U,oBAAsBx0U,EAA2B,oBAAIA,EAAQw0U,oBAAoB,KACtF70U,KAAK80U,kBAAoBz0U,EAAyB,kBAAIA,EAAQy0U,kBAAkB,KAChF90U,KAAK+0U,yBAA2B10U,EAAgC,yBAAIA,EAAQ00U,yBAAyB,KACrG/0U,KAAKg1U,2BAA6B30U,EAAkC,2BAAIA,EAAQ20U,2BAA2B,KAC3Gh1U,KAAKi1U,wBAA0B50U,EAA+B,wBAAIA,EAAQ40U,wBAAwB,KAClGj1U,KAAKk1U,8BAAgC70U,EAAqC,8BAAIA,EAAQ60U,8BAA8B,KACpHl1U,KAAKm1U,sBAAwB90U,EAA6B,sBAAIA,EAAQ80U,sBAAsB,KAK7F/0U,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKw0U,gBAAgB7sU,GACrCuG,EAAA,GAAgBlO,KAAKy0U,oBAAoB9sU,GACzCuG,EAAA,GAAgBlO,KAAK00U,sBAAsB/sU,GAC3CuG,EAAA,GAAgBlO,KAAK20U,6BAA6BhtU,GAClDuG,EAAA,GAAgBlO,KAAK40U,qBAAqBjtU,GAC1CuG,EAAA,GAAgBlO,KAAK60U,oBAAoBltU,GACzCuG,EAAA,GAAgBlO,KAAK80U,kBAAkBntU,GACvCuG,EAAA,GAAgBlO,KAAK+0U,yBAAyBptU,GAC9CuG,EAAA,GAAgBlO,KAAKg1U,2BAA2BrtU,GAChDuG,EAAA,GAAgBlO,KAAKi1U,wBAAwBttU,GAC7CuG,EAAA,GAAgBlO,KAAKk1U,8BAA8BvtU,GACnDuG,EAAA,GAAgBlO,KAAKm1U,sBAAsBxtU,GAK5CvH,OAAQsI,GACP1I,KAAKw0U,gBAAkBtmU,EAAA,EAAgBxF,GACvC1I,KAAKy0U,oBAAsBvmU,EAAA,EAAgBxF,GAC3C1I,KAAK00U,sBAAwBxmU,EAAA,EAAgBxF,GAC7C1I,KAAK20U,6BAA+BzmU,EAAA,EAAgBxF,GACpD1I,KAAK40U,qBAAuB1mU,EAAA,EAAgBxF,GAC5C1I,KAAK60U,oBAAsB3mU,EAAA,EAAgBxF,GAC3C1I,KAAK80U,kBAAoB5mU,EAAA,EAAgBxF,GACzC1I,KAAK+0U,yBAA2B7mU,EAAA,EAAgBxF,GAChD1I,KAAKg1U,2BAA6B9mU,EAAA,EAAgBxF,GAClD1I,KAAKi1U,wBAA0B/mU,EAAA,EAAgBxF,GAC/C1I,KAAKk1U,8BAAgChnU,EAAA,EAAgBxF,GACrD1I,KAAKm1U,sBAAwBjnU,EAAA,EAAgBxF,GAK9CtI,MAAOuI,GAgBN,OAfIA,IACHA,EAAS,IAAI4rU,GAEd5rU,EAAO6rU,gBAAkBx0U,KAAKw0U,gBAC9B7rU,EAAO8rU,oBAAsBz0U,KAAKy0U,oBAClC9rU,EAAO+rU,sBAAwB10U,KAAK00U,sBACpC/rU,EAAOgsU,6BAA+B30U,KAAK20U,6BAC3ChsU,EAAOisU,qBAAuB50U,KAAK40U,qBACnCjsU,EAAOksU,oBAAsB70U,KAAK60U,oBAClClsU,EAAOmsU,kBAAoB90U,KAAK80U,kBAChCnsU,EAAOosU,yBAA2B/0U,KAAK+0U,yBACvCpsU,EAAOqsU,2BAA6Bh1U,KAAKg1U,2BACzCrsU,EAAOssU,wBAA0Bj1U,KAAKi1U,wBACtCtsU,EAAOusU,8BAAgCl1U,KAAKk1U,8BAC5CvsU,EAAOwsU,sBAAwBn1U,KAAKm1U,sBAC7BxsU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,mCAAmCukV,EAAkCvkV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCxGhHolV,EAQLh1U,YAAaC,GACZA,EAAUA,MACVL,KAAK0xR,WAAarxR,EAAkB,WAAIA,EAAQqxR,WAAW,KAC3D1xR,KAAKq1U,iBAAmBh1U,EAAwB,iBAAIA,EAAQg1U,iBAAiB,KAC7Er1U,KAAKs1U,YAAcj1U,EAAmB,YAAIA,EAAQi1U,YAAY,KAC9Dt1U,KAAKu1U,gBAAkBl1U,EAAuB,gBAAIA,EAAQk1U,gBAAgB,KAC1Ev1U,KAAKw1U,YAAcn1U,EAAmB,YAAIA,EAAQm1U,YAAY,KAC9Dx1U,KAAKy1U,UAAYp1U,EAAiB,UAAIA,EAAQo1U,UAAU,KAKzDr1U,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAK0xR,WAAW/pR,GAChCuG,EAAA,GAAgBlO,KAAKq1U,iBAAiB1tU,GACtCuG,EAAA,GAAgBlO,KAAKs1U,YAAY3tU,GACjCuG,EAAA,GAAgBlO,KAAKu1U,gBAAgB5tU,GACrCuG,EAAA,GAAgBlO,KAAKw1U,YAAY7tU,GACjCuG,EAAA,GAAkBlO,KAAKy1U,UAAU9tU,GAKlCvH,OAAQsI,GACP1I,KAAK0xR,WAAaxjR,EAAA,EAAgBxF,GAClC1I,KAAKq1U,iBAAmBnnU,EAAA,EAAgBxF,GACxC1I,KAAKs1U,YAAcpnU,EAAA,EAAgBxF,GACnC1I,KAAKu1U,gBAAkBrnU,EAAA,EAAgBxF,GACvC1I,KAAKw1U,YAActnU,EAAA,EAAgBxF,GACnC1I,KAAKy1U,UAAYvnU,EAAA,EAAkBxF,GAKpCtI,MAAOuI,GAUN,OATIA,IACHA,EAAS,IAAIysU,GAEdzsU,EAAO+oR,WAAa1xR,KAAK0xR,WACzB/oR,EAAO0sU,iBAAmBr1U,KAAKq1U,iBAC/B1sU,EAAO2sU,YAAct1U,KAAKs1U,YAC1B3sU,EAAO4sU,gBAAkBv1U,KAAKu1U,gBAC9B5sU,EAAO6sU,YAAcx1U,KAAKw1U,YAC1B7sU,EAAO8sU,UAAYz1U,KAAKy1U,UACjB9sU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,YAAYolV,EAAWplV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCjElE0lV,EAQLt1U,YAAaC,GACZA,EAAUA,MACVL,KAAKwT,UAAYnT,EAAiB,UAAIA,EAAQmT,UAAU,KACxDxT,KAAK21U,YAAct1U,EAAmB,YAAIA,EAAQs1U,YAAY,KAC9D31U,KAAK4iS,MAAQviS,EAAa,MAAIA,EAAQuiS,MAAM,KAC5C5iS,KAAK41U,UAAYv1U,EAAiB,UAAIA,EAAQu1U,UAAU,IAAIR,EAC5Dp1U,KAAK61U,oBAAsBx1U,EAA2B,oBAAIA,EAAQw1U,oBAAoB,KACtF71U,KAAK81U,eAAiBz1U,EAAsB,eAAIA,EAAQy1U,eAAe,IAAIz5T,EAAA,EAK5Ejc,OAAQuH,GACPuG,EAAA,GAAkBlO,KAAKwT,UAAU7L,GACjCuG,EAAA,GAAkBlO,KAAK21U,YAAYhuU,GACnC3X,OAAAy6C,EAAA,EAAAz6C,CAAkBgQ,KAAK4iS,MAAMj7R,GAC7B3H,KAAK41U,UAAU3yU,OAAO0E,GACtBuG,EAAA,GAAgBlO,KAAK61U,oBAAoBluU,GACzC3H,KAAK81U,eAAe7yU,OAAO0E,GAK5BvH,OAAQsI,GACP1I,KAAKwT,UAAYtF,EAAA,EAAkBxF,GACnC1I,KAAK21U,YAAcznU,EAAA,EAAkBxF,GACrC1I,KAAK4iS,MAAQ5yS,OAAAy6C,EAAA,EAAAz6C,CAAkB0Y,GAC/B1I,KAAK41U,UAAUxyU,OAAOsF,GACtB1I,KAAK61U,oBAAsB3nU,EAAA,EAAgBxF,GAC3C1I,KAAK81U,eAAe1yU,OAAOsF,GAK5BtI,MAAOuI,GAUN,OATIA,IACHA,EAAS,IAAI+sU,GAEd/sU,EAAO6K,UAAYxT,KAAKwT,UACxB7K,EAAOgtU,YAAc31U,KAAK21U,YAC1BhtU,EAAOi6R,MAAQ5iS,KAAK4iS,MAChB5iS,KAAK41U,YAAajtU,EAAOitU,UAAY51U,KAAK41U,UAAUzsU,SACxDR,EAAOktU,oBAAsB71U,KAAK61U,oBAC9B71U,KAAK81U,iBAAkBntU,EAAOmtU,eAAiB91U,KAAK81U,eAAe3sU,SAChER,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,uBAAuB0lV,EAAsB1lV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC3ExF+lV,EAIL31U,YAAaC,GACZA,EAAUA,MACVL,KAAKg2U,WAAa31U,EAAkB,WAAIA,EAAQ21U,WAAW,KAC3Dh2U,KAAKi2U,WAAa51U,EAAkB,WAAIA,EAAQ41U,WAAW,KAK5D71U,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKg2U,WAAWruU,GAChCuG,EAAA,GAAgBlO,KAAKi2U,WAAWtuU,GAKjCvH,OAAQsI,GACP1I,KAAKg2U,WAAa9nU,EAAA,EAAgBxF,GAClC1I,KAAKi2U,WAAa/nU,EAAA,EAAgBxF,GAKnCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIotU,GAEdptU,EAAOqtU,WAAah2U,KAAKg2U,WACzBrtU,EAAOstU,WAAaj2U,KAAKi2U,WAClBttU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,yBAAyB+lV,EAAwB/lV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBCL5FkmV,EA6CL91U,YAAaC,GACZA,EAAUA,MACVL,KAAK6iS,UAAYxiS,EAAiB,UAAIA,EAAQwiS,UAAU,KACxD7iS,KAAKm2U,YAAc91U,EAAmB,YAAIA,EAAQ81U,YAAY,KAC9Dn2U,KAAKo2U,kBAAoB/1U,EAAyB,kBAAIA,EAAQ+1U,kBAAkB,IAAI91S,EAAA,EACpFtgC,KAAKq4S,UAAYh4S,EAAiB,UAAIA,EAAQg4S,UAAU,KACxDr4S,KAAKg9B,YAAc38B,EAAmB,YAAIA,EAAQ28B,YAAY,KAC9Dh9B,KAAKmzR,UAAY9yR,EAAiB,UAAIA,EAAQ8yR,aAC9CnzR,KAAKq2U,qBAAuBh2U,EAA4B,qBAAIA,EAAQg2U,qBAAqB,KACzFr2U,KAAKs2U,uBAAyBj2U,EAA8B,uBAAIA,EAAQi2U,uBAAuB,KAC/Ft2U,KAAKu2U,qBAAuBl2U,EAA4B,qBAAIA,EAAQk2U,qBAAqB,KACzFv2U,KAAKw2U,sBAAwBn2U,EAA6B,sBAAIA,EAAQm2U,sBAAsB,KAC5Fx2U,KAAKy2U,0BAA4Bp2U,EAAiC,0BAAIA,EAAQo2U,0BAA0B,KACxGz2U,KAAK02U,2BAA6Br2U,EAAkC,2BAAIA,EAAQq2U,2BAA2B,KAC3G12U,KAAK22U,8BAAgCt2U,EAAqC,8BAAIA,EAAQs2U,8BAA8B,KACpH32U,KAAK42U,kBAAoBv2U,EAAyB,kBAAIA,EAAQu2U,kBAAkB,IAAIb,EACpF/1U,KAAK62U,yBAA2Bx2U,EAAgC,yBAAIA,EAAQw2U,yBAAyB,KACrG72U,KAAK82U,UAAYz2U,EAAiB,UAAIA,EAAQy2U,UAAU,IAAIf,EAC5D/1U,KAAK+2U,iBAAmB12U,EAAwB,iBAAIA,EAAQ02U,iBAAiB,IAAIhB,EACjF/1U,KAAKg3U,WAAa32U,EAAkB,WAAIA,EAAQ22U,WAAW,IAAIjB,EAC/D/1U,KAAKi3U,mBAAqB52U,EAA0B,mBAAIA,EAAQ42U,mBAAmB,IAAIlB,EACvF/1U,KAAKk3U,UAAY72U,EAAiB,UAAIA,EAAQ62U,UAAU,IAAInB,EAC5D/1U,KAAKm3U,0BAA4B92U,EAAiC,0BAAIA,EAAQ82U,0BAA0B,IAAIpB,EAC5G/1U,KAAKo3U,0BAA4B/2U,EAAiC,0BAAIA,EAAQ+2U,0BAA0B,IAAIrB,EAC5G/1U,KAAKq3U,uBAAyBh3U,EAA8B,uBAAIA,EAAQg3U,uBAAuB,IAAItB,EACnG/1U,KAAKs3U,mBAAqBj3U,EAA0B,mBAAIA,EAAQi3U,mBAAmB,IAAIvB,EACvF/1U,KAAKu3U,0BAA4Bl3U,EAAiC,0BAAIA,EAAQk3U,0BAA0B,IAAIxB,EAC5G/1U,KAAKw3U,wBAA0Bn3U,EAA+B,wBAAIA,EAAQm3U,wBAAwB,IAAIzB,EACtG/1U,KAAKy3U,wBAA0Bp3U,EAA+B,wBAAIA,EAAQo3U,wBAAwB,IAAI1B,EACtG/1U,KAAK03U,uBAAyBr3U,EAA8B,uBAAIA,EAAQq3U,uBAAuB,IAAI3B,EACnG/1U,KAAK23U,aAAet3U,EAAoB,aAAIA,EAAQs3U,aAAa,IAAI5B,EACrE/1U,KAAK43U,eAAiBv3U,EAAsB,eAAIA,EAAQu3U,eAAe,IAAI7B,EAC3E/1U,KAAK63U,2BAA6Bx3U,EAAkC,2BAAIA,EAAQw3U,2BAA2B,IAAI9B,EAC/G/1U,KAAK83U,yBAA2Bz3U,EAAgC,yBAAIA,EAAQy3U,yBAAyB,IAAI/B,EACzG/1U,KAAK+3U,cAAgB13U,EAAqB,cAAIA,EAAQ03U,cAAc,IAAIhC,EACxE/1U,KAAKg4U,mBAAqB33U,EAA0B,mBAAIA,EAAQ23U,mBAAmB,IAAIjC,EACvF/1U,KAAKi4U,iBAAmB53U,EAAwB,iBAAIA,EAAQ43U,iBAAiB,IAAIlC,EACjF/1U,KAAKk4U,sBAAwB73U,EAA6B,sBAAIA,EAAQ63U,sBAAsB,IAAInC,EAChG/1U,KAAKm4U,YAAc93U,EAAmB,YAAIA,EAAQ83U,YAAY,IAAIpC,EAClE/1U,KAAKo4U,gBAAkB/3U,EAAuB,gBAAIA,EAAQ+3U,gBAAgB,IAAIrC,EAC9E/1U,KAAKq4U,mCAAqCh4U,EAA0C,mCAAIA,EAAQg4U,mCAAmC,IAAItC,EACvI/1U,KAAKs4U,gBAAkBj4U,EAAuB,gBAAIA,EAAQi4U,gBAAgB,IAAIvC,EAC9E/1U,KAAKu4U,eAAiBl4U,EAAsB,eAAIA,EAAQk4U,eAAe,IAAIxC,EAC3E/1U,KAAKw4U,mBAAqBn4U,EAA0B,mBAAIA,EAAQm4U,mBAAmB,IAAIzC,EACvF/1U,KAAKy4U,qBAAuBp4U,EAA4B,qBAAIA,EAAQo4U,qBAAqB,IAAI1C,EAK9F31U,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAK6iS,UAAUl7R,GAC/BuG,EAAA,GAAgBlO,KAAKm2U,YAAYxuU,GACjC3H,KAAKo2U,kBAAkBnzU,OAAO0E,GAC9BuG,EAAA,GAAgBlO,KAAKq4S,UAAU1wS,GAC/BuG,EAAA,GAAgBlO,KAAKg9B,YAAYr1B,GACjCuG,EAAA,EAAelO,KAAKmzR,UAAUxrR,EAAIuG,EAAA,IAClCA,EAAA,GAAgBlO,KAAKq2U,qBAAqB1uU,GAC1CuG,EAAA,GAAgBlO,KAAKs2U,uBAAuB3uU,GAC5CuG,EAAA,GAAkBlO,KAAKu2U,qBAAqB5uU,GAC5CuG,EAAA,GAAkBlO,KAAKw2U,sBAAsB7uU,GAC7CuG,EAAA,GAAgBlO,KAAKy2U,0BAA0B9uU,GAC/CuG,EAAA,GAAgBlO,KAAK02U,2BAA2B/uU,GAChDuG,EAAA,GAAgBlO,KAAK22U,8BAA8BhvU,GACnD3H,KAAK42U,kBAAkB3zU,OAAO0E,GAC9BuG,EAAA,GAAgBlO,KAAK62U,yBAAyBlvU,GAC9C3H,KAAK82U,UAAU7zU,OAAO0E,GACtB3H,KAAK+2U,iBAAiB9zU,OAAO0E,GAC7B3H,KAAKg3U,WAAW/zU,OAAO0E,GACvB3H,KAAKi3U,mBAAmBh0U,OAAO0E,GAC/B3H,KAAKk3U,UAAUj0U,OAAO0E,GACtB3H,KAAKm3U,0BAA0Bl0U,OAAO0E,GACtC3H,KAAKo3U,0BAA0Bn0U,OAAO0E,GACtC3H,KAAKq3U,uBAAuBp0U,OAAO0E,GACnC3H,KAAKs3U,mBAAmBr0U,OAAO0E,GAC/B3H,KAAKu3U,0BAA0Bt0U,OAAO0E,GACtC3H,KAAKw3U,wBAAwBv0U,OAAO0E,GACpC3H,KAAKy3U,wBAAwBx0U,OAAO0E,GACpC3H,KAAK03U,uBAAuBz0U,OAAO0E,GACnC3H,KAAK23U,aAAa10U,OAAO0E,GACzB3H,KAAK43U,eAAe30U,OAAO0E,GAC3B3H,KAAK63U,2BAA2B50U,OAAO0E,GACvC3H,KAAK83U,yBAAyB70U,OAAO0E,GACrC3H,KAAK+3U,cAAc90U,OAAO0E,GAC1B3H,KAAKg4U,mBAAmB/0U,OAAO0E,GAC/B3H,KAAKi4U,iBAAiBh1U,OAAO0E,GAC7B3H,KAAKk4U,sBAAsBj1U,OAAO0E,GAClC3H,KAAKm4U,YAAYl1U,OAAO0E,GACxB3H,KAAKo4U,gBAAgBn1U,OAAO0E,GAC5B3H,KAAKq4U,mCAAmCp1U,OAAO0E,GAC/C3H,KAAKs4U,gBAAgBr1U,OAAO0E,GAC5B3H,KAAKu4U,eAAet1U,OAAO0E,GAC3B3H,KAAKw4U,mBAAmBv1U,OAAO0E,GAC/B3H,KAAKy4U,qBAAqBx1U,OAAO0E,GAKlCvH,OAAQsI,GACP1I,KAAK6iS,UAAY30R,EAAA,EAAgBxF,GACjC1I,KAAKm2U,YAAcjoU,EAAA,EAAgBxF,GACnC1I,KAAKo2U,kBAAkBhzU,OAAOsF,GAC9B1I,KAAKq4S,UAAYnqS,EAAA,EAAgBxF,GACjC1I,KAAKg9B,YAAc9uB,EAAA,EAAgBxF,GACnC1I,KAAKmzR,UAAYjlR,EAAA,EAAexF,EAAIwF,EAAA,GACpClO,KAAKq2U,qBAAuBnoU,EAAA,EAAgBxF,GAC5C1I,KAAKs2U,uBAAyBpoU,EAAA,EAAgBxF,GAC9C1I,KAAKu2U,qBAAuBroU,EAAA,EAAkBxF,GAC9C1I,KAAKw2U,sBAAwBtoU,EAAA,EAAkBxF,GAC/C1I,KAAKy2U,0BAA4BvoU,EAAA,EAAgBxF,GACjD1I,KAAK02U,2BAA6BxoU,EAAA,EAAgBxF,GAClD1I,KAAK22U,8BAAgCzoU,EAAA,EAAgBxF,GACrD1I,KAAK42U,kBAAkBxzU,OAAOsF,GAC9B1I,KAAK62U,yBAA2B3oU,EAAA,EAAgBxF,GAChD1I,KAAK82U,UAAU1zU,OAAOsF,GACtB1I,KAAK+2U,iBAAiB3zU,OAAOsF,GAC7B1I,KAAKg3U,WAAW5zU,OAAOsF,GACvB1I,KAAKi3U,mBAAmB7zU,OAAOsF,GAC/B1I,KAAKk3U,UAAU9zU,OAAOsF,GACtB1I,KAAKm3U,0BAA0B/zU,OAAOsF,GACtC1I,KAAKo3U,0BAA0Bh0U,OAAOsF,GACtC1I,KAAKq3U,uBAAuBj0U,OAAOsF,GACnC1I,KAAKs3U,mBAAmBl0U,OAAOsF,GAC/B1I,KAAKu3U,0BAA0Bn0U,OAAOsF,GACtC1I,KAAKw3U,wBAAwBp0U,OAAOsF,GACpC1I,KAAKy3U,wBAAwBr0U,OAAOsF,GACpC1I,KAAK03U,uBAAuBt0U,OAAOsF,GACnC1I,KAAK23U,aAAav0U,OAAOsF,GACzB1I,KAAK43U,eAAex0U,OAAOsF,GAC3B1I,KAAK63U,2BAA2Bz0U,OAAOsF,GACvC1I,KAAK83U,yBAAyB10U,OAAOsF,GACrC1I,KAAK+3U,cAAc30U,OAAOsF,GAC1B1I,KAAKg4U,mBAAmB50U,OAAOsF,GAC/B1I,KAAKi4U,iBAAiB70U,OAAOsF,GAC7B1I,KAAKk4U,sBAAsB90U,OAAOsF,GAClC1I,KAAKm4U,YAAY/0U,OAAOsF,GACxB1I,KAAKo4U,gBAAgBh1U,OAAOsF,GAC5B1I,KAAKq4U,mCAAmCj1U,OAAOsF,GAC/C1I,KAAKs4U,gBAAgBl1U,OAAOsF,GAC5B1I,KAAKu4U,eAAen1U,OAAOsF,GAC3B1I,KAAKw4U,mBAAmBp1U,OAAOsF,GAC/B1I,KAAKy4U,qBAAqBr1U,OAAOsF,GAKlCtI,MAAOuI,GA+CN,OA9CIA,IACHA,EAAS,IAAIutU,GAEdvtU,EAAOk6R,UAAY7iS,KAAK6iS,UACxBl6R,EAAOwtU,YAAcn2U,KAAKm2U,YACtBn2U,KAAKo2U,oBAAqBztU,EAAOytU,kBAAoBp2U,KAAKo2U,kBAAkBjtU,SAChFR,EAAO0vS,UAAYr4S,KAAKq4S,UACxB1vS,EAAOq0B,YAAch9B,KAAKg9B,YAC1Br0B,EAAOwqR,UAAYjlR,EAAA,EAAclO,KAAKmzR,WACtCxqR,EAAO0tU,qBAAuBr2U,KAAKq2U,qBACnC1tU,EAAO2tU,uBAAyBt2U,KAAKs2U,uBACrC3tU,EAAO4tU,qBAAuBv2U,KAAKu2U,qBACnC5tU,EAAO6tU,sBAAwBx2U,KAAKw2U,sBACpC7tU,EAAO8tU,0BAA4Bz2U,KAAKy2U,0BACxC9tU,EAAO+tU,2BAA6B12U,KAAK02U,2BACzC/tU,EAAOguU,8BAAgC32U,KAAK22U,8BACxC32U,KAAK42U,oBAAqBjuU,EAAOiuU,kBAAoB52U,KAAK42U,kBAAkBztU,SAChFR,EAAOkuU,yBAA2B72U,KAAK62U,yBACnC72U,KAAK82U,YAAanuU,EAAOmuU,UAAY92U,KAAK82U,UAAU3tU,SACpDnJ,KAAK+2U,mBAAoBpuU,EAAOouU,iBAAmB/2U,KAAK+2U,iBAAiB5tU,SACzEnJ,KAAKg3U,aAAcruU,EAAOquU,WAAah3U,KAAKg3U,WAAW7tU,SACvDnJ,KAAKi3U,qBAAsBtuU,EAAOsuU,mBAAqBj3U,KAAKi3U,mBAAmB9tU,SAC/EnJ,KAAKk3U,YAAavuU,EAAOuuU,UAAYl3U,KAAKk3U,UAAU/tU,SACpDnJ,KAAKm3U,4BAA6BxuU,EAAOwuU,0BAA4Bn3U,KAAKm3U,0BAA0BhuU,SACpGnJ,KAAKo3U,4BAA6BzuU,EAAOyuU,0BAA4Bp3U,KAAKo3U,0BAA0BjuU,SACpGnJ,KAAKq3U,yBAA0B1uU,EAAO0uU,uBAAyBr3U,KAAKq3U,uBAAuBluU,SAC3FnJ,KAAKs3U,qBAAsB3uU,EAAO2uU,mBAAqBt3U,KAAKs3U,mBAAmBnuU,SAC/EnJ,KAAKu3U,4BAA6B5uU,EAAO4uU,0BAA4Bv3U,KAAKu3U,0BAA0BpuU,SACpGnJ,KAAKw3U,0BAA2B7uU,EAAO6uU,wBAA0Bx3U,KAAKw3U,wBAAwBruU,SAC9FnJ,KAAKy3U,0BAA2B9uU,EAAO8uU,wBAA0Bz3U,KAAKy3U,wBAAwBtuU,SAC9FnJ,KAAK03U,yBAA0B/uU,EAAO+uU,uBAAyB13U,KAAK03U,uBAAuBvuU,SAC3FnJ,KAAK23U,eAAgBhvU,EAAOgvU,aAAe33U,KAAK23U,aAAaxuU,SAC7DnJ,KAAK43U,iBAAkBjvU,EAAOivU,eAAiB53U,KAAK43U,eAAezuU,SACnEnJ,KAAK63U,6BAA8BlvU,EAAOkvU,2BAA6B73U,KAAK63U,2BAA2B1uU,SACvGnJ,KAAK83U,2BAA4BnvU,EAAOmvU,yBAA2B93U,KAAK83U,yBAAyB3uU,SACjGnJ,KAAK+3U,gBAAiBpvU,EAAOovU,cAAgB/3U,KAAK+3U,cAAc5uU,SAChEnJ,KAAKg4U,qBAAsBrvU,EAAOqvU,mBAAqBh4U,KAAKg4U,mBAAmB7uU,SAC/EnJ,KAAKi4U,mBAAoBtvU,EAAOsvU,iBAAmBj4U,KAAKi4U,iBAAiB9uU,SACzEnJ,KAAKk4U,wBAAyBvvU,EAAOuvU,sBAAwBl4U,KAAKk4U,sBAAsB/uU,SACxFnJ,KAAKm4U,cAAexvU,EAAOwvU,YAAcn4U,KAAKm4U,YAAYhvU,SAC1DnJ,KAAKo4U,kBAAmBzvU,EAAOyvU,gBAAkBp4U,KAAKo4U,gBAAgBjvU,SACtEnJ,KAAKq4U,qCAAsC1vU,EAAO0vU,mCAAqCr4U,KAAKq4U,mCAAmClvU,SAC/HnJ,KAAKs4U,kBAAmB3vU,EAAO2vU,gBAAkBt4U,KAAKs4U,gBAAgBnvU,SACtEnJ,KAAKu4U,iBAAkB5vU,EAAO4vU,eAAiBv4U,KAAKu4U,eAAepvU,SACnEnJ,KAAKw4U,qBAAsB7vU,EAAO6vU,mBAAqBx4U,KAAKw4U,mBAAmBrvU,SAC/EnJ,KAAKy4U,uBAAwB9vU,EAAO8vU,qBAAuBz4U,KAAKy4U,qBAAqBtvU,SAClFR,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,6BAA6BkmV,EAA4BlmV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,sBChSpG0oV,EAWLt4U,YAAaC,GACZA,EAAUA,MACVL,KAAK6iS,UAAYxiS,EAAiB,UAAIA,EAAQwiS,UAAU,KACxD7iS,KAAK24U,sBAAwBt4U,EAA6B,sBAAIA,EAAQs4U,sBAAsB,KAC5F34U,KAAK44U,oBAAsBv4U,EAA2B,oBAAIA,EAAQu4U,uBAClE54U,KAAK64U,wBAA0Bx4U,EAA+B,wBAAIA,EAAQw4U,wBAAwB,KAClG74U,KAAK2kU,SAAWtkU,EAAgB,SAAIA,EAAQskU,SAAS,KACrD3kU,KAAK84U,kBAAoBz4U,EAAyB,kBAAIA,EAAQy4U,kBAAkB,KAChF94U,KAAKmY,aAAe9X,EAAoB,aAAIA,EAAQ8X,aAAa,KACjEnY,KAAKgZ,kBAAoB3Y,EAAyB,kBAAIA,EAAQ2Y,kBAAkB,KAChFhZ,KAAK+4U,kBAAoB14U,EAAyB,kBAAIA,EAAQ04U,kBAAkB,KAKjF34U,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAK6iS,UAAUl7R,GAC/BuG,EAAA,GAAgBlO,KAAK24U,sBAAsBhxU,GAC3CuG,EAAA,EAAelO,KAAK44U,oBAAoBjxU,EAAIuG,EAAA,IAC5CA,EAAA,GAAgBlO,KAAK64U,wBAAwBlxU,GAC7CuG,EAAA,GAAgBlO,KAAK2kU,SAASh9T,GAC9BuG,EAAA,GAAgBlO,KAAK84U,kBAAkBnxU,GACvC3X,OAAAsoB,EAAA,EAAAtoB,CAA0BgQ,KAAKmY,aAAaxQ,GAC5CuG,EAAA,GAAgBlO,KAAKgZ,kBAAkBrR,GACvCuG,EAAA,GAAoBlO,KAAK+4U,kBAAkBpxU,GAK5CvH,OAAQsI,GACP1I,KAAK6iS,UAAY30R,EAAA,EAAgBxF,GACjC1I,KAAK24U,sBAAwBzqU,EAAA,EAAgBxF,GAC7C1I,KAAK44U,oBAAsB1qU,EAAA,EAAexF,EAAIwF,EAAA,GAC9ClO,KAAK64U,wBAA0B3qU,EAAA,EAAgBxF,GAC/C1I,KAAK2kU,SAAWz2T,EAAA,EAAgBxF,GAChC1I,KAAK84U,kBAAoB5qU,EAAA,EAAgBxF,GACzC1I,KAAKmY,aAAenoB,OAAAsoB,EAAA,EAAAtoB,CAA0B0Y,GAC9C1I,KAAKgZ,kBAAoB9K,EAAA,EAAgBxF,GACzC1I,KAAK+4U,kBAAoB7qU,EAAA,EAAoBxF,GAK9CtI,MAAOuI,GAaN,OAZIA,IACHA,EAAS,IAAI+vU,GAEd/vU,EAAOk6R,UAAY7iS,KAAK6iS,UACxBl6R,EAAOgwU,sBAAwB34U,KAAK24U,sBACpChwU,EAAOiwU,oBAAsB1qU,EAAA,EAAclO,KAAK44U,qBAChDjwU,EAAOkwU,wBAA0B74U,KAAK64U,wBACtClwU,EAAOg8T,SAAW3kU,KAAK2kU,SACvBh8T,EAAOmwU,kBAAoB94U,KAAK84U,kBAChCnwU,EAAOwP,aAAenY,KAAKmY,aAC3BxP,EAAOqQ,kBAAoBhZ,KAAKgZ,kBAChCrQ,EAAOowU,kBAAoB/4U,KAAK+4U,kBACzBpwU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,qCAAqC0oV,EAAoC1oV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,eCtGtHgpV,EAAkB9pV,OAAO6iU,QAAgB7iU,OAAQ8iU,SAG/C,SAAAinB,EAA6B/7S,EAAmBg8S,GAMlD,IACI9nV,EADA+nV,EAAgBj8S,EAepB,OAVI9rC,EAHA+nV,EAAc7jV,OAAS,EAAI4jV,EAAO5jV,QAAS,GAGlC0jV,EAAOI,OAAOC,OAAO,MActC,SAA0Bj9U,GAEzB,IADA,IAAIy5S,EAAQ,IAAIj6S,WAAWQ,EAAI9G,QACvBhG,EAAI,EAAGA,EAAI8M,EAAI9G,OAAQhG,IAC9BumT,EAAMvmT,GAAK8M,EAAII,WAAWlN,GAE3B,OAAOumT,EAAMv/R,OAnB8BgjU,CAAgBp8S,IAAWnH,KAAMxlC,GAAQyoV,EAAOI,OAAOC,OAAO,MAAM9oV,IAAQwlC,KAAMxlC,IAsB9H,SAAyB+L,GAErB,IADA,IAAIF,EAAM,GACD9M,EAAE,EAAGA,EAAIgN,EAAIoL,WAAYpY,IAC9B8M,GAAOE,EAAIhN,GAGf,OAAO8M,GA5B4Hm9U,CAAgBhpV,GAAO+P,OAAO,EAAE,KAE3J,IAAIk5U,QAASC,IAAcA,EAAQN,MAGzCpjT,KAAMxlC,IACJ,IAAImpV,EAAiB,OAASP,EAAgB,IAAMD,EAEpD,OADAlpV,OAAAkD,EAAA,EAAAlD,CAAO0pV,EAAepkV,QAAU,IACzBokV,IAEJtoV,mDCJLuoV,EAWLv5U,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKo2U,kBAAoB/1U,EAAyB,kBAAIA,EAAQ+1U,kBAAkB,IAAI91S,EAAA,EACpFtgC,KAAKq4S,UAAYh4S,EAAiB,UAAIA,EAAQg4S,UAAU,KACxDr4S,KAAKg9B,YAAc38B,EAAmB,YAAIA,EAAQ28B,YAAY,KAC9Dh9B,KAAKm2U,YAAc91U,EAAmB,YAAIA,EAAQ81U,YAAY,KAC9Dn2U,KAAKoY,YAAc/X,EAAmB,YAAIA,EAAQ+X,YAAY,KAC9DpY,KAAK+4U,kBAAoB14U,EAAyB,kBAAIA,EAAQ04U,kBAAkB,KAChF/4U,KAAK45U,wBAA0Bv5U,EAA+B,wBAAIA,EAAQu5U,wBAAwB,KAClG55U,KAAKs2U,uBAAyBj2U,EAA8B,uBAAIA,EAAQi2U,uBAAuB,KAKhGl2U,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1B3H,KAAKo2U,kBAAkBnzU,OAAO0E,GAC9BuG,EAAA,GAAgBlO,KAAKq4S,UAAU1wS,GAC/BuG,EAAA,GAAgBlO,KAAKg9B,YAAYr1B,GACjCuG,EAAA,GAAgBlO,KAAKm2U,YAAYxuU,GACjCuG,EAAA,GAAoBlO,KAAKoY,YAAYzQ,GACrCuG,EAAA,GAAoBlO,KAAK+4U,kBAAkBpxU,GAC3CuG,EAAA,GAAgBlO,KAAK45U,wBAAwBjyU,GAC7CuG,EAAA,GAAgBlO,KAAKs2U,uBAAuB3uU,GAK7CvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKo2U,kBAAkBhzU,OAAOsF,GAC9B1I,KAAKq4S,UAAYnqS,EAAA,EAAgBxF,GACjC1I,KAAKg9B,YAAc9uB,EAAA,EAAgBxF,GACnC1I,KAAKm2U,YAAcjoU,EAAA,EAAgBxF,GACnC1I,KAAKoY,YAAclK,EAAA,EAAoBxF,GACvC1I,KAAK+4U,kBAAoB7qU,EAAA,EAAoBxF,GAC7C1I,KAAK45U,wBAA0B1rU,EAAA,EAAgBxF,GAC/C1I,KAAKs2U,uBAAyBpoU,EAAA,EAAgBxF,GAK/CtI,MAAOuI,GAaN,OAZIA,IACHA,EAAS,IAAIgxU,GAEV35U,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAChEnJ,KAAKo2U,oBAAqBztU,EAAOytU,kBAAoBp2U,KAAKo2U,kBAAkBjtU,SAChFR,EAAO0vS,UAAYr4S,KAAKq4S,UACxB1vS,EAAOq0B,YAAch9B,KAAKg9B,YAC1Br0B,EAAOwtU,YAAcn2U,KAAKm2U,YAC1BxtU,EAAOyP,YAAcpY,KAAKoY,YAC1BzP,EAAOowU,kBAAoB/4U,KAAK+4U,kBAChCpwU,EAAOixU,wBAA0B55U,KAAK45U,wBACtCjxU,EAAO2tU,uBAAyBt2U,KAAKs2U,uBAC9B3tU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,uBAAuB2pV,EAAsB3pV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,6BC5FxF6pV,EAILz5U,YAAaC,GACZA,EAAUA,MACVL,KAAK85U,gBAAkBz5U,EAAuB,gBAAIA,EAAQy5U,gBAAgB,KAC1E95U,KAAKyf,UAAYpf,EAAiB,UAAIA,EAAQof,UAAU,KAKzDrf,OAAQuH,GACPuG,EAAA,GAAoBlO,KAAK85U,gBAAgBnyU,GACzCuG,EAAA,GAAoBlO,KAAKyf,UAAU9X,GAKpCvH,OAAQsI,GACP1I,KAAK85U,gBAAkB5rU,EAAA,EAAoBxF,GAC3C1I,KAAKyf,UAAYvR,EAAA,EAAoBxF,GAKtCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIkxU,GAEdlxU,EAAOmxU,gBAAkB95U,KAAK85U,gBAC9BnxU,EAAO8W,UAAYzf,KAAKyf,UACjB9W,GAKH,SAAAoxU,GAA2CrxU,GAC/C,IAAIsE,EAAM,IAAI6sU,EAEb,OADA7sU,EAAI5J,OAAOsF,GACJsE,EAQVhd,OAAAme,EAAA,EAAAne,CAA0B,4BAA4B6pV,EAA2B7pV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,uBClClGgqV,GAYL55U,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK6iS,UAAYxiS,EAAiB,UAAIA,EAAQwiS,UAAU,KACxD7iS,KAAKmI,oBAAsB9H,EAA2B,oBAAIA,EAAQ8H,oBAAoB,KACtFnI,KAAKi6U,sBAAwB55U,EAA6B,sBAAIA,EAAQ45U,sBAAsB,KAC5Fj6U,KAAK2Y,YAActY,EAAmB,YAAIA,EAAQsY,YAAY,KAC9D3Y,KAAK8iS,kBAAoBziS,EAAyB,kBAAIA,EAAQyiS,kBAAkB,KAChF9iS,KAAKk6U,gBAAkB75U,EAAuB,gBAAIA,EAAQ65U,mBAC1Dl6U,KAAKm6U,2BAA6B95U,EAAkC,2BAAIA,EAAQ85U,8BAChFn6U,KAAK+iS,gBAAkB1iS,EAAuB,gBAAIA,EAAQ0iS,gBAAgB,IAAI7/Q,GAAA,EAC9EljB,KAAKo6U,sBAAwB/5U,EAA6B,sBAAIA,EAAQ+5U,sBAAsB,KAK7Fh6U,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,GAAgBlO,KAAK6iS,UAAUl7R,GAC/BuG,EAAA,GAAgBlO,KAAKmI,oBAAoBR,GACzCuG,EAAA,GAAgBlO,KAAKi6U,sBAAsBtyU,GAC3CuG,EAAA,GAAoBlO,KAAK2Y,YAAYhR,GACrCuG,EAAA,GAAoBlO,KAAK8iS,kBAAkBn7R,GAC3CuG,EAAA,EAAelO,KAAKk6U,gBAAgBvyU,GACpCuG,EAAA,EAAelO,KAAKm6U,2BAA2BxyU,GAC/C3H,KAAK+iS,gBAAgB9/R,OAAO0E,GAC5BuG,EAAA,GAAgBlO,KAAKo6U,sBAAsBzyU,GAK5CvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK6iS,UAAY30R,EAAA,EAAgBxF,GACjC1I,KAAKmI,oBAAsB+F,EAAA,EAAgBxF,GAC3C1I,KAAKi6U,sBAAwB/rU,EAAA,EAAgBxF,GAC7C1I,KAAK2Y,YAAczK,EAAA,EAAoBxF,GACvC1I,KAAK8iS,kBAAoB50R,EAAA,EAAoBxF,GAC7C1I,KAAKk6U,gBAAkBhsU,EAAA,EAAexF,EAAI83B,EAAA,GAC1CxgC,KAAKm6U,2BAA6BjsU,EAAA,EAAexF,EAAIqxU,IACrD/5U,KAAK+iS,gBAAgB3/R,OAAOsF,GAC5B1I,KAAKo6U,sBAAwBlsU,EAAA,EAAgBxF,GAK9CtI,MAAOuI,GAcN,OAbIA,IACHA,EAAS,IAAIqxU,IAEVh6U,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAOk6R,UAAY7iS,KAAK6iS,UACxBl6R,EAAOR,oBAAsBnI,KAAKmI,oBAClCQ,EAAOsxU,sBAAwBj6U,KAAKi6U,sBACpCtxU,EAAOgQ,YAAc3Y,KAAK2Y,YAC1BhQ,EAAOm6R,kBAAoB9iS,KAAK8iS,kBAC5B9iS,KAAKk6U,kBAAmBvxU,EAAOuxU,gBAAkBhsU,EAAA,EAAqBlO,KAAKk6U,kBAC3El6U,KAAKm6U,6BAA8BxxU,EAAOwxU,2BAA6BjsU,EAAA,EAAqBlO,KAAKm6U,6BACjGn6U,KAAK+iS,kBAAmBp6R,EAAOo6R,gBAAkB/iS,KAAK+iS,gBAAgB55R,SAC1ER,EAAOyxU,sBAAwBp6U,KAAKo6U,sBAC7BzxU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,wBAAwBgqV,GAAuBhqV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC9F1FqqV,GAQLj6U,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKs6U,gBAAkBj6U,EAAuB,gBAAIA,EAAQi6U,gBAAgB,IAAIp3T,GAAA,EAC9EljB,KAAKu6U,2BAA6Bl6U,EAAkC,2BAAIA,EAAQk6U,8BAChFv6U,KAAKmzR,UAAY9yR,EAAiB,UAAIA,EAAQ8yR,aAC9CnzR,KAAKw6U,kBAAoBn6U,EAAyB,kBAAIA,EAAQm6U,kBAAkB,KAChFx6U,KAAKy6U,mBAAqBp6U,EAA0B,mBAAIA,EAAQo6U,mBAAmB,IAAIv3T,GAAA,EAKxF9iB,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1B3H,KAAKs6U,gBAAgBr3U,OAAO0E,GAC5BuG,EAAA,EAAelO,KAAKu6U,2BAA2B5yU,GAC/CuG,EAAA,EAAelO,KAAKmzR,UAAUxrR,EAAIuG,EAAA,IAClCA,EAAA,GAAyBlO,KAAKw6U,kBAAkB7yU,GAChD3H,KAAKy6U,mBAAmBx3U,OAAO0E,GAKhCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKs6U,gBAAgBl3U,OAAOsF,GAC5B1I,KAAKu6U,2BAA6BrsU,EAAA,EAAexF,EAAIqxU,IACrD/5U,KAAKmzR,UAAYjlR,EAAA,EAAexF,EAAIwF,EAAA,GACpClO,KAAKw6U,kBAAoBtsU,EAAA,EAAyBxF,GAClD1I,KAAKy6U,mBAAmBr3U,OAAOsF,GAKhCtI,MAAOuI,GAUN,OATIA,IACHA,EAAS,IAAI0xU,IAEVr6U,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SAChEnJ,KAAKs6U,kBAAmB3xU,EAAO2xU,gBAAkBt6U,KAAKs6U,gBAAgBnxU,SACtEnJ,KAAKu6U,6BAA8B5xU,EAAO4xU,2BAA6BrsU,EAAA,EAAqBlO,KAAKu6U,6BACrG5xU,EAAOwqR,UAAYjlR,EAAA,EAAclO,KAAKmzR,WACtCxqR,EAAO6xU,kBAAoBx6U,KAAKw6U,kBAC5Bx6U,KAAKy6U,qBAAsB9xU,EAAO8xU,mBAAqBz6U,KAAKy6U,mBAAmBtxU,SAC5ER,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,yBAAyBqqV,GAAwBrqV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,uBCvE5F0qV,GAMLt6U,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK2Y,YAActY,EAAmB,YAAIA,EAAQsY,YAAY,KAC9D3Y,KAAK8P,QAAUzP,EAAe,QAAIA,EAAQyP,WAC1C9P,KAAK+P,gBAAkB1P,EAAuB,gBAAIA,EAAQ0P,mBAK3D3P,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,GAAoBlO,KAAK2Y,YAAYhR,GACrCuG,EAAA,EAAelO,KAAK8P,QAAQnI,EAAIuG,EAAA,IAChCA,EAAA,EAAelO,KAAK+P,gBAAgBpI,GAKrCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK2Y,YAAczK,EAAA,EAAoBxF,GACvC1I,KAAK8P,QAAU5B,EAAA,EAAexF,EAAIwF,EAAA,GAClClO,KAAK+P,gBAAkB7B,EAAA,EAAexF,EAAIuD,GAAA,GAK3C7L,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAI+xU,IAEV16U,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAOgQ,YAAc3Y,KAAK2Y,YAC1BhQ,EAAOmH,QAAU5B,EAAA,EAAclO,KAAK8P,SAChC9P,KAAK+P,kBAAmBpH,EAAOoH,gBAAkB7B,EAAA,EAAqBlO,KAAK+P,kBACxEpH,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,0BAA0B0qV,GAAyB1qV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC9D9F2qV,GAILv6U,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKi/S,oBAAsB5+S,EAA2B,oBAAIA,EAAQ4+S,oBAAoB,KAKvF7+S,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAiBlO,KAAKi/S,oBAAoBt3S,GAK3CvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKi/S,oBAAsB/wS,EAAA,EAAiBxF,GAK7CtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIgyU,IAEV36U,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOs2S,oBAAsBj/S,KAAKi/S,oBAC3Bt2S,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,sBAAsB2qV,GAAqB3qV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCjDtF4qV,GAGLx6U,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAK5E1I,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAK5BvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAK5BtI,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAIiyU,IAEV56U,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SAChER,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,uBAAuB4qV,GAAsB5qV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC1CxF6qV,GAILz6U,YAAaC,GACZA,EAAUA,MACVL,KAAK2N,cAAgBtN,EAAqB,cAAIA,EAAQsN,cAAc,IAAIzF,EAAA,EACxElI,KAAKoI,cAAgB/H,EAAqB,cAAIA,EAAQ+H,cAAc,KAKrEhI,OAAQuH,GACP3H,KAAK2N,cAAc1K,OAAO0E,GAC1BuG,EAAA,GAAgBlO,KAAKoI,cAAcT,GAKpCvH,OAAQsI,GACP1I,KAAK2N,cAAcvK,OAAOsF,GAC1B1I,KAAKoI,cAAgB8F,EAAA,EAAgBxF,GAKtCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAIkyU,IAEV76U,KAAK2N,gBAAiBhF,EAAOgF,cAAgB3N,KAAK2N,cAAcxE,SACpER,EAAOP,cAAgBpI,KAAKoI,cACrBO,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,gBAAgB6qV,GAAe7qV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UChD1E8qV,GAIL16U,YAAaC,GACZA,EAAUA,MACVL,KAAKqO,eAAiBhO,EAAsB,eAAIA,EAAQgO,eAAe,IAAIvF,EAAA,EAC3E9I,KAAK+6U,YAAc16U,EAAmB,YAAIA,EAAQ06U,YAAY,KAK/D36U,OAAQuH,GACP3H,KAAKqO,eAAepL,OAAO0E,GAC3BuG,EAAA,GAAgBlO,KAAK+6U,YAAYpzU,GAKlCvH,OAAQsI,GACP1I,KAAKqO,eAAejL,OAAOsF,GAC3B1I,KAAK+6U,YAAc7sU,EAAA,EAAgBxF,GAKpCtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAImyU,IAEV96U,KAAKqO,iBAAkB1F,EAAO0F,eAAiBrO,KAAKqO,eAAelF,SACvER,EAAOoyU,YAAc/6U,KAAK+6U,YACnBpyU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,iBAAiB8qV,GAAgB9qV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UClD5EgrV,GAGL56U,YAAaC,GACZA,EAAUA,MACVL,KAAKohT,SAAW/gT,EAAgB,SAAIA,EAAQ+gT,SAAS,KAKtDhhT,OAAQuH,GACPuG,EAAA,GAAgBlO,KAAKohT,SAASz5S,GAK/BvH,OAAQsI,GACP1I,KAAKohT,SAAWlzS,EAAA,EAAgBxF,GAKjCtI,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAIqyU,IAEdryU,EAAOy4S,SAAWphT,KAAKohT,SAChBz4S,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,oBAAoBgrV,GAAmBhrV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC3ClFirV,WAAsCD,GAE3C56U,YAAaC,GAEZQ,MADAR,EAAUA,OAMXD,OAAQuH,GACP9G,MAAMoC,OAAO0E,GAKdvH,OAAQsI,GACP7H,MAAMuC,OAAOsF,GAKdtI,MAAOuI,GAKN,OAJIA,IACHA,EAAS,IAAIsyU,IAEdp6U,MAAMsI,MAAMR,GACLA,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,yBAAyBirV,GAAwBjrV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UCtC5FkrV,WAAqCF,GAK1C56U,YAAaC,GAEZQ,MADAR,EAAUA,OAEVL,KAAKivS,SAAW5uS,EAAgB,SAAIA,EAAQ4uS,SAAS,KACrDjvS,KAAKm7U,SAAW96U,EAAgB,SAAIA,EAAQ86U,SAAS,KACrDn7U,KAAKo7U,oBAAsB/6U,EAA2B,oBAAIA,EAAQ+6U,oBAAoB,KAKvFh7U,OAAQuH,GACP9G,MAAMoC,OAAO0E,GACbuG,EAAA,GAAgBlO,KAAKivS,SAAStnS,GAC9BuG,EAAA,GAAoBlO,KAAKm7U,SAASxzU,GAClCuG,EAAA,GAAgBlO,KAAKo7U,oBAAoBzzU,GAK1CvH,OAAQsI,GACP7H,MAAMuC,OAAOsF,GACb1I,KAAKivS,SAAW/gS,EAAA,EAAgBxF,GAChC1I,KAAKm7U,SAAWjtU,EAAA,EAAoBxF,GACpC1I,KAAKo7U,oBAAsBltU,EAAA,EAAgBxF,GAK5CtI,MAAOuI,GAQN,OAPIA,IACHA,EAAS,IAAIuyU,IAEdr6U,MAAMsI,MAAMR,GACZA,EAAOsmS,SAAWjvS,KAAKivS,SACvBtmS,EAAOwyU,SAAWn7U,KAAKm7U,SACvBxyU,EAAOyyU,oBAAsBp7U,KAAKo7U,oBAC3BzyU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,wBAAwBkrV,GAAuBlrV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC3D1FqrV,WAAiCL,GAGtC56U,YAAaC,GAEZQ,MADAR,EAAUA,OAEVL,KAAK85U,gBAAkBz5U,EAAuB,gBAAIA,EAAQy5U,gBAAgB,KAK3E15U,OAAQuH,GACP9G,MAAMoC,OAAO0E,GACbuG,EAAA,GAAoBlO,KAAK85U,gBAAgBnyU,GAK1CvH,OAAQsI,GACP7H,MAAMuC,OAAOsF,GACb1I,KAAK85U,gBAAkB5rU,EAAA,EAAoBxF,GAK5CtI,MAAOuI,GAMN,OALIA,IACHA,EAAS,IAAI0yU,IAEdx6U,MAAMsI,MAAMR,GACZA,EAAOmxU,gBAAkB95U,KAAK85U,gBACvBnxU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,oBAAoBqrV,GAAmBrrV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,UC9ClFsrV,WAAmCN,GAIxC56U,YAAaC,GAEZQ,MADAR,EAAUA,OAEVL,KAAKu7U,UAAYl7U,EAAiB,UAAIA,EAAQk7U,UAAU,KACxDv7U,KAAKo7U,oBAAsB/6U,EAA2B,oBAAIA,EAAQ+6U,oBAAoB,KAKvFh7U,OAAQuH,GACP9G,MAAMoC,OAAO0E,GACbuG,EAAA,GAAoBlO,KAAKu7U,UAAU5zU,GACnCuG,EAAA,GAAgBlO,KAAKo7U,oBAAoBzzU,GAK1CvH,OAAQsI,GACP7H,MAAMuC,OAAOsF,GACb1I,KAAKu7U,UAAYrtU,EAAA,EAAoBxF,GACrC1I,KAAKo7U,oBAAsBltU,EAAA,EAAgBxF,GAK5CtI,MAAOuI,GAON,OANIA,IACHA,EAAS,IAAI2yU,IAEdz6U,MAAMsI,MAAMR,GACZA,EAAO4yU,UAAYv7U,KAAKu7U,UACxB5yU,EAAOyyU,oBAAsBp7U,KAAKo7U,oBAC3BzyU,GAgBT3Y,OAAAme,EAAA,EAAAne,CAA0B,sBAAsBsrV,GAAqBtrV,OAAA8N,EAAA,EAAA9N,CAAmB,IAAI,saC5DxFwrV,GAAkBtsV,OAAO6iU,QAAgB7iU,OAAQ8iU,SASjDypB,GAAyBR,GACzBS,GAAuB/B,EACvBgC,GAAwB3B,GACxB4B,GAAyBvB,GACzBwB,GAA0BnB,GAC1BoB,GAAsBnB,GAGtBoB,GAAyBC,GAAA,EACzB37S,GAAkB27S,GAAA,EAClBC,GAAsBD,GAAA,EAOtBE,GAAwBhB,GAuB5B,SAAAiB,GAA6BxjU,GACzB,QAAQA,GAAeA,EAAYrjB,OAAS,UAkB1C8mV,WAA2BC,GAAA,EAcjCj8U,YAAYC,GACRQ,MAAMR,GAwbAL,KAAAs8U,cAAgB,SAAUhnD,EAAyB2pB,EAA+B1pR,GAMxF,GAJAvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,IAIxBv1B,KAAKgnS,eACN,OAAOzxQ,EAAS,IAAIp8B,MAAM,eAE9BnJ,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKgnS,gBAEZ,IAAI5H,EAAU,IAAI08C,IACd78B,oBAAqBA,IAGzB,IAAKj/S,KAAKgnS,eAAesjB,UACrB,OAAO/0R,IAEX+/P,EAAQ+J,0BAA0BD,EAAS,SAAUppQ,EAAKw/P,GAOlDjgQ,EAASS,EALTA,EAKc,KAEAw/P,MAldtBn1R,EAAUA,MAMVL,KAAKu8U,sBAAuBvsV,OAAAqN,GAAA,EAAD,CAAmBgD,EAAQk8U,wBAAiCl8U,EAAQk8U,oBAC/Fv8U,KAAK45U,wBAA0Bv5U,EAAQu5U,yBAA2B,IAClE55U,KAAK2xR,gBAAkBtxR,EAAQsxR,iBAAmB,mBAClD3xR,KAAKw8U,WAAan8U,EAAQm8U,YAAc,UAdxCpkU,kBACI,OAAOpY,KAAKwzT,aAkBVpzT,mBAKN,OAJKJ,KAAKy8U,yBACNz8U,KAAKy8U,uBAAyB,GAElCz8U,KAAKy8U,wBAA0B,EACxBz8U,KAAKw8U,WAAax8U,KAAKy8U,uBAGxBr8U,qBAgBN,OAAQ64U,EAAmB/pV,OAAO2jT,SAAS31Q,SAAUl9B,KAAK2xR,iBAKpDvxR,oBAENJ,KAAKsgB,eAAiBtgB,KAAKsgB,gBAAkB0iT,GAAA,EAAeltT,KAE5D,IAAI8oR,EAAW5+R,KAAK08U,aAAa18U,KAAKgnS,eAAehqQ,YAAah9B,KAAKmY,aAAcnY,KAAKsgB,gBAS1F,GARAtgB,KAAK4+R,SAAWA,GAQX5+R,KAAK4+R,SAAU,CAChB,GAAI5+R,KAAKu8U,oBAEL,OADAvsV,OAAA+pB,GAAA,EAAA/pB,CAAS,gEAAiEgQ,KAAKgnS,eAAehqQ,YAAa,qBACpG,EAQP,KADA4hQ,EAAW5+R,KAAK28U,wBAAwB38U,KAAKmY,aAAcnY,KAAKsgB,iBAE5D,OAAO,EAEXtgB,KAAK4+R,SAAWA,EAGxB,OAAO,EAGDx+R,eAAem1B,GAGrB,GAFAvlC,OAAAkD,EAAA,EAAAlD,CAA2B,mBAAbulC,GACdvlC,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKgnS,iBACPhnS,KAAK48U,sBAAwB58U,KAAK4+R,SAInC,OAHAjgS,QAAQC,IAAIoB,KAAK+mS,kBAAkBtrQ,IAAI,SAAUmjQ,GAC9C,OAAOA,EAAS5hQ,YAAc,IAAM4hQ,EAASzmR,aAAa/e,WAAa,IAAMwlS,EAAS5lR,qBAElFuc,EAAS,IAAIp8B,MAAM,yBAA2B6G,KAAKgnS,eAAehqQ,cAE7Eh9B,KAAK68U,WAAa78U,KAAK4+R,SAAS6F,OAAOhT,eACvCzxR,KAAKmoS,aAAenoS,KAAKgnS,eAAehqQ,YAExC,IAAIs4P,EAAU,IAAIwnD,GAAA,EAAc98U,MAChCA,KAAK+8U,sBAAsBznD,EAAS//P,GAGxBn1B,sBAAsBk1R,EAAyB//P,4CAE3DvlC,OAAAkD,EAAA,EAAAlD,CAA2B,mBAAbulC,GACdvlC,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKgnS,gBACZh3S,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAK68U,WAAY,iCACxB7sV,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKmoS,aAAc,yCAC1Bn4S,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAK4+R,UAGZ,IAAInN,QAAuBzxR,KAAKg9U,qBAEhC,IAAIC,EAAyB,IAAIlB,IAC7BtqD,eAAgBA,EAChBC,WAAY,eACZC,gBAAiB,IAAIt1Q,EAAA,GAAeC,KAAMtc,KAAK2xR,kBAC/CE,gBAAiBxxP,GAAgB68S,OACjCprD,sBAAkB7/R,EAClB8/R,yBAAqB9/R,EACrB+/R,mBAKJhyR,KAAKwzT,aAAegoB,GAAO9lB,gBAAgB,IAAI95T,WAAW,KAE1D,IAAIwjS,EAAU,IAAIs8C,IACdtF,kBAAmB6G,EACnB5kC,UAAWr4S,KAAK68U,WAChB7/S,YAAah9B,KAAKg9B,YAClBm5S,YAAan2U,KAAKm9U,mBAClB/kU,YAAapY,KAAKwzT,aAClBulB,kBAAmB/4U,KAAK8qS,iBACxB8uC,wBAAyB55U,KAAK45U,wBAC9BtD,uBAAwB,MAI5BtmV,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKgnS,eAAe7uR,eAAiB0rT,GAAA,EAAoB/tT,MAAgC,OAAxBspR,EAAQhnR,aAEhFpY,KAAKq/R,0BAA0BD,EAAU,CAACppQ,EAAKw/P,KAE3C,IAAKx/P,EAGD,GAAIw/P,EAASnnR,eAAetF,gBAAkBlJ,GAAA,EAAYurB,mBACtD4K,EAAM,IAAI78B,MAAM,uBAAyBq8R,EAASnnR,eAAetF,cAAc3P,iBAE5E,GAAIo8R,EAASnnR,eAAetF,gBAAkBlJ,GAAA,EAAYyC,KAAM,CAKnE,GAHAtS,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoBmmD,KAGtBQ,GAAoB3mD,EAAS78Q,aAC9B,OAAO4c,EAAS,IAAIp8B,MAAM,0BAK9Bm8R,EAAUA,GAAW,IAAIwnD,GAAA,EAAc98U,OAC/BnQ,KAAOuvS,EAAQ+2C,YACvB7gD,EAAQuN,UAAYrN,EAASqN,UAC7BvN,EAAQntR,oBAAsBqtR,EAASrtR,oBACvCmtR,EAAQ6G,QAAU3G,EAASykD,sBAC3B3kD,EAAQ38Q,YAAc68Q,EAAS78Q,YAC/B28Q,EAAQwN,kBAAoBtN,EAASsN,kBACrCxN,EAAQyN,gBAAkBvN,EAASuN,gBAEnC/yS,OAAA+pB,GAAA,EAAA/pB,CAAS,6BAA+BslS,EAAQ6G,SAEhDn8R,KAAK+mS,kBAAoBvR,EAAS0kD,qBAIlClkT,EAAM,IAAI78B,MAAM,SAAWq8R,EAASnnR,eAAetF,cAAclZ,KAAO,IAAM2lS,EAASnnR,eAAetF,cAAcjJ,aAGxHk2B,EACAT,EAASS,GAETT,EAAS,KAAM+/P,OAMpBl1R,uBAAuB8tT,EAASprB,EAAmBnqR,GACtD,OAAO3oB,OAAAotV,GAAA,EAAAptV,CAAiB8yS,EAAmBnqR,EAAa3Y,KAAK6qS,gBAAiBqjB,EAAQ2F,eAAevzS,gBAIlGlgB,wBAAwBk1R,EAAyBklD,EAAwDjlT,GAI5G,GAHAvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAwrBjC,SAAqB8nT,GACjB,OAAQA,IAAsBA,EAAiBpuC,WAAaouC,EAAiBlC,SAtrBzEmC,CAAYt9U,KAAKu9U,mBAEjB,IAEI,OAAOhoT,EAAS,KADhBilT,EAqsBZ,SAAsCllD,GAElC,IAAIkoD,EAAgBloD,EAAQsJ,SAC5B5uS,OAAAkD,EAAA,EAAAlD,CAAOwtV,aAAyBvB,IAEhC,IAAIwB,EAAsDC,GAAoBF,EAAexB,GAAA,EAAsB2B,WACnH,IAAKF,EACD,MAAM,IAAItkV,MAAM,oEAEpB,OAAO,IAAIsiV,IAAwBr6B,SAAUq8B,EAAgBr8B,WA9sBjCw8B,CAA6BtoD,IAGrD,MAAOt/P,GACH,OAAOT,EAASS,OAGjB,KA+qBX,SAA4BqnT,GAExB,YADyCprV,IAA9BorV,EAAiBpuC,eAA0Dh9S,IAA9BorV,EAAiBlC,SAhrB9D0C,CAAmB79U,KAAKu9U,mBAe/B,OADA5+U,QAAQC,IAAI,wBAAyB47U,GAC9BjlT,EAAS,IAAIp8B,MAAM,sCAb1B,IAAI81S,EAAWjvS,KAAKu9U,kBAAkBtuC,SAClCksC,EAAWn7U,KAAKu9U,kBAAkBpC,SAEtC,IAEI,OAAO5lT,EAAS,KADhBilT,EAosBZ,SAAqCllD,EAAS2Z,EAAUksC,GAGpDnrV,OAAAkD,EAAA,EAAAlD,CAAoB,OAAbi/S,GAAyC,iBAAbA,GACnCj/S,OAAAkD,EAAA,EAAAlD,CAAoB,OAAbmrV,GAAyC,iBAAbA,GACnC,IAAIqC,EAAgBloD,EAAQsJ,SAC5B5uS,OAAAkD,EAAA,EAAAlD,CAAOwtV,aAAyBvB,IAEhC,IAAIwB,EAAkBC,GAAoBF,EAAexB,GAAA,EAAsB8B,UAG/E,IAAKL,EACD,MAAM,IAAItkV,MAAM,mEAGpB,IAAImnB,EAAiBtwB,OAAAgzU,GAAA,EAAAhzU,CAAQytV,EAAgBzkU,mBAGzCsH,IAAmB0iT,GAAA,EAAe5iT,UAClCE,EAAiBg1Q,EAAQkJ,QAAQwI,eAAe1mR,eAChDtwB,OAAAkD,EAAA,EAAAlD,CAAOswB,IAWP,OANwB,IAAI47T,IACxBjtC,SAAUA,EACVksC,SAAUnrV,OAAA+S,GAAA,EAAA/S,CAAmBmrV,GAC7BC,oBAAqB,KACrBh6B,SAAUq8B,EAAgBr8B,WAjuBN28B,CAA4BzoD,EAAS2Z,EAAUksC,IAGvE,MAAOnlT,GAEH,OAAOT,EAASS,KAUlB51B,iBAAiBk1R,EAAyB//P,GAMhD,GAJAvlC,OAAAkD,EAAA,EAAAlD,CAA2B,mBAAbulC,IAITv1B,KAAKgnS,eACN,OAAOzxQ,EAAS,IAAIp8B,MAAM,uBAG9B,IAAI2pS,EAAoBxN,EAAQwN,kBAGhC9yS,OAAAkD,EAAA,EAAAlD,CAA6B,OAAtB8yS,GAA8BA,aAA6BlnS,YAElE,IAAI+c,EAAc28Q,EAAQ38Q,YAC1B3oB,OAAAkD,EAAA,EAAAlD,EAAQ2oB,GAAeA,aAAuB/c,YAG9C,IAAIoiV,EAAc1oD,EAAQ6I,OAC1B7I,EAAQ6I,OAASn+R,KAEjBA,KAAKi+U,wBAAwB3oD,EAASt1R,KAAKu9U,kBAAmB,CAACvnT,EAAKwkT,KAEhE,GAAIxkT,EAEA,OADAs/P,EAAQ6I,OAAS6/C,EACVzoT,EAASS,GAKpB,IAAIopQ,EAAU,IAAIw8C,IAMdtB,gBAAiBt6U,KAAKk+U,uBAAuBl+U,KAAKgnS,eAAgBlE,EAAmBnqR,GAUrF4hU,8BAUApnD,aAMAqnD,kBAAmBA,EAKnBC,mBAAoB,IAAI5W,GAAA,GACpB3kT,UAAW,KACXO,UAAW,SAKnB61Q,EAAQ+J,0BAA0BD,EAAS,SAAUppQ,EAAKw/P,GAEtD,OAAKx/P,GAAOw/P,EAASnnR,eAAetF,gBAAkBlJ,GAAA,EAAYyC,MAa9D0zB,EAAMA,GAAO,IAAI78B,MAAMq8R,EAASnnR,eAAetF,cAAc3P,YAC7Dk8R,EAAQ6I,OAAS6/C,EACVzoT,EAASS,EAAK,QAbrBhmC,OAAAkD,EAAA,EAAAlD,CAAOwlS,aAAoBqmD,IAE3BvmD,EAAQ38Q,YAAc68Q,EAAS78Q,YAE1BwjU,GAAoB7mD,EAAQ38Q,aAG1B4c,EAAS,KAAM+/P,GAFX//P,EAAS,IAAIp8B,MAAM,8BAwBvCiH,kBAAkBk1R,EAAyB//P,GAO9C,GAJAvlC,OAAAkD,EAAA,EAAAlD,CAA2B,mBAAbulC,GACdvlC,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAKgnS,eAAgB,oCAGvBhnS,KAAK48U,sBAAwB58U,KAAK4+R,SACnC,OAAOrpQ,EAAS,IAAIp8B,MAAM,yBAA2B6G,KAAKgnS,eAAehqQ,cAG7EhtC,OAAAkD,EAAA,EAAAlD,CAAOslS,EAAQ6I,OAAOnhQ,cAAgBh9B,KAAKg9B,YAAa,oDACxD,IAAImhT,EAA+B7oD,EAAQ6I,OAE3CnuS,OAAA+pB,GAAA,EAAA/pB,CAAS,iCAETgQ,KAAKo+U,iBAAiB9oD,EAAUt/P,IACvBA,EAeGjc,GAAA,GACApb,QAAQC,IAAI,iCAAkCo3B,GAd9CmoT,IAAen+U,OAETm+U,EAAYE,eAAe/oD,GACjCtlS,OAAAkD,EAAA,EAAAlD,CAAamuV,EAAYr3C,UAAU38R,QAAQmrR,GAAW,wDAEtDt1R,KAAKs+U,YAAYhpD,GAEjBtlS,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAK8mS,UAAU38R,QAAQmrR,IAAY,IAUlD//P,EAASS,KA8BV51B,cAAci9U,EAAqC9nT,GAElD,mBAAsB8nT,IAChB9nT,EAAY8nT,EAClBA,MAGJr9U,KAAKu9U,kBAAoBF,EAEzBrtV,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7Bv1B,KAAKu+U,eAAgB,CAACvoT,EAAKs/P,KACnBt/P,EACAT,EAASS,IAGTh2B,KAAKs+U,YAAYhpD,GAEjBt1R,KAAKo+U,iBAAiB9oD,EAAS,SAAUt/P,GACrCT,EAASS,EAAKs/P,QAcvBl1R,sBAAsBk1R,EAAS+nD,EAAkB9nT,GAEpDvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAENv1B,KAAKu9U,kBAC5Bv9U,KAAKu9U,kBAAoBF,EAEzBr9U,KAAKo+U,iBAAiB9oD,EAAS,SAAUt/P,GACrCT,EAASS,KAgDV51B,aAAak1R,EAAyB2pB,EAA+B1pR,GAIxEvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAC7BvlC,OAAAkD,EAAA,EAAAlD,CAAOslS,GACPtlS,OAAAkD,EAAA,EAAAlD,CAAOslS,EAAQ6I,SAAWn+R,KAAM,oCAChCs1R,EAAQqJ,QAAS,EAEjB3+R,KAAKs8U,cAAchnD,EAAS2pB,EAAuBjpR,IAE/Cs/P,EAAQuL,iBAER7gS,KAAKq+U,eAAe/oD,GACpBtlS,OAAAkD,EAAA,EAAAlD,CAAOgQ,KAAK8mS,UAAU38R,QAAQmrR,GAAW,GACzCtlS,OAAAkD,EAAA,EAAAlD,CAAOslS,EAAQqJ,OAAQ,sCAEvBppQ,EAASS,KAIP51B,gCAAgCk1R,EAAyB//P,GAE/DvlC,OAAA+pB,GAAA,EAAA/pB,CAAS,oCAETslS,EAAQooB,mBAAmB8d,UAAWxlS,IAClChmC,OAAA+pB,GAAA,EAAA/pB,CAAS,wCAETslS,EAAQkpD,sBACRjpT,EAASS,KAIP51B,6BAA6Bm1B,GAEnCvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAG7B10B,MAAM+pS,6BAA8B50Q,IAuFhChmC,OAAA+pB,GAAA,EAAA/pB,CAAS,kCAET,IAAIu5S,EAAWvpS,KAAK8mS,UACpB92S,OAAAyrC,GAAA,EAAAzrC,CAAUu5S,EAAU,SAAUjU,EAASyC,GAEnC/nS,OAAA+pB,GAAA,EAAA/pB,CAAS,yEACTgQ,KAAKo+U,iBAAiB9oD,EAAS,SAAUt/P,GAMrC,GADAhmC,OAAA+pB,GAAA,EAAA/pB,CAAS,qBAAsBgmC,EAAMA,EAAInxB,QAAU,KAC/CmxB,EA0EA,OAAOh2B,KAAKy+U,gCAAgCnpD,EAASyC,GAzErD,GAAIzC,EAAQopD,gBAER,OADA1uV,OAAA+pB,GAAA,EAAA/pB,CAAS,oFACFulC,EAAS,IAAIp8B,MAAM,sDAI9B,IAAIwlV,EAAc,KAClB3uV,OAAA4qS,GAAA,EAAA5qS,EACKulC,IAEGvlC,OAAA+pB,GAAA,EAAA/pB,CAAS,sEAETslS,EAAQooB,mBAAmBkhC,SAAQ,GAInC5+U,KAAK+8U,sBAAsBznD,EAAS,SAAUt/P,EAAK6oT,GAC/C7uV,OAAA+pB,GAAA,EAAA/pB,CAAS,gEACJgmC,IACD2oT,EAAcE,EACd7uV,OAAAkD,EAAA,EAAAlD,CAAOslS,IAAYupD,EAAc,+BAErCtpT,EAASS,MAGhBT,IACGvlC,OAAA+pB,GAAA,EAAA/pB,CAAS,kCACTgQ,KAAKo+U,iBAAiBO,EAAa,SAAU3oT,GACzChmC,OAAA+pB,GAAA,EAAA/pB,CAAS,uCAETulC,EAASS,MAGhBT,IAGG,IAAIupT,EAAmBxpD,EAAQooB,mBAAmBqhC,qBAGlD,GADA/uV,OAAA+pB,GAAA,EAAA/pB,CAAS,iCAAkC2uV,EAAYjhC,mBAAmBla,mBAC1C,IAA5Bs7C,EAAiBxpV,OAEjB,OADAtF,OAAA+pB,GAAA,EAAA/pB,CAAS,wDACFulC,IAEXvlC,OAAA+pB,GAAA,EAAA/pB,CAAS,+CAAgD8uV,EAAiBtmV,KAAK,MAAO,KAEtF,IAAI6H,GACA8R,gBAAiB2sU,EACjBrqU,mBAAmB,GAGvBzkB,OAAAkD,EAAA,EAAAlD,CAAmE,IAA5D2uV,EAAYjhC,mBAAmB0c,yBAAgC,oCACtEukB,EAAYK,sBAAsB3+U,EAAS,SAAU21B,EAAKlmB,GACtD,GAAIkmB,EACA,OAAOT,EAASS,GAEpBhmC,OAAA+pB,GAAA,EAAA/pB,CAAS,+BAAgC8f,EAAQ1W,YACjDpJ,OAAA+pB,GAAA,EAAA/pB,CAAS,qCAAsC2uV,EAAYjhC,mBAAmBla,mBAC9EjuQ,OAGPA,IACGvlC,OAAAkD,EAAA,EAAAlD,CAAmE,IAA5D2uV,EAAYjhC,mBAAmB0c,yBAAgC,oCAE/Dp6T,KAAKy+U,gCAAgCE,EAAappT,IAE5DA,IACGopT,EAAYjhC,mBAAmBkhC,SAAQ,GACvCrpT,MAELwiQ,MAQZ,SAAU/hQ,EAAKlmB,GACd,OAAOylB,EAASS,OAQrB51B,WACHS,MAAMzH,WACNuF,QAAQC,IAAI,oCAAqCoB,KAAK45U,yBACtDj7U,QAAQC,IAAI,oCAAqCoB,KAAKg9B,aACtDr+B,QAAQC,IAAI,oCAAqCoB,KAAK68U,YAUnDz8U,YAAY48B,EAAaiiT,EAAY1pT,GAOxC,IAAIomQ,EACAujD,EANJlvV,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBivV,EAAY,4BACzCjvV,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,EAAU,+BAMvC,IAAI4pT,GAAkB,EACtBnvV,OAAA4qS,GAAA,EAAA5qS,EAGKulC,IACGv1B,KAAKwoS,QAAQxrQ,EAAa,SAAUhH,GAChCmpT,GAAkB,EACdnpT,GACAr3B,QAAQC,IAAI,gCAAiCo+B,GAEjDzH,EAASS,MAKhBT,IACGv1B,KAAKo/U,cAAc,KAAM,CAACppT,EAAKs/P,KACtBt/P,IACD2lQ,EAAcrG,GAElB//P,EAASS,MAIhBT,IACG,IACI0pT,EAAWtjD,EAAa,SAAU3lQ,GAC9BkpT,EAAYlpT,EACZT,MAGR,MAAOS,GACHr3B,QAAQC,IAAI,gCAAiCo3B,EAAInxB,SACjDq6U,EAAYlpT,EACZT,MAKPA,IACGomQ,EAAYyN,OAA8B,EAAM,SAAUpzQ,GAClDA,GACAr3B,QAAQC,IAAI,0DAEhB22B,OAGPA,IACGv1B,KAAK+oS,WAAW,SAAU/yQ,GACtBmpT,GAAkB,EACdnpT,GACAr3B,QAAQC,IAAI,6DAEhB22B,QAIT,SAAU8pT,GACT,IAAIF,EAMA,OAAO5pT,EAAS2pT,GAAaG,GAL7B1gV,QAAQC,IAAI,sCACZoB,KAAK+oS,WAAW,SAAUu2C,GACtB,OAAO/pT,EAAS2pT,GAAaG,GAAQC,OAgE9Cl/U,iBAAiB48B,EAAauiT,EAAwBC,EAAWjqT,GAEpEvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBwvV,GAC7BxvV,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7Bv1B,KAAKy/U,YAAYziT,EAAa,SAAUs4P,EAASJ,GAC7CllS,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBklS,GAE7B,MAAMxB,EAAe,IAAI6pB,GAAA,EAAmBjoB,EAASiqD,GAErD,IACIC,EAAUlqD,EAAS5B,EAAc,WAE7BA,EAAa4K,UAAU,SAAUtoQ,GAC7Bk/P,EAAKl/P,OAKjB,MAAOA,GACHr3B,QAAQC,IAAIo3B,GACZk/P,EAAKl/P,KAEVT,IAaP,SAAAmoT,GAA6BgC,EAA8DC,GACvF3vV,OAAAkD,EAAA,EAAAlD,CAAO0vV,aAAgCzD,IACvC,IAAI7rV,EAAIsvV,EAAqB/6C,mBAAmBlQ,OAAQ,SAAUmrD,GAG9D,OAAOA,EAAav+B,YAAcs+B,IAEtC,OAAoB,IAAbvvV,EAAEkF,OAAe,KAAOlF,EAAE,gBC98BjCyvV,GAAmB7vV,OAAA+M,EAAA,EAAA/M,CAAc,eAGrC,SAAA8vV,GAAmCljV,EAAQmjV,GAEvC,OAAO,IAAI9+C,GAAA,GACP1nQ,aAA4B38B,EAC5B48B,aAAc,IAAIynQ,GAAA,GACdzmQ,UAAqC,IAAIymQ,GAAA,GAEjCxmQ,gBAAiBolT,GACjBllT,WAAW,EACXD,iBAAiB,EACjBK,WAAY,IAAIilT,EAAA,GAAep7T,eAAgB,EAAG/0B,KAAMkwV,WActE,SAAAE,GAA2B3qD,EAAS14R,EAAQ24B,GAE9CvlC,OAAAkD,EAAA,EAAAlD,CAAO,mBAAsBulC,GAE7B,IAAIiG,GACAskT,GAA0BljV,EAAQ,oBAClCkjV,GAA0BljV,EAAQ,WAClCkjV,GAA0BljV,EAAQ,mBAClCkjV,GAA0BljV,EAAQ,kBAClCkjV,GAA0BljV,EAAQ,eAGlCsjV,GACA7Q,iBAAkB,KAClB8Q,sBAAuB,KACvBC,gBAAiB,KACjBC,eAAgB,KAChB9uC,WAAY,MAIhBjc,EAAQgrD,oBAAoB9kT,EAAY,SAAUxF,EAAKuqT,GAEnD,GAAIvqT,EACA,OAAOT,EAASS,GAIpB,IAAIssQ,KACAn9Q,KAEJ,SAAAq7T,EAAyBC,EAAiBV,GAClCQ,EAAkBE,GAAiB1/U,aAAelB,GAAA,EAAYyC,OAE9D6iB,EAAY9sB,MACRuE,OAAQ2jV,EAAkBE,GAAiBxkT,QAAQ,GAAGJ,SACtDy4P,YAAaz0R,GAAA,EAAa60R,QAE9B4N,EAAQjqS,KAAK,SAAUqoV,GAEnBR,EAAeH,GAAgBW,EAAWnwV,MAAMA,SAK5DiwV,EAAgB,EAAG,oBACnBA,EAAgB,EAAG,yBACnBA,EAAgB,EAAG,mBACnBA,EAAgB,EAAG,kBACnBA,EAAgB,EAAG,cAEnBlrD,EAAQiL,KAAKp7Q,EAAa,SAAU6Q,EAAIutQ,GACpC,GAAIvtQ,EACA,OAAOT,EAASS,GAEpButQ,EAAW5sQ,QAAQ,SAAUtc,EAAQmoR,GACjCF,EAAQE,GAAO/yS,KAAK,KAAM4qB,KAE9Bkb,EAASS,EAAKkqT,OAQpB,SAAAS,GAAqCC,EAAuCrrT,GAG9E,IAAI4oQ,EAAS,IAAIk+C,GAAA,MAEjBl+C,EAAOqK,QAAQo4C,EAA8B,SAAU5qT,GAC9CA,EAODmoQ,EAAO4K,WAAW,WACdxzQ,EAASS,KAPbmoQ,EAAO0iD,YAAY,KAAK,SAAU7qT,EAAKszQ,GACnCnL,EAAO4K,WAAW,WACdxzQ,EAASS,EAAKszQ,4kcClHlCl6S,EAAAQ,EAAA0T,EAAA,0CAAA4K,EAAA,IAoHO,IAAIgiT,GAAU","file":"wsopcua.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"wsopcua\"] = factory();\n\telse\n\t\troot[\"wsopcua\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 129);\n","\"use strict\";\r\n\r\nimport { DataStream } from './DataStream';\r\n\r\nexport function isValidBoolean(value : any) : boolean{\r\n    return typeof value === \"boolean\";\r\n};\r\n\r\nexport function randomBoolean() : boolean{\r\n    return (Math.random() > 0.5);\r\n};\r\n\r\nexport function encodeBoolean(value : Boolean, stream : DataStream) {\r\n //   assert(isValidBoolean(value));\r\n    stream.setUint8(value ? 1 : 0);\r\n};\r\nexport function decodeBoolean(stream : DataStream) {\r\n    return stream.getUint8() ? true : false;\r\n};\r\n\r\n\r\nvar falsy = /^(?:f(?:alse)?|no?|0+)$/i;\r\n\r\nexport function coerceBoolean(value) {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    // http://stackoverflow.com/a/24744599/406458\r\n    return !falsy.test(value) && !!value;\r\n\r\n    // return !!(+value||String(value).toLowerCase().replace(!!0,''));\r\n};\r\n\r\n","\"use strict\";\r\n\r\nimport {assert} from '../assert';\r\nimport { DataStream } from './DataStream';\r\n\r\n\r\nexport type Int8 = number;\r\nexport type SByte = number;\r\n\r\nexport type Int16 = number;\r\nexport type Int32 = number;\r\nexport type Int64 = number[];\r\n\r\nexport type UInt8 = number;\r\nexport type Byte = number;\r\n\r\nexport type UInt16 = number;\r\nexport type UInt32 = number;\r\nexport type UInt64 = number;\r\n\r\n\r\nfunction getRandomInt(min : number, max : number) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\nexport function isValidUInt16(value : any) : boolean {\r\n    if (!Number.isFinite(value)) {\r\n        return false;\r\n    }\r\n    return value >= 0 && value <= 0xFFFF;\r\n};\r\n\r\nexport function randomUInt16() : number {\r\n    return getRandomInt(0, 0xFFFF);\r\n};\r\n\r\nexport function encodeUInt16(value : number, stream : DataStream) {\r\n    stream.setUint16(value);\r\n};\r\n\r\nexport function decodeUInt16(stream : DataStream) : number {\r\n    return stream.getUint16();\r\n};\r\n\r\nexport function isValidInt16(value) : boolean {\r\n    if (!Number.isFinite(value)) {\r\n        return false;\r\n    }\r\n    return value >= -0x8000 && value <= 0x7FFF;\r\n};\r\n\r\nexport function randomInt16() : number {\r\n    return getRandomInt(-0x8000, 0x7FFF);\r\n};\r\nexport function encodeInt16(value : number, stream : DataStream) {\r\n    assert(Number.isFinite(value));\r\n    stream.setInt16(value);\r\n};\r\nexport function decodeInt16(stream : DataStream) : number {\r\n    return stream.getInt16();\r\n};\r\n\r\nexport function isValidInt32(value) : boolean {\r\n    if (!Number.isFinite(value)) {\r\n        return false;\r\n    }\r\n    return value >= -0x80000000 && value <= 0x7fffffff;\r\n};\r\nexport function randomInt32() : number {\r\n    return getRandomInt(-0x80000000, 0x7fffffff);\r\n};\r\nexport function encodeInt32(value : number, stream : DataStream) {\r\n    assert(Number.isFinite(value));\r\n    stream.setInt32(value);\r\n};\r\nexport function decodeInt32(stream : DataStream) : number {\r\n    return stream.getInt32();\r\n};\r\n\r\nexport function isValidUInt32(value) : boolean {\r\n    if (!Number.isFinite(value)) {\r\n        return false;\r\n    }\r\n    return value >= 0 && value <= 0xFFFFFFFF;\r\n};\r\n\r\nexport function randomUInt32() : number {\r\n    return getRandomInt(0, 0xFFFFFFFF);\r\n};\r\nexport function encodeUInt32(value : number, stream : DataStream) {\r\n    stream.setUint32(value);\r\n};\r\nexport function decodeUInt32(stream : DataStream) : number {\r\n    return stream.getUint32();\r\n};\r\n\r\nexport function isValidInt8(value) : boolean  {\r\n    if (!Number.isFinite(value)) {\r\n        return false;\r\n    }\r\n    return value >= -0x80 && value <= 0x7F;\r\n}\r\n\r\nexport function randomInt8() : number {\r\n    return getRandomInt(-0x7F, 0x7E);\r\n};\r\nexport function encodeInt8(value : number, stream : DataStream) {\r\n    assert(isValidInt8(value));\r\n    stream.setInt8(value);\r\n};\r\nexport function decodeInt8(stream : DataStream) {\r\n    return stream.getInt8();\r\n};\r\n\r\n\r\nexport var isValidSByte = isValidInt8;\r\nexport var randomSByte = randomInt8;\r\nexport var encodeSByte = encodeInt8;\r\nexport var decodeSByte = decodeInt8;\r\n\r\n\r\nexport function isValidUInt8(value) : boolean {\r\n    if (!Number.isFinite(value)) {\r\n        return false;\r\n    }\r\n    return value >= -0x00 && value <= 0xFF;\r\n};\r\nexport function randomUInt8() : number {\r\n    return getRandomInt(0x00, 0xFF);\r\n};\r\nexport function encodeUInt8(value : number, stream : DataStream) {\r\n    stream.setUint8(value);\r\n};\r\nexport function decodeUInt8(stream : DataStream) {\r\n    return stream.getUint8();\r\n};\r\n\r\nexport var isValidByte = isValidUInt8;\r\nexport var randomByte = randomUInt8;\r\nexport var encodeByte = encodeUInt8;\r\nexport var decodeByte = decodeUInt8;\r\n\r\n\r\nexport function isValidUInt64(value) : boolean {\r\n    return value instanceof Array && value.length === 2;\r\n};\r\nexport function randomUInt64() : Array<number> {\r\n    return [getRandomInt(0, 0xFFFFFFFF), getRandomInt(0, 0xFFFFFFFF)];\r\n};\r\nexport function encodeUInt64(value, stream : DataStream) {\r\n\r\n    if ('number' === typeof value) {\r\n        value = coerceUInt64(value);\r\n    }\r\n    stream.setUint32(value[1]);\r\n    stream.setUint32(value[0]);\r\n};\r\n\r\nexport function decodeUInt64(stream : DataStream) : number[] {\r\n    var low = stream.getUint32();\r\n    var high = stream.getUint32();\r\n    return constructInt64(high, low);\r\n};\r\nexport function constructInt64(high : number, low : number) : number[]{\r\n    assert(low >= 0 && low <= 0xFFFFFFFF);\r\n    assert(high >= 0 && high <= 0xFFFFFFFF);\r\n    return [high, low];\r\n};\r\n\r\nexport function coerceUInt64(value) : number[] {\r\n\r\n    var high, low, v;\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    if (value instanceof Array) {\r\n        assert('number' === typeof value[0]);\r\n        assert('number' === typeof value[1]);\r\n        return value;\r\n    }\r\n    if (typeof value === \"string\") {\r\n        v = value.split(\",\");\r\n        high = parseInt(v[0], 10);\r\n        low = parseInt(v[1], 10);\r\n        return constructInt64(high, low);\r\n    }\r\n    if (value > 0xFFFFFFFF) {\r\n        // beware : as per javascript, value is a double here !\r\n        //          our conversion will suffer from some inacuracy\r\n\r\n        high = Math.floor(value / 0x100000000);\r\n        low = value - high * 0x100000000;\r\n        return constructInt64(high, low);\r\n    }\r\n    return constructInt64(0, value);\r\n};\r\n\r\nexport function randomInt64() : number[] {\r\n    // High, low\r\n    return [getRandomInt(0, 0xFFFFFFFF), getRandomInt(0, 0xFFFFFFFF)];\r\n};\r\n\r\n/*\r\nexport var coerceInt64 = coerceUInt64;\r\nexport var isValidInt64 = isValidUInt64;\r\nexport var encodeInt64 = encodeUInt64;\r\nexport var decodeInt64 = decodeUInt64;\r\n*/\r\n\r\n\r\nexport function coerceInt8(value) : number {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseInt(value, 10);\r\n};\r\nexport function coerceUInt8(value) : number {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseInt(value, 10);\r\n};\r\nexport function coerceByte(value) : number {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseInt(value, 10);\r\n};\r\nexport function coerceSByte(value) : number {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseInt(value, 10);\r\n};\r\n\r\nexport function coerceUInt16(value) : number {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseInt(value, 10);\r\n};\r\nexport function coerceInt16(value) : number {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseInt(value, 10);\r\n};\r\nexport function coerceUInt32(value) : number {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseInt(value, 10);\r\n};\r\nexport function coerceInt32(value) : number {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseInt(value, 10);\r\n};\r\n","\"use strict\";\r\n\r\nimport {DataStream} from './DataStream'\r\n\r\nvar minFloat = -3.40 * Math.pow(10, 38);\r\nvar maxFloat = 3.40 * Math.pow(10, 38);\r\n\r\nexport type Float = number;\r\nexport type Double = number;\r\n\r\n/**\r\n * return a random float value in the range of  min inclusive and  max exclusive\r\n * @method getRandomDouble\r\n * @param min\r\n * @param max\r\n * @return {*}\r\n * @private\r\n */\r\nfunction getRandomDouble(min : number, max : number) {\r\n    return Math.random() * (max - min ) + min;\r\n}\r\n\r\nexport function isValidFloat(value : any) {\r\n    if (!Number.isFinite(value)) {\r\n        return false;\r\n    }\r\n    return value > minFloat && value < maxFloat;\r\n};\r\n\r\nfunction roundToFloat2(float : number) {\r\n    if (float === 0) {\r\n        return float;\r\n    }\r\n    // this method artificially rounds a float to 7 significant digit in base 10\r\n    // Note:\r\n    //   this is to overcome the that that Javascript doesn't  provide  single precision float values (32 bits)\r\n    //   but only double precision float values\r\n\r\n    // wikipedia:(http://en.wikipedia.org/wiki/Floating_point)\r\n    //\r\n    // * Single precision, usually used to represent the \"float\" type in the C language family\r\n    //   (though this is not guaranteed). This is a binary format that occupies 32 bits (4 bytes) and its\r\n    //   significand has a precision of 24 bits (about 7 decimal digits).\r\n    // * Double precision, usually used to represent the \"double\" type in the C language family\r\n    //   (though this is not guaranteed). This is a binary format that occupies 64 bits (8 bytes) and its\r\n    //   significand has a precision of 53 bits (about 16 decimal digits).\r\n    //\r\n    var nbDigits = Math.ceil(Math.log(Math.abs(float)) / Math.log(10));\r\n    var r = Math.pow(10, -nbDigits + 2);\r\n    return Math.round(float * r) / r;\r\n}\r\n\r\nvar r = new Float32Array(1);\r\nfunction roundToFloat(float) {\r\n    r[0] = float;\r\n    var float_r = r[0];\r\n    return float_r;\r\n}\r\n\r\nexport function randomFloat() {\r\n    return roundToFloat(getRandomDouble(-1000, 1000));\r\n};\r\n\r\nexport function encodeFloat(value, stream : DataStream) {\r\n    stream.setFloat32(value);\r\n};\r\n\r\nexport function decodeFloat(stream : DataStream) {\r\n    var float = stream.getFloat32();\r\n    return float;\r\n    //xx return roundToFloat(float);\r\n};\r\n\r\nexport function isValidDouble(value) {\r\n    if (!Number.isFinite(value)) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nexport function randomDouble() {\r\n    return getRandomDouble(-1000000, 1000000);\r\n};\r\n\r\nexport function encodeDouble(value : number, stream : DataStream) {\r\n    stream.setFloat64(value);\r\n};\r\n\r\nexport function decodeDouble(stream : DataStream) {\r\n    return stream.getFloat64();\r\n};\r\n\r\nexport function coerceFloat(value) {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseFloat(value);\r\n};\r\nexport function coerceDouble(value) {\r\n    if (value === null || value === undefined) {\r\n        return value;\r\n    }\r\n    return parseFloat(value);\r\n};\r\n\r\n","\"use strict\";\r\n\r\n/**\r\n * return a random integer value in the range of  min inclusive and  max exclusive\r\n * @method getRandomInt\r\n * @param min\r\n * @param max\r\n * @return {*}\r\n * @private\r\n */\r\nexport function getRandomInt(min : number, max : number) {\r\n    // note : Math.random() returns a random number between 0 (inclusive) and 1 (exclusive):\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}","\"use strict\";\r\nimport {getRandomInt} from './utils';\r\nimport {DataStream} from './DataStream';\r\n\r\nexport function isValidString(value) {\r\n    return typeof value === \"string\";\r\n};\r\nexport function randomString() {\r\n    var nbCar = getRandomInt(1, 20);\r\n    var cars = [];\r\n    for (var i = 0; i < nbCar; i++) {\r\n        cars.push(String.fromCharCode(65 + getRandomInt(0, 26)));\r\n    }\r\n    return cars.join(\"\");\r\n};\r\n\r\nexport function decodeString(stream : DataStream) {\r\n    return stream.readString();\r\n};\r\nexport function encodeString(value : string, stream : DataStream) {\r\n    stream.writeString(value);\r\n};","\"use strict\";\r\n\r\nimport {assert} from '../assert';\r\nimport {DataStream} from './DataStream';\r\n\r\n\r\n//  Date(year, month [, day, hours, minutes, seconds, ms])\r\nexport function isValidDateTime(value) : boolean {\r\n    return value instanceof Date;\r\n};\r\n\r\n/**\r\n * return a random integer value in the range of  min inclusive and  max exclusive\r\n * @method getRandomInt\r\n * @param min\r\n * @param max\r\n * @return {*}\r\n * @private\r\n */\r\nfunction getRandomInt(min, max) {\r\n    // note : Math.random() returns a random number between 0 (inclusive) and 1 (exclusive):\r\n    return Math.floor(Math.random() * (max - min)) + min;\r\n}\r\n\r\n\r\nexport function randomDateTime() : Date {\r\n    var r = getRandomInt;\r\n    return new Date(\r\n      1900 + r(0, 200), r(0, 11), r(0, 28),\r\n      r(0, 24), r(0, 59), r(0, 59), r(0, 1000));\r\n\r\n};\r\nexport function encodeDateTime(date : Date, stream : DataStream) {\r\n\r\n    if (!date) {\r\n        stream.setUint32(0);\r\n        stream.setUint32(0);\r\n        return;\r\n    }\r\n    if (!(date instanceof Date)){\r\n        throw new Error(\"Expecting a Date : but got a \" + typeof(date) + \" \" + (<any>date).toString());\r\n    }\r\n    assert(date instanceof Date);\r\n    var hl = bn_dateToHundredNanoSecondFrom1601(date);\r\n    var hi = hl[0];\r\n    var lo = hl[1];\r\n    stream.setUint32(lo);\r\n    stream.setUint32(hi);\r\n    //xx assert(date.toString() === bn_hundredNanoSecondFrom1601ToDate(hi, lo).toString());\r\n};\r\n\r\nexport function decodeDateTime(stream : DataStream) {\r\n    var lo = stream.getUint32();\r\n    var hi = stream.getUint32();\r\n    return bn_hundredNanoSecondFrom1601ToDate(hi, lo);\r\n};\r\n\r\n\r\nexport function coerceDateTime(value) {\r\n    return new Date(value);\r\n}\r\n\r\nexport var offset_factor_1601 = (function () {\r\n    \r\n        var utc1600 = new Date(Date.UTC(1601, 0, 1, 0, 0, 0));\r\n        var t1600 = utc1600.getTime();\r\n    \r\n        var utc1600_plus_one_day = new Date(Date.UTC(1601, 0, 2, 0, 0, 0));\r\n        var t1600_1d = utc1600_plus_one_day.getTime();\r\n    \r\n        var factor = (24 * 60 * 60 * 1000) * 10000 / (t1600_1d - t1600);\r\n    \r\n        var utc1970 = new Date(Date.UTC(1970, 0, 1, 0, 0, 0));\r\n        var t1970 = utc1970.getTime();\r\n    \r\n        var offsetToGregorianCalendarZero = -t1600 + t1970;\r\n    \r\n        assert(factor === 10000);\r\n        assert(offsetToGregorianCalendarZero === 11644473600000);\r\n        return [offsetToGregorianCalendarZero, factor];\r\n    \r\n})();\r\n    \r\n    \r\n    var offset = offset_factor_1601[0];\r\n    var factor = offset_factor_1601[1];\r\n    \r\n    var F = 0x100000000;\r\n    var A = factor / F;\r\n    var B = offset * A;\r\n    var oh = Math.floor(offset / F);\r\n    var ol = offset % F;\r\n    var fl = factor % F;\r\n    var F_div_factor = ( F / factor);\r\n    \r\n    // Extracted from OpcUA Spec v1.02 : part 6:\r\n    //\r\n    // 5.2.2.5 DateTime\r\n    // A DateTime value shall be encoded as a 64-bit signed integer (see Clause 5.2.2.2) which represents\r\n    // the number of 100 nanosecond intervals since January 1, 1601 (UTC) .\r\n    // Not all DevelopmentPlatforms will be able to represent the full range of dates and times that can be\r\n    // represented with this DataEncoding. For example, the UNIX time_t structure only has a 1 second\r\n    // resolution and cannot represent dates prior to 1970. For this reason, a number of rules shall be\r\n    // applied when dealing with date/time values that exceed the dynamic range of a DevelopmentPlatform.\r\n    //\r\n    // These rules are:\r\n    // a) A date/time value is encoded as 0 if either\r\n    //    1) The value is equal to or earlier than 1601-01-01 12:00AM.\r\n    //    2) The value is the earliest date that can be represented with the DevelopmentPlatform‟s encoding.\r\n    //\r\n    // b) A date/time is encoded as the maximum value for an Int64 if either\r\n    //     1) The value is equal to or greater than 9999-01-01 11:59:59PM,\r\n    //     2) The value is the latest date that can be represented with the DevelopmentPlatform‟s encoding.\r\n    //\r\n    // c) A date/time is decoded as the earliest time that can be represented on the platform if either\r\n    //    1) The encoded value is 0,\r\n    //    2) The encoded value represents a time earlier than the earliest time that can be\r\n    //       represented with the DevelopmentPlatform‟s encoding.\r\n    //\r\n    //  d) A date/time is decoded as the latest time that can be represented on the platform if either\r\n    //    1) The encoded value is the maximum value for an Int64,\r\n    //    2) The encoded value represents a time later than the latest time that can be represented with the\r\n    //       DevelopmentPlatform‟s encoding.\r\n    //\r\n    // These rules imply that the earliest and latest times that can be represented on a given platform are\r\n    // invalid date/time values and should be treated that way by Applications.\r\n    // A decoder shall truncate the value if a decoder encounters a DateTime value with a resolution that is\r\n    // greater than the resolution supported on the DevelopmentPlatform.\r\n    //\r\nexport function bn_dateToHundredNanoSecondFrom1601(date : Date) {\r\n        assert(date instanceof Date);\r\n        if ((<any>date).high_low) {\r\n            return (<any>date).high_low;\r\n        }\r\n    \r\n        // note : The value returned by the getTime method is the number\r\n        //        of milliseconds since 1 January 1970 00:00:00 UTC.\r\n        //\r\n        var t = date.getTime(); // number of milliseconds since since 1 January 1970 00:00:00 UTC.\r\n    \r\n        //Note:\r\n        // The number of 100-nano since 1 Jan 1601 is given by the formula :\r\n        //\r\n        //           value_64 = (t + offset ) * factor;\r\n        //\r\n        // However this number is too large and shall be converted to a 64 bits integer\r\n        //\r\n        // Let say that value_64 = (value_h * 0xFFFFFFFF ) + value_l, where value_h and value_l are two 32bits integers.\r\n        //\r\n        //  Let say F = 0x100000000\r\n        //  (value_h * F ) + value_l =  (t+ offset)*factor;\r\n        //\r\n        //  value_h =  (t+ offset)*factor // F;\r\n        //  value_l =  (t+ offset)*factor %  F;\r\n        //\r\n        //  value_h =  floor(t * factor / F + offset*factor / F)\r\n        //             floor(t * A                    + B)\r\n        //\r\n        //  value_l = ((t % F + offset % F) * (factor % F) )% F\r\n        //  value_l = ((t % F + ol        ) * fl           )% F\r\n    \r\n        var value_h = Math.floor(t * A + B);\r\n        var value_l = ( ( t % F + ol ) * fl ) % F;\r\n        value_l = ( value_l + F ) % F;\r\n        var high_low = [value_h, value_l];\r\n        Object.defineProperty(date, \"high_low\", {\r\n            get: function () {\r\n                return high_low;\r\n            }, enumerable: false\r\n        });\r\n        return high_low;\r\n    }\r\n    \r\nexport function bn_hundredNanoSecondFrom1601ToDate(high, low) {\r\n        //xx assert(_.isFinite(high), _.isFinite(low));\r\n    \r\n        //   (h * F + l)/f    - o=\r\n        //    h / f * F + l/f - o=\r\n        //\r\n        //    h   = ((h div f)* f + h % f)\r\n        //    h/f =     (h div f)   + (h % f) /f\r\n        //    h/f * F = (h div f)*F + (h % f) * F/f\r\n        //    o = oh * F + ol\r\n        var value1 = (Math.floor(high / factor) - oh ) * F + Math.floor(( high % factor ) * F_div_factor + low / factor) - ol;\r\n        var date = new Date(value1);\r\n        // enrich the date\r\n        Object.defineProperty(date, \"high_low\", {\r\n            get: function () {\r\n                return [high, low];\r\n            }, enumerable: false\r\n        });\r\n        return date;\r\n    }\r\n    \r\n    var last_now_date = null;\r\n    var last_picoseconds = 0;\r\n    \r\nexport function getCurrentClock() {\r\n        var now =new Date();\r\n        if (last_now_date  && now.getTime() === last_now_date.getTime()) {\r\n            last_picoseconds = last_picoseconds+1;\r\n        } else {\r\n            last_picoseconds = 0;\r\n            last_now_date = now;\r\n        }\r\n        return {\r\n            timestamp: last_now_date,\r\n            picoseconds: last_picoseconds\r\n        };\r\n    }\r\n    \r\nexport function coerceClock(timestamp,picoseconds) {\r\n        if (timestamp) {\r\n            return {\r\n                timestamp: timestamp,\r\n                picoseconds: picoseconds\r\n            };\r\n        } else {\r\n            return getCurrentClock();\r\n        }\r\n}\r\n    ","\"use strict\";\r\nimport { DataStream } from './DataStream';\r\n\r\nfunction getRandomInt(min : number, max : number) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min\r\n}\r\n\r\n\r\n\r\nexport function isValidByteString(value) {\r\n    return value === null || value instanceof ArrayBuffer;\r\n};\r\nexport function randomByteString(value, len : number){\r\n    len = len || getRandomInt(1, 200);\r\n    var b = new Uint8Array(len);\r\n    for (var i = 0; i < len; i++) {\r\n        b[i] = getRandomInt(0, 255);\r\n    }\r\n    return b;\r\n};\r\nexport function encodeByteString(byteString : Uint8Array, stream : DataStream) : void {\r\n    stream.writeByteStream(byteString);\r\n};\r\nexport function decodeByteString(stream : DataStream) : Uint8Array{\r\n    return stream.readByteStream();\r\n};\r\n\r\nexport function coerceByteString(value) : Uint8Array {\r\n\r\n    if (Array.isArray(value)) {\r\n        return new Uint8Array(value);\r\n    }\r\n    if (typeof value === \"string\") {\r\n        let str = window.btoa(value);\r\n        let buf =  new Uint8Array(str.length);\r\n        for(var i=0,j=str.length;i<j;++i){\r\n            buf[i]=str.charCodeAt(i);\r\n          }\r\n        return buf;\r\n    }\r\n    return value;\r\n}\r\n\r\n","\"use strict\";\r\n\r\nimport {DataStream} from './DataStream';\r\nimport {assert} from '../assert';\r\nimport  '../nodeid/nodeid';\r\nimport {NodeId,NodeIdType,makeNodeId} from '../nodeid/nodeid';\r\nimport {ExpandedNodeId} from '../nodeid/expanded_nodeid';\r\nimport {isValidGuid,decodeGuid,encodeGuid} from './guid'\r\nimport {decodeString,encodeString} from './string';\r\nimport {decodeUInt32,encodeUInt32} from './integers';\r\nimport {encodeByteString,decodeByteString} from './byte_string'\r\nimport {getRandomInt} from './utils';\r\n\r\nexport {NodeId} from '../nodeid/nodeid';\r\nexport {ExpandedNodeId} from '../nodeid/expanded_nodeid';\r\n\r\nimport {set_flag,check_flag} from '../utils';\r\n\r\nenum EnumNodeIdEncoding {\r\n    TwoBytes = 0x00, // A numeric value that fits into the two byte representation.\r\n    FourBytes = 0x01, // A numeric value that fits into the four byte representation.\r\n    Numeric = 0x02, // A numeric value that does not fit into the two or four byte representations.\r\n    String = 0x03, // A String value.\r\n    Guid = 0x04, // A Guid value.\r\n    ByteString = 0x05, // An opaque (ByteString) value.\r\n    NamespaceUriFlag = 0x80, //  NamespaceUriFlag on  ExpandedNodeId is present\r\n    ServerIndexFlag = 0x40  //  NamespaceUriFlag on  ExpandedNodeId is present\r\n};\r\n\r\nfunction is_uint8(value : number) : boolean {\r\n\r\n    return value >= 0 && value <= 0xFF;\r\n}\r\nfunction is_uint16(value : number) : boolean  {\r\n\r\n    return value >= 0 && value <= 0xFFFF;\r\n}\r\n\r\nfunction nodeID_encodingByte(nodeId : NodeId | ExpandedNodeId) : number {\r\n\r\n    if (!nodeId) {\r\n        return 0;\r\n    }\r\n    assert(nodeId.hasOwnProperty(\"identifierType\"));\r\n\r\n    var encodingByte = 0;\r\n\r\n    if (nodeId.identifierType ==NodeIdType.NUMERIC) {\r\n\r\n        if (is_uint8(nodeId.value) && (!nodeId.namespace) && !(<ExpandedNodeId>nodeId).namespaceUri && !(<ExpandedNodeId>nodeId).serverIndex) {\r\n\r\n            encodingByte = set_flag(encodingByte, EnumNodeIdEncoding.TwoBytes);\r\n\r\n        } else if (is_uint16(nodeId.value) && is_uint8(nodeId.namespace) && !(<ExpandedNodeId>nodeId).namespaceUri && !(<ExpandedNodeId>nodeId).serverIndex) {\r\n\r\n            encodingByte = set_flag(encodingByte, EnumNodeIdEncoding.FourBytes);\r\n\r\n        } else {\r\n            encodingByte = set_flag(encodingByte, EnumNodeIdEncoding.Numeric);\r\n        }\r\n\r\n    } else if (nodeId.identifierType == NodeIdType.STRING) {\r\n\r\n        encodingByte = set_flag(encodingByte, EnumNodeIdEncoding.String);\r\n\r\n    } else if (nodeId.identifierType == NodeIdType.BYTESTRING) {\r\n        encodingByte = set_flag(encodingByte, EnumNodeIdEncoding.ByteString);\r\n\r\n    } else if (nodeId.identifierType == NodeIdType.GUID) {\r\n        encodingByte = set_flag(encodingByte, EnumNodeIdEncoding.Guid);\r\n    }\r\n\r\n    if (nodeId instanceof ExpandedNodeId) {\r\n        if (nodeId.namespaceUri) {\r\n            encodingByte = set_flag(encodingByte, EnumNodeIdEncoding.NamespaceUriFlag);\r\n        }\r\n\r\n        if (nodeId.serverIndex) {\r\n            encodingByte = set_flag(encodingByte, EnumNodeIdEncoding.ServerIndexFlag);\r\n        }\r\n    }\r\n \r\n    return encodingByte;\r\n}\r\n\r\n\r\nexport function isValidNodeId(nodeId) : boolean {\r\n    if (nodeId === null || nodeId === void 0) {\r\n        return false;\r\n    }\r\n    return nodeId.hasOwnProperty(\"identifierType\")\r\n      ;\r\n};\r\nexport function randomNodeId() {\r\n\r\n    var value = getRandomInt(0, 0xFFFFF);\r\n    var namespace = getRandomInt(0, 3);\r\n    return makeNodeId(value, namespace);\r\n};\r\n\r\n\r\nfunction _encodeNodeId(encoding_byte : number, nodeId, stream : DataStream) {\r\n\r\n    stream.setUint8(encoding_byte);// encoding byte\r\n\r\n    /*jslint bitwise: true */\r\n    encoding_byte &= 0x3F;\r\n\r\n    switch (encoding_byte) {\r\n        case EnumNodeIdEncoding.TwoBytes:\r\n            stream.setUint8(nodeId ? nodeId.value : 0);\r\n            break;\r\n        case EnumNodeIdEncoding.FourBytes:\r\n            stream.setUint8(nodeId.namespace);\r\n            stream.setUint16(nodeId.value);\r\n            break;\r\n        case EnumNodeIdEncoding.Numeric:\r\n            stream.setUint16(nodeId.namespace);\r\n            stream.setUint32(nodeId.value);\r\n            break;\r\n        case EnumNodeIdEncoding.String:\r\n            stream.setUint16(nodeId.namespace);\r\n            encodeString(nodeId.value, stream);\r\n            break;\r\n        case EnumNodeIdEncoding.ByteString:\r\n            stream.setUint16(nodeId.namespace);\r\n            encodeByteString(nodeId.value, stream);\r\n            break;\r\n        default:\r\n            assert(encoding_byte === EnumNodeIdEncoding.Guid);\r\n            stream.setUint16(nodeId.namespace);\r\n            encodeGuid(nodeId.value, stream);\r\n            break;\r\n    }\r\n\r\n}\r\n\r\nexport function encodeNodeId(nodeId : NodeId, stream : DataStream) {\r\n\r\n    var encoding_byte = nodeID_encodingByte(nodeId);\r\n    /*jslint bitwise: true */\r\n    encoding_byte &= 0x3F;\r\n    _encodeNodeId(encoding_byte, nodeId, stream);\r\n\r\n};\r\n\r\nexport function encodeExpandedNodeId(expandedNodeId : ExpandedNodeId, stream : DataStream) {\r\n    assert(expandedNodeId,\"encodeExpandedNodeId: must provide a valid expandedNodeId\");\r\n    var encodingByte = nodeID_encodingByte(expandedNodeId);\r\n    _encodeNodeId(encodingByte, expandedNodeId, stream);\r\n    if (check_flag(encodingByte, EnumNodeIdEncoding.NamespaceUriFlag)) {\r\n        encodeString(expandedNodeId.namespaceUri, stream);\r\n    }\r\n    if (check_flag(encodingByte, EnumNodeIdEncoding.ServerIndexFlag)) {\r\n        encodeUInt32(expandedNodeId.serverIndex, stream);\r\n    }\r\n};\r\n\r\nvar _decodeNodeId = function (encoding_byte, stream : DataStream) {\r\n\r\n    var value, namespace, nodeIdType;\r\n    /*jslint bitwise: true */\r\n    encoding_byte &= 0x3F;\r\n\r\n    switch (encoding_byte) {\r\n        case EnumNodeIdEncoding.TwoBytes:\r\n            value = stream.getUint8();\r\n            nodeIdType = NodeIdType.NUMERIC;\r\n            break;\r\n        case EnumNodeIdEncoding.FourBytes:\r\n            namespace = stream.getUint8();\r\n            value = stream.getUint16();\r\n            nodeIdType = NodeIdType.NUMERIC;\r\n            break;\r\n        case EnumNodeIdEncoding.Numeric:\r\n            namespace = stream.getUint16();\r\n            value = stream.getUint32();\r\n            nodeIdType = NodeIdType.NUMERIC;\r\n            break;\r\n        case EnumNodeIdEncoding.String:\r\n            namespace = stream.getUint16();\r\n            value = decodeString(stream);\r\n            nodeIdType = NodeIdType.STRING;\r\n            break;\r\n        case EnumNodeIdEncoding.ByteString:\r\n            namespace = stream.getUint16();\r\n            value = decodeByteString(stream);\r\n            nodeIdType = NodeIdType.BYTESTRING;\r\n            break;\r\n        default:\r\n            if (encoding_byte !== EnumNodeIdEncoding.Guid) {\r\n                /*jslint bitwise: true */\r\n                console.log(\" encoding_byte = \" + encoding_byte.toString(16), encoding_byte, encoding_byte & 0x3F);\r\n                throw new Error(\" encoding_byte = \" + encoding_byte.toString(16));\r\n            }\r\n            namespace = stream.getUint16();\r\n            value = decodeGuid(stream);\r\n            nodeIdType = NodeIdType.GUID;\r\n            assert(isValidGuid(value));\r\n            break;\r\n    }\r\n    return new ExpandedNodeId(nodeIdType, value, namespace);\r\n};\r\n\r\nexport function decodeNodeId(stream : DataStream) {\r\n    var encoding_byte = stream.getUint8();\r\n    return _decodeNodeId(encoding_byte, stream);\r\n};\r\n\r\n\r\nexport function decodeExpandedNodeId(stream : DataStream) {\r\n\r\n    var encoding_byte = stream.getUint8();\r\n    var expandedNodeId = _decodeNodeId(encoding_byte, stream);\r\n    expandedNodeId.namespaceUri = null;\r\n    expandedNodeId.serverIndex = 0;\r\n\r\n    if (check_flag(encoding_byte, EnumNodeIdEncoding.NamespaceUriFlag)) {\r\n        expandedNodeId.namespaceUri = decodeString(stream);\r\n    }\r\n    if (check_flag(encoding_byte, EnumNodeIdEncoding.ServerIndexFlag)) {\r\n        expandedNodeId.serverIndex = decodeUInt32(stream);\r\n    }\r\n    var e = expandedNodeId;\r\n    return new ExpandedNodeId( e.identifierType, e.value,e.namespace, e.namespaceUri, e.serverIndex);\r\n};\r\n","\"use strict\";\r\n/**\r\n * @module opcua.datamodel\r\n */\r\nimport {assert} from '../assert';\r\nimport {StatusCodes} from '../constants';\r\nimport { DataStream } from './DataStream';\r\n\r\nvar extraStatusCodeBits = {\r\n\r\n// StatusCode Special bits\r\n//\r\n// StructureChanged 15:15  Indicates that the structure of the associated data value has changed since the last\r\n//                         Notification. Clients should not process the data value unless they re-read the metadata.\r\n//                         Servers shall set this bit if the DataTypeEncoding used for a Variable changes.\r\n//                         7.24 describes how the DataTypeEncoding is specified for a Variable.Servers shall also\r\n//                         set this bit if the EnumStrings Property of the DataType of the Variable changes.\r\n//                         This bit is provided to warn Clients that parse complex data values that their parsing\r\n//                         routines could fail because the serialized form of the data value has changed.\r\n//                         This bit has meaning only for StatusCodes returned as part of a data change Notification\r\n//                         or the HistoryRead. StatusCodes used in other contexts shall always set this bit to zero.\r\n//\r\nStructureChanged: (0x1 << 15),\r\n\r\n// SemanticsChanged 14:14  Semantics of the associated data value have changed. Clients should not process the data\r\n//                         value until they re-read the metadata associated with the Variable. Servers should set\r\n//                         this bit if the metadata has changed in way that could cause application errors if the\r\n//                         Client does not re-read the metadata. For example, a change to the engineering units\r\n//                         could create problems if the Client uses the value to perform calculations.\r\n//                         Part 8 defines the conditions where a Server shall set this bit for a DA Variable.\r\n//                         Other specifications may define additional conditions. A Server may define other\r\n//                         conditions that cause this bit to be set.\r\n//                         This bit has meaning only for StatusCodes returned as part of a data change Notification\r\n//                         or the HistoryRead. StatusCodes used in other contexts shall always set this bit to zero.\r\nSemanticChanged: (0x1<<14),\r\n\r\n// Reserved         12:13  Reserved for future use. Shall always be zero.\r\n\r\n// InfoType         10:11  The type of information contained in the info bits. These bits have the following meanings:\r\n//                         NotUsed    00  The info bits are not used and shall be set to zero.\r\n//                         DataValue  01  The StatusCode and its info bits are associated with a data value\r\n//                                        returned from the Server. This flag is only used in combination with\r\n//                                        StatusCodes defined in Part 8.\r\n//                         Reserved   1X  Reserved for future use. The info bits shall be ignored.\r\n//\r\nInfoTypeDataValue:  (0x1 << 10), // 0x0400,\r\n\r\n// InfoBits         0:9    Additional information bits that qualify the StatusCode.\r\n//                         The structure of these bits depends on the Info Type field.\r\n//\r\n// LimitBits        8:9    The limit bits associated with the data value. The limits bits have the\r\n//                         following meanings:\r\n//                         Limit     Bits   Description\r\n//                         None      00     The value is free to change.\r\n//                         Low       01     The value is at the lower limit for the data source.\r\n//                         High      10     The value is at the higher limit for the data source.\r\n//                         Constant  11     The value is constant and cannot change.\r\nLimitLow:           (0x1 << 8),\r\nLimitHigh:          (0x2 << 8),\r\nLimitConstant:      (0x3 << 8),\r\n\r\n// Overflow         7:7    This bit shall only be set if the MonitoredItem queue size is greater than 1.\r\n//                         If this bit is set, not every detected change has been returned since the Server’s\r\n//                         queue buffer for the MonitoredItem reached its limit and had to purge out data.\r\nOverflow:           (0x1 << 7), // 1 << 7\r\n\r\n\r\n// Reserved         5:6    Reserved for future use. Shall always be zero.\r\n\r\n// HistorianBits    0:4    These bits are set only when reading historical data. They indicate where the data value\r\n//                         came from and provide information that affects how the Client uses the data value.\r\n//                         The historian bits have the following meaning:\r\n//                         Raw            XXX00      A raw data value.\r\n//                         Calculated     XXX01      A data value which was calculated.\r\n//                         Interpolated   XXX10      A data value which was interpolated.\r\n//                         Reserved       XXX11      Undefined.\r\n//                         Partial        XX1XX      A data value which was calculated with an incomplete interval.\r\n//                         Extra Data     X1XXX      A raw data value that hides other data at the same timestamp.\r\n//                         Multi Value    1XXXX      Multiple values match the Aggregate criteria (i.e. multiple\r\n//                                                   minimum values at different timestamps within the same interval).\r\n//                         Part 11 describes how these bits are used in more detail.\r\nHistorianCalculated:   0x1 << 0,\r\nHistorianInterpolated: 0x2 << 0,\r\n\r\nHistorianPartial:      0x1 << 2,\r\nHistorianExtraData:    0x1 << 3,\r\nHistorianMultiValue:   0x1 << 4,\r\n\r\n};\r\n\r\n\r\n\r\n// Release 1.03 144 OPC Unified Architecture, Part 4\r\n\r\n\r\n\r\n\r\n\r\nStatusCodes['Bad'] = {\r\n    name: \"Bad\",\r\n    value: 0x80000000,\r\n    description: \"The value is bad but no specific reason is known.\"\r\n};\r\n\r\nStatusCodes['Uncertain'] = {\r\n    name: \"Uncertain\",\r\n    value: 0x40000000,\r\n    description: \"The value is uncertain but no specific reason is known.\"\r\n};\r\n\r\n\r\n\r\ninterface IStatusCodeOptions {\r\n    value : number;\r\n    description : string;\r\n    name : string;\r\n}\r\n\r\n/**\r\n * a particular StatusCode , with it's value , name and description\r\n *\r\n * @class  StatusCode\r\n * @param options\r\n * @param options.value\r\n * @param options.description\r\n * @param options.name\r\n *\r\n * @constructor\r\n */\r\nexport class StatusCode {\r\n    private _value: number;\r\n    public get value(): number {\r\n        return this._value;\r\n    }\r\n    private _description: string;\r\n    public get description(): string {\r\n        return this._description;\r\n    }\r\n    private _name: string;\r\n    public get name(): string {\r\n        return this._name;\r\n    }\r\nconstructor(options : IStatusCodeOptions) {\r\n    this._value = options.value;\r\n    this._description = options.description;\r\n    this._name = options.name;\r\n    //xx this.highword =  this.value ? 0x8000 + this.value : 0 ;\r\n}\r\n\r\n/**\r\n *\r\n * @method toString\r\n * @return {string}\r\n */\r\npublic toString() : string {\r\n    return this.name + \" (0x\" + (\"0000\" + this.value.toString(16)).substr(-8) + \")\";\r\n};\r\n\r\npublic checkBit(mask) : boolean {\r\n    return (this.value  & mask  ) === mask ;\r\n};\r\n\r\nget hasOverflowBit() {\r\n    return this.checkBit(extraStatusCodeBits.Overflow);\r\n};\r\nget hasSemanticChangedBit() {\r\n    return this.checkBit(extraStatusCodeBits.SemanticChanged);\r\n};\r\nget hasStructureChangedBit() {\r\n    return this.checkBit(extraStatusCodeBits.StructureChanged);\r\n};\r\n\r\npublic valueOf() : number {\r\n    return this.value;\r\n};\r\n}\r\n\r\nclass ConstantStatusCode extends StatusCode {\r\n    constructor(options) {\r\n        super(options);\r\n    }\r\n}\r\n\r\n\r\nexport var encodeStatusCode = function (statusCode, stream : DataStream) {\r\n    assert(statusCode instanceof StatusCode || statusCode instanceof ConstantStatusCode);\r\n    stream.setUint32(statusCode.value);\r\n};\r\n\r\nfunction b(c) {\r\n    var tmp =\"0000000000000000000000\"+(c >>>0).toString(2);\r\n    return tmp.substr(-32);\r\n}\r\nexport var decodeStatusCode = function (stream : DataStream) {\r\n    var code = stream.getUint32();\r\n\r\n    var code_without_info_bits = (code &  0xFFFF0000)>>>0;\r\n    var info_bits = code & 0x0000FFFF;\r\n    //xx console.log(b(mask));\r\n    //xx console.log(b(~mask));\r\n    //xx console.log(b(code));\r\n    //xx console.log(b(code_without_info_bits));\r\n    var sc = StatusCodes_reverse_map[code_without_info_bits];\r\n    if(!sc) {\r\n        sc = StatusCodes['Bad'];\r\n        console.warn(\"expecting a known StatusCode but got 0x\"+ code_without_info_bits.toString(16));\r\n    }\r\n    if (info_bits) {\r\n        var tmp = new ModifiableStatusCode({_base: sc});\r\n        tmp.set(info_bits);\r\n        sc =tmp;\r\n    }\r\n    return sc;\r\n};\r\n\r\n/* construct status codes fast search indexes */\r\nvar StatusCodes_reverse_map = {};\r\nfor (let codeName in StatusCodes) {\r\n     let csc = new ConstantStatusCode(StatusCodes[codeName]);\r\n     StatusCodes_reverse_map[csc.value] = csc;\r\n     StatusCodes[csc.name] = csc;\r\n}\r\n\r\n/**\r\n * @module StatusCodes\r\n * @type {exports.StatusCodes|*}\r\n */\r\nexport {StatusCodes} from '../constants';\r\n\r\nclass ModifiableStatusCode extends StatusCode {\r\n\r\n    private _base : StatusCode;\r\n    private _extraBits : number;\r\nconstructor(options) {\r\n    super(options);\r\n    this._base = options._base;\r\n    this._extraBits = 0;\r\n    if (this._base instanceof ModifiableStatusCode) {\r\n        this._extraBits = this._base._extraBits;\r\n        this._base = this._base._base;\r\n    }\r\n}\r\n\r\n_getExtraName() : string {\r\n    var str = [];\r\n    for(let key in extraStatusCodeBits) {\r\n        let value = extraStatusCodeBits[key];\r\n        if ((this._extraBits & value ) === value) {\r\n            str.push(key);\r\n        }\r\n    }\r\n  \r\n    if (str.length === 0) {\r\n        return \"\";\r\n    }\r\n    return \"#\" + str.join(\"|\");\r\n};\r\n\r\nget value() : number {\r\n    return this._base.value + this._extraBits;\r\n};\r\n\r\nget name() : string {\r\n    return this._base.name + this._getExtraName();\r\n};\r\nget description() : string {\r\n    return this._base.description;\r\n};\r\n\r\n\r\nvalueOf() : number {\r\n    return this._base.value;\r\n};\r\n\r\nset(bit) {\r\n\r\n    if (typeof bit === \"string\") {\r\n        var bitsarray = bit.split(\" | \");\r\n        if (bitsarray.length > 1) {\r\n            for (var i = 0; i < bitsarray.length; i++) {\r\n                this.set(bitsarray[i]);\r\n            }\r\n            return;\r\n        }\r\n        var tmp = extraStatusCodeBits[bit];\r\n        if (!tmp) {\r\n            throw new Error(\"Invalid StatusCode Bit \"+ bit);\r\n        }\r\n        bit = tmp;\r\n    }\r\n    this._extraBits = this._extraBits | bit;\r\n};\r\n\r\nunset(bit) {\r\n\r\n    if (typeof bit === \"string\") {\r\n\r\n        var bitsarray = bit.split(\" | \");\r\n        if (bitsarray.length > 1) {\r\n            for (var i = 0; i < bitsarray.length; i++) {\r\n\r\n                console.log(\" Unset\",this._extraBits.toString(16));\r\n                this.unset(bitsarray[i]);\r\n                console.log(\" Unset\",this._extraBits.toString(16));\r\n            }\r\n            return;\r\n        }\r\n        var tmp = extraStatusCodeBits[bit];\r\n        if (!tmp) {\r\n            throw new Error(\"Invalid StatusCode Bit \"+ bit);\r\n        }\r\n        bit = tmp;\r\n    }\r\n    this._extraBits = this._extraBits & (~bit >>> 0) ;\r\n\r\n};\r\n}\r\n\r\n// return a status code that can be modified\r\nStatusCodes['makeStatusCode'] = function(statusCode,optionalBits) {\r\n    var tmp = new ModifiableStatusCode({\r\n        _base: statusCode\r\n    });\r\n    if (optionalBits) {\r\n        tmp.set(optionalBits);\r\n    }\r\n    return tmp;\r\n};\r\n\r\n\r\nStatusCodes['GoodWithOverflowBit'] = (<any>StatusCodes).makeStatusCode(StatusCodes.Good,\"Overflow | InfoTypeDataValue\");\r\n\r\nexport function coerceStatusCode(statusCode) {\r\n    if (statusCode instanceof StatusCode) {\r\n        return statusCode;\r\n    }\r\n    assert(statusCode.hasOwnProperty(\"name\"));\r\n    return StatusCodes[statusCode.name];\r\n}\r\n\r\n","\"use strict\";\r\nimport {encodeString,decodeString} from './string';\r\n\r\nexport type LocaleId = string;\r\n\r\nexport function validateLocaleId(/*value*/) {\r\n    // TODO : check that localeID is well-formed\r\n    // see part 3 $8.4 page 63\r\n    return true;\r\n};\r\n\r\nexport var encodeLocaleId = encodeString;\r\nexport var decodeLocaleId = decodeString;\r\n","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\n\r\n\r\nimport {constructObject,is_internal_id,registerBuiltInType} from '../factory';\r\n\r\nimport {makeNodeId} from '../nodeid/nodeid';\r\nimport { encodeNodeId, decodeNodeId } from './nodeid';\r\nimport { DataStream } from './DataStream';\r\n\r\nexport class ExtensionObject {\r\n\r\n};\r\n\r\nexport function constructEmptyExtensionObject(expandedNodeId) {\r\n    return constructObject(expandedNodeId);\r\n}\r\n\r\n\r\n// OPC-UA Part 6 - $5.2.2.15 ExtensionObject\r\n// An ExtensionObject is encoded as sequence of bytes prefixed by the  NodeId of its\r\n// DataTypeEncoding and the number of bytes encoded.\r\n\r\n// what the specs say: OCC/UA part 6 $5.2.2.15  ExtensionObject\r\n//\r\n// TypeId |   NodeId  |  The identifier for the DataTypeEncoding node in the Server's AddressSpace.\r\n//                    |  ExtensionObjects defined by the OPC UA specification have a numeric node\r\n//                    |  identifier assigned to them with a NamespaceIndex of 0. The numeric\r\n//                    |  identifiers are defined in A.1.\r\n//\r\n// Encoding | Byte    |  An enumeration that indicates how the body is encoded.\r\n//                    |  The parameter may have the following values:\r\n//                    |      0x00  No body is encoded.\r\n//                    |      0x01  The body is encoded as a ByteString.\r\n//                    |      0x02  The body is encoded as a XmlElement.\r\n//\r\n// Length   | Int32   |  The length of the object body.\r\n//                    |  The length shall be specified if the body is encoded.     <<<<<<<( WTF ?)\r\n//\r\n// Body     | Byte[*] |  The object body\r\n//                    |  This field contains the raw bytes for ByteString bodies.\r\n//                    |  For XmlElement bodies this field contains the XML encoded as a UTF-8\r\n//                    |  string without any null terminator.\r\n//\r\n\r\n\r\nexport function encodeExtensionObject(object, stream : DataStream) {\r\n\r\n\r\n    if (!object) {\r\n        encodeNodeId(makeNodeId(0), stream);\r\n        stream.setUint8(0x00); // no body is encoded\r\n        // note : Length shall not hbe specified, end of the job!\r\n    } else {\r\n        // ensure we have a valid encoding Default Binary ID !!!\r\n\r\n        /* istanbul ignore next */\r\n        if (!object.encodingDefaultBinary) {\r\n            console.log(\"xxxxxxxxx encoding ExtObj \", object);\r\n            throw new Error(\"Cannot find encodingDefaultBinary for this object\");\r\n        }\r\n        /* istanbul ignore next */\r\n        if (object.encodingDefaultBinary.isEmpty()) {\r\n            console.log(\"xxxxxxxxx encoding ExtObj \", object.encodingDefaultBinary.toString());\r\n            throw new Error(\"Cannot find encodingDefaultBinary for this object\");\r\n        }\r\n        /* istanbul ignore next */\r\n        if (is_internal_id(object.encodingDefaultBinary.value)) {\r\n            console.log(\"xxxxxxxxx encoding ExtObj \", object.encodingDefaultBinary.toString(), object.constructor.name);\r\n            throw new Error(\"Cannot find valid OPCUA encodingDefaultBinary for this object\");\r\n        }\r\n\r\n        encodeNodeId(object.encodingDefaultBinary, stream);\r\n        stream.setUint8(0x01); // 0x01 The body is encoded as a ByteString.\r\n        stream.setUint32(DataStream.binaryStoreSize(object));\r\n        object.encode(stream);\r\n    }\r\n}\r\n\r\nexport function decodeExtensionObject(stream : DataStream) {\r\n\r\n    var nodeId = decodeNodeId(stream);\r\n    var encodingType = stream.getUint8();\r\n\r\n    if (encodingType === 0) {\r\n        return null;\r\n    }\r\n\r\n    var length = stream.getUint32();\r\n\r\n    /* istanbul ignore next */\r\n    if (nodeId.value === 0 || encodingType === 0) {\r\n        return null;\r\n    }\r\n\r\n    var object = constructEmptyExtensionObject(nodeId);\r\n\r\n    /* istanbul ignore next */\r\n    if (object === null) {\r\n        // this object is unknown to us ..\r\n        stream.length += length;\r\n        return null;\r\n    }\r\n    object.decode(stream);\r\n    return object;\r\n}\r\n\r\nregisterBuiltInType({\r\n    name: \"ExtensionObject\",\r\n    encode: encodeExtensionObject,\r\n    decode: decodeExtensionObject,\r\n    defaultValue: function () {\r\n        return null;\r\n    }\r\n});\r\n\r\n","//\"use strict\";\r\nexport * from \"./boolean\";\r\nexport * from \"./integers\";\r\nexport * from \"./floats\";\r\nexport * from \"./string\";\r\nexport * from \"./date_time\";\r\nexport * from \"./byte_string\";\r\nexport * from \"./nodeid\";\r\nexport * from \"./status_code\";\r\nexport * from \"./guid\";\r\nexport * from './localeid';\r\nexport * from './array';\r\nexport * from './extension_object';\r\n\r\n\r\nexport {coerceUInt64 as coerceInt64,encodeUInt64 as encodeInt64,decodeUInt64 as decodeInt64,isValidUInt64 as isValidInt64} from './integers';\r\n\r\n// export  {\r\n\r\n//     // ----------------------------------------------\r\n//     boolean.encodeBoolean,\r\n//     decodeBoolean:boolean.decodeBoolean,\r\n//     coerceBoolean:boolean.coerceBoolean,\r\n\r\n//     encodeInt8:integers.encodeInt8,\r\n//     decodeInt8:integers.decodeInt8,\r\n//     coerceInt8:integers.coerceInt8,\r\n\r\n//     encodeInt16:integers.encodeInt16,\r\n//     decodeInt16:integers.decodeInt16,\r\n//     coerceInt16:integers.coerceInt16,\r\n\r\n//     encodeInt32:integers.encodeInt32,\r\n//     decodeInt32:integers.decodeInt32,\r\n//     coerceInt32:integers.coerceInt32,\r\n\r\n//     encodeInt64:integers.encodeInt64,\r\n//     decodeInt64:integers.decodeInt64,\r\n//     coerceInt64:integers.coerceInt64,\r\n\r\n//     //-------------------------\r\n//     encodeUInt8:integers.encodeUInt8,\r\n//     decodeUInt8:integers.decodeUInt8,\r\n//     coerceUInt8:integers.coerceUInt8,\r\n\r\n\r\n//     encodeByte:integers.encodeByte,\r\n//     decodeByte:integers.decodeByte,\r\n//     coerceByte:integers.coerceByte,\r\n\r\n//     encodeSByte:integers.encodeSByte,\r\n//     decodeSByte:integers.decodeSByte,\r\n//     coerceSByte:integers.coerceSByte,\r\n\r\n//     encodeUInt16:integers.encodeUInt16,\r\n//     decodeUInt16:integers.decodeUInt16,\r\n//     coerceUInt16:integers.coerceUInt16,\r\n\r\n//     encodeUInt32:integers.encodeUInt32,\r\n//     decodeUInt32:integers.decodeUInt32,\r\n//     coerceUInt32:integers.coerceUInt32,\r\n\r\n//     encodeUInt64:integers.encodeUInt64,\r\n//     decodeUInt64:integers.decodeUInt64,\r\n//     coerceUInt64:integers.coerceUInt64,\r\n//     //-------------------------\r\n//     encodeFloat:floats.encodeFloat,\r\n//     decodeFloat:floats.decodeFloat,\r\n//     coerceFloat:floats.coerceFloat,\r\n//     //-------------------------\r\n//     encodeDouble:floats.encodeDouble,\r\n//     decodeDouble:floats.decodeDouble,\r\n//     coerceDouble:floats.coerceDouble,\r\n\r\n//     //-------------------------\r\n//     encodeString:string.encodeString,\r\n//     decodeString:string.decodeString,\r\n//     //xx unused coerceString:string.coerceString,\r\n\r\n//     //-------------------------\r\n//     encodeByteString:byte_string.encodeByteString,\r\n//     decodeByteString:byte_string.decodeByteString,\r\n//     coerceByteString:byte_string.coerceByteString,\r\n\r\n//     encodeDateTime: date_time.encodeDateTime,\r\n//     decodeDateTime: date_time.decodeDateTime,\r\n//     coerceDateTime: date_time.coerceDateTime,\r\n\r\n//     encodeNodeId: node_id.encodeNodeId,\r\n//     decodeNodeId: node_id.decodeNodeId,\r\n//     coerceNodeId: node_id.coerceNodeId,\r\n\r\n//     encodeExpandedNodeId:node_id.encodeExpandedNodeId,\r\n//     decodeExpandedNodeId:node_id.decodeExpandedNodeId,\r\n//     coerceExpandedNodeId:node_id.coerceExpandedNodeId,\r\n\r\n//     encodeStatusCode: status_code.encodeStatusCode,\r\n//     decodeStatusCode: status_code.decodeStatusCode,\r\n//     coerceStatusCode: status_code.coerceStatusCode,\r\n\r\n//     encodeGuid: guid.encodeGuid,\r\n//     decodeGuid: guid.decodeGuid,\r\n//     emptyGuid: guid.emptyGuid,\r\n//     //xx coerceGuid: guid.coerceGuid,\r\n\r\n\r\n//     randomByte: integers.randomByte,\r\n//     randomSByte: integers.randomSByte,\r\n//     randomInt8: integers.randomInt8,\r\n//     randomUInt8: integers.randomUInt8,\r\n//     randomInt16: integers.randomInt16,\r\n//     randomUInt16: integers.randomUInt16,\r\n//     randomInt32: integers.randomInt32,\r\n//     randomUInt32: integers.randomUInt32,\r\n//     randomInt64: integers.randomInt64,\r\n//     randomUInt64: integers.randomUInt64,\r\n\r\n//     randomFloat: floats.randomFloat,\r\n//     randomDouble: floats.randomDouble,\r\n\r\n//     randomDateTime: date_time.randomDateTime,\r\n//     randomUtcTime: date_time.randomDateTime,\r\n//     randomString: string.randomString,\r\n//     randomBoolean: boolean.randomBoolean,\r\n//     randomGuid: guid.randomGuid,\r\n//     randomNodeId: node_id.randomNodeId,\r\n//     randomExpandedNodeId: node_id.randomNodeId,\r\n//     randomByteString: byte_string.randomByteString,\r\n\r\n//     isValidFloat: floats.isValidFloat,\r\n//     isValidDouble: floats.isValidDouble,\r\n//     isValidDateTime: date_time.isValidDateTime,\r\n//     isValidString: string.isValidString,\r\n//     isValidBoolean: boolean.isValidBoolean,\r\n//     isValidGuid: guid.isValidGuid,\r\n//     isValidNodeId: node_id.isValidNodeId,\r\n//     isValidByteString: byte_string.isValidByteString,\r\n\r\n//     isValidUInt64: integers.isValidUInt64,\r\n//     isValidUInt32: integers.isValidUInt32,\r\n//     isValidUInt16: integers.isValidUInt16,\r\n//     isValidUInt8: integers.isValidUInt8,\r\n//     isValidInt64: integers.isValidInt64,\r\n//     isValidInt32: integers.isValidInt32,\r\n//     isValidInt16: integers.isValidInt16,\r\n//     isValidInt8: integers.isValidInt8,\r\n//     isValidByte: integers.isValidByte,\r\n//     isValidSByte: integers.isValidSByte,\r\n\r\n//     encodeArray: array.encodeArray,\r\n//     decodeArray: array.decodeArray,\r\n\r\n//     encodeLocaleId: localeid.encodeLocaleId,\r\n//     decodeLocaleId: localeid.decodeLocaleId,\r\n//     validateLocaleId:  localeid.validateLocaleId,\r\n// };","\r\n// UTILITY\r\nvar util = {\r\n    isArray: function (ar) {\r\n        return Array.isArray(ar);\r\n    },\r\n    isBoolean: function (arg) {\r\n        return typeof arg === 'boolean';\r\n    },\r\n    isNull: function (arg) {\r\n        return arg === null;\r\n    },\r\n    isNullOrUndefined: function (arg) {\r\n        return arg == null;\r\n    },\r\n    isNumber: function (arg) {\r\n        return typeof arg === 'number';\r\n    },\r\n    isString: function (arg) {\r\n        return typeof arg === 'string';\r\n    },\r\n    isSymbol: function (arg) {\r\n        return typeof arg === 'symbol';\r\n    },\r\n    isUndefined: function (arg) {\r\n        return arg === void 0;\r\n    },\r\n    isRegExp: function (re) {\r\n        return util.isObject(re) && util.objectToString(re) === '[object RegExp]';\r\n    },\r\n    isObject: function (arg) {\r\n        return typeof arg === 'object' && arg !== null;\r\n    },\r\n    isDate: function (d) {\r\n        return util.isObject(d) && util.objectToString(d) === '[object Date]';\r\n    },\r\n    isError: function (e) {\r\n        return util.isObject(e) &&\r\n            (util.objectToString(e) === '[object Error]' || e instanceof Error);\r\n    },\r\n    isFunction: function (arg) {\r\n        return typeof arg === 'function';\r\n    },\r\n    isPrimitive: function (arg) {\r\n        return arg === null ||\r\n            typeof arg === 'boolean' ||\r\n            typeof arg === 'number' ||\r\n            typeof arg === 'string' ||\r\n            typeof arg === 'symbol' ||  // ES6 symbol\r\n            typeof arg === 'undefined';\r\n    },\r\n    objectToString: function (o) {\r\n        return Object.prototype.toString.call(o);\r\n    }\r\n};\r\n\r\n\r\n// 2. The AssertionError is defined in assert.\r\n// new assert.AssertionError({ message: message,\r\n//                             actual: actual,\r\n//                             expected: expected })\r\n\r\n\r\nexport interface AssertionErrorOpt {\r\n    message: string;\r\n    actual: any;\r\n    expected: any;\r\n    operator?: any;\r\n    stackStartFunction? : Function;\r\n}\r\n\r\nexport class AssertionError extends Error {\r\n\r\n    actual: any;\r\n    expected: any;\r\n    operator: any\r\n    generatedMessage: boolean;\r\n    constructor(options: AssertionErrorOpt) {\r\n        super();\r\n        this.name = 'AssertionError';\r\n        this.actual = options.actual;\r\n        this.expected = options.expected;\r\n        this.operator = options.operator;\r\n        if (options.message) {\r\n            this.message = options.message;\r\n            this.generatedMessage = false;\r\n        } else {\r\n            this.message = getMessage(this);\r\n            this.generatedMessage = true;\r\n        }\r\n        var stackStartFunction = options.stackStartFunction || fail;\r\n        if ((<any>Error).captureStackTrace) {\r\n            (<any>Error).captureStackTrace(this, stackStartFunction);\r\n        } else {\r\n            // try to throw an error now, and from the stack property\r\n            // work out the line that called in to assert.js.\r\n            try {\r\n                this.stack = (new Error).stack.toString();\r\n            } catch (e) { }\r\n        }\r\n    };\r\n}\r\n\r\nfunction replacer(key, value) {\r\n    if (util.isUndefined(value)) {\r\n        return '' + value;\r\n    }\r\n    if (util.isNumber(value) && (isNaN(value) || !isFinite(value))) {\r\n        return value.toString();\r\n    }\r\n    if (util.isFunction(value) || util.isRegExp(value)) {\r\n        return value.toString();\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction truncate(s, n) {\r\n    if (util.isString(s)) {\r\n        return s.length < n ? s : s.slice(0, n);\r\n    } else {\r\n        return s;\r\n    }\r\n}\r\n\r\nfunction getMessage(self) {\r\n    return truncate(JSON.stringify(self.actual, replacer), 128) + ' ' +\r\n        self.operator + ' ' +\r\n        truncate(JSON.stringify(self.expected, replacer), 128);\r\n}\r\n\r\n// At present only the three keys mentioned above are used and\r\n// understood by the spec. Implementations or sub modules can pass\r\n// other keys to the AssertionError's constructor - they will be\r\n// ignored.\r\n\r\n// 3. All of the following functions must throw an AssertionError\r\n// when a corresponding condition is not met, with a message that\r\n// may be undefined if not provided.  All assertion methods provide\r\n// both the actual and expected values to the assertion error for\r\n// display purposes.\r\n\r\nfunction fail(actual, expected, message, operator, stackStartFunction) {\r\n    throw new AssertionError({\r\n        message: message,\r\n        actual: actual,\r\n        expected: expected,\r\n        operator: operator,\r\n        stackStartFunction: stackStartFunction\r\n    });\r\n}\r\n\r\n// EXTENSION! allows for well behaved errors defined elsewhere.\r\n\r\n// 4. Pure assertion tests whether a value is truthy, as determined\r\n// by !!guard.\r\n// assert.ok(guard, message_opt);\r\n// This statement is equivalent to assert.equal(true, !!guard,\r\n// message_opt);. To test strictly for the value true, use\r\n// assert.strictEqual(true, guard, message_opt);.\r\n\r\nexport function assert(value:any, message?:any) {\r\n    if (!value) fail(value, true, message, '==', assert);\r\n}\r\n\r\n","\"use strict\";\r\n/* global: Buffer */\r\n/**\r\n * @module opcua.datamodel\r\n */\r\nimport {NodeId,NodeIdType, coerceNodeId} from  './nodeid';\r\n\r\n/**\r\n * An ExpandedNodeId extends the NodeId structure.\r\n *\r\n * An ExpandedNodeId extends the NodeId structure by allowing the NamespaceUri to be\r\n * explicitly specified instead of using the NamespaceIndex. The NamespaceUri is optional. If it\r\n * is specified then the NamespaceIndex inside the NodeId shall be ignored.\r\n *\r\n * The ExpandedNodeId is encoded by first encoding a NodeId as described in Clause 5 .2.2.9\r\n * and then encoding NamespaceUri as a String.\r\n *\r\n * An instance of an ExpandedNodeId may still use the NamespaceIndex instead of the\r\n * NamespaceUri. In this case, the NamespaceUri is not encoded in the stream. The presence of\r\n * the NamespaceUri in the stream is indicated by setting the NamespaceUri flag in the encoding\r\n * format byte for the NodeId.\r\n *\r\n * If the NamespaceUri is present then the encoder shall encode the NamespaceIndex as 0 in\r\n * the stream when the NodeId portion is encoded. The unused NamespaceIndex is included in\r\n * the stream for consistency,\r\n *\r\n * An ExpandedNodeId may also have a ServerIndex which is encoded as a UInt32 after the\r\n * NamespaceUri. The ServerIndex flag in the NodeId encoding byte indicates whether the\r\n * ServerIndex is present in the stream. The ServerIndex is omitted if it is equal to zero.\r\n *\r\n * @class  ExpandedNodeId\r\n * @extends NodeId\r\n *\r\n *\r\n *\r\n * @param {NodeIdType}                identifierType   - the nodeID type\r\n * @param {Number|String|GUID|Buffer} value            - the node id value. The type of Value depends on identifierType.\r\n * @param {Number}                    namespace        - the index of the related namespace (optional , default value = 0 )\r\n * @param {String|null}               namespaceUri     - NamespaceUri\r\n * @param {UInteger32|null}               serverIndex      - the server Index\r\n * @constructor\r\n */\r\nexport class ExpandedNodeId extends NodeId {\r\n    public namespaceUri : string;\r\n    public serverIndex : number;\r\n    constructor(identifierType : NodeIdType, value, namespace : number = 0, namespaceUri? : string, serverIndex? : number) {\r\n        super(identifierType,value,namespace);\r\n        this.namespaceUri = namespaceUri || null;\r\n        this.serverIndex = serverIndex || 0;\r\n    }\r\n\r\n    /**\r\n * @method toString\r\n * @return {string}\r\n */\r\n    toString() : string {\r\n    var str = super.toString();\r\n    if (this.namespaceUri) {\r\n        str += \";namespaceUri:\" + this.namespaceUri;\r\n    }\r\n    if (this.serverIndex) {\r\n        str += \";serverIndex:\" + this.serverIndex;\r\n    }\r\n    return str;\r\n    };\r\n    \r\n    \r\n    /**\r\n     * convert nodeId to a JSON string. same as {@link NodeId#toString }\r\n     * @method  toJSON\r\n     * @return {string}\r\n     */\r\n    toJSON() : string {\r\n        return this.toString();\r\n    };\r\n\r\n    static coerceExpandedNodeId(value) : ExpandedNodeId {\r\n        var n = coerceNodeId(value);\r\n        return new ExpandedNodeId(n.identifierType, n.value, n.namespace, /*namespaceUri*/null, /*serverIndex*/0)\r\n    \r\n    }\r\n    \r\n}\r\n\r\n/**\r\n * @method  makeExpandedNodeId\r\n * @param  value {ExpandedNodeId|NodeId|Integer}\r\n * @param [namespace=0] {Integer} the namespace\r\n * @return {ExpandedNodeId}\r\n */\r\nexport function makeExpandedNodeId(value : any, namespace? : number) {\r\n\r\n    if (value === undefined && namespace === undefined) {\r\n        return new ExpandedNodeId(NodeIdType.NUMERIC, 0, 0, null, 0);\r\n    }\r\n    var serverIndex = 0, n;\r\n    var namespaceUri = null;\r\n\r\n    if (value instanceof ExpandedNodeId) {\r\n        // construct from a ExpandedNodeId => copy\r\n        n = value;\r\n        return new ExpandedNodeId(n.identifierType, n.value, n.namespace, n.namespaceUri, n.serverIndex);\r\n    }\r\n    if (value instanceof NodeId) {\r\n        // construct from a nodeId\r\n        n = value;\r\n        return new ExpandedNodeId(n.identifierType, n.value, n.namespace, namespaceUri, serverIndex);\r\n    }\r\n\r\n    var valueInt = parseInt(value, 10);\r\n    if (!Number.isFinite(valueInt)) {\r\n        throw new Error(\" cannot makeExpandedNodeId out of \" + value);\r\n    }\r\n    namespace = namespace || 0;\r\n    return new ExpandedNodeId(NodeIdType.NUMERIC, valueInt, namespace, namespaceUri, serverIndex);\r\n};\r\n","    \"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n * @class Factory\r\n * @static\r\n */\r\n\r\n\r\nimport {assert} from \"../assert\";\r\nimport { ExpandedNodeId } from \"../basic-types\";\r\n\r\n\r\nvar constructorMap = {};\r\n\r\nvar _global_factories = {};\r\n\r\nexport function getFactory(type_name : string ) {\r\n    return _global_factories[type_name];\r\n};\r\n\r\nexport function registerFactory(type_name : string, constructor : Function) {\r\n\r\n    /* istanbul ignore next */\r\n    if (getFactory(type_name)) {\r\n        console.log(getFactory(type_name));\r\n        throw new Error(\" registerFactory  : \" + type_name + \" already registered\");\r\n    }\r\n    _global_factories[type_name] = constructor;\r\n};\r\n\r\n/* istanbul ignore next */\r\nexport function dump() {\r\n    console.log(\" dumping registered factories\");\r\n    Object.keys(_global_factories).sort().forEach(function (e) {\r\n        console.log(\" Factory \", e);\r\n    });\r\n    console.log(\" done\");\r\n};\r\n\r\nexport function callConstructor(constructor: Function ) {\r\n\r\n    assert('function' === typeof constructor);\r\n\r\n    var FactoryFunction = constructor.bind.apply(constructor, arguments);\r\n\r\n    return new FactoryFunction();\r\n}\r\n\r\n\r\nexport function getConstructor(expandedId) {\r\n\r\n    if (!(expandedId && (expandedId.value in constructorMap))) {\r\n        console.log(\"#getConstructor : cannot find constructor for expandedId \", expandedId.toString());\r\n        return null;\r\n    }\r\n    return constructorMap[expandedId.value];\r\n};\r\n\r\nexport function hasConstructor(expandedId) {\r\n    if (!expandedId) { return false; }\r\n    assert(expandedId.hasOwnProperty(\"value\"));\r\n    // only namespace 0 can be in constructorMap\r\n    if (expandedId.namespace !== 0){ return false}\r\n    return !!constructorMap[expandedId.value];\r\n};\r\n\r\nexport function constructObject(expandedNodeId) {\r\n    var constructor = getConstructor(expandedNodeId);\r\n    if (!constructor) { return null; }\r\n    return callConstructor(constructor);\r\n};\r\n\r\nexport function register_class_definition(classname : string, class_constructor : any, nodeId : ExpandedNodeId) {\r\n\r\n    registerFactory(classname, class_constructor);\r\n\r\n    /* istanbul ignore next */\r\n    if (nodeId.value in constructorMap) {\r\n        throw new Error(\" Class \" + classname + \" with ID \" + nodeId + \"  already in constructorMap for  \" + constructorMap[nodeId.value].name);\r\n    }\r\n    class_constructor.prototype.encodingDefaultBinary = nodeId;\r\n    constructorMap[nodeId.value] = class_constructor;\r\n}\r\n\r\n\r\n","export var doDebug = false;\r\n\r\nexport function debugLog(...args) {\r\n    console.log(args);\r\n}\r\n//export function debugLog(str : String) {\r\n//    console.log(str);\r\n//} \r\n\r\nvar _fillUp = function (value, count, fillWith) {\r\n    var l = count - value.length;\r\n    var ret = \"\";\r\n    while (--l > -1)\r\n        ret += fillWith;\r\n    return ret + value;\r\n}\r\n\r\nexport function hexDump (arrayBuffer : ArrayBuffer, offset?, length?) {\r\n\r\n    var view = new DataView(arrayBuffer);\r\n    offset = offset || 0;\r\n    length = length || arrayBuffer.byteLength;\r\n\r\n    var out = _fillUp(\"Offset\", 8, \" \") + \"  00 01 02 03 04 05 06 07 08 09 0A 0B 0C 0D 0E 0F\\n\";\r\n    var row = \"\";\r\n    for (var i = 0; i < length; i += 16) {\r\n        row += _fillUp(offset.toString(16).toUpperCase(), 8, \"0\") + \"  \";\r\n        var n = Math.min(16, length - offset);\r\n        var string = \"\";\r\n        for (var j = 0; j < 16; ++j) {\r\n            if (j < n) {\r\n                var value = view.getUint8(offset);\r\n                string += value >= 32 ? String.fromCharCode(value) : \".\";\r\n                row += _fillUp(value.toString(16).toUpperCase(), 2, \"0\") + \" \";\r\n                offset++;\r\n            }\r\n            else {\r\n                row += \"   \";\r\n                string += \" \";\r\n            }\r\n        }\r\n        row += \" \" + string + \"\\n\";\r\n    }\r\n    out += row;\r\n    return out;\r\n};","import * as factories from '../factory';\r\nimport {encodeInt32,decodeInt32} from '../basic-types';\r\nexport enum DataType {\r\n    Null =              0,\r\n    Boolean =           1,\r\n    SByte =             2, // signed Byte = Int8\r\n    Byte =             3, // unsigned Byte = UInt8\r\n    Int16 =             4,\r\n    UInt16 =            5,\r\n    Int32 =             6,\r\n    UInt32 =            7,\r\n    Int64 =             8,\r\n    UInt64 =            9,\r\n    Float =            10,\r\n    Double =           11,\r\n    String =           12,\r\n    DateTime =         13,\r\n    Guid =             14,\r\n    ByteString =       15,\r\n    XmlElement =       16,\r\n    NodeId =           17,\r\n    ExpandedNodeId =   18,\r\n    StatusCode =       19,\r\n    QualifiedName =    20,\r\n    LocalizedText =    21,\r\n    ExtensionObject =  22,\r\n    DataValue =        23,\r\n    Variant =          24,\r\n    DiagnosticInfo =   25\r\n}\r\n\r\nfactories.registerEnumeration(\"DataType\",DataType,encodeInt32,decodeInt32);\r\n","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IRequestHeader {\n\t\tauthenticationToken? : ec.NodeId;\n\t\ttimestamp? : Date;\n\t\trequestHandle? : ec.UInt32;\n\t\treturnDiagnostics? : ec.UInt32;\n\t\tauditEntryId? : string;\n\t\ttimeoutHint? : ec.UInt32;\n\t\tadditionalHeader? : ec.ExtensionObject;\n}\n\n/**\nThe header passed with every server request.\n*/\n\nexport class RequestHeader {\n \t\tauthenticationToken : ec.NodeId;\n\t\ttimestamp : Date;\n\t\trequestHandle : ec.UInt32;\n\t\treturnDiagnostics : ec.UInt32;\n\t\tauditEntryId : string;\n\t\ttimeoutHint : ec.UInt32;\n\t\tadditionalHeader : ec.ExtensionObject;\n\n\tconstructor(\toptions? : IRequestHeader) { \n\t\toptions = options || {};\n\t\tthis.authenticationToken= (options.authenticationToken) ? options.authenticationToken:null;\n\t\tthis.timestamp= (options.timestamp) ? options.timestamp:null;\n\t\tthis.requestHandle= (options.requestHandle) ? options.requestHandle:null;\n\t\tthis.returnDiagnostics= (options.returnDiagnostics) ? options.returnDiagnostics:null;\n\t\tthis.auditEntryId= (options.auditEntryId) ? options.auditEntryId:null;\n\t\tthis.timeoutHint= (options.timeoutHint) ? options.timeoutHint:null;\n\t\tthis.additionalHeader= (options.additionalHeader) ? options.additionalHeader:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.authenticationToken,out);\n\t\tec.encodeDateTime(this.timestamp,out);\n\t\tec.encodeUInt32(this.requestHandle,out);\n\t\tec.encodeUInt32(this.returnDiagnostics,out);\n\t\tec.encodeString(this.auditEntryId,out);\n\t\tec.encodeUInt32(this.timeoutHint,out);\n\t\tec.encodeExtensionObject(this.additionalHeader,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.authenticationToken = ec.decodeNodeId(inp);\n\t\tthis.timestamp = ec.decodeDateTime(inp);\n\t\tthis.requestHandle = ec.decodeUInt32(inp);\n\t\tthis.returnDiagnostics = ec.decodeUInt32(inp);\n\t\tthis.auditEntryId = ec.decodeString(inp);\n\t\tthis.timeoutHint = ec.decodeUInt32(inp);\n\t\tthis.additionalHeader = ec.decodeExtensionObject(inp);\n\n\t}\n\n\n\tclone(\ttarget? : RequestHeader) : RequestHeader { \n\t\tif(!target) {\n\t\t\ttarget = new RequestHeader();\n\t\t}\n\t\ttarget.authenticationToken = this.authenticationToken;\n\t\ttarget.timestamp = this.timestamp;\n\t\ttarget.requestHandle = this.requestHandle;\n\t\ttarget.returnDiagnostics = this.returnDiagnostics;\n\t\ttarget.auditEntryId = this.auditEntryId;\n\t\ttarget.timeoutHint = this.timeoutHint;\n\t\ttarget.additionalHeader = this.additionalHeader;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRequestHeader(\tinp : DataStream) : RequestHeader { \n\t\tlet obj = new RequestHeader();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"RequestHeader\",RequestHeader, makeExpandedNodeId(391,0));","\n\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IResponseHeader {\n\t\ttimestamp? : Date;\n\t\trequestHandle? : ec.UInt32;\n\t\tserviceResult? : ec.StatusCode;\n\t\tserviceDiagnostics? : DiagnosticInfo;\n\t\tstringTable? : string[];\n\t\tadditionalHeader? : ec.ExtensionObject;\n}\n\n/**\nThe header passed with every server response.\n*/\n\nexport class ResponseHeader {\n \t\ttimestamp : Date;\n\t\trequestHandle : ec.UInt32;\n\t\tserviceResult : ec.StatusCode;\n\t\tserviceDiagnostics : DiagnosticInfo;\n\t\tstringTable : string[];\n\t\tadditionalHeader : ec.ExtensionObject;\n\n\tconstructor(\toptions? : IResponseHeader) { \n\t\toptions = options || {};\n\t\tthis.timestamp= (options.timestamp) ? options.timestamp:null;\n\t\tthis.requestHandle= (options.requestHandle) ? options.requestHandle:null;\n\t\tthis.serviceResult= (options.serviceResult) ? options.serviceResult:null;\n\t\tthis.serviceDiagnostics= (options.serviceDiagnostics) ? options.serviceDiagnostics:new DiagnosticInfo();\n\t\tthis.stringTable= (options.stringTable) ? options.stringTable:[];\n\t\tthis.additionalHeader= (options.additionalHeader) ? options.additionalHeader:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeDateTime(this.timestamp,out);\n\t\tec.encodeUInt32(this.requestHandle,out);\n\t\tec.encodeStatusCode(this.serviceResult,out);\n\t\tthis.serviceDiagnostics.encode(out);\n\t\tec.encodeArray(this.stringTable,out,ec.encodeString);\n\t\tec.encodeExtensionObject(this.additionalHeader,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.timestamp = ec.decodeDateTime(inp);\n\t\tthis.requestHandle = ec.decodeUInt32(inp);\n\t\tthis.serviceResult = ec.decodeStatusCode(inp);\n\t\tthis.serviceDiagnostics.decode(inp);\n\t\tthis.stringTable = ec.decodeArray(inp,ec.decodeString);\n\t\tthis.additionalHeader = ec.decodeExtensionObject(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ResponseHeader) : ResponseHeader { \n\t\tif(!target) {\n\t\t\ttarget = new ResponseHeader();\n\t\t}\n\t\ttarget.timestamp = this.timestamp;\n\t\ttarget.requestHandle = this.requestHandle;\n\t\ttarget.serviceResult = this.serviceResult;\n\t\tif (this.serviceDiagnostics) { target.serviceDiagnostics = this.serviceDiagnostics.clone();}\n\t\ttarget.stringTable = ec.cloneArray(this.stringTable);\n\t\ttarget.additionalHeader = this.additionalHeader;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeResponseHeader(\tinp : DataStream) : ResponseHeader { \n\t\tlet obj = new ResponseHeader();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ResponseHeader\",ResponseHeader, makeExpandedNodeId(394,0));","\"use strict\";\r\n\r\nimport {assert} from '../assert'\r\nimport {isValidGuid,emptyGuid} from '../basic-types/guid'\r\nimport * as constants from '../constants';\r\nimport { isEqual } from '../utils';\r\n\r\n/**\r\n * @module opcua.datamodel\r\n */\r\n\r\n\r\n\r\n\r\n\r\n/**\r\n * `NodeIdType` an enumeration that specifies the possible types of a `NodeId` value.\r\n * @class NodeIdType\r\n */\r\nexport enum NodeIdType {\r\n    /**\r\n     * @static\r\n     * @property NUMERIC\r\n     * @type EnumItem\r\n     * @default 0x1\r\n     */\r\n    NUMERIC = 0x01,\r\n    /**\r\n     * @static\r\n     * @property STRING\r\n     * @type EnumItem\r\n     * @default 0x2\r\n     */\r\n    STRING = 0x02,\r\n    /**\r\n     * @static\r\n     * @property GUID\r\n     * @type EnumItem\r\n     * @default 0x3\r\n     */\r\n    GUID = 0x03,\r\n    /**\r\n     * @static\r\n     * @property BYTESTRING\r\n     * @type EnumItem\r\n     * @default 0x4\r\n     */\r\n    BYTESTRING = 0x04\r\n};\r\n\r\n\r\nexport class NodeId {\r\n\r\nstatic NullNodeId : NodeId = new NodeId(NodeIdType.NUMERIC,0);\r\npublic identifierType : NodeIdType;\r\npublic value : any;\r\npublic namespace : number;\r\n\r\n/**\r\n * Construct a node ID\r\n *\r\n * @class NodeId\r\n * @param {NodeIdType}                identifierType   - the nodeID type\r\n * @param {Number|String|GUID|Buffer} value            - the node id value. The type of Value depends on identifierType.\r\n * @param {Number}                    namespace        - the index of the related namespace (optional , default value = 0 )\r\n * @example\r\n *\r\n *    ``` javascript\r\n *    var nodeId = new NodeId(NodeIdType.NUMERIC,123,1);\r\n *    ```\r\n * @constructor\r\n */\r\nconstructor(identifierType : NodeIdType, value, namespace : number = 0) {\r\n    this.identifierType = identifierType;\r\n\r\n    assert(this.identifierType);\r\n    /**\r\n     * @property  value\r\n     * @type  {*}\r\n     */\r\n\r\n    this.value = value;\r\n    /**\r\n     * @property namespace\r\n     * @type {Number}\r\n     */\r\n    this.namespace = namespace || 0;\r\n\r\n    // namespace shall be a UInt16\r\n    assert(this.namespace >= 0 && this.namespace <= 0xFFFF);\r\n\r\n    assert(this.identifierType !== NodeIdType.NUMERIC || (this.value >= 0 && this.value <= 0xFFFFFFFF));\r\n    assert(this.identifierType !== NodeIdType.GUID || isValidGuid(this.value));\r\n    assert(this.identifierType !== NodeIdType.STRING || typeof this.value === \"string\");\r\n\r\n}\r\n\r\n/**\r\n * get the string representation of the nodeID.\r\n *\r\n * @method toString\r\n * @example\r\n *\r\n *    ``` javascript\r\n *    var nodeid = new NodeId(NodeIdType.NUMERIC, 123,1);\r\n *    console.log(nodeid.toString());\r\n *    ```\r\n *\r\n *    ```\r\n *    >\"ns=1;i=123\"\r\n *    ```\r\n *\r\n * @param [options.addressSpace] {AddressSpace}\r\n * @return {string}\r\n */\r\ntoString(options?:any) : string {\r\n\r\n    var addressSpace = options ? options.addressSpace : null;\r\n    var str;\r\n    switch (this.identifierType) {\r\n        case NodeIdType.NUMERIC:\r\n            str = \"ns=\" + this.namespace + \";i=\" + this.value;\r\n            break;\r\n        case NodeIdType.STRING:\r\n            str = \"ns=\" + this.namespace + \";s=\" + this.value;\r\n            break;\r\n        case NodeIdType.GUID:\r\n            str = \"ns=\" + this.namespace + \";g=\" + this.value;\r\n            break;\r\n        default:\r\n            assert(this.identifierType === NodeIdType.BYTESTRING, \"invalid identifierType in NodeId : \" + this.identifierType);\r\n            str = \"ns=\" + this.namespace + \";b=\" + this.value.toString(\"hex\");\r\n            break;\r\n    }\r\n\r\n    if (addressSpace) {\r\n        if (this.namespace === 0 && (this.identifierType === NodeIdType.NUMERIC)) {\r\n            // find standard browse name\r\n            var name = reverse_map(this.value) || \"<undefined>\";\r\n            str += \" \" + name.green.bold;\r\n        } else {\r\n            // let use the provided address space to figure out the browseNode of this node.\r\n            // to make the message a little bit more useful.\r\n            var n = addressSpace.findNode(this);\r\n            str += \" \" + (n ? n.browseName.toString().green : \" (????)\");\r\n        }\r\n    }\r\n    return str;\r\n};\r\n\r\n\r\n/**\r\n * convert nodeId to a JSON string. same as {@link NodeId#toString }\r\n * @method  toJSON\r\n * @return {string}\r\n */\r\ntoJSON() : string {\r\n    return this.toString();\r\n};\r\n\r\n\r\n/**\r\n * @method isEmpty\r\n * @return {Boolean} true if the NodeId is null or empty\r\n */\r\nisEmpty() : Boolean {\r\n    switch (this.identifierType) {\r\n        case NodeIdType.NUMERIC:\r\n            return this.value === 0;\r\n        case NodeIdType.STRING:\r\n            return !this.value || this.value.length === 0;\r\n        case NodeIdType.GUID:\r\n            return !this.value || this.value === emptyGuid;\r\n        default:\r\n            assert(this.identifierType === NodeIdType.BYTESTRING, \"invalid identifierType in NodeId : \" + this.identifierType);\r\n            return !this.value || this.value.length === 0;\r\n    }\r\n};\r\n\r\n\r\n/**\r\n * @class NodeId\r\n * @method displayText\r\n * @return {String}\r\n */\r\n    displayText() : String {\r\n    \r\n        if (this.namespace === 0 && this.identifierType === NodeIdType.NUMERIC) {\r\n            var name = reverse_map(this.value);\r\n            if (name) {\r\n                return name + \" (\" + this.toString() + \")\";\r\n            }\r\n        }\r\n        return this.toString();\r\n    \r\n    };\r\n    \r\n    static sameNodeId(n1: NodeId,n2 : NodeId) : boolean {\r\n        if (n1.identifierType !== n2.identifierType) {\r\n            return false;\r\n        }\r\n        if (n1.namespace !== n2.namespace) {\r\n            return false;\r\n        }\r\n        switch(n1.identifierType) {\r\n            case NodeIdType.NUMERIC:\r\n            case NodeIdType.STRING:\r\n                return n1.value === n2.value;\r\n            default:\r\n                return isEqual(n1.value,n2.value);\r\n        }\r\n    }\r\n\r\n};\r\n\r\n/**\r\n * construct a node Id from a value and a namespace.\r\n * @class opcua\r\n * @method makeNodeId\r\n * @static\r\n * @param {String|Buffer} value\r\n * @param [namespace]=0 {Number} the node id namespace\r\n * @return {NodeId}\r\n */\r\n\r\nexport function makeNodeId(value : Uint8Array|string|number, namespace?:number) : NodeId {\r\n\r\n    value = value || 0;\r\n    namespace = namespace || 0;\r\n\r\n    var identifierType = NodeIdType.NUMERIC;\r\n    if (typeof value === \"string\") {\r\n        //            1         2         3\r\n        //  012345678901234567890123456789012345\r\n        // \"72962B91-FA75-4AE6-8D28-B404DC7DAF63\"\r\n        if (isValidGuid(value)) {\r\n            identifierType = NodeIdType.GUID;\r\n        } else {\r\n            identifierType = NodeIdType.STRING;\r\n            // detect accidental string of form \"ns=x;x\";\r\n            assert(value.indexOf(\"ns=\") === -1, \" makeNodeId(string) ? did you mean using coerceNodeId instead? \");\r\n        }\r\n    } else if (value instanceof Uint8Array) {\r\n        identifierType = NodeIdType.BYTESTRING;\r\n    }\r\n\r\n    var nodeId = new NodeId(identifierType, value, namespace);\r\n\r\n    assert(nodeId.hasOwnProperty(\"identifierType\"));\r\n\r\n    return nodeId;\r\n};\r\n\r\n\r\nvar DataTypeIds = constants.DataTypeIds;\r\nvar VariableIds = constants.VariableIds;\r\nvar ObjectIds = constants.ObjectIds;\r\nvar ObjectTypeIds = constants.ObjectTypeIds;\r\nvar VariableTypeIds = constants.VariableTypeIds;\r\nvar MethodIds = constants.MethodIds;\r\nvar ReferenceTypeIds = constants.ReferenceTypeIds;\r\n\r\n// reverse maps\r\nvar _nodeid_to_name_index = {};\r\nvar _name_to_nodeid_index = {};\r\n\r\n(function build_standard_nodeid_indexes() {\r\n\r\n    function expand_map(direct_index) {\r\n        for (var name in direct_index) {\r\n            if (direct_index.hasOwnProperty(name)) {\r\n                var value = direct_index[name];\r\n                _nodeid_to_name_index[value] = name;\r\n                _name_to_nodeid_index[name] = new NodeId(NodeIdType.NUMERIC, value, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    _nodeid_to_name_index = {};\r\n    _name_to_nodeid_index = {};\r\n    expand_map(ObjectIds);\r\n    expand_map(ObjectTypeIds);\r\n    expand_map(VariableIds);\r\n    expand_map(VariableTypeIds);\r\n    expand_map(MethodIds);\r\n    expand_map(ReferenceTypeIds);\r\n    expand_map(DataTypeIds);\r\n\r\n})();\r\n\r\nfunction reverse_map(nodeId) {\r\n    return _nodeid_to_name_index[nodeId];\r\n}\r\n\r\n\r\n/**\r\n * @class opcua\r\n * @method resolveNodeId\r\n * @static\r\n * @param node_or_string {NodeId|String}\r\n * @return {NodeId}\r\n */\r\nexport function resolveNodeId(node_or_string : NodeId | string) : NodeId {\r\n\r\n    var nodeId : NodeId;\r\n    var raw_id = _name_to_nodeid_index[<string>node_or_string];\r\n    if (raw_id !== undefined) {\r\n        return raw_id;\r\n    } else {\r\n        nodeId = coerceNodeId(node_or_string);\r\n    }\r\n    return nodeId;\r\n}\r\n\r\n\r\nfunction from_hex(str : string) : Uint8Array {\r\n    var size = str.length / 2\r\n      , buf = new Uint8Array(size)\r\n      , character = ''\r\n  \r\n    for(var i = 0, len = str.length; i < len; ++i) {\r\n      character += str.charAt(i)\r\n  \r\n      if(i > 0 && (i % 2) === 1) {\r\n        buf[i>>>1] = parseInt(character, 16)\r\n        character = '' \r\n      }\r\n    }\r\n  \r\n    return buf; \r\n}\r\n\r\nlet rege_ns_i = /ns=([0-9]+);i=([0-9]+)/;\r\nlet rege_ns_s = /ns=([0-9]+);s=(.*)/;\r\nlet rege_ns_b = /ns=([0-9]+);b=(.*)/;\r\nlet rege_ns_g = /ns=([0-9]+);g=(.*)/;\r\n\r\n\r\n\r\n/**\r\n * Convert a value into a nodeId:\r\n * @class opcua\r\n * @method coerceNodeId\r\n * @static\r\n *\r\n * @description:\r\n *    - if nodeId is a string of form : \"i=1234\" => nodeId({ namespace: 0 , value=1234  , identifierType: NodeIdType.NUMERIC})\r\n *    - if nodeId is a string of form : \"s=foo\"  => nodeId({ namespace: 0 , value=\"foo\" , identifierType: NodeIdType.STRING})\r\n *    - if nodeId is a {@link NodeId} :  coerceNodeId returns value\r\n *\r\n * @param value\r\n * @param namespace {Integer}\r\n */\r\nexport function coerceNodeId(value, namespace? : number) : NodeId {\r\n\r\n    var matches, two_first;\r\n\r\n    if (value instanceof NodeId) {\r\n        return value;\r\n    }\r\n\r\n    value = value || 0;\r\n    namespace = namespace || 0;\r\n\r\n    var identifierType = NodeIdType.NUMERIC;\r\n\r\n    if (typeof value === \"string\") {\r\n        identifierType = NodeIdType.STRING;\r\n\r\n        two_first = value.substr(0, 2);\r\n        if (two_first === \"i=\") {\r\n\r\n            identifierType = NodeIdType.NUMERIC;\r\n            value = parseInt(value.substr(2), 10);\r\n\r\n        } else if (two_first === \"s=\") {\r\n\r\n            identifierType = NodeIdType.STRING;\r\n            value = value.substr(2);\r\n\r\n        } else if (two_first === \"b=\") {\r\n\r\n            identifierType = NodeIdType.BYTESTRING;\r\n            \r\n            value = from_hex(value.substr(2));\r\n\r\n        } else if (two_first === \"g=\") {\r\n\r\n            identifierType = NodeIdType.GUID;\r\n            value = value.substr(2);\r\n\r\n        } else if (isValidGuid(value)) {\r\n\r\n            identifierType = NodeIdType.GUID;\r\n\r\n        } else if ((matches = rege_ns_i.exec(value)) !== null) {\r\n            identifierType = NodeIdType.NUMERIC;\r\n            namespace = parseInt(matches[1], 10);\r\n            value = parseInt(matches[2], 10);\r\n\r\n        } else if ((matches = rege_ns_s.exec(value)) !== null) {\r\n\r\n            identifierType = NodeIdType.STRING;\r\n            namespace = parseInt(matches[1], 10);\r\n            value = matches[2];\r\n\r\n        } else if ((matches = rege_ns_b.exec(value)) !== null) {\r\n            identifierType = NodeIdType.BYTESTRING;\r\n            namespace = parseInt(matches[1], 10);\r\n            value = from_hex(matches[2]);\r\n\r\n        } else if ((matches = rege_ns_g.exec(value)) !== null) {\r\n            identifierType = NodeIdType.GUID;\r\n            namespace = parseInt(matches[1], 10);\r\n            value = matches[2];\r\n        } else {\r\n            throw new Error(\"String cannot be coerced to a nodeId : \" + value);\r\n        }\r\n\r\n    } else if (value instanceof Uint8Array) {\r\n        identifierType = NodeIdType.BYTESTRING;\r\n\r\n    } else if (value instanceof Object) {\r\n\r\n        console.log( \"xxxx VALUE = \",value);\r\n\r\n        var tmp = value;\r\n        value = tmp.value;\r\n        namespace = namespace || tmp.namespace;\r\n        identifierType = tmp.identifierTypes;\r\n        return new NodeId(value, namespace);\r\n    }\r\n    return new NodeId(identifierType, value, namespace);\r\n}\r\n\r\n","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IDiagnosticInfo {\n\t\tsymbolicId? : ec.Int32;\n\t\tnamespaceURI? : ec.Int32;\n\t\tlocale? : ec.Int32;\n\t\tlocalizedText? : ec.Int32;\n\t\tadditionalInfo? : string;\n\t\tinnerStatusCode? : ec.StatusCode;\n\t\tinnerDiagnosticInfo? : DiagnosticInfo;\n}\n\n/**\nA recursive structure containing diagnostic information associated with a status code.\n*/\n\nexport class DiagnosticInfo {\n \t\tsymbolicId : ec.Int32;\n\t\tnamespaceURI : ec.Int32;\n\t\tlocale : ec.Int32;\n\t\tlocalizedText : ec.Int32;\n\t\tadditionalInfo : string;\n\t\tinnerStatusCode : ec.StatusCode;\n\t\tinnerDiagnosticInfo : DiagnosticInfo;\n\n\tconstructor(\toptions? : IDiagnosticInfo) { \n\t\toptions = options || {};\n\t\tthis.symbolicId= (options.symbolicId) ? options.symbolicId:null;\n\t\tthis.namespaceURI= (options.namespaceURI) ? options.namespaceURI:null;\n\t\tthis.locale= (options.locale) ? options.locale:null;\n\t\tthis.localizedText= (options.localizedText) ? options.localizedText:null;\n\t\tthis.additionalInfo= (options.additionalInfo) ? options.additionalInfo:null;\n\t\tthis.innerStatusCode= (options.innerStatusCode) ? options.innerStatusCode:null;\n\t\tthis.innerDiagnosticInfo= (options.innerDiagnosticInfo) ? options.innerDiagnosticInfo:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tlet encodingByte = 0;\n\t\tif (this.symbolicId != null) { encodingByte |= 1 << 0;}\n\t\tif (this.namespaceURI != null) { encodingByte |= 1 << 1;}\n\t\tif (this.locale != null) { encodingByte |= 1 << 2;}\n\t\tif (this.localizedText != null) { encodingByte |= 1 << 3;}\n\t\tif (this.additionalInfo != null) { encodingByte |= 1 << 4;}\n\t\tif (this.innerStatusCode != null) { encodingByte |= 1 << 5;}\n\t\tif (this.innerDiagnosticInfo != null) { encodingByte |= 1 << 6;}\n\t\tout.setUint8(encodingByte);\n\t\tif(this.symbolicId != null) { ec.encodeInt32(this.symbolicId,out); }\n\t\tif(this.namespaceURI != null) { ec.encodeInt32(this.namespaceURI,out); }\n\t\tif(this.locale != null) { ec.encodeInt32(this.locale,out); }\n\t\tif(this.localizedText != null) { ec.encodeInt32(this.localizedText,out); }\n\t\tif(this.additionalInfo != null) { ec.encodeString(this.additionalInfo,out); }\n\t\tif(this.innerStatusCode != null) { ec.encodeStatusCode(this.innerStatusCode,out); }\n\t\tif(this.innerDiagnosticInfo != null) { this.innerDiagnosticInfo.encode(out); }\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tlet encodingByte = inp.getUint8();\n\t\tlet symbolicIdSpecified = (encodingByte & 1) != 0;\n\t\tlet namespaceURISpecified = (encodingByte & 2) != 0;\n\t\tlet localeSpecified = (encodingByte & 4) != 0;\n\t\tlet localizedTextSpecified = (encodingByte & 8) != 0;\n\t\tlet additionalInfoSpecified = (encodingByte & 16) != 0;\n\t\tlet innerStatusCodeSpecified = (encodingByte & 32) != 0;\n\t\tlet innerDiagnosticInfoSpecified = (encodingByte & 64) != 0;\n\t\tlet reserved1 = (encodingByte & 128) != 0;\n\t\tif(symbolicIdSpecified) {\n\t\t\tthis.symbolicId = ec.decodeInt32(inp);\n\t\t}\n\t\tif(namespaceURISpecified) {\n\t\t\tthis.namespaceURI = ec.decodeInt32(inp);\n\t\t}\n\t\tif(localeSpecified) {\n\t\t\tthis.locale = ec.decodeInt32(inp);\n\t\t}\n\t\tif(localizedTextSpecified) {\n\t\t\tthis.localizedText = ec.decodeInt32(inp);\n\t\t}\n\t\tif(additionalInfoSpecified) {\n\t\t\tthis.additionalInfo = ec.decodeString(inp);\n\t\t}\n\t\tif(innerStatusCodeSpecified) {\n\t\t\tthis.innerStatusCode = ec.decodeStatusCode(inp);\n\t\t}\n\t\tif(innerDiagnosticInfoSpecified) {\n\t\t\tthis.innerDiagnosticInfo= new DiagnosticInfo();\n\t\t\tthis.innerDiagnosticInfo.decode(inp);\n\t\t}\n\n\t}\n\n\n\tclone(\ttarget? : DiagnosticInfo) : DiagnosticInfo { \n\t\tif(!target) {\n\t\t\ttarget = new DiagnosticInfo();\n\t\t}\n\t\ttarget.symbolicId = this.symbolicId;\n\t\ttarget.namespaceURI = this.namespaceURI;\n\t\ttarget.locale = this.locale;\n\t\ttarget.localizedText = this.localizedText;\n\t\ttarget.additionalInfo = this.additionalInfo;\n\t\ttarget.innerStatusCode = this.innerStatusCode;\n\t\tif (this.innerDiagnosticInfo) { target.innerDiagnosticInfo = this.innerDiagnosticInfo.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeDiagnosticInfo(\tinp : DataStream) : DiagnosticInfo { \n\t\tlet obj = new DiagnosticInfo();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"DiagnosticInfo\",DiagnosticInfo, makeExpandedNodeId(25,0));","\n\nimport {DataStream} from '../basic-types/DataStream';\n\nexport enum MonitoringMode {\n \t\tDisabled = 0,\n\t\tSampling = 1,\n\t\tReporting = 2,\n\n}\n\nexport function encodeMonitoringMode(\tdata : MonitoringMode, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeMonitoringMode(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"MonitoringMode\",MonitoringMode,encodeMonitoringMode ,decodeMonitoringMode ,null);","\n\nimport {DataStream} from '../basic-types/DataStream';\n\nexport enum DataChangeTrigger {\n \t\tStatus = 0,\n\t\tStatusValue = 1,\n\t\tStatusValueTimestamp = 2,\n\n}\n\nexport function encodeDataChangeTrigger(\tdata : DataChangeTrigger, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeDataChangeTrigger(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"DataChangeTrigger\",DataChangeTrigger,encodeDataChangeTrigger ,decodeDataChangeTrigger ,null);","\n\nimport {DataStream} from '../basic-types/DataStream';\n\nexport enum DeadbandType {\n \t\tNone = 0,\n\t\tAbsolute = 1,\n\t\tPercent = 2,\n\n}\n\nexport function encodeDeadbandType(\tdata : DeadbandType, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeDeadbandType(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"DeadbandType\",DeadbandType,encodeDeadbandType ,decodeDeadbandType ,null);","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICreateSubscriptionRequest {\n\t\trequestHeader? : RequestHeader;\n\t\trequestedPublishingInterval? : ec.Double;\n\t\trequestedLifetimeCount? : ec.UInt32;\n\t\trequestedMaxKeepAliveCount? : ec.UInt32;\n\t\tmaxNotificationsPerPublish? : ec.UInt32;\n\t\tpublishingEnabled? : boolean;\n\t\tpriority? : ec.Byte;\n}\n\n/**\n\n*/\n\nexport class CreateSubscriptionRequest {\n \t\trequestHeader : RequestHeader;\n\t\trequestedPublishingInterval : ec.Double;\n\t\trequestedLifetimeCount : ec.UInt32;\n\t\trequestedMaxKeepAliveCount : ec.UInt32;\n\t\tmaxNotificationsPerPublish : ec.UInt32;\n\t\tpublishingEnabled : boolean;\n\t\tpriority : ec.Byte;\n\n\tconstructor(\toptions? : ICreateSubscriptionRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.requestedPublishingInterval= (options.requestedPublishingInterval) ? options.requestedPublishingInterval:null;\n\t\tthis.requestedLifetimeCount= (options.requestedLifetimeCount) ? options.requestedLifetimeCount:null;\n\t\tthis.requestedMaxKeepAliveCount= (options.requestedMaxKeepAliveCount) ? options.requestedMaxKeepAliveCount:null;\n\t\tthis.maxNotificationsPerPublish= (options.maxNotificationsPerPublish) ? options.maxNotificationsPerPublish:null;\n\t\tthis.publishingEnabled= (options.publishingEnabled) ? options.publishingEnabled:null;\n\t\tthis.priority= (options.priority) ? options.priority:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeDouble(this.requestedPublishingInterval,out);\n\t\tec.encodeUInt32(this.requestedLifetimeCount,out);\n\t\tec.encodeUInt32(this.requestedMaxKeepAliveCount,out);\n\t\tec.encodeUInt32(this.maxNotificationsPerPublish,out);\n\t\tec.encodeBoolean(this.publishingEnabled,out);\n\t\tec.encodeByte(this.priority,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.requestedPublishingInterval = ec.decodeDouble(inp);\n\t\tthis.requestedLifetimeCount = ec.decodeUInt32(inp);\n\t\tthis.requestedMaxKeepAliveCount = ec.decodeUInt32(inp);\n\t\tthis.maxNotificationsPerPublish = ec.decodeUInt32(inp);\n\t\tthis.publishingEnabled = ec.decodeBoolean(inp);\n\t\tthis.priority = ec.decodeByte(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CreateSubscriptionRequest) : CreateSubscriptionRequest { \n\t\tif(!target) {\n\t\t\ttarget = new CreateSubscriptionRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.requestedPublishingInterval = this.requestedPublishingInterval;\n\t\ttarget.requestedLifetimeCount = this.requestedLifetimeCount;\n\t\ttarget.requestedMaxKeepAliveCount = this.requestedMaxKeepAliveCount;\n\t\ttarget.maxNotificationsPerPublish = this.maxNotificationsPerPublish;\n\t\ttarget.publishingEnabled = this.publishingEnabled;\n\t\ttarget.priority = this.priority;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCreateSubscriptionRequest(\tinp : DataStream) : CreateSubscriptionRequest { \n\t\tlet obj = new CreateSubscriptionRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CreateSubscriptionRequest\",CreateSubscriptionRequest, makeExpandedNodeId(787,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICreateSubscriptionResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tsubscriptionId? : ec.UInt32;\n\t\trevisedPublishingInterval? : ec.Double;\n\t\trevisedLifetimeCount? : ec.UInt32;\n\t\trevisedMaxKeepAliveCount? : ec.UInt32;\n}\n\n/**\n\n*/\n\nexport class CreateSubscriptionResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tsubscriptionId : ec.UInt32;\n\t\trevisedPublishingInterval : ec.Double;\n\t\trevisedLifetimeCount : ec.UInt32;\n\t\trevisedMaxKeepAliveCount : ec.UInt32;\n\n\tconstructor(\toptions? : ICreateSubscriptionResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.revisedPublishingInterval= (options.revisedPublishingInterval) ? options.revisedPublishingInterval:null;\n\t\tthis.revisedLifetimeCount= (options.revisedLifetimeCount) ? options.revisedLifetimeCount:null;\n\t\tthis.revisedMaxKeepAliveCount= (options.revisedMaxKeepAliveCount) ? options.revisedMaxKeepAliveCount:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tec.encodeDouble(this.revisedPublishingInterval,out);\n\t\tec.encodeUInt32(this.revisedLifetimeCount,out);\n\t\tec.encodeUInt32(this.revisedMaxKeepAliveCount,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.revisedPublishingInterval = ec.decodeDouble(inp);\n\t\tthis.revisedLifetimeCount = ec.decodeUInt32(inp);\n\t\tthis.revisedMaxKeepAliveCount = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CreateSubscriptionResponse) : CreateSubscriptionResponse { \n\t\tif(!target) {\n\t\t\ttarget = new CreateSubscriptionResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.revisedPublishingInterval = this.revisedPublishingInterval;\n\t\ttarget.revisedLifetimeCount = this.revisedLifetimeCount;\n\t\ttarget.revisedMaxKeepAliveCount = this.revisedMaxKeepAliveCount;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCreateSubscriptionResponse(\tinp : DataStream) : CreateSubscriptionResponse { \n\t\tlet obj = new CreateSubscriptionResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CreateSubscriptionResponse\",CreateSubscriptionResponse, makeExpandedNodeId(790,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IModifySubscriptionRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionId? : ec.UInt32;\n\t\trequestedPublishingInterval? : ec.Double;\n\t\trequestedLifetimeCount? : ec.UInt32;\n\t\trequestedMaxKeepAliveCount? : ec.UInt32;\n\t\tmaxNotificationsPerPublish? : ec.UInt32;\n\t\tpriority? : ec.Byte;\n}\n\n/**\n\n*/\n\nexport class ModifySubscriptionRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionId : ec.UInt32;\n\t\trequestedPublishingInterval : ec.Double;\n\t\trequestedLifetimeCount : ec.UInt32;\n\t\trequestedMaxKeepAliveCount : ec.UInt32;\n\t\tmaxNotificationsPerPublish : ec.UInt32;\n\t\tpriority : ec.Byte;\n\n\tconstructor(\toptions? : IModifySubscriptionRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.requestedPublishingInterval= (options.requestedPublishingInterval) ? options.requestedPublishingInterval:null;\n\t\tthis.requestedLifetimeCount= (options.requestedLifetimeCount) ? options.requestedLifetimeCount:null;\n\t\tthis.requestedMaxKeepAliveCount= (options.requestedMaxKeepAliveCount) ? options.requestedMaxKeepAliveCount:null;\n\t\tthis.maxNotificationsPerPublish= (options.maxNotificationsPerPublish) ? options.maxNotificationsPerPublish:null;\n\t\tthis.priority= (options.priority) ? options.priority:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tec.encodeDouble(this.requestedPublishingInterval,out);\n\t\tec.encodeUInt32(this.requestedLifetimeCount,out);\n\t\tec.encodeUInt32(this.requestedMaxKeepAliveCount,out);\n\t\tec.encodeUInt32(this.maxNotificationsPerPublish,out);\n\t\tec.encodeByte(this.priority,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.requestedPublishingInterval = ec.decodeDouble(inp);\n\t\tthis.requestedLifetimeCount = ec.decodeUInt32(inp);\n\t\tthis.requestedMaxKeepAliveCount = ec.decodeUInt32(inp);\n\t\tthis.maxNotificationsPerPublish = ec.decodeUInt32(inp);\n\t\tthis.priority = ec.decodeByte(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ModifySubscriptionRequest) : ModifySubscriptionRequest { \n\t\tif(!target) {\n\t\t\ttarget = new ModifySubscriptionRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.requestedPublishingInterval = this.requestedPublishingInterval;\n\t\ttarget.requestedLifetimeCount = this.requestedLifetimeCount;\n\t\ttarget.requestedMaxKeepAliveCount = this.requestedMaxKeepAliveCount;\n\t\ttarget.maxNotificationsPerPublish = this.maxNotificationsPerPublish;\n\t\ttarget.priority = this.priority;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeModifySubscriptionRequest(\tinp : DataStream) : ModifySubscriptionRequest { \n\t\tlet obj = new ModifySubscriptionRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ModifySubscriptionRequest\",ModifySubscriptionRequest, makeExpandedNodeId(793,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IModifySubscriptionResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\trevisedPublishingInterval? : ec.Double;\n\t\trevisedLifetimeCount? : ec.UInt32;\n\t\trevisedMaxKeepAliveCount? : ec.UInt32;\n}\n\n/**\n\n*/\n\nexport class ModifySubscriptionResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\trevisedPublishingInterval : ec.Double;\n\t\trevisedLifetimeCount : ec.UInt32;\n\t\trevisedMaxKeepAliveCount : ec.UInt32;\n\n\tconstructor(\toptions? : IModifySubscriptionResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.revisedPublishingInterval= (options.revisedPublishingInterval) ? options.revisedPublishingInterval:null;\n\t\tthis.revisedLifetimeCount= (options.revisedLifetimeCount) ? options.revisedLifetimeCount:null;\n\t\tthis.revisedMaxKeepAliveCount= (options.revisedMaxKeepAliveCount) ? options.revisedMaxKeepAliveCount:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeDouble(this.revisedPublishingInterval,out);\n\t\tec.encodeUInt32(this.revisedLifetimeCount,out);\n\t\tec.encodeUInt32(this.revisedMaxKeepAliveCount,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.revisedPublishingInterval = ec.decodeDouble(inp);\n\t\tthis.revisedLifetimeCount = ec.decodeUInt32(inp);\n\t\tthis.revisedMaxKeepAliveCount = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ModifySubscriptionResponse) : ModifySubscriptionResponse { \n\t\tif(!target) {\n\t\t\ttarget = new ModifySubscriptionResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.revisedPublishingInterval = this.revisedPublishingInterval;\n\t\ttarget.revisedLifetimeCount = this.revisedLifetimeCount;\n\t\ttarget.revisedMaxKeepAliveCount = this.revisedMaxKeepAliveCount;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeModifySubscriptionResponse(\tinp : DataStream) : ModifySubscriptionResponse { \n\t\tlet obj = new ModifySubscriptionResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ModifySubscriptionResponse\",ModifySubscriptionResponse, makeExpandedNodeId(796,0));","\n\nimport {ReadValueId} from './ReadValueId';\nimport {MonitoringMode, encodeMonitoringMode, decodeMonitoringMode} from './MonitoringMode';\nimport {MonitoringParameters} from './MonitoringParameters';\nimport {DataStream} from '../basic-types/DataStream';\nimport * as ec from '../basic-types';\n\nexport interface IMonitoredItemCreateRequest {\n\t\titemToMonitor? : ReadValueId;\n\t\tmonitoringMode? : MonitoringMode;\n\t\trequestedParameters? : MonitoringParameters;\n}\n\n/**\n\n*/\n\nexport class MonitoredItemCreateRequest {\n \t\titemToMonitor : ReadValueId;\n\t\tmonitoringMode : MonitoringMode;\n\t\trequestedParameters : MonitoringParameters;\n\n\tconstructor(\toptions? : IMonitoredItemCreateRequest) { \n\t\toptions = options || {};\n\t\tthis.itemToMonitor= (options.itemToMonitor) ? options.itemToMonitor:new ReadValueId();\n\t\tthis.monitoringMode= (options.monitoringMode) ? options.monitoringMode:null;\n\t\tthis.requestedParameters= (options.requestedParameters) ? options.requestedParameters:new MonitoringParameters();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.itemToMonitor.encode(out);\n\t\tencodeMonitoringMode(this.monitoringMode,out);\n\t\tthis.requestedParameters.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.itemToMonitor.decode(inp);\n\t\tthis.monitoringMode = decodeMonitoringMode(inp);\n\t\tthis.requestedParameters.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : MonitoredItemCreateRequest) : MonitoredItemCreateRequest { \n\t\tif(!target) {\n\t\t\ttarget = new MonitoredItemCreateRequest();\n\t\t}\n\t\tif (this.itemToMonitor) { target.itemToMonitor = this.itemToMonitor.clone();}\n\t\ttarget.monitoringMode = this.monitoringMode;\n\t\tif (this.requestedParameters) { target.requestedParameters = this.requestedParameters.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeMonitoredItemCreateRequest(\tinp : DataStream) : MonitoredItemCreateRequest { \n\t\tlet obj = new MonitoredItemCreateRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"MonitoredItemCreateRequest\",MonitoredItemCreateRequest, makeExpandedNodeId(745,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {TimestampsToReturn, encodeTimestampsToReturn, decodeTimestampsToReturn} from './TimestampsToReturn';\nimport {MonitoredItemCreateRequest} from './MonitoredItemCreateRequest';\nimport {decodeMonitoredItemCreateRequest} from './MonitoredItemCreateRequest';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICreateMonitoredItemsRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionId? : ec.UInt32;\n\t\ttimestampsToReturn? : TimestampsToReturn;\n\t\titemsToCreate? : MonitoredItemCreateRequest[];\n}\n\n/**\n\n*/\n\nexport class CreateMonitoredItemsRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionId : ec.UInt32;\n\t\ttimestampsToReturn : TimestampsToReturn;\n\t\titemsToCreate : MonitoredItemCreateRequest[];\n\n\tconstructor(\toptions? : ICreateMonitoredItemsRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.timestampsToReturn= (options.timestampsToReturn) ? options.timestampsToReturn:null;\n\t\tthis.itemsToCreate= (options.itemsToCreate) ? options.itemsToCreate:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tencodeTimestampsToReturn(this.timestampsToReturn,out);\n\t\tec.encodeArray(this.itemsToCreate,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.timestampsToReturn = decodeTimestampsToReturn(inp);\n\t\tthis.itemsToCreate = ec.decodeArray(inp,decodeMonitoredItemCreateRequest);\n\n\t}\n\n\n\tclone(\ttarget? : CreateMonitoredItemsRequest) : CreateMonitoredItemsRequest { \n\t\tif(!target) {\n\t\t\ttarget = new CreateMonitoredItemsRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.timestampsToReturn = this.timestampsToReturn;\n\t\tif (this.itemsToCreate) { target.itemsToCreate = ec.cloneComplexArray(this.itemsToCreate);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCreateMonitoredItemsRequest(\tinp : DataStream) : CreateMonitoredItemsRequest { \n\t\tlet obj = new CreateMonitoredItemsRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CreateMonitoredItemsRequest\",CreateMonitoredItemsRequest, makeExpandedNodeId(751,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IMonitoredItemCreateResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\tmonitoredItemId? : ec.UInt32;\n\t\trevisedSamplingInterval? : ec.Double;\n\t\trevisedQueueSize? : ec.UInt32;\n\t\tfilterResult? : ec.ExtensionObject;\n}\n\n/**\n\n*/\n\nexport class MonitoredItemCreateResult {\n \t\tstatusCode : ec.StatusCode;\n\t\tmonitoredItemId : ec.UInt32;\n\t\trevisedSamplingInterval : ec.Double;\n\t\trevisedQueueSize : ec.UInt32;\n\t\tfilterResult : ec.ExtensionObject;\n\n\tconstructor(\toptions? : IMonitoredItemCreateResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.monitoredItemId= (options.monitoredItemId) ? options.monitoredItemId:null;\n\t\tthis.revisedSamplingInterval= (options.revisedSamplingInterval) ? options.revisedSamplingInterval:null;\n\t\tthis.revisedQueueSize= (options.revisedQueueSize) ? options.revisedQueueSize:null;\n\t\tthis.filterResult= (options.filterResult) ? options.filterResult:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeUInt32(this.monitoredItemId,out);\n\t\tec.encodeDouble(this.revisedSamplingInterval,out);\n\t\tec.encodeUInt32(this.revisedQueueSize,out);\n\t\tec.encodeExtensionObject(this.filterResult,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.monitoredItemId = ec.decodeUInt32(inp);\n\t\tthis.revisedSamplingInterval = ec.decodeDouble(inp);\n\t\tthis.revisedQueueSize = ec.decodeUInt32(inp);\n\t\tthis.filterResult = ec.decodeExtensionObject(inp);\n\n\t}\n\n\n\tclone(\ttarget? : MonitoredItemCreateResult) : MonitoredItemCreateResult { \n\t\tif(!target) {\n\t\t\ttarget = new MonitoredItemCreateResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.monitoredItemId = this.monitoredItemId;\n\t\ttarget.revisedSamplingInterval = this.revisedSamplingInterval;\n\t\ttarget.revisedQueueSize = this.revisedQueueSize;\n\t\ttarget.filterResult = this.filterResult;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeMonitoredItemCreateResult(\tinp : DataStream) : MonitoredItemCreateResult { \n\t\tlet obj = new MonitoredItemCreateResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"MonitoredItemCreateResult\",MonitoredItemCreateResult, makeExpandedNodeId(748,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {MonitoredItemCreateResult} from './MonitoredItemCreateResult';\nimport {decodeMonitoredItemCreateResult} from './MonitoredItemCreateResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICreateMonitoredItemsResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : MonitoredItemCreateResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class CreateMonitoredItemsResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : MonitoredItemCreateResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : ICreateMonitoredItemsResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeMonitoredItemCreateResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : CreateMonitoredItemsResponse) : CreateMonitoredItemsResponse { \n\t\tif(!target) {\n\t\t\ttarget = new CreateMonitoredItemsResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCreateMonitoredItemsResponse(\tinp : DataStream) : CreateMonitoredItemsResponse { \n\t\tlet obj = new CreateMonitoredItemsResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CreateMonitoredItemsResponse\",CreateMonitoredItemsResponse, makeExpandedNodeId(754,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISubscriptionAcknowledgement {\n\t\tsubscriptionId? : ec.UInt32;\n\t\tsequenceNumber? : ec.UInt32;\n}\n\n/**\n\n*/\n\nexport class SubscriptionAcknowledgement {\n \t\tsubscriptionId : ec.UInt32;\n\t\tsequenceNumber : ec.UInt32;\n\n\tconstructor(\toptions? : ISubscriptionAcknowledgement) { \n\t\toptions = options || {};\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.sequenceNumber= (options.sequenceNumber) ? options.sequenceNumber:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tec.encodeUInt32(this.sequenceNumber,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.sequenceNumber = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : SubscriptionAcknowledgement) : SubscriptionAcknowledgement { \n\t\tif(!target) {\n\t\t\ttarget = new SubscriptionAcknowledgement();\n\t\t}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.sequenceNumber = this.sequenceNumber;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSubscriptionAcknowledgement(\tinp : DataStream) : SubscriptionAcknowledgement { \n\t\tlet obj = new SubscriptionAcknowledgement();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SubscriptionAcknowledgement\",SubscriptionAcknowledgement, makeExpandedNodeId(823,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport {SubscriptionAcknowledgement} from './SubscriptionAcknowledgement';\nimport {decodeSubscriptionAcknowledgement} from './SubscriptionAcknowledgement';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IPublishRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionAcknowledgements? : SubscriptionAcknowledgement[];\n}\n\n/**\n\n*/\n\nexport class PublishRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionAcknowledgements : SubscriptionAcknowledgement[];\n\n\tconstructor(\toptions? : IPublishRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionAcknowledgements= (options.subscriptionAcknowledgements) ? options.subscriptionAcknowledgements:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeArray(this.subscriptionAcknowledgements,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionAcknowledgements = ec.decodeArray(inp,decodeSubscriptionAcknowledgement);\n\n\t}\n\n\n\tclone(\ttarget? : PublishRequest) : PublishRequest { \n\t\tif(!target) {\n\t\t\ttarget = new PublishRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\tif (this.subscriptionAcknowledgements) { target.subscriptionAcknowledgements = ec.cloneComplexArray(this.subscriptionAcknowledgements);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodePublishRequest(\tinp : DataStream) : PublishRequest { \n\t\tlet obj = new PublishRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"PublishRequest\",PublishRequest, makeExpandedNodeId(826,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface INotificationMessage {\n\t\tsequenceNumber? : ec.UInt32;\n\t\tpublishTime? : Date;\n\t\tnotificationData? : ec.ExtensionObject[];\n}\n\n/**\n\n*/\n\nexport class NotificationMessage {\n \t\tsequenceNumber : ec.UInt32;\n\t\tpublishTime : Date;\n\t\tnotificationData : ec.ExtensionObject[];\n\n\tconstructor(\toptions? : INotificationMessage) { \n\t\toptions = options || {};\n\t\tthis.sequenceNumber= (options.sequenceNumber) ? options.sequenceNumber:null;\n\t\tthis.publishTime= (options.publishTime) ? options.publishTime:null;\n\t\tthis.notificationData= (options.notificationData) ? options.notificationData:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.sequenceNumber,out);\n\t\tec.encodeDateTime(this.publishTime,out);\n\t\tec.encodeArray(this.notificationData,out,ec.encodeExtensionObject);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.sequenceNumber = ec.decodeUInt32(inp);\n\t\tthis.publishTime = ec.decodeDateTime(inp);\n\t\tthis.notificationData = ec.decodeArray(inp,ec.decodeExtensionObject);\n\n\t}\n\n\n\tclone(\ttarget? : NotificationMessage) : NotificationMessage { \n\t\tif(!target) {\n\t\t\ttarget = new NotificationMessage();\n\t\t}\n\t\ttarget.sequenceNumber = this.sequenceNumber;\n\t\ttarget.publishTime = this.publishTime;\n\t\ttarget.notificationData = ec.cloneArray(this.notificationData);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeNotificationMessage(\tinp : DataStream) : NotificationMessage { \n\t\tlet obj = new NotificationMessage();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"NotificationMessage\",NotificationMessage, makeExpandedNodeId(805,0));","\n\nimport * as ec from '../basic-types';\nimport {DataValue} from './DataValue';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IMonitoredItemNotification {\n\t\tclientHandle? : ec.UInt32;\n\t\tvalue? : DataValue;\n}\n\n/**\n\n*/\n\nexport class MonitoredItemNotification {\n \t\tclientHandle : ec.UInt32;\n\t\tvalue : DataValue;\n\n\tconstructor(\toptions? : IMonitoredItemNotification) { \n\t\toptions = options || {};\n\t\tthis.clientHandle= (options.clientHandle) ? options.clientHandle:null;\n\t\tthis.value= (options.value) ? options.value:new DataValue();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.clientHandle,out);\n\t\tthis.value.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.clientHandle = ec.decodeUInt32(inp);\n\t\tthis.value.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : MonitoredItemNotification) : MonitoredItemNotification { \n\t\tif(!target) {\n\t\t\ttarget = new MonitoredItemNotification();\n\t\t}\n\t\ttarget.clientHandle = this.clientHandle;\n\t\tif (this.value) { target.value = this.value.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeMonitoredItemNotification(\tinp : DataStream) : MonitoredItemNotification { \n\t\tlet obj = new MonitoredItemNotification();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"MonitoredItemNotification\",MonitoredItemNotification, makeExpandedNodeId(808,0));","\n\nimport * as ec from '../basic-types';\n/**\n\n*/\n\nexport class NotificationData {\n \n\tconstructor(){};\n\n\tclone(\ttarget? : NotificationData) : NotificationData { \n\t\tif(!target) {\n\t\t\ttarget = new NotificationData();\n\t\t}\n\t\treturn target;\n\t}\n\n\n}\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"NotificationData\",NotificationData, makeExpandedNodeId(947,0));","\n\nimport {MonitoredItemNotification} from './MonitoredItemNotification';\nimport {decodeMonitoredItemNotification} from './MonitoredItemNotification';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\nimport {NotificationData} from './NotificationData';\n\nexport interface IDataChangeNotification {\n\t\tmonitoredItems? : MonitoredItemNotification[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class DataChangeNotification extends NotificationData {\n \t\tmonitoredItems : MonitoredItemNotification[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IDataChangeNotification) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.monitoredItems= (options.monitoredItems) ? options.monitoredItems:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeArray(this.monitoredItems,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.monitoredItems = ec.decodeArray(inp,decodeMonitoredItemNotification);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : DataChangeNotification) : DataChangeNotification { \n\t\tif(!target) {\n\t\t\ttarget = new DataChangeNotification();\n\t\t}\n\t\tif (this.monitoredItems) { target.monitoredItems = ec.cloneComplexArray(this.monitoredItems);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeDataChangeNotification(\tinp : DataStream) : DataChangeNotification { \n\t\tlet obj = new DataChangeNotification();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"DataChangeNotification\",DataChangeNotification, makeExpandedNodeId(811,0));","\n\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\nimport {NotificationData} from './NotificationData';\n\nexport interface IStatusChangeNotification {\n\t\tstatus? : ec.StatusCode;\n\t\tdiagnosticInfo? : DiagnosticInfo;\n}\n\n/**\n\n*/\n\nexport class StatusChangeNotification extends NotificationData {\n \t\tstatus : ec.StatusCode;\n\t\tdiagnosticInfo : DiagnosticInfo;\n\n\tconstructor(\toptions? : IStatusChangeNotification) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.status= (options.status) ? options.status:null;\n\t\tthis.diagnosticInfo= (options.diagnosticInfo) ? options.diagnosticInfo:new DiagnosticInfo();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.status,out);\n\t\tthis.diagnosticInfo.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.status = ec.decodeStatusCode(inp);\n\t\tthis.diagnosticInfo.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : StatusChangeNotification) : StatusChangeNotification { \n\t\tif(!target) {\n\t\t\ttarget = new StatusChangeNotification();\n\t\t}\n\t\ttarget.status = this.status;\n\t\tif (this.diagnosticInfo) { target.diagnosticInfo = this.diagnosticInfo.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeStatusChangeNotification(\tinp : DataStream) : StatusChangeNotification { \n\t\tlet obj = new StatusChangeNotification();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"StatusChangeNotification\",StatusChangeNotification, makeExpandedNodeId(820,0));","\n\nimport * as ec from '../basic-types';\nimport {Variant} from '../variant';\nimport {decodeVariant} from '../variant';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IEventFieldList {\n\t\tclientHandle? : ec.UInt32;\n\t\teventFields? : Variant[];\n}\n\n/**\n\n*/\n\nexport class EventFieldList {\n \t\tclientHandle : ec.UInt32;\n\t\teventFields : Variant[];\n\n\tconstructor(\toptions? : IEventFieldList) { \n\t\toptions = options || {};\n\t\tthis.clientHandle= (options.clientHandle) ? options.clientHandle:null;\n\t\tthis.eventFields= (options.eventFields) ? options.eventFields:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.clientHandle,out);\n\t\tec.encodeArray(this.eventFields,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.clientHandle = ec.decodeUInt32(inp);\n\t\tthis.eventFields = ec.decodeArray(inp,decodeVariant);\n\n\t}\n\n\n\tclone(\ttarget? : EventFieldList) : EventFieldList { \n\t\tif(!target) {\n\t\t\ttarget = new EventFieldList();\n\t\t}\n\t\ttarget.clientHandle = this.clientHandle;\n\t\tif (this.eventFields) { target.eventFields = ec.cloneComplexArray(this.eventFields);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeEventFieldList(\tinp : DataStream) : EventFieldList { \n\t\tlet obj = new EventFieldList();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"EventFieldList\",EventFieldList, makeExpandedNodeId(919,0));","\n\nimport {EventFieldList} from './EventFieldList';\nimport {decodeEventFieldList} from './EventFieldList';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\nimport {NotificationData} from './NotificationData';\n\nexport interface IEventNotificationList {\n\t\tevents? : EventFieldList[];\n}\n\n/**\n\n*/\n\nexport class EventNotificationList extends NotificationData {\n \t\tevents : EventFieldList[];\n\n\tconstructor(\toptions? : IEventNotificationList) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.events= (options.events) ? options.events:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeArray(this.events,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.events = ec.decodeArray(inp,decodeEventFieldList);\n\n\t}\n\n\n\tclone(\ttarget? : EventNotificationList) : EventNotificationList { \n\t\tif(!target) {\n\t\t\ttarget = new EventNotificationList();\n\t\t}\n\t\tif (this.events) { target.events = ec.cloneComplexArray(this.events);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeEventNotificationList(\tinp : DataStream) : EventNotificationList { \n\t\tlet obj = new EventNotificationList();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"EventNotificationList\",EventNotificationList, makeExpandedNodeId(916,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {NotificationMessage} from './NotificationMessage';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IPublishResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tsubscriptionId? : ec.UInt32;\n\t\tavailableSequenceNumbers? : ec.UInt32[];\n\t\tmoreNotifications? : boolean;\n\t\tnotificationMessage? : NotificationMessage;\n\t\tresults? : ec.StatusCode[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class PublishResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tsubscriptionId : ec.UInt32;\n\t\tavailableSequenceNumbers : ec.UInt32[];\n\t\tmoreNotifications : boolean;\n\t\tnotificationMessage : NotificationMessage;\n\t\tresults : ec.StatusCode[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IPublishResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.availableSequenceNumbers= (options.availableSequenceNumbers) ? options.availableSequenceNumbers:[];\n\t\tthis.moreNotifications= (options.moreNotifications) ? options.moreNotifications:null;\n\t\tthis.notificationMessage= (options.notificationMessage) ? options.notificationMessage:new NotificationMessage();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tec.encodeArray(this.availableSequenceNumbers,out,ec.encodeUInt32);\n\t\tec.encodeBoolean(this.moreNotifications,out);\n\t\tthis.notificationMessage.encode(out);\n\t\tec.encodeArray(this.results,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.availableSequenceNumbers = ec.decodeArray(inp,ec.decodeUInt32);\n\t\tthis.moreNotifications = ec.decodeBoolean(inp);\n\t\tthis.notificationMessage.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : PublishResponse) : PublishResponse { \n\t\tif(!target) {\n\t\t\ttarget = new PublishResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.availableSequenceNumbers = ec.cloneArray(this.availableSequenceNumbers);\n\t\ttarget.moreNotifications = this.moreNotifications;\n\t\tif (this.notificationMessage) { target.notificationMessage = this.notificationMessage.clone();}\n\t\ttarget.results = ec.cloneArray(this.results);\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodePublishResponse(\tinp : DataStream) : PublishResponse { \n\t\tlet obj = new PublishResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"PublishResponse\",PublishResponse, makeExpandedNodeId(829,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IRepublishRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionId? : ec.UInt32;\n\t\tretransmitSequenceNumber? : ec.UInt32;\n}\n\n/**\n\n*/\n\nexport class RepublishRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionId : ec.UInt32;\n\t\tretransmitSequenceNumber : ec.UInt32;\n\n\tconstructor(\toptions? : IRepublishRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.retransmitSequenceNumber= (options.retransmitSequenceNumber) ? options.retransmitSequenceNumber:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tec.encodeUInt32(this.retransmitSequenceNumber,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.retransmitSequenceNumber = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : RepublishRequest) : RepublishRequest { \n\t\tif(!target) {\n\t\t\ttarget = new RepublishRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.retransmitSequenceNumber = this.retransmitSequenceNumber;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRepublishRequest(\tinp : DataStream) : RepublishRequest { \n\t\tlet obj = new RepublishRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"RepublishRequest\",RepublishRequest, makeExpandedNodeId(832,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {NotificationMessage} from './NotificationMessage';\nimport {DataStream} from '../basic-types/DataStream';\nimport * as ec from '../basic-types';\n\nexport interface IRepublishResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tnotificationMessage? : NotificationMessage;\n}\n\n/**\n\n*/\n\nexport class RepublishResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tnotificationMessage : NotificationMessage;\n\n\tconstructor(\toptions? : IRepublishResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.notificationMessage= (options.notificationMessage) ? options.notificationMessage:new NotificationMessage();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tthis.notificationMessage.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.notificationMessage.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : RepublishResponse) : RepublishResponse { \n\t\tif(!target) {\n\t\t\ttarget = new RepublishResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.notificationMessage) { target.notificationMessage = this.notificationMessage.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRepublishResponse(\tinp : DataStream) : RepublishResponse { \n\t\tlet obj = new RepublishResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"RepublishResponse\",RepublishResponse, makeExpandedNodeId(835,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IDeleteMonitoredItemsRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionId? : ec.UInt32;\n\t\tmonitoredItemIds? : ec.UInt32[];\n}\n\n/**\n\n*/\n\nexport class DeleteMonitoredItemsRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionId : ec.UInt32;\n\t\tmonitoredItemIds : ec.UInt32[];\n\n\tconstructor(\toptions? : IDeleteMonitoredItemsRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.monitoredItemIds= (options.monitoredItemIds) ? options.monitoredItemIds:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tec.encodeArray(this.monitoredItemIds,out,ec.encodeUInt32);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.monitoredItemIds = ec.decodeArray(inp,ec.decodeUInt32);\n\n\t}\n\n\n\tclone(\ttarget? : DeleteMonitoredItemsRequest) : DeleteMonitoredItemsRequest { \n\t\tif(!target) {\n\t\t\ttarget = new DeleteMonitoredItemsRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.monitoredItemIds = ec.cloneArray(this.monitoredItemIds);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeDeleteMonitoredItemsRequest(\tinp : DataStream) : DeleteMonitoredItemsRequest { \n\t\tlet obj = new DeleteMonitoredItemsRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"DeleteMonitoredItemsRequest\",DeleteMonitoredItemsRequest, makeExpandedNodeId(781,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IDeleteMonitoredItemsResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : ec.StatusCode[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class DeleteMonitoredItemsResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : ec.StatusCode[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IDeleteMonitoredItemsResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : DeleteMonitoredItemsResponse) : DeleteMonitoredItemsResponse { \n\t\tif(!target) {\n\t\t\ttarget = new DeleteMonitoredItemsResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.results = ec.cloneArray(this.results);\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeDeleteMonitoredItemsResponse(\tinp : DataStream) : DeleteMonitoredItemsResponse { \n\t\tlet obj = new DeleteMonitoredItemsResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"DeleteMonitoredItemsResponse\",DeleteMonitoredItemsResponse, makeExpandedNodeId(784,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISetPublishingModeRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tpublishingEnabled? : boolean;\n\t\tsubscriptionIds? : ec.UInt32[];\n}\n\n/**\n\n*/\n\nexport class SetPublishingModeRequest {\n \t\trequestHeader : RequestHeader;\n\t\tpublishingEnabled : boolean;\n\t\tsubscriptionIds : ec.UInt32[];\n\n\tconstructor(\toptions? : ISetPublishingModeRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.publishingEnabled= (options.publishingEnabled) ? options.publishingEnabled:null;\n\t\tthis.subscriptionIds= (options.subscriptionIds) ? options.subscriptionIds:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeBoolean(this.publishingEnabled,out);\n\t\tec.encodeArray(this.subscriptionIds,out,ec.encodeUInt32);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.publishingEnabled = ec.decodeBoolean(inp);\n\t\tthis.subscriptionIds = ec.decodeArray(inp,ec.decodeUInt32);\n\n\t}\n\n\n\tclone(\ttarget? : SetPublishingModeRequest) : SetPublishingModeRequest { \n\t\tif(!target) {\n\t\t\ttarget = new SetPublishingModeRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.publishingEnabled = this.publishingEnabled;\n\t\ttarget.subscriptionIds = ec.cloneArray(this.subscriptionIds);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSetPublishingModeRequest(\tinp : DataStream) : SetPublishingModeRequest { \n\t\tlet obj = new SetPublishingModeRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SetPublishingModeRequest\",SetPublishingModeRequest, makeExpandedNodeId(799,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISetPublishingModeResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : ec.StatusCode[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class SetPublishingModeResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : ec.StatusCode[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : ISetPublishingModeResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : SetPublishingModeResponse) : SetPublishingModeResponse { \n\t\tif(!target) {\n\t\t\ttarget = new SetPublishingModeResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.results = ec.cloneArray(this.results);\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSetPublishingModeResponse(\tinp : DataStream) : SetPublishingModeResponse { \n\t\tlet obj = new SetPublishingModeResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SetPublishingModeResponse\",SetPublishingModeResponse, makeExpandedNodeId(802,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IDeleteSubscriptionsRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionIds? : ec.UInt32[];\n}\n\n/**\n\n*/\n\nexport class DeleteSubscriptionsRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionIds : ec.UInt32[];\n\n\tconstructor(\toptions? : IDeleteSubscriptionsRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionIds= (options.subscriptionIds) ? options.subscriptionIds:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeArray(this.subscriptionIds,out,ec.encodeUInt32);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionIds = ec.decodeArray(inp,ec.decodeUInt32);\n\n\t}\n\n\n\tclone(\ttarget? : DeleteSubscriptionsRequest) : DeleteSubscriptionsRequest { \n\t\tif(!target) {\n\t\t\ttarget = new DeleteSubscriptionsRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.subscriptionIds = ec.cloneArray(this.subscriptionIds);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeDeleteSubscriptionsRequest(\tinp : DataStream) : DeleteSubscriptionsRequest { \n\t\tlet obj = new DeleteSubscriptionsRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"DeleteSubscriptionsRequest\",DeleteSubscriptionsRequest, makeExpandedNodeId(847,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IDeleteSubscriptionsResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : ec.StatusCode[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class DeleteSubscriptionsResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : ec.StatusCode[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IDeleteSubscriptionsResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : DeleteSubscriptionsResponse) : DeleteSubscriptionsResponse { \n\t\tif(!target) {\n\t\t\ttarget = new DeleteSubscriptionsResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.results = ec.cloneArray(this.results);\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeDeleteSubscriptionsResponse(\tinp : DataStream) : DeleteSubscriptionsResponse { \n\t\tlet obj = new DeleteSubscriptionsResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"DeleteSubscriptionsResponse\",DeleteSubscriptionsResponse, makeExpandedNodeId(850,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IMonitoredItemModifyResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\trevisedSamplingInterval? : ec.Double;\n\t\trevisedQueueSize? : ec.UInt32;\n\t\tfilterResult? : ec.ExtensionObject;\n}\n\n/**\n\n*/\n\nexport class MonitoredItemModifyResult {\n \t\tstatusCode : ec.StatusCode;\n\t\trevisedSamplingInterval : ec.Double;\n\t\trevisedQueueSize : ec.UInt32;\n\t\tfilterResult : ec.ExtensionObject;\n\n\tconstructor(\toptions? : IMonitoredItemModifyResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.revisedSamplingInterval= (options.revisedSamplingInterval) ? options.revisedSamplingInterval:null;\n\t\tthis.revisedQueueSize= (options.revisedQueueSize) ? options.revisedQueueSize:null;\n\t\tthis.filterResult= (options.filterResult) ? options.filterResult:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeDouble(this.revisedSamplingInterval,out);\n\t\tec.encodeUInt32(this.revisedQueueSize,out);\n\t\tec.encodeExtensionObject(this.filterResult,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.revisedSamplingInterval = ec.decodeDouble(inp);\n\t\tthis.revisedQueueSize = ec.decodeUInt32(inp);\n\t\tthis.filterResult = ec.decodeExtensionObject(inp);\n\n\t}\n\n\n\tclone(\ttarget? : MonitoredItemModifyResult) : MonitoredItemModifyResult { \n\t\tif(!target) {\n\t\t\ttarget = new MonitoredItemModifyResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.revisedSamplingInterval = this.revisedSamplingInterval;\n\t\ttarget.revisedQueueSize = this.revisedQueueSize;\n\t\ttarget.filterResult = this.filterResult;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeMonitoredItemModifyResult(\tinp : DataStream) : MonitoredItemModifyResult { \n\t\tlet obj = new MonitoredItemModifyResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"MonitoredItemModifyResult\",MonitoredItemModifyResult, makeExpandedNodeId(760,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {MonitoredItemModifyResult} from './MonitoredItemModifyResult';\nimport {decodeMonitoredItemModifyResult} from './MonitoredItemModifyResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IModifyMonitoredItemsResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : MonitoredItemModifyResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class ModifyMonitoredItemsResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : MonitoredItemModifyResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IModifyMonitoredItemsResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeMonitoredItemModifyResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : ModifyMonitoredItemsResponse) : ModifyMonitoredItemsResponse { \n\t\tif(!target) {\n\t\t\ttarget = new ModifyMonitoredItemsResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeModifyMonitoredItemsResponse(\tinp : DataStream) : ModifyMonitoredItemsResponse { \n\t\tlet obj = new ModifyMonitoredItemsResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ModifyMonitoredItemsResponse\",ModifyMonitoredItemsResponse, makeExpandedNodeId(766,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {MonitoringMode, encodeMonitoringMode, decodeMonitoringMode} from './MonitoringMode';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISetMonitoringModeRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionId? : ec.UInt32;\n\t\tmonitoringMode? : MonitoringMode;\n\t\tmonitoredItemIds? : ec.UInt32[];\n}\n\n/**\n\n*/\n\nexport class SetMonitoringModeRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionId : ec.UInt32;\n\t\tmonitoringMode : MonitoringMode;\n\t\tmonitoredItemIds : ec.UInt32[];\n\n\tconstructor(\toptions? : ISetMonitoringModeRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.monitoringMode= (options.monitoringMode) ? options.monitoringMode:null;\n\t\tthis.monitoredItemIds= (options.monitoredItemIds) ? options.monitoredItemIds:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tencodeMonitoringMode(this.monitoringMode,out);\n\t\tec.encodeArray(this.monitoredItemIds,out,ec.encodeUInt32);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.monitoringMode = decodeMonitoringMode(inp);\n\t\tthis.monitoredItemIds = ec.decodeArray(inp,ec.decodeUInt32);\n\n\t}\n\n\n\tclone(\ttarget? : SetMonitoringModeRequest) : SetMonitoringModeRequest { \n\t\tif(!target) {\n\t\t\ttarget = new SetMonitoringModeRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.monitoringMode = this.monitoringMode;\n\t\ttarget.monitoredItemIds = ec.cloneArray(this.monitoredItemIds);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSetMonitoringModeRequest(\tinp : DataStream) : SetMonitoringModeRequest { \n\t\tlet obj = new SetMonitoringModeRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SetMonitoringModeRequest\",SetMonitoringModeRequest, makeExpandedNodeId(769,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISetMonitoringModeResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : ec.StatusCode[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class SetMonitoringModeResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : ec.StatusCode[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : ISetMonitoringModeResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : SetMonitoringModeResponse) : SetMonitoringModeResponse { \n\t\tif(!target) {\n\t\t\ttarget = new SetMonitoringModeResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.results = ec.cloneArray(this.results);\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSetMonitoringModeResponse(\tinp : DataStream) : SetMonitoringModeResponse { \n\t\tlet obj = new SetMonitoringModeResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SetMonitoringModeResponse\",SetMonitoringModeResponse, makeExpandedNodeId(772,0));","\n\nimport * as ec from '../basic-types';\n/**\n\n*/\n\nexport class MonitoringFilterResult {\n \n\tconstructor(){};\n\n\tclone(\ttarget? : MonitoringFilterResult) : MonitoringFilterResult { \n\t\tif(!target) {\n\t\t\ttarget = new MonitoringFilterResult();\n\t\t}\n\t\treturn target;\n\t}\n\n\n}\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"MonitoringFilterResult\",MonitoringFilterResult, makeExpandedNodeId(733,0));","\n\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {ContentFilterResult} from './ContentFilterResult';\nimport {DataStream} from '../basic-types/DataStream';\nimport {MonitoringFilterResult} from './MonitoringFilterResult';\n\nexport interface IEventFilterResult {\n\t\tselectClauseResults? : ec.StatusCode[];\n\t\tselectClauseDiagnosticInfos? : DiagnosticInfo[];\n\t\twhereClauseResult? : ContentFilterResult;\n}\n\n/**\n\n*/\n\nexport class EventFilterResult extends MonitoringFilterResult {\n \t\tselectClauseResults : ec.StatusCode[];\n\t\tselectClauseDiagnosticInfos : DiagnosticInfo[];\n\t\twhereClauseResult : ContentFilterResult;\n\n\tconstructor(\toptions? : IEventFilterResult) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.selectClauseResults= (options.selectClauseResults) ? options.selectClauseResults:[];\n\t\tthis.selectClauseDiagnosticInfos= (options.selectClauseDiagnosticInfos) ? options.selectClauseDiagnosticInfos:[];\n\t\tthis.whereClauseResult= (options.whereClauseResult) ? options.whereClauseResult:new ContentFilterResult();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeArray(this.selectClauseResults,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.selectClauseDiagnosticInfos,out);\n\t\tthis.whereClauseResult.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.selectClauseResults = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.selectClauseDiagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\t\tthis.whereClauseResult.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : EventFilterResult) : EventFilterResult { \n\t\tif(!target) {\n\t\t\ttarget = new EventFilterResult();\n\t\t}\n\t\ttarget.selectClauseResults = ec.cloneArray(this.selectClauseResults);\n\t\tif (this.selectClauseDiagnosticInfos) { target.selectClauseDiagnosticInfos = ec.cloneComplexArray(this.selectClauseDiagnosticInfos);}\n\t\tif (this.whereClauseResult) { target.whereClauseResult = this.whereClauseResult.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeEventFilterResult(\tinp : DataStream) : EventFilterResult { \n\t\tlet obj = new EventFilterResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"EventFilterResult\",EventFilterResult, makeExpandedNodeId(736,0));","\n\nimport {DataChangeTrigger, encodeDataChangeTrigger, decodeDataChangeTrigger} from './DataChangeTrigger';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\nimport {MonitoringFilter} from './MonitoringFilter';\n\nexport interface IDataChangeFilter {\n\t\ttrigger? : DataChangeTrigger;\n\t\tdeadbandType? : ec.UInt32;\n\t\tdeadbandValue? : ec.Double;\n}\n\n/**\n\n*/\n\nexport class DataChangeFilter extends MonitoringFilter {\n \t\ttrigger : DataChangeTrigger;\n\t\tdeadbandType : ec.UInt32;\n\t\tdeadbandValue : ec.Double;\n\n\tconstructor(\toptions? : IDataChangeFilter) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.trigger= (options.trigger) ? options.trigger:null;\n\t\tthis.deadbandType= (options.deadbandType) ? options.deadbandType:null;\n\t\tthis.deadbandValue= (options.deadbandValue) ? options.deadbandValue:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tencodeDataChangeTrigger(this.trigger,out);\n\t\tec.encodeUInt32(this.deadbandType,out);\n\t\tec.encodeDouble(this.deadbandValue,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.trigger = decodeDataChangeTrigger(inp);\n\t\tthis.deadbandType = ec.decodeUInt32(inp);\n\t\tthis.deadbandValue = ec.decodeDouble(inp);\n\n\t}\n\n\n\tclone(\ttarget? : DataChangeFilter) : DataChangeFilter { \n\t\tif(!target) {\n\t\t\ttarget = new DataChangeFilter();\n\t\t}\n\t\ttarget.trigger = this.trigger;\n\t\ttarget.deadbandType = this.deadbandType;\n\t\ttarget.deadbandValue = this.deadbandValue;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeDataChangeFilter(\tinp : DataStream) : DataChangeFilter { \n\t\tlet obj = new DataChangeFilter();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"DataChangeFilter\",DataChangeFilter, makeExpandedNodeId(724,0));","\n\nimport * as ec from '../basic-types';\nimport {AggregateConfiguration} from './AggregateConfiguration';\nimport {DataStream} from '../basic-types/DataStream';\nimport {MonitoringFilter} from './MonitoringFilter';\n\nexport interface IAggregateFilter {\n\t\tstartTime? : Date;\n\t\taggregateType? : ec.NodeId;\n\t\tprocessingInterval? : ec.Double;\n\t\taggregateConfiguration? : AggregateConfiguration;\n}\n\n/**\n\n*/\n\nexport class AggregateFilter extends MonitoringFilter {\n \t\tstartTime : Date;\n\t\taggregateType : ec.NodeId;\n\t\tprocessingInterval : ec.Double;\n\t\taggregateConfiguration : AggregateConfiguration;\n\n\tconstructor(\toptions? : IAggregateFilter) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.startTime= (options.startTime) ? options.startTime:null;\n\t\tthis.aggregateType= (options.aggregateType) ? options.aggregateType:null;\n\t\tthis.processingInterval= (options.processingInterval) ? options.processingInterval:null;\n\t\tthis.aggregateConfiguration= (options.aggregateConfiguration) ? options.aggregateConfiguration:new AggregateConfiguration();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeDateTime(this.startTime,out);\n\t\tec.encodeNodeId(this.aggregateType,out);\n\t\tec.encodeDouble(this.processingInterval,out);\n\t\tthis.aggregateConfiguration.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.startTime = ec.decodeDateTime(inp);\n\t\tthis.aggregateType = ec.decodeNodeId(inp);\n\t\tthis.processingInterval = ec.decodeDouble(inp);\n\t\tthis.aggregateConfiguration.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : AggregateFilter) : AggregateFilter { \n\t\tif(!target) {\n\t\t\ttarget = new AggregateFilter();\n\t\t}\n\t\ttarget.startTime = this.startTime;\n\t\ttarget.aggregateType = this.aggregateType;\n\t\ttarget.processingInterval = this.processingInterval;\n\t\tif (this.aggregateConfiguration) { target.aggregateConfiguration = this.aggregateConfiguration.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeAggregateFilter(\tinp : DataStream) : AggregateFilter { \n\t\tlet obj = new AggregateFilter();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"AggregateFilter\",AggregateFilter, makeExpandedNodeId(730,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISetTriggeringRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionId? : ec.UInt32;\n\t\ttriggeringItemId? : ec.UInt32;\n\t\tlinksToAdd? : ec.UInt32[];\n\t\tlinksToRemove? : ec.UInt32[];\n}\n\n/**\n\n*/\n\nexport class SetTriggeringRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionId : ec.UInt32;\n\t\ttriggeringItemId : ec.UInt32;\n\t\tlinksToAdd : ec.UInt32[];\n\t\tlinksToRemove : ec.UInt32[];\n\n\tconstructor(\toptions? : ISetTriggeringRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.triggeringItemId= (options.triggeringItemId) ? options.triggeringItemId:null;\n\t\tthis.linksToAdd= (options.linksToAdd) ? options.linksToAdd:[];\n\t\tthis.linksToRemove= (options.linksToRemove) ? options.linksToRemove:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tec.encodeUInt32(this.triggeringItemId,out);\n\t\tec.encodeArray(this.linksToAdd,out,ec.encodeUInt32);\n\t\tec.encodeArray(this.linksToRemove,out,ec.encodeUInt32);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.triggeringItemId = ec.decodeUInt32(inp);\n\t\tthis.linksToAdd = ec.decodeArray(inp,ec.decodeUInt32);\n\t\tthis.linksToRemove = ec.decodeArray(inp,ec.decodeUInt32);\n\n\t}\n\n\n\tclone(\ttarget? : SetTriggeringRequest) : SetTriggeringRequest { \n\t\tif(!target) {\n\t\t\ttarget = new SetTriggeringRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.triggeringItemId = this.triggeringItemId;\n\t\ttarget.linksToAdd = ec.cloneArray(this.linksToAdd);\n\t\ttarget.linksToRemove = ec.cloneArray(this.linksToRemove);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSetTriggeringRequest(\tinp : DataStream) : SetTriggeringRequest { \n\t\tlet obj = new SetTriggeringRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SetTriggeringRequest\",SetTriggeringRequest, makeExpandedNodeId(775,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISetTriggeringResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\taddResults? : ec.StatusCode[];\n\t\taddDiagnosticInfos? : DiagnosticInfo[];\n\t\tremoveResults? : ec.StatusCode[];\n\t\tremoveDiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class SetTriggeringResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\taddResults : ec.StatusCode[];\n\t\taddDiagnosticInfos : DiagnosticInfo[];\n\t\tremoveResults : ec.StatusCode[];\n\t\tremoveDiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : ISetTriggeringResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.addResults= (options.addResults) ? options.addResults:[];\n\t\tthis.addDiagnosticInfos= (options.addDiagnosticInfos) ? options.addDiagnosticInfos:[];\n\t\tthis.removeResults= (options.removeResults) ? options.removeResults:[];\n\t\tthis.removeDiagnosticInfos= (options.removeDiagnosticInfos) ? options.removeDiagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.addResults,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.addDiagnosticInfos,out);\n\t\tec.encodeArray(this.removeResults,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.removeDiagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.addResults = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.addDiagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\t\tthis.removeResults = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.removeDiagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : SetTriggeringResponse) : SetTriggeringResponse { \n\t\tif(!target) {\n\t\t\ttarget = new SetTriggeringResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.addResults = ec.cloneArray(this.addResults);\n\t\tif (this.addDiagnosticInfos) { target.addDiagnosticInfos = ec.cloneComplexArray(this.addDiagnosticInfos);}\n\t\ttarget.removeResults = ec.cloneArray(this.removeResults);\n\t\tif (this.removeDiagnosticInfos) { target.removeDiagnosticInfos = ec.cloneComplexArray(this.removeDiagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSetTriggeringResponse(\tinp : DataStream) : SetTriggeringResponse { \n\t\tlet obj = new SetTriggeringResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SetTriggeringResponse\",SetTriggeringResponse, makeExpandedNodeId(778,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ITransferResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\tavailableSequenceNumbers? : ec.UInt32[];\n}\n\n/**\n\n*/\n\nexport class TransferResult {\n \t\tstatusCode : ec.StatusCode;\n\t\tavailableSequenceNumbers : ec.UInt32[];\n\n\tconstructor(\toptions? : ITransferResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.availableSequenceNumbers= (options.availableSequenceNumbers) ? options.availableSequenceNumbers:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeArray(this.availableSequenceNumbers,out,ec.encodeUInt32);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.availableSequenceNumbers = ec.decodeArray(inp,ec.decodeUInt32);\n\n\t}\n\n\n\tclone(\ttarget? : TransferResult) : TransferResult { \n\t\tif(!target) {\n\t\t\ttarget = new TransferResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.availableSequenceNumbers = ec.cloneArray(this.availableSequenceNumbers);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeTransferResult(\tinp : DataStream) : TransferResult { \n\t\tlet obj = new TransferResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"TransferResult\",TransferResult, makeExpandedNodeId(838,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ITransferSubscriptionsRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionIds? : ec.UInt32[];\n\t\tsendInitialValues? : boolean;\n}\n\n/**\n\n*/\n\nexport class TransferSubscriptionsRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionIds : ec.UInt32[];\n\t\tsendInitialValues : boolean;\n\n\tconstructor(\toptions? : ITransferSubscriptionsRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionIds= (options.subscriptionIds) ? options.subscriptionIds:[];\n\t\tthis.sendInitialValues= (options.sendInitialValues) ? options.sendInitialValues:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeArray(this.subscriptionIds,out,ec.encodeUInt32);\n\t\tec.encodeBoolean(this.sendInitialValues,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionIds = ec.decodeArray(inp,ec.decodeUInt32);\n\t\tthis.sendInitialValues = ec.decodeBoolean(inp);\n\n\t}\n\n\n\tclone(\ttarget? : TransferSubscriptionsRequest) : TransferSubscriptionsRequest { \n\t\tif(!target) {\n\t\t\ttarget = new TransferSubscriptionsRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.subscriptionIds = ec.cloneArray(this.subscriptionIds);\n\t\ttarget.sendInitialValues = this.sendInitialValues;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeTransferSubscriptionsRequest(\tinp : DataStream) : TransferSubscriptionsRequest { \n\t\tlet obj = new TransferSubscriptionsRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"TransferSubscriptionsRequest\",TransferSubscriptionsRequest, makeExpandedNodeId(841,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {TransferResult} from './TransferResult';\nimport {decodeTransferResult} from './TransferResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ITransferSubscriptionsResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : TransferResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class TransferSubscriptionsResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : TransferResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : ITransferSubscriptionsResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeTransferResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : TransferSubscriptionsResponse) : TransferSubscriptionsResponse { \n\t\tif(!target) {\n\t\t\ttarget = new TransferSubscriptionsResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeTransferSubscriptionsResponse(\tinp : DataStream) : TransferSubscriptionsResponse { \n\t\tlet obj = new TransferSubscriptionsResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"TransferSubscriptionsResponse\",TransferSubscriptionsResponse, makeExpandedNodeId(844,0));","\"use strict\";\r\nimport {assert} from '../assert';\r\n\r\nimport {DeadbandType} from '../generated/DeadbandType';\r\nimport {DataType,VariantArrayType, Variant} from '../variant';\r\n\r\nfunction _differenceScalar(value1 : number,value2 : number,dataType : DataType,absoluteDeadband : number) {\r\n\r\n    var diff;\r\n    if (dataType === DataType.UInt64 || dataType === DataType.Int64) {\r\n\r\n        var h1 = value1[0]; // high\r\n        var h2 = value2[0];\r\n        if (h1 !== h2 ) {\r\n            diff = (h1 - h2) * 4294967295;\r\n            if (Math.abs(diff) > absoluteDeadband) {\r\n                return true;\r\n            }\r\n        }\r\n        diff =  value1[1] - value2[1];\r\n        assert(Number.isFinite(diff));\r\n        return Math.abs(diff) > absoluteDeadband;\r\n    }\r\n    diff =  value2 -value1;\r\n    assert(Number.isFinite(diff));\r\n\r\n    return Math.abs(diff) > absoluteDeadband;\r\n\r\n}\r\n\r\nfunction difference(v1 : Variant ,v2 : Variant,absoluteDeadband : number) {\r\n\r\n    assert(Number.isFinite(absoluteDeadband));\r\n\r\n    if (v1.arrayType === VariantArrayType.Array) {\r\n\r\n        if (v1.dataType !== v2.dataType) {\r\n            return true;\r\n        }\r\n        if (v1.value.length !== v2.value.length) {\r\n            return true;\r\n        }\r\n\r\n        var n = v1.value.length;\r\n        var i =0;\r\n        for (i=0;i<n;i++) {\r\n            if (_differenceScalar(v1.value[i],v2.value[i],v1.dataType,absoluteDeadband)) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n\r\n    } else {\r\n        assert(v1.arrayType === VariantArrayType.Scalar);\r\n        assert(v1.dataType === v2.dataType);\r\n        return _differenceScalar(v1.value,v2.value,v1.dataType,absoluteDeadband);\r\n    }\r\n}\r\n\r\n/**\r\n * @method check_deadband\r\n * @param variant1 {Variant}\r\n * @param variant2 {Variant}\r\n * @param deadbandType  {DeadbandType}\r\n * @param deadbandValue {Float}\r\n * @param valueRange    {Float}\r\n * @return {boolean}\r\n */\r\nexport function check_deadband(variant1 : Variant,variant2 : Variant,deadbandType : DeadbandType,deadbandValue : number,valueRange? : number) {\r\n\r\n\r\n    switch (deadbandType) {\r\n\r\n        case DeadbandType.None:\r\n            // No Deadband calculation should be applied.\r\n            return difference(variant1, variant2, 0);\r\n\r\n        case DeadbandType.Absolute:\r\n            // AbsoluteDeadband\r\n            return difference(variant1,variant2,deadbandValue);\r\n\r\n        default:\r\n            // Percent_2    PercentDeadband (This type is specified in Part 8).\r\n            assert(deadbandType === DeadbandType.Percent);\r\n\r\n            // The range of the deadbandValue is from 0.0 to 100.0 Percent.\r\n            assert(deadbandValue >= 0 && deadbandValue <= 100);\r\n\r\n            // DeadbandType = PercentDeadband\r\n            // For this type of deadband the deadbandValue is defined as the percentage of the EURange. That is,\r\n            // it applies only to AnalogItems with an EURange Property that defines the typical value range for the\r\n            // item. This range shall be multiplied with the deadbandValue and then compared to the actual value change\r\n            // to determine the need for a data change notification. The following pseudo code shows how the deadband\r\n            // is calculated:\r\n            //      DataChange if (absolute value of (last cached value - current value) >\r\n            //                                          (deadbandValue/100.0) * ((high-low) of EURange)))\r\n            //\r\n            // Specifying a deadbandValue outside of this range will be rejected and reported with the\r\n            // StatusCode Bad_DeadbandFilterInvalid (see Table 27).\r\n            // If the Value of the MonitoredItem is an array, then the deadband calculation logic shall be applied to\r\n            // each element of the array. If an element that requires a DataChange is found, then no further\r\n            // deadband checking is necessary and the entire array shall be returned.\r\n            //assert(false, \"Not implemented yet\");\r\n            assert(typeof valueRange === 'number');\r\n            return check_deadband(variant1,variant2,DeadbandType.Absolute,valueRange * deadbandValue /100);\r\n    }\r\n}\r\n\r\n","import {assert} from '../assert';\r\n\r\nvar txtEncoder =  new TextEncoder();\r\nvar txtDecoder = new TextDecoder();\r\nexport class DataStream {\r\n    \r\n  \r\n    //_buffer: any;\r\n    protected view : DataView;\r\n    protected _pos : number;\r\n    constructor(data : DataView|ArrayBuffer|number) {\r\n        this._pos = 0;\r\n        if (data instanceof DataView) {\r\n            this.view = data;\r\n        } else if (data instanceof ArrayBuffer) {\r\n            this.view = new DataView(data);\r\n        } else {\r\n           this.view = new DataView(new ArrayBuffer(data));\r\n        }\r\n    }\r\n\r\n    get buffer() : ArrayBuffer {\r\n      return this.view.buffer;\r\n    }\r\n\r\n    set buffer(buf : ArrayBuffer) {\r\n      this.view = new DataView(buf);\r\n    }\r\n\r\n    get pos() : number {\r\n      return this._pos;\r\n    }\r\n\r\n    get length() : number {\r\n      return this._pos;\r\n    }\r\n\r\n    set length(newLen : number) {\r\n      this._pos = newLen;\r\n    }\r\n    \r\n\r\n    get byteLength() : number {\r\n      return this._pos;\r\n    }\r\n\r\n    /**\r\n      * Gets the Float32 value at the specified byte offset from the start of the view. There is\r\n      * no alignment constraint; multi-byte values may be fetched from any offset.\r\n      * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n      */\r\n      getFloat32(littleEndian: boolean = true): number {\r\n        var val = this.view.getFloat32(this._pos,littleEndian);\r\n        this._pos += 4;\r\n        return val;\r\n      }\r\n      \r\n          /**\r\n            * Gets the Float64 value at the specified byte offset from the start of the view. There is\r\n            * no alignment constraint; multi-byte values may be fetched from any offset.\r\n            * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n            */\r\n          getFloat64(littleEndian: boolean = true): number {\r\n            var val = this.view.getFloat64(this._pos,littleEndian);\r\n            this._pos += 8;\r\n            return val;\r\n          }\r\n      \r\n          /**\r\n            * Gets the Int8 value at the specified byte offset from the start of the view. There is\r\n            * no alignment constraint; multi-byte values may be fetched from any offset.\r\n            * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n            */\r\n          getInt8(): number {\r\n            var val = this.view.getInt8(this._pos);\r\n            this._pos++;\r\n            return val;\r\n          }\r\n      \r\n          /**\r\n            * Gets the Int16 value at the specified byte offset from the start of the view. There is\r\n            * no alignment constraint; multi-byte values may be fetched from any offset.\r\n            * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n            */\r\n          getInt16(littleEndian: boolean = true): number {\r\n            var val = this.view.getInt16(this._pos,littleEndian);\r\n            this._pos += 2;\r\n            return val;\r\n          }\r\n          /**\r\n            * Gets the Int32 value at the specified byte offset from the start of the view. There is\r\n            * no alignment constraint; multi-byte values may be fetched from any offset.\r\n            * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n            */\r\n          getInt32(littleEndian: boolean = true): number {\r\n            var val = this.view.getInt32(this._pos,littleEndian);\r\n            this._pos += 4;\r\n            return val;\r\n          }\r\n      \r\n          /**\r\n            * Gets the Uint8 value at the specified byte offset from the start of the view. There is\r\n            * no alignment constraint; multi-byte values may be fetched from any offset.\r\n            * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n            */\r\n          getUint8(): number {\r\n            var val = this.view.getUint8(this._pos);\r\n            this._pos++;\r\n            return val;\r\n          }\r\n      \r\n          getByte(): number {\r\n            var val = this.view.getUint8(this._pos);\r\n            this._pos++;\r\n            return val;\r\n          }\r\n\r\n\r\n          /**\r\n            * Gets the Uint16 value at the specified byte offset from the start of the view. There is\r\n            * no alignment constraint; multi-byte values may be fetched from any offset.\r\n            * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n            */\r\n          getUint16(littleEndian: boolean = true): number {\r\n            var val = this.view.getUint16(this._pos,littleEndian);\r\n            this._pos += 2;\r\n            return val;\r\n          }\r\n      \r\n          /**\r\n            * Gets the Uint32 value at the specified byte offset from the start of the view. There is\r\n            * no alignment constraint; multi-byte values may be fetched from any offset.\r\n            * @param byteOffset The place in the buffer at which the value should be retrieved.\r\n            */\r\n          getUint32(littleEndian: boolean = true): number {\r\n            var val = this.view.getUint32(this._pos,littleEndian);\r\n            this._pos += 4;\r\n            return val;\r\n          }\r\n      \r\n          /**\r\n            * Stores an Float32 value at the specified byte offset from the start of the view.\r\n            * @param byteOffset The place in the buffer at which the value should be set.\r\n            * @param value The value to set.\r\n            * @param littleEndian If false or undefined, a big-endian value should be written,\r\n            * otherwise a little-endian value should be written.\r\n            */\r\n          setFloat32(value: number, littleEndian: boolean = true): void {\r\n             this.view.setFloat32(this._pos,value,littleEndian);\r\n             this._pos+=4; \r\n          }\r\n      \r\n          /**\r\n            * Stores an Float64 value at the specified byte offset from the start of the view.\r\n            * @param byteOffset The place in the buffer at which the value should be set.\r\n            * @param value The value to set.\r\n            * @param littleEndian If false or undefined, a big-endian value should be written,\r\n            * otherwise a little-endian value should be written.\r\n            */\r\n          setFloat64(value: number, littleEndian: boolean = true): void {\r\n            this.view.setFloat64(this._pos,value,littleEndian);\r\n            this._pos+=8; \r\n         }\r\n      \r\n          /**\r\n            * Stores an Int8 value at the specified byte offset from the start of the view.\r\n            * @param byteOffset The place in the buffer at which the value should be set.\r\n            * @param value The value to set.\r\n            */\r\n          setInt8(value: number): void {\r\n            this.view.setInt8(this._pos,value);\r\n            this._pos++; \r\n         }\r\n\r\n      \r\n          /**\r\n            * Stores an Int16 value at the specified byte offset from the start of the view.\r\n            * @param byteOffset The place in the buffer at which the value should be set.\r\n            * @param value The value to set.\r\n            * @param littleEndian If false or undefined, a big-endian value should be written,\r\n            * otherwise a little-endian value should be written.\r\n            */\r\n          setInt16(value: number, littleEndian: boolean = true): void {\r\n            this.view.setInt16(this._pos,value,littleEndian);\r\n            this._pos+=2; \r\n         }\r\n      \r\n          /**\r\n            * Stores an Int32 value at the specified byte offset from the start of the view.\r\n            * @param byteOffset The place in the buffer at which the value should be set.\r\n            * @param value The value to set.\r\n            * @param littleEndian If false or undefined, a big-endian value should be written,\r\n            * otherwise a little-endian value should be written.\r\n            */\r\n          setInt32(value: number, littleEndian: boolean = true): void {\r\n            this.view.setInt32(this._pos,value,littleEndian);\r\n            this._pos+=4; \r\n         }\r\n      \r\n          /**\r\n            * Stores an Uint8 value at the specified byte offset from the start of the view.\r\n            * @param byteOffset The place in the buffer at which the value should be set.\r\n            * @param value The value to set.\r\n            */\r\n          setUint8(value: number): void {\r\n            this.view.setUint8(this._pos,value);\r\n            this._pos++; \r\n         }\r\n         setByte(value : number): void {\r\n            this.view.setUint8(this._pos,value);\r\n            this._pos++;\r\n         }\r\n      \r\n          /**\r\n            * Stores an Uint16 value at the specified byte offset from the start of the view.\r\n            * @param byteOffset The place in the buffer at which the value should be set.\r\n            * @param value The value to set.\r\n            * @param littleEndian If false or undefined, a big-endian value should be written,\r\n            * otherwise a little-endian value should be written.\r\n            */\r\n          setUint16(value: number, littleEndian: boolean=true): void {\r\n            this.view.setUint16(this._pos,value,littleEndian);\r\n            this._pos+=2; \r\n         }\r\n      \r\n          /**\r\n            * Stores an Uint32 value at the specified byte offset from the start of the view.\r\n            * @param byteOffset The place in the buffer at which the value should be set.\r\n            * @param value The value to set.\r\n            * @param littleEndian If false or undefined, a big-endian value should be written,\r\n            * otherwise a little-endian value should be written.\r\n            */\r\n          setUint32(value: number, littleEndian: boolean=true): void {\r\n            this.view.setUint32(this._pos,value,littleEndian);\r\n            this._pos+=4; \r\n         }\r\n\r\n         goBack(bytes : number) : void {\r\n             this._pos -= bytes;\r\n         }\r\n\r\n         skip(bytes : number) {\r\n             this._pos += bytes;\r\n         }\r\n\r\n         rewind() {\r\n           this._pos = 0;\r\n         }\r\n\r\n         writeByteStream (buf : Uint8Array) {\r\n          \r\n              if (!buf) {\r\n                  this.setInt32(-1);\r\n                  return;\r\n              }\r\n              this.setInt32(buf.length);\r\n              // make sure there is enough room in destination buffer\r\n              var remaining_bytes = this.view.buffer.byteLength - this._pos;\r\n          \r\n              /* istanbul ignore next */\r\n              if (remaining_bytes < buf.length) {\r\n                  throw new Error(\"DataStream.writeByteStream error : not enough bytes left in buffer :  bufferLength is \" + buf.length + \" but only \" + remaining_bytes + \" left\");\r\n              }\r\n              var bytebuf = new Uint8Array(this.view.buffer);\r\n              bytebuf.set(buf,this._pos);\r\n              this._pos += buf.length;\r\n          };\r\n\r\n          /**\r\n       * read a byte stream to the stream.\r\n       * The method reads the length of the byte array from the stream as a 32 bits integer before reading the byte stream.\r\n       *\r\n       * @method readByteStream\r\n       * @return {Uint8Array}\r\n       */\r\n      readByteStream() {\r\n        var bufLen = this.getInt32();\r\n        if (bufLen === -1) {\r\n            return null;\r\n        }\r\n        if (bufLen === 0) {\r\n            return new Uint8Array(0);\r\n        }\r\n\r\n        // check that there is enough space in the buffer\r\n        var remaining_bytes = this.view.buffer.byteLength - this._pos;\r\n        if (remaining_bytes < bufLen) {\r\n            throw new Error(\"BinaryStream.readByteStream error : not enough bytes left in buffer :  bufferLength is \" + bufLen + \" but only \" + remaining_bytes + \" left\");\r\n        }\r\n\r\n        var buf = new Uint8Array(this.view.buffer.slice(this._pos,this._pos + bufLen));\r\n        this._pos += bufLen;\r\n        return buf;\r\n      };\r\n\r\n      readString() {\r\n        var buff = this.readByteStream();\r\n//        var encodedString = String.fromCharCode.apply(null, buff),\r\n//        decodedString = decodeURIComponent(encodedString);\r\n//        return decodedString;\r\n        if (buff == null) {\r\n          return null;\r\n        }\r\n        return txtDecoder.decode(buff);\r\n\r\n      };\r\n\r\n      writeString(str : string) : void {\r\n        if (str === undefined || str === null) {\r\n          this.setInt32(-1);\r\n          return;\r\n        }\r\n        return this.writeByteStream(txtEncoder.encode(str));\r\n      };\r\n\r\n      /**\r\n   * @method writeArrayBuffer\r\n   * @param arrayBuf {ArrayBuffer}\r\n   * @param offset   {Number}\r\n   * @param length   {Number}\r\n   */\r\n    public writeArrayBuffer(arrayBuf : ArrayBuffer, offset : number, length : number) {\r\n      offset = offset || 0;\r\n      \r\n      var byteArr = new Uint8Array(arrayBuf);\r\n      var n = (length || byteArr.length) + offset;\r\n      for (var i = offset; i < n; i++) {     \r\n          this.view[this._pos++] = byteArr[i];\r\n      }\r\n    };\r\n\r\n    /**\r\n    * @method readArrayBuffer\r\n    * @param length\r\n    * @returns {Uint8Array}\r\n    */\r\n    public readArrayBuffer(length : number): Uint8Array {\r\n      var arr = new Uint8Array(this.view.buffer,this._pos,length);\r\n      this._pos += length;\r\n      return arr;\r\n    }\r\n\r\n\r\n    public static binaryStoreSize(obj) : number {\r\n      let stream = new BinaryStreamSizeCalculator();\r\n      obj.encode(stream);\r\n      return stream.length;\r\n    }\r\n\r\n}\r\n\r\n\r\n\r\n/**\r\n * a BinaryStreamSizeCalculator can be used to quickly evaluate the required size\r\n * of a buffer by performing the same sequence of write operation.\r\n *\r\n * a BinaryStreamSizeCalculator has the same writeXXX methods as the BinaryStream stream\r\n * object.\r\n *\r\n * @class BinaryStreamSizeCalculator\r\n * @extends BinaryStream\r\n * @constructor\r\n *\r\n */\r\nexport class BinaryStreamSizeCalculator {\r\n  length : number;\r\n  constructor() {\r\n  this.length = 0;\r\n}\r\n\r\nrewind() : void {\r\n  this.length = 0;\r\n};\r\n\r\nsetInt8(value) : void {\r\n  this.length += 1;\r\n};\r\n\r\nsetUint8(value) : void {\r\n  this.length += 1;\r\n};\r\n\r\nsetInt16(value) : void {\r\n  this.length += 2;\r\n};\r\n\r\nsetInt32(value: number): void {\r\n  this.length+=4; \r\n}\r\n\r\nsetInteger(value) : void {\r\n  this.length += 4;\r\n};\r\n\r\nsetUint32(value) : void {\r\n  this.length += 4;\r\n};\r\n\r\nsetUint16(value) : void {\r\n  this.length += 2;\r\n};\r\n\r\n\r\nsetFloat(value) : void {\r\n  this.length += 4;\r\n};\r\n\r\nsetFloat64(value) : void {\r\n  this.length += 8;\r\n}\r\n\r\nsetDouble(value) : void {\r\n  this.length += 8;\r\n};\r\n\r\nwriteArrayBuffer(arrayBuf : ArrayBuffer, offset, byteLength) : void {\r\n  offset = offset || 0;\r\n  assert(arrayBuf instanceof ArrayBuffer);\r\n  this.length += (byteLength || arrayBuf.byteLength/*new Uint8Array(arrayBuf).length*/);\r\n};\r\n\r\nwriteByteStream(buf : Uint8Array) : void {\r\n  if (!buf) {\r\n      this.setInt32(0);\r\n  } else {\r\n      this.setInt32(buf.length);\r\n      this.length += buf.length;\r\n\r\n  }\r\n};\r\n\r\nwriteString(str : string) : void {\r\n\r\n  if (str === undefined || str === null) {\r\n      this.setInt32(-1);\r\n      return;\r\n  }\r\n  return this.writeByteStream(txtEncoder.encode(str));\r\n};\r\n\r\n\r\n}\r\n\r\n\r\n//utility functions\r\nexport function stringToUint8Array(str : string) : Uint8Array {\r\n  return txtEncoder.encode(str);\r\n}\r\n","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\n\r\n import {assert} from '../assert'\r\n\r\nexport var _enumerations = {};\r\n\r\nimport {TypeSchema} from './factories_builtin_types';\r\n\r\nfunction _encode_enumeration(member, stream) {\r\n    stream.writeInteger(member.value);\r\n}\r\n\r\n/**\r\n * @method registerEnumeration\r\n * @param schema\r\n * @param schema.name { string}\r\n * @param schema.enumValues [{key:Name, value:values}]\r\n * @param schema.encode\r\n * @param schema.decode\r\n * @param schema.typedEnum\r\n * @param schema.defaultValue \r\n * @return {Enum}\r\n */\r\nexport function registerEnumeration(name : string, enumeration : any, encode : Function, decode : Function, coerce? : Function) {\r\n\r\n    // create a new Enum\r\n    if (_enumerations.hasOwnProperty(name)) {\r\n        throw new Error(\"factories.registerEnumeration : Enumeration \" + name + \" has been already inserted\");\r\n    }\r\n\r\n    assert('function' === typeof encode);\r\n    assert('function' === typeof decode);\r\n\r\n    var typeSchema = new TypeSchema(    {\r\n        name: name,\r\n        encode: encode,\r\n        decode: decode,\r\n        defaultValue: enumeration[0],\r\n        coerce: coerce,\r\n    }\r\n    );\r\n    _enumerations[name] = typeSchema;\r\n\r\n    return enumeration;\r\n}\r\n\r\nexport function hasEnumeration(enumerationName : string) {\r\n    return !!_enumerations[enumerationName];\r\n};\r\n\r\nexport function getEnumeration(enumerationName : string) {\r\n    assert(hasEnumeration(enumerationName));\r\n    return _enumerations[enumerationName];\r\n};","\n\nimport {DataStream} from '../basic-types/DataStream';\n\n/**\nIndicates whether a token if being created or renewed.*/\nexport enum SecurityTokenRequestType {\n \t\tIssue = 0,\n\t\tRenew = 1,\n\n}\n\nexport function encodeSecurityTokenRequestType(\tdata : SecurityTokenRequestType, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeSecurityTokenRequestType(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"SecurityTokenRequestType\",SecurityTokenRequestType,encodeSecurityTokenRequestType ,decodeSecurityTokenRequestType ,null);","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {SecurityTokenRequestType, encodeSecurityTokenRequestType, decodeSecurityTokenRequestType} from './SecurityTokenRequestType';\nimport {MessageSecurityMode, encodeMessageSecurityMode, decodeMessageSecurityMode} from './MessageSecurityMode';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IOpenSecureChannelRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tclientProtocolVersion? : ec.UInt32;\n\t\trequestType? : SecurityTokenRequestType;\n\t\tsecurityMode? : MessageSecurityMode;\n\t\tclientNonce? : Uint8Array;\n\t\trequestedLifetime? : ec.UInt32;\n}\n\n/**\nCreates a secure channel with a server.\n*/\n\nexport class OpenSecureChannelRequest {\n \t\trequestHeader : RequestHeader;\n\t\tclientProtocolVersion : ec.UInt32;\n\t\trequestType : SecurityTokenRequestType;\n\t\tsecurityMode : MessageSecurityMode;\n\t\tclientNonce : Uint8Array;\n\t\trequestedLifetime : ec.UInt32;\n\n\tconstructor(\toptions? : IOpenSecureChannelRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.clientProtocolVersion= (options.clientProtocolVersion) ? options.clientProtocolVersion:null;\n\t\tthis.requestType= (options.requestType) ? options.requestType:null;\n\t\tthis.securityMode= (options.securityMode) ? options.securityMode:null;\n\t\tthis.clientNonce= (options.clientNonce) ? options.clientNonce:null;\n\t\tthis.requestedLifetime= (options.requestedLifetime) ? options.requestedLifetime:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeUInt32(this.clientProtocolVersion,out);\n\t\tencodeSecurityTokenRequestType(this.requestType,out);\n\t\tencodeMessageSecurityMode(this.securityMode,out);\n\t\tec.encodeByteString(this.clientNonce,out);\n\t\tec.encodeUInt32(this.requestedLifetime,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.clientProtocolVersion = ec.decodeUInt32(inp);\n\t\tthis.requestType = decodeSecurityTokenRequestType(inp);\n\t\tthis.securityMode = decodeMessageSecurityMode(inp);\n\t\tthis.clientNonce = ec.decodeByteString(inp);\n\t\tthis.requestedLifetime = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : OpenSecureChannelRequest) : OpenSecureChannelRequest { \n\t\tif(!target) {\n\t\t\ttarget = new OpenSecureChannelRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.clientProtocolVersion = this.clientProtocolVersion;\n\t\ttarget.requestType = this.requestType;\n\t\ttarget.securityMode = this.securityMode;\n\t\ttarget.clientNonce = this.clientNonce;\n\t\ttarget.requestedLifetime = this.requestedLifetime;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeOpenSecureChannelRequest(\tinp : DataStream) : OpenSecureChannelRequest { \n\t\tlet obj = new OpenSecureChannelRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"OpenSecureChannelRequest\",OpenSecureChannelRequest, makeExpandedNodeId(446,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {ChannelSecurityToken} from './ChannelSecurityToken';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IOpenSecureChannelResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tserverProtocolVersion? : ec.UInt32;\n\t\tsecurityToken? : ChannelSecurityToken;\n\t\tserverNonce? : Uint8Array;\n}\n\n/**\nCreates a secure channel with a server.\n*/\n\nexport class OpenSecureChannelResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tserverProtocolVersion : ec.UInt32;\n\t\tsecurityToken : ChannelSecurityToken;\n\t\tserverNonce : Uint8Array;\n\n\tconstructor(\toptions? : IOpenSecureChannelResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.serverProtocolVersion= (options.serverProtocolVersion) ? options.serverProtocolVersion:null;\n\t\tthis.securityToken= (options.securityToken) ? options.securityToken:new ChannelSecurityToken();\n\t\tthis.serverNonce= (options.serverNonce) ? options.serverNonce:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeUInt32(this.serverProtocolVersion,out);\n\t\tthis.securityToken.encode(out);\n\t\tec.encodeByteString(this.serverNonce,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.serverProtocolVersion = ec.decodeUInt32(inp);\n\t\tthis.securityToken.decode(inp);\n\t\tthis.serverNonce = ec.decodeByteString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : OpenSecureChannelResponse) : OpenSecureChannelResponse { \n\t\tif(!target) {\n\t\t\ttarget = new OpenSecureChannelResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.serverProtocolVersion = this.serverProtocolVersion;\n\t\tif (this.securityToken) { target.securityToken = this.securityToken.clone();}\n\t\ttarget.serverNonce = this.serverNonce;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeOpenSecureChannelResponse(\tinp : DataStream) : OpenSecureChannelResponse { \n\t\tlet obj = new OpenSecureChannelResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"OpenSecureChannelResponse\",OpenSecureChannelResponse, makeExpandedNodeId(449,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport {DataStream} from '../basic-types/DataStream';\nimport * as ec from '../basic-types';\n\nexport interface ICloseSecureChannelRequest {\n\t\trequestHeader? : RequestHeader;\n}\n\n/**\nCloses a secure channel.\n*/\n\nexport class CloseSecureChannelRequest {\n \t\trequestHeader : RequestHeader;\n\n\tconstructor(\toptions? : ICloseSecureChannelRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CloseSecureChannelRequest) : CloseSecureChannelRequest { \n\t\tif(!target) {\n\t\t\ttarget = new CloseSecureChannelRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCloseSecureChannelRequest(\tinp : DataStream) : CloseSecureChannelRequest { \n\t\tlet obj = new CloseSecureChannelRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CloseSecureChannelRequest\",CloseSecureChannelRequest, makeExpandedNodeId(452,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {DataStream} from '../basic-types/DataStream';\nimport * as ec from '../basic-types';\n\nexport interface ICloseSecureChannelResponse {\n\t\tresponseHeader? : ResponseHeader;\n}\n\n/**\nCloses a secure channel.\n*/\n\nexport class CloseSecureChannelResponse {\n \t\tresponseHeader : ResponseHeader;\n\n\tconstructor(\toptions? : ICloseSecureChannelResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CloseSecureChannelResponse) : CloseSecureChannelResponse { \n\t\tif(!target) {\n\t\t\ttarget = new CloseSecureChannelResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCloseSecureChannelResponse(\tinp : DataStream) : CloseSecureChannelResponse { \n\t\tlet obj = new CloseSecureChannelResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CloseSecureChannelResponse\",CloseSecureChannelResponse, makeExpandedNodeId(455,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {DataStream} from '../basic-types/DataStream';\nimport * as ec from '../basic-types';\n\nexport interface IServiceFault {\n\t\tresponseHeader? : ResponseHeader;\n}\n\n/**\nThe response returned by all services when there is a service level error.\n*/\n\nexport class ServiceFault {\n \t\tresponseHeader : ResponseHeader;\n\n\tconstructor(\toptions? : IServiceFault) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ServiceFault) : ServiceFault { \n\t\tif(!target) {\n\t\t\ttarget = new ServiceFault();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeServiceFault(\tinp : DataStream) : ServiceFault { \n\t\tlet obj = new ServiceFault();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ServiceFault\",ServiceFault, makeExpandedNodeId(397,0));","\"use strict\";\r\n\r\nimport * as ec from '../basic-types';\r\nimport { DataStream } from \"../basic-types/DataStream\";\r\n\r\n// OPC UA Secure Conversation Message Header : Part 6 page 36\r\n\r\nexport interface IAsymmetricAlgorithmSecurityHeader {\r\n        securityPolicyUri? : string;\r\n        senderCertificate? : Uint8Array//ByteString;\r\n        receiverCertificateThumbprint? : Uint8Array//ByteString;\r\n}\r\n\r\n//Asymmetric algorithms are used to secure the OpenSecureChannel messages.\r\nexport class AsymmetricAlgorithmSecurityHeader {\r\n\r\n\r\n        constructor(options? : IAsymmetricAlgorithmSecurityHeader) {\r\n                options = options || {};\r\n                this.securityPolicyUri = options.securityPolicyUri;\r\n                this.senderCertificate = options.senderCertificate;\r\n                this.receiverCertificateThumbprint = options.receiverCertificateThumbprint;\r\n        }\r\n\r\n        // length shall not exceed 256\r\n        // The URI of the security policy used to secure the message.\r\n        // This field is encoded as a UTF8 string without a null terminator\r\n        securityPolicyUri : string;\r\n\r\n        // The X509v3 certificate assigned to the sending application instance.\r\n        // This is a DER encoded blob.\r\n        // This indicates what private key was used to sign the MessageChunk.\r\n        // This field shall be null if the message is not signed.\r\n        // The structure of an X509 Certificate is defined in X509.\r\n        // The DER format for a Certificate is defined in X690\r\n        // The Stack shall close the channel and report an error to the Application if the SenderCertificate\r\n        // is too large for the buffer size supported by the transport layer.\r\n        // If the Certificate is signed by a CA the DER encoded CA Certificate may be appended after the Certificate\r\n        // in the byte array. If the CA Certificate is also signed by another CA this process is repeated until\r\n        // the entire Certificate chain is in the buffer or if MaxSenderCertificateSize limit is reached\r\n        // (the process stops after the last whole Certificate that can be added without exceeding the\r\n        // MaxSenderCertificateSize limit).\r\n        // Receivers can extract the Certificates from the byte array by using the Certificate size contained\r\n        // in DER header (see X509).\r\n        // Receivers that do not handle Certificate chains shall ignore the extra bytes.\r\n        senderCertificate : Uint8Array//ByteString;\r\n\r\n        // The thumbprint of the X509v3 certificate assigned to the receiving application\r\n        // The thumbprint is the SHA1 digest of the DER encoded form of the certificate.\r\n        // This indicates what public key was used to encrypt the MessageChunk\r\n        // This field shall be null if the message is not encrypted.\r\n        receiverCertificateThumbprint : Uint8Array//ByteString;\r\n \r\n        \r\n        encode(\tout : DataStream) { \r\n                ec.encodeString(this.securityPolicyUri,out);\r\n                ec.encodeByteString(this.senderCertificate,out);\r\n                ec.encodeByteString(this.receiverCertificateThumbprint,out);\r\n\t}\r\n\r\n\r\n\tdecode(\tinp : DataStream) { \r\n                \r\n                this.securityPolicyUri = ec.decodeString(inp);\r\n                this.senderCertificate = ec.decodeByteString(inp);\r\n                this.receiverCertificateThumbprint = ec.decodeByteString(inp);\r\n\t}\r\n\r\n\r\n\tclone(\ttarget? : AsymmetricAlgorithmSecurityHeader) : AsymmetricAlgorithmSecurityHeader { \r\n\t\tif(!target) {\r\n\t\t\ttarget = new AsymmetricAlgorithmSecurityHeader();\r\n\t\t}\r\n                \r\n                target.securityPolicyUri = this.securityPolicyUri;\r\n                target.senderCertificate = this.senderCertificate; //TODO: deep copy?\r\n                target.receiverCertificateThumbprint = this.receiverCertificateThumbprint;\r\n\t\treturn target;\r\n\t}\r\n\r\n\r\n}\r\n\r\nimport {register_class_definition} from \"../factory/factories_factories\";\r\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\r\nimport { generate_new_id } from '../factory';\r\nregister_class_definition(\"AsymmetricAlgorithmSecurityHeader\",AsymmetricAlgorithmSecurityHeader,makeExpandedNodeId(generate_new_id()));","import * as ec from '../basic-types';\r\nimport { DataStream } from \"../basic-types/DataStream\";\r\n\"use strict\";\r\n\r\nexport interface ISymmetricAlgortihmSecurityHeader {\r\n    tokenId? : ec.UInt32;\r\n}\r\n\r\n// Symmetric algorithms are used to secure all messages other than the OpenSecureChannel messages\r\n// OPC UA Secure Conversation Message Header Release 1.02 Part 6 page 39\r\nexport class SymmetricAlgorithmSecurityHeader {\r\n        // A unique identifier for the ClientSecureChannelLayer token used to secure the message\r\n        // This identifier is returned by the server in an OpenSecureChannel response message. If a\r\n        // Server receives a TokenId which it does not recognize it shall return an appropriate\r\n        // transport layer error.\r\n\r\n\r\n        tokenId : ec.UInt32;\r\n\r\n        constructor(options? : ISymmetricAlgortihmSecurityHeader) {\r\n            options = options || {};\r\n\r\n            this.tokenId = options.tokenId || 0xDEADBEEF;\r\n        }\r\n\r\n        encode(\tout : DataStream) { \r\n            ec.encodeUInt32(this.tokenId,out);\r\n        }\r\n\r\n        decode(\tinp : DataStream) { \r\n            this.tokenId = ec.decodeUInt32(inp);    \r\n        }\r\n\r\n        clone(\ttarget? : SymmetricAlgorithmSecurityHeader) : SymmetricAlgorithmSecurityHeader { \r\n            if(!target) {\r\n                target = new SymmetricAlgorithmSecurityHeader();\r\n            }            \r\n            target.tokenId = this.tokenId;       \r\n            return target;\r\n        }\r\n    \r\n};\r\n\r\n\r\nimport {register_class_definition} from \"../factory/factories_factories\";\r\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\r\nimport { generate_new_id } from '../factory';\r\nregister_class_definition(\"SymmetricAlgorithmSecurityHeader\",SymmetricAlgorithmSecurityHeader,makeExpandedNodeId(generate_new_id()));\r\n","// --------- This code has been automatically generated !!! 2018-02-08T10:26:04.257Z\n\"use strict\";\n/**\n * @module opcua.address_space.types\n */\n\nimport * as ec from '../basic-types';\nvar encodeArray = ec.encodeArray;\nvar decodeArray = ec.decodeArray;\n\nimport {makeExpandedNodeId} from '../nodeid/expanded_nodeid';\nimport {generate_new_id} from '../factory';\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { DataStream } from \"../basic-types/DataStream\";\nimport { UInt32 } from \"../basic-types\";\n\nimport {BaseUAObject} from  '../factory/factories_baseobject';\n\n\nexport interface ISequenceHeader {\n  requestId?: any;\n  sequenceNumber?: UInt32;\n}\n\n/**\n * \n * @class SequenceHeader\n * @constructor\n * @extends BaseUAObject\n * @param  options {Object}\n * @param  [options.sequenceNumber] {UInt32} \n * @param  [options.requestId] {UInt32} \n */\nexport class SequenceHeader extends BaseUAObject {\n\n  public static encodingDefaultBinary : ec.ExpandedNodeId = makeExpandedNodeId(generate_new_id());\n  public requestId: any;\n  public sequenceNumber : UInt32;\nconstructor(options? : ISequenceHeader )\n{\n    super();\n    options = options || {};\n    /**\n      * \n      * @property sequenceNumber\n      * @type {UInt32}\n      */\n     if (options.sequenceNumber !== undefined) {\n        this.sequenceNumber = options.sequenceNumber;\n     }\n\n    /**\n      * \n      * @property requestId\n      * @type {UInt32}\n      */\n     if (options.requestId !== undefined) {\n        this.requestId = options.requestId;\n     }\n\n   // Object.preventExtensions(self);\n}\n\n/**\n * encode the object into a binary stream\n * @method encode\n *\n * @param stream {DataStream} \n */\npublic encode(stream : DataStream) {\n    // call base class implementation first\n   \n    ec.encodeUInt32(this.sequenceNumber,stream);\n    ec.encodeUInt32(this.requestId,stream);\n};\n/**\n * decode the object from a binary stream\n * @method decode\n *\n * @param stream {BinaryStream} \n * @param [option] {object} \n */\npublic decode(stream : DataStream) {\n    // call base class implementation first\n    this.sequenceNumber = ec.decodeUInt32(stream);\n    this.requestId = ec.decodeUInt32(stream);\n};\n\npublic clone(target?: SequenceHeader): BaseUAObject {\n  if (target === undefined) {\n    target = new SequenceHeader();\n  } \n\n  target.requestId = this.requestId;\n  target.sequenceNumber = this.sequenceNumber;\n  return target;\n}\n\n}\n\n\nregister_class_definition(\"SequenceHeader\",SequenceHeader,makeExpandedNodeId(generate_new_id()));\n","\"use strict\";\r\n/**\r\n * @module services.secure-channel\r\n */\r\nimport {ChannelSecurityToken as ChannelSecurityTokenGen}  from \"../generated/ChannelSecurityToken\";\r\n/**\r\n * @property expired\r\n * @type {Boolean} - True if the security token has expired.\r\n */\r\nexport class ChannelSecurityToken extends ChannelSecurityTokenGen {\r\n    public get expired() {\r\n        return (this.createdAt.getTime() + this.revisedLifetime * 1.6) < Date.now();\r\n    };\r\n}\r\n\r\nexport {OpenSecureChannelRequest} from '../generated/OpenSecureChannelRequest';\r\nexport {OpenSecureChannelResponse} from '../generated/OpenSecureChannelResponse';\r\nexport {CloseSecureChannelRequest} from '../generated/CloseSecureChannelRequest';\r\nexport {CloseSecureChannelResponse} from '../generated/CloseSecureChannelResponse';\r\nexport {ServiceFault} from '../generated/ServiceFault';\r\nexport {AsymmetricAlgorithmSecurityHeader} from './AsymmetricAlgorithmSecurityHeader';\r\nexport {SymmetricAlgorithmSecurityHeader} from './SymmetricAlgorithmSecurityHeader';\r\n\r\nexport {SecurityTokenRequestType} from '../generated/SecurityTokenRequestType';\r\nexport {ResponseHeader} from '../generated/ResponseHeader';\r\nexport {RequestHeader} from '../generated/RequestHeader';\r\nexport {SequenceHeader} from './SequenceHeader';\r\nexport {SignatureData} from '../generated/SignatureData';\r\nexport {MessageSecurityMode} from '../generated/MessageSecurityMode';\r\n\r\n\r\n","\"use strict\";\r\n\r\nimport {hexDump} from '../common/debug';\r\n\r\nexport function buffer_ellipsis(buffer : ArrayBuffer, start?:number, end?:number) {\r\n    start = start || 0;\r\n    end = end || buffer.byteLength;\r\n    if (end - start < 40) {\r\n        return hexDump(buffer,start,end-start);\r\n    }\r\n    return hexDump(buffer,start,10) + \" ... \" + hexDump(buffer,end -10,10);\r\n}\r\n","\"use strict\";\r\n\r\nexport function capitalizeFirstLetter(str: string) : string  {\r\n    return str.substr(0, 1).toUpperCase() + str.substr(1);\r\n}\r\n\r\nvar ACode = \"A\".charCodeAt(0);\r\nvar ZCode = \"Z\".charCodeAt(0);\r\nexport function isUpperCaseChar(c) : boolean {\r\n    var code = c.charCodeAt(0);\r\n    return code >= ACode && code <= ZCode;\r\n}\r\n\r\n// HelloWorld => helloWorld\r\n// XAxis      => xAxis\r\n// EURange    => euRange\r\nexport function lowerFirstLetter(str : string) : string {\r\n    var result =  str.substr(0, 1).toLowerCase() + str.substr(1);\r\n    if (result.length>3 && isUpperCaseChar(str[1]) && isUpperCaseChar(str[2])) {\r\n        result =  str.substr(0, 2).toLowerCase() + str.substr(2);\r\n    }\r\n    return result;\r\n}\r\n\r\n","\"use strict\";\r\n\r\n\r\nexport function get_clock_tick() : number{\r\n    //return Date.now();\r\n    return performance.now();\r\n}","\r\n\"use strict\";\r\n\r\nvar STRIP_COMMENTS = /((\\/\\/.*$)|(\\/\\*[\\s\\S]*?\\*\\/))/mg;\r\nvar ARGUMENT_NAMES = /([^\\s,]+)/g;\r\nexport function getFunctionParameterNames(func) {\r\n\r\n    var fnStr = func.toString().replace(STRIP_COMMENTS, '');\r\n    var result = fnStr.slice(fnStr.indexOf('(')+1, fnStr.indexOf(')')).match(ARGUMENT_NAMES);\r\n    if(result === null)\r\n        result = [];\r\n    return result;\r\n}\r\n\r\n","var SymbolProto = typeof Symbol !== 'undefined' ? Symbol.prototype : null;\r\n\r\n\r\nexport function isEqual(a, b,aStack?,bStack?) {\r\n  // Identical objects are equal. `0 === -0`, but they aren't identical.\r\n  // See the [Harmony `egal` proposal](http://wiki.ecmascript.org/doku.php?id=harmony:egal).\r\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\r\n  // `null` or `undefined` only equal to itself (strict comparison).\r\n  if (a == null || b == null) return false;\r\n  // `NaN`s are equivalent, but non-reflexive.\r\n  if (a !== a) return b !== b;\r\n  // Exhaust primitive checks\r\n  var type = typeof a;\r\n  if (type !== 'function' && type !== 'object' && typeof b != 'object') return false;\r\n  return deepEq(a, b,aStack,bStack);\r\n};\r\n\r\n// Internal recursive comparison function for `isEqual`.\r\n\r\nfunction deepEq(a, b, aStack, bStack) {\r\n    // Compare `[[Class]]` names.\r\n    var className = toString.call(a);\r\n    if (className !== toString.call(b)) return false;\r\n    switch (className) {\r\n      // Strings, numbers, regular expressions, dates, and booleans are compared by value.\r\n      case '[object RegExp]':\r\n      // RegExps are coerced to strings for comparison (Note: '' + /a/i === '/a/i')\r\n      case '[object String]':\r\n        // Primitives and their corresponding object wrappers are equivalent; thus, `\"5\"` is\r\n        // equivalent to `new String(\"5\")`.\r\n        return '' + a === '' + b;\r\n      case '[object Number]':\r\n        // `NaN`s are equivalent, but non-reflexive.\r\n        // Object(NaN) is equivalent to NaN.\r\n        if (+a !== +a) return +b !== +b;\r\n        // An `egal` comparison is performed for other numeric values.\r\n        return +a === 0 ? 1 / +a === 1 / b : +a === +b;\r\n      case '[object Date]':\r\n      case '[object Boolean]':\r\n        // Coerce dates and booleans to numeric primitive values. Dates are compared by their\r\n        // millisecond representations. Note that invalid dates with millisecond representations\r\n        // of `NaN` are not equivalent.\r\n        return +a === +b;\r\n      case '[object Symbol]':\r\n        return SymbolProto.valueOf.call(a) === SymbolProto.valueOf.call(b);\r\n    }\r\n\r\n    var areArrays = className === '[object Array]';\r\n    if (!areArrays) {\r\n      if (typeof a != 'object' || typeof b != 'object') return false;\r\n\r\n      // Objects with different constructors are not equivalent, but `Object`s or `Array`s\r\n      // from different frames are.\r\n      var aCtor = a.constructor, bCtor = b.constructor;\r\n      if (aCtor !== bCtor && !(typeof (aCtor) === 'function' && aCtor instanceof aCtor &&\r\n                               typeof (bCtor) === 'function'  && bCtor instanceof bCtor)\r\n                          && ('constructor' in a && 'constructor' in b)) {\r\n        return false;\r\n      }\r\n    }\r\n    // Assume equality for cyclic structures. The algorithm for detecting cyclic\r\n    // structures is adapted from ES 5.1 section 15.12.3, abstract operation `JO`.\r\n\r\n    // Initializing stack of traversed objects.\r\n    // It's done here since we only need them for objects and arrays comparison.\r\n    aStack = aStack || [];\r\n    bStack = bStack || [];\r\n    var length = aStack.length;\r\n    while (length--) {\r\n      // Linear search. Performance is inversely proportional to the number of\r\n      // unique nested structures.\r\n      if (aStack[length] === a) return bStack[length] === b;\r\n    }\r\n\r\n    // Add the first object to the stack of traversed objects.\r\n    aStack.push(a);\r\n    bStack.push(b);\r\n\r\n    // Recursively compare objects and arrays.\r\n    if (areArrays) {\r\n      // Compare array lengths to determine if a deep comparison is necessary.\r\n      length = a.length;\r\n      if (length !== b.length) return false;\r\n      // Deep compare the contents, ignoring non-numeric properties.\r\n      while (length--) {\r\n        if (!isEqual(a[length], b[length], aStack, bStack)) return false;\r\n      }\r\n    } else {\r\n      // Deep compare objects.\r\n      var keys = Object.keys(a);\r\n      var key;\r\n      length = keys.length;\r\n      // Ensure that both objects contain the same number of properties before comparing deep equality.\r\n      if (Object.keys(b).length !== length) return false;\r\n      while (length--) {\r\n        // Deep compare each member\r\n        key = keys[length];\r\n        if (!(b.hasOwnProperty(key) && isEqual(a[key], b[key], aStack, bStack))) return false;\r\n      }\r\n    }\r\n    // Remove the first object from the stack of traversed objects.\r\n    aStack.pop();\r\n    bStack.pop();\r\n    return true;\r\n  };","\"use strict\";\r\n/**\r\n * @module opcua.utils\r\n */\r\n\r\nimport {assert} from '../assert';\r\n\r\n\r\n/**\r\n * set a flag\r\n * @method set_flag\r\n * @param value\r\n * @param mask\r\n * @return {number}\r\n */\r\nexport function set_flag(value : number, mask : number): number {\r\n    assert(mask !== undefined);\r\n    return (value | mask);\r\n}\r\n\r\n/**\r\n * check if a set of bits are set in the values\r\n * @method check_flag\r\n *\r\n * @param value\r\n * @param mask\r\n * @return {boolean}\r\n */\r\nexport function check_flag(value, mask): boolean {\r\n    assert(mask !== undefined);\r\n    return ((value & mask) === mask);\r\n}\r\n\r\nexport {buffer_ellipsis} from './buffer_ellipsis';\r\nexport * from './string_utils';\r\nexport * from './get_clock_tick';\r\n\r\n//exports.compare_buffers = require(\"./src/compare_buffers\").compare_buffers;\r\n\r\nexport function isNullOrUndefined(value)  {\r\n    return ( value === undefined ) || (value === null);\r\n}\r\n\r\nexport * from './get_function_parameters_name';\r\nexport * from './once';\r\nexport * from './isEqual';\r\n\r\n","\"use strict\";\r\n\r\nvar _FIRST_INTERNAL_ID : number = 0xFFFE0000;\r\n\r\nvar _next_available_id = _FIRST_INTERNAL_ID;\r\nexport function generate_new_id () {\r\n    _next_available_id += 1;\r\n    return _next_available_id;\r\n};\r\n\r\nexport function next_available_id () {\r\n    return -1;\r\n};\r\nexport function is_internal_id (value : number) {\r\n    return value >= _FIRST_INTERNAL_ID;\r\n};\r\n\r\n\r\n","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ILocalizedText {\n\t\tlocale? : string;\n\t\ttext? : string;\n}\n\n/**\nA string qualified with a namespace index.\n*/\n\nexport class LocalizedText {\n \t\tlocale : string;\n\t\ttext : string;\n\n\tconstructor(\toptions? : ILocalizedText) { \n\t\toptions = options || {};\n\t\tthis.locale= (options.locale) ? options.locale:null;\n\t\tthis.text= (options.text) ? options.text:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tlet encodingByte = 0;\n\t\tif (this.locale != null) { encodingByte |= 1 << 0;}\n\t\tif (this.text != null) { encodingByte |= 1 << 1;}\n\t\tout.setUint8(encodingByte);\n\t\tif(this.locale != null) { ec.encodeString(this.locale,out); }\n\t\tif(this.text != null) { ec.encodeString(this.text,out); }\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tlet encodingByte = inp.getUint8();\n\t\tlet localeSpecified = (encodingByte & 1) != 0;\n\t\tlet textSpecified = (encodingByte & 2) != 0;\n\t\tlet reserved1 = (encodingByte & 4) != 0;\n\t\tif(localeSpecified) {\n\t\t\tthis.locale = ec.decodeString(inp);\n\t\t}\n\t\tif(textSpecified) {\n\t\t\tthis.text = ec.decodeString(inp);\n\t\t}\n\n\t}\n\n\n\tclone(\ttarget? : LocalizedText) : LocalizedText { \n\t\tif(!target) {\n\t\t\ttarget = new LocalizedText();\n\t\t}\n\t\ttarget.locale = this.locale;\n\t\ttarget.text = this.text;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeLocalizedText(\tinp : DataStream) : LocalizedText { \n\t\tlet obj = new LocalizedText();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"LocalizedText\",LocalizedText, makeExpandedNodeId(21,0));","\n\nimport {DataStream} from '../basic-types/DataStream';\n\nexport enum TimestampsToReturn {\n \t\tSource = 0,\n\t\tServer = 1,\n\t\tBoth = 2,\n\t\tNeither = 3,\n\t\tInvalid = 4,\n\n}\n\nexport function encodeTimestampsToReturn(\tdata : TimestampsToReturn, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeTimestampsToReturn(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"TimestampsToReturn\",TimestampsToReturn,encodeTimestampsToReturn ,decodeTimestampsToReturn ,null);","'use strict';\n\nvar has = Object.prototype.hasOwnProperty\n  , prefix = '~';\n\n/**\n * Constructor to create a storage for our `EE` objects.\n * An `Events` instance is a plain object whose properties are event names.\n *\n * @constructor\n * @private\n */\nfunction Events() {}\n\n//\n// We try to not inherit from `Object.prototype`. In some engines creating an\n// instance in this way is faster than calling `Object.create(null)` directly.\n// If `Object.create(null)` is not supported we prefix the event names with a\n// character to make sure that the built-in object properties are not\n// overridden or used as an attack vector.\n//\nif (Object.create) {\n  Events.prototype = Object.create(null);\n\n  //\n  // This hack is needed because the `__proto__` property is still inherited in\n  // some old browsers like Android 4, iPhone 5.1, Opera 11 and Safari 5.\n  //\n  if (!new Events().__proto__) prefix = false;\n}\n\n/**\n * Representation of a single event listener.\n *\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} [once=false] Specify if the listener is a one-time listener.\n * @constructor\n * @private\n */\nfunction EE(fn, context, once) {\n  this.fn = fn;\n  this.context = context;\n  this.once = once || false;\n}\n\n/**\n * Add a listener for a given event.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} context The context to invoke the listener with.\n * @param {Boolean} once Specify if the listener is a one-time listener.\n * @returns {EventEmitter}\n * @private\n */\nfunction addListener(emitter, event, fn, context, once) {\n  if (typeof fn !== 'function') {\n    throw new TypeError('The listener must be a function');\n  }\n\n  var listener = new EE(fn, context || emitter, once)\n    , evt = prefix ? prefix + event : event;\n\n  if (!emitter._events[evt]) emitter._events[evt] = listener, emitter._eventsCount++;\n  else if (!emitter._events[evt].fn) emitter._events[evt].push(listener);\n  else emitter._events[evt] = [emitter._events[evt], listener];\n\n  return emitter;\n}\n\n/**\n * Clear event by name.\n *\n * @param {EventEmitter} emitter Reference to the `EventEmitter` instance.\n * @param {(String|Symbol)} evt The Event name.\n * @private\n */\nfunction clearEvent(emitter, evt) {\n  if (--emitter._eventsCount === 0) emitter._events = new Events();\n  else delete emitter._events[evt];\n}\n\n/**\n * Minimal `EventEmitter` interface that is molded against the Node.js\n * `EventEmitter` interface.\n *\n * @constructor\n * @public\n */\nfunction EventEmitter() {\n  this._events = new Events();\n  this._eventsCount = 0;\n}\n\n/**\n * Return an array listing the events for which the emitter has registered\n * listeners.\n *\n * @returns {Array}\n * @public\n */\nEventEmitter.prototype.eventNames = function eventNames() {\n  var names = []\n    , events\n    , name;\n\n  if (this._eventsCount === 0) return names;\n\n  for (name in (events = this._events)) {\n    if (has.call(events, name)) names.push(prefix ? name.slice(1) : name);\n  }\n\n  if (Object.getOwnPropertySymbols) {\n    return names.concat(Object.getOwnPropertySymbols(events));\n  }\n\n  return names;\n};\n\n/**\n * Return the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Array} The registered listeners.\n * @public\n */\nEventEmitter.prototype.listeners = function listeners(event) {\n  var evt = prefix ? prefix + event : event\n    , handlers = this._events[evt];\n\n  if (!handlers) return [];\n  if (handlers.fn) return [handlers.fn];\n\n  for (var i = 0, l = handlers.length, ee = new Array(l); i < l; i++) {\n    ee[i] = handlers[i].fn;\n  }\n\n  return ee;\n};\n\n/**\n * Return the number of listeners listening to a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Number} The number of listeners.\n * @public\n */\nEventEmitter.prototype.listenerCount = function listenerCount(event) {\n  var evt = prefix ? prefix + event : event\n    , listeners = this._events[evt];\n\n  if (!listeners) return 0;\n  if (listeners.fn) return 1;\n  return listeners.length;\n};\n\n/**\n * Calls each of the listeners registered for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @returns {Boolean} `true` if the event had listeners, else `false`.\n * @public\n */\nEventEmitter.prototype.emit = function emit(event, a1, a2, a3, a4, a5) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return false;\n\n  var listeners = this._events[evt]\n    , len = arguments.length\n    , args\n    , i;\n\n  if (listeners.fn) {\n    if (listeners.once) this.removeListener(event, listeners.fn, undefined, true);\n\n    switch (len) {\n      case 1: return listeners.fn.call(listeners.context), true;\n      case 2: return listeners.fn.call(listeners.context, a1), true;\n      case 3: return listeners.fn.call(listeners.context, a1, a2), true;\n      case 4: return listeners.fn.call(listeners.context, a1, a2, a3), true;\n      case 5: return listeners.fn.call(listeners.context, a1, a2, a3, a4), true;\n      case 6: return listeners.fn.call(listeners.context, a1, a2, a3, a4, a5), true;\n    }\n\n    for (i = 1, args = new Array(len -1); i < len; i++) {\n      args[i - 1] = arguments[i];\n    }\n\n    listeners.fn.apply(listeners.context, args);\n  } else {\n    var length = listeners.length\n      , j;\n\n    for (i = 0; i < length; i++) {\n      if (listeners[i].once) this.removeListener(event, listeners[i].fn, undefined, true);\n\n      switch (len) {\n        case 1: listeners[i].fn.call(listeners[i].context); break;\n        case 2: listeners[i].fn.call(listeners[i].context, a1); break;\n        case 3: listeners[i].fn.call(listeners[i].context, a1, a2); break;\n        case 4: listeners[i].fn.call(listeners[i].context, a1, a2, a3); break;\n        default:\n          if (!args) for (j = 1, args = new Array(len -1); j < len; j++) {\n            args[j - 1] = arguments[j];\n          }\n\n          listeners[i].fn.apply(listeners[i].context, args);\n      }\n    }\n  }\n\n  return true;\n};\n\n/**\n * Add a listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.on = function on(event, fn, context) {\n  return addListener(this, event, fn, context, false);\n};\n\n/**\n * Add a one-time listener for a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn The listener function.\n * @param {*} [context=this] The context to invoke the listener with.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.once = function once(event, fn, context) {\n  return addListener(this, event, fn, context, true);\n};\n\n/**\n * Remove the listeners of a given event.\n *\n * @param {(String|Symbol)} event The event name.\n * @param {Function} fn Only remove the listeners that match this function.\n * @param {*} context Only remove the listeners that have this context.\n * @param {Boolean} once Only remove one-time listeners.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeListener = function removeListener(event, fn, context, once) {\n  var evt = prefix ? prefix + event : event;\n\n  if (!this._events[evt]) return this;\n  if (!fn) {\n    clearEvent(this, evt);\n    return this;\n  }\n\n  var listeners = this._events[evt];\n\n  if (listeners.fn) {\n    if (\n      listeners.fn === fn &&\n      (!once || listeners.once) &&\n      (!context || listeners.context === context)\n    ) {\n      clearEvent(this, evt);\n    }\n  } else {\n    for (var i = 0, events = [], length = listeners.length; i < length; i++) {\n      if (\n        listeners[i].fn !== fn ||\n        (once && !listeners[i].once) ||\n        (context && listeners[i].context !== context)\n      ) {\n        events.push(listeners[i]);\n      }\n    }\n\n    //\n    // Reset the array, or remove it completely if we have no more listeners.\n    //\n    if (events.length) this._events[evt] = events.length === 1 ? events[0] : events;\n    else clearEvent(this, evt);\n  }\n\n  return this;\n};\n\n/**\n * Remove all listeners, or those of the specified event.\n *\n * @param {(String|Symbol)} [event] The event name.\n * @returns {EventEmitter} `this`.\n * @public\n */\nEventEmitter.prototype.removeAllListeners = function removeAllListeners(event) {\n  var evt;\n\n  if (event) {\n    evt = prefix ? prefix + event : event;\n    if (this._events[evt]) clearEvent(this, evt);\n  } else {\n    this._events = new Events();\n    this._eventsCount = 0;\n  }\n\n  return this;\n};\n\n//\n// Alias methods names because people roll like that.\n//\nEventEmitter.prototype.off = EventEmitter.prototype.removeListener;\nEventEmitter.prototype.addListener = EventEmitter.prototype.on;\n\n//\n// Expose the prefix.\n//\nEventEmitter.prefixed = prefix;\n\n//\n// Allow `EventEmitter` to be imported as module namespace.\n//\nEventEmitter.EventEmitter = EventEmitter;\n\n//\n// Expose the module.\n//\nif ('undefined' !== typeof module) {\n  module.exports = EventEmitter;\n}\n","//just a dummy\r\n\r\nexport const RSA_PKCS1_PADDING =  1;\r\nexport const RSA_PKCS1_OAEP_PADDING = 4;\r\n\r\nexport function privateDecrypt_long(buffer, key, block_size, algorithm) : any {\r\n    throw new Error(\"not implemented\");\r\n}\r\n\r\nexport function rsa_length(key : string) : number {\r\n    throw new Error(\"not implemented\");\r\n}\r\n\r\nexport function exploreCertificate(certificate) : any {\r\n    throw new Error(\"not implemented\");\r\n}\r\n\r\n/**\r\n * @method toPem\r\n * @param raw_key {string}\r\n * @param pem {String}\r\n * @return {String}\r\n */\r\nexport function toPem(raw_key, pem: string): string {\r\n    throw new Error(\"not implemented\");\r\n}\r\n\r\n/**\r\n * @method verifyMessageChunkSignature\r\n *\r\n *     var signer = {\r\n *           signatureLength : 128,\r\n *           algorithm : \"RSA-SHA256\",\r\n *           public_key: \"qsdqsdqsd\"\r\n *     };\r\n * @param block_to_verify {Buffer}\r\n * @param signature {Buffer}\r\n * @param options {Object}\r\n * @param options.signatureLength {Number}\r\n * @param options.algorithm {String}   for example \"RSA-SHA256\"\r\n * @param options.publicKey {Buffer}*\r\n * @return {Boolean} - true if the signature is valid\r\n */\r\nexport function verifyMessageChunkSignature(block_to_verify, signature, options ): boolean {\r\n    throw new Error(\"not implemented\");\r\n}\r\n\r\nexport function publicEncrypt_long(buffer, key, block_size, padding, algorithm) {\r\n    throw new Error(\"not implemented\");\r\n}\r\n\r\n/**\r\n * @method makeMessageChunkSignature\r\n * @param chunk\r\n * @param options {Object}\r\n * @param options.signatureLength {Number}\r\n * @param options.algorithm {String}   for example \"RSA-SHA256\"\r\n * @param options.privateKey {Buffer}\r\n * @return {Buffer} - the signature\r\n */\r\nexport function makeMessageChunkSignature(chunk, options) : any {\r\n    throw new Error(\"not implemented\");\r\n}\r\n\r\nexport function computeDerivedKeys(secret, seed, options) {\r\n    throw new Error(\"not implemented\");\r\n}\r\n\r\n/**\r\n * @method makeMessageChunkSignatureWithDerivedKeys\r\n * @param message {Buffer}\r\n * @param derivedKeys\r\n * @return {Buffer}\r\n */\r\nexport function makeMessageChunkSignatureWithDerivedKeys(message, derivedKeys) {\r\n    throw new Error(\"not implemented\");\r\n}\r\n\r\nexport function encryptBufferWithDerivedKeys(buffer, derivedKeys) {\r\n    throw new Error(\"not implemented\");\r\n}","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\n\r\nimport {assert} from '../assert';\r\nimport {MessageSecurityMode} from '../generated/MessageSecurityMode';\r\nimport {SignatureData} from '../generated/SignatureData';\r\n\r\nimport * as crypto_utils from \"../crypto/crypto_utils\";\r\n/**\r\n * @class SecurityPolicy\r\n * @static\r\n *\r\n * OPCUA Spec Release 1.02  page 15    OPC Unified Architecture, Part 7\r\n *\r\n * @property Basic128Rsa15    Security Basic 128Rsa15\r\n * -----------------------\r\n *  A suite of algorithms that uses RSA15 as\r\n *  Key-Wrap-algorithm and 128-Bit for  encryption algorithms.\r\n *    -> SymmetricSignatureAlgorithm   -   HmacSha1 -(http://www.w3.org/2000/09/xmldsig#hmac-sha1).\r\n *    -> SymmetricEncryptionAlgorithm  -     Aes128 -(http://www.w3.org/2001/04/xmlenc#aes128-cbc).\r\n *    -> AsymmetricSignatureAlgorithm  -    RsaSha1 -(http://www.w3.org/2000/09/xmldsig#rsa-sha1).\r\n *    -> AsymmetricKeyWrapAlgorithm    -    KwRsa15 -(http://www.w3.org/2001/04/xmlenc#rsa-1_5).\r\n *    -> AsymmetricEncryptionAlgorithm -      Rsa15 -(http://www.w3.org/2001/04/xmlenc#rsa-1_5).\r\n *    -> KeyDerivationAlgorithm        -      PSha1 -(http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/dk/p_sha1).\r\n *    -> DerivedSignatureKeyLength     -  128\r\n *    -> MinAsymmetricKeyLength        - 1024\r\n *    -> MaxAsymmetricKeyLength        - 2048\r\n *    -> CertificateSignatureAlgorithm - Sha1\r\n *\r\n * @property Basic256 Security Basic 256:\r\n * -------------------\r\n * A suite of algorithms that are for 256-Bit encryption, algorithms include:\r\n *    -> SymmetricSignatureAlgorithm   - HmacSha1 -(http://www.w3.org/2000/09/xmldsig#hmac-sha1).\r\n *    -> SymmetricEncryptionAlgorithm  -   Aes256 -(http://www.w3.org/2001/04/xmlenc#aes256-cbc).\r\n *    -> AsymmetricSignatureAlgorithm  -  RsaSha1 -(http://www.w3.org/2000/09/xmldsig#rsa-sha1).\r\n *    -> AsymmetricKeyWrapAlgorithm    - KwRsaOaep-(http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p).\r\n *    -> AsymmetricEncryptionAlgorithm -  RsaOaep -(http://www.w3.org/2001/04/xmlenc#rsa-oaep).\r\n *    -> KeyDerivationAlgorithm        -    PSha1 -(http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/dk/p_sha1).\r\n *    -> DerivedSignatureKeyLength     -  192.\r\n *    -> MinAsymmetricKeyLength        - 1024\r\n *    -> MaxAsymmetricKeyLength        - 2048\r\n *    -> CertificateSignatureAlgorithm - Sha1\r\n *\r\n * @property Basic256 Security Basic 256 Sha256\r\n * --------------------------------------------\r\n * A suite of algorithms that are for 256-Bit encryption, algorithms include.\r\n *   -> SymmetricSignatureAlgorithm   - Hmac_Sha256 -(http://www.w3.org/2000/09/xmldsig#hmac-sha256).\r\n *   -> SymmetricEncryptionAlgorithm  -  Aes256_CBC -(http://www.w3.org/2001/04/xmlenc#aes256-cbc).\r\n *   -> AsymmetricSignatureAlgorithm  -  Rsa_Sha256 -(http://www.w3.org/2000/09/xmldsig#rsa-sha256).\r\n *   -> AsymmetricKeyWrapAlgorithm    -   KwRsaOaep -(http://www.w3.org/2001/04/xmlenc#rsa-oaep-mgf1p).\r\n *   -> AsymmetricEncryptionAlgorithm -    Rsa_Oaep -(http://www.w3.org/2001/04/xmlenc#rsa-oaep).\r\n *   -> KeyDerivationAlgorithm        -     PSHA256 -(http://docs.oasis-open.org/ws-sx/ws-secureconversation/200512/dk/p_sha256).\r\n *   -> DerivedSignatureKeyLength     - 256\r\n *   -> MinAsymmetricKeyLength        - 2048\r\n *   -> MaxAsymmetricKeyLength        - 4096\r\n *   -> CertificateSignatureAlgorithm - Sha256\r\n *\r\n *  Support for this security profile may require support for a second application instance certificate, with a larger\r\n *  keysize. Applications shall support multiple Application Instance Certificates if required by supported Security\r\n *  Polices and use the certificate that is required for a given security endpoint.\r\n *\r\n *\r\n */\r\nexport enum SecurityPolicy {\r\n    Invalid = \"invalid\",\r\n    None = \"http://opcfoundation.org/UA/SecurityPolicy#None\",\r\n    Basic128 = \"http://opcfoundation.org/UA/SecurityPolicy#Basic128\",\r\n    Basic128Rsa15 = \"http://opcfoundation.org/UA/SecurityPolicy#Basic128Rsa15\",\r\n    Basic192 = \"http://opcfoundation.org/UA/SecurityPolicy#Basic192\",\r\n    Basic192Rsa15 = \"http://opcfoundation.org/UA/SecurityPolicy#Basic192Rsa15\",\r\n    Basic256 = \"http://opcfoundation.org/UA/SecurityPolicy#Basic256\",\r\n    Basic256Rsa15 = \"http://opcfoundation.org/UA/SecurityPolicy#Basic256Rsa15\",\r\n    Basic256Sha256 = \"http://opcfoundation.org/UA/SecurityPolicy#Basic256Sha256\"\r\n};\r\n\r\nexport function fromURI(uri : String) : SecurityPolicy {\r\n    // istanbul ignore next\r\n    if (typeof uri !== \"string\") {\r\n        return SecurityPolicy.Invalid;\r\n    }\r\n    var a = uri.split(\"#\");\r\n    // istanbul ignore next\r\n    if (a.length < 2) {\r\n        return SecurityPolicy.Invalid;\r\n    }\r\n    var v = SecurityPolicy[a[1]];\r\n    return v || SecurityPolicy.Invalid;\r\n};\r\n\r\nexport  function toUri(value : any) : SecurityPolicy {\r\n    var securityPolicy : SecurityPolicy = <SecurityPolicy>SecurityPolicy[value] || SecurityPolicy.Invalid;\r\n    if (securityPolicy === SecurityPolicy.Invalid) {\r\n        throw new Error(\"trying to convert an invalid Security Policy into a URI: \" + value);\r\n    }\r\n    return securityPolicy;\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n// --------------------\r\nfunction RSAPKCS1V15_Decrypt(buffer, privateKey) {\r\n    var block_size = crypto_utils.rsa_length(privateKey);\r\n    return crypto_utils.privateDecrypt_long(buffer, privateKey, block_size, crypto_utils.RSA_PKCS1_PADDING);\r\n}\r\nfunction RSAOAEP_Decrypt(buffer, privateKey) {\r\n    var block_size = crypto_utils.rsa_length(privateKey);\r\n    return crypto_utils.privateDecrypt_long(buffer, privateKey, block_size, crypto_utils.RSA_PKCS1_OAEP_PADDING);\r\n}\r\n// --------------------\r\n\r\nfunction asymmetricVerifyChunk(chunk : Uint8Array, certificate : Uint8Array) {\r\n\r\n    var crypto_factory = this;\r\n    assert(chunk instanceof Uint8Array);\r\n    assert(certificate instanceof Uint8Array);\r\n    // let's get the signatureLength by checking the size\r\n    // of the certificate's public key\r\n    var cert = crypto_utils.exploreCertificate(certificate);\r\n\r\n    var signatureLength = cert.publicKeyLength; // 1024 bits = 128Bytes or 2048=256Bytes\r\n    var block_to_verify = chunk.slice(0, chunk.length - signatureLength);\r\n    var signature = chunk.slice(chunk.length - signatureLength);\r\n    return crypto_factory.asymmetricVerify(block_to_verify, signature, certificate);\r\n\r\n}\r\n\r\nfunction RSAPKCS1V15SHA1_Verify(buffer : Uint8Array, signature, certificate : Uint8Array) {\r\n    var options = {\r\n        algorithm: \"RSA-SHA1\",\r\n        publicKey: crypto_utils.toPem(certificate, \"CERTIFICATE\")\r\n    };\r\n    return crypto_utils.verifyMessageChunkSignature(buffer, signature, options);\r\n}\r\nvar RSAPKCS1OAEPSHA1_Verify = RSAPKCS1V15SHA1_Verify;\r\n\r\nfunction RSAPKCS1OAEPSHA256_Verify(buffer, signature, certificate : Uint8Array) {\r\n    var options = {\r\n        algorithm: \"RSA-SHA256\",\r\n        publicKey: crypto_utils.toPem(certificate, \"CERTIFICATE\")\r\n    };\r\n    return crypto_utils.verifyMessageChunkSignature(buffer, signature, options);\r\n}\r\n\r\n\r\nfunction RSAPKCS1V15SHA1_Sign(buffer, privateKey : Uint8Array | string) {\r\n\r\n    if (privateKey instanceof Uint8Array) {\r\n        privateKey = crypto_utils.toPem(privateKey, \"RSA PRIVATE KEY\");\r\n    }\r\n    var params = {\r\n        signatureLength: crypto_utils.rsa_length(privateKey),\r\n        algorithm: \"RSA-SHA1\",\r\n        privateKey: privateKey\r\n    };\r\n    return crypto_utils.makeMessageChunkSignature(buffer, params);\r\n}\r\n\r\nfunction RSAPKCS1V15SHA256_Sign(buffer, privateKey : Uint8Array | string) {\r\n\r\n    if (privateKey instanceof Uint8Array) {\r\n        privateKey = crypto_utils.toPem(privateKey, \"RSA PRIVATE KEY\");\r\n    }\r\n    var params = {\r\n        signatureLength: crypto_utils.rsa_length(privateKey),\r\n        algorithm: \"RSA-SHA256\",\r\n        privateKey: privateKey\r\n    };\r\n    return crypto_utils.makeMessageChunkSignature(buffer, params);\r\n}\r\n\r\nvar RSAPKCS1OAEPSHA1_Sign = RSAPKCS1V15SHA1_Sign;\r\n\r\nfunction RSAPKCS1V15_Encrypt(buffer, publicKey) {\r\n\r\n    var key_length = crypto_utils.rsa_length(publicKey);\r\n    return crypto_utils.publicEncrypt_long(buffer, publicKey, key_length, 11, crypto_utils.RSA_PKCS1_PADDING);\r\n}\r\n\r\nfunction RSAOAEP_Encrypt(buffer, publicKey) {\r\n    var key_length = crypto_utils.rsa_length(publicKey);\r\n    return crypto_utils.publicEncrypt_long(buffer, publicKey, key_length, 42, crypto_utils.RSA_PKCS1_OAEP_PADDING);\r\n}\r\n\r\n\r\n\r\nexport function compute_derived_keys(serverNonce, clientNonce) {\r\n\r\n    var self = this;\r\n\r\n    // calculate derived keys\r\n    var derivedKeys = {\r\n        derivedClientKeys: null,\r\n        derivedServerKeys: null,\r\n        algorithm: null\r\n    };\r\n\r\n    if (clientNonce && serverNonce) {\r\n        var options = {\r\n            signingKeyLength: self.derivedSignatureKeyLength,\r\n            encryptingKeyLength: self.derivedEncryptionKeyLength,\r\n            encryptingBlockSize: self.encryptingBlockSize,\r\n            signatureLength: self.signatureLength,\r\n            algorithm: self.symmetricEncryptionAlgorithm,\r\n            sha1or256: self.sha1or256\r\n        };\r\n        derivedKeys.derivedClientKeys = crypto_utils.computeDerivedKeys(serverNonce, clientNonce, options);\r\n        derivedKeys.derivedServerKeys = crypto_utils.computeDerivedKeys(clientNonce, serverNonce, options);\r\n    }\r\n    return derivedKeys;\r\n}\r\n\r\nexport interface ICryptoFactory {\r\n    securityPolicy : SecurityPolicy;\r\n\r\n    symmetricKeyLength : number;\r\n    derivedEncryptionKeyLength : number;\r\n    derivedSignatureKeyLength : number;\r\n    encryptingBlockSize: number;\r\n    signatureLength: number;\r\n\r\n    minimumAsymmetricKeyLength: number,\r\n    maximumAsymmetricKeyLength: number,\r\n\r\n    /* asymmetric signature algorithm */\r\n    asymmetricVerifyChunk: Function;\r\n    asymmetricSign: Function;\r\n    asymmetricVerify: Function;\r\n    asymmetricSignatureAlgorithm: string;\r\n\r\n    /* asymmetric encryption algorithm */\r\n    asymmetricEncrypt: Function,\r\n    asymmetricDecrypt: Function,\r\n    asymmetricEncryptionAlgorithm: string;\r\n    blockPaddingSize: number;\r\n    symmetricEncryptionAlgorithm: string;\r\n    sha1or256: string;\r\n    compute_derived_keys: Function;\r\n\r\n\r\n} \r\n\r\n\r\nvar _Basic128Rsa15 = {\r\n    securityPolicy: SecurityPolicy.Basic128Rsa15,\r\n\r\n    symmetricKeyLength: 16,\r\n    derivedEncryptionKeyLength: 16,\r\n    derivedSignatureKeyLength: 16,\r\n    encryptingBlockSize: 16,\r\n    signatureLength: 20,\r\n\r\n    minimumAsymmetricKeyLength: 128,\r\n    maximumAsymmetricKeyLength: 512,\r\n\r\n    /* asymmetric signature algorithm */\r\n    asymmetricVerifyChunk: asymmetricVerifyChunk,\r\n    asymmetricSign: RSAPKCS1V15SHA1_Sign,\r\n    asymmetricVerify: RSAPKCS1V15SHA1_Verify,\r\n    asymmetricSignatureAlgorithm: \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\r\n\r\n    /* asymmetric encryption algorithm */\r\n    asymmetricEncrypt: RSAPKCS1V15_Encrypt,\r\n    asymmetricDecrypt: RSAPKCS1V15_Decrypt,\r\n    asymmetricEncryptionAlgorithm: \"http://www.w3.org/2001/04/xmlenc#rsa-1_5\",\r\n\r\n    blockPaddingSize: 11,\r\n\r\n    symmetricEncryptionAlgorithm: \"aes-128-cbc\",\r\n\r\n    sha1or256: \"SHA1\",\r\n    compute_derived_keys: compute_derived_keys\r\n\r\n};\r\n\r\nvar _Basic256 = {\r\n    securityPolicy: SecurityPolicy.Basic256,\r\n    symmetricKeyLength: 32,\r\n    derivedEncryptionKeyLength: 32,\r\n    derivedSignatureKeyLength: 24,\r\n    encryptingBlockSize: 16,\r\n    signatureLength: 20,\r\n\r\n    minimumAsymmetricKeyLength: 128,\r\n    maximumAsymmetricKeyLength: 512,\r\n\r\n    asymmetricVerifyChunk: asymmetricVerifyChunk,\r\n    asymmetricSign: RSAPKCS1OAEPSHA1_Sign,\r\n    asymmetricVerify: RSAPKCS1OAEPSHA1_Verify,\r\n    asymmetricSignatureAlgorithm: \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\",\r\n\r\n    /* asymmetric encryption algorithm */\r\n    asymmetricEncrypt: RSAOAEP_Encrypt,\r\n    asymmetricDecrypt: RSAOAEP_Decrypt,\r\n    asymmetricEncryptionAlgorithm: \"http://www.w3.org/2001/04/xmlenc#rsa-oaep\",\r\n\r\n    blockPaddingSize: 42,\r\n\r\n    // \"aes-256-cbc\"\r\n    symmetricEncryptionAlgorithm: \"aes-256-cbc\",\r\n    sha1or256: \"SHA1\",\r\n    compute_derived_keys: compute_derived_keys\r\n};\r\n\r\n\r\nvar _Basic256Sha256 = {\r\n    securityPolicy: SecurityPolicy.Basic256Sha256,\r\n\r\n    symmetricKeyLength: 32,\r\n    derivedEncryptionKeyLength: 32,\r\n    derivedSignatureKeyLength: 32,\r\n    encryptingBlockSize: 16,\r\n    signatureLength: 32,\r\n\r\n    minimumAsymmetricKeyLength: 2048,\r\n    maximumAsymmetricKeyLength: 4096,\r\n\r\n    asymmetricVerifyChunk: asymmetricVerifyChunk,\r\n    asymmetricSign: RSAPKCS1V15SHA256_Sign,\r\n    asymmetricVerify: RSAPKCS1OAEPSHA256_Verify,\r\n    asymmetricSignatureAlgorithm: \"http://www.w3.org/2000/09/xmldsig#rsa-sha256\",\r\n\r\n    /* asymmetric encryption algorithm */\r\n    asymmetricEncrypt: RSAOAEP_Encrypt,\r\n    asymmetricDecrypt: RSAOAEP_Decrypt,\r\n    asymmetricEncryptionAlgorithm: \"http://www.w3.org/2001/04/xmlenc#rsa-oaep\",\r\n\r\n    blockPaddingSize: 42,\r\n\r\n    // \"aes-256-cbc\"\r\n    symmetricEncryptionAlgorithm: \"aes-256-cbc\",\r\n    sha1or256: \"SHA256\",\r\n    compute_derived_keys: compute_derived_keys\r\n};\r\n\r\nexport function getCryptoFactory(securityPolicy : SecurityPolicy) : ICryptoFactory {\r\n\r\n    switch (securityPolicy) {\r\n        case SecurityPolicy.None:\r\n            return null;\r\n        case SecurityPolicy.Basic128Rsa15:\r\n            return _Basic128Rsa15;\r\n        case SecurityPolicy.Basic256:\r\n            return _Basic256;\r\n        case SecurityPolicy.Basic256Sha256:\r\n            return _Basic256Sha256;\r\n        default:\r\n            return null;\r\n    }\r\n}\r\n\r\nexport function computeSignature(senderCertificate : Uint8Array, senderNonce : Uint8Array, receiverPrivatekey, securityPolicy) {\r\n\r\n    if (!senderNonce || !senderCertificate) {\r\n        return null;\r\n    }\r\n\r\n    var crypto_factory = getCryptoFactory(securityPolicy);\r\n    if (!crypto_factory) {\r\n        return null;\r\n    }\r\n    // This parameter is calculated by appending the clientNonce to the clientCertificate\r\n    var buffer = new Uint8Array(senderCertificate.byteLength + senderNonce.byteLength);  //Buffer.concat([senderCertificate, senderNonce]);\r\n    buffer.set(senderCertificate);\r\n    buffer.set(senderNonce,senderCertificate.byteLength);\r\n\r\n    // ... and signing the resulting sequence of bytes.\r\n    var signature = crypto_factory.asymmetricSign(buffer, receiverPrivatekey);\r\n\r\n    return new SignatureData({\r\n        // This is a signature generated with the private key associated with a Certificate\r\n        signature: signature,\r\n        // A string containing the URI of the algorithm.\r\n        // The URI string values are defined as part of the security profiles specified in Part 7.\r\n        // (The SignatureAlgorithm shall be the AsymmetricSignatureAlgorithm specified in the\r\n        // SecurityPolicy for the Endpoint)\r\n        algorithm: crypto_factory.asymmetricSignatureAlgorithm // \"http://www.w3.org/2000/09/xmldsig#rsa-sha1\"\r\n    });\r\n}\r\n\r\nexport function verifySignature(receiverCertificate : Uint8Array, receiverNonce : Uint8Array, signature : SignatureData, senderCertificate : Uint8Array, securityPolicy) {\r\n\r\n    if (securityPolicy === SecurityPolicy.None) {\r\n        return true;\r\n    }\r\n    var crypto_factory = getCryptoFactory(securityPolicy);\r\n    if (!crypto_factory) {\r\n        return false;\r\n    }\r\n    assert(receiverNonce instanceof  Uint8Array);\r\n    assert(receiverCertificate instanceof Uint8Array);\r\n    assert(signature instanceof SignatureData);\r\n\r\n    assert(senderCertificate instanceof Uint8Array);\r\n\r\n    if (!(signature.signature instanceof Uint8Array)) {\r\n        // no signature provided\r\n        return false;\r\n    }\r\n\r\n    // This parameter is calculated by appending the clientNonce to the clientCertificate\r\n    var buffer = new Uint8Array(receiverCertificate.byteLength + receiverNonce.byteLength);  //Buffer.concat([senderCertificate, senderNonce]);\r\n    buffer.set(receiverCertificate);\r\n    buffer.set(receiverNonce,receiverCertificate.byteLength);\r\n\r\n    return crypto_factory.asymmetricVerify(buffer, signature.signature, senderCertificate);\r\n}\r\n\r\nexport function getOptionsForSymmetricSignAndEncrypt(securityMode, derivedKeys) {\r\n    assert(derivedKeys.hasOwnProperty(\"signatureLength\"));\r\n    assert(securityMode !== MessageSecurityMode.None && securityMode !== MessageSecurityMode.Invalid);\r\n\r\n    var options = {\r\n        signatureLength: derivedKeys.signatureLength,\r\n        signingFunc: function (chunk) {\r\n            return crypto_utils.makeMessageChunkSignatureWithDerivedKeys(chunk, derivedKeys);\r\n        }\r\n    };\r\n    if (securityMode === MessageSecurityMode.SignAndEncrypt) {\r\n\r\n        let ext = {\r\n            plainBlockSize: derivedKeys.encryptingBlockSize,\r\n            cipherBlockSize: derivedKeys.encryptingBlockSize,\r\n            encrypt_buffer: function (chunk) {\r\n                return crypto_utils.encryptBufferWithDerivedKeys(chunk, derivedKeys);\r\n            }\r\n        };\r\n        for(let k in ext) {\r\n            options[k] = ext[k];\r\n        }\r\n    }\r\n    return options;\r\n}\r\n","\"use strict\";\r\n\r\nimport {assert} from '../assert';\r\nimport {QualifiedName} from '../generated/QualifiedName';\r\nimport {LocalizedText} from '../generated/LocalizedText';\r\nimport * as ec from '../basic-types';\r\n\r\nimport {DataType} from './DataTypeEnum';\r\nimport {VariantArrayType} from './VariantArrayTypeEnum';\r\n\r\nimport * as utils from '../utils';\r\nimport { isEqual } from '../utils';\r\n\r\n\r\nvar txtEncoder =  new TextEncoder();\r\n\r\nfunction isEnumerationItem(value) {\r\n    return (value instanceof Object && (value.hasOwnProperty(\"value\")) && value.hasOwnProperty(\"key\"));\r\n}\r\n\r\n\r\nexport function coerceVariantType(dataType : DataType, value) {\r\n    /* eslint max-statements: [\"error\",1000], complexity: [\"error\",1000]*/\r\n    if (value === undefined ) { value = null; }\r\n    if (isEnumerationItem(value)) {\r\n        // OPCUA Specification 1.0.3 5.8.2 encoding rules for various dataType:\r\n        // [...]Enumeration are always encoded as Int32 on the wire [...]\r\n\r\n        // istanbul ignore next\r\n        if (dataType !== DataType.Int32) {\r\n            throw new Error(\"expecting DataType.Int32 for enumeration values ; got DataType.\" + dataType.toString() + \" instead\");\r\n        }\r\n    }\r\n\r\n    switch (dataType) {\r\n        case DataType.Null:\r\n            value = null;\r\n            break;\r\n\r\n        case DataType.LocalizedText:\r\n            if (!value || !(value instanceof LocalizedText)) {\r\n                value = new LocalizedText(value);\r\n            }\r\n            break;\r\n\r\n        case DataType.QualifiedName:\r\n            if (!value || !(value instanceof QualifiedName)) {\r\n                value = new QualifiedName(value);\r\n            }\r\n            break;\r\n        case DataType.Int16:\r\n        case DataType.UInt16:\r\n        case DataType.Int32:\r\n        case DataType.UInt32:\r\n            assert(value !== undefined);\r\n            if (isEnumerationItem(value)) {\r\n                // value is a enumeration of some sort\r\n                value = value.value;\r\n            } else {\r\n                value = parseInt(value, 10);\r\n            }\r\n            assert(Number.isFinite(value), \"expecting a number\");\r\n            break;\r\n        case DataType.UInt64:\r\n            value = ec.coerceUInt64(value);\r\n            break;\r\n        case DataType.Int64:\r\n            value = ec.coerceInt64(value);\r\n            break;\r\n        case DataType.ExtensionObject:\r\n            break;\r\n        case DataType.DateTime:\r\n            assert(value === null || value instanceof Date);\r\n            break;\r\n        case DataType.String:\r\n            assert(typeof value === \"string\" || value === null);\r\n            break;\r\n        case DataType.ByteString:\r\n            value = (typeof value === \"string\") ? txtEncoder.encode(value): value;\r\n            if (!(value === null || value instanceof ArrayBuffer)) {\r\n                throw new Error(\"ByteString should be null or a Buffer\");\r\n            }\r\n            assert(value === null || value instanceof ArrayBuffer);\r\n            break;\r\n        default:\r\n            assert(dataType !== undefined && dataType !== null, \"Invalid DataType\");\r\n            break;\r\n    }\r\n    return value;\r\n}\r\n\r\n\r\n\r\nfunction isValidScalarVariant(dataType : DataType, value) {\r\n\r\n    assert(value === null || DataType.Int64 === dataType || DataType.ByteString === dataType || DataType.UInt64 === dataType || !(value instanceof Array));\r\n    assert(value === null || !(value instanceof Int32Array));\r\n    assert(value === null || !(value instanceof Uint32Array));\r\n    switch (dataType) {\r\n        case DataType.NodeId:\r\n            return ec.isValidNodeId(value);\r\n        case DataType.String:\r\n            return typeof value === \"string\" || utils.isNullOrUndefined(value);\r\n        case DataType.Int64:\r\n            return ec.isValidInt64(value);\r\n        case DataType.UInt64:\r\n            return ec.isValidUInt64(value);\r\n        case DataType.UInt32:\r\n            return ec.isValidUInt32(value);\r\n        case DataType.Int32:\r\n            return ec.isValidInt32(value);\r\n        case DataType.UInt16:\r\n            return ec.isValidUInt16(value);\r\n        case DataType.Int16:\r\n            return ec.isValidInt16(value);\r\n        case DataType.Byte:\r\n            return ec.isValidUInt8(value);\r\n        case DataType.SByte:\r\n            return ec.isValidInt8(value);\r\n        case DataType.Boolean:\r\n            return ec.isValidBoolean(value);\r\n        case DataType.ByteString:\r\n            return ec.isValidByteString(value);\r\n        default:\r\n            return true;\r\n    }\r\n}\r\n\r\nfunction isValidArrayVariant(dataType, value) {\r\n\r\n    if (dataType === DataType.Float && value instanceof Float32Array) {\r\n        return true;\r\n    } else if (dataType === DataType.Double && value instanceof Float64Array) {\r\n        return true;\r\n    } else if (dataType === DataType.SByte && ( value instanceof Int8Array )) {\r\n        return true;\r\n    } else if (dataType === DataType.Byte && ( value instanceof Uint8Array )) {\r\n        return true;\r\n    } else if (dataType === DataType.Int16 && value instanceof Int16Array) {\r\n        return true;\r\n    } else if (dataType === DataType.Int32 && value instanceof Int32Array) {\r\n        return true;\r\n    } else if (dataType === DataType.UInt16 && value instanceof Uint16Array) {\r\n        return true;\r\n    } else if (dataType === DataType.UInt32 && value instanceof Uint32Array) {\r\n        return true;\r\n    }\r\n    // array values can be store in ArrayBuffer, Float32Array\r\n    assert(Array.isArray(value));\r\n    for (var i=0;i<value.length;i++) {\r\n        if (!isValidScalarVariant(dataType, value[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/*istanbul ignore next*/\r\nfunction isValidMatrixVariant(dataType,value,dimensions) {\r\n\r\n    if(!dimensions) {\r\n        return false;\r\n    }\r\n    if (!isValidArrayVariant(dataType,value)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function isValidVariant(arrayType, dataType, value, dimensions) {\r\n\r\n    assert(dataType,\"expecting a variant type\");\r\n\r\n    switch (arrayType) {\r\n        case VariantArrayType.Scalar:\r\n            return isValidScalarVariant(dataType, value);\r\n        case VariantArrayType.Array:\r\n            return isValidArrayVariant(dataType, value);\r\n        default:\r\n            assert(arrayType === VariantArrayType.Matrix);\r\n            return isValidMatrixVariant(dataType, value, dimensions);\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function buildVariantArray(dataType, nbElements, defaultValue) {\r\n\r\n    var value;\r\n    switch (dataType) {\r\n        case DataType.Float:\r\n            value = new Float32Array(nbElements);\r\n            break;\r\n        case DataType.Double:\r\n            value = new Float64Array(nbElements);\r\n            break;\r\n        case DataType.UInt32:\r\n            value = new Uint32Array(nbElements);\r\n            break;\r\n        case DataType.Int32:\r\n            value = new Int32Array(nbElements);\r\n            break;\r\n        case DataType.UInt16:\r\n            value = new Uint16Array(nbElements);\r\n            break;\r\n        case DataType.Int16:\r\n            value = new Int16Array(nbElements);\r\n            break;\r\n        case DataType.Byte:\r\n            value = new Uint8Array(nbElements);\r\n            break;\r\n        case DataType.SByte:\r\n            value = new Int8Array(nbElements);\r\n            break;\r\n        default:\r\n            //xx console.log(\"xxxx DataType = \",dataType ? dataType.toString(): null,\"nb Elements =\",nbElements);\r\n            value = new Array(nbElements);\r\n            for (var i = 0; i < nbElements; i++) {\r\n                value[i] = defaultValue;\r\n            }\r\n        //xx console.log(\"xxx done\");\r\n    }\r\n    return value;\r\n}\r\n\r\nfunction __check_same_array(arr1 : any[],arr2 : any[]) {\r\n\r\n    if (!arr1 || !arr2) {\r\n        return !arr1 && !arr2;\r\n    }\r\n    if (arr1.length !== arr2.length) {\r\n        return false;\r\n    }\r\n    if (arr1.length === 0 && 0 === arr2.length) {\r\n        return true;\r\n    }\r\n \r\n    var n = arr1.length;\r\n    for (var i = 0; i < n; i++) {\r\n        if (!isEqual(arr1[i], arr2[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n\r\n}\r\nexport function sameVariant(v1, v2) {\r\n\r\n    //xx assert(v1 && v1.constructor.name === \"Variant\");\r\n    if (v1 === v2) {\r\n        return true;\r\n    }\r\n    if  ( (!v1 && v2 ) || (v1 && !v2 )) {\r\n        return false;\r\n    }\r\n    if (v1.arrayType !== v2.arrayType) {\r\n        return false;\r\n    }\r\n    if (v1.dataType !== v2.dataType) {\r\n        return false;\r\n    }\r\n    if (v1.value === v2.value) {\r\n        return true;\r\n    }\r\n    if (v1.arrayType === VariantArrayType.Array) {\r\n        return __check_same_array(v1.value,v2.value);\r\n\r\n    } else if (v1.arrayType === VariantArrayType.Matrix) {\r\n        if (!__check_same_array(v1.dimensions,v2.dimensions)) {\r\n            return false;\r\n        }\r\n        return __check_same_array(v1.value,v2.value);\r\n    }\r\n    return false;\r\n};\r\n","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IQualifiedName {\n\t\tnamespaceIndex? : ec.UInt16;\n\t\tname? : string;\n}\n\n/**\nA string qualified with a namespace index.\n*/\n\nexport class QualifiedName {\n \t\tnamespaceIndex : ec.UInt16;\n\t\tname : string;\n\n\tconstructor(\toptions? : IQualifiedName) { \n\t\toptions = options || {};\n\t\tthis.namespaceIndex= (options.namespaceIndex) ? options.namespaceIndex:null;\n\t\tthis.name= (options.name) ? options.name:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt16(this.namespaceIndex,out);\n\t\tec.encodeString(this.name,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.namespaceIndex = ec.decodeUInt16(inp);\n\t\tthis.name = ec.decodeString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : QualifiedName) : QualifiedName { \n\t\tif(!target) {\n\t\t\ttarget = new QualifiedName();\n\t\t}\n\t\ttarget.namespaceIndex = this.namespaceIndex;\n\t\ttarget.name = this.name;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeQualifiedName(\tinp : DataStream) : QualifiedName { \n\t\tlet obj = new QualifiedName();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"QualifiedName\",QualifiedName, makeExpandedNodeId(20,0));","\"use strict\";\r\n\r\nimport * as factories from '../factory';\r\nimport {encodeInt32,decodeInt32} from '../basic-types'\r\nexport enum VariantArrayType {\r\n    Scalar = 0x00,\r\n    Array = 0x01,\r\n    Matrix = 0x02\r\n}\r\n\r\nfactories.registerEnumeration(\"VariantArrayType\",VariantArrayType,encodeInt32,decodeInt32);\r\n","\n\nimport {DataStream} from '../basic-types/DataStream';\n\n/**\nThe type of security to use on a message.*/\nexport enum MessageSecurityMode {\n \t\tInvalid = 0,\n\t\tNone = 1,\n\t\tSign = 2,\n\t\tSignAndEncrypt = 3,\n\n}\n\nexport function encodeMessageSecurityMode(\tdata : MessageSecurityMode, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeMessageSecurityMode(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"MessageSecurityMode\",MessageSecurityMode,encodeMessageSecurityMode ,decodeMessageSecurityMode ,null);","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {TimestampsToReturn, encodeTimestampsToReturn, decodeTimestampsToReturn} from './TimestampsToReturn';\nimport {ReadValueId} from './ReadValueId';\nimport {decodeReadValueId} from './ReadValueId';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IReadRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tmaxAge? : ec.Double;\n\t\ttimestampsToReturn? : TimestampsToReturn;\n\t\tnodesToRead? : ReadValueId[];\n}\n\n/**\n\n*/\n\nexport class ReadRequest {\n \t\trequestHeader : RequestHeader;\n\t\tmaxAge : ec.Double;\n\t\ttimestampsToReturn : TimestampsToReturn;\n\t\tnodesToRead : ReadValueId[];\n\n\tconstructor(\toptions? : IReadRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.maxAge= (options.maxAge) ? options.maxAge:null;\n\t\tthis.timestampsToReturn= (options.timestampsToReturn) ? options.timestampsToReturn:null;\n\t\tthis.nodesToRead= (options.nodesToRead) ? options.nodesToRead:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeDouble(this.maxAge,out);\n\t\tencodeTimestampsToReturn(this.timestampsToReturn,out);\n\t\tec.encodeArray(this.nodesToRead,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.maxAge = ec.decodeDouble(inp);\n\t\tthis.timestampsToReturn = decodeTimestampsToReturn(inp);\n\t\tthis.nodesToRead = ec.decodeArray(inp,decodeReadValueId);\n\n\t}\n\n\n\tclone(\ttarget? : ReadRequest) : ReadRequest { \n\t\tif(!target) {\n\t\t\ttarget = new ReadRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.maxAge = this.maxAge;\n\t\ttarget.timestampsToReturn = this.timestampsToReturn;\n\t\tif (this.nodesToRead) { target.nodesToRead = ec.cloneComplexArray(this.nodesToRead);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeReadRequest(\tinp : DataStream) : ReadRequest { \n\t\tlet obj = new ReadRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ReadRequest\",ReadRequest, makeExpandedNodeId(631,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {DataValue} from './DataValue';\nimport {decodeDataValue} from './DataValue';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IReadResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : DataValue[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class ReadResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : DataValue[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IReadResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeDataValue);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : ReadResponse) : ReadResponse { \n\t\tif(!target) {\n\t\t\ttarget = new ReadResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeReadResponse(\tinp : DataStream) : ReadResponse { \n\t\tlet obj = new ReadResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ReadResponse\",ReadResponse, makeExpandedNodeId(634,0));","// this file has been automatically generated\n export var StatusCodes = { \n  Good: { name:'Good', value: 0, description:'No Error' }\n, BadUnexpectedError: { name: 'BadUnexpectedError' , value: 0x80010000 ,description: \"An unexpected error occurred.\"}\n, BadInternalError: { name: 'BadInternalError' , value: 0x80020000 ,description: \"An internal error occurred as a result of a programming or configuration error.\"}\n, BadOutOfMemory: { name: 'BadOutOfMemory' , value: 0x80030000 ,description: \"Not enough memory to complete the operation.\"}\n, BadResourceUnavailable: { name: 'BadResourceUnavailable' , value: 0x80040000 ,description: \"An operating system resource is not available.\"}\n, BadCommunicationError: { name: 'BadCommunicationError' , value: 0x80050000 ,description: \"A low level communication error occurred.\"}\n, BadEncodingError: { name: 'BadEncodingError' , value: 0x80060000 ,description: \"Encoding halted because of invalid data in the objects being serialized.\"}\n, BadDecodingError: { name: 'BadDecodingError' , value: 0x80070000 ,description: \"Decoding halted because of invalid data in the stream.\"}\n, BadEncodingLimitsExceeded: { name: 'BadEncodingLimitsExceeded' , value: 0x80080000 ,description: \"The message encoding/decoding limits imposed by the stack have been exceeded.\"}\n, BadRequestTooLarge: { name: 'BadRequestTooLarge' , value: 0x80b80000 ,description: \"The request message size exceeds limits set by the server.\"}\n, BadResponseTooLarge: { name: 'BadResponseTooLarge' , value: 0x80b90000 ,description: \"The response message size exceeds limits set by the client.\"}\n, BadUnknownResponse: { name: 'BadUnknownResponse' , value: 0x80090000 ,description: \"An unrecognized response was received from the server.\"}\n, BadTimeout: { name: 'BadTimeout' , value: 0x800a0000 ,description: \"The operation timed out.\"}\n, BadServiceUnsupported: { name: 'BadServiceUnsupported' , value: 0x800b0000 ,description: \"The server does not support the requested service.\"}\n, BadShutdown: { name: 'BadShutdown' , value: 0x800c0000 ,description: \"The operation was cancelled because the application is shutting down.\"}\n, BadServerNotConnected: { name: 'BadServerNotConnected' , value: 0x800d0000 ,description: \"The operation could not complete because the client is not connected to the server.\"}\n, BadServerHalted: { name: 'BadServerHalted' , value: 0x800e0000 ,description: \"The server has stopped and cannot process any requests.\"}\n, BadNothingToDo: { name: 'BadNothingToDo' , value: 0x800f0000 ,description: \"There was nothing to do because the client passed a list of operations with no elements.\"}\n, BadTooManyOperations: { name: 'BadTooManyOperations' , value: 0x80100000 ,description: \"The request could not be processed because it specified too many operations.\"}\n, BadTooManyMonitoredItems: { name: 'BadTooManyMonitoredItems' , value: 0x80db0000 ,description: \"The request could not be processed because there are too many monitored items in the subscription.\"}\n, BadDataTypeIdUnknown: { name: 'BadDataTypeIdUnknown' , value: 0x80110000 ,description: \"The extension object cannot be (de)serialized because the data type id is not recognized.\"}\n, BadCertificateInvalid: { name: 'BadCertificateInvalid' , value: 0x80120000 ,description: \"The certificate provided as a parameter is not valid.\"}\n, BadSecurityChecksFailed: { name: 'BadSecurityChecksFailed' , value: 0x80130000 ,description: \"An error occurred verifying security.\"}\n, BadCertificateTimeInvalid: { name: 'BadCertificateTimeInvalid' , value: 0x80140000 ,description: \"The Certificate has expired or is not yet valid.\"}\n, BadCertificateIssuerTimeInvalid: { name: 'BadCertificateIssuerTimeInvalid' , value: 0x80150000 ,description: \"An Issuer Certificate has expired or is not yet valid.\"}\n, BadCertificateHostNameInvalid: { name: 'BadCertificateHostNameInvalid' , value: 0x80160000 ,description: \"The HostName used to connect to a Server does not match a HostName in the Certificate.\"}\n, BadCertificateUriInvalid: { name: 'BadCertificateUriInvalid' , value: 0x80170000 ,description: \"The URI specified in the ApplicationDescription does not match the URI in the Certificate.\"}\n, BadCertificateUseNotAllowed: { name: 'BadCertificateUseNotAllowed' , value: 0x80180000 ,description: \"The Certificate may not be used for the requested operation.\"}\n, BadCertificateIssuerUseNotAllowed: { name: 'BadCertificateIssuerUseNotAllowed' , value: 0x80190000 ,description: \"The Issuer Certificate may not be used for the requested operation.\"}\n, BadCertificateUntrusted: { name: 'BadCertificateUntrusted' , value: 0x801a0000 ,description: \"The Certificate is not trusted.\"}\n, BadCertificateRevocationUnknown: { name: 'BadCertificateRevocationUnknown' , value: 0x801b0000 ,description: \"It was not possible to determine if the Certificate has been revoked.\"}\n, BadCertificateIssuerRevocationUnknown: { name: 'BadCertificateIssuerRevocationUnknown' , value: 0x801c0000 ,description: \"It was not possible to determine if the Issuer Certificate has been revoked.\"}\n, BadCertificateRevoked: { name: 'BadCertificateRevoked' , value: 0x801d0000 ,description: \"The certificate has been revoked.\"}\n, BadCertificateIssuerRevoked: { name: 'BadCertificateIssuerRevoked' , value: 0x801e0000 ,description: \"The issuer certificate has been revoked.\"}\n, BadCertificateChainIncomplete: { name: 'BadCertificateChainIncomplete' , value: 0x810d0000 ,description: \"The certificate chain is incomplete.\"}\n, BadUserAccessDenied: { name: 'BadUserAccessDenied' , value: 0x801f0000 ,description: \"User does not have permission to perform the requested operation.\"}\n, BadIdentityTokenInvalid: { name: 'BadIdentityTokenInvalid' , value: 0x80200000 ,description: \"The user identity token is not valid.\"}\n, BadIdentityTokenRejected: { name: 'BadIdentityTokenRejected' , value: 0x80210000 ,description: \"The user identity token is valid but the server has rejected it.\"}\n, BadSecureChannelIdInvalid: { name: 'BadSecureChannelIdInvalid' , value: 0x80220000 ,description: \"The specified secure channel is no longer valid.\"}\n, BadInvalidTimestamp: { name: 'BadInvalidTimestamp' , value: 0x80230000 ,description: \"The timestamp is outside the range allowed by the server.\"}\n, BadNonceInvalid: { name: 'BadNonceInvalid' , value: 0x80240000 ,description: \"The nonce does appear to be not a random value or it is not the correct length.\"}\n, BadSessionIdInvalid: { name: 'BadSessionIdInvalid' , value: 0x80250000 ,description: \"The session id is not valid.\"}\n, BadSessionClosed: { name: 'BadSessionClosed' , value: 0x80260000 ,description: \"The session was closed by the client.\"}\n, BadSessionNotActivated: { name: 'BadSessionNotActivated' , value: 0x80270000 ,description: \"The session cannot be used because ActivateSession has not been called.\"}\n, BadSubscriptionIdInvalid: { name: 'BadSubscriptionIdInvalid' , value: 0x80280000 ,description: \"The subscription id is not valid.\"}\n, BadRequestHeaderInvalid: { name: 'BadRequestHeaderInvalid' , value: 0x802a0000 ,description: \"The header for the request is missing or invalid.\"}\n, BadTimestampsToReturnInvalid: { name: 'BadTimestampsToReturnInvalid' , value: 0x802b0000 ,description: \"The timestamps to return parameter is invalid.\"}\n, BadRequestCancelledByClient: { name: 'BadRequestCancelledByClient' , value: 0x802c0000 ,description: \"The request was cancelled by the client.\"}\n, BadTooManyArguments: { name: 'BadTooManyArguments' , value: 0x80e50000 ,description: \"Too many arguments were provided.\"}\n, GoodSubscriptionTransferred: { name: 'GoodSubscriptionTransferred' , value: 0x2d0000 ,description: \"The subscription was transferred to another session.\"}\n, GoodCompletesAsynchronously: { name: 'GoodCompletesAsynchronously' , value: 0x2e0000 ,description: \"The processing will complete asynchronously.\"}\n, GoodOverload: { name: 'GoodOverload' , value: 0x2f0000 ,description: \"Sampling has slowed down due to resource limitations.\"}\n, GoodClamped: { name: 'GoodClamped' , value: 0x300000 ,description: \"The value written was accepted but was clamped.\"}\n, BadNoCommunication: { name: 'BadNoCommunication' , value: 0x80310000 ,description: \"Communication with the data source is defined\"}\n, BadWaitingForInitialData: { name: 'BadWaitingForInitialData' , value: 0x80320000 ,description: \"Waiting for the server to obtain values from the underlying data source.\"}\n, BadNodeIdInvalid: { name: 'BadNodeIdInvalid' , value: 0x80330000 ,description: \"The syntax of the node id is not valid.\"}\n, BadNodeIdUnknown: { name: 'BadNodeIdUnknown' , value: 0x80340000 ,description: \"The node id refers to a node that does not exist in the server address space.\"}\n, BadAttributeIdInvalid: { name: 'BadAttributeIdInvalid' , value: 0x80350000 ,description: \"The attribute is not supported for the specified Node.\"}\n, BadIndexRangeInvalid: { name: 'BadIndexRangeInvalid' , value: 0x80360000 ,description: \"The syntax of the index range parameter is invalid.\"}\n, BadIndexRangeNoData: { name: 'BadIndexRangeNoData' , value: 0x80370000 ,description: \"No data exists within the range of indexes specified.\"}\n, BadDataEncodingInvalid: { name: 'BadDataEncodingInvalid' , value: 0x80380000 ,description: \"The data encoding is invalid.\"}\n, BadDataEncodingUnsupported: { name: 'BadDataEncodingUnsupported' , value: 0x80390000 ,description: \"The server does not support the requested data encoding for the node.\"}\n, BadNotReadable: { name: 'BadNotReadable' , value: 0x803a0000 ,description: \"The access level does not allow reading or subscribing to the Node.\"}\n, BadNotWritable: { name: 'BadNotWritable' , value: 0x803b0000 ,description: \"The access level does not allow writing to the Node.\"}\n, BadOutOfRange: { name: 'BadOutOfRange' , value: 0x803c0000 ,description: \"The value was out of range.\"}\n, BadNotSupported: { name: 'BadNotSupported' , value: 0x803d0000 ,description: \"The requested operation is not supported.\"}\n, BadNotFound: { name: 'BadNotFound' , value: 0x803e0000 ,description: \"A requested item was not found or a search operation ended without success.\"}\n, BadObjectDeleted: { name: 'BadObjectDeleted' , value: 0x803f0000 ,description: \"The object cannot be used because it has been deleted.\"}\n, BadNotImplemented: { name: 'BadNotImplemented' , value: 0x80400000 ,description: \"Requested operation is not implemented.\"}\n, BadMonitoringModeInvalid: { name: 'BadMonitoringModeInvalid' , value: 0x80410000 ,description: \"The monitoring mode is invalid.\"}\n, BadMonitoredItemIdInvalid: { name: 'BadMonitoredItemIdInvalid' , value: 0x80420000 ,description: \"The monitoring item id does not refer to a valid monitored item.\"}\n, BadMonitoredItemFilterInvalid: { name: 'BadMonitoredItemFilterInvalid' , value: 0x80430000 ,description: \"The monitored item filter parameter is not valid.\"}\n, BadMonitoredItemFilterUnsupported: { name: 'BadMonitoredItemFilterUnsupported' , value: 0x80440000 ,description: \"The server does not support the requested monitored item filter.\"}\n, BadFilterNotAllowed: { name: 'BadFilterNotAllowed' , value: 0x80450000 ,description: \"A monitoring filter cannot be used in combination with the attribute specified.\"}\n, BadStructureMissing: { name: 'BadStructureMissing' , value: 0x80460000 ,description: \"A mandatory structured parameter was missing or null.\"}\n, BadEventFilterInvalid: { name: 'BadEventFilterInvalid' , value: 0x80470000 ,description: \"The event filter is not valid.\"}\n, BadContentFilterInvalid: { name: 'BadContentFilterInvalid' , value: 0x80480000 ,description: \"The content filter is not valid.\"}\n, BadFilterOperatorInvalid: { name: 'BadFilterOperatorInvalid' , value: 0x80c10000 ,description: \"An unregognized operator was provided in a filter.\"}\n, BadFilterOperatorUnsupported: { name: 'BadFilterOperatorUnsupported' , value: 0x80c20000 ,description: \"A valid operator was provided\"}\n, BadFilterOperandCountMismatch: { name: 'BadFilterOperandCountMismatch' , value: 0x80c30000 ,description: \"The number of operands provided for the filter operator was less then expected for the operand provided.\"}\n, BadFilterOperandInvalid: { name: 'BadFilterOperandInvalid' , value: 0x80490000 ,description: \"The operand used in a content filter is not valid.\"}\n, BadFilterElementInvalid: { name: 'BadFilterElementInvalid' , value: 0x80c40000 ,description: \"The referenced element is not a valid element in the content filter.\"}\n, BadFilterLiteralInvalid: { name: 'BadFilterLiteralInvalid' , value: 0x80c50000 ,description: \"The referenced literal is not a valid value.\"}\n, BadContinuationPointInvalid: { name: 'BadContinuationPointInvalid' , value: 0x804a0000 ,description: \"The continuation point provide is longer valid.\"}\n, BadNoContinuationPoints: { name: 'BadNoContinuationPoints' , value: 0x804b0000 ,description: \"The operation could not be processed because all continuation points have been allocated.\"}\n, BadReferenceTypeIdInvalid: { name: 'BadReferenceTypeIdInvalid' , value: 0x804c0000 ,description: \"The operation could not be processed because all continuation points have been allocated.\"}\n, BadBrowseDirectionInvalid: { name: 'BadBrowseDirectionInvalid' , value: 0x804d0000 ,description: \"The browse direction is not valid.\"}\n, BadNodeNotInView: { name: 'BadNodeNotInView' , value: 0x804e0000 ,description: \"The node is not part of the view.\"}\n, BadServerUriInvalid: { name: 'BadServerUriInvalid' , value: 0x804f0000 ,description: \"The ServerUri is not a valid URI.\"}\n, BadServerNameMissing: { name: 'BadServerNameMissing' , value: 0x80500000 ,description: \"No ServerName was specified.\"}\n, BadDiscoveryUrlMissing: { name: 'BadDiscoveryUrlMissing' , value: 0x80510000 ,description: \"No DiscoveryUrl was specified.\"}\n, BadSempahoreFileMissing: { name: 'BadSempahoreFileMissing' , value: 0x80520000 ,description: \"The semaphore file specified by the client is not valid.\"}\n, BadRequestTypeInvalid: { name: 'BadRequestTypeInvalid' , value: 0x80530000 ,description: \"The security token request type is not valid.\"}\n, BadSecurityModeRejected: { name: 'BadSecurityModeRejected' , value: 0x80540000 ,description: \"The security mode does not meet the requirements set by the Server.\"}\n, BadSecurityPolicyRejected: { name: 'BadSecurityPolicyRejected' , value: 0x80550000 ,description: \"The security policy does not meet the requirements set by the Server.\"}\n, BadTooManySessions: { name: 'BadTooManySessions' , value: 0x80560000 ,description: \"The server has reached its maximum number of sessions.\"}\n, BadUserSignatureInvalid: { name: 'BadUserSignatureInvalid' , value: 0x80570000 ,description: \"The user token signature is missing or invalid.\"}\n, BadApplicationSignatureInvalid: { name: 'BadApplicationSignatureInvalid' , value: 0x80580000 ,description: \"The signature generated with the client certificate is missing or invalid.\"}\n, BadNoValidCertificates: { name: 'BadNoValidCertificates' , value: 0x80590000 ,description: \"The client did not provide at least one software certificate that is valid and meets the profile requirements for the server.\"}\n, BadIdentityChangeNotSupported: { name: 'BadIdentityChangeNotSupported' , value: 0x80c60000 ,description: \"The Server does not support changing the user identity assigned to the session.\"}\n, BadRequestCancelledByRequest: { name: 'BadRequestCancelledByRequest' , value: 0x805a0000 ,description: \"The request was cancelled by the client with the Cancel service.\"}\n, BadParentNodeIdInvalid: { name: 'BadParentNodeIdInvalid' , value: 0x805b0000 ,description: \"The parent node id does not to refer to a valid node.\"}\n, BadReferenceNotAllowed: { name: 'BadReferenceNotAllowed' , value: 0x805c0000 ,description: \"The reference could not be created because it violates constraints imposed by the data model.\"}\n, BadNodeIdRejected: { name: 'BadNodeIdRejected' , value: 0x805d0000 ,description: \"The requested node id was reject because it was either invalid or server does not allow node ids to be specified by the client.\"}\n, BadNodeIdExists: { name: 'BadNodeIdExists' , value: 0x805e0000 ,description: \"The requested node id is already used by another node.\"}\n, BadNodeClassInvalid: { name: 'BadNodeClassInvalid' , value: 0x805f0000 ,description: \"The node class is not valid.\"}\n, BadBrowseNameInvalid: { name: 'BadBrowseNameInvalid' , value: 0x80600000 ,description: \"The browse name is invalid.\"}\n, BadBrowseNameDuplicated: { name: 'BadBrowseNameDuplicated' , value: 0x80610000 ,description: \"The browse name is not unique among nodes that share the same relationship with the parent.\"}\n, BadNodeAttributesInvalid: { name: 'BadNodeAttributesInvalid' , value: 0x80620000 ,description: \"The node attributes are not valid for the node class.\"}\n, BadTypeDefinitionInvalid: { name: 'BadTypeDefinitionInvalid' , value: 0x80630000 ,description: \"The type definition node id does not reference an appropriate type node.\"}\n, BadSourceNodeIdInvalid: { name: 'BadSourceNodeIdInvalid' , value: 0x80640000 ,description: \"The source node id does not reference a valid node.\"}\n, BadTargetNodeIdInvalid: { name: 'BadTargetNodeIdInvalid' , value: 0x80650000 ,description: \"The target node id does not reference a valid node.\"}\n, BadDuplicateReferenceNotAllowed: { name: 'BadDuplicateReferenceNotAllowed' , value: 0x80660000 ,description: \"The reference type between the nodes is already defined.\"}\n, BadInvalidSelfReference: { name: 'BadInvalidSelfReference' , value: 0x80670000 ,description: \"The server does not allow this type of self reference on this node.\"}\n, BadReferenceLocalOnly: { name: 'BadReferenceLocalOnly' , value: 0x80680000 ,description: \"The reference type is not valid for a reference to a remote server.\"}\n, BadNoDeleteRights: { name: 'BadNoDeleteRights' , value: 0x80690000 ,description: \"The server will not allow the node to be deleted.\"}\n, UncertainReferenceNotDeleted: { name: 'UncertainReferenceNotDeleted' , value: 0x40bc0000 ,description: \"The server was not able to delete all target references.\"}\n, BadServerIndexInvalid: { name: 'BadServerIndexInvalid' , value: 0x806a0000 ,description: \"The server index is not valid.\"}\n, BadViewIdUnknown: { name: 'BadViewIdUnknown' , value: 0x806b0000 ,description: \"The view id does not refer to a valid view node.\"}\n, BadViewTimestampInvalid: { name: 'BadViewTimestampInvalid' , value: 0x80c90000 ,description: \"The view timestamp is not available or not supported.\"}\n, BadViewParameterMismatch: { name: 'BadViewParameterMismatch' , value: 0x80ca0000 ,description: \"The view parameters are not consistent with each other.\"}\n, BadViewVersionInvalid: { name: 'BadViewVersionInvalid' , value: 0x80cb0000 ,description: \"The view version is not available or not supported.\"}\n, UncertainNotAllNodesAvailable: { name: 'UncertainNotAllNodesAvailable' , value: 0x40c00000 ,description: \"The list of references may not be complete because the underlying system is not available.\"}\n, GoodResultsMayBeIncomplete: { name: 'GoodResultsMayBeIncomplete' , value: 0xba0000 ,description: \"The server should have followed a reference to a node in a remote server but did not. The result set may be incomplete.\"}\n, BadNotTypeDefinition: { name: 'BadNotTypeDefinition' , value: 0x80c80000 ,description: \"The provided Nodeid was not a type definition nodeid.\"}\n, UncertainReferenceOutOfServer: { name: 'UncertainReferenceOutOfServer' , value: 0x406c0000 ,description: \"One of the references to follow in the relative path references to a node in the address space in another server.\"}\n, BadTooManyMatches: { name: 'BadTooManyMatches' , value: 0x806d0000 ,description: \"The requested operation has too many matches to return.\"}\n, BadQueryTooComplex: { name: 'BadQueryTooComplex' , value: 0x806e0000 ,description: \"The requested operation requires too many resources in the server.\"}\n, BadNoMatch: { name: 'BadNoMatch' , value: 0x806f0000 ,description: \"The requested operation has no match to return.\"}\n, BadMaxAgeInvalid: { name: 'BadMaxAgeInvalid' , value: 0x80700000 ,description: \"The max age parameter is invalid.\"}\n, BadSecurityModeInsufficient: { name: 'BadSecurityModeInsufficient' , value: 0x80e60000 ,description: \"The operation is not permitted over the current secure channel.\"}\n, BadHistoryOperationInvalid: { name: 'BadHistoryOperationInvalid' , value: 0x80710000 ,description: \"The history details parameter is not valid.\"}\n, BadHistoryOperationUnsupported: { name: 'BadHistoryOperationUnsupported' , value: 0x80720000 ,description: \"The server does not support the requested operation.\"}\n, BadInvalidTimestampArgument: { name: 'BadInvalidTimestampArgument' , value: 0x80bd0000 ,description: \"The defined timestamp to return was invalid.\"}\n, BadWriteNotSupported: { name: 'BadWriteNotSupported' , value: 0x80730000 ,description: \"The server not does support writing the combination of value\"}\n, BadTypeMismatch: { name: 'BadTypeMismatch' , value: 0x80740000 ,description: \"The value supplied for the attribute is not of the same type as the attribute's value.\"}\n, BadMethodInvalid: { name: 'BadMethodInvalid' , value: 0x80750000 ,description: \"The method id does not refer to a method for the specified object.\"}\n, BadArgumentsMissing: { name: 'BadArgumentsMissing' , value: 0x80760000 ,description: \"The client did not specify all of the input arguments for the method.\"}\n, BadTooManySubscriptions: { name: 'BadTooManySubscriptions' , value: 0x80770000 ,description: \"The server has reached its  maximum number of subscriptions.\"}\n, BadTooManyPublishRequests: { name: 'BadTooManyPublishRequests' , value: 0x80780000 ,description: \"The server has reached the maximum number of queued publish requests.\"}\n, BadNoSubscription: { name: 'BadNoSubscription' , value: 0x80790000 ,description: \"There is no subscription available for this session.\"}\n, BadSequenceNumberUnknown: { name: 'BadSequenceNumberUnknown' , value: 0x807a0000 ,description: \"The sequence number is unknown to the server.\"}\n, BadMessageNotAvailable: { name: 'BadMessageNotAvailable' , value: 0x807b0000 ,description: \"The requested notification message is no longer available.\"}\n, BadInsufficientClientProfile: { name: 'BadInsufficientClientProfile' , value: 0x807c0000 ,description: \"The Client of the current Session does not support one or more Profiles that are necessary for the Subscription.\"}\n, BadStateNotActive: { name: 'BadStateNotActive' , value: 0x80bf0000 ,description: \"The sub-state machine is not currently active.\"}\n, BadTcpServerTooBusy: { name: 'BadTcpServerTooBusy' , value: 0x807d0000 ,description: \"The server cannot process the request because it is too busy.\"}\n, BadTcpMessageTypeInvalid: { name: 'BadTcpMessageTypeInvalid' , value: 0x807e0000 ,description: \"The type of the message specified in the header invalid.\"}\n, BadTcpSecureChannelUnknown: { name: 'BadTcpSecureChannelUnknown' , value: 0x807f0000 ,description: \"The SecureChannelId and/or TokenId are not currently in use.\"}\n, BadTcpMessageTooLarge: { name: 'BadTcpMessageTooLarge' , value: 0x80800000 ,description: \"The size of the message specified in the header is too large.\"}\n, BadTcpNotEnoughResources: { name: 'BadTcpNotEnoughResources' , value: 0x80810000 ,description: \"There are not enough resources to process the request.\"}\n, BadTcpInternalError: { name: 'BadTcpInternalError' , value: 0x80820000 ,description: \"An internal error occurred.\"}\n, BadTcpEndpointUrlInvalid: { name: 'BadTcpEndpointUrlInvalid' , value: 0x80830000 ,description: \"The Server does not recognize the QueryString specified.\"}\n, BadRequestInterrupted: { name: 'BadRequestInterrupted' , value: 0x80840000 ,description: \"The request could not be sent because of a network interruption.\"}\n, BadRequestTimeout: { name: 'BadRequestTimeout' , value: 0x80850000 ,description: \"Timeout occurred while processing the request.\"}\n, BadSecureChannelClosed: { name: 'BadSecureChannelClosed' , value: 0x80860000 ,description: \"The secure channel has been closed.\"}\n, BadSecureChannelTokenUnknown: { name: 'BadSecureChannelTokenUnknown' , value: 0x80870000 ,description: \"The token has expired or is not recognized.\"}\n, BadSequenceNumberInvalid: { name: 'BadSequenceNumberInvalid' , value: 0x80880000 ,description: \"The sequence number is not valid.\"}\n, BadProtocolVersionUnsupported: { name: 'BadProtocolVersionUnsupported' , value: 0x80be0000 ,description: \"The applications do not have compatible protocol versions.\"}\n, BadConfigurationError: { name: 'BadConfigurationError' , value: 0x80890000 ,description: \"There is a problem with the configuration that affects the usefulness of the value.\"}\n, BadNotConnected: { name: 'BadNotConnected' , value: 0x808a0000 ,description: \"The variable should receive its value from another variable\"}\n, BadDeviceFailure: { name: 'BadDeviceFailure' , value: 0x808b0000 ,description: \"There has been a failure in the device/data source that generates the value that has affected the value.\"}\n, BadSensorFailure: { name: 'BadSensorFailure' , value: 0x808c0000 ,description: \"There has been a failure in the sensor from which the value is derived by the device/data source.\"}\n, BadOutOfService: { name: 'BadOutOfService' , value: 0x808d0000 ,description: \"The source of the data is not operational.\"}\n, BadDeadbandFilterInvalid: { name: 'BadDeadbandFilterInvalid' , value: 0x808e0000 ,description: \"The deadband filter is not valid.\"}\n, UncertainNoCommunicationLastUsableValue: { name: 'UncertainNoCommunicationLastUsableValue' , value: 0x408f0000 ,description: \"Communication to the data source has failed. The variable value is the last value that had a good quality.\"}\n, UncertainLastUsableValue: { name: 'UncertainLastUsableValue' , value: 0x40900000 ,description: \"Whatever was updating this value has stopped doing so.\"}\n, UncertainSubstituteValue: { name: 'UncertainSubstituteValue' , value: 0x40910000 ,description: \"The value is an operational value that was manually overwritten.\"}\n, UncertainInitialValue: { name: 'UncertainInitialValue' , value: 0x40920000 ,description: \"The value is an initial value for a variable that normally receives its value from another variable.\"}\n, UncertainSensorNotAccurate: { name: 'UncertainSensorNotAccurate' , value: 0x40930000 ,description: \"The value is at one of the sensor limits.\"}\n, UncertainEngineeringUnitsExceeded: { name: 'UncertainEngineeringUnitsExceeded' , value: 0x40940000 ,description: \"The value is outside of the range of values defined for this parameter.\"}\n, UncertainSubNormal: { name: 'UncertainSubNormal' , value: 0x40950000 ,description: \"The value is derived from multiple sources and has less than the required number of Good sources.\"}\n, GoodLocalOverride: { name: 'GoodLocalOverride' , value: 0x960000 ,description: \"The value has been overridden.\"}\n, BadRefreshInProgress: { name: 'BadRefreshInProgress' , value: 0x80970000 ,description: \"This Condition refresh failed\"}\n, BadConditionAlreadyDisabled: { name: 'BadConditionAlreadyDisabled' , value: 0x80980000 ,description: \"This condition has already been disabled.\"}\n, BadConditionAlreadyEnabled: { name: 'BadConditionAlreadyEnabled' , value: 0x80cc0000 ,description: \"This condition has already been enabled.\"}\n, BadConditionDisabled: { name: 'BadConditionDisabled' , value: 0x80990000 ,description: \"Property not available\"}\n, BadEventIdUnknown: { name: 'BadEventIdUnknown' , value: 0x809a0000 ,description: \"The specified event id is not recognized.\"}\n, BadEventNotAcknowledgeable: { name: 'BadEventNotAcknowledgeable' , value: 0x80bb0000 ,description: \"The event cannot be acknowledged.\"}\n, BadDialogNotActive: { name: 'BadDialogNotActive' , value: 0x80cd0000 ,description: \"The dialog condition is not active.\"}\n, BadDialogResponseInvalid: { name: 'BadDialogResponseInvalid' , value: 0x80ce0000 ,description: \"The response is not valid for the dialog.\"}\n, BadConditionBranchAlreadyAcked: { name: 'BadConditionBranchAlreadyAcked' , value: 0x80cf0000 ,description: \"The condition branch has already been acknowledged.\"}\n, BadConditionBranchAlreadyConfirmed: { name: 'BadConditionBranchAlreadyConfirmed' , value: 0x80d00000 ,description: \"The condition branch has already been confirmed.\"}\n, BadConditionAlreadyShelved: { name: 'BadConditionAlreadyShelved' , value: 0x80d10000 ,description: \"The condition has already been shelved.\"}\n, BadConditionNotShelved: { name: 'BadConditionNotShelved' , value: 0x80d20000 ,description: \"The condition is not currently shelved.\"}\n, BadShelvingTimeOutOfRange: { name: 'BadShelvingTimeOutOfRange' , value: 0x80d30000 ,description: \"The shelving time not within an acceptable range.\"}\n, BadNoData: { name: 'BadNoData' , value: 0x809b0000 ,description: \"No data exists for the requested time range or event filter.\"}\n, BadBoundNotFound: { name: 'BadBoundNotFound' , value: 0x80d70000 ,description: \"No data found to provide upper or lower bound value.\"}\n, BadBoundNotSupported: { name: 'BadBoundNotSupported' , value: 0x80d80000 ,description: \"The server cannot retrieve a bound for the variable.\"}\n, BadDataLost: { name: 'BadDataLost' , value: 0x809d0000 ,description: \"Data is missing due to collection started/stopped/lost.\"}\n, BadDataUnavailable: { name: 'BadDataUnavailable' , value: 0x809e0000 ,description: \"Expected data is unavailable for the requested time range due to an un-mounted volume\"}\n, BadEntryExists: { name: 'BadEntryExists' , value: 0x809f0000 ,description: \"The data or event was not successfully inserted because a matching entry exists.\"}\n, BadNoEntryExists: { name: 'BadNoEntryExists' , value: 0x80a00000 ,description: \"The data or event was not successfully updated because no matching entry exists.\"}\n, BadTimestampNotSupported: { name: 'BadTimestampNotSupported' , value: 0x80a10000 ,description: \"The client requested history using a timestamp format the server does not support (i.e requested ServerTimestamp when server only supports SourceTimestamp).\"}\n, GoodEntryInserted: { name: 'GoodEntryInserted' , value: 0xa20000 ,description: \"The data or event was successfully inserted into the historical database.\"}\n, GoodEntryReplaced: { name: 'GoodEntryReplaced' , value: 0xa30000 ,description: \"The data or event field was successfully replaced in the historical database.\"}\n, UncertainDataSubNormal: { name: 'UncertainDataSubNormal' , value: 0x40a40000 ,description: \"The value is derived from multiple values and has less than the required number of Good values.\"}\n, GoodNoData: { name: 'GoodNoData' , value: 0xa50000 ,description: \"No data exists for the requested time range or event filter.\"}\n, GoodMoreData: { name: 'GoodMoreData' , value: 0xa60000 ,description: \"The data or event field was successfully replaced in the historical database.\"}\n, BadAggregateListMismatch: { name: 'BadAggregateListMismatch' , value: 0x80d40000 ,description: \"The requested number of Aggregates does not match the requested number of NodeIds.\"}\n, BadAggregateNotSupported: { name: 'BadAggregateNotSupported' , value: 0x80d50000 ,description: \"The requested Aggregate is not support by the server.\"}\n, BadAggregateInvalidInputs: { name: 'BadAggregateInvalidInputs' , value: 0x80d60000 ,description: \"The aggregate value could not be derived due to invalid data inputs.\"}\n, BadAggregateConfigurationRejected: { name: 'BadAggregateConfigurationRejected' , value: 0x80da0000 ,description: \"The aggregate configuration is not valid for specified node.\"}\n, GoodDataIgnored: { name: 'GoodDataIgnored' , value: 0xd90000 ,description: \"The request pecifies fields which are not valid for the EventType or cannot be saved by the historian.\"}\n, BadRequestNotAllowed: { name: 'BadRequestNotAllowed' , value: 0x80e40000 ,description: \"The request was rejected by the server because it did not meet the criteria set by the server.\"}\n, GoodEdited: { name: 'GoodEdited' , value: 0xdc0000 ,description: \"The value does not come from the real source and has been edited by the server.\"}\n, GoodPostActionFailed: { name: 'GoodPostActionFailed' , value: 0xdd0000 ,description: \"There was an error in execution of these post-actions.\"}\n, UncertainDominantValueChanged: { name: 'UncertainDominantValueChanged' , value: 0x40de0000 ,description: \"The related EngineeringUnit has been changed but the Variable Value is still provided based on the previous unit.\"}\n, GoodDependentValueChanged: { name: 'GoodDependentValueChanged' , value: 0xe00000 ,description: \"A dependent value has been changed but the change has not been applied to the device.\"}\n, BadDominantValueChanged: { name: 'BadDominantValueChanged' , value: 0x80e10000 ,description: \"The related EngineeringUnit has been changed but this change has not been applied to the device. The Variable Value is still dependent on the previous unit but its status is currently Bad.\"}\n, UncertainDependentValueChanged: { name: 'UncertainDependentValueChanged' , value: 0x40e20000 ,description: \"A dependent value has been changed but the change has not been applied to the device. The quality of the dominant variable is uncertain.\"}\n, BadDependentValueChanged: { name: 'BadDependentValueChanged' , value: 0x80e30000 ,description: \"A dependent value has been changed but the change has not been applied to the device. The quality of the dominant variable is Bad.\"}\n, GoodCommunicationEvent: { name: 'GoodCommunicationEvent' , value: 0xa70000 ,description: \"The communication layer has raised an event.\"}\n, GoodShutdownEvent: { name: 'GoodShutdownEvent' , value: 0xa80000 ,description: \"The system is shutting down.\"}\n, GoodCallAgain: { name: 'GoodCallAgain' , value: 0xa90000 ,description: \"The operation is not finished and needs to be called again.\"}\n, GoodNonCriticalTimeout: { name: 'GoodNonCriticalTimeout' , value: 0xaa0000 ,description: \"A non-critical timeout occurred.\"}\n, BadInvalidArgument: { name: 'BadInvalidArgument' , value: 0x80ab0000 ,description: \"One or more arguments are invalid.\"}\n, BadConnectionRejected: { name: 'BadConnectionRejected' , value: 0x80ac0000 ,description: \"Could not establish a network connection to remote server.\"}\n, BadDisconnect: { name: 'BadDisconnect' , value: 0x80ad0000 ,description: \"The server has disconnected from the client.\"}\n, BadConnectionClosed: { name: 'BadConnectionClosed' , value: 0x80ae0000 ,description: \"The network connection has been closed.\"}\n, BadInvalidState: { name: 'BadInvalidState' , value: 0x80af0000 ,description: \"The operation cannot be completed because the object is closed\"}\n, BadEndOfStream: { name: 'BadEndOfStream' , value: 0x80b00000 ,description: \"Cannot move beyond end of the stream.\"}\n, BadNoDataAvailable: { name: 'BadNoDataAvailable' , value: 0x80b10000 ,description: \"No data is currently available for reading from a non-blocking stream.\"}\n, BadWaitingForResponse: { name: 'BadWaitingForResponse' , value: 0x80b20000 ,description: \"The asynchronous operation is waiting for a response.\"}\n, BadOperationAbandoned: { name: 'BadOperationAbandoned' , value: 0x80b30000 ,description: \"The asynchronous operation was abandoned by the caller.\"}\n, BadExpectedStreamToBlock: { name: 'BadExpectedStreamToBlock' , value: 0x80b40000 ,description: \"The stream did not return all data requested (possibly because it is a non-blocking stream).\"}\n, BadWouldBlock: { name: 'BadWouldBlock' , value: 0x80b50000 ,description: \"Non blocking behaviour is required and the operation would block.\"}\n, BadSyntaxError: { name: 'BadSyntaxError' , value: 0x80b60000 ,description: \"A value had an invalid syntax.\"}\n, BadMaxConnectionsReached: { name: 'BadMaxConnectionsReached' , value: 0x80b70000 ,description: \"The operation could not be finished because all available connections are in use.\"}\n};\n","\n\nimport {Variant} from '../variant';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IDataValue {\n\t\tvalue? : Variant;\n\t\tstatusCode? : ec.StatusCode;\n\t\tsourceTimestamp? : Date;\n\t\tsourcePicoseconds? : ec.UInt16;\n\t\tserverTimestamp? : Date;\n\t\tserverPicoseconds? : ec.UInt16;\n}\n\n/**\nA value with an associated timestamp, and quality.\n*/\n\nexport class DataValue {\n \t\tvalue : Variant;\n\t\tstatusCode : ec.StatusCode;\n\t\tsourceTimestamp : Date;\n\t\tsourcePicoseconds : ec.UInt16;\n\t\tserverTimestamp : Date;\n\t\tserverPicoseconds : ec.UInt16;\n\n\tconstructor(\toptions? : IDataValue) { \n\t\toptions = options || {};\n\t\tthis.value= (options.value) ? options.value:null;\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.sourceTimestamp= (options.sourceTimestamp) ? options.sourceTimestamp:null;\n\t\tthis.sourcePicoseconds= (options.sourcePicoseconds) ? options.sourcePicoseconds:null;\n\t\tthis.serverTimestamp= (options.serverTimestamp) ? options.serverTimestamp:null;\n\t\tthis.serverPicoseconds= (options.serverPicoseconds) ? options.serverPicoseconds:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tlet encodingByte = 0;\n\t\tif (this.value != null) { encodingByte |= 1 << 0;}\n\t\tif (this.statusCode != null) { encodingByte |= 1 << 1;}\n\t\tif (this.sourceTimestamp != null) { encodingByte |= 1 << 2;}\n\t\tif (this.serverTimestamp != null) { encodingByte |= 1 << 3;}\n\t\tif (this.sourcePicoseconds != null) { encodingByte |= 1 << 4;}\n\t\tif (this.serverPicoseconds != null) { encodingByte |= 1 << 5;}\n\t\tout.setUint8(encodingByte);\n\t\tif(this.value != null) { this.value.encode(out); }\n\t\tif(this.statusCode != null) { ec.encodeStatusCode(this.statusCode,out); }\n\t\tif(this.sourceTimestamp != null) { ec.encodeDateTime(this.sourceTimestamp,out); }\n\t\tif(this.sourcePicoseconds != null) { ec.encodeUInt16(this.sourcePicoseconds,out); }\n\t\tif(this.serverTimestamp != null) { ec.encodeDateTime(this.serverTimestamp,out); }\n\t\tif(this.serverPicoseconds != null) { ec.encodeUInt16(this.serverPicoseconds,out); }\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tlet encodingByte = inp.getUint8();\n\t\tlet valueSpecified = (encodingByte & 1) != 0;\n\t\tlet statusCodeSpecified = (encodingByte & 2) != 0;\n\t\tlet sourceTimestampSpecified = (encodingByte & 4) != 0;\n\t\tlet serverTimestampSpecified = (encodingByte & 8) != 0;\n\t\tlet sourcePicosecondsSpecified = (encodingByte & 16) != 0;\n\t\tlet serverPicosecondsSpecified = (encodingByte & 32) != 0;\n\t\tlet reserved1 = (encodingByte & 64) != 0;\n\t\tif(valueSpecified) {\n\t\t\tthis.value= new Variant();\n\t\t\tthis.value.decode(inp);\n\t\t}\n\t\tif(statusCodeSpecified) {\n\t\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\t}\n\t\tif(sourceTimestampSpecified) {\n\t\t\tthis.sourceTimestamp = ec.decodeDateTime(inp);\n\t\t}\n\t\tif(sourcePicosecondsSpecified) {\n\t\t\tthis.sourcePicoseconds = ec.decodeUInt16(inp);\n\t\t}\n\t\tif(serverTimestampSpecified) {\n\t\t\tthis.serverTimestamp = ec.decodeDateTime(inp);\n\t\t}\n\t\tif(serverPicosecondsSpecified) {\n\t\t\tthis.serverPicoseconds = ec.decodeUInt16(inp);\n\t\t}\n\n\t}\n\n\n\tclone(\ttarget? : DataValue) : DataValue { \n\t\tif(!target) {\n\t\t\ttarget = new DataValue();\n\t\t}\n\t\tif (this.value) { target.value = this.value.clone();}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.sourceTimestamp = this.sourceTimestamp;\n\t\ttarget.sourcePicoseconds = this.sourcePicoseconds;\n\t\ttarget.serverTimestamp = this.serverTimestamp;\n\t\ttarget.serverPicoseconds = this.serverPicoseconds;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeDataValue(\tinp : DataStream) : DataValue { \n\t\tlet obj = new DataValue();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"DataValue\",DataValue, makeExpandedNodeId(23,0));","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\nimport {assert} from '../assert';\r\nimport {makeNodeId,coerceNodeId} from '../nodeid/nodeid';\r\nimport { ExpandedNodeId,makeExpandedNodeId } from '../nodeid/expanded_nodeid';\r\nimport * as ec from '../basic-types';\r\nimport {encodeBoolean} from '../basic-types';\r\nimport {StatusCodes} from '../constants/raw_status_codes';\r\n \r\n\r\nvar emptyGuid = ec.emptyGuid;\r\n\r\n\r\nexport var minDate = new Date(Date.UTC(1601, 0, 1, 0, 0));\r\n\r\n\r\n//there are 4 types of DataTypes in opcua:\r\n//   Built-In DataType\r\n//   Simple DataType\r\n//   Complex DataType\r\n//   Enumeration\r\n\r\n\r\nvar defaultXmlElement = \"\";\r\n\r\n// Built-In Type\r\nvar _defaultType = [\r\n    // Built-in DataTypes ( see OPCUA Part III v1.02 - $5.8.2 )\r\n    {\r\n        name: \"Null\", encode: function () {\r\n    }, decode: function () {\r\n        return null;\r\n    }, defaultValue: null\r\n    },\r\n    {\r\n        name: \"Any\",\r\n        encode: function () {\r\n            assert(false, \"type 'Any' cannot be encoded\");\r\n        },\r\n        decode: function () {\r\n            assert(false, \"type 'Any' cannot be decoded\");\r\n        }\r\n    },\r\n    {\r\n        name: \"Boolean\",\r\n        encode: encodeBoolean,\r\n        decode: ec.decodeBoolean,\r\n        defaultValue: false,\r\n        coerce: ec.coerceBoolean\r\n    },\r\n    {name: \"Int8\", encode: ec.encodeInt8, decode: ec.decodeInt8, defaultValue: 0, coerce: ec.coerceInt8},\r\n    {name: \"UInt8\", encode: ec.encodeUInt8, decode: ec.decodeUInt8, defaultValue: 0, coerce: ec.coerceUInt8},\r\n    {name: \"SByte\", encode: ec.encodeInt8, decode: ec.decodeInt8, defaultValue: 0, coerce: ec.coerceSByte},\r\n    {name: \"Byte\", encode: ec.encodeUInt8, decode: ec.decodeUInt8, defaultValue: 0, coerce: ec.coerceByte},\r\n    {name: \"Int16\", encode: ec.encodeInt16, decode: ec.decodeInt16, defaultValue: 0, coerce: ec.coerceInt16},\r\n    {name: \"UInt16\", encode: ec.encodeUInt16, decode: ec.decodeUInt16, defaultValue: 0, coerce: ec.coerceUInt16},\r\n    {name: \"Int32\", encode: ec.encodeInt32, decode: ec.decodeInt32, defaultValue: 0, coerce: ec.coerceInt32},\r\n    {name: \"UInt32\", encode: ec.encodeUInt32, decode: ec.decodeUInt32, defaultValue: 0, coerce: ec.coerceUInt32},\r\n    {\r\n        name: \"Int64\",\r\n        encode: ec.encodeUInt64,//ec.encodeInt64,\r\n        decode: ec.decodeUInt64,//ec.decodeInt64,\r\n        defaultValue: 0,//ec.coerceInt64(0),\r\n        coerce: ec.coerceInt64\r\n    },\r\n    {\r\n        name: \"UInt64\",\r\n        encode: ec.encodeUInt64,\r\n        decode: ec.decodeUInt64,\r\n        defaultValue: 0,//ec.coerceUInt64(0),\r\n        coerce: ec.coerceUInt64\r\n    },\r\n    {name: \"Float\", encode: ec.encodeFloat, decode: ec.decodeFloat, defaultValue: 0.0, coerce: ec.coerceFloat},\r\n    {name: \"Double\", encode: ec.encodeDouble, decode: ec.decodeDouble, defaultValue: 0.0, coerce: ec.coerceFloat},\r\n    {name: \"String\", encode: ec.encodeString, decode: ec.decodeString, defaultValue: \"\"},\r\n    // OPC Unified Architecture, part 3.0 $8.26 page 67\r\n    {\r\n        name: \"DateTime\",\r\n        encode: ec.encodeDateTime,\r\n        decode: ec.decodeDateTime,\r\n        defaultValue: minDate,\r\n        coerce: ec.coerceDateTime\r\n    },\r\n    {name: \"Guid\", encode: ec.encodeGuid, decode: ec.decodeGuid, defaultValue: emptyGuid},\r\n\r\n    {\r\n        name: \"ByteString\", encode: ec.encodeByteString, decode: ec.decodeByteString,\r\n\r\n        defaultValue: function () {\r\n            return new ArrayBuffer(0);\r\n        },\r\n\r\n        coerce: ec.coerceByteString,\r\n\r\n        toJSON: function (value) {\r\n            if (typeof value === \"string\") {\r\n                return value;\r\n            }\r\n            assert(value instanceof ArrayBuffer);\r\n            return btoa(String.fromCharCode.apply(String,new Uint8Array(value)));\r\n        }\r\n    },\r\n    {name: \"XmlElement\", encode: ec.encodeString, decode: ec.decodeString, defaultValue: defaultXmlElement},\r\n\r\n    // see OPCUA Part 3 - V1.02 $8.2.1\r\n    {\r\n        name: \"NodeId\",\r\n        encode: ec.encodeNodeId, decode: ec.decodeNodeId,\r\n        defaultValue: makeNodeId,\r\n        coerce: coerceNodeId\r\n    },\r\n\r\n    {\r\n        name: \"ExpandedNodeId\",\r\n        encode: ec.encodeExpandedNodeId, decode: ec.decodeExpandedNodeId,\r\n        defaultValue: makeExpandedNodeId,\r\n        coerce: ExpandedNodeId.coerceExpandedNodeId\r\n    },\r\n\r\n    // ----------------------------------------------------------------------------------------\r\n    // Simple  DataTypes\r\n    // ( see OPCUA Part III v1.02 - $5.8.2 )\r\n    // Simple DataTypes are subtypes of the Built-in DataTypes. They are handled on the wire like the\r\n    // Built-in   DataType, i.e. they cannot be distinguished on the wire from their  Built-in supertypes.\r\n    // Since they are handled like  Built-in   DataTypes  regarding the encoding they cannot have encodings\r\n    // defined  in the  AddressSpace.  Clients  can read the  DataType  Attribute  of a  Variable  or  VariableType  to\r\n    // identify the  Simple  DataType  of the  Value  Attribute. An example of a  Simple  DataType  is  Duration. It\r\n    // is handled on the wire as a  Double   but the Client can read the  DataType  Attribute  and thus interpret\r\n    // the value as defined by  Duration\r\n    //\r\n\r\n\r\n    // OPC Unified Architecture, part 4.0 $7.13\r\n    // IntegerID: This primitive data type is an UInt32 that is used as an identifier, such as a handle. All values,\r\n    // except for 0, are valid.\r\n    {name: \"IntegerId\", encode: ec.encodeUInt32, decode: ec.decodeUInt32, defaultValue: 0xFFFFFFFF},\r\n\r\n\r\n    //The StatusCode is a 32-bit unsigned integer. The top 16 bits represent the numeric value of the\r\n    //code that shall be used for detecting specific errors or conditions. The bottom 16 bits are bit flags\r\n    //that contain additional information but do not affect the meaning of the StatusCode.\r\n    // 7.33 Part 4 - P 143\r\n    {\r\n        name: \"StatusCode\",\r\n        encode: ec.encodeStatusCode,\r\n        decode: ec.decodeStatusCode,\r\n        defaultValue: StatusCodes.Good,\r\n        coerce: ec.coerceStatusCode,\r\n    }\r\n\r\n];\r\n\r\n\r\nexport interface ITypeSchema {\r\n    name : string;\r\n    encode : Function,\r\n    decode : Function,\r\n    coerce? : Function,\r\n//    defaultValue? : Function\r\n} \r\n\r\n/**\r\n * @class TypeSchema\r\n * @param options {Object}\r\n * @constructor\r\n * create a new type Schema\r\n */\r\nexport class TypeSchema implements ITypeSchema {\r\n    name: string;\r\n    encode: Function;\r\n    decode: Function;\r\n    coerce?: Function;\r\n    protected defaultValue : any;\r\nconstructor(options :  ITypeSchema| any) {\r\n\r\n    for (var prop in options) {\r\n        if (options.hasOwnProperty(prop)) {\r\n            this[prop] = options[prop];\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * @method  computer_default_value\r\n * @param defaultValue {*} the default value\r\n * @return {*}\r\n */\r\n    computer_default_value(defaultValue) {\r\n        // defaultValue === undefined means use standard default value specified by type\r\n        // defaultValue === null      means 'null' can be a default value\r\n        if (defaultValue === undefined) {\r\n            defaultValue = this.defaultValue;\r\n        }\r\n        if ('function' === typeof defaultValue) {\r\n            // be careful not to cache this value , it must be call each time to make sure\r\n            // we do not end up with the same value/instance twice.\r\n            defaultValue = defaultValue();\r\n        }\r\n    //xx    if (defaultValue !== null && _t.coerce) {\r\n    //xx        defaultValue = _t.coerce(defaultValue);\r\n    //xx    }\r\n        return defaultValue;\r\n    };\r\n    \r\n    /**\r\n     * @method initialize_value\r\n     * @param value\r\n     * @param defaultValue\r\n     * @return {*}\r\n     */\r\n    initialize_value(value, defaultValue) {\r\n    \r\n        assert(this instanceof TypeSchema);\r\n    \r\n        if (value === undefined) {\r\n            return defaultValue;\r\n        }\r\n        if (defaultValue === null) {\r\n            if (value === null) {\r\n                return null;\r\n            }\r\n        }\r\n    \r\n        if (value === undefined) {\r\n            return defaultValue;\r\n        }\r\n        if ((<any>this).coerce) {\r\n            value = (<any>this).coerce(value);\r\n        }\r\n        return value;\r\n    \r\n    };\r\n}    \r\n\r\n\r\n/**\r\n * @method registerType\r\n * @param schema {TypeSchema}\r\n */\r\nexport function registerType<T extends ITypeSchema>(schema: T) {\r\n    assert(typeof schema.name === \"string\");\r\n    if('function' !== typeof schema.encode) {\r\n        throw new Error(\"schema \"+ schema.name + \" has no encode function\");\r\n    }\r\n    if('function' !== typeof schema.decode) {\r\n        throw new Error(\"schema \"+ schema.name + \" has no decode function\");\r\n    }\r\n\r\n   // schema.category = \"basic\";\r\n    _defaultTypeMap[schema.name] = new TypeSchema(schema);\r\n}\r\n\r\nexport function unregisterType(typeName : string) {\r\n\r\n    delete _defaultTypeMap[typeName];\r\n};\r\n\r\n\r\n/**\r\n * @method findSimpleType\r\n * @param name\r\n * @return {TypeSchema|null}\r\n */\r\nexport function findSimpleType(name : string) {\r\n    assert(name in _defaultTypeMap);\r\n    var typeschema = _defaultTypeMap[name];\r\n    assert(typeschema instanceof TypeSchema);\r\n    return typeschema;\r\n};\r\n\r\n\r\n// populate the default type map\r\nexport var _defaultTypeMap = {};\r\nfor (let t of _defaultType) {\r\n    registerType(t);\r\n}\r\n//_defaultType.forEach(registerType);\r\n\r\n/**\r\n * @method findBuiltInType\r\n * find the Builtin Type that this\r\n * @param datatypeName\r\n * @return {*}\r\n */\r\nexport function findBuiltInType(datatypeName) {\r\n    // coerce string or Qualified Name to string\r\n    if (datatypeName.name) {\r\n        datatypeName = datatypeName.toString();\r\n    }\r\n    assert(typeof datatypeName === 'string', \"findBuiltInType : expecting a string \" + datatypeName);\r\n    var t = _defaultTypeMap[datatypeName];\r\n    if (!t) {\r\n        throw new Error(\"datatype \" + datatypeName + \" must be registered\");\r\n    }\r\n    if (t.subType) {\r\n        return findBuiltInType(t.subType);\r\n    }\r\n    return t;\r\n}\r\n\r\n","import slice from './slice';\n\nexport default function (fn) {\n    return function (/*...args, callback*/) {\n        var args = slice(arguments);\n        var callback = args.pop();\n        fn.call(this, args, callback);\n    };\n}\n","import isObject from 'lodash-es/isObject';\nimport initialParams from './internal/initialParams';\nimport setImmediate from './internal/setImmediate';\n\n/**\n * Take a sync function and make it async, passing its return value to a\n * callback. This is useful for plugging sync functions into a waterfall,\n * series, or other async functions. Any arguments passed to the generated\n * function will be passed to the wrapped function (except for the final\n * callback argument). Errors thrown will be passed to the callback.\n *\n * If the function passed to `asyncify` returns a Promise, that promises's\n * resolved/rejected state will be used to call the callback, rather than simply\n * the synchronous return value.\n *\n * This also means you can asyncify ES2017 `async` functions.\n *\n * @name asyncify\n * @static\n * @memberOf module:Utils\n * @method\n * @alias wrapSync\n * @category Util\n * @param {Function} func - The synchronous function, or Promise-returning\n * function to convert to an {@link AsyncFunction}.\n * @returns {AsyncFunction} An asynchronous wrapper of the `func`. To be\n * invoked with `(args..., callback)`.\n * @example\n *\n * // passing a regular synchronous function\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(JSON.parse),\n *     function (data, next) {\n *         // data is the result of parsing the text.\n *         // If there was a parsing error, it would have been caught.\n *     }\n * ], callback);\n *\n * // passing a function returning a promise\n * async.waterfall([\n *     async.apply(fs.readFile, filename, \"utf8\"),\n *     async.asyncify(function (contents) {\n *         return db.model.create(contents);\n *     }),\n *     function (model, next) {\n *         // `model` is the instantiated model object.\n *         // If there was an error, this function would be skipped.\n *     }\n * ], callback);\n *\n * // es2017 example, though `asyncify` is not needed if your JS environment\n * // supports async functions out of the box\n * var q = async.queue(async.asyncify(async function(file) {\n *     var intermediateStep = await processFile(file);\n *     return await somePromise(intermediateStep)\n * }));\n *\n * q.push(files);\n */\nexport default function asyncify(func) {\n    return initialParams(function (args, callback) {\n        var result;\n        try {\n            result = func.apply(this, args);\n        } catch (e) {\n            return callback(e);\n        }\n        // if result is Promise object\n        if (isObject(result) && typeof result.then === 'function') {\n            result.then(function(value) {\n                invokeCallback(callback, null, value);\n            }, function(err) {\n                invokeCallback(callback, err.message ? err : new Error(err));\n            });\n        } else {\n            callback(null, result);\n        }\n    });\n}\n\nfunction invokeCallback(callback, error, value) {\n    try {\n        callback(error, value);\n    } catch (e) {\n        setImmediate(rethrow, e);\n    }\n}\n\nfunction rethrow(error) {\n    throw error;\n}\n","import asyncify from '../asyncify';\n\nvar supportsSymbol = typeof Symbol === 'function';\n\nfunction isAsync(fn) {\n    return supportsSymbol && fn[Symbol.toStringTag] === 'AsyncFunction';\n}\n\nfunction wrapAsync(asyncFn) {\n    return isAsync(asyncFn) ? asyncify(asyncFn) : asyncFn;\n}\n\nexport default wrapAsync;\n\nexport { isAsync };\n","\"use strict\";\r\n\r\nimport {DataStream} from '../basic-types/DataStream';\r\nexport function readMessageHeader(stream : DataStream) {\r\n    var msgType = String.fromCharCode(stream.getUint8()) +\r\n      String.fromCharCode(stream.getUint8()) +\r\n      String.fromCharCode(stream.getUint8());\r\n\r\n    var isFinal = String.fromCharCode(stream.getUint8());\r\n\r\n    var length = stream.getUint32();\r\n\r\n    return {msgType: msgType, isFinal: isFinal, length: length};\r\n}\r\n\r\n","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\n\r\n\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {assert} from '../assert';\r\n\r\nimport {readMessageHeader} from './read_message_header';\r\nimport {DataStream} from '../basic-types/DataStream';\r\n\r\n\r\n\r\nvar do_debug = false;\r\n\r\nexport function verify_message_chunk(message_chunk : DataView | ArrayBuffer) {\r\n    assert(message_chunk);\r\n    var header = readMessageHeader(new DataStream(message_chunk));\r\n    if (message_chunk.byteLength !== header.length) {\r\n        throw new Error(\" chunk length = \" + message_chunk.byteLength + \" message  length \" + header.length);\r\n    }\r\n}\r\n\r\n// see https://github.com/substack/_buffer-handbook\r\n//     http://blog.nodejs.org/2012/12/20/streams2/\r\n//     http://codewinds.com/blog/2013-08-20-nodejs-transform-streams.html\r\n\r\n//                                  +----------------+----\r\n//                                  | message header | ^\r\n//                                  +----------------+ |<- data to sign\r\n//                                  | security header| |\r\n//                                  +----------------+ | ---\r\n//                                  | Sequence header| |   ^\r\n//                                  +----------------+ |   |<- data to encrypt\r\n//                                  | BODY           | |   |\r\n//                                  +----------------+ |   |\r\n//                                  | padding        | v   |\r\n//                                  +----------------+---  |\r\n//                                  | Signature      |     v\r\n//                                  +----------------+------\r\n//\r\n//  chunkSize = 8192\r\n//  plainBlockSize = 256-11\r\n//  cipherBlockSize = 256\r\n//  headerSize  = messageHeaderSize + securityHeaderSize\r\n//  maxBodySize = plainBlockSize*floor((chunkSize–headerSize–signatureLength-1)/cipherBlockSize)-sequenceHeaderSize;\r\n// length(data to encrypt) = n *\r\n\r\n// Rules:\r\n//  - The SequenceHeaderSize is always 8 bytes\r\n//  - The HeaderSize includes the MessageHeader and the SecurityHeader.\r\n//  - The PaddingSize  and Padding  fields are not present if the  MessageChunk  is not encrypted.\r\n//  - The Signature field is not present if the  MessageChunk  is not signed.\r\n\r\n\r\nfunction argsIn(obj, properties) {\r\n\r\n    var nbUnwanted = 0;\r\n    /* istanbul ignore next */\r\n    if (do_debug) {\r\n        Object.keys(obj).forEach(function (key) {\r\n            if (properties.indexOf(key) < 0) {\r\n                console.log(\" ERROR invalid property :\", key);\r\n                nbUnwanted++;\r\n            }\r\n        });\r\n    }\r\n    return nbUnwanted === 0;\r\n}\r\n\r\nvar ChunkManager_options = [\r\n    \"chunkSize\",\r\n    \"headerSize\",\r\n    \"signatureLength\",\r\n    \"sequenceHeaderSize\",\r\n    \"cipherBlockSize\",\r\n    \"plainBlockSize\",\r\n    \"compute_signature\",\r\n    \"encrypt_buffer\",\r\n    \"writeSequenceHeaderFunc\",\r\n    \"writeHeaderFunc\"\r\n];\r\n/**\r\n * @class ChunkManager\r\n * @param options {Object}\r\n * @param options.chunkSize  {number}\r\n * @param [options.headerSize = 0 ] {number}\r\n * @param [options.signatureLength = 0] {number}\r\n * @param [options.sequenceHeaderSize = 8] {number}size of the sequence header\r\n * @param [options.cipherBlockSize=0] {number}\r\n * @param [options.plainBlockSize=0]  {number}\r\n * @param [options.compute_signature=null] {Function}\r\n * @param [options.encrypt_buffer] {Function}\r\n * @param [options.writeSequenceHeaderFunc=null] {Function}\r\n * @param [options.writeHeaderFunc] {Function}\r\n * @extends EventEmitter\r\n * @constructor\r\n */\r\nexport class ChunkManager extends EventEmitter {\r\n    chunkSize: any;\r\n    headerSize: any;\r\n    writeHeaderFunc: any;\r\n    sequenceHeaderSize: any;\r\n    writeSequenceHeaderFunc: any;\r\n    signatureLength: any;\r\n    compute_signature: any;\r\n    plainBlockSize: number;\r\n    cipherBlockSize: number;\r\n    maxBodySize: number;\r\n    encrypt_buffer: any;\r\n    maxBlock: number;\r\n    dataOffset: number;\r\n    chunk: ArrayBuffer;\r\n    chunkArray: Uint8Array;\r\n    cursor: number;\r\n    pending_chunk: ArrayBuffer;\r\n    dataEnd: any;\r\n/*    emit(arg0: any, arg1: any, arg2: any,arg3?: any): any {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n*/\r\n    constructor(options) {\r\n        super();\r\n        assert(argsIn(options, ChunkManager_options));\r\n        // { chunkSize : 32, headerSize : 10 ,signatureLength: 32 }\r\n        this.chunkSize = options.chunkSize;\r\n        this.headerSize = options.headerSize || 0;\r\n        if (this.headerSize) {\r\n            this.writeHeaderFunc = options.writeHeaderFunc;\r\n            assert('function' === typeof this.writeHeaderFunc);\r\n        }\r\n        this.sequenceHeaderSize = options.sequenceHeaderSize === undefined ? 8 : options.sequenceHeaderSize;\r\n        if (this.sequenceHeaderSize > 0) {\r\n            this.writeSequenceHeaderFunc = options.writeSequenceHeaderFunc;\r\n            assert('function' === typeof this.writeSequenceHeaderFunc);\r\n        }\r\n        this.signatureLength = options.signatureLength || 0;\r\n        this.compute_signature = options.compute_signature;\r\n        this.plainBlockSize = options.plainBlockSize || 0; // 256-14;\r\n        this.cipherBlockSize = options.cipherBlockSize || 0; // 256;\r\n        if (this.cipherBlockSize === 0) {\r\n            assert(this.plainBlockSize === 0);\r\n            // unencrypted block\r\n            this.maxBodySize = (this.chunkSize - this.headerSize - this.signatureLength - this.sequenceHeaderSize);\r\n        }\r\n        else {\r\n            assert(this.plainBlockSize !== 0);\r\n            // During encryption a block with a size equal to  PlainTextBlockSize  is processed to produce a block\r\n            // with size equal to  CipherTextBlockSize. These values depend on the encryption algorithm and may\r\n            // be the same.\r\n            this.encrypt_buffer = options.encrypt_buffer;\r\n            assert('function' === typeof this.encrypt_buffer);\r\n            // this is the formula proposed  by OPCUA\r\n            this.maxBodySize = this.plainBlockSize * Math.floor((this.chunkSize - this.headerSize - this.signatureLength - 1) / this.cipherBlockSize) - this.sequenceHeaderSize;\r\n            // this is the formula proposed  by ERN\r\n            this.maxBlock = Math.floor((this.chunkSize - this.headerSize) / this.cipherBlockSize);\r\n            this.maxBodySize = this.plainBlockSize * this.maxBlock - this.sequenceHeaderSize - this.signatureLength - 1;\r\n            if (this.plainBlockSize > 256) {\r\n                this.maxBodySize -= 1;\r\n            }\r\n        }\r\n        assert(this.maxBodySize > 0); // no space left to write data\r\n        // where the data starts in the block\r\n        this.dataOffset = this.headerSize + this.sequenceHeaderSize;\r\n        this.chunk = null;\r\n        this.chunkArray = null;\r\n        this.cursor = 0;\r\n        this.pending_chunk = null;\r\n    }\r\n    /**\r\n     * compute the signature of the chunk and append it at the end\r\n     * of the data block.\r\n     *\r\n     * @method _write_signature\r\n     * @private\r\n     */\r\n    _write_signature(chunk) {\r\n        if (this.compute_signature) {\r\n            assert('function' === typeof (this.compute_signature));\r\n            assert(this.signatureLength !== 0);\r\n            var signature_start = this.dataEnd;\r\n            var section_to_sign = chunk.slice(0, signature_start);\r\n            var signature = this.compute_signature(section_to_sign);\r\n            assert(signature.length === this.signatureLength);\r\n            signature.copy(chunk, signature_start);\r\n        }\r\n        else {\r\n            assert(this.signatureLength === 0, \"expecting NO SIGN\");\r\n        }\r\n    }\r\n    _encrypt(chunk) {\r\n        if (this.plainBlockSize > 0) {\r\n            var startEncryptionPos = this.headerSize;\r\n            var endEncryptionPos = this.dataEnd + this.signatureLength;\r\n            var area_to_encrypt = chunk.slice(startEncryptionPos, endEncryptionPos);\r\n            assert(area_to_encrypt.length % this.plainBlockSize === 0); // padding should have been applied\r\n            var nbBlock = area_to_encrypt.length / this.plainBlockSize;\r\n            var encrypted_buf = this.encrypt_buffer(area_to_encrypt);\r\n            assert(encrypted_buf.length % this.cipherBlockSize === 0);\r\n            assert(encrypted_buf.length === nbBlock * this.cipherBlockSize);\r\n            encrypted_buf.copy(chunk, this.headerSize, 0);\r\n        }\r\n    }\r\n    _push_pending_chunk(isLast) {\r\n        if (this.pending_chunk) {\r\n            var expected_length = this.pending_chunk.byteLength;\r\n            if (this.headerSize > 0) {\r\n                // Release 1.02  39  OPC Unified Architecture, Part 6:\r\n                // The sequence header ensures that the first  encrypted block of every  Message  sent over\r\n                // a channel will start with different data.\r\n                this.writeHeaderFunc(new DataView(this.pending_chunk,0,this.headerSize),isLast, expected_length);\r\n            }\r\n            if (this.sequenceHeaderSize > 0) {\r\n                this.writeSequenceHeaderFunc(new DataView(this.pending_chunk,this.headerSize,/* this.headerSize + */this.sequenceHeaderSize));\r\n            }\r\n            this._write_signature(this.pending_chunk);\r\n            this._encrypt(this.pending_chunk);\r\n            /**\r\n             * @event chunk\r\n             * @param chunk {Buffer}\r\n             * @param isLast {Boolean} , true if final chunk\r\n             */\r\n            this.emit(\"chunk\", this.pending_chunk, isLast);\r\n            this.pending_chunk = null;\r\n        }\r\n    }\r\n    /**\r\n     * @method write\r\n     * @param buffer {Buffer}\r\n     * @param length {Number}\r\n     */\r\n    write(buffer : ArrayBuffer, length : number) {\r\n        length = length || buffer.byteLength;\r\n        assert(buffer instanceof ArrayBuffer || (buffer === null));\r\n        assert(length > 0);\r\n        var l = length;\r\n        var input_cursor = 0;\r\n        this.chunk = this.chunk || new ArrayBuffer(this.chunkSize);\r\n        this.chunkArray = this.chunkArray || new Uint8Array(this.chunk);\r\n\r\n        while (l > 0) {\r\n            assert(length - input_cursor !== 0);\r\n            if (this.cursor === 0) {\r\n                this._push_pending_chunk(false);\r\n            }\r\n            // space left in current chunk\r\n            var space_left = this.maxBodySize - this.cursor;\r\n            var nb_to_write = Math.min(length - input_cursor, space_left);\r\n            if (buffer) {\r\n            \r\n                let arrBuffer = new Uint8Array(buffer,input_cursor,input_cursor + nb_to_write)\r\n                this.chunkArray.set(arrBuffer,this.cursor + this.dataOffset);\r\n                //buffer.copy(this.chunk, this.cursor + this.dataOffset, input_cursor, input_cursor + nb_to_write);\r\n            }\r\n            input_cursor += nb_to_write;\r\n            this.cursor += nb_to_write;\r\n            if (this.cursor >= this.maxBodySize) {\r\n                this._postprocess_current_chunk();\r\n            }\r\n            l -= nb_to_write;\r\n        }\r\n    }\r\n    _write_padding_bytes(nbPaddingByteTotal) {\r\n        var nbPaddingByte = nbPaddingByteTotal % 256;\r\n        var extraNbPaddingByte = Math.floor(nbPaddingByteTotal / 256);\r\n        assert(extraNbPaddingByte === 0 || this.plainBlockSize > 256, \"extraNbPaddingByte only requested when key size > 2048\");\r\n        // write the padding byte\r\n        this.chunk[this.cursor + this.dataOffset]=nbPaddingByte;\r\n        //this.chunk.writeUInt8(nbPaddingByte, this.cursor + this.dataOffset);\r\n        this.cursor += 1;\r\n        for (var i = 0; i < nbPaddingByteTotal; i++) {\r\n            this.chunk[this.cursor + this.dataOffset + i] = nbPaddingByte;\r\n        }\r\n        this.cursor += nbPaddingByteTotal;\r\n        if (this.plainBlockSize > 256) {\r\n            this.chunk[this.cursor + this.dataOffset] =extraNbPaddingByte;\r\n            this.cursor += 1;\r\n        }\r\n    }\r\n    _postprocess_current_chunk() {\r\n        var extra_encryption_bytes = 0;\r\n        // add padding bytes if needed\r\n        if (this.plainBlockSize > 0) {\r\n            // write padding ( if encryption )\r\n            // let's calculatee curLength = the length of the block to encrypt without padding yet\r\n            // +---------------+---------------+-------------+---------+--------------+------------+\r\n            // |SequenceHeader | data          | paddingByte | padding | extraPadding | signature  |\r\n            // +---------------+---------------+-------------+---------+--------------+------------+\r\n            var curLength = this.sequenceHeaderSize + this.cursor + this.signatureLength;\r\n            if (this.plainBlockSize > 256) {\r\n                curLength += 2; // account for extraPadding Byte Number;\r\n            }\r\n            else {\r\n                curLength += 1;\r\n            }\r\n            // let's calculate the required number of padding bytes\r\n            var n = (curLength % this.plainBlockSize);\r\n            var nbPaddingByteTotal = (this.plainBlockSize - n) % this.plainBlockSize;\r\n            this._write_padding_bytes(nbPaddingByteTotal);\r\n            var adjustedLength = this.sequenceHeaderSize + this.cursor + this.signatureLength;\r\n            assert(adjustedLength % this.plainBlockSize === 0);\r\n            var nbBlock = adjustedLength / this.plainBlockSize;\r\n            extra_encryption_bytes = nbBlock * (this.cipherBlockSize - this.plainBlockSize);\r\n        }\r\n        this.dataEnd = this.dataOffset + this.cursor;\r\n        // calculate the expected length of the chunk, once encrypted if encryption apply\r\n        var expected_length = this.dataEnd + this.signatureLength + extra_encryption_bytes;\r\n        this.pending_chunk = this.chunk.slice(0, expected_length);\r\n        // note :\r\n        //  - this.pending_chunk has the correct size but is not signed nor encrypted yet\r\n        //    as we don't know what to write in the header yet\r\n        //  - as a result,\r\n        this.chunk = null;\r\n        this.chunkArray = null;\r\n        this.cursor = 0;\r\n    }\r\n    /**\r\n     * @method end\r\n     */\r\n    end() {\r\n        if (this.cursor > 0) {\r\n            this._postprocess_current_chunk();\r\n        }\r\n        this._push_pending_chunk(true);\r\n    }\r\n}\r\n","\n\nimport * as ec from '../basic-types';\nimport {RelativePath} from './RelativePath';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBrowsePath {\n\t\tstartingNode? : ec.NodeId;\n\t\trelativePath? : RelativePath;\n}\n\n/**\nA request to translate a path into a node id.\n*/\n\nexport class BrowsePath {\n \t\tstartingNode : ec.NodeId;\n\t\trelativePath : RelativePath;\n\n\tconstructor(\toptions? : IBrowsePath) { \n\t\toptions = options || {};\n\t\tthis.startingNode= (options.startingNode) ? options.startingNode:null;\n\t\tthis.relativePath= (options.relativePath) ? options.relativePath:new RelativePath();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.startingNode,out);\n\t\tthis.relativePath.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.startingNode = ec.decodeNodeId(inp);\n\t\tthis.relativePath.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : BrowsePath) : BrowsePath { \n\t\tif(!target) {\n\t\t\ttarget = new BrowsePath();\n\t\t}\n\t\ttarget.startingNode = this.startingNode;\n\t\tif (this.relativePath) { target.relativePath = this.relativePath.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBrowsePath(\tinp : DataStream) : BrowsePath { \n\t\tlet obj = new BrowsePath();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BrowsePath\",BrowsePath, makeExpandedNodeId(545,0));","\"use strict\";\r\n/*=\r\n * Release 1.03 page 152 OPC Unified Architecture, Part 4\r\n * Annex A (informative) BNF definitions\r\n * BNF for RelativePath\r\n */\r\n\r\nimport {assert} from \"../assert\";\r\n\r\nimport {resolveNodeId} from \"../nodeid/nodeid\";\r\nimport {QualifiedName} from \"../generated/QualifiedName\";\r\nimport {RelativePath, IRelativePath} from \"../generated/RelativePath\";\r\nimport { RelativePathElement } from \"../generated/RelativePathElement\";\r\n\r\n/*\r\n\r\n “/2:Block&.Output”  Follows any forward hierarchical Reference with target BrowseName = “2:Block.Output”.\r\n\r\n “/3:Truck.0:NodeVersion”\r\n Follows any forward hierarchical Reference with target BrowseName = “3:Truck” and from there a forward\r\n Aggregates Reference to a target with BrowseName “0:NodeVersion”.\r\n\r\n “<1:ConnectedTo>1:Boiler/1:HeatSensor”\r\n Follows any forward Reference with a BrowseName = ‘1:ConnectedTo’ and\r\n finds targets with BrowseName = ‘1:Boiler’. From there follows any hierarchical\r\n Reference and find targets with BrowseName = ‘1:HeatSensor’.\r\n\r\n\r\n “<1:ConnectedTo>1:Boiler/”\r\n Follows any forward Reference with a BrowseName = ‘1:ConnectedTo’ and finds targets\r\n with BrowseName = ‘1:Boiler’. From there it finds all targets of hierarchical References.\r\n\r\n “<0:HasChild>2:Wheel”\r\n Follows any forward Reference with a BrowseName = ‘HasChild’ and qualified\r\n with the default OPC UA namespace. Then find targets with BrowseName =\r\n ‘Wheel’ qualified with namespace index ‘2’.\r\n\r\n “<!HasChild>Truck”\r\n Follows any inverse Reference with a BrowseName = ‘HasChild’. Then find targets with BrowseName = ‘Truck’.\r\n In both cases, the namespace component of the BrowseName is assumed to be 0.\r\n\r\n “<0:HasChild>”\r\n Finds all targets of forward References with a BrowseName = ‘HasChild’\r\n and qualified with the default OPC UA namespace.\r\n */\r\n\r\n/*\r\n *   /                      The forward slash character indicates that the Server is to follow\r\n *                          any subtype of HierarchicalReferences.\r\n *   .                      The period (dot) character indicates that the Server is to follow\r\n *                          any subtype of a Aggregates ReferenceType.\r\n *  <[#!ns:]ReferenceType>\r\n *                          A string delimited by the ‘<’ and ‘>’ symbols specifies the BrowseName\r\n *                          of a ReferenceType to follow. By default, any References of the subtypes\r\n *                          the ReferenceType are followed as well. A ‘#’ placed in front of the BrowseName\r\n *                          indicates that subtypes should not be followed.\r\n *                          A ‘!’ in front of the BrowseName is used to indicate that the inverse Reference\r\n *                          should be followed.\r\n *                          The BrowseName may be qualified with a namespace index (indicated by a numeric\r\n *                          prefix followed by a colon). This namespace index is used specify the namespace\r\n *                          component of the BrowseName for the ReferenceType. If the namespace prefix is\r\n *                          omitted then namespace index 0 is used.\r\n */\r\n\r\nvar hierarchicalReferenceTypeNodeId = resolveNodeId(\"HierarchicalReferences\");\r\nvar aggregatesReferenceTypeNodeId = resolveNodeId(\"Aggregates\");\r\n\r\n\r\n\r\n\r\n//  The following BNF describes the syntax of the RelativePath text format.\r\n//  <relative-path> ::= <reference-type> <browse-name> [relative-path]\r\n//  <reference-type> ::= '/' | '.' | '<' ['#'] ['!'] <browse-name> '>'\r\n//  <browse-name> ::= [<namespace-index> ':'] <name>\r\n//  <namespace-index> ::= <digit> [<digit>]\r\n//  <digit> ::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' | '9'\r\n//  <name>  ::= (<name-char> | '&' <reserved-char>) [<name>]\r\n//  <reserved-char> ::= '/' | '.' | '<' | '>' | ':' | '#' | '!' | '&'\r\n//  <name-char> ::= All valid characters for a String (see Part 3) excluding reserved-chars.\r\n//\r\nvar name_char = /[^/\\.<>:#!&]/;\r\nvar reserved_char = /[/\\.<>:#!&]/;\r\nvar regName = new RegExp( \"(\" + name_char.source + \"|(\\&\" + reserved_char.source +\"))+\");\r\nvar regNamespaceIndex = /[0-9]+/;\r\nvar regBrowseName = new RegExp(\"(\"+ regNamespaceIndex.source +\":)?(\" + regName.source+\")\");\r\nvar regReferenceType = new RegExp(\"\\/|\\\\.|(\\<(\\#)?(\\!)?(\"+ regBrowseName.source +\")\\>)\");\r\n\r\nvar regRelativePath = new RegExp(\"(\"+regReferenceType.source+\")(\"+regBrowseName.source+\")?\");\r\nfunction unescape(str) {\r\n    return str.replace(/&/g,\"\");\r\n}\r\nfunction makeQualifiedName(mm) {\r\n    var strName = mm[10];\r\n    if (!strName || strName.length===0) {\r\n        return new QualifiedName();\r\n    }\r\n    var namespaceIndex = mm[11] ? parseInt(mm[11]) : 0 ;\r\n    var name = unescape(mm[12]);\r\n    return  new QualifiedName({namespaceIndex: namespaceIndex,name: name});\r\n}\r\n\r\n/**\r\n * construct a RelativePath from a string containing the relative path description.\r\n * The string must comply to the OPCUA BNF for RelativePath ( see part 4 - Annexe A)\r\n * @method makeRelativePath\r\n * @param str {String}\r\n * @param addressSpace {AddressSpace}\r\n * @return {RelativePath}\r\n *\r\n * @example:\r\n *\r\n *      var relativePath = makeRelativePath(\"/Server.ServerStatus.CurrentTime\");\r\n *\r\n */\r\nexport function makeRelativePath(str: string,addressSpace?): RelativePath {\r\n\r\n\r\n    \r\n    let r = new RelativePath({ elements : []});\r\n\r\n    while (str.length>0) {\r\n\r\n        var matches = str.match(regRelativePath);\r\n        if (!matches) {\r\n            throw new Error(\"Malformed relative path  :'\" + str +\"'\");\r\n        }\r\n        // console.log(mm);\r\n\r\n        var referenceTypeId,includeSubtypes,isInverse;\r\n\r\n        //\r\n        // ------------ extract reference type\r\n        //\r\n        var refStr = matches[1];\r\n        if (refStr === \"/\" ) {\r\n\r\n            referenceTypeId= hierarchicalReferenceTypeNodeId;\r\n            isInverse= false;\r\n            includeSubtypes= true;\r\n        }else if (refStr === \".\" ) {\r\n\r\n            referenceTypeId= aggregatesReferenceTypeNodeId;\r\n            isInverse= false;\r\n            includeSubtypes= true;\r\n        } else {\r\n\r\n            // match  3 =>    \"#\" or null\r\n            includeSubtypes = (matches[3] !== \"#\");\r\n\r\n            // match  4 =>    \"!\" or null\r\n            isInverse = (matches[4] === \"!\");\r\n\r\n            // match 5\r\n            // namespace match 6 ( ns:)\r\n            // name      match 7\r\n            var ns = matches[6] ? parseInt(matches[6]) :0;\r\n            var name = matches[7];\r\n            if ( !matches[6] ) {\r\n                //xx console.log( mm[6])\r\n                referenceTypeId = resolveNodeId(name);\r\n\r\n            } else {\r\n                // AddressSpace.prototype.findReferenceType = function (refType,namespace)\r\n                referenceTypeId = addressSpace.findReferenceType(name,ns);\r\n            }\r\n            assert(referenceTypeId && !referenceTypeId.isEmpty());\r\n        }\r\n\r\n        r.elements.push(new RelativePathElement({\r\n            referenceTypeId: referenceTypeId,\r\n            isInverse: isInverse,\r\n            includeSubtypes: includeSubtypes,\r\n            targetName: makeQualifiedName(matches)\r\n        }));\r\n\r\n        str = str.substr(matches[0].length);\r\n    }\r\n\r\n\r\n    return new RelativePath(r);\r\n        //xx console.log(r.toString());\r\n}\r\n","\"use strict\";\r\n\r\nimport {BrowsePath} from '../generated/BrowsePath';\r\nimport {makeRelativePath} from './make_relative_path';\r\nimport {resolveNodeId} from '../nodeid/nodeid';\r\n\r\nfunction _get_nodeId(node) {\r\n    if (node.nodeId) {\r\n        return node.nodeId;\r\n    }\r\n    return resolveNodeId(node);\r\n}\r\n\r\nexport function makeBrowsePath(rootNode,relativePathBNF) {\r\n    return new BrowsePath({\r\n        startingNode: _get_nodeId(rootNode),\r\n        relativePath: makeRelativePath(relativePathBNF)\r\n    });\r\n}\r\n","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n * @class ToolBrowsePath\r\n *\r\n * @static\r\n */\r\n\r\nimport {BrowsePath} from '../generated/BrowsePath';\r\nimport {makeNodeId} from '../nodeid/nodeid';\r\nimport {ReferenceTypeIds} from '../constants';\r\nimport { RelativePath} from '../generated/RelativePath';\r\nimport { RelativePathElement } from '../generated/RelativePathElement';\r\n\r\nvar hierarchicalReferencesId = makeNodeId(ReferenceTypeIds.HierarchicalReferences);\r\n\r\n\r\nexport {stringToQualifiedName} from '../data-model/';\r\n/**\r\n * @method constructBrowsePathFromQualifiedName\r\n * @param startingNode\r\n * @param browsePath\r\n * @return {number|*|BrowsePath}\r\n */\r\nexport function constructBrowsePathFromQualifiedName(startingNode, browsePath) {\r\n\r\n    browsePath = browsePath || [];\r\n    \r\n    var elements : RelativePathElement[] = browsePath.map(function (targetName) {\r\n        return {\r\n            referenceTypeId: hierarchicalReferencesId,\r\n            isInverse: false,\r\n            includeSubtypes: true,\r\n            targetName: targetName\r\n        };\r\n    });\r\n\r\n    browsePath = new BrowsePath({\r\n        startingNode: startingNode.nodeId, // ROOT\r\n        relativePath: new RelativePath({\r\n            elements: elements,\r\n        })\r\n    });\r\n    return browsePath;\r\n}\r\n\r\n\r\n","\n\nimport {RequestHeader} from './RequestHeader';\nimport {BrowsePath} from './BrowsePath';\nimport {decodeBrowsePath} from './BrowsePath';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ITranslateBrowsePathsToNodeIdsRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tbrowsePaths? : BrowsePath[];\n}\n\n/**\nTranslates one or more paths in the server address space.\n*/\n\nexport class TranslateBrowsePathsToNodeIdsRequest {\n \t\trequestHeader : RequestHeader;\n\t\tbrowsePaths : BrowsePath[];\n\n\tconstructor(\toptions? : ITranslateBrowsePathsToNodeIdsRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.browsePaths= (options.browsePaths) ? options.browsePaths:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeArray(this.browsePaths,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.browsePaths = ec.decodeArray(inp,decodeBrowsePath);\n\n\t}\n\n\n\tclone(\ttarget? : TranslateBrowsePathsToNodeIdsRequest) : TranslateBrowsePathsToNodeIdsRequest { \n\t\tif(!target) {\n\t\t\ttarget = new TranslateBrowsePathsToNodeIdsRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\tif (this.browsePaths) { target.browsePaths = ec.cloneComplexArray(this.browsePaths);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeTranslateBrowsePathsToNodeIdsRequest(\tinp : DataStream) : TranslateBrowsePathsToNodeIdsRequest { \n\t\tlet obj = new TranslateBrowsePathsToNodeIdsRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"TranslateBrowsePathsToNodeIdsRequest\",TranslateBrowsePathsToNodeIdsRequest, makeExpandedNodeId(554,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBrowsePathTarget {\n\t\ttargetId? : ec.ExpandedNodeId;\n\t\tremainingPathIndex? : ec.UInt32;\n}\n\n/**\nThe target of the translated path.\n*/\n\nexport class BrowsePathTarget {\n \t\ttargetId : ec.ExpandedNodeId;\n\t\tremainingPathIndex : ec.UInt32;\n\n\tconstructor(\toptions? : IBrowsePathTarget) { \n\t\toptions = options || {};\n\t\tthis.targetId= (options.targetId) ? options.targetId:null;\n\t\tthis.remainingPathIndex= (options.remainingPathIndex) ? options.remainingPathIndex:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeExpandedNodeId(this.targetId,out);\n\t\tec.encodeUInt32(this.remainingPathIndex,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.targetId = ec.decodeExpandedNodeId(inp);\n\t\tthis.remainingPathIndex = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : BrowsePathTarget) : BrowsePathTarget { \n\t\tif(!target) {\n\t\t\ttarget = new BrowsePathTarget();\n\t\t}\n\t\ttarget.targetId = this.targetId;\n\t\ttarget.remainingPathIndex = this.remainingPathIndex;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBrowsePathTarget(\tinp : DataStream) : BrowsePathTarget { \n\t\tlet obj = new BrowsePathTarget();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BrowsePathTarget\",BrowsePathTarget, makeExpandedNodeId(548,0));","\n\nimport * as ec from '../basic-types';\nimport {BrowsePathTarget} from './BrowsePathTarget';\nimport {decodeBrowsePathTarget} from './BrowsePathTarget';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBrowsePathResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\ttargets? : BrowsePathTarget[];\n}\n\n/**\nThe result of a translate opearation.\n*/\n\nexport class BrowsePathResult {\n \t\tstatusCode : ec.StatusCode;\n\t\ttargets : BrowsePathTarget[];\n\n\tconstructor(\toptions? : IBrowsePathResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.targets= (options.targets) ? options.targets:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeArray(this.targets,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.targets = ec.decodeArray(inp,decodeBrowsePathTarget);\n\n\t}\n\n\n\tclone(\ttarget? : BrowsePathResult) : BrowsePathResult { \n\t\tif(!target) {\n\t\t\ttarget = new BrowsePathResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\tif (this.targets) { target.targets = ec.cloneComplexArray(this.targets);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBrowsePathResult(\tinp : DataStream) : BrowsePathResult { \n\t\tlet obj = new BrowsePathResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BrowsePathResult\",BrowsePathResult, makeExpandedNodeId(551,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {BrowsePathResult} from './BrowsePathResult';\nimport {decodeBrowsePathResult} from './BrowsePathResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ITranslateBrowsePathsToNodeIdsResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : BrowsePathResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\nTranslates one or more paths in the server address space.\n*/\n\nexport class TranslateBrowsePathsToNodeIdsResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : BrowsePathResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : ITranslateBrowsePathsToNodeIdsResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeBrowsePathResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : TranslateBrowsePathsToNodeIdsResponse) : TranslateBrowsePathsToNodeIdsResponse { \n\t\tif(!target) {\n\t\t\ttarget = new TranslateBrowsePathsToNodeIdsResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeTranslateBrowsePathsToNodeIdsResponse(\tinp : DataStream) : TranslateBrowsePathsToNodeIdsResponse { \n\t\tlet obj = new TranslateBrowsePathsToNodeIdsResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"TranslateBrowsePathsToNodeIdsResponse\",TranslateBrowsePathsToNodeIdsResponse, makeExpandedNodeId(557,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISignatureData {\n\t\talgorithm? : string;\n\t\tsignature? : Uint8Array;\n}\n\n/**\nA digital signature.\n*/\n\nexport class SignatureData {\n \t\talgorithm : string;\n\t\tsignature : Uint8Array;\n\n\tconstructor(\toptions? : ISignatureData) { \n\t\toptions = options || {};\n\t\tthis.algorithm= (options.algorithm) ? options.algorithm:null;\n\t\tthis.signature= (options.signature) ? options.signature:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.algorithm,out);\n\t\tec.encodeByteString(this.signature,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.algorithm = ec.decodeString(inp);\n\t\tthis.signature = ec.decodeByteString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : SignatureData) : SignatureData { \n\t\tif(!target) {\n\t\t\ttarget = new SignatureData();\n\t\t}\n\t\ttarget.algorithm = this.algorithm;\n\t\ttarget.signature = this.signature;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSignatureData(\tinp : DataStream) : SignatureData { \n\t\tlet obj = new SignatureData();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SignatureData\",SignatureData, makeExpandedNodeId(458,0));","\"use strict\";\r\nimport {assert} from '../assert';\r\nimport {DataStream} from '../basic-types/DataStream';\r\n\r\nimport {TCPErrorMessage} from \"./TCPErrorMessage\";\r\nimport {readMessageHeader} from \"../chunkmanager\";\r\n\r\nfunction is_valid_msg_type(msgType) {\r\n    assert([\"HEL\", \"ACK\", \"ERR\",   // Connection Layer\r\n        \"OPN\", \"MSG\", \"CLO\"    // OPC Unified Architecture, Part 6 page 36\r\n    ].indexOf(msgType) >= 0, \"invalid message type  \" + msgType);\r\n    return true;\r\n}\r\n\r\n\r\nexport function decodeMessage(stream : DataStream, ClassName) {\r\n\r\n    assert(stream instanceof DataStream);\r\n    assert(ClassName instanceof Function, \" expecting a function for \" + ClassName);\r\n\r\n    var header = readMessageHeader(stream);\r\n    //assert(stream.length === 8); //TODO: check this stream length?\r\n\r\n    var obj;\r\n    if (header.msgType === \"ERR\") {\r\n        //xx console.log(\" received an error\");\r\n        obj = new TCPErrorMessage();\r\n        obj.decode(stream);\r\n        return obj;\r\n    } else {\r\n        obj = new ClassName();\r\n        obj.decode(stream);\r\n        return obj;\r\n    }\r\n}\r\n\r\n\r\n\r\nexport function packTcpMessage(msgType, encodableObject) {\r\n\r\n    assert(is_valid_msg_type(msgType));\r\n\r\n    var messageChunk = new ArrayBuffer(DataStream.binaryStoreSize(encodableObject) + 8);\r\n    // encode encodeableObject in a packet\r\n    var stream = new DataStream(messageChunk);\r\n    encodeMessage(msgType, encodableObject, stream);\r\n\r\n    return messageChunk;\r\n\r\n}\r\n\r\n// opc.tcp://xleuri11022:51210/UA/SampleServer\r\nexport function parseEndpointUrl(endpointUrl : string) {\r\n\r\n    var r = /^([a-z.]*):\\/\\/([a-zA-Z\\_\\-\\.\\-0-9]*):([0-9]*)(\\/.*){0,1}/;\r\n\r\n    var matches = r.exec(endpointUrl);\r\n\r\n    if(!matches) {\r\n        throw new Error(\"Invalid endpoint url \" + endpointUrl);\r\n    }\r\n    return {\r\n        protocol: matches[1],\r\n        hostname: matches[2],\r\n        port: parseInt(matches[3], 10),\r\n        address: matches[4] || \"\"\r\n    };\r\n}\r\nexport function is_valid_endpointUrl(endpointUrl) {\r\n    var e = parseEndpointUrl(endpointUrl);\r\n    return e.hasOwnProperty(\"hostname\");\r\n}\r\n\r\n\r\n/**\r\n * @method encodeMessage\r\n * @type {{\r\n *     msgType: String,\r\n *     messageContent: Object,\r\n *     binaryStream: BinaryStream\r\n * }}\r\n */\r\n\r\nexport function writeTCPMessageHeader(msgType, chunkType, total_length, stream) {\r\n\r\n    if (stream instanceof ArrayBuffer) {\r\n        stream = new DataStream(stream);\r\n    }\r\n    assert(is_valid_msg_type(msgType));\r\n    assert([\"A\", \"F\", \"C\"].indexOf(chunkType) !== -1);\r\n\r\n    stream.setUint8(msgType.charCodeAt(0));\r\n    stream.setUint8(msgType.charCodeAt(1));\r\n    stream.setUint8(msgType.charCodeAt(2));\r\n    // Chunk type\r\n    stream.setUint8(chunkType.charCodeAt(0)); // reserved\r\n\r\n    stream.setUint32(total_length);\r\n}\r\n\r\nvar encodeMessage = function (msgType, messageContent, stream) {\r\n\r\n    //the length of the message, in bytes. (includes the 8 bytes of the message header)\r\n    var total_length = DataStream.binaryStoreSize(messageContent) + 8;\r\n\r\n    writeTCPMessageHeader(msgType, \"F\", total_length, stream);\r\n    messageContent.encode(stream);\r\n    assert(total_length === stream.length, \"invalid message size\");\r\n};\r\n\r\n","/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nexport default noop;\n","// this file has been automatically generated\n// using schema_parser/generate_node_ids.ts\n export var DataTypeIds = { \n Boolean: 1,\n SByte: 2,\n Byte: 3,\n Int16: 4,\n UInt16: 5,\n Int32: 6,\n UInt32: 7,\n Int64: 8,\n UInt64: 9,\n Float: 10,\n Double: 11,\n String: 12,\n DateTime: 13,\n Guid: 14,\n ByteString: 15,\n XmlElement: 16,\n NodeId: 17,\n ExpandedNodeId: 18,\n StatusCode: 19,\n QualifiedName: 20,\n LocalizedText: 21,\n Structure: 22,\n DataValue: 23,\n BaseDataType: 24,\n DiagnosticInfo: 25,\n Number: 26,\n Integer: 27,\n UInteger: 28,\n Enumeration: 29,\n Image: 30,\n Decimal: 50,\n PermissionType: 94,\n AccessRestrictionType: 95,\n RolePermissionType: 96,\n DataTypeDefinition: 97,\n StructureType: 98,\n StructureDefinition: 99,\n EnumDefinition: 100,\n StructureField: 101,\n EnumField: 102,\n NamingRuleType: 120,\n IdType: 256,\n NodeClass: 257,\n Node: 258,\n ObjectNode: 261,\n ObjectTypeNode: 264,\n VariableNode: 267,\n VariableTypeNode: 270,\n ReferenceTypeNode: 273,\n MethodNode: 276,\n ViewNode: 279,\n DataTypeNode: 282,\n ReferenceNode: 285,\n IntegerId: 288,\n Counter: 289,\n Duration: 290,\n NumericRange: 291,\n Time: 292,\n Date: 293,\n UtcTime: 294,\n LocaleId: 295,\n Argument: 296,\n StatusResult: 299,\n MessageSecurityMode: 302,\n UserTokenType: 303,\n UserTokenPolicy: 304,\n ApplicationType: 307,\n ApplicationDescription: 308,\n ApplicationInstanceCertificate: 311,\n EndpointDescription: 312,\n SecurityTokenRequestType: 315,\n UserIdentityToken: 316,\n AnonymousIdentityToken: 319,\n UserNameIdentityToken: 322,\n X509IdentityToken: 325,\n EndpointConfiguration: 331,\n BuildInfo: 338,\n SignedSoftwareCertificate: 344,\n AttributeWriteMask: 347,\n NodeAttributesMask: 348,\n NodeAttributes: 349,\n ObjectAttributes: 352,\n VariableAttributes: 355,\n MethodAttributes: 358,\n ObjectTypeAttributes: 361,\n VariableTypeAttributes: 364,\n ReferenceTypeAttributes: 367,\n DataTypeAttributes: 370,\n ViewAttributes: 373,\n AddNodesItem: 376,\n AddReferencesItem: 379,\n DeleteNodesItem: 382,\n DeleteReferencesItem: 385,\n SessionAuthenticationToken: 388,\n RequestHeader: 389,\n ResponseHeader: 392,\n ServiceFault: 395,\n FindServersRequest: 420,\n FindServersResponse: 423,\n GetEndpointsRequest: 426,\n GetEndpointsResponse: 429,\n RegisteredServer: 432,\n RegisterServerRequest: 435,\n RegisterServerResponse: 438,\n ChannelSecurityToken: 441,\n OpenSecureChannelRequest: 444,\n OpenSecureChannelResponse: 447,\n CloseSecureChannelRequest: 450,\n CloseSecureChannelResponse: 453,\n SignatureData: 456,\n CreateSessionRequest: 459,\n CreateSessionResponse: 462,\n ActivateSessionRequest: 465,\n ActivateSessionResponse: 468,\n CloseSessionRequest: 471,\n CloseSessionResponse: 474,\n CancelRequest: 477,\n CancelResponse: 480,\n AddNodesResult: 483,\n AddNodesRequest: 486,\n AddNodesResponse: 489,\n AddReferencesRequest: 492,\n AddReferencesResponse: 495,\n DeleteNodesRequest: 498,\n DeleteNodesResponse: 501,\n DeleteReferencesRequest: 504,\n DeleteReferencesResponse: 507,\n BrowseDirection: 510,\n ViewDescription: 511,\n BrowseDescription: 514,\n BrowseResultMask: 517,\n ReferenceDescription: 518,\n ContinuationPoint: 521,\n BrowseResult: 522,\n BrowseRequest: 525,\n BrowseResponse: 528,\n BrowseNextRequest: 531,\n BrowseNextResponse: 534,\n RelativePathElement: 537,\n RelativePath: 540,\n BrowsePath: 543,\n BrowsePathTarget: 546,\n BrowsePathResult: 549,\n TranslateBrowsePathsToNodeIdsRequest: 552,\n TranslateBrowsePathsToNodeIdsResponse: 555,\n RegisterNodesRequest: 558,\n RegisterNodesResponse: 561,\n UnregisterNodesRequest: 564,\n UnregisterNodesResponse: 567,\n QueryDataDescription: 570,\n NodeTypeDescription: 573,\n FilterOperator: 576,\n QueryDataSet: 577,\n NodeReference: 580,\n ContentFilterElement: 583,\n ContentFilter: 586,\n FilterOperand: 589,\n ElementOperand: 592,\n LiteralOperand: 595,\n AttributeOperand: 598,\n SimpleAttributeOperand: 601,\n ContentFilterElementResult: 604,\n ContentFilterResult: 607,\n ParsingResult: 610,\n QueryFirstRequest: 613,\n QueryFirstResponse: 616,\n QueryNextRequest: 619,\n QueryNextResponse: 622,\n TimestampsToReturn: 625,\n ReadValueId: 626,\n ReadRequest: 629,\n ReadResponse: 632,\n HistoryReadValueId: 635,\n HistoryReadResult: 638,\n HistoryReadDetails: 641,\n ReadEventDetails: 644,\n ReadRawModifiedDetails: 647,\n ReadProcessedDetails: 650,\n ReadAtTimeDetails: 653,\n HistoryData: 656,\n HistoryEvent: 659,\n HistoryReadRequest: 662,\n HistoryReadResponse: 665,\n WriteValue: 668,\n WriteRequest: 671,\n WriteResponse: 674,\n HistoryUpdateDetails: 677,\n UpdateDataDetails: 680,\n UpdateEventDetails: 683,\n DeleteRawModifiedDetails: 686,\n DeleteAtTimeDetails: 689,\n DeleteEventDetails: 692,\n HistoryUpdateResult: 695,\n HistoryUpdateRequest: 698,\n HistoryUpdateResponse: 701,\n CallMethodRequest: 704,\n CallMethodResult: 707,\n CallRequest: 710,\n CallResponse: 713,\n MonitoringMode: 716,\n DataChangeTrigger: 717,\n DeadbandType: 718,\n MonitoringFilter: 719,\n DataChangeFilter: 722,\n EventFilter: 725,\n AggregateFilter: 728,\n MonitoringFilterResult: 731,\n EventFilterResult: 734,\n AggregateFilterResult: 737,\n MonitoringParameters: 740,\n MonitoredItemCreateRequest: 743,\n MonitoredItemCreateResult: 746,\n CreateMonitoredItemsRequest: 749,\n CreateMonitoredItemsResponse: 752,\n MonitoredItemModifyRequest: 755,\n MonitoredItemModifyResult: 758,\n ModifyMonitoredItemsRequest: 761,\n ModifyMonitoredItemsResponse: 764,\n SetMonitoringModeRequest: 767,\n SetMonitoringModeResponse: 770,\n SetTriggeringRequest: 773,\n SetTriggeringResponse: 776,\n DeleteMonitoredItemsRequest: 779,\n DeleteMonitoredItemsResponse: 782,\n CreateSubscriptionRequest: 785,\n CreateSubscriptionResponse: 788,\n ModifySubscriptionRequest: 791,\n ModifySubscriptionResponse: 794,\n SetPublishingModeRequest: 797,\n SetPublishingModeResponse: 800,\n NotificationMessage: 803,\n MonitoredItemNotification: 806,\n DataChangeNotification: 809,\n StatusChangeNotification: 818,\n SubscriptionAcknowledgement: 821,\n PublishRequest: 824,\n PublishResponse: 827,\n RepublishRequest: 830,\n RepublishResponse: 833,\n TransferResult: 836,\n TransferSubscriptionsRequest: 839,\n TransferSubscriptionsResponse: 842,\n DeleteSubscriptionsRequest: 845,\n DeleteSubscriptionsResponse: 848,\n RedundancySupport: 851,\n ServerState: 852,\n RedundantServerDataType: 853,\n SamplingIntervalDiagnosticsDataType: 856,\n ServerDiagnosticsSummaryDataType: 859,\n ServerStatusDataType: 862,\n SessionDiagnosticsDataType: 865,\n SessionSecurityDiagnosticsDataType: 868,\n ServiceCounterDataType: 871,\n SubscriptionDiagnosticsDataType: 874,\n ModelChangeStructureDataType: 877,\n Range: 884,\n EUInformation: 887,\n ExceptionDeviationFormat: 890,\n Annotation: 891,\n ProgramDiagnosticDataType: 894,\n SemanticChangeStructureDataType: 897,\n EventNotificationList: 914,\n EventFieldList: 917,\n HistoryEventFieldList: 920,\n IssuedIdentityToken: 938,\n NotificationData: 945,\n AggregateConfiguration: 948,\n ImageBMP: 2000,\n ImageGIF: 2001,\n ImageJPG: 2002,\n ImagePNG: 2003,\n EnumValueType: 7594,\n TimeZoneDataType: 8912,\n ModificationInfo: 11216,\n HistoryModifiedData: 11217,\n HistoryUpdateType: 11234,\n PerformUpdateType: 11293,\n UpdateStructureDataDetails: 11295,\n BitFieldMaskDataType: 11737,\n InstanceNode: 11879,\n TypeNode: 11880,\n OpenFileMode: 11939,\n ModelChangeStructureVerbMask: 11941,\n EndpointUrlListDataType: 11943,\n NetworkGroupDataType: 11944,\n AxisScaleEnumeration: 12077,\n AxisInformation: 12079,\n XVType: 12080,\n ComplexNumberType: 12171,\n DoubleComplexNumberType: 12172,\n ServerOnNetwork: 12189,\n FindServersOnNetworkRequest: 12190,\n FindServersOnNetworkResponse: 12191,\n RegisterServer2Request: 12193,\n RegisterServer2Response: 12194,\n TrustListMasks: 12552,\n TrustListDataType: 12554,\n OptionSet: 12755,\n Union: 12756,\n NormalizedString: 12877,\n DecimalString: 12878,\n DurationString: 12879,\n TimeString: 12880,\n DateString: 12881,\n DiscoveryConfiguration: 12890,\n MdnsDiscoveryConfiguration: 12891,\n KeyValuePair: 14533,\n AccessLevelType: 15031,\n EventNotifierType: 15033,\n ProgramDiagnostic2DataType: 15396,\n AccessLevelExType: 15406,\n EndpointType: 15528,\n IdentityCriteriaType: 15632,\n IdentityMappingRuleType: 15634,\n SessionlessInvokeRequestType: 15901,\n AudioDataType: 16307,\n GenericAttributeValue: 17606,\n GenericAttributes: 17607,\n DecimalDataType: 17861,\n VersionTime: 20998,\n SessionlessInvokeResponseType: 20999\n};\n export var ReferenceTypeIds = { \n References: 31,\n NonHierarchicalReferences: 32,\n HierarchicalReferences: 33,\n HasChild: 34,\n Organizes: 35,\n HasEventSource: 36,\n HasModellingRule: 37,\n HasEncoding: 38,\n HasDescription: 39,\n HasTypeDefinition: 40,\n GeneratesEvent: 41,\n Aggregates: 44,\n HasSubtype: 45,\n HasProperty: 46,\n HasComponent: 47,\n HasNotifier: 48,\n HasOrderedComponent: 49,\n FromState: 51,\n ToState: 52,\n HasCause: 53,\n HasEffect: 54,\n HasHistoricalConfiguration: 56,\n HasSubStateMachine: 117,\n AlwaysGeneratesEvent: 3065,\n HasTrueSubState: 9004,\n HasFalseSubState: 9005,\n HasCondition: 9006,\n HasAlarmSuppressionGroup: 16361,\n AlarmGroupMember: 16362,\n HasEffectDisable: 17276,\n HasEffectEnable: 17983,\n HasEffectSuppressed: 17984,\n HasEffectUnsuppressed: 17985\n};\n export var ObjectTypeIds = { \n BaseObjectType: 58,\n FolderType: 61,\n DataTypeSystemType: 75,\n DataTypeEncodingType: 76,\n ModellingRuleType: 77,\n ServerType: 2004,\n ServerCapabilitiesType: 2013,\n ServerDiagnosticsType: 2020,\n SessionsDiagnosticsSummaryType: 2026,\n SessionDiagnosticsObjectType: 2029,\n VendorServerInfoType: 2033,\n ServerRedundancyType: 2034,\n TransparentRedundancyType: 2036,\n NonTransparentRedundancyType: 2039,\n BaseEventType: 2041,\n AuditEventType: 2052,\n AuditSecurityEventType: 2058,\n AuditChannelEventType: 2059,\n AuditOpenSecureChannelEventType: 2060,\n AuditSessionEventType: 2069,\n AuditCreateSessionEventType: 2071,\n AuditActivateSessionEventType: 2075,\n AuditCancelEventType: 2078,\n AuditCertificateEventType: 2080,\n AuditCertificateDataMismatchEventType: 2082,\n AuditCertificateExpiredEventType: 2085,\n AuditCertificateInvalidEventType: 2086,\n AuditCertificateUntrustedEventType: 2087,\n AuditCertificateRevokedEventType: 2088,\n AuditCertificateMismatchEventType: 2089,\n AuditNodeManagementEventType: 2090,\n AuditAddNodesEventType: 2091,\n AuditDeleteNodesEventType: 2093,\n AuditAddReferencesEventType: 2095,\n AuditDeleteReferencesEventType: 2097,\n AuditUpdateEventType: 2099,\n AuditWriteUpdateEventType: 2100,\n AuditHistoryUpdateEventType: 2104,\n AuditUpdateMethodEventType: 2127,\n SystemEventType: 2130,\n DeviceFailureEventType: 2131,\n BaseModelChangeEventType: 2132,\n GeneralModelChangeEventType: 2133,\n StateMachineType: 2299,\n StateType: 2307,\n InitialStateType: 2309,\n TransitionType: 2310,\n TransitionEventType: 2311,\n AuditUpdateStateEventType: 2315,\n HistoricalDataConfigurationType: 2318,\n HistoryServerCapabilitiesType: 2330,\n AggregateFunctionType: 2340,\n ProgramTransitionEventType: 2378,\n ProgramStateMachineType: 2391,\n SemanticChangeEventType: 2738,\n AuditUrlMismatchEventType: 2748,\n FiniteStateMachineType: 2771,\n ConditionType: 2782,\n RefreshStartEventType: 2787,\n RefreshEndEventType: 2788,\n RefreshRequiredEventType: 2789,\n AuditConditionEventType: 2790,\n AuditConditionEnableEventType: 2803,\n AuditConditionCommentEventType: 2829,\n DialogConditionType: 2830,\n AcknowledgeableConditionType: 2881,\n AlarmConditionType: 2915,\n ShelvedStateMachineType: 2929,\n LimitAlarmType: 2955,\n AuditHistoryEventUpdateEventType: 2999,\n AuditHistoryValueUpdateEventType: 3006,\n AuditHistoryDeleteEventType: 3012,\n AuditHistoryRawModifyDeleteEventType: 3014,\n AuditHistoryAtTimeDeleteEventType: 3019,\n AuditHistoryEventDeleteEventType: 3022,\n EventQueueOverflowEventType: 3035,\n ProgramTransitionAuditEventType: 3806,\n AuditConditionRespondEventType: 8927,\n AuditConditionAcknowledgeEventType: 8944,\n AuditConditionConfirmEventType: 8961,\n ExclusiveLimitStateMachineType: 9318,\n ExclusiveLimitAlarmType: 9341,\n ExclusiveLevelAlarmType: 9482,\n ExclusiveRateOfChangeAlarmType: 9623,\n ExclusiveDeviationAlarmType: 9764,\n NonExclusiveLimitAlarmType: 9906,\n NonExclusiveLevelAlarmType: 10060,\n NonExclusiveRateOfChangeAlarmType: 10214,\n NonExclusiveDeviationAlarmType: 10368,\n DiscreteAlarmType: 10523,\n OffNormalAlarmType: 10637,\n TripAlarmType: 10751,\n AuditConditionShelvingEventType: 11093,\n BaseConditionClassType: 11163,\n ProcessConditionClassType: 11164,\n MaintenanceConditionClassType: 11165,\n SystemConditionClassType: 11166,\n AggregateConfigurationType: 11187,\n ProgressEventType: 11436,\n SystemStatusChangeEventType: 11446,\n OperationLimitsType: 11564,\n FileType: 11575,\n AddressSpaceFileType: 11595,\n NamespaceMetadataType: 11616,\n NamespacesType: 11645,\n SystemOffNormalAlarmType: 11753,\n AuditProgramTransitionEventType: 11856,\n NonTransparentNetworkRedundancyType: 11945,\n TrustListType: 12522,\n CertificateGroupType: 12555,\n CertificateType: 12556,\n ApplicationCertificateType: 12557,\n HttpsCertificateType: 12558,\n RsaMinApplicationCertificateType: 12559,\n RsaSha256ApplicationCertificateType: 12560,\n TrustListUpdatedAuditEventType: 12561,\n ServerConfigurationType: 12581,\n CertificateUpdatedAuditEventType: 12620,\n CertificateExpirationAlarmType: 13225,\n FileDirectoryType: 13353,\n CertificateGroupFolderType: 13813,\n AuditConditionResetEventType: 15013,\n RoleSetType: 15607,\n RoleType: 15620,\n TemporaryFileTransferType: 15744,\n FileTransferStateMachineType: 15803,\n AlarmGroupType: 16405,\n DiscrepancyAlarmType: 17080,\n SafetyConditionClassType: 17218,\n HighlyManagedAlarmConditionClassType: 17219,\n TrainingConditionClassType: 17220,\n TestingConditionClassType: 17221,\n AuditConditionSuppressEventType: 17225,\n AuditConditionSilenceEventType: 17242,\n AuditConditionOutOfServiceEventType: 17259,\n AlarmMetricsType: 17279,\n RoleMappingRuleChangedAuditEventType: 17641,\n AuthorizationServiceConfigurationType: 17852,\n KeyCredentialConfigurationType: 18001,\n KeyCredentialAuditEventType: 18011,\n KeyCredentialUpdatedAuditEventType: 18029,\n KeyCredentialDeletedAuditEventType: 18047,\n InstrumentDiagnosticAlarmType: 18347,\n SystemDiagnosticAlarmType: 18496,\n StatisticalConditionClassType: 18665\n};\n export var VariableTypeIds = { \n BaseVariableType: 62,\n BaseDataVariableType: 63,\n PropertyType: 68,\n DataTypeDescriptionType: 69,\n DataTypeDictionaryType: 72,\n ServerVendorCapabilityType: 2137,\n ServerStatusType: 2138,\n ServerDiagnosticsSummaryType: 2150,\n SamplingIntervalDiagnosticsArrayType: 2164,\n SamplingIntervalDiagnosticsType: 2165,\n SubscriptionDiagnosticsArrayType: 2171,\n SubscriptionDiagnosticsType: 2172,\n SessionDiagnosticsArrayType: 2196,\n SessionDiagnosticsVariableType: 2197,\n SessionSecurityDiagnosticsArrayType: 2243,\n SessionSecurityDiagnosticsType: 2244,\n DataItemType: 2365,\n AnalogItemType: 2368,\n DiscreteItemType: 2372,\n TwoStateDiscreteType: 2373,\n MultiStateDiscreteType: 2376,\n ProgramDiagnosticType: 2380,\n StateVariableType: 2755,\n FiniteStateVariableType: 2760,\n TransitionVariableType: 2762,\n FiniteTransitionVariableType: 2767,\n BuildInfoType: 3051,\n TwoStateVariableType: 8995,\n ConditionVariableType: 9002,\n MultiStateValueDiscreteType: 11238,\n OptionSetType: 11487,\n ArrayItemType: 12021,\n YArrayItemType: 12029,\n XYArrayItemType: 12038,\n ImageItemType: 12047,\n CubeItemType: 12057,\n NDimensionArrayItemType: 12068,\n ProgramDiagnostic2Type: 15383,\n SelectionListType: 16309,\n AlarmRateVariableType: 17277,\n AudioVariableType: 17986\n};\n export var ObjectIds = { \n ModellingRule_Mandatory: 78,\n ModellingRule_MandatoryShared: 79,\n ModellingRule_Optional: 80,\n ModellingRule_ExposesItsArray: 83,\n RootFolder: 84,\n ObjectsFolder: 85,\n TypesFolder: 86,\n ViewsFolder: 87,\n ObjectTypesFolder: 88,\n VariableTypesFolder: 89,\n DataTypesFolder: 90,\n ReferenceTypesFolder: 91,\n XmlSchema_TypeSystem: 92,\n OPCBinarySchema_TypeSystem: 93,\n DataTypeDefinition_Encoding_DefaultBinary: 121,\n StructureDefinition_Encoding_DefaultBinary: 122,\n EnumDefinition_Encoding_DefaultBinary: 123,\n RolePermissionType_Encoding_DefaultBinary: 128,\n Node_Encoding_DefaultXml: 259,\n Node_Encoding_DefaultBinary: 260,\n ObjectNode_Encoding_DefaultXml: 262,\n ObjectNode_Encoding_DefaultBinary: 263,\n ObjectTypeNode_Encoding_DefaultXml: 265,\n ObjectTypeNode_Encoding_DefaultBinary: 266,\n VariableNode_Encoding_DefaultXml: 268,\n VariableNode_Encoding_DefaultBinary: 269,\n VariableTypeNode_Encoding_DefaultXml: 271,\n VariableTypeNode_Encoding_DefaultBinary: 272,\n ReferenceTypeNode_Encoding_DefaultXml: 274,\n ReferenceTypeNode_Encoding_DefaultBinary: 275,\n MethodNode_Encoding_DefaultXml: 277,\n MethodNode_Encoding_DefaultBinary: 278,\n ViewNode_Encoding_DefaultXml: 280,\n ViewNode_Encoding_DefaultBinary: 281,\n DataTypeNode_Encoding_DefaultXml: 283,\n DataTypeNode_Encoding_DefaultBinary: 284,\n ReferenceNode_Encoding_DefaultXml: 286,\n ReferenceNode_Encoding_DefaultBinary: 287,\n Argument_Encoding_DefaultXml: 297,\n Argument_Encoding_DefaultBinary: 298,\n StatusResult_Encoding_DefaultXml: 300,\n StatusResult_Encoding_DefaultBinary: 301,\n UserTokenPolicy_Encoding_DefaultXml: 305,\n UserTokenPolicy_Encoding_DefaultBinary: 306,\n ApplicationDescription_Encoding_DefaultXml: 309,\n ApplicationDescription_Encoding_DefaultBinary: 310,\n EndpointDescription_Encoding_DefaultXml: 313,\n EndpointDescription_Encoding_DefaultBinary: 314,\n UserIdentityToken_Encoding_DefaultXml: 317,\n UserIdentityToken_Encoding_DefaultBinary: 318,\n AnonymousIdentityToken_Encoding_DefaultXml: 320,\n AnonymousIdentityToken_Encoding_DefaultBinary: 321,\n UserNameIdentityToken_Encoding_DefaultXml: 323,\n UserNameIdentityToken_Encoding_DefaultBinary: 324,\n X509IdentityToken_Encoding_DefaultXml: 326,\n X509IdentityToken_Encoding_DefaultBinary: 327,\n EndpointConfiguration_Encoding_DefaultXml: 332,\n EndpointConfiguration_Encoding_DefaultBinary: 333,\n BuildInfo_Encoding_DefaultXml: 339,\n BuildInfo_Encoding_DefaultBinary: 340,\n SignedSoftwareCertificate_Encoding_DefaultXml: 345,\n SignedSoftwareCertificate_Encoding_DefaultBinary: 346,\n NodeAttributes_Encoding_DefaultXml: 350,\n NodeAttributes_Encoding_DefaultBinary: 351,\n ObjectAttributes_Encoding_DefaultXml: 353,\n ObjectAttributes_Encoding_DefaultBinary: 354,\n VariableAttributes_Encoding_DefaultXml: 356,\n VariableAttributes_Encoding_DefaultBinary: 357,\n MethodAttributes_Encoding_DefaultXml: 359,\n MethodAttributes_Encoding_DefaultBinary: 360,\n ObjectTypeAttributes_Encoding_DefaultXml: 362,\n ObjectTypeAttributes_Encoding_DefaultBinary: 363,\n VariableTypeAttributes_Encoding_DefaultXml: 365,\n VariableTypeAttributes_Encoding_DefaultBinary: 366,\n ReferenceTypeAttributes_Encoding_DefaultXml: 368,\n ReferenceTypeAttributes_Encoding_DefaultBinary: 369,\n DataTypeAttributes_Encoding_DefaultXml: 371,\n DataTypeAttributes_Encoding_DefaultBinary: 372,\n ViewAttributes_Encoding_DefaultXml: 374,\n ViewAttributes_Encoding_DefaultBinary: 375,\n AddNodesItem_Encoding_DefaultXml: 377,\n AddNodesItem_Encoding_DefaultBinary: 378,\n AddReferencesItem_Encoding_DefaultXml: 380,\n AddReferencesItem_Encoding_DefaultBinary: 381,\n DeleteNodesItem_Encoding_DefaultXml: 383,\n DeleteNodesItem_Encoding_DefaultBinary: 384,\n DeleteReferencesItem_Encoding_DefaultXml: 386,\n DeleteReferencesItem_Encoding_DefaultBinary: 387,\n RequestHeader_Encoding_DefaultXml: 390,\n RequestHeader_Encoding_DefaultBinary: 391,\n ResponseHeader_Encoding_DefaultXml: 393,\n ResponseHeader_Encoding_DefaultBinary: 394,\n ServiceFault_Encoding_DefaultXml: 396,\n ServiceFault_Encoding_DefaultBinary: 397,\n FindServersRequest_Encoding_DefaultXml: 421,\n FindServersRequest_Encoding_DefaultBinary: 422,\n FindServersResponse_Encoding_DefaultXml: 424,\n FindServersResponse_Encoding_DefaultBinary: 425,\n GetEndpointsRequest_Encoding_DefaultXml: 427,\n GetEndpointsRequest_Encoding_DefaultBinary: 428,\n GetEndpointsResponse_Encoding_DefaultXml: 430,\n GetEndpointsResponse_Encoding_DefaultBinary: 431,\n RegisteredServer_Encoding_DefaultXml: 433,\n RegisteredServer_Encoding_DefaultBinary: 434,\n RegisterServerRequest_Encoding_DefaultXml: 436,\n RegisterServerRequest_Encoding_DefaultBinary: 437,\n RegisterServerResponse_Encoding_DefaultXml: 439,\n RegisterServerResponse_Encoding_DefaultBinary: 440,\n ChannelSecurityToken_Encoding_DefaultXml: 442,\n ChannelSecurityToken_Encoding_DefaultBinary: 443,\n OpenSecureChannelRequest_Encoding_DefaultXml: 445,\n OpenSecureChannelRequest_Encoding_DefaultBinary: 446,\n OpenSecureChannelResponse_Encoding_DefaultXml: 448,\n OpenSecureChannelResponse_Encoding_DefaultBinary: 449,\n CloseSecureChannelRequest_Encoding_DefaultXml: 451,\n CloseSecureChannelRequest_Encoding_DefaultBinary: 452,\n CloseSecureChannelResponse_Encoding_DefaultXml: 454,\n CloseSecureChannelResponse_Encoding_DefaultBinary: 455,\n SignatureData_Encoding_DefaultXml: 457,\n SignatureData_Encoding_DefaultBinary: 458,\n CreateSessionRequest_Encoding_DefaultXml: 460,\n CreateSessionRequest_Encoding_DefaultBinary: 461,\n CreateSessionResponse_Encoding_DefaultXml: 463,\n CreateSessionResponse_Encoding_DefaultBinary: 464,\n ActivateSessionRequest_Encoding_DefaultXml: 466,\n ActivateSessionRequest_Encoding_DefaultBinary: 467,\n ActivateSessionResponse_Encoding_DefaultXml: 469,\n ActivateSessionResponse_Encoding_DefaultBinary: 470,\n CloseSessionRequest_Encoding_DefaultXml: 472,\n CloseSessionRequest_Encoding_DefaultBinary: 473,\n CloseSessionResponse_Encoding_DefaultXml: 475,\n CloseSessionResponse_Encoding_DefaultBinary: 476,\n CancelRequest_Encoding_DefaultXml: 478,\n CancelRequest_Encoding_DefaultBinary: 479,\n CancelResponse_Encoding_DefaultXml: 481,\n CancelResponse_Encoding_DefaultBinary: 482,\n AddNodesResult_Encoding_DefaultXml: 484,\n AddNodesResult_Encoding_DefaultBinary: 485,\n AddNodesRequest_Encoding_DefaultXml: 487,\n AddNodesRequest_Encoding_DefaultBinary: 488,\n AddNodesResponse_Encoding_DefaultXml: 490,\n AddNodesResponse_Encoding_DefaultBinary: 491,\n AddReferencesRequest_Encoding_DefaultXml: 493,\n AddReferencesRequest_Encoding_DefaultBinary: 494,\n AddReferencesResponse_Encoding_DefaultXml: 496,\n AddReferencesResponse_Encoding_DefaultBinary: 497,\n DeleteNodesRequest_Encoding_DefaultXml: 499,\n DeleteNodesRequest_Encoding_DefaultBinary: 500,\n DeleteNodesResponse_Encoding_DefaultXml: 502,\n DeleteNodesResponse_Encoding_DefaultBinary: 503,\n DeleteReferencesRequest_Encoding_DefaultXml: 505,\n DeleteReferencesRequest_Encoding_DefaultBinary: 506,\n DeleteReferencesResponse_Encoding_DefaultXml: 508,\n DeleteReferencesResponse_Encoding_DefaultBinary: 509,\n ViewDescription_Encoding_DefaultXml: 512,\n ViewDescription_Encoding_DefaultBinary: 513,\n BrowseDescription_Encoding_DefaultXml: 515,\n BrowseDescription_Encoding_DefaultBinary: 516,\n ReferenceDescription_Encoding_DefaultXml: 519,\n ReferenceDescription_Encoding_DefaultBinary: 520,\n BrowseResult_Encoding_DefaultXml: 523,\n BrowseResult_Encoding_DefaultBinary: 524,\n BrowseRequest_Encoding_DefaultXml: 526,\n BrowseRequest_Encoding_DefaultBinary: 527,\n BrowseResponse_Encoding_DefaultXml: 529,\n BrowseResponse_Encoding_DefaultBinary: 530,\n BrowseNextRequest_Encoding_DefaultXml: 532,\n BrowseNextRequest_Encoding_DefaultBinary: 533,\n BrowseNextResponse_Encoding_DefaultXml: 535,\n BrowseNextResponse_Encoding_DefaultBinary: 536,\n RelativePathElement_Encoding_DefaultXml: 538,\n RelativePathElement_Encoding_DefaultBinary: 539,\n RelativePath_Encoding_DefaultXml: 541,\n RelativePath_Encoding_DefaultBinary: 542,\n BrowsePath_Encoding_DefaultXml: 544,\n BrowsePath_Encoding_DefaultBinary: 545,\n BrowsePathTarget_Encoding_DefaultXml: 547,\n BrowsePathTarget_Encoding_DefaultBinary: 548,\n BrowsePathResult_Encoding_DefaultXml: 550,\n BrowsePathResult_Encoding_DefaultBinary: 551,\n TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultXml: 553,\n TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultBinary: 554,\n TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultXml: 556,\n TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultBinary: 557,\n RegisterNodesRequest_Encoding_DefaultXml: 559,\n RegisterNodesRequest_Encoding_DefaultBinary: 560,\n RegisterNodesResponse_Encoding_DefaultXml: 562,\n RegisterNodesResponse_Encoding_DefaultBinary: 563,\n UnregisterNodesRequest_Encoding_DefaultXml: 565,\n UnregisterNodesRequest_Encoding_DefaultBinary: 566,\n UnregisterNodesResponse_Encoding_DefaultXml: 568,\n UnregisterNodesResponse_Encoding_DefaultBinary: 569,\n QueryDataDescription_Encoding_DefaultXml: 571,\n QueryDataDescription_Encoding_DefaultBinary: 572,\n NodeTypeDescription_Encoding_DefaultXml: 574,\n NodeTypeDescription_Encoding_DefaultBinary: 575,\n QueryDataSet_Encoding_DefaultXml: 578,\n QueryDataSet_Encoding_DefaultBinary: 579,\n NodeReference_Encoding_DefaultXml: 581,\n NodeReference_Encoding_DefaultBinary: 582,\n ContentFilterElement_Encoding_DefaultXml: 584,\n ContentFilterElement_Encoding_DefaultBinary: 585,\n ContentFilter_Encoding_DefaultXml: 587,\n ContentFilter_Encoding_DefaultBinary: 588,\n FilterOperand_Encoding_DefaultXml: 590,\n FilterOperand_Encoding_DefaultBinary: 591,\n ElementOperand_Encoding_DefaultXml: 593,\n ElementOperand_Encoding_DefaultBinary: 594,\n LiteralOperand_Encoding_DefaultXml: 596,\n LiteralOperand_Encoding_DefaultBinary: 597,\n AttributeOperand_Encoding_DefaultXml: 599,\n AttributeOperand_Encoding_DefaultBinary: 600,\n SimpleAttributeOperand_Encoding_DefaultXml: 602,\n SimpleAttributeOperand_Encoding_DefaultBinary: 603,\n ContentFilterElementResult_Encoding_DefaultXml: 605,\n ContentFilterElementResult_Encoding_DefaultBinary: 606,\n ContentFilterResult_Encoding_DefaultXml: 608,\n ContentFilterResult_Encoding_DefaultBinary: 609,\n ParsingResult_Encoding_DefaultXml: 611,\n ParsingResult_Encoding_DefaultBinary: 612,\n QueryFirstRequest_Encoding_DefaultXml: 614,\n QueryFirstRequest_Encoding_DefaultBinary: 615,\n QueryFirstResponse_Encoding_DefaultXml: 617,\n QueryFirstResponse_Encoding_DefaultBinary: 618,\n QueryNextRequest_Encoding_DefaultXml: 620,\n QueryNextRequest_Encoding_DefaultBinary: 621,\n QueryNextResponse_Encoding_DefaultXml: 623,\n QueryNextResponse_Encoding_DefaultBinary: 624,\n ReadValueId_Encoding_DefaultXml: 627,\n ReadValueId_Encoding_DefaultBinary: 628,\n ReadRequest_Encoding_DefaultXml: 630,\n ReadRequest_Encoding_DefaultBinary: 631,\n ReadResponse_Encoding_DefaultXml: 633,\n ReadResponse_Encoding_DefaultBinary: 634,\n HistoryReadValueId_Encoding_DefaultXml: 636,\n HistoryReadValueId_Encoding_DefaultBinary: 637,\n HistoryReadResult_Encoding_DefaultXml: 639,\n HistoryReadResult_Encoding_DefaultBinary: 640,\n HistoryReadDetails_Encoding_DefaultXml: 642,\n HistoryReadDetails_Encoding_DefaultBinary: 643,\n ReadEventDetails_Encoding_DefaultXml: 645,\n ReadEventDetails_Encoding_DefaultBinary: 646,\n ReadRawModifiedDetails_Encoding_DefaultXml: 648,\n ReadRawModifiedDetails_Encoding_DefaultBinary: 649,\n ReadProcessedDetails_Encoding_DefaultXml: 651,\n ReadProcessedDetails_Encoding_DefaultBinary: 652,\n ReadAtTimeDetails_Encoding_DefaultXml: 654,\n ReadAtTimeDetails_Encoding_DefaultBinary: 655,\n HistoryData_Encoding_DefaultXml: 657,\n HistoryData_Encoding_DefaultBinary: 658,\n HistoryEvent_Encoding_DefaultXml: 660,\n HistoryEvent_Encoding_DefaultBinary: 661,\n HistoryReadRequest_Encoding_DefaultXml: 663,\n HistoryReadRequest_Encoding_DefaultBinary: 664,\n HistoryReadResponse_Encoding_DefaultXml: 666,\n HistoryReadResponse_Encoding_DefaultBinary: 667,\n WriteValue_Encoding_DefaultXml: 669,\n WriteValue_Encoding_DefaultBinary: 670,\n WriteRequest_Encoding_DefaultXml: 672,\n WriteRequest_Encoding_DefaultBinary: 673,\n WriteResponse_Encoding_DefaultXml: 675,\n WriteResponse_Encoding_DefaultBinary: 676,\n HistoryUpdateDetails_Encoding_DefaultXml: 678,\n HistoryUpdateDetails_Encoding_DefaultBinary: 679,\n UpdateDataDetails_Encoding_DefaultXml: 681,\n UpdateDataDetails_Encoding_DefaultBinary: 682,\n UpdateEventDetails_Encoding_DefaultXml: 684,\n UpdateEventDetails_Encoding_DefaultBinary: 685,\n DeleteRawModifiedDetails_Encoding_DefaultXml: 687,\n DeleteRawModifiedDetails_Encoding_DefaultBinary: 688,\n DeleteAtTimeDetails_Encoding_DefaultXml: 690,\n DeleteAtTimeDetails_Encoding_DefaultBinary: 691,\n DeleteEventDetails_Encoding_DefaultXml: 693,\n DeleteEventDetails_Encoding_DefaultBinary: 694,\n HistoryUpdateResult_Encoding_DefaultXml: 696,\n HistoryUpdateResult_Encoding_DefaultBinary: 697,\n HistoryUpdateRequest_Encoding_DefaultXml: 699,\n HistoryUpdateRequest_Encoding_DefaultBinary: 700,\n HistoryUpdateResponse_Encoding_DefaultXml: 702,\n HistoryUpdateResponse_Encoding_DefaultBinary: 703,\n CallMethodRequest_Encoding_DefaultXml: 705,\n CallMethodRequest_Encoding_DefaultBinary: 706,\n CallMethodResult_Encoding_DefaultXml: 708,\n CallMethodResult_Encoding_DefaultBinary: 709,\n CallRequest_Encoding_DefaultXml: 711,\n CallRequest_Encoding_DefaultBinary: 712,\n CallResponse_Encoding_DefaultXml: 714,\n CallResponse_Encoding_DefaultBinary: 715,\n MonitoringFilter_Encoding_DefaultXml: 720,\n MonitoringFilter_Encoding_DefaultBinary: 721,\n DataChangeFilter_Encoding_DefaultXml: 723,\n DataChangeFilter_Encoding_DefaultBinary: 724,\n EventFilter_Encoding_DefaultXml: 726,\n EventFilter_Encoding_DefaultBinary: 727,\n AggregateFilter_Encoding_DefaultXml: 729,\n AggregateFilter_Encoding_DefaultBinary: 730,\n MonitoringFilterResult_Encoding_DefaultXml: 732,\n MonitoringFilterResult_Encoding_DefaultBinary: 733,\n EventFilterResult_Encoding_DefaultXml: 735,\n EventFilterResult_Encoding_DefaultBinary: 736,\n AggregateFilterResult_Encoding_DefaultXml: 738,\n AggregateFilterResult_Encoding_DefaultBinary: 739,\n MonitoringParameters_Encoding_DefaultXml: 741,\n MonitoringParameters_Encoding_DefaultBinary: 742,\n MonitoredItemCreateRequest_Encoding_DefaultXml: 744,\n MonitoredItemCreateRequest_Encoding_DefaultBinary: 745,\n MonitoredItemCreateResult_Encoding_DefaultXml: 747,\n MonitoredItemCreateResult_Encoding_DefaultBinary: 748,\n CreateMonitoredItemsRequest_Encoding_DefaultXml: 750,\n CreateMonitoredItemsRequest_Encoding_DefaultBinary: 751,\n CreateMonitoredItemsResponse_Encoding_DefaultXml: 753,\n CreateMonitoredItemsResponse_Encoding_DefaultBinary: 754,\n MonitoredItemModifyRequest_Encoding_DefaultXml: 756,\n MonitoredItemModifyRequest_Encoding_DefaultBinary: 757,\n MonitoredItemModifyResult_Encoding_DefaultXml: 759,\n MonitoredItemModifyResult_Encoding_DefaultBinary: 760,\n ModifyMonitoredItemsRequest_Encoding_DefaultXml: 762,\n ModifyMonitoredItemsRequest_Encoding_DefaultBinary: 763,\n ModifyMonitoredItemsResponse_Encoding_DefaultXml: 765,\n ModifyMonitoredItemsResponse_Encoding_DefaultBinary: 766,\n SetMonitoringModeRequest_Encoding_DefaultXml: 768,\n SetMonitoringModeRequest_Encoding_DefaultBinary: 769,\n SetMonitoringModeResponse_Encoding_DefaultXml: 771,\n SetMonitoringModeResponse_Encoding_DefaultBinary: 772,\n SetTriggeringRequest_Encoding_DefaultXml: 774,\n SetTriggeringRequest_Encoding_DefaultBinary: 775,\n SetTriggeringResponse_Encoding_DefaultXml: 777,\n SetTriggeringResponse_Encoding_DefaultBinary: 778,\n DeleteMonitoredItemsRequest_Encoding_DefaultXml: 780,\n DeleteMonitoredItemsRequest_Encoding_DefaultBinary: 781,\n DeleteMonitoredItemsResponse_Encoding_DefaultXml: 783,\n DeleteMonitoredItemsResponse_Encoding_DefaultBinary: 784,\n CreateSubscriptionRequest_Encoding_DefaultXml: 786,\n CreateSubscriptionRequest_Encoding_DefaultBinary: 787,\n CreateSubscriptionResponse_Encoding_DefaultXml: 789,\n CreateSubscriptionResponse_Encoding_DefaultBinary: 790,\n ModifySubscriptionRequest_Encoding_DefaultXml: 792,\n ModifySubscriptionRequest_Encoding_DefaultBinary: 793,\n ModifySubscriptionResponse_Encoding_DefaultXml: 795,\n ModifySubscriptionResponse_Encoding_DefaultBinary: 796,\n SetPublishingModeRequest_Encoding_DefaultXml: 798,\n SetPublishingModeRequest_Encoding_DefaultBinary: 799,\n SetPublishingModeResponse_Encoding_DefaultXml: 801,\n SetPublishingModeResponse_Encoding_DefaultBinary: 802,\n NotificationMessage_Encoding_DefaultXml: 804,\n NotificationMessage_Encoding_DefaultBinary: 805,\n MonitoredItemNotification_Encoding_DefaultXml: 807,\n MonitoredItemNotification_Encoding_DefaultBinary: 808,\n DataChangeNotification_Encoding_DefaultXml: 810,\n DataChangeNotification_Encoding_DefaultBinary: 811,\n StatusChangeNotification_Encoding_DefaultXml: 819,\n StatusChangeNotification_Encoding_DefaultBinary: 820,\n SubscriptionAcknowledgement_Encoding_DefaultXml: 822,\n SubscriptionAcknowledgement_Encoding_DefaultBinary: 823,\n PublishRequest_Encoding_DefaultXml: 825,\n PublishRequest_Encoding_DefaultBinary: 826,\n PublishResponse_Encoding_DefaultXml: 828,\n PublishResponse_Encoding_DefaultBinary: 829,\n RepublishRequest_Encoding_DefaultXml: 831,\n RepublishRequest_Encoding_DefaultBinary: 832,\n RepublishResponse_Encoding_DefaultXml: 834,\n RepublishResponse_Encoding_DefaultBinary: 835,\n TransferResult_Encoding_DefaultXml: 837,\n TransferResult_Encoding_DefaultBinary: 838,\n TransferSubscriptionsRequest_Encoding_DefaultXml: 840,\n TransferSubscriptionsRequest_Encoding_DefaultBinary: 841,\n TransferSubscriptionsResponse_Encoding_DefaultXml: 843,\n TransferSubscriptionsResponse_Encoding_DefaultBinary: 844,\n DeleteSubscriptionsRequest_Encoding_DefaultXml: 846,\n DeleteSubscriptionsRequest_Encoding_DefaultBinary: 847,\n DeleteSubscriptionsResponse_Encoding_DefaultXml: 849,\n DeleteSubscriptionsResponse_Encoding_DefaultBinary: 850,\n RedundantServerDataType_Encoding_DefaultXml: 854,\n RedundantServerDataType_Encoding_DefaultBinary: 855,\n SamplingIntervalDiagnosticsDataType_Encoding_DefaultXml: 857,\n SamplingIntervalDiagnosticsDataType_Encoding_DefaultBinary: 858,\n ServerDiagnosticsSummaryDataType_Encoding_DefaultXml: 860,\n ServerDiagnosticsSummaryDataType_Encoding_DefaultBinary: 861,\n ServerStatusDataType_Encoding_DefaultXml: 863,\n ServerStatusDataType_Encoding_DefaultBinary: 864,\n SessionDiagnosticsDataType_Encoding_DefaultXml: 866,\n SessionDiagnosticsDataType_Encoding_DefaultBinary: 867,\n SessionSecurityDiagnosticsDataType_Encoding_DefaultXml: 869,\n SessionSecurityDiagnosticsDataType_Encoding_DefaultBinary: 870,\n ServiceCounterDataType_Encoding_DefaultXml: 872,\n ServiceCounterDataType_Encoding_DefaultBinary: 873,\n SubscriptionDiagnosticsDataType_Encoding_DefaultXml: 875,\n SubscriptionDiagnosticsDataType_Encoding_DefaultBinary: 876,\n ModelChangeStructureDataType_Encoding_DefaultXml: 878,\n ModelChangeStructureDataType_Encoding_DefaultBinary: 879,\n Range_Encoding_DefaultXml: 885,\n Range_Encoding_DefaultBinary: 886,\n EUInformation_Encoding_DefaultXml: 888,\n EUInformation_Encoding_DefaultBinary: 889,\n Annotation_Encoding_DefaultXml: 892,\n Annotation_Encoding_DefaultBinary: 893,\n ProgramDiagnosticDataType_Encoding_DefaultXml: 895,\n ProgramDiagnosticDataType_Encoding_DefaultBinary: 896,\n SemanticChangeStructureDataType_Encoding_DefaultXml: 898,\n SemanticChangeStructureDataType_Encoding_DefaultBinary: 899,\n EventNotificationList_Encoding_DefaultXml: 915,\n EventNotificationList_Encoding_DefaultBinary: 916,\n EventFieldList_Encoding_DefaultXml: 918,\n EventFieldList_Encoding_DefaultBinary: 919,\n HistoryEventFieldList_Encoding_DefaultXml: 921,\n HistoryEventFieldList_Encoding_DefaultBinary: 922,\n IssuedIdentityToken_Encoding_DefaultXml: 939,\n IssuedIdentityToken_Encoding_DefaultBinary: 940,\n NotificationData_Encoding_DefaultXml: 946,\n NotificationData_Encoding_DefaultBinary: 947,\n AggregateConfiguration_Encoding_DefaultXml: 949,\n AggregateConfiguration_Encoding_DefaultBinary: 950,\n ServerType_ServerCapabilities: 2009,\n ServerType_ServerDiagnostics: 2010,\n ServerType_VendorServerInfo: 2011,\n ServerType_ServerRedundancy: 2012,\n ServerCapabilitiesType_ModellingRules: 2019,\n Server: 2253,\n Server_ServerCapabilities: 2268,\n Server_ServerDiagnostics: 2274,\n Server_VendorServerInfo: 2295,\n Server_ServerRedundancy: 2296,\n AggregateFunction_Interpolative: 2341,\n AggregateFunction_Average: 2342,\n AggregateFunction_TimeAverage: 2343,\n AggregateFunction_Total: 2344,\n AggregateFunction_Minimum: 2346,\n AggregateFunction_Maximum: 2347,\n AggregateFunction_MinimumActualTime: 2348,\n AggregateFunction_MaximumActualTime: 2349,\n AggregateFunction_Range: 2350,\n AggregateFunction_AnnotationCount: 2351,\n AggregateFunction_Count: 2352,\n AggregateFunction_NumberOfTransitions: 2355,\n AggregateFunction_Start: 2357,\n AggregateFunction_End: 2358,\n AggregateFunction_Delta: 2359,\n AggregateFunction_DurationGood: 2360,\n AggregateFunction_DurationBad: 2361,\n AggregateFunction_PercentGood: 2362,\n AggregateFunction_PercentBad: 2363,\n AggregateFunction_WorstQuality: 2364,\n ProgramStateMachineType_Ready: 2400,\n ProgramStateMachineType_Running: 2402,\n ProgramStateMachineType_Suspended: 2404,\n ProgramStateMachineType_Halted: 2406,\n ProgramStateMachineType_HaltedToReady: 2408,\n ProgramStateMachineType_ReadyToRunning: 2410,\n ProgramStateMachineType_RunningToHalted: 2412,\n ProgramStateMachineType_RunningToReady: 2414,\n ProgramStateMachineType_RunningToSuspended: 2416,\n ProgramStateMachineType_SuspendedToRunning: 2418,\n ProgramStateMachineType_SuspendedToHalted: 2420,\n ProgramStateMachineType_SuspendedToReady: 2422,\n ProgramStateMachineType_ReadyToHalted: 2424,\n ServerDiagnosticsType_SessionsDiagnosticsSummary: 2744,\n ServerCapabilitiesType_AggregateFunctions: 2754,\n ShelvedStateMachineType_Unshelved: 2930,\n ShelvedStateMachineType_TimedShelved: 2932,\n ShelvedStateMachineType_OneShotShelved: 2933,\n ShelvedStateMachineType_UnshelvedToTimedShelved: 2935,\n ShelvedStateMachineType_UnshelvedToOneShotShelved: 2936,\n ShelvedStateMachineType_TimedShelvedToUnshelved: 2940,\n ShelvedStateMachineType_TimedShelvedToOneShotShelved: 2942,\n ShelvedStateMachineType_OneShotShelvedToUnshelved: 2943,\n ShelvedStateMachineType_OneShotShelvedToTimedShelved: 2945,\n Server_ServerCapabilities_ModellingRules: 2996,\n Server_ServerCapabilities_AggregateFunctions: 2997,\n EventTypesFolder: 3048,\n HistoricalDataConfigurationType_AggregateConfiguration: 3059,\n DefaultBinary: 3062,\n DefaultXml: 3063,\n ServerType_ServerCapabilities_ModellingRules: 3093,\n ServerType_ServerCapabilities_AggregateFunctions: 3094,\n ServerType_ServerDiagnostics_SessionsDiagnosticsSummary: 3111,\n Server_ServerDiagnostics_SessionsDiagnosticsSummary: 3706,\n ProgramStateMachineType_FinalResultData: 3850,\n EnumValueType_Encoding_DefaultXml: 7616,\n EnumValueType_Encoding_DefaultBinary: 8251,\n TimeZoneDataType_Encoding_DefaultXml: 8913,\n TimeZoneDataType_Encoding_DefaultBinary: 8917,\n AlarmConditionType_ShelvingState: 9178,\n LimitAlarmType_ShelvingState: 9279,\n ExclusiveLimitStateMachineType_HighHigh: 9329,\n ExclusiveLimitStateMachineType_High: 9331,\n ExclusiveLimitStateMachineType_Low: 9333,\n ExclusiveLimitStateMachineType_LowLow: 9335,\n ExclusiveLimitStateMachineType_LowLowToLow: 9337,\n ExclusiveLimitStateMachineType_LowToLowLow: 9338,\n ExclusiveLimitStateMachineType_HighHighToHigh: 9339,\n ExclusiveLimitStateMachineType_HighToHighHigh: 9340,\n ExclusiveLimitAlarmType_ShelvingState: 9416,\n ExclusiveLimitAlarmType_LimitState: 9455,\n ExclusiveLevelAlarmType_ShelvingState: 9557,\n ExclusiveLevelAlarmType_LimitState: 9596,\n ExclusiveRateOfChangeAlarmType_ShelvingState: 9698,\n ExclusiveRateOfChangeAlarmType_LimitState: 9737,\n ExclusiveDeviationAlarmType_ShelvingState: 9839,\n ExclusiveDeviationAlarmType_LimitState: 9878,\n NonExclusiveLimitAlarmType_ShelvingState: 9981,\n NonExclusiveLevelAlarmType_ShelvingState: 10135,\n NonExclusiveRateOfChangeAlarmType_ShelvingState: 10289,\n NonExclusiveDeviationAlarmType_ShelvingState: 10443,\n DiscreteAlarmType_ShelvingState: 10598,\n OffNormalAlarmType_ShelvingState: 10712,\n TripAlarmType_ShelvingState: 10826,\n HistoryServerCapabilitiesType_AggregateFunctions: 11172,\n HistoryServerCapabilities: 11192,\n HistoryServerCapabilities_AggregateFunctions: 11201,\n HAConfiguration: 11202,\n HAConfiguration_AggregateConfiguration: 11203,\n ModificationInfo_Encoding_DefaultXml: 11218,\n HistoryModifiedData_Encoding_DefaultXml: 11219,\n ModificationInfo_Encoding_DefaultBinary: 11226,\n HistoryModifiedData_Encoding_DefaultBinary: 11227,\n AggregateFunction_TimeAverage2: 11285,\n AggregateFunction_Minimum2: 11286,\n AggregateFunction_Maximum2: 11287,\n AggregateFunction_Range2: 11288,\n AggregateFunction_WorstQuality2: 11292,\n UpdateStructureDataDetails_Encoding_DefaultXml: 11296,\n UpdateStructureDataDetails_Encoding_DefaultBinary: 11300,\n AggregateFunction_Total2: 11304,\n AggregateFunction_MinimumActualTime2: 11305,\n AggregateFunction_MaximumActualTime2: 11306,\n AggregateFunction_DurationInStateZero: 11307,\n AggregateFunction_DurationInStateNonZero: 11308,\n AggregateFunction_StandardDeviationSample: 11426,\n AggregateFunction_StandardDeviationPopulation: 11427,\n AggregateFunction_VarianceSample: 11428,\n AggregateFunction_VariancePopulation: 11429,\n AggregateFunction_StartBound: 11505,\n AggregateFunction_EndBound: 11506,\n AggregateFunction_DeltaBounds: 11507,\n ModellingRule_OptionalPlaceholder: 11508,\n ModellingRule_MandatoryPlaceholder: 11510,\n ServerType_ServerCapabilities_OperationLimits: 11516,\n ServerType_Namespaces: 11527,\n ServerCapabilitiesType_OperationLimits: 11551,\n NamespaceMetadataType_NamespaceFile: 11624,\n NamespacesType_NamespaceIdentifier_Placeholder: 11646,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile: 11654,\n Server_ServerCapabilities_OperationLimits: 11704,\n Server_Namespaces: 11715,\n SystemOffNormalAlarmType_ShelvingState: 11831,\n HistoricalDataConfigurationType_AggregateFunctions: 11876,\n HAConfiguration_AggregateFunctions: 11877,\n InstanceNode_Encoding_DefaultXml: 11887,\n TypeNode_Encoding_DefaultXml: 11888,\n InstanceNode_Encoding_DefaultBinary: 11889,\n TypeNode_Encoding_DefaultBinary: 11890,\n EndpointUrlListDataType_Encoding_DefaultXml: 11949,\n NetworkGroupDataType_Encoding_DefaultXml: 11950,\n EndpointUrlListDataType_Encoding_DefaultBinary: 11957,\n NetworkGroupDataType_Encoding_DefaultBinary: 11958,\n AxisInformation_Encoding_DefaultXml: 12081,\n XVType_Encoding_DefaultXml: 12082,\n AxisInformation_Encoding_DefaultBinary: 12089,\n XVType_Encoding_DefaultBinary: 12090,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder: 12097,\n ComplexNumberType_Encoding_DefaultXml: 12173,\n DoubleComplexNumberType_Encoding_DefaultXml: 12174,\n ComplexNumberType_Encoding_DefaultBinary: 12181,\n DoubleComplexNumberType_Encoding_DefaultBinary: 12182,\n ServerOnNetwork_Encoding_DefaultXml: 12195,\n FindServersOnNetworkRequest_Encoding_DefaultXml: 12196,\n FindServersOnNetworkResponse_Encoding_DefaultXml: 12197,\n RegisterServer2Request_Encoding_DefaultXml: 12199,\n RegisterServer2Response_Encoding_DefaultXml: 12200,\n ServerOnNetwork_Encoding_DefaultBinary: 12207,\n FindServersOnNetworkRequest_Encoding_DefaultBinary: 12208,\n FindServersOnNetworkResponse_Encoding_DefaultBinary: 12209,\n RegisterServer2Request_Encoding_DefaultBinary: 12211,\n RegisterServer2Response_Encoding_DefaultBinary: 12212,\n ServerConfiguration: 12637,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList: 12642,\n TrustListDataType_Encoding_DefaultXml: 12676,\n TrustListDataType_Encoding_DefaultBinary: 12680,\n OptionSet_Encoding_DefaultXml: 12757,\n Union_Encoding_DefaultXml: 12758,\n OptionSet_Encoding_DefaultBinary: 12765,\n Union_Encoding_DefaultBinary: 12766,\n DiscoveryConfiguration_Encoding_DefaultXml: 12892,\n MdnsDiscoveryConfiguration_Encoding_DefaultXml: 12893,\n DiscoveryConfiguration_Encoding_DefaultBinary: 12900,\n MdnsDiscoveryConfiguration_Encoding_DefaultBinary: 12901,\n CertificateExpirationAlarmType_ShelvingState: 13305,\n FileDirectoryType_FileDirectoryName_Placeholder: 13354,\n FileDirectoryType_FileName_Placeholder: 13366,\n CertificateGroupType_TrustList: 13599,\n CertificateGroupFolderType_DefaultApplicationGroup: 13814,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList: 13815,\n CertificateGroupFolderType_DefaultHttpsGroup: 13848,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList: 13849,\n CertificateGroupFolderType_DefaultUserTokenGroup: 13882,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList: 13883,\n CertificateGroupFolderType_AdditionalGroup_Placeholder: 13916,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList: 13917,\n ServerConfigurationType_CertificateGroups: 13950,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup: 13951,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList: 13952,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup: 13985,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList: 13986,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup: 14019,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList: 14020,\n ServerConfiguration_CertificateGroups: 14053,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup: 14088,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList: 14089,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup: 14122,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList: 14123,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup: 14156,\n DataTypeDefinition_Encoding_DefaultXml: 14797,\n StructureDefinition_Encoding_DefaultXml: 14798,\n EnumDefinition_Encoding_DefaultXml: 14799,\n StructureField_Encoding_DefaultXml: 14800,\n EnumField_Encoding_DefaultXml: 14801,\n KeyValuePair_Encoding_DefaultXml: 14802,\n StructureField_Encoding_DefaultBinary: 14844,\n EnumField_Encoding_DefaultBinary: 14845,\n KeyValuePair_Encoding_DefaultBinary: 14846,\n KeyValuePair_Encoding_DefaultJson: 15041,\n IdentityMappingRuleType_Encoding_DefaultJson: 15042,\n TrustListDataType_Encoding_DefaultJson: 15044,\n DecimalDataType_Encoding_DefaultJson: 15045,\n RolePermissionType_Encoding_DefaultJson: 15062,\n DataTypeDefinition_Encoding_DefaultJson: 15063,\n StructureField_Encoding_DefaultJson: 15065,\n StructureDefinition_Encoding_DefaultJson: 15066,\n EnumDefinition_Encoding_DefaultJson: 15067,\n Node_Encoding_DefaultJson: 15068,\n InstanceNode_Encoding_DefaultJson: 15069,\n TypeNode_Encoding_DefaultJson: 15070,\n ObjectNode_Encoding_DefaultJson: 15071,\n ObjectTypeNode_Encoding_DefaultJson: 15073,\n VariableNode_Encoding_DefaultJson: 15074,\n VariableTypeNode_Encoding_DefaultJson: 15075,\n ReferenceTypeNode_Encoding_DefaultJson: 15076,\n MethodNode_Encoding_DefaultJson: 15077,\n ViewNode_Encoding_DefaultJson: 15078,\n DataTypeNode_Encoding_DefaultJson: 15079,\n ReferenceNode_Encoding_DefaultJson: 15080,\n Argument_Encoding_DefaultJson: 15081,\n EnumValueType_Encoding_DefaultJson: 15082,\n EnumField_Encoding_DefaultJson: 15083,\n OptionSet_Encoding_DefaultJson: 15084,\n Union_Encoding_DefaultJson: 15085,\n TimeZoneDataType_Encoding_DefaultJson: 15086,\n ApplicationDescription_Encoding_DefaultJson: 15087,\n RequestHeader_Encoding_DefaultJson: 15088,\n ResponseHeader_Encoding_DefaultJson: 15089,\n ServiceFault_Encoding_DefaultJson: 15090,\n SessionlessInvokeRequestType_Encoding_DefaultJson: 15091,\n SessionlessInvokeResponseType_Encoding_DefaultJson: 15092,\n FindServersRequest_Encoding_DefaultJson: 15093,\n FindServersResponse_Encoding_DefaultJson: 15094,\n ServerOnNetwork_Encoding_DefaultJson: 15095,\n FindServersOnNetworkRequest_Encoding_DefaultJson: 15096,\n FindServersOnNetworkResponse_Encoding_DefaultJson: 15097,\n UserTokenPolicy_Encoding_DefaultJson: 15098,\n EndpointDescription_Encoding_DefaultJson: 15099,\n GetEndpointsRequest_Encoding_DefaultJson: 15100,\n GetEndpointsResponse_Encoding_DefaultJson: 15101,\n RegisteredServer_Encoding_DefaultJson: 15102,\n RegisterServerRequest_Encoding_DefaultJson: 15103,\n RegisterServerResponse_Encoding_DefaultJson: 15104,\n DiscoveryConfiguration_Encoding_DefaultJson: 15105,\n MdnsDiscoveryConfiguration_Encoding_DefaultJson: 15106,\n RegisterServer2Request_Encoding_DefaultJson: 15107,\n RegisterServer2Response_Encoding_DefaultJson: 15130,\n ChannelSecurityToken_Encoding_DefaultJson: 15131,\n OpenSecureChannelRequest_Encoding_DefaultJson: 15132,\n OpenSecureChannelResponse_Encoding_DefaultJson: 15133,\n CloseSecureChannelRequest_Encoding_DefaultJson: 15134,\n CloseSecureChannelResponse_Encoding_DefaultJson: 15135,\n SignedSoftwareCertificate_Encoding_DefaultJson: 15136,\n SignatureData_Encoding_DefaultJson: 15137,\n CreateSessionRequest_Encoding_DefaultJson: 15138,\n CreateSessionResponse_Encoding_DefaultJson: 15139,\n UserIdentityToken_Encoding_DefaultJson: 15140,\n AnonymousIdentityToken_Encoding_DefaultJson: 15141,\n UserNameIdentityToken_Encoding_DefaultJson: 15142,\n X509IdentityToken_Encoding_DefaultJson: 15143,\n IssuedIdentityToken_Encoding_DefaultJson: 15144,\n ActivateSessionRequest_Encoding_DefaultJson: 15145,\n ActivateSessionResponse_Encoding_DefaultJson: 15146,\n CloseSessionRequest_Encoding_DefaultJson: 15147,\n CloseSessionResponse_Encoding_DefaultJson: 15148,\n CancelRequest_Encoding_DefaultJson: 15149,\n CancelResponse_Encoding_DefaultJson: 15150,\n NodeAttributes_Encoding_DefaultJson: 15151,\n ObjectAttributes_Encoding_DefaultJson: 15152,\n VariableAttributes_Encoding_DefaultJson: 15153,\n MethodAttributes_Encoding_DefaultJson: 15157,\n ObjectTypeAttributes_Encoding_DefaultJson: 15158,\n VariableTypeAttributes_Encoding_DefaultJson: 15159,\n ReferenceTypeAttributes_Encoding_DefaultJson: 15160,\n DataTypeAttributes_Encoding_DefaultJson: 15161,\n ViewAttributes_Encoding_DefaultJson: 15162,\n GenericAttributeValue_Encoding_DefaultJson: 15163,\n GenericAttributes_Encoding_DefaultJson: 15164,\n AddNodesItem_Encoding_DefaultJson: 15165,\n AddNodesResult_Encoding_DefaultJson: 15166,\n AddNodesRequest_Encoding_DefaultJson: 15167,\n AddNodesResponse_Encoding_DefaultJson: 15168,\n AddReferencesItem_Encoding_DefaultJson: 15169,\n AddReferencesRequest_Encoding_DefaultJson: 15170,\n AddReferencesResponse_Encoding_DefaultJson: 15171,\n DeleteNodesItem_Encoding_DefaultJson: 15172,\n DeleteNodesRequest_Encoding_DefaultJson: 15173,\n DeleteNodesResponse_Encoding_DefaultJson: 15174,\n DeleteReferencesItem_Encoding_DefaultJson: 15175,\n DeleteReferencesRequest_Encoding_DefaultJson: 15176,\n DeleteReferencesResponse_Encoding_DefaultJson: 15177,\n ViewDescription_Encoding_DefaultJson: 15179,\n BrowseDescription_Encoding_DefaultJson: 15180,\n ReferenceDescription_Encoding_DefaultJson: 15182,\n BrowseResult_Encoding_DefaultJson: 15183,\n BrowseRequest_Encoding_DefaultJson: 15184,\n BrowseResponse_Encoding_DefaultJson: 15185,\n BrowseNextRequest_Encoding_DefaultJson: 15186,\n BrowseNextResponse_Encoding_DefaultJson: 15187,\n RelativePathElement_Encoding_DefaultJson: 15188,\n RelativePath_Encoding_DefaultJson: 15189,\n BrowsePath_Encoding_DefaultJson: 15190,\n BrowsePathTarget_Encoding_DefaultJson: 15191,\n BrowsePathResult_Encoding_DefaultJson: 15192,\n TranslateBrowsePathsToNodeIdsRequest_Encoding_DefaultJson: 15193,\n TranslateBrowsePathsToNodeIdsResponse_Encoding_DefaultJson: 15194,\n RegisterNodesRequest_Encoding_DefaultJson: 15195,\n RegisterNodesResponse_Encoding_DefaultJson: 15196,\n UnregisterNodesRequest_Encoding_DefaultJson: 15197,\n UnregisterNodesResponse_Encoding_DefaultJson: 15198,\n EndpointConfiguration_Encoding_DefaultJson: 15199,\n QueryDataDescription_Encoding_DefaultJson: 15200,\n NodeTypeDescription_Encoding_DefaultJson: 15201,\n QueryDataSet_Encoding_DefaultJson: 15202,\n NodeReference_Encoding_DefaultJson: 15203,\n ContentFilterElement_Encoding_DefaultJson: 15204,\n ContentFilter_Encoding_DefaultJson: 15205,\n FilterOperand_Encoding_DefaultJson: 15206,\n ElementOperand_Encoding_DefaultJson: 15207,\n LiteralOperand_Encoding_DefaultJson: 15208,\n AttributeOperand_Encoding_DefaultJson: 15209,\n SimpleAttributeOperand_Encoding_DefaultJson: 15210,\n ContentFilterElementResult_Encoding_DefaultJson: 15211,\n ContentFilterResult_Encoding_DefaultJson: 15228,\n ParsingResult_Encoding_DefaultJson: 15236,\n QueryFirstRequest_Encoding_DefaultJson: 15244,\n QueryFirstResponse_Encoding_DefaultJson: 15252,\n QueryNextRequest_Encoding_DefaultJson: 15254,\n QueryNextResponse_Encoding_DefaultJson: 15255,\n ReadValueId_Encoding_DefaultJson: 15256,\n ReadRequest_Encoding_DefaultJson: 15257,\n ReadResponse_Encoding_DefaultJson: 15258,\n HistoryReadValueId_Encoding_DefaultJson: 15259,\n HistoryReadResult_Encoding_DefaultJson: 15260,\n HistoryReadDetails_Encoding_DefaultJson: 15261,\n ReadEventDetails_Encoding_DefaultJson: 15262,\n ReadRawModifiedDetails_Encoding_DefaultJson: 15263,\n ReadProcessedDetails_Encoding_DefaultJson: 15264,\n ReadAtTimeDetails_Encoding_DefaultJson: 15269,\n HistoryData_Encoding_DefaultJson: 15270,\n ModificationInfo_Encoding_DefaultJson: 15271,\n HistoryModifiedData_Encoding_DefaultJson: 15272,\n HistoryEvent_Encoding_DefaultJson: 15273,\n HistoryReadRequest_Encoding_DefaultJson: 15274,\n HistoryReadResponse_Encoding_DefaultJson: 15275,\n WriteValue_Encoding_DefaultJson: 15276,\n WriteRequest_Encoding_DefaultJson: 15277,\n WriteResponse_Encoding_DefaultJson: 15278,\n HistoryUpdateDetails_Encoding_DefaultJson: 15279,\n UpdateDataDetails_Encoding_DefaultJson: 15280,\n UpdateStructureDataDetails_Encoding_DefaultJson: 15281,\n UpdateEventDetails_Encoding_DefaultJson: 15282,\n DeleteRawModifiedDetails_Encoding_DefaultJson: 15283,\n DeleteAtTimeDetails_Encoding_DefaultJson: 15284,\n DeleteEventDetails_Encoding_DefaultJson: 15285,\n HistoryUpdateResult_Encoding_DefaultJson: 15286,\n HistoryUpdateRequest_Encoding_DefaultJson: 15287,\n HistoryUpdateResponse_Encoding_DefaultJson: 15288,\n CallMethodRequest_Encoding_DefaultJson: 15289,\n CallMethodResult_Encoding_DefaultJson: 15290,\n CallRequest_Encoding_DefaultJson: 15291,\n CallResponse_Encoding_DefaultJson: 15292,\n MonitoringFilter_Encoding_DefaultJson: 15293,\n DataChangeFilter_Encoding_DefaultJson: 15294,\n EventFilter_Encoding_DefaultJson: 15295,\n AggregateConfiguration_Encoding_DefaultJson: 15304,\n AggregateFilter_Encoding_DefaultJson: 15312,\n MonitoringFilterResult_Encoding_DefaultJson: 15313,\n EventFilterResult_Encoding_DefaultJson: 15314,\n AggregateFilterResult_Encoding_DefaultJson: 15315,\n MonitoringParameters_Encoding_DefaultJson: 15320,\n MonitoredItemCreateRequest_Encoding_DefaultJson: 15321,\n MonitoredItemCreateResult_Encoding_DefaultJson: 15322,\n CreateMonitoredItemsRequest_Encoding_DefaultJson: 15323,\n CreateMonitoredItemsResponse_Encoding_DefaultJson: 15324,\n MonitoredItemModifyRequest_Encoding_DefaultJson: 15325,\n MonitoredItemModifyResult_Encoding_DefaultJson: 15326,\n ModifyMonitoredItemsRequest_Encoding_DefaultJson: 15327,\n ModifyMonitoredItemsResponse_Encoding_DefaultJson: 15328,\n SetMonitoringModeRequest_Encoding_DefaultJson: 15329,\n SetMonitoringModeResponse_Encoding_DefaultJson: 15331,\n SetTriggeringRequest_Encoding_DefaultJson: 15332,\n SetTriggeringResponse_Encoding_DefaultJson: 15333,\n DeleteMonitoredItemsRequest_Encoding_DefaultJson: 15335,\n DeleteMonitoredItemsResponse_Encoding_DefaultJson: 15336,\n CreateSubscriptionRequest_Encoding_DefaultJson: 15337,\n CreateSubscriptionResponse_Encoding_DefaultJson: 15338,\n ModifySubscriptionRequest_Encoding_DefaultJson: 15339,\n ModifySubscriptionResponse_Encoding_DefaultJson: 15340,\n SetPublishingModeRequest_Encoding_DefaultJson: 15341,\n SetPublishingModeResponse_Encoding_DefaultJson: 15342,\n NotificationMessage_Encoding_DefaultJson: 15343,\n NotificationData_Encoding_DefaultJson: 15344,\n DataChangeNotification_Encoding_DefaultJson: 15345,\n MonitoredItemNotification_Encoding_DefaultJson: 15346,\n EventNotificationList_Encoding_DefaultJson: 15347,\n EventFieldList_Encoding_DefaultJson: 15348,\n HistoryEventFieldList_Encoding_DefaultJson: 15349,\n StatusChangeNotification_Encoding_DefaultJson: 15350,\n SubscriptionAcknowledgement_Encoding_DefaultJson: 15351,\n PublishRequest_Encoding_DefaultJson: 15352,\n PublishResponse_Encoding_DefaultJson: 15353,\n RepublishRequest_Encoding_DefaultJson: 15354,\n RepublishResponse_Encoding_DefaultJson: 15355,\n TransferResult_Encoding_DefaultJson: 15356,\n TransferSubscriptionsRequest_Encoding_DefaultJson: 15357,\n TransferSubscriptionsResponse_Encoding_DefaultJson: 15358,\n DeleteSubscriptionsRequest_Encoding_DefaultJson: 15359,\n DeleteSubscriptionsResponse_Encoding_DefaultJson: 15360,\n BuildInfo_Encoding_DefaultJson: 15361,\n RedundantServerDataType_Encoding_DefaultJson: 15362,\n EndpointUrlListDataType_Encoding_DefaultJson: 15363,\n NetworkGroupDataType_Encoding_DefaultJson: 15364,\n SamplingIntervalDiagnosticsDataType_Encoding_DefaultJson: 15365,\n ServerDiagnosticsSummaryDataType_Encoding_DefaultJson: 15366,\n ServerStatusDataType_Encoding_DefaultJson: 15367,\n SessionDiagnosticsDataType_Encoding_DefaultJson: 15368,\n SessionSecurityDiagnosticsDataType_Encoding_DefaultJson: 15369,\n ServiceCounterDataType_Encoding_DefaultJson: 15370,\n StatusResult_Encoding_DefaultJson: 15371,\n SubscriptionDiagnosticsDataType_Encoding_DefaultJson: 15372,\n ModelChangeStructureDataType_Encoding_DefaultJson: 15373,\n SemanticChangeStructureDataType_Encoding_DefaultJson: 15374,\n Range_Encoding_DefaultJson: 15375,\n EUInformation_Encoding_DefaultJson: 15376,\n ComplexNumberType_Encoding_DefaultJson: 15377,\n DoubleComplexNumberType_Encoding_DefaultJson: 15378,\n AxisInformation_Encoding_DefaultJson: 15379,\n XVType_Encoding_DefaultJson: 15380,\n ProgramDiagnosticDataType_Encoding_DefaultJson: 15381,\n Annotation_Encoding_DefaultJson: 15382,\n ProgramDiagnostic2DataType_Encoding_DefaultBinary: 15397,\n ProgramDiagnostic2DataType_Encoding_DefaultXml: 15401,\n ProgramDiagnostic2DataType_Encoding_DefaultJson: 15405,\n Server_ServerCapabilities_Roles: 15606,\n RoleSetType_RoleName_Placeholder: 15608,\n WellKnownRole_Anonymous: 15644,\n WellKnownRole_AuthenticatedUser: 15656,\n WellKnownRole_Observer: 15668,\n EndpointType_Encoding_DefaultBinary: 15671,\n WellKnownRole_Operator: 15680,\n WellKnownRole_Supervisor: 15692,\n WellKnownRole_SecurityAdmin: 15704,\n WellKnownRole_ConfigureAdmin: 15716,\n IdentityMappingRuleType_Encoding_DefaultXml: 15728,\n IdentityMappingRuleType_Encoding_DefaultBinary: 15736,\n TemporaryFileTransferType_TransferState_Placeholder: 15754,\n FileTransferStateMachineType_Idle: 15815,\n FileTransferStateMachineType_ReadPrepare: 15817,\n FileTransferStateMachineType_ReadTransfer: 15819,\n FileTransferStateMachineType_ApplyWrite: 15821,\n FileTransferStateMachineType_Error: 15823,\n FileTransferStateMachineType_IdleToReadPrepare: 15825,\n FileTransferStateMachineType_ReadPrepareToReadTransfer: 15827,\n FileTransferStateMachineType_ReadTransferToIdle: 15829,\n FileTransferStateMachineType_IdleToApplyWrite: 15831,\n FileTransferStateMachineType_ApplyWriteToIdle: 15833,\n FileTransferStateMachineType_ReadPrepareToError: 15835,\n FileTransferStateMachineType_ReadTransferToError: 15837,\n FileTransferStateMachineType_ApplyWriteToError: 15839,\n FileTransferStateMachineType_ErrorToIdle: 15841,\n SessionlessInvokeRequestType_Encoding_DefaultXml: 15902,\n SessionlessInvokeRequestType_Encoding_DefaultBinary: 15903,\n EndpointType_Encoding_DefaultXml: 15949,\n OPCUANamespaceMetadata: 15957,\n OPCUANamespaceMetadata_NamespaceFile: 15965,\n WellKnownRole_Engineer: 16036,\n RolePermissionType_Encoding_DefaultXml: 16126,\n EndpointType_Encoding_DefaultJson: 16150,\n ServerType_ServerCapabilities_Roles: 16289,\n ServerCapabilitiesType_Roles: 16295,\n FileSystem: 16314,\n FileSystem_FileDirectoryName_Placeholder: 16315,\n FileSystem_FileName_Placeholder: 16327,\n AlarmConditionType_FirstInGroup: 16398,\n AlarmConditionType_AlarmGroup_Placeholder: 16399,\n AlarmGroupType_AlarmConditionInstance_Placeholder: 16406,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState: 16502,\n AlarmGroupType_AlarmConditionInstance_Placeholder_FirstInGroup: 16530,\n LimitAlarmType_FirstInGroup: 16565,\n LimitAlarmType_AlarmGroup_Placeholder: 16566,\n ExclusiveLimitAlarmType_FirstInGroup: 16605,\n ExclusiveLimitAlarmType_AlarmGroup_Placeholder: 16606,\n NonExclusiveLimitAlarmType_FirstInGroup: 16645,\n NonExclusiveLimitAlarmType_AlarmGroup_Placeholder: 16646,\n NonExclusiveLevelAlarmType_FirstInGroup: 16685,\n NonExclusiveLevelAlarmType_AlarmGroup_Placeholder: 16686,\n ExclusiveLevelAlarmType_FirstInGroup: 16725,\n ExclusiveLevelAlarmType_AlarmGroup_Placeholder: 16726,\n NonExclusiveDeviationAlarmType_FirstInGroup: 16765,\n NonExclusiveDeviationAlarmType_AlarmGroup_Placeholder: 16766,\n ExclusiveDeviationAlarmType_FirstInGroup: 16806,\n ExclusiveDeviationAlarmType_AlarmGroup_Placeholder: 16807,\n NonExclusiveRateOfChangeAlarmType_FirstInGroup: 16847,\n NonExclusiveRateOfChangeAlarmType_AlarmGroup_Placeholder: 16848,\n ExclusiveRateOfChangeAlarmType_FirstInGroup: 16888,\n ExclusiveRateOfChangeAlarmType_AlarmGroup_Placeholder: 16889,\n DiscreteAlarmType_FirstInGroup: 16929,\n DiscreteAlarmType_AlarmGroup_Placeholder: 16930,\n OffNormalAlarmType_FirstInGroup: 16965,\n OffNormalAlarmType_AlarmGroup_Placeholder: 16966,\n SystemOffNormalAlarmType_FirstInGroup: 17001,\n SystemOffNormalAlarmType_AlarmGroup_Placeholder: 17002,\n TripAlarmType_FirstInGroup: 17037,\n TripAlarmType_AlarmGroup_Placeholder: 17038,\n CertificateExpirationAlarmType_FirstInGroup: 17073,\n CertificateExpirationAlarmType_AlarmGroup_Placeholder: 17074,\n DiscrepancyAlarmType_ShelvingState: 17180,\n DiscrepancyAlarmType_FirstInGroup: 17208,\n DiscrepancyAlarmType_AlarmGroup_Placeholder: 17209,\n GenericAttributeValue_Encoding_DefaultXml: 17608,\n GenericAttributes_Encoding_DefaultXml: 17609,\n GenericAttributeValue_Encoding_DefaultBinary: 17610,\n GenericAttributes_Encoding_DefaultBinary: 17611,\n AuthorizationServices: 17732,\n AuthorizationServices_ServiceName_Placeholder: 17733,\n DecimalDataType_Encoding_DefaultXml: 17862,\n DecimalDataType_Encoding_DefaultBinary: 17863,\n KeyCredentialConfiguration: 18155,\n KeyCredentialConfiguration_ServiceName_Placeholder: 18156,\n InstrumentDiagnosticAlarmType_ShelvingState: 18438,\n InstrumentDiagnosticAlarmType_FirstInGroup: 18476,\n InstrumentDiagnosticAlarmType_AlarmGroup_Placeholder: 18486,\n SystemDiagnosticAlarmType_ShelvingState: 18587,\n SystemDiagnosticAlarmType_FirstInGroup: 18625,\n SystemDiagnosticAlarmType_AlarmGroup_Placeholder: 18635,\n SessionlessInvokeResponseType_Encoding_DefaultXml: 21000,\n SessionlessInvokeResponseType_Encoding_DefaultBinary: 21001\n};\n export var VariableIds = { \n DataTypeDescriptionType_DataTypeVersion: 104,\n DataTypeDescriptionType_DictionaryFragment: 105,\n DataTypeDictionaryType_DataTypeVersion: 106,\n DataTypeDictionaryType_NamespaceUri: 107,\n ModellingRuleType_NamingRule: 111,\n ModellingRule_Mandatory_NamingRule: 112,\n ModellingRule_Optional_NamingRule: 113,\n ModellingRule_ExposesItsArray_NamingRule: 114,\n ModellingRule_MandatoryShared_NamingRule: 116,\n ServerType_ServerArray: 2005,\n ServerType_NamespaceArray: 2006,\n ServerType_ServerStatus: 2007,\n ServerType_ServiceLevel: 2008,\n ServerCapabilitiesType_ServerProfileArray: 2014,\n ServerCapabilitiesType_LocaleIdArray: 2016,\n ServerCapabilitiesType_MinSupportedSampleRate: 2017,\n ServerDiagnosticsType_ServerDiagnosticsSummary: 2021,\n ServerDiagnosticsType_SamplingIntervalDiagnosticsArray: 2022,\n ServerDiagnosticsType_SubscriptionDiagnosticsArray: 2023,\n ServerDiagnosticsType_EnabledFlag: 2025,\n SessionsDiagnosticsSummaryType_SessionDiagnosticsArray: 2027,\n SessionsDiagnosticsSummaryType_SessionSecurityDiagnosticsArray: 2028,\n SessionDiagnosticsObjectType_SessionDiagnostics: 2030,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics: 2031,\n SessionDiagnosticsObjectType_SubscriptionDiagnosticsArray: 2032,\n ServerRedundancyType_RedundancySupport: 2035,\n TransparentRedundancyType_CurrentServerId: 2037,\n TransparentRedundancyType_RedundantServerArray: 2038,\n NonTransparentRedundancyType_ServerUriArray: 2040,\n BaseEventType_EventId: 2042,\n BaseEventType_EventType: 2043,\n BaseEventType_SourceNode: 2044,\n BaseEventType_SourceName: 2045,\n BaseEventType_Time: 2046,\n BaseEventType_ReceiveTime: 2047,\n BaseEventType_Message: 2050,\n BaseEventType_Severity: 2051,\n AuditEventType_ActionTimeStamp: 2053,\n AuditEventType_Status: 2054,\n AuditEventType_ServerId: 2055,\n AuditEventType_ClientAuditEntryId: 2056,\n AuditEventType_ClientUserId: 2057,\n AuditOpenSecureChannelEventType_ClientCertificate: 2061,\n AuditOpenSecureChannelEventType_RequestType: 2062,\n AuditOpenSecureChannelEventType_SecurityPolicyUri: 2063,\n AuditOpenSecureChannelEventType_SecurityMode: 2065,\n AuditOpenSecureChannelEventType_RequestedLifetime: 2066,\n AuditSessionEventType_SessionId: 2070,\n AuditCreateSessionEventType_SecureChannelId: 2072,\n AuditCreateSessionEventType_ClientCertificate: 2073,\n AuditCreateSessionEventType_RevisedSessionTimeout: 2074,\n AuditActivateSessionEventType_ClientSoftwareCertificates: 2076,\n AuditActivateSessionEventType_UserIdentityToken: 2077,\n AuditCancelEventType_RequestHandle: 2079,\n AuditCertificateEventType_Certificate: 2081,\n AuditCertificateDataMismatchEventType_InvalidHostname: 2083,\n AuditCertificateDataMismatchEventType_InvalidUri: 2084,\n AuditAddNodesEventType_NodesToAdd: 2092,\n AuditDeleteNodesEventType_NodesToDelete: 2094,\n AuditAddReferencesEventType_ReferencesToAdd: 2096,\n AuditDeleteReferencesEventType_ReferencesToDelete: 2098,\n AuditWriteUpdateEventType_IndexRange: 2101,\n AuditWriteUpdateEventType_OldValue: 2102,\n AuditWriteUpdateEventType_NewValue: 2103,\n AuditUpdateMethodEventType_MethodId: 2128,\n AuditUpdateMethodEventType_InputArguments: 2129,\n GeneralModelChangeEventType_Changes: 2134,\n ServerStatusType_StartTime: 2139,\n ServerStatusType_CurrentTime: 2140,\n ServerStatusType_State: 2141,\n ServerStatusType_BuildInfo: 2142,\n ServerDiagnosticsSummaryType_ServerViewCount: 2151,\n ServerDiagnosticsSummaryType_CurrentSessionCount: 2152,\n ServerDiagnosticsSummaryType_CumulatedSessionCount: 2153,\n ServerDiagnosticsSummaryType_SecurityRejectedSessionCount: 2154,\n ServerDiagnosticsSummaryType_RejectedSessionCount: 2155,\n ServerDiagnosticsSummaryType_SessionTimeoutCount: 2156,\n ServerDiagnosticsSummaryType_SessionAbortCount: 2157,\n ServerDiagnosticsSummaryType_PublishingIntervalCount: 2159,\n ServerDiagnosticsSummaryType_CurrentSubscriptionCount: 2160,\n ServerDiagnosticsSummaryType_CumulatedSubscriptionCount: 2161,\n ServerDiagnosticsSummaryType_SecurityRejectedRequestsCount: 2162,\n ServerDiagnosticsSummaryType_RejectedRequestsCount: 2163,\n SamplingIntervalDiagnosticsType_SamplingInterval: 2166,\n SubscriptionDiagnosticsType_SessionId: 2173,\n SubscriptionDiagnosticsType_SubscriptionId: 2174,\n SubscriptionDiagnosticsType_Priority: 2175,\n SubscriptionDiagnosticsType_PublishingInterval: 2176,\n SubscriptionDiagnosticsType_MaxKeepAliveCount: 2177,\n SubscriptionDiagnosticsType_MaxNotificationsPerPublish: 2179,\n SubscriptionDiagnosticsType_PublishingEnabled: 2180,\n SubscriptionDiagnosticsType_ModifyCount: 2181,\n SubscriptionDiagnosticsType_EnableCount: 2182,\n SubscriptionDiagnosticsType_DisableCount: 2183,\n SubscriptionDiagnosticsType_RepublishRequestCount: 2184,\n SubscriptionDiagnosticsType_RepublishMessageRequestCount: 2185,\n SubscriptionDiagnosticsType_RepublishMessageCount: 2186,\n SubscriptionDiagnosticsType_TransferRequestCount: 2187,\n SubscriptionDiagnosticsType_TransferredToAltClientCount: 2188,\n SubscriptionDiagnosticsType_TransferredToSameClientCount: 2189,\n SubscriptionDiagnosticsType_PublishRequestCount: 2190,\n SubscriptionDiagnosticsType_DataChangeNotificationsCount: 2191,\n SubscriptionDiagnosticsType_NotificationsCount: 2193,\n SessionDiagnosticsVariableType_SessionId: 2198,\n SessionDiagnosticsVariableType_SessionName: 2199,\n SessionDiagnosticsVariableType_ClientDescription: 2200,\n SessionDiagnosticsVariableType_ServerUri: 2201,\n SessionDiagnosticsVariableType_EndpointUrl: 2202,\n SessionDiagnosticsVariableType_LocaleIds: 2203,\n SessionDiagnosticsVariableType_ActualSessionTimeout: 2204,\n SessionDiagnosticsVariableType_ClientConnectionTime: 2205,\n SessionDiagnosticsVariableType_ClientLastContactTime: 2206,\n SessionDiagnosticsVariableType_CurrentSubscriptionsCount: 2207,\n SessionDiagnosticsVariableType_CurrentMonitoredItemsCount: 2208,\n SessionDiagnosticsVariableType_CurrentPublishRequestsInQueue: 2209,\n SessionDiagnosticsVariableType_ReadCount: 2217,\n SessionDiagnosticsVariableType_HistoryReadCount: 2218,\n SessionDiagnosticsVariableType_WriteCount: 2219,\n SessionDiagnosticsVariableType_HistoryUpdateCount: 2220,\n SessionDiagnosticsVariableType_CallCount: 2221,\n SessionDiagnosticsVariableType_CreateMonitoredItemsCount: 2222,\n SessionDiagnosticsVariableType_ModifyMonitoredItemsCount: 2223,\n SessionDiagnosticsVariableType_SetMonitoringModeCount: 2224,\n SessionDiagnosticsVariableType_SetTriggeringCount: 2225,\n SessionDiagnosticsVariableType_DeleteMonitoredItemsCount: 2226,\n SessionDiagnosticsVariableType_CreateSubscriptionCount: 2227,\n SessionDiagnosticsVariableType_ModifySubscriptionCount: 2228,\n SessionDiagnosticsVariableType_SetPublishingModeCount: 2229,\n SessionDiagnosticsVariableType_PublishCount: 2230,\n SessionDiagnosticsVariableType_RepublishCount: 2231,\n SessionDiagnosticsVariableType_TransferSubscriptionsCount: 2232,\n SessionDiagnosticsVariableType_DeleteSubscriptionsCount: 2233,\n SessionDiagnosticsVariableType_AddNodesCount: 2234,\n SessionDiagnosticsVariableType_AddReferencesCount: 2235,\n SessionDiagnosticsVariableType_DeleteNodesCount: 2236,\n SessionDiagnosticsVariableType_DeleteReferencesCount: 2237,\n SessionDiagnosticsVariableType_BrowseCount: 2238,\n SessionDiagnosticsVariableType_BrowseNextCount: 2239,\n SessionDiagnosticsVariableType_TranslateBrowsePathsToNodeIdsCount: 2240,\n SessionDiagnosticsVariableType_QueryFirstCount: 2241,\n SessionDiagnosticsVariableType_QueryNextCount: 2242,\n SessionSecurityDiagnosticsType_SessionId: 2245,\n SessionSecurityDiagnosticsType_ClientUserIdOfSession: 2246,\n SessionSecurityDiagnosticsType_ClientUserIdHistory: 2247,\n SessionSecurityDiagnosticsType_AuthenticationMechanism: 2248,\n SessionSecurityDiagnosticsType_Encoding: 2249,\n SessionSecurityDiagnosticsType_TransportProtocol: 2250,\n SessionSecurityDiagnosticsType_SecurityMode: 2251,\n SessionSecurityDiagnosticsType_SecurityPolicyUri: 2252,\n Server_ServerArray: 2254,\n Server_NamespaceArray: 2255,\n Server_ServerStatus: 2256,\n Server_ServerStatus_StartTime: 2257,\n Server_ServerStatus_CurrentTime: 2258,\n Server_ServerStatus_State: 2259,\n Server_ServerStatus_BuildInfo: 2260,\n Server_ServerStatus_BuildInfo_ProductName: 2261,\n Server_ServerStatus_BuildInfo_ProductUri: 2262,\n Server_ServerStatus_BuildInfo_ManufacturerName: 2263,\n Server_ServerStatus_BuildInfo_SoftwareVersion: 2264,\n Server_ServerStatus_BuildInfo_BuildNumber: 2265,\n Server_ServerStatus_BuildInfo_BuildDate: 2266,\n Server_ServiceLevel: 2267,\n Server_ServerCapabilities_ServerProfileArray: 2269,\n Server_ServerCapabilities_LocaleIdArray: 2271,\n Server_ServerCapabilities_MinSupportedSampleRate: 2272,\n Server_ServerDiagnostics_ServerDiagnosticsSummary: 2275,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount: 2276,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount: 2277,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount: 2278,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount: 2279,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount: 2281,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount: 2282,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount: 2284,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount: 2285,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount: 2286,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount: 2287,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount: 2288,\n Server_ServerDiagnostics_SamplingIntervalDiagnosticsArray: 2289,\n Server_ServerDiagnostics_SubscriptionDiagnosticsArray: 2290,\n Server_ServerDiagnostics_EnabledFlag: 2294,\n StateType_StateNumber: 2308,\n TransitionType_TransitionNumber: 2312,\n HistoricalDataConfigurationType_Stepped: 2323,\n HistoricalDataConfigurationType_Definition: 2324,\n HistoricalDataConfigurationType_MaxTimeInterval: 2325,\n HistoricalDataConfigurationType_MinTimeInterval: 2326,\n HistoricalDataConfigurationType_ExceptionDeviation: 2327,\n HistoricalDataConfigurationType_ExceptionDeviationFormat: 2328,\n HistoryServerCapabilitiesType_AccessHistoryDataCapability: 2331,\n HistoryServerCapabilitiesType_AccessHistoryEventsCapability: 2332,\n HistoryServerCapabilitiesType_InsertDataCapability: 2334,\n HistoryServerCapabilitiesType_ReplaceDataCapability: 2335,\n HistoryServerCapabilitiesType_UpdateDataCapability: 2336,\n HistoryServerCapabilitiesType_DeleteRawCapability: 2337,\n HistoryServerCapabilitiesType_DeleteAtTimeCapability: 2338,\n DataItemType_Definition: 2366,\n DataItemType_ValuePrecision: 2367,\n AnalogItemType_EURange: 2369,\n AnalogItemType_InstrumentRange: 2370,\n AnalogItemType_EngineeringUnits: 2371,\n TwoStateDiscreteType_FalseState: 2374,\n TwoStateDiscreteType_TrueState: 2375,\n MultiStateDiscreteType_EnumStrings: 2377,\n ProgramTransitionEventType_IntermediateResult: 2379,\n ProgramDiagnosticType_CreateSessionId: 2381,\n ProgramDiagnosticType_CreateClientName: 2382,\n ProgramDiagnosticType_InvocationCreationTime: 2383,\n ProgramDiagnosticType_LastTransitionTime: 2384,\n ProgramDiagnosticType_LastMethodCall: 2385,\n ProgramDiagnosticType_LastMethodSessionId: 2386,\n ProgramDiagnosticType_LastMethodInputArguments: 2387,\n ProgramDiagnosticType_LastMethodOutputArguments: 2388,\n ProgramDiagnosticType_LastMethodCallTime: 2389,\n ProgramDiagnosticType_LastMethodReturnStatus: 2390,\n ProgramStateMachineType_Creatable: 2392,\n ProgramStateMachineType_Deletable: 2393,\n ProgramStateMachineType_AutoDelete: 2394,\n ProgramStateMachineType_RecycleCount: 2395,\n ProgramStateMachineType_InstanceCount: 2396,\n ProgramStateMachineType_MaxInstanceCount: 2397,\n ProgramStateMachineType_MaxRecycleCount: 2398,\n ProgramStateMachineType_ProgramDiagnostics: 2399,\n ProgramStateMachineType_Ready_StateNumber: 2401,\n ProgramStateMachineType_Running_StateNumber: 2403,\n ProgramStateMachineType_Suspended_StateNumber: 2405,\n ProgramStateMachineType_Halted_StateNumber: 2407,\n ProgramStateMachineType_HaltedToReady_TransitionNumber: 2409,\n ProgramStateMachineType_ReadyToRunning_TransitionNumber: 2411,\n ProgramStateMachineType_RunningToHalted_TransitionNumber: 2413,\n ProgramStateMachineType_RunningToReady_TransitionNumber: 2415,\n ProgramStateMachineType_RunningToSuspended_TransitionNumber: 2417,\n ProgramStateMachineType_SuspendedToRunning_TransitionNumber: 2419,\n ProgramStateMachineType_SuspendedToHalted_TransitionNumber: 2421,\n ProgramStateMachineType_SuspendedToReady_TransitionNumber: 2423,\n ProgramStateMachineType_ReadyToHalted_TransitionNumber: 2425,\n SessionDiagnosticsVariableType_RegisterNodesCount: 2730,\n SessionDiagnosticsVariableType_UnregisterNodesCount: 2731,\n ServerCapabilitiesType_MaxBrowseContinuationPoints: 2732,\n ServerCapabilitiesType_MaxQueryContinuationPoints: 2733,\n ServerCapabilitiesType_MaxHistoryContinuationPoints: 2734,\n Server_ServerCapabilities_MaxBrowseContinuationPoints: 2735,\n Server_ServerCapabilities_MaxQueryContinuationPoints: 2736,\n Server_ServerCapabilities_MaxHistoryContinuationPoints: 2737,\n SemanticChangeEventType_Changes: 2739,\n ServerType_Auditing: 2742,\n AuditChannelEventType_SecureChannelId: 2745,\n AuditOpenSecureChannelEventType_ClientCertificateThumbprint: 2746,\n AuditCreateSessionEventType_ClientCertificateThumbprint: 2747,\n AuditUrlMismatchEventType_EndpointUrl: 2749,\n AuditWriteUpdateEventType_AttributeId: 2750,\n AuditHistoryUpdateEventType_ParameterDataTypeId: 2751,\n ServerStatusType_SecondsTillShutdown: 2752,\n ServerStatusType_ShutdownReason: 2753,\n StateVariableType_Id: 2756,\n StateVariableType_Name: 2757,\n StateVariableType_Number: 2758,\n StateVariableType_EffectiveDisplayName: 2759,\n FiniteStateVariableType_Id: 2761,\n TransitionVariableType_Id: 2763,\n TransitionVariableType_Name: 2764,\n TransitionVariableType_Number: 2765,\n TransitionVariableType_TransitionTime: 2766,\n FiniteTransitionVariableType_Id: 2768,\n StateMachineType_CurrentState: 2769,\n StateMachineType_LastTransition: 2770,\n FiniteStateMachineType_CurrentState: 2772,\n FiniteStateMachineType_LastTransition: 2773,\n TransitionEventType_Transition: 2774,\n TransitionEventType_FromState: 2775,\n TransitionEventType_ToState: 2776,\n AuditUpdateStateEventType_OldStateId: 2777,\n AuditUpdateStateEventType_NewStateId: 2778,\n DialogConditionType_Prompt: 2831,\n ShelvedStateMachineType_TimedShelve_InputArguments: 2991,\n Server_ServerStatus_SecondsTillShutdown: 2992,\n Server_ServerStatus_ShutdownReason: 2993,\n Server_Auditing: 2994,\n SubscriptionDiagnosticsType_EventNotificationsCount: 2998,\n AuditHistoryEventUpdateEventType_Filter: 3003,\n AuditHistoryRawModifyDeleteEventType_IsDeleteModified: 3015,\n AuditHistoryRawModifyDeleteEventType_StartTime: 3016,\n AuditHistoryRawModifyDeleteEventType_EndTime: 3017,\n AuditHistoryAtTimeDeleteEventType_ReqTimes: 3020,\n AuditHistoryAtTimeDeleteEventType_OldValues: 3021,\n AuditHistoryEventDeleteEventType_EventIds: 3023,\n AuditHistoryEventDeleteEventType_OldValues: 3024,\n AuditHistoryEventUpdateEventType_UpdatedNode: 3025,\n AuditHistoryValueUpdateEventType_UpdatedNode: 3026,\n AuditHistoryDeleteEventType_UpdatedNode: 3027,\n AuditHistoryEventUpdateEventType_PerformInsertReplace: 3028,\n AuditHistoryEventUpdateEventType_NewValues: 3029,\n AuditHistoryEventUpdateEventType_OldValues: 3030,\n AuditHistoryValueUpdateEventType_PerformInsertReplace: 3031,\n AuditHistoryValueUpdateEventType_NewValues: 3032,\n AuditHistoryValueUpdateEventType_OldValues: 3033,\n AuditHistoryRawModifyDeleteEventType_OldValues: 3034,\n ServerCapabilitiesType_SoftwareCertificates: 3049,\n SessionDiagnosticsVariableType_MaxResponseMessageSize: 3050,\n BuildInfoType_ProductUri: 3052,\n BuildInfoType_ManufacturerName: 3053,\n BuildInfoType_ProductName: 3054,\n BuildInfoType_SoftwareVersion: 3055,\n BuildInfoType_BuildNumber: 3056,\n BuildInfoType_BuildDate: 3057,\n SessionSecurityDiagnosticsType_ClientCertificate: 3058,\n Icon: 3067,\n NodeVersion: 3068,\n LocalTime: 3069,\n AllowNulls: 3070,\n EnumValues: 3071,\n InputArguments: 3072,\n OutputArguments: 3073,\n ServerType_ServerStatus_StartTime: 3074,\n ServerType_ServerStatus_CurrentTime: 3075,\n ServerType_ServerStatus_State: 3076,\n ServerType_ServerStatus_BuildInfo: 3077,\n ServerType_ServerStatus_BuildInfo_ProductUri: 3078,\n ServerType_ServerStatus_BuildInfo_ManufacturerName: 3079,\n ServerType_ServerStatus_BuildInfo_ProductName: 3080,\n ServerType_ServerStatus_BuildInfo_SoftwareVersion: 3081,\n ServerType_ServerStatus_BuildInfo_BuildNumber: 3082,\n ServerType_ServerStatus_BuildInfo_BuildDate: 3083,\n ServerType_ServerStatus_SecondsTillShutdown: 3084,\n ServerType_ServerStatus_ShutdownReason: 3085,\n ServerType_ServerCapabilities_ServerProfileArray: 3086,\n ServerType_ServerCapabilities_LocaleIdArray: 3087,\n ServerType_ServerCapabilities_MinSupportedSampleRate: 3088,\n ServerType_ServerCapabilities_MaxBrowseContinuationPoints: 3089,\n ServerType_ServerCapabilities_MaxQueryContinuationPoints: 3090,\n ServerType_ServerCapabilities_MaxHistoryContinuationPoints: 3091,\n ServerType_ServerCapabilities_SoftwareCertificates: 3092,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary: 3095,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_ServerViewCount: 3096,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSessionCount: 3097,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSessionCount: 3098,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedSessionCount: 3099,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount: 3100,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionTimeoutCount: 3101,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SessionAbortCount: 3102,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_PublishingIntervalCount: 3104,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CurrentSubscriptionCount: 3105,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_CumulatedSubscriptionCount: 3106,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_SecurityRejectedRequestsCount: 3107,\n ServerType_ServerDiagnostics_ServerDiagnosticsSummary_RejectedRequestsCount: 3108,\n ServerType_ServerDiagnostics_SamplingIntervalDiagnosticsArray: 3109,\n ServerType_ServerDiagnostics_SubscriptionDiagnosticsArray: 3110,\n ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray: 3112,\n ServerType_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray: 3113,\n ServerType_ServerDiagnostics_EnabledFlag: 3114,\n ServerType_ServerRedundancy_RedundancySupport: 3115,\n ServerDiagnosticsType_ServerDiagnosticsSummary_ServerViewCount: 3116,\n ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSessionCount: 3117,\n ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSessionCount: 3118,\n ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedSessionCount: 3119,\n ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedSessionCount: 3120,\n ServerDiagnosticsType_ServerDiagnosticsSummary_SessionTimeoutCount: 3121,\n ServerDiagnosticsType_ServerDiagnosticsSummary_SessionAbortCount: 3122,\n ServerDiagnosticsType_ServerDiagnosticsSummary_PublishingIntervalCount: 3124,\n ServerDiagnosticsType_ServerDiagnosticsSummary_CurrentSubscriptionCount: 3125,\n ServerDiagnosticsType_ServerDiagnosticsSummary_CumulatedSubscriptionCount: 3126,\n ServerDiagnosticsType_ServerDiagnosticsSummary_SecurityRejectedRequestsCount: 3127,\n ServerDiagnosticsType_ServerDiagnosticsSummary_RejectedRequestsCount: 3128,\n ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionDiagnosticsArray: 3129,\n ServerDiagnosticsType_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray: 3130,\n SessionDiagnosticsObjectType_SessionDiagnostics_SessionId: 3131,\n SessionDiagnosticsObjectType_SessionDiagnostics_SessionName: 3132,\n SessionDiagnosticsObjectType_SessionDiagnostics_ClientDescription: 3133,\n SessionDiagnosticsObjectType_SessionDiagnostics_ServerUri: 3134,\n SessionDiagnosticsObjectType_SessionDiagnostics_EndpointUrl: 3135,\n SessionDiagnosticsObjectType_SessionDiagnostics_LocaleIds: 3136,\n SessionDiagnosticsObjectType_SessionDiagnostics_ActualSessionTimeout: 3137,\n SessionDiagnosticsObjectType_SessionDiagnostics_MaxResponseMessageSize: 3138,\n SessionDiagnosticsObjectType_SessionDiagnostics_ClientConnectionTime: 3139,\n SessionDiagnosticsObjectType_SessionDiagnostics_ClientLastContactTime: 3140,\n SessionDiagnosticsObjectType_SessionDiagnostics_CurrentSubscriptionsCount: 3141,\n SessionDiagnosticsObjectType_SessionDiagnostics_CurrentMonitoredItemsCount: 3142,\n SessionDiagnosticsObjectType_SessionDiagnostics_CurrentPublishRequestsInQueue: 3143,\n SessionDiagnosticsObjectType_SessionDiagnostics_ReadCount: 3151,\n SessionDiagnosticsObjectType_SessionDiagnostics_HistoryReadCount: 3152,\n SessionDiagnosticsObjectType_SessionDiagnostics_WriteCount: 3153,\n SessionDiagnosticsObjectType_SessionDiagnostics_HistoryUpdateCount: 3154,\n SessionDiagnosticsObjectType_SessionDiagnostics_CallCount: 3155,\n SessionDiagnosticsObjectType_SessionDiagnostics_CreateMonitoredItemsCount: 3156,\n SessionDiagnosticsObjectType_SessionDiagnostics_ModifyMonitoredItemsCount: 3157,\n SessionDiagnosticsObjectType_SessionDiagnostics_SetMonitoringModeCount: 3158,\n SessionDiagnosticsObjectType_SessionDiagnostics_SetTriggeringCount: 3159,\n SessionDiagnosticsObjectType_SessionDiagnostics_DeleteMonitoredItemsCount: 3160,\n SessionDiagnosticsObjectType_SessionDiagnostics_CreateSubscriptionCount: 3161,\n SessionDiagnosticsObjectType_SessionDiagnostics_ModifySubscriptionCount: 3162,\n SessionDiagnosticsObjectType_SessionDiagnostics_SetPublishingModeCount: 3163,\n SessionDiagnosticsObjectType_SessionDiagnostics_PublishCount: 3164,\n SessionDiagnosticsObjectType_SessionDiagnostics_RepublishCount: 3165,\n SessionDiagnosticsObjectType_SessionDiagnostics_TransferSubscriptionsCount: 3166,\n SessionDiagnosticsObjectType_SessionDiagnostics_DeleteSubscriptionsCount: 3167,\n SessionDiagnosticsObjectType_SessionDiagnostics_AddNodesCount: 3168,\n SessionDiagnosticsObjectType_SessionDiagnostics_AddReferencesCount: 3169,\n SessionDiagnosticsObjectType_SessionDiagnostics_DeleteNodesCount: 3170,\n SessionDiagnosticsObjectType_SessionDiagnostics_DeleteReferencesCount: 3171,\n SessionDiagnosticsObjectType_SessionDiagnostics_BrowseCount: 3172,\n SessionDiagnosticsObjectType_SessionDiagnostics_BrowseNextCount: 3173,\n SessionDiagnosticsObjectType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount: 3174,\n SessionDiagnosticsObjectType_SessionDiagnostics_QueryFirstCount: 3175,\n SessionDiagnosticsObjectType_SessionDiagnostics_QueryNextCount: 3176,\n SessionDiagnosticsObjectType_SessionDiagnostics_RegisterNodesCount: 3177,\n SessionDiagnosticsObjectType_SessionDiagnostics_UnregisterNodesCount: 3178,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SessionId: 3179,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdOfSession: 3180,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientUserIdHistory: 3181,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics_AuthenticationMechanism: 3182,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics_Encoding: 3183,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics_TransportProtocol: 3184,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityMode: 3185,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics_SecurityPolicyUri: 3186,\n SessionDiagnosticsObjectType_SessionSecurityDiagnostics_ClientCertificate: 3187,\n TransparentRedundancyType_RedundancySupport: 3188,\n NonTransparentRedundancyType_RedundancySupport: 3189,\n BaseEventType_LocalTime: 3190,\n EventQueueOverflowEventType_EventId: 3191,\n EventQueueOverflowEventType_EventType: 3192,\n EventQueueOverflowEventType_SourceNode: 3193,\n EventQueueOverflowEventType_SourceName: 3194,\n EventQueueOverflowEventType_Time: 3195,\n EventQueueOverflowEventType_ReceiveTime: 3196,\n EventQueueOverflowEventType_LocalTime: 3197,\n EventQueueOverflowEventType_Message: 3198,\n EventQueueOverflowEventType_Severity: 3199,\n AuditEventType_EventId: 3200,\n AuditEventType_EventType: 3201,\n AuditEventType_SourceNode: 3202,\n AuditEventType_SourceName: 3203,\n AuditEventType_Time: 3204,\n AuditEventType_ReceiveTime: 3205,\n AuditEventType_LocalTime: 3206,\n AuditEventType_Message: 3207,\n AuditEventType_Severity: 3208,\n AuditSecurityEventType_EventId: 3209,\n AuditSecurityEventType_EventType: 3210,\n AuditSecurityEventType_SourceNode: 3211,\n AuditSecurityEventType_SourceName: 3212,\n AuditSecurityEventType_Time: 3213,\n AuditSecurityEventType_ReceiveTime: 3214,\n AuditSecurityEventType_LocalTime: 3215,\n AuditSecurityEventType_Message: 3216,\n AuditSecurityEventType_Severity: 3217,\n AuditSecurityEventType_ActionTimeStamp: 3218,\n AuditSecurityEventType_Status: 3219,\n AuditSecurityEventType_ServerId: 3220,\n AuditSecurityEventType_ClientAuditEntryId: 3221,\n AuditSecurityEventType_ClientUserId: 3222,\n AuditChannelEventType_EventId: 3223,\n AuditChannelEventType_EventType: 3224,\n AuditChannelEventType_SourceNode: 3225,\n AuditChannelEventType_SourceName: 3226,\n AuditChannelEventType_Time: 3227,\n AuditChannelEventType_ReceiveTime: 3228,\n AuditChannelEventType_LocalTime: 3229,\n AuditChannelEventType_Message: 3230,\n AuditChannelEventType_Severity: 3231,\n AuditChannelEventType_ActionTimeStamp: 3232,\n AuditChannelEventType_Status: 3233,\n AuditChannelEventType_ServerId: 3234,\n AuditChannelEventType_ClientAuditEntryId: 3235,\n AuditChannelEventType_ClientUserId: 3236,\n AuditOpenSecureChannelEventType_EventId: 3237,\n AuditOpenSecureChannelEventType_EventType: 3238,\n AuditOpenSecureChannelEventType_SourceNode: 3239,\n AuditOpenSecureChannelEventType_SourceName: 3240,\n AuditOpenSecureChannelEventType_Time: 3241,\n AuditOpenSecureChannelEventType_ReceiveTime: 3242,\n AuditOpenSecureChannelEventType_LocalTime: 3243,\n AuditOpenSecureChannelEventType_Message: 3244,\n AuditOpenSecureChannelEventType_Severity: 3245,\n AuditOpenSecureChannelEventType_ActionTimeStamp: 3246,\n AuditOpenSecureChannelEventType_Status: 3247,\n AuditOpenSecureChannelEventType_ServerId: 3248,\n AuditOpenSecureChannelEventType_ClientAuditEntryId: 3249,\n AuditOpenSecureChannelEventType_ClientUserId: 3250,\n AuditOpenSecureChannelEventType_SecureChannelId: 3251,\n AuditSessionEventType_EventId: 3252,\n AuditSessionEventType_EventType: 3253,\n AuditSessionEventType_SourceNode: 3254,\n AuditSessionEventType_SourceName: 3255,\n AuditSessionEventType_Time: 3256,\n AuditSessionEventType_ReceiveTime: 3257,\n AuditSessionEventType_LocalTime: 3258,\n AuditSessionEventType_Message: 3259,\n AuditSessionEventType_Severity: 3260,\n AuditSessionEventType_ActionTimeStamp: 3261,\n AuditSessionEventType_Status: 3262,\n AuditSessionEventType_ServerId: 3263,\n AuditSessionEventType_ClientAuditEntryId: 3264,\n AuditSessionEventType_ClientUserId: 3265,\n AuditCreateSessionEventType_EventId: 3266,\n AuditCreateSessionEventType_EventType: 3267,\n AuditCreateSessionEventType_SourceNode: 3268,\n AuditCreateSessionEventType_SourceName: 3269,\n AuditCreateSessionEventType_Time: 3270,\n AuditCreateSessionEventType_ReceiveTime: 3271,\n AuditCreateSessionEventType_LocalTime: 3272,\n AuditCreateSessionEventType_Message: 3273,\n AuditCreateSessionEventType_Severity: 3274,\n AuditCreateSessionEventType_ActionTimeStamp: 3275,\n AuditCreateSessionEventType_Status: 3276,\n AuditCreateSessionEventType_ServerId: 3277,\n AuditCreateSessionEventType_ClientAuditEntryId: 3278,\n AuditCreateSessionEventType_ClientUserId: 3279,\n AuditUrlMismatchEventType_EventId: 3281,\n AuditUrlMismatchEventType_EventType: 3282,\n AuditUrlMismatchEventType_SourceNode: 3283,\n AuditUrlMismatchEventType_SourceName: 3284,\n AuditUrlMismatchEventType_Time: 3285,\n AuditUrlMismatchEventType_ReceiveTime: 3286,\n AuditUrlMismatchEventType_LocalTime: 3287,\n AuditUrlMismatchEventType_Message: 3288,\n AuditUrlMismatchEventType_Severity: 3289,\n AuditUrlMismatchEventType_ActionTimeStamp: 3290,\n AuditUrlMismatchEventType_Status: 3291,\n AuditUrlMismatchEventType_ServerId: 3292,\n AuditUrlMismatchEventType_ClientAuditEntryId: 3293,\n AuditUrlMismatchEventType_ClientUserId: 3294,\n AuditUrlMismatchEventType_SecureChannelId: 3296,\n AuditUrlMismatchEventType_ClientCertificate: 3297,\n AuditUrlMismatchEventType_ClientCertificateThumbprint: 3298,\n AuditUrlMismatchEventType_RevisedSessionTimeout: 3299,\n AuditActivateSessionEventType_EventId: 3300,\n AuditActivateSessionEventType_EventType: 3301,\n AuditActivateSessionEventType_SourceNode: 3302,\n AuditActivateSessionEventType_SourceName: 3303,\n AuditActivateSessionEventType_Time: 3304,\n AuditActivateSessionEventType_ReceiveTime: 3305,\n AuditActivateSessionEventType_LocalTime: 3306,\n AuditActivateSessionEventType_Message: 3307,\n AuditActivateSessionEventType_Severity: 3308,\n AuditActivateSessionEventType_ActionTimeStamp: 3309,\n AuditActivateSessionEventType_Status: 3310,\n AuditActivateSessionEventType_ServerId: 3311,\n AuditActivateSessionEventType_ClientAuditEntryId: 3312,\n AuditActivateSessionEventType_ClientUserId: 3313,\n AuditActivateSessionEventType_SessionId: 3314,\n AuditCancelEventType_EventId: 3315,\n AuditCancelEventType_EventType: 3316,\n AuditCancelEventType_SourceNode: 3317,\n AuditCancelEventType_SourceName: 3318,\n AuditCancelEventType_Time: 3319,\n AuditCancelEventType_ReceiveTime: 3320,\n AuditCancelEventType_LocalTime: 3321,\n AuditCancelEventType_Message: 3322,\n AuditCancelEventType_Severity: 3323,\n AuditCancelEventType_ActionTimeStamp: 3324,\n AuditCancelEventType_Status: 3325,\n AuditCancelEventType_ServerId: 3326,\n AuditCancelEventType_ClientAuditEntryId: 3327,\n AuditCancelEventType_ClientUserId: 3328,\n AuditCancelEventType_SessionId: 3329,\n AuditCertificateEventType_EventId: 3330,\n AuditCertificateEventType_EventType: 3331,\n AuditCertificateEventType_SourceNode: 3332,\n AuditCertificateEventType_SourceName: 3333,\n AuditCertificateEventType_Time: 3334,\n AuditCertificateEventType_ReceiveTime: 3335,\n AuditCertificateEventType_LocalTime: 3336,\n AuditCertificateEventType_Message: 3337,\n AuditCertificateEventType_Severity: 3338,\n AuditCertificateEventType_ActionTimeStamp: 3339,\n AuditCertificateEventType_Status: 3340,\n AuditCertificateEventType_ServerId: 3341,\n AuditCertificateEventType_ClientAuditEntryId: 3342,\n AuditCertificateEventType_ClientUserId: 3343,\n AuditCertificateDataMismatchEventType_EventId: 3344,\n AuditCertificateDataMismatchEventType_EventType: 3345,\n AuditCertificateDataMismatchEventType_SourceNode: 3346,\n AuditCertificateDataMismatchEventType_SourceName: 3347,\n AuditCertificateDataMismatchEventType_Time: 3348,\n AuditCertificateDataMismatchEventType_ReceiveTime: 3349,\n AuditCertificateDataMismatchEventType_LocalTime: 3350,\n AuditCertificateDataMismatchEventType_Message: 3351,\n AuditCertificateDataMismatchEventType_Severity: 3352,\n AuditCertificateDataMismatchEventType_ActionTimeStamp: 3353,\n AuditCertificateDataMismatchEventType_Status: 3354,\n AuditCertificateDataMismatchEventType_ServerId: 3355,\n AuditCertificateDataMismatchEventType_ClientAuditEntryId: 3356,\n AuditCertificateDataMismatchEventType_ClientUserId: 3357,\n AuditCertificateDataMismatchEventType_Certificate: 3358,\n AuditCertificateExpiredEventType_EventId: 3359,\n AuditCertificateExpiredEventType_EventType: 3360,\n AuditCertificateExpiredEventType_SourceNode: 3361,\n AuditCertificateExpiredEventType_SourceName: 3362,\n AuditCertificateExpiredEventType_Time: 3363,\n AuditCertificateExpiredEventType_ReceiveTime: 3364,\n AuditCertificateExpiredEventType_LocalTime: 3365,\n AuditCertificateExpiredEventType_Message: 3366,\n AuditCertificateExpiredEventType_Severity: 3367,\n AuditCertificateExpiredEventType_ActionTimeStamp: 3368,\n AuditCertificateExpiredEventType_Status: 3369,\n AuditCertificateExpiredEventType_ServerId: 3370,\n AuditCertificateExpiredEventType_ClientAuditEntryId: 3371,\n AuditCertificateExpiredEventType_ClientUserId: 3372,\n AuditCertificateExpiredEventType_Certificate: 3373,\n AuditCertificateInvalidEventType_EventId: 3374,\n AuditCertificateInvalidEventType_EventType: 3375,\n AuditCertificateInvalidEventType_SourceNode: 3376,\n AuditCertificateInvalidEventType_SourceName: 3377,\n AuditCertificateInvalidEventType_Time: 3378,\n AuditCertificateInvalidEventType_ReceiveTime: 3379,\n AuditCertificateInvalidEventType_LocalTime: 3380,\n AuditCertificateInvalidEventType_Message: 3381,\n AuditCertificateInvalidEventType_Severity: 3382,\n AuditCertificateInvalidEventType_ActionTimeStamp: 3383,\n AuditCertificateInvalidEventType_Status: 3384,\n AuditCertificateInvalidEventType_ServerId: 3385,\n AuditCertificateInvalidEventType_ClientAuditEntryId: 3386,\n AuditCertificateInvalidEventType_ClientUserId: 3387,\n AuditCertificateInvalidEventType_Certificate: 3388,\n AuditCertificateUntrustedEventType_EventId: 3389,\n AuditCertificateUntrustedEventType_EventType: 3390,\n AuditCertificateUntrustedEventType_SourceNode: 3391,\n AuditCertificateUntrustedEventType_SourceName: 3392,\n AuditCertificateUntrustedEventType_Time: 3393,\n AuditCertificateUntrustedEventType_ReceiveTime: 3394,\n AuditCertificateUntrustedEventType_LocalTime: 3395,\n AuditCertificateUntrustedEventType_Message: 3396,\n AuditCertificateUntrustedEventType_Severity: 3397,\n AuditCertificateUntrustedEventType_ActionTimeStamp: 3398,\n AuditCertificateUntrustedEventType_Status: 3399,\n AuditCertificateUntrustedEventType_ServerId: 3400,\n AuditCertificateUntrustedEventType_ClientAuditEntryId: 3401,\n AuditCertificateUntrustedEventType_ClientUserId: 3402,\n AuditCertificateUntrustedEventType_Certificate: 3403,\n AuditCertificateRevokedEventType_EventId: 3404,\n AuditCertificateRevokedEventType_EventType: 3405,\n AuditCertificateRevokedEventType_SourceNode: 3406,\n AuditCertificateRevokedEventType_SourceName: 3407,\n AuditCertificateRevokedEventType_Time: 3408,\n AuditCertificateRevokedEventType_ReceiveTime: 3409,\n AuditCertificateRevokedEventType_LocalTime: 3410,\n AuditCertificateRevokedEventType_Message: 3411,\n AuditCertificateRevokedEventType_Severity: 3412,\n AuditCertificateRevokedEventType_ActionTimeStamp: 3413,\n AuditCertificateRevokedEventType_Status: 3414,\n AuditCertificateRevokedEventType_ServerId: 3415,\n AuditCertificateRevokedEventType_ClientAuditEntryId: 3416,\n AuditCertificateRevokedEventType_ClientUserId: 3417,\n AuditCertificateRevokedEventType_Certificate: 3418,\n AuditCertificateMismatchEventType_EventId: 3419,\n AuditCertificateMismatchEventType_EventType: 3420,\n AuditCertificateMismatchEventType_SourceNode: 3421,\n AuditCertificateMismatchEventType_SourceName: 3422,\n AuditCertificateMismatchEventType_Time: 3423,\n AuditCertificateMismatchEventType_ReceiveTime: 3424,\n AuditCertificateMismatchEventType_LocalTime: 3425,\n AuditCertificateMismatchEventType_Message: 3426,\n AuditCertificateMismatchEventType_Severity: 3427,\n AuditCertificateMismatchEventType_ActionTimeStamp: 3428,\n AuditCertificateMismatchEventType_Status: 3429,\n AuditCertificateMismatchEventType_ServerId: 3430,\n AuditCertificateMismatchEventType_ClientAuditEntryId: 3431,\n AuditCertificateMismatchEventType_ClientUserId: 3432,\n AuditCertificateMismatchEventType_Certificate: 3433,\n AuditNodeManagementEventType_EventId: 3434,\n AuditNodeManagementEventType_EventType: 3435,\n AuditNodeManagementEventType_SourceNode: 3436,\n AuditNodeManagementEventType_SourceName: 3437,\n AuditNodeManagementEventType_Time: 3438,\n AuditNodeManagementEventType_ReceiveTime: 3439,\n AuditNodeManagementEventType_LocalTime: 3440,\n AuditNodeManagementEventType_Message: 3441,\n AuditNodeManagementEventType_Severity: 3442,\n AuditNodeManagementEventType_ActionTimeStamp: 3443,\n AuditNodeManagementEventType_Status: 3444,\n AuditNodeManagementEventType_ServerId: 3445,\n AuditNodeManagementEventType_ClientAuditEntryId: 3446,\n AuditNodeManagementEventType_ClientUserId: 3447,\n AuditAddNodesEventType_EventId: 3448,\n AuditAddNodesEventType_EventType: 3449,\n AuditAddNodesEventType_SourceNode: 3450,\n AuditAddNodesEventType_SourceName: 3451,\n AuditAddNodesEventType_Time: 3452,\n AuditAddNodesEventType_ReceiveTime: 3453,\n AuditAddNodesEventType_LocalTime: 3454,\n AuditAddNodesEventType_Message: 3455,\n AuditAddNodesEventType_Severity: 3456,\n AuditAddNodesEventType_ActionTimeStamp: 3457,\n AuditAddNodesEventType_Status: 3458,\n AuditAddNodesEventType_ServerId: 3459,\n AuditAddNodesEventType_ClientAuditEntryId: 3460,\n AuditAddNodesEventType_ClientUserId: 3461,\n AuditDeleteNodesEventType_EventId: 3462,\n AuditDeleteNodesEventType_EventType: 3463,\n AuditDeleteNodesEventType_SourceNode: 3464,\n AuditDeleteNodesEventType_SourceName: 3465,\n AuditDeleteNodesEventType_Time: 3466,\n AuditDeleteNodesEventType_ReceiveTime: 3467,\n AuditDeleteNodesEventType_LocalTime: 3468,\n AuditDeleteNodesEventType_Message: 3469,\n AuditDeleteNodesEventType_Severity: 3470,\n AuditDeleteNodesEventType_ActionTimeStamp: 3471,\n AuditDeleteNodesEventType_Status: 3472,\n AuditDeleteNodesEventType_ServerId: 3473,\n AuditDeleteNodesEventType_ClientAuditEntryId: 3474,\n AuditDeleteNodesEventType_ClientUserId: 3475,\n AuditAddReferencesEventType_EventId: 3476,\n AuditAddReferencesEventType_EventType: 3477,\n AuditAddReferencesEventType_SourceNode: 3478,\n AuditAddReferencesEventType_SourceName: 3479,\n AuditAddReferencesEventType_Time: 3480,\n AuditAddReferencesEventType_ReceiveTime: 3481,\n AuditAddReferencesEventType_LocalTime: 3482,\n AuditAddReferencesEventType_Message: 3483,\n AuditAddReferencesEventType_Severity: 3484,\n AuditAddReferencesEventType_ActionTimeStamp: 3485,\n AuditAddReferencesEventType_Status: 3486,\n AuditAddReferencesEventType_ServerId: 3487,\n AuditAddReferencesEventType_ClientAuditEntryId: 3488,\n AuditAddReferencesEventType_ClientUserId: 3489,\n AuditDeleteReferencesEventType_EventId: 3490,\n AuditDeleteReferencesEventType_EventType: 3491,\n AuditDeleteReferencesEventType_SourceNode: 3492,\n AuditDeleteReferencesEventType_SourceName: 3493,\n AuditDeleteReferencesEventType_Time: 3494,\n AuditDeleteReferencesEventType_ReceiveTime: 3495,\n AuditDeleteReferencesEventType_LocalTime: 3496,\n AuditDeleteReferencesEventType_Message: 3497,\n AuditDeleteReferencesEventType_Severity: 3498,\n AuditDeleteReferencesEventType_ActionTimeStamp: 3499,\n AuditDeleteReferencesEventType_Status: 3500,\n AuditDeleteReferencesEventType_ServerId: 3501,\n AuditDeleteReferencesEventType_ClientAuditEntryId: 3502,\n AuditDeleteReferencesEventType_ClientUserId: 3503,\n AuditUpdateEventType_EventId: 3504,\n AuditUpdateEventType_EventType: 3505,\n AuditUpdateEventType_SourceNode: 3506,\n AuditUpdateEventType_SourceName: 3507,\n AuditUpdateEventType_Time: 3508,\n AuditUpdateEventType_ReceiveTime: 3509,\n AuditUpdateEventType_LocalTime: 3510,\n AuditUpdateEventType_Message: 3511,\n AuditUpdateEventType_Severity: 3512,\n AuditUpdateEventType_ActionTimeStamp: 3513,\n AuditUpdateEventType_Status: 3514,\n AuditUpdateEventType_ServerId: 3515,\n AuditUpdateEventType_ClientAuditEntryId: 3516,\n AuditUpdateEventType_ClientUserId: 3517,\n AuditWriteUpdateEventType_EventId: 3518,\n AuditWriteUpdateEventType_EventType: 3519,\n AuditWriteUpdateEventType_SourceNode: 3520,\n AuditWriteUpdateEventType_SourceName: 3521,\n AuditWriteUpdateEventType_Time: 3522,\n AuditWriteUpdateEventType_ReceiveTime: 3523,\n AuditWriteUpdateEventType_LocalTime: 3524,\n AuditWriteUpdateEventType_Message: 3525,\n AuditWriteUpdateEventType_Severity: 3526,\n AuditWriteUpdateEventType_ActionTimeStamp: 3527,\n AuditWriteUpdateEventType_Status: 3528,\n AuditWriteUpdateEventType_ServerId: 3529,\n AuditWriteUpdateEventType_ClientAuditEntryId: 3530,\n AuditWriteUpdateEventType_ClientUserId: 3531,\n AuditHistoryUpdateEventType_EventId: 3532,\n AuditHistoryUpdateEventType_EventType: 3533,\n AuditHistoryUpdateEventType_SourceNode: 3534,\n AuditHistoryUpdateEventType_SourceName: 3535,\n AuditHistoryUpdateEventType_Time: 3536,\n AuditHistoryUpdateEventType_ReceiveTime: 3537,\n AuditHistoryUpdateEventType_LocalTime: 3538,\n AuditHistoryUpdateEventType_Message: 3539,\n AuditHistoryUpdateEventType_Severity: 3540,\n AuditHistoryUpdateEventType_ActionTimeStamp: 3541,\n AuditHistoryUpdateEventType_Status: 3542,\n AuditHistoryUpdateEventType_ServerId: 3543,\n AuditHistoryUpdateEventType_ClientAuditEntryId: 3544,\n AuditHistoryUpdateEventType_ClientUserId: 3545,\n AuditHistoryEventUpdateEventType_EventId: 3546,\n AuditHistoryEventUpdateEventType_EventType: 3547,\n AuditHistoryEventUpdateEventType_SourceNode: 3548,\n AuditHistoryEventUpdateEventType_SourceName: 3549,\n AuditHistoryEventUpdateEventType_Time: 3550,\n AuditHistoryEventUpdateEventType_ReceiveTime: 3551,\n AuditHistoryEventUpdateEventType_LocalTime: 3552,\n AuditHistoryEventUpdateEventType_Message: 3553,\n AuditHistoryEventUpdateEventType_Severity: 3554,\n AuditHistoryEventUpdateEventType_ActionTimeStamp: 3555,\n AuditHistoryEventUpdateEventType_Status: 3556,\n AuditHistoryEventUpdateEventType_ServerId: 3557,\n AuditHistoryEventUpdateEventType_ClientAuditEntryId: 3558,\n AuditHistoryEventUpdateEventType_ClientUserId: 3559,\n AuditHistoryEventUpdateEventType_ParameterDataTypeId: 3560,\n AuditHistoryValueUpdateEventType_EventId: 3561,\n AuditHistoryValueUpdateEventType_EventType: 3562,\n AuditHistoryValueUpdateEventType_SourceNode: 3563,\n AuditHistoryValueUpdateEventType_SourceName: 3564,\n AuditHistoryValueUpdateEventType_Time: 3565,\n AuditHistoryValueUpdateEventType_ReceiveTime: 3566,\n AuditHistoryValueUpdateEventType_LocalTime: 3567,\n AuditHistoryValueUpdateEventType_Message: 3568,\n AuditHistoryValueUpdateEventType_Severity: 3569,\n AuditHistoryValueUpdateEventType_ActionTimeStamp: 3570,\n AuditHistoryValueUpdateEventType_Status: 3571,\n AuditHistoryValueUpdateEventType_ServerId: 3572,\n AuditHistoryValueUpdateEventType_ClientAuditEntryId: 3573,\n AuditHistoryValueUpdateEventType_ClientUserId: 3574,\n AuditHistoryValueUpdateEventType_ParameterDataTypeId: 3575,\n AuditHistoryDeleteEventType_EventId: 3576,\n AuditHistoryDeleteEventType_EventType: 3577,\n AuditHistoryDeleteEventType_SourceNode: 3578,\n AuditHistoryDeleteEventType_SourceName: 3579,\n AuditHistoryDeleteEventType_Time: 3580,\n AuditHistoryDeleteEventType_ReceiveTime: 3581,\n AuditHistoryDeleteEventType_LocalTime: 3582,\n AuditHistoryDeleteEventType_Message: 3583,\n AuditHistoryDeleteEventType_Severity: 3584,\n AuditHistoryDeleteEventType_ActionTimeStamp: 3585,\n AuditHistoryDeleteEventType_Status: 3586,\n AuditHistoryDeleteEventType_ServerId: 3587,\n AuditHistoryDeleteEventType_ClientAuditEntryId: 3588,\n AuditHistoryDeleteEventType_ClientUserId: 3589,\n AuditHistoryDeleteEventType_ParameterDataTypeId: 3590,\n AuditHistoryRawModifyDeleteEventType_EventId: 3591,\n AuditHistoryRawModifyDeleteEventType_EventType: 3592,\n AuditHistoryRawModifyDeleteEventType_SourceNode: 3593,\n AuditHistoryRawModifyDeleteEventType_SourceName: 3594,\n AuditHistoryRawModifyDeleteEventType_Time: 3595,\n AuditHistoryRawModifyDeleteEventType_ReceiveTime: 3596,\n AuditHistoryRawModifyDeleteEventType_LocalTime: 3597,\n AuditHistoryRawModifyDeleteEventType_Message: 3598,\n AuditHistoryRawModifyDeleteEventType_Severity: 3599,\n AuditHistoryRawModifyDeleteEventType_ActionTimeStamp: 3600,\n AuditHistoryRawModifyDeleteEventType_Status: 3601,\n AuditHistoryRawModifyDeleteEventType_ServerId: 3602,\n AuditHistoryRawModifyDeleteEventType_ClientAuditEntryId: 3603,\n AuditHistoryRawModifyDeleteEventType_ClientUserId: 3604,\n AuditHistoryRawModifyDeleteEventType_ParameterDataTypeId: 3605,\n AuditHistoryRawModifyDeleteEventType_UpdatedNode: 3606,\n AuditHistoryAtTimeDeleteEventType_EventId: 3607,\n AuditHistoryAtTimeDeleteEventType_EventType: 3608,\n AuditHistoryAtTimeDeleteEventType_SourceNode: 3609,\n AuditHistoryAtTimeDeleteEventType_SourceName: 3610,\n AuditHistoryAtTimeDeleteEventType_Time: 3611,\n AuditHistoryAtTimeDeleteEventType_ReceiveTime: 3612,\n AuditHistoryAtTimeDeleteEventType_LocalTime: 3613,\n AuditHistoryAtTimeDeleteEventType_Message: 3614,\n AuditHistoryAtTimeDeleteEventType_Severity: 3615,\n AuditHistoryAtTimeDeleteEventType_ActionTimeStamp: 3616,\n AuditHistoryAtTimeDeleteEventType_Status: 3617,\n AuditHistoryAtTimeDeleteEventType_ServerId: 3618,\n AuditHistoryAtTimeDeleteEventType_ClientAuditEntryId: 3619,\n AuditHistoryAtTimeDeleteEventType_ClientUserId: 3620,\n AuditHistoryAtTimeDeleteEventType_ParameterDataTypeId: 3621,\n AuditHistoryAtTimeDeleteEventType_UpdatedNode: 3622,\n AuditHistoryEventDeleteEventType_EventId: 3623,\n AuditHistoryEventDeleteEventType_EventType: 3624,\n AuditHistoryEventDeleteEventType_SourceNode: 3625,\n AuditHistoryEventDeleteEventType_SourceName: 3626,\n AuditHistoryEventDeleteEventType_Time: 3627,\n AuditHistoryEventDeleteEventType_ReceiveTime: 3628,\n AuditHistoryEventDeleteEventType_LocalTime: 3629,\n AuditHistoryEventDeleteEventType_Message: 3630,\n AuditHistoryEventDeleteEventType_Severity: 3631,\n AuditHistoryEventDeleteEventType_ActionTimeStamp: 3632,\n AuditHistoryEventDeleteEventType_Status: 3633,\n AuditHistoryEventDeleteEventType_ServerId: 3634,\n AuditHistoryEventDeleteEventType_ClientAuditEntryId: 3635,\n AuditHistoryEventDeleteEventType_ClientUserId: 3636,\n AuditHistoryEventDeleteEventType_ParameterDataTypeId: 3637,\n AuditHistoryEventDeleteEventType_UpdatedNode: 3638,\n AuditUpdateMethodEventType_EventId: 3639,\n AuditUpdateMethodEventType_EventType: 3640,\n AuditUpdateMethodEventType_SourceNode: 3641,\n AuditUpdateMethodEventType_SourceName: 3642,\n AuditUpdateMethodEventType_Time: 3643,\n AuditUpdateMethodEventType_ReceiveTime: 3644,\n AuditUpdateMethodEventType_LocalTime: 3645,\n AuditUpdateMethodEventType_Message: 3646,\n AuditUpdateMethodEventType_Severity: 3647,\n AuditUpdateMethodEventType_ActionTimeStamp: 3648,\n AuditUpdateMethodEventType_Status: 3649,\n AuditUpdateMethodEventType_ServerId: 3650,\n AuditUpdateMethodEventType_ClientAuditEntryId: 3651,\n AuditUpdateMethodEventType_ClientUserId: 3652,\n SystemEventType_EventId: 3653,\n SystemEventType_EventType: 3654,\n SystemEventType_SourceNode: 3655,\n SystemEventType_SourceName: 3656,\n SystemEventType_Time: 3657,\n SystemEventType_ReceiveTime: 3658,\n SystemEventType_LocalTime: 3659,\n SystemEventType_Message: 3660,\n SystemEventType_Severity: 3661,\n DeviceFailureEventType_EventId: 3662,\n DeviceFailureEventType_EventType: 3663,\n DeviceFailureEventType_SourceNode: 3664,\n DeviceFailureEventType_SourceName: 3665,\n DeviceFailureEventType_Time: 3666,\n DeviceFailureEventType_ReceiveTime: 3667,\n DeviceFailureEventType_LocalTime: 3668,\n DeviceFailureEventType_Message: 3669,\n DeviceFailureEventType_Severity: 3670,\n BaseModelChangeEventType_EventId: 3671,\n BaseModelChangeEventType_EventType: 3672,\n BaseModelChangeEventType_SourceNode: 3673,\n BaseModelChangeEventType_SourceName: 3674,\n BaseModelChangeEventType_Time: 3675,\n BaseModelChangeEventType_ReceiveTime: 3676,\n BaseModelChangeEventType_LocalTime: 3677,\n BaseModelChangeEventType_Message: 3678,\n BaseModelChangeEventType_Severity: 3679,\n GeneralModelChangeEventType_EventId: 3680,\n GeneralModelChangeEventType_EventType: 3681,\n GeneralModelChangeEventType_SourceNode: 3682,\n GeneralModelChangeEventType_SourceName: 3683,\n GeneralModelChangeEventType_Time: 3684,\n GeneralModelChangeEventType_ReceiveTime: 3685,\n GeneralModelChangeEventType_LocalTime: 3686,\n GeneralModelChangeEventType_Message: 3687,\n GeneralModelChangeEventType_Severity: 3688,\n SemanticChangeEventType_EventId: 3689,\n SemanticChangeEventType_EventType: 3690,\n SemanticChangeEventType_SourceNode: 3691,\n SemanticChangeEventType_SourceName: 3692,\n SemanticChangeEventType_Time: 3693,\n SemanticChangeEventType_ReceiveTime: 3694,\n SemanticChangeEventType_LocalTime: 3695,\n SemanticChangeEventType_Message: 3696,\n SemanticChangeEventType_Severity: 3697,\n ServerStatusType_BuildInfo_ProductUri: 3698,\n ServerStatusType_BuildInfo_ManufacturerName: 3699,\n ServerStatusType_BuildInfo_ProductName: 3700,\n ServerStatusType_BuildInfo_SoftwareVersion: 3701,\n ServerStatusType_BuildInfo_BuildNumber: 3702,\n ServerStatusType_BuildInfo_BuildDate: 3703,\n Server_ServerCapabilities_SoftwareCertificates: 3704,\n Server_ServerDiagnostics_ServerDiagnosticsSummary_RejectedSessionCount: 3705,\n Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionDiagnosticsArray: 3707,\n Server_ServerDiagnostics_SessionsDiagnosticsSummary_SessionSecurityDiagnosticsArray: 3708,\n Server_ServerRedundancy_RedundancySupport: 3709,\n FiniteStateVariableType_Name: 3714,\n FiniteStateVariableType_Number: 3715,\n FiniteStateVariableType_EffectiveDisplayName: 3716,\n FiniteTransitionVariableType_Name: 3717,\n FiniteTransitionVariableType_Number: 3718,\n FiniteTransitionVariableType_TransitionTime: 3719,\n StateMachineType_CurrentState_Id: 3720,\n StateMachineType_CurrentState_Name: 3721,\n StateMachineType_CurrentState_Number: 3722,\n StateMachineType_CurrentState_EffectiveDisplayName: 3723,\n StateMachineType_LastTransition_Id: 3724,\n StateMachineType_LastTransition_Name: 3725,\n StateMachineType_LastTransition_Number: 3726,\n StateMachineType_LastTransition_TransitionTime: 3727,\n FiniteStateMachineType_CurrentState_Id: 3728,\n FiniteStateMachineType_CurrentState_Name: 3729,\n FiniteStateMachineType_CurrentState_Number: 3730,\n FiniteStateMachineType_CurrentState_EffectiveDisplayName: 3731,\n FiniteStateMachineType_LastTransition_Id: 3732,\n FiniteStateMachineType_LastTransition_Name: 3733,\n FiniteStateMachineType_LastTransition_Number: 3734,\n FiniteStateMachineType_LastTransition_TransitionTime: 3735,\n InitialStateType_StateNumber: 3736,\n TransitionEventType_EventId: 3737,\n TransitionEventType_EventType: 3738,\n TransitionEventType_SourceNode: 3739,\n TransitionEventType_SourceName: 3740,\n TransitionEventType_Time: 3741,\n TransitionEventType_ReceiveTime: 3742,\n TransitionEventType_LocalTime: 3743,\n TransitionEventType_Message: 3744,\n TransitionEventType_Severity: 3745,\n TransitionEventType_FromState_Id: 3746,\n TransitionEventType_FromState_Name: 3747,\n TransitionEventType_FromState_Number: 3748,\n TransitionEventType_FromState_EffectiveDisplayName: 3749,\n TransitionEventType_ToState_Id: 3750,\n TransitionEventType_ToState_Name: 3751,\n TransitionEventType_ToState_Number: 3752,\n TransitionEventType_ToState_EffectiveDisplayName: 3753,\n TransitionEventType_Transition_Id: 3754,\n TransitionEventType_Transition_Name: 3755,\n TransitionEventType_Transition_Number: 3756,\n TransitionEventType_Transition_TransitionTime: 3757,\n AuditUpdateStateEventType_EventId: 3758,\n AuditUpdateStateEventType_EventType: 3759,\n AuditUpdateStateEventType_SourceNode: 3760,\n AuditUpdateStateEventType_SourceName: 3761,\n AuditUpdateStateEventType_Time: 3762,\n AuditUpdateStateEventType_ReceiveTime: 3763,\n AuditUpdateStateEventType_LocalTime: 3764,\n AuditUpdateStateEventType_Message: 3765,\n AuditUpdateStateEventType_Severity: 3766,\n AuditUpdateStateEventType_ActionTimeStamp: 3767,\n AuditUpdateStateEventType_Status: 3768,\n AuditUpdateStateEventType_ServerId: 3769,\n AuditUpdateStateEventType_ClientAuditEntryId: 3770,\n AuditUpdateStateEventType_ClientUserId: 3771,\n AuditUpdateStateEventType_MethodId: 3772,\n AuditUpdateStateEventType_InputArguments: 3773,\n AnalogItemType_Definition: 3774,\n AnalogItemType_ValuePrecision: 3775,\n DiscreteItemType_Definition: 3776,\n DiscreteItemType_ValuePrecision: 3777,\n TwoStateDiscreteType_Definition: 3778,\n TwoStateDiscreteType_ValuePrecision: 3779,\n MultiStateDiscreteType_Definition: 3780,\n MultiStateDiscreteType_ValuePrecision: 3781,\n ProgramTransitionEventType_EventId: 3782,\n ProgramTransitionEventType_EventType: 3783,\n ProgramTransitionEventType_SourceNode: 3784,\n ProgramTransitionEventType_SourceName: 3785,\n ProgramTransitionEventType_Time: 3786,\n ProgramTransitionEventType_ReceiveTime: 3787,\n ProgramTransitionEventType_LocalTime: 3788,\n ProgramTransitionEventType_Message: 3789,\n ProgramTransitionEventType_Severity: 3790,\n ProgramTransitionEventType_FromState: 3791,\n ProgramTransitionEventType_FromState_Id: 3792,\n ProgramTransitionEventType_FromState_Name: 3793,\n ProgramTransitionEventType_FromState_Number: 3794,\n ProgramTransitionEventType_FromState_EffectiveDisplayName: 3795,\n ProgramTransitionEventType_ToState: 3796,\n ProgramTransitionEventType_ToState_Id: 3797,\n ProgramTransitionEventType_ToState_Name: 3798,\n ProgramTransitionEventType_ToState_Number: 3799,\n ProgramTransitionEventType_ToState_EffectiveDisplayName: 3800,\n ProgramTransitionEventType_Transition: 3801,\n ProgramTransitionEventType_Transition_Id: 3802,\n ProgramTransitionEventType_Transition_Name: 3803,\n ProgramTransitionEventType_Transition_Number: 3804,\n ProgramTransitionEventType_Transition_TransitionTime: 3805,\n ProgramTransitionAuditEventType_EventId: 3807,\n ProgramTransitionAuditEventType_EventType: 3808,\n ProgramTransitionAuditEventType_SourceNode: 3809,\n ProgramTransitionAuditEventType_SourceName: 3810,\n ProgramTransitionAuditEventType_Time: 3811,\n ProgramTransitionAuditEventType_ReceiveTime: 3812,\n ProgramTransitionAuditEventType_LocalTime: 3813,\n ProgramTransitionAuditEventType_Message: 3814,\n ProgramTransitionAuditEventType_Severity: 3815,\n ProgramTransitionAuditEventType_ActionTimeStamp: 3816,\n ProgramTransitionAuditEventType_Status: 3817,\n ProgramTransitionAuditEventType_ServerId: 3818,\n ProgramTransitionAuditEventType_ClientAuditEntryId: 3819,\n ProgramTransitionAuditEventType_ClientUserId: 3820,\n ProgramTransitionAuditEventType_MethodId: 3821,\n ProgramTransitionAuditEventType_InputArguments: 3822,\n ProgramTransitionAuditEventType_OldStateId: 3823,\n ProgramTransitionAuditEventType_NewStateId: 3824,\n ProgramTransitionAuditEventType_Transition: 3825,\n ProgramTransitionAuditEventType_Transition_Id: 3826,\n ProgramTransitionAuditEventType_Transition_Name: 3827,\n ProgramTransitionAuditEventType_Transition_Number: 3828,\n ProgramTransitionAuditEventType_Transition_TransitionTime: 3829,\n ProgramStateMachineType_CurrentState: 3830,\n ProgramStateMachineType_CurrentState_Id: 3831,\n ProgramStateMachineType_CurrentState_Name: 3832,\n ProgramStateMachineType_CurrentState_Number: 3833,\n ProgramStateMachineType_CurrentState_EffectiveDisplayName: 3834,\n ProgramStateMachineType_LastTransition: 3835,\n ProgramStateMachineType_LastTransition_Id: 3836,\n ProgramStateMachineType_LastTransition_Name: 3837,\n ProgramStateMachineType_LastTransition_Number: 3838,\n ProgramStateMachineType_LastTransition_TransitionTime: 3839,\n ProgramStateMachineType_ProgramDiagnostics_CreateSessionId: 3840,\n ProgramStateMachineType_ProgramDiagnostics_CreateClientName: 3841,\n ProgramStateMachineType_ProgramDiagnostics_InvocationCreationTime: 3842,\n ProgramStateMachineType_ProgramDiagnostics_LastTransitionTime: 3843,\n ProgramStateMachineType_ProgramDiagnostics_LastMethodCall: 3844,\n ProgramStateMachineType_ProgramDiagnostics_LastMethodSessionId: 3845,\n ProgramStateMachineType_ProgramDiagnostics_LastMethodInputArguments: 3846,\n ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputArguments: 3847,\n ProgramStateMachineType_ProgramDiagnostics_LastMethodCallTime: 3848,\n ProgramStateMachineType_ProgramDiagnostics_LastMethodReturnStatus: 3849,\n AddCommentMethodType_InputArguments: 3864,\n ConditionType_EventId: 3865,\n ConditionType_EventType: 3866,\n ConditionType_SourceNode: 3867,\n ConditionType_SourceName: 3868,\n ConditionType_Time: 3869,\n ConditionType_ReceiveTime: 3870,\n ConditionType_LocalTime: 3871,\n ConditionType_Message: 3872,\n ConditionType_Severity: 3873,\n ConditionType_Retain: 3874,\n ConditionType_ConditionRefresh_InputArguments: 3876,\n RefreshStartEventType_EventId: 3969,\n RefreshStartEventType_EventType: 3970,\n RefreshStartEventType_SourceNode: 3971,\n RefreshStartEventType_SourceName: 3972,\n RefreshStartEventType_Time: 3973,\n RefreshStartEventType_ReceiveTime: 3974,\n RefreshStartEventType_LocalTime: 3975,\n RefreshStartEventType_Message: 3976,\n RefreshStartEventType_Severity: 3977,\n RefreshEndEventType_EventId: 3978,\n RefreshEndEventType_EventType: 3979,\n RefreshEndEventType_SourceNode: 3980,\n RefreshEndEventType_SourceName: 3981,\n RefreshEndEventType_Time: 3982,\n RefreshEndEventType_ReceiveTime: 3983,\n RefreshEndEventType_LocalTime: 3984,\n RefreshEndEventType_Message: 3985,\n RefreshEndEventType_Severity: 3986,\n RefreshRequiredEventType_EventId: 3987,\n RefreshRequiredEventType_EventType: 3988,\n RefreshRequiredEventType_SourceNode: 3989,\n RefreshRequiredEventType_SourceName: 3990,\n RefreshRequiredEventType_Time: 3991,\n RefreshRequiredEventType_ReceiveTime: 3992,\n RefreshRequiredEventType_LocalTime: 3993,\n RefreshRequiredEventType_Message: 3994,\n RefreshRequiredEventType_Severity: 3995,\n AuditConditionEventType_EventId: 3996,\n AuditConditionEventType_EventType: 3997,\n AuditConditionEventType_SourceNode: 3998,\n AuditConditionEventType_SourceName: 3999,\n AuditConditionEventType_Time: 4000,\n AuditConditionEventType_ReceiveTime: 4001,\n AuditConditionEventType_LocalTime: 4002,\n AuditConditionEventType_Message: 4003,\n AuditConditionEventType_Severity: 4004,\n AuditConditionEventType_ActionTimeStamp: 4005,\n AuditConditionEventType_Status: 4006,\n AuditConditionEventType_ServerId: 4007,\n AuditConditionEventType_ClientAuditEntryId: 4008,\n AuditConditionEventType_ClientUserId: 4009,\n AuditConditionEventType_MethodId: 4010,\n AuditConditionEventType_InputArguments: 4011,\n AuditConditionEnableEventType_EventId: 4106,\n AuditConditionEnableEventType_EventType: 4107,\n AuditConditionEnableEventType_SourceNode: 4108,\n AuditConditionEnableEventType_SourceName: 4109,\n AuditConditionEnableEventType_Time: 4110,\n AuditConditionEnableEventType_ReceiveTime: 4111,\n AuditConditionEnableEventType_LocalTime: 4112,\n AuditConditionEnableEventType_Message: 4113,\n AuditConditionEnableEventType_Severity: 4114,\n AuditConditionEnableEventType_ActionTimeStamp: 4115,\n AuditConditionEnableEventType_Status: 4116,\n AuditConditionEnableEventType_ServerId: 4117,\n AuditConditionEnableEventType_ClientAuditEntryId: 4118,\n AuditConditionEnableEventType_ClientUserId: 4119,\n AuditConditionEnableEventType_MethodId: 4120,\n AuditConditionEnableEventType_InputArguments: 4121,\n AuditConditionCommentEventType_EventId: 4170,\n AuditConditionCommentEventType_EventType: 4171,\n AuditConditionCommentEventType_SourceNode: 4172,\n AuditConditionCommentEventType_SourceName: 4173,\n AuditConditionCommentEventType_Time: 4174,\n AuditConditionCommentEventType_ReceiveTime: 4175,\n AuditConditionCommentEventType_LocalTime: 4176,\n AuditConditionCommentEventType_Message: 4177,\n AuditConditionCommentEventType_Severity: 4178,\n AuditConditionCommentEventType_ActionTimeStamp: 4179,\n AuditConditionCommentEventType_Status: 4180,\n AuditConditionCommentEventType_ServerId: 4181,\n AuditConditionCommentEventType_ClientAuditEntryId: 4182,\n AuditConditionCommentEventType_ClientUserId: 4183,\n AuditConditionCommentEventType_MethodId: 4184,\n AuditConditionCommentEventType_InputArguments: 4185,\n DialogConditionType_EventId: 4188,\n DialogConditionType_EventType: 4189,\n DialogConditionType_SourceNode: 4190,\n DialogConditionType_SourceName: 4191,\n DialogConditionType_Time: 4192,\n DialogConditionType_ReceiveTime: 4193,\n DialogConditionType_LocalTime: 4194,\n DialogConditionType_Message: 4195,\n DialogConditionType_Severity: 4196,\n DialogConditionType_Retain: 4197,\n DialogConditionType_ConditionRefresh_InputArguments: 4199,\n AcknowledgeableConditionType_EventId: 5113,\n AcknowledgeableConditionType_EventType: 5114,\n AcknowledgeableConditionType_SourceNode: 5115,\n AcknowledgeableConditionType_SourceName: 5116,\n AcknowledgeableConditionType_Time: 5117,\n AcknowledgeableConditionType_ReceiveTime: 5118,\n AcknowledgeableConditionType_LocalTime: 5119,\n AcknowledgeableConditionType_Message: 5120,\n AcknowledgeableConditionType_Severity: 5121,\n AcknowledgeableConditionType_Retain: 5122,\n AcknowledgeableConditionType_ConditionRefresh_InputArguments: 5124,\n AlarmConditionType_EventId: 5540,\n AlarmConditionType_EventType: 5541,\n AlarmConditionType_SourceNode: 5542,\n AlarmConditionType_SourceName: 5543,\n AlarmConditionType_Time: 5544,\n AlarmConditionType_ReceiveTime: 5545,\n AlarmConditionType_LocalTime: 5546,\n AlarmConditionType_Message: 5547,\n AlarmConditionType_Severity: 5548,\n AlarmConditionType_Retain: 5549,\n AlarmConditionType_ConditionRefresh_InputArguments: 5551,\n ShelvedStateMachineType_CurrentState: 6088,\n ShelvedStateMachineType_CurrentState_Id: 6089,\n ShelvedStateMachineType_CurrentState_Name: 6090,\n ShelvedStateMachineType_CurrentState_Number: 6091,\n ShelvedStateMachineType_CurrentState_EffectiveDisplayName: 6092,\n ShelvedStateMachineType_LastTransition: 6093,\n ShelvedStateMachineType_LastTransition_Id: 6094,\n ShelvedStateMachineType_LastTransition_Name: 6095,\n ShelvedStateMachineType_LastTransition_Number: 6096,\n ShelvedStateMachineType_LastTransition_TransitionTime: 6097,\n ShelvedStateMachineType_Unshelved_StateNumber: 6098,\n ShelvedStateMachineType_TimedShelved_StateNumber: 6100,\n ShelvedStateMachineType_OneShotShelved_StateNumber: 6101,\n TimedShelveMethodType_InputArguments: 6103,\n LimitAlarmType_EventId: 6116,\n LimitAlarmType_EventType: 6117,\n LimitAlarmType_SourceNode: 6118,\n LimitAlarmType_SourceName: 6119,\n LimitAlarmType_Time: 6120,\n LimitAlarmType_ReceiveTime: 6121,\n LimitAlarmType_LocalTime: 6122,\n LimitAlarmType_Message: 6123,\n LimitAlarmType_Severity: 6124,\n LimitAlarmType_Retain: 6125,\n LimitAlarmType_ConditionRefresh_InputArguments: 6127,\n IdType_EnumStrings: 7591,\n MessageSecurityMode_EnumStrings: 7595,\n UserTokenType_EnumStrings: 7596,\n ApplicationType_EnumStrings: 7597,\n SecurityTokenRequestType_EnumStrings: 7598,\n BrowseDirection_EnumStrings: 7603,\n FilterOperator_EnumStrings: 7605,\n TimestampsToReturn_EnumStrings: 7606,\n MonitoringMode_EnumStrings: 7608,\n DataChangeTrigger_EnumStrings: 7609,\n DeadbandType_EnumStrings: 7610,\n RedundancySupport_EnumStrings: 7611,\n ServerState_EnumStrings: 7612,\n ExceptionDeviationFormat_EnumStrings: 7614,\n OpcUa_BinarySchema: 7617,\n OpcUa_BinarySchema_DataTypeVersion: 7618,\n OpcUa_BinarySchema_NamespaceUri: 7619,\n OpcUa_BinarySchema_Argument: 7650,\n OpcUa_BinarySchema_Argument_DataTypeVersion: 7651,\n OpcUa_BinarySchema_Argument_DictionaryFragment: 7652,\n OpcUa_BinarySchema_EnumValueType: 7656,\n OpcUa_BinarySchema_EnumValueType_DataTypeVersion: 7657,\n OpcUa_BinarySchema_EnumValueType_DictionaryFragment: 7658,\n OpcUa_BinarySchema_StatusResult: 7659,\n OpcUa_BinarySchema_StatusResult_DataTypeVersion: 7660,\n OpcUa_BinarySchema_StatusResult_DictionaryFragment: 7661,\n OpcUa_BinarySchema_UserTokenPolicy: 7662,\n OpcUa_BinarySchema_UserTokenPolicy_DataTypeVersion: 7663,\n OpcUa_BinarySchema_UserTokenPolicy_DictionaryFragment: 7664,\n OpcUa_BinarySchema_ApplicationDescription: 7665,\n OpcUa_BinarySchema_ApplicationDescription_DataTypeVersion: 7666,\n OpcUa_BinarySchema_ApplicationDescription_DictionaryFragment: 7667,\n OpcUa_BinarySchema_EndpointDescription: 7668,\n OpcUa_BinarySchema_EndpointDescription_DataTypeVersion: 7669,\n OpcUa_BinarySchema_EndpointDescription_DictionaryFragment: 7670,\n OpcUa_BinarySchema_UserIdentityToken: 7671,\n OpcUa_BinarySchema_UserIdentityToken_DataTypeVersion: 7672,\n OpcUa_BinarySchema_UserIdentityToken_DictionaryFragment: 7673,\n OpcUa_BinarySchema_AnonymousIdentityToken: 7674,\n OpcUa_BinarySchema_AnonymousIdentityToken_DataTypeVersion: 7675,\n OpcUa_BinarySchema_AnonymousIdentityToken_DictionaryFragment: 7676,\n OpcUa_BinarySchema_UserNameIdentityToken: 7677,\n OpcUa_BinarySchema_UserNameIdentityToken_DataTypeVersion: 7678,\n OpcUa_BinarySchema_UserNameIdentityToken_DictionaryFragment: 7679,\n OpcUa_BinarySchema_X509IdentityToken: 7680,\n OpcUa_BinarySchema_X509IdentityToken_DataTypeVersion: 7681,\n OpcUa_BinarySchema_X509IdentityToken_DictionaryFragment: 7682,\n OpcUa_BinarySchema_IssuedIdentityToken: 7683,\n OpcUa_BinarySchema_IssuedIdentityToken_DataTypeVersion: 7684,\n OpcUa_BinarySchema_IssuedIdentityToken_DictionaryFragment: 7685,\n OpcUa_BinarySchema_EndpointConfiguration: 7686,\n OpcUa_BinarySchema_EndpointConfiguration_DataTypeVersion: 7687,\n OpcUa_BinarySchema_EndpointConfiguration_DictionaryFragment: 7688,\n OpcUa_BinarySchema_BuildInfo: 7692,\n OpcUa_BinarySchema_BuildInfo_DataTypeVersion: 7693,\n OpcUa_BinarySchema_BuildInfo_DictionaryFragment: 7694,\n OpcUa_BinarySchema_SignedSoftwareCertificate: 7698,\n OpcUa_BinarySchema_SignedSoftwareCertificate_DataTypeVersion: 7699,\n OpcUa_BinarySchema_SignedSoftwareCertificate_DictionaryFragment: 7700,\n OpcUa_BinarySchema_AddNodesItem: 7728,\n OpcUa_BinarySchema_AddNodesItem_DataTypeVersion: 7729,\n OpcUa_BinarySchema_AddNodesItem_DictionaryFragment: 7730,\n OpcUa_BinarySchema_AddReferencesItem: 7731,\n OpcUa_BinarySchema_AddReferencesItem_DataTypeVersion: 7732,\n OpcUa_BinarySchema_AddReferencesItem_DictionaryFragment: 7733,\n OpcUa_BinarySchema_DeleteNodesItem: 7734,\n OpcUa_BinarySchema_DeleteNodesItem_DataTypeVersion: 7735,\n OpcUa_BinarySchema_DeleteNodesItem_DictionaryFragment: 7736,\n OpcUa_BinarySchema_DeleteReferencesItem: 7737,\n OpcUa_BinarySchema_DeleteReferencesItem_DataTypeVersion: 7738,\n OpcUa_BinarySchema_DeleteReferencesItem_DictionaryFragment: 7739,\n OpcUa_BinarySchema_RegisteredServer: 7782,\n OpcUa_BinarySchema_RegisteredServer_DataTypeVersion: 7783,\n OpcUa_BinarySchema_RegisteredServer_DictionaryFragment: 7784,\n OpcUa_BinarySchema_ContentFilterElement: 7929,\n OpcUa_BinarySchema_ContentFilterElement_DataTypeVersion: 7930,\n OpcUa_BinarySchema_ContentFilterElement_DictionaryFragment: 7931,\n OpcUa_BinarySchema_ContentFilter: 7932,\n OpcUa_BinarySchema_ContentFilter_DataTypeVersion: 7933,\n OpcUa_BinarySchema_ContentFilter_DictionaryFragment: 7934,\n OpcUa_BinarySchema_FilterOperand: 7935,\n OpcUa_BinarySchema_FilterOperand_DataTypeVersion: 7936,\n OpcUa_BinarySchema_FilterOperand_DictionaryFragment: 7937,\n OpcUa_BinarySchema_ElementOperand: 7938,\n OpcUa_BinarySchema_ElementOperand_DataTypeVersion: 7939,\n OpcUa_BinarySchema_ElementOperand_DictionaryFragment: 7940,\n OpcUa_BinarySchema_LiteralOperand: 7941,\n OpcUa_BinarySchema_LiteralOperand_DataTypeVersion: 7942,\n OpcUa_BinarySchema_LiteralOperand_DictionaryFragment: 7943,\n OpcUa_BinarySchema_AttributeOperand: 7944,\n OpcUa_BinarySchema_AttributeOperand_DataTypeVersion: 7945,\n OpcUa_BinarySchema_AttributeOperand_DictionaryFragment: 7946,\n OpcUa_BinarySchema_SimpleAttributeOperand: 7947,\n OpcUa_BinarySchema_SimpleAttributeOperand_DataTypeVersion: 7948,\n OpcUa_BinarySchema_SimpleAttributeOperand_DictionaryFragment: 7949,\n OpcUa_BinarySchema_HistoryEvent: 8004,\n OpcUa_BinarySchema_HistoryEvent_DataTypeVersion: 8005,\n OpcUa_BinarySchema_HistoryEvent_DictionaryFragment: 8006,\n OpcUa_BinarySchema_MonitoringFilter: 8067,\n OpcUa_BinarySchema_MonitoringFilter_DataTypeVersion: 8068,\n OpcUa_BinarySchema_MonitoringFilter_DictionaryFragment: 8069,\n OpcUa_BinarySchema_EventFilter: 8073,\n OpcUa_BinarySchema_EventFilter_DataTypeVersion: 8074,\n OpcUa_BinarySchema_EventFilter_DictionaryFragment: 8075,\n OpcUa_BinarySchema_AggregateConfiguration: 8076,\n OpcUa_BinarySchema_AggregateConfiguration_DataTypeVersion: 8077,\n OpcUa_BinarySchema_AggregateConfiguration_DictionaryFragment: 8078,\n OpcUa_BinarySchema_HistoryEventFieldList: 8172,\n OpcUa_BinarySchema_HistoryEventFieldList_DataTypeVersion: 8173,\n OpcUa_BinarySchema_HistoryEventFieldList_DictionaryFragment: 8174,\n OpcUa_BinarySchema_RedundantServerDataType: 8208,\n OpcUa_BinarySchema_RedundantServerDataType_DataTypeVersion: 8209,\n OpcUa_BinarySchema_RedundantServerDataType_DictionaryFragment: 8210,\n OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType: 8211,\n OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType_DataTypeVersion: 8212,\n OpcUa_BinarySchema_SamplingIntervalDiagnosticsDataType_DictionaryFragment: 8213,\n OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType: 8214,\n OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType_DataTypeVersion: 8215,\n OpcUa_BinarySchema_ServerDiagnosticsSummaryDataType_DictionaryFragment: 8216,\n OpcUa_BinarySchema_ServerStatusDataType: 8217,\n OpcUa_BinarySchema_ServerStatusDataType_DataTypeVersion: 8218,\n OpcUa_BinarySchema_ServerStatusDataType_DictionaryFragment: 8219,\n OpcUa_BinarySchema_SessionDiagnosticsDataType: 8220,\n OpcUa_BinarySchema_SessionDiagnosticsDataType_DataTypeVersion: 8221,\n OpcUa_BinarySchema_SessionDiagnosticsDataType_DictionaryFragment: 8222,\n OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType: 8223,\n OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType_DataTypeVersion: 8224,\n OpcUa_BinarySchema_SessionSecurityDiagnosticsDataType_DictionaryFragment: 8225,\n OpcUa_BinarySchema_ServiceCounterDataType: 8226,\n OpcUa_BinarySchema_ServiceCounterDataType_DataTypeVersion: 8227,\n OpcUa_BinarySchema_ServiceCounterDataType_DictionaryFragment: 8228,\n OpcUa_BinarySchema_SubscriptionDiagnosticsDataType: 8229,\n OpcUa_BinarySchema_SubscriptionDiagnosticsDataType_DataTypeVersion: 8230,\n OpcUa_BinarySchema_SubscriptionDiagnosticsDataType_DictionaryFragment: 8231,\n OpcUa_BinarySchema_ModelChangeStructureDataType: 8232,\n OpcUa_BinarySchema_ModelChangeStructureDataType_DataTypeVersion: 8233,\n OpcUa_BinarySchema_ModelChangeStructureDataType_DictionaryFragment: 8234,\n OpcUa_BinarySchema_SemanticChangeStructureDataType: 8235,\n OpcUa_BinarySchema_SemanticChangeStructureDataType_DataTypeVersion: 8236,\n OpcUa_BinarySchema_SemanticChangeStructureDataType_DictionaryFragment: 8237,\n OpcUa_BinarySchema_Range: 8238,\n OpcUa_BinarySchema_Range_DataTypeVersion: 8239,\n OpcUa_BinarySchema_Range_DictionaryFragment: 8240,\n OpcUa_BinarySchema_EUInformation: 8241,\n OpcUa_BinarySchema_EUInformation_DataTypeVersion: 8242,\n OpcUa_BinarySchema_EUInformation_DictionaryFragment: 8243,\n OpcUa_BinarySchema_Annotation: 8244,\n OpcUa_BinarySchema_Annotation_DataTypeVersion: 8245,\n OpcUa_BinarySchema_Annotation_DictionaryFragment: 8246,\n OpcUa_BinarySchema_ProgramDiagnosticDataType: 8247,\n OpcUa_BinarySchema_ProgramDiagnosticDataType_DataTypeVersion: 8248,\n OpcUa_BinarySchema_ProgramDiagnosticDataType_DictionaryFragment: 8249,\n OpcUa_XmlSchema: 8252,\n OpcUa_XmlSchema_DataTypeVersion: 8253,\n OpcUa_XmlSchema_NamespaceUri: 8254,\n OpcUa_XmlSchema_Argument: 8285,\n OpcUa_XmlSchema_Argument_DataTypeVersion: 8286,\n OpcUa_XmlSchema_Argument_DictionaryFragment: 8287,\n OpcUa_XmlSchema_EnumValueType: 8291,\n OpcUa_XmlSchema_EnumValueType_DataTypeVersion: 8292,\n OpcUa_XmlSchema_EnumValueType_DictionaryFragment: 8293,\n OpcUa_XmlSchema_StatusResult: 8294,\n OpcUa_XmlSchema_StatusResult_DataTypeVersion: 8295,\n OpcUa_XmlSchema_StatusResult_DictionaryFragment: 8296,\n OpcUa_XmlSchema_UserTokenPolicy: 8297,\n OpcUa_XmlSchema_UserTokenPolicy_DataTypeVersion: 8298,\n OpcUa_XmlSchema_UserTokenPolicy_DictionaryFragment: 8299,\n OpcUa_XmlSchema_ApplicationDescription: 8300,\n OpcUa_XmlSchema_ApplicationDescription_DataTypeVersion: 8301,\n OpcUa_XmlSchema_ApplicationDescription_DictionaryFragment: 8302,\n OpcUa_XmlSchema_EndpointDescription: 8303,\n OpcUa_XmlSchema_EndpointDescription_DataTypeVersion: 8304,\n OpcUa_XmlSchema_EndpointDescription_DictionaryFragment: 8305,\n OpcUa_XmlSchema_UserIdentityToken: 8306,\n OpcUa_XmlSchema_UserIdentityToken_DataTypeVersion: 8307,\n OpcUa_XmlSchema_UserIdentityToken_DictionaryFragment: 8308,\n OpcUa_XmlSchema_AnonymousIdentityToken: 8309,\n OpcUa_XmlSchema_AnonymousIdentityToken_DataTypeVersion: 8310,\n OpcUa_XmlSchema_AnonymousIdentityToken_DictionaryFragment: 8311,\n OpcUa_XmlSchema_UserNameIdentityToken: 8312,\n OpcUa_XmlSchema_UserNameIdentityToken_DataTypeVersion: 8313,\n OpcUa_XmlSchema_UserNameIdentityToken_DictionaryFragment: 8314,\n OpcUa_XmlSchema_X509IdentityToken: 8315,\n OpcUa_XmlSchema_X509IdentityToken_DataTypeVersion: 8316,\n OpcUa_XmlSchema_X509IdentityToken_DictionaryFragment: 8317,\n OpcUa_XmlSchema_IssuedIdentityToken: 8318,\n OpcUa_XmlSchema_IssuedIdentityToken_DataTypeVersion: 8319,\n OpcUa_XmlSchema_IssuedIdentityToken_DictionaryFragment: 8320,\n OpcUa_XmlSchema_EndpointConfiguration: 8321,\n OpcUa_XmlSchema_EndpointConfiguration_DataTypeVersion: 8322,\n OpcUa_XmlSchema_EndpointConfiguration_DictionaryFragment: 8323,\n OpcUa_XmlSchema_BuildInfo: 8327,\n OpcUa_XmlSchema_BuildInfo_DataTypeVersion: 8328,\n OpcUa_XmlSchema_BuildInfo_DictionaryFragment: 8329,\n OpcUa_XmlSchema_SignedSoftwareCertificate: 8333,\n OpcUa_XmlSchema_SignedSoftwareCertificate_DataTypeVersion: 8334,\n OpcUa_XmlSchema_SignedSoftwareCertificate_DictionaryFragment: 8335,\n OpcUa_XmlSchema_AddNodesItem: 8363,\n OpcUa_XmlSchema_AddNodesItem_DataTypeVersion: 8364,\n OpcUa_XmlSchema_AddNodesItem_DictionaryFragment: 8365,\n OpcUa_XmlSchema_AddReferencesItem: 8366,\n OpcUa_XmlSchema_AddReferencesItem_DataTypeVersion: 8367,\n OpcUa_XmlSchema_AddReferencesItem_DictionaryFragment: 8368,\n OpcUa_XmlSchema_DeleteNodesItem: 8369,\n OpcUa_XmlSchema_DeleteNodesItem_DataTypeVersion: 8370,\n OpcUa_XmlSchema_DeleteNodesItem_DictionaryFragment: 8371,\n OpcUa_XmlSchema_DeleteReferencesItem: 8372,\n OpcUa_XmlSchema_DeleteReferencesItem_DataTypeVersion: 8373,\n OpcUa_XmlSchema_DeleteReferencesItem_DictionaryFragment: 8374,\n OpcUa_XmlSchema_RegisteredServer: 8417,\n OpcUa_XmlSchema_RegisteredServer_DataTypeVersion: 8418,\n OpcUa_XmlSchema_RegisteredServer_DictionaryFragment: 8419,\n OpcUa_XmlSchema_ContentFilterElement: 8564,\n OpcUa_XmlSchema_ContentFilterElement_DataTypeVersion: 8565,\n OpcUa_XmlSchema_ContentFilterElement_DictionaryFragment: 8566,\n OpcUa_XmlSchema_ContentFilter: 8567,\n OpcUa_XmlSchema_ContentFilter_DataTypeVersion: 8568,\n OpcUa_XmlSchema_ContentFilter_DictionaryFragment: 8569,\n OpcUa_XmlSchema_FilterOperand: 8570,\n OpcUa_XmlSchema_FilterOperand_DataTypeVersion: 8571,\n OpcUa_XmlSchema_FilterOperand_DictionaryFragment: 8572,\n OpcUa_XmlSchema_ElementOperand: 8573,\n OpcUa_XmlSchema_ElementOperand_DataTypeVersion: 8574,\n OpcUa_XmlSchema_ElementOperand_DictionaryFragment: 8575,\n OpcUa_XmlSchema_LiteralOperand: 8576,\n OpcUa_XmlSchema_LiteralOperand_DataTypeVersion: 8577,\n OpcUa_XmlSchema_LiteralOperand_DictionaryFragment: 8578,\n OpcUa_XmlSchema_AttributeOperand: 8579,\n OpcUa_XmlSchema_AttributeOperand_DataTypeVersion: 8580,\n OpcUa_XmlSchema_AttributeOperand_DictionaryFragment: 8581,\n OpcUa_XmlSchema_SimpleAttributeOperand: 8582,\n OpcUa_XmlSchema_SimpleAttributeOperand_DataTypeVersion: 8583,\n OpcUa_XmlSchema_SimpleAttributeOperand_DictionaryFragment: 8584,\n OpcUa_XmlSchema_HistoryEvent: 8639,\n OpcUa_XmlSchema_HistoryEvent_DataTypeVersion: 8640,\n OpcUa_XmlSchema_HistoryEvent_DictionaryFragment: 8641,\n OpcUa_XmlSchema_MonitoringFilter: 8702,\n OpcUa_XmlSchema_MonitoringFilter_DataTypeVersion: 8703,\n OpcUa_XmlSchema_MonitoringFilter_DictionaryFragment: 8704,\n OpcUa_XmlSchema_EventFilter: 8708,\n OpcUa_XmlSchema_EventFilter_DataTypeVersion: 8709,\n OpcUa_XmlSchema_EventFilter_DictionaryFragment: 8710,\n OpcUa_XmlSchema_AggregateConfiguration: 8711,\n OpcUa_XmlSchema_AggregateConfiguration_DataTypeVersion: 8712,\n OpcUa_XmlSchema_AggregateConfiguration_DictionaryFragment: 8713,\n OpcUa_XmlSchema_HistoryEventFieldList: 8807,\n OpcUa_XmlSchema_HistoryEventFieldList_DataTypeVersion: 8808,\n OpcUa_XmlSchema_HistoryEventFieldList_DictionaryFragment: 8809,\n OpcUa_XmlSchema_RedundantServerDataType: 8843,\n OpcUa_XmlSchema_RedundantServerDataType_DataTypeVersion: 8844,\n OpcUa_XmlSchema_RedundantServerDataType_DictionaryFragment: 8845,\n OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType: 8846,\n OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType_DataTypeVersion: 8847,\n OpcUa_XmlSchema_SamplingIntervalDiagnosticsDataType_DictionaryFragment: 8848,\n OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType: 8849,\n OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType_DataTypeVersion: 8850,\n OpcUa_XmlSchema_ServerDiagnosticsSummaryDataType_DictionaryFragment: 8851,\n OpcUa_XmlSchema_ServerStatusDataType: 8852,\n OpcUa_XmlSchema_ServerStatusDataType_DataTypeVersion: 8853,\n OpcUa_XmlSchema_ServerStatusDataType_DictionaryFragment: 8854,\n OpcUa_XmlSchema_SessionDiagnosticsDataType: 8855,\n OpcUa_XmlSchema_SessionDiagnosticsDataType_DataTypeVersion: 8856,\n OpcUa_XmlSchema_SessionDiagnosticsDataType_DictionaryFragment: 8857,\n OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType: 8858,\n OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType_DataTypeVersion: 8859,\n OpcUa_XmlSchema_SessionSecurityDiagnosticsDataType_DictionaryFragment: 8860,\n OpcUa_XmlSchema_ServiceCounterDataType: 8861,\n OpcUa_XmlSchema_ServiceCounterDataType_DataTypeVersion: 8862,\n OpcUa_XmlSchema_ServiceCounterDataType_DictionaryFragment: 8863,\n OpcUa_XmlSchema_SubscriptionDiagnosticsDataType: 8864,\n OpcUa_XmlSchema_SubscriptionDiagnosticsDataType_DataTypeVersion: 8865,\n OpcUa_XmlSchema_SubscriptionDiagnosticsDataType_DictionaryFragment: 8866,\n OpcUa_XmlSchema_ModelChangeStructureDataType: 8867,\n OpcUa_XmlSchema_ModelChangeStructureDataType_DataTypeVersion: 8868,\n OpcUa_XmlSchema_ModelChangeStructureDataType_DictionaryFragment: 8869,\n OpcUa_XmlSchema_SemanticChangeStructureDataType: 8870,\n OpcUa_XmlSchema_SemanticChangeStructureDataType_DataTypeVersion: 8871,\n OpcUa_XmlSchema_SemanticChangeStructureDataType_DictionaryFragment: 8872,\n OpcUa_XmlSchema_Range: 8873,\n OpcUa_XmlSchema_Range_DataTypeVersion: 8874,\n OpcUa_XmlSchema_Range_DictionaryFragment: 8875,\n OpcUa_XmlSchema_EUInformation: 8876,\n OpcUa_XmlSchema_EUInformation_DataTypeVersion: 8877,\n OpcUa_XmlSchema_EUInformation_DictionaryFragment: 8878,\n OpcUa_XmlSchema_Annotation: 8879,\n OpcUa_XmlSchema_Annotation_DataTypeVersion: 8880,\n OpcUa_XmlSchema_Annotation_DictionaryFragment: 8881,\n OpcUa_XmlSchema_ProgramDiagnosticDataType: 8882,\n OpcUa_XmlSchema_ProgramDiagnosticDataType_DataTypeVersion: 8883,\n OpcUa_XmlSchema_ProgramDiagnosticDataType_DictionaryFragment: 8884,\n SubscriptionDiagnosticsType_MaxLifetimeCount: 8888,\n SubscriptionDiagnosticsType_LatePublishRequestCount: 8889,\n SubscriptionDiagnosticsType_CurrentKeepAliveCount: 8890,\n SubscriptionDiagnosticsType_CurrentLifetimeCount: 8891,\n SubscriptionDiagnosticsType_UnacknowledgedMessageCount: 8892,\n SubscriptionDiagnosticsType_DiscardedMessageCount: 8893,\n SubscriptionDiagnosticsType_MonitoredItemCount: 8894,\n SubscriptionDiagnosticsType_DisabledMonitoredItemCount: 8895,\n SubscriptionDiagnosticsType_MonitoringQueueOverflowCount: 8896,\n SubscriptionDiagnosticsType_NextSequenceNumber: 8897,\n SessionDiagnosticsObjectType_SessionDiagnostics_TotalRequestCount: 8898,\n SessionDiagnosticsVariableType_TotalRequestCount: 8900,\n SubscriptionDiagnosticsType_EventQueueOverflowCount: 8902,\n OpcUa_BinarySchema_TimeZoneDataType: 8914,\n OpcUa_BinarySchema_TimeZoneDataType_DataTypeVersion: 8915,\n OpcUa_BinarySchema_TimeZoneDataType_DictionaryFragment: 8916,\n OpcUa_XmlSchema_TimeZoneDataType: 8918,\n OpcUa_XmlSchema_TimeZoneDataType_DataTypeVersion: 8919,\n OpcUa_XmlSchema_TimeZoneDataType_DictionaryFragment: 8920,\n AuditConditionRespondEventType_EventId: 8928,\n AuditConditionRespondEventType_EventType: 8929,\n AuditConditionRespondEventType_SourceNode: 8930,\n AuditConditionRespondEventType_SourceName: 8931,\n AuditConditionRespondEventType_Time: 8932,\n AuditConditionRespondEventType_ReceiveTime: 8933,\n AuditConditionRespondEventType_LocalTime: 8934,\n AuditConditionRespondEventType_Message: 8935,\n AuditConditionRespondEventType_Severity: 8936,\n AuditConditionRespondEventType_ActionTimeStamp: 8937,\n AuditConditionRespondEventType_Status: 8938,\n AuditConditionRespondEventType_ServerId: 8939,\n AuditConditionRespondEventType_ClientAuditEntryId: 8940,\n AuditConditionRespondEventType_ClientUserId: 8941,\n AuditConditionRespondEventType_MethodId: 8942,\n AuditConditionRespondEventType_InputArguments: 8943,\n AuditConditionAcknowledgeEventType_EventId: 8945,\n AuditConditionAcknowledgeEventType_EventType: 8946,\n AuditConditionAcknowledgeEventType_SourceNode: 8947,\n AuditConditionAcknowledgeEventType_SourceName: 8948,\n AuditConditionAcknowledgeEventType_Time: 8949,\n AuditConditionAcknowledgeEventType_ReceiveTime: 8950,\n AuditConditionAcknowledgeEventType_LocalTime: 8951,\n AuditConditionAcknowledgeEventType_Message: 8952,\n AuditConditionAcknowledgeEventType_Severity: 8953,\n AuditConditionAcknowledgeEventType_ActionTimeStamp: 8954,\n AuditConditionAcknowledgeEventType_Status: 8955,\n AuditConditionAcknowledgeEventType_ServerId: 8956,\n AuditConditionAcknowledgeEventType_ClientAuditEntryId: 8957,\n AuditConditionAcknowledgeEventType_ClientUserId: 8958,\n AuditConditionAcknowledgeEventType_MethodId: 8959,\n AuditConditionAcknowledgeEventType_InputArguments: 8960,\n AuditConditionConfirmEventType_EventId: 8962,\n AuditConditionConfirmEventType_EventType: 8963,\n AuditConditionConfirmEventType_SourceNode: 8964,\n AuditConditionConfirmEventType_SourceName: 8965,\n AuditConditionConfirmEventType_Time: 8966,\n AuditConditionConfirmEventType_ReceiveTime: 8967,\n AuditConditionConfirmEventType_LocalTime: 8968,\n AuditConditionConfirmEventType_Message: 8969,\n AuditConditionConfirmEventType_Severity: 8970,\n AuditConditionConfirmEventType_ActionTimeStamp: 8971,\n AuditConditionConfirmEventType_Status: 8972,\n AuditConditionConfirmEventType_ServerId: 8973,\n AuditConditionConfirmEventType_ClientAuditEntryId: 8974,\n AuditConditionConfirmEventType_ClientUserId: 8975,\n AuditConditionConfirmEventType_MethodId: 8976,\n AuditConditionConfirmEventType_InputArguments: 8977,\n TwoStateVariableType_Id: 8996,\n TwoStateVariableType_Name: 8997,\n TwoStateVariableType_Number: 8998,\n TwoStateVariableType_EffectiveDisplayName: 8999,\n TwoStateVariableType_TransitionTime: 9000,\n TwoStateVariableType_EffectiveTransitionTime: 9001,\n ConditionVariableType_SourceTimestamp: 9003,\n ConditionRefreshMethodType_InputArguments: 9008,\n ConditionType_ConditionName: 9009,\n ConditionType_BranchId: 9010,\n ConditionType_EnabledState: 9011,\n ConditionType_EnabledState_Id: 9012,\n ConditionType_EnabledState_Name: 9013,\n ConditionType_EnabledState_Number: 9014,\n ConditionType_EnabledState_EffectiveDisplayName: 9015,\n ConditionType_EnabledState_TransitionTime: 9016,\n ConditionType_EnabledState_EffectiveTransitionTime: 9017,\n ConditionType_EnabledState_TrueState: 9018,\n ConditionType_EnabledState_FalseState: 9019,\n ConditionType_Quality: 9020,\n ConditionType_Quality_SourceTimestamp: 9021,\n ConditionType_LastSeverity: 9022,\n ConditionType_LastSeverity_SourceTimestamp: 9023,\n ConditionType_Comment: 9024,\n ConditionType_Comment_SourceTimestamp: 9025,\n ConditionType_ClientUserId: 9026,\n ConditionType_AddComment_InputArguments: 9030,\n DialogResponseMethodType_InputArguments: 9032,\n DialogConditionType_ConditionName: 9033,\n DialogConditionType_BranchId: 9034,\n DialogConditionType_EnabledState: 9035,\n DialogConditionType_EnabledState_Id: 9036,\n DialogConditionType_EnabledState_Name: 9037,\n DialogConditionType_EnabledState_Number: 9038,\n DialogConditionType_EnabledState_EffectiveDisplayName: 9039,\n DialogConditionType_EnabledState_TransitionTime: 9040,\n DialogConditionType_EnabledState_EffectiveTransitionTime: 9041,\n DialogConditionType_EnabledState_TrueState: 9042,\n DialogConditionType_EnabledState_FalseState: 9043,\n DialogConditionType_Quality: 9044,\n DialogConditionType_Quality_SourceTimestamp: 9045,\n DialogConditionType_LastSeverity: 9046,\n DialogConditionType_LastSeverity_SourceTimestamp: 9047,\n DialogConditionType_Comment: 9048,\n DialogConditionType_Comment_SourceTimestamp: 9049,\n DialogConditionType_ClientUserId: 9050,\n DialogConditionType_AddComment_InputArguments: 9054,\n DialogConditionType_DialogState: 9055,\n DialogConditionType_DialogState_Id: 9056,\n DialogConditionType_DialogState_Name: 9057,\n DialogConditionType_DialogState_Number: 9058,\n DialogConditionType_DialogState_EffectiveDisplayName: 9059,\n DialogConditionType_DialogState_TransitionTime: 9060,\n DialogConditionType_DialogState_EffectiveTransitionTime: 9061,\n DialogConditionType_DialogState_TrueState: 9062,\n DialogConditionType_DialogState_FalseState: 9063,\n DialogConditionType_ResponseOptionSet: 9064,\n DialogConditionType_DefaultResponse: 9065,\n DialogConditionType_OkResponse: 9066,\n DialogConditionType_CancelResponse: 9067,\n DialogConditionType_LastResponse: 9068,\n DialogConditionType_Respond_InputArguments: 9070,\n AcknowledgeableConditionType_ConditionName: 9071,\n AcknowledgeableConditionType_BranchId: 9072,\n AcknowledgeableConditionType_EnabledState: 9073,\n AcknowledgeableConditionType_EnabledState_Id: 9074,\n AcknowledgeableConditionType_EnabledState_Name: 9075,\n AcknowledgeableConditionType_EnabledState_Number: 9076,\n AcknowledgeableConditionType_EnabledState_EffectiveDisplayName: 9077,\n AcknowledgeableConditionType_EnabledState_TransitionTime: 9078,\n AcknowledgeableConditionType_EnabledState_EffectiveTransitionTime: 9079,\n AcknowledgeableConditionType_EnabledState_TrueState: 9080,\n AcknowledgeableConditionType_EnabledState_FalseState: 9081,\n AcknowledgeableConditionType_Quality: 9082,\n AcknowledgeableConditionType_Quality_SourceTimestamp: 9083,\n AcknowledgeableConditionType_LastSeverity: 9084,\n AcknowledgeableConditionType_LastSeverity_SourceTimestamp: 9085,\n AcknowledgeableConditionType_Comment: 9086,\n AcknowledgeableConditionType_Comment_SourceTimestamp: 9087,\n AcknowledgeableConditionType_ClientUserId: 9088,\n AcknowledgeableConditionType_AddComment_InputArguments: 9092,\n AcknowledgeableConditionType_AckedState: 9093,\n AcknowledgeableConditionType_AckedState_Id: 9094,\n AcknowledgeableConditionType_AckedState_Name: 9095,\n AcknowledgeableConditionType_AckedState_Number: 9096,\n AcknowledgeableConditionType_AckedState_EffectiveDisplayName: 9097,\n AcknowledgeableConditionType_AckedState_TransitionTime: 9098,\n AcknowledgeableConditionType_AckedState_EffectiveTransitionTime: 9099,\n AcknowledgeableConditionType_AckedState_TrueState: 9100,\n AcknowledgeableConditionType_AckedState_FalseState: 9101,\n AcknowledgeableConditionType_ConfirmedState: 9102,\n AcknowledgeableConditionType_ConfirmedState_Id: 9103,\n AcknowledgeableConditionType_ConfirmedState_Name: 9104,\n AcknowledgeableConditionType_ConfirmedState_Number: 9105,\n AcknowledgeableConditionType_ConfirmedState_EffectiveDisplayName: 9106,\n AcknowledgeableConditionType_ConfirmedState_TransitionTime: 9107,\n AcknowledgeableConditionType_ConfirmedState_EffectiveTransitionTime: 9108,\n AcknowledgeableConditionType_ConfirmedState_TrueState: 9109,\n AcknowledgeableConditionType_ConfirmedState_FalseState: 9110,\n AcknowledgeableConditionType_Acknowledge_InputArguments: 9112,\n AcknowledgeableConditionType_Confirm_InputArguments: 9114,\n ShelvedStateMachineType_UnshelveTime: 9115,\n AlarmConditionType_ConditionName: 9116,\n AlarmConditionType_BranchId: 9117,\n AlarmConditionType_EnabledState: 9118,\n AlarmConditionType_EnabledState_Id: 9119,\n AlarmConditionType_EnabledState_Name: 9120,\n AlarmConditionType_EnabledState_Number: 9121,\n AlarmConditionType_EnabledState_EffectiveDisplayName: 9122,\n AlarmConditionType_EnabledState_TransitionTime: 9123,\n AlarmConditionType_EnabledState_EffectiveTransitionTime: 9124,\n AlarmConditionType_EnabledState_TrueState: 9125,\n AlarmConditionType_EnabledState_FalseState: 9126,\n AlarmConditionType_Quality: 9127,\n AlarmConditionType_Quality_SourceTimestamp: 9128,\n AlarmConditionType_LastSeverity: 9129,\n AlarmConditionType_LastSeverity_SourceTimestamp: 9130,\n AlarmConditionType_Comment: 9131,\n AlarmConditionType_Comment_SourceTimestamp: 9132,\n AlarmConditionType_ClientUserId: 9133,\n AlarmConditionType_AddComment_InputArguments: 9137,\n AlarmConditionType_AckedState: 9138,\n AlarmConditionType_AckedState_Id: 9139,\n AlarmConditionType_AckedState_Name: 9140,\n AlarmConditionType_AckedState_Number: 9141,\n AlarmConditionType_AckedState_EffectiveDisplayName: 9142,\n AlarmConditionType_AckedState_TransitionTime: 9143,\n AlarmConditionType_AckedState_EffectiveTransitionTime: 9144,\n AlarmConditionType_AckedState_TrueState: 9145,\n AlarmConditionType_AckedState_FalseState: 9146,\n AlarmConditionType_ConfirmedState: 9147,\n AlarmConditionType_ConfirmedState_Id: 9148,\n AlarmConditionType_ConfirmedState_Name: 9149,\n AlarmConditionType_ConfirmedState_Number: 9150,\n AlarmConditionType_ConfirmedState_EffectiveDisplayName: 9151,\n AlarmConditionType_ConfirmedState_TransitionTime: 9152,\n AlarmConditionType_ConfirmedState_EffectiveTransitionTime: 9153,\n AlarmConditionType_ConfirmedState_TrueState: 9154,\n AlarmConditionType_ConfirmedState_FalseState: 9155,\n AlarmConditionType_Acknowledge_InputArguments: 9157,\n AlarmConditionType_Confirm_InputArguments: 9159,\n AlarmConditionType_ActiveState: 9160,\n AlarmConditionType_ActiveState_Id: 9161,\n AlarmConditionType_ActiveState_Name: 9162,\n AlarmConditionType_ActiveState_Number: 9163,\n AlarmConditionType_ActiveState_EffectiveDisplayName: 9164,\n AlarmConditionType_ActiveState_TransitionTime: 9165,\n AlarmConditionType_ActiveState_EffectiveTransitionTime: 9166,\n AlarmConditionType_ActiveState_TrueState: 9167,\n AlarmConditionType_ActiveState_FalseState: 9168,\n AlarmConditionType_SuppressedState: 9169,\n AlarmConditionType_SuppressedState_Id: 9170,\n AlarmConditionType_SuppressedState_Name: 9171,\n AlarmConditionType_SuppressedState_Number: 9172,\n AlarmConditionType_SuppressedState_EffectiveDisplayName: 9173,\n AlarmConditionType_SuppressedState_TransitionTime: 9174,\n AlarmConditionType_SuppressedState_EffectiveTransitionTime: 9175,\n AlarmConditionType_SuppressedState_TrueState: 9176,\n AlarmConditionType_SuppressedState_FalseState: 9177,\n AlarmConditionType_ShelvingState_CurrentState: 9179,\n AlarmConditionType_ShelvingState_CurrentState_Id: 9180,\n AlarmConditionType_ShelvingState_CurrentState_Name: 9181,\n AlarmConditionType_ShelvingState_CurrentState_Number: 9182,\n AlarmConditionType_ShelvingState_CurrentState_EffectiveDisplayName: 9183,\n AlarmConditionType_ShelvingState_LastTransition: 9184,\n AlarmConditionType_ShelvingState_LastTransition_Id: 9185,\n AlarmConditionType_ShelvingState_LastTransition_Name: 9186,\n AlarmConditionType_ShelvingState_LastTransition_Number: 9187,\n AlarmConditionType_ShelvingState_LastTransition_TransitionTime: 9188,\n AlarmConditionType_ShelvingState_UnshelveTime: 9189,\n AlarmConditionType_ShelvingState_TimedShelve_InputArguments: 9214,\n AlarmConditionType_SuppressedOrShelved: 9215,\n AlarmConditionType_MaxTimeShelved: 9216,\n LimitAlarmType_ConditionName: 9217,\n LimitAlarmType_BranchId: 9218,\n LimitAlarmType_EnabledState: 9219,\n LimitAlarmType_EnabledState_Id: 9220,\n LimitAlarmType_EnabledState_Name: 9221,\n LimitAlarmType_EnabledState_Number: 9222,\n LimitAlarmType_EnabledState_EffectiveDisplayName: 9223,\n LimitAlarmType_EnabledState_TransitionTime: 9224,\n LimitAlarmType_EnabledState_EffectiveTransitionTime: 9225,\n LimitAlarmType_EnabledState_TrueState: 9226,\n LimitAlarmType_EnabledState_FalseState: 9227,\n LimitAlarmType_Quality: 9228,\n LimitAlarmType_Quality_SourceTimestamp: 9229,\n LimitAlarmType_LastSeverity: 9230,\n LimitAlarmType_LastSeverity_SourceTimestamp: 9231,\n LimitAlarmType_Comment: 9232,\n LimitAlarmType_Comment_SourceTimestamp: 9233,\n LimitAlarmType_ClientUserId: 9234,\n LimitAlarmType_AddComment_InputArguments: 9238,\n LimitAlarmType_AckedState: 9239,\n LimitAlarmType_AckedState_Id: 9240,\n LimitAlarmType_AckedState_Name: 9241,\n LimitAlarmType_AckedState_Number: 9242,\n LimitAlarmType_AckedState_EffectiveDisplayName: 9243,\n LimitAlarmType_AckedState_TransitionTime: 9244,\n LimitAlarmType_AckedState_EffectiveTransitionTime: 9245,\n LimitAlarmType_AckedState_TrueState: 9246,\n LimitAlarmType_AckedState_FalseState: 9247,\n LimitAlarmType_ConfirmedState: 9248,\n LimitAlarmType_ConfirmedState_Id: 9249,\n LimitAlarmType_ConfirmedState_Name: 9250,\n LimitAlarmType_ConfirmedState_Number: 9251,\n LimitAlarmType_ConfirmedState_EffectiveDisplayName: 9252,\n LimitAlarmType_ConfirmedState_TransitionTime: 9253,\n LimitAlarmType_ConfirmedState_EffectiveTransitionTime: 9254,\n LimitAlarmType_ConfirmedState_TrueState: 9255,\n LimitAlarmType_ConfirmedState_FalseState: 9256,\n LimitAlarmType_Acknowledge_InputArguments: 9258,\n LimitAlarmType_Confirm_InputArguments: 9260,\n LimitAlarmType_ActiveState: 9261,\n LimitAlarmType_ActiveState_Id: 9262,\n LimitAlarmType_ActiveState_Name: 9263,\n LimitAlarmType_ActiveState_Number: 9264,\n LimitAlarmType_ActiveState_EffectiveDisplayName: 9265,\n LimitAlarmType_ActiveState_TransitionTime: 9266,\n LimitAlarmType_ActiveState_EffectiveTransitionTime: 9267,\n LimitAlarmType_ActiveState_TrueState: 9268,\n LimitAlarmType_ActiveState_FalseState: 9269,\n LimitAlarmType_SuppressedState: 9270,\n LimitAlarmType_SuppressedState_Id: 9271,\n LimitAlarmType_SuppressedState_Name: 9272,\n LimitAlarmType_SuppressedState_Number: 9273,\n LimitAlarmType_SuppressedState_EffectiveDisplayName: 9274,\n LimitAlarmType_SuppressedState_TransitionTime: 9275,\n LimitAlarmType_SuppressedState_EffectiveTransitionTime: 9276,\n LimitAlarmType_SuppressedState_TrueState: 9277,\n LimitAlarmType_SuppressedState_FalseState: 9278,\n LimitAlarmType_ShelvingState_CurrentState: 9280,\n LimitAlarmType_ShelvingState_CurrentState_Id: 9281,\n LimitAlarmType_ShelvingState_CurrentState_Name: 9282,\n LimitAlarmType_ShelvingState_CurrentState_Number: 9283,\n LimitAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 9284,\n LimitAlarmType_ShelvingState_LastTransition: 9285,\n LimitAlarmType_ShelvingState_LastTransition_Id: 9286,\n LimitAlarmType_ShelvingState_LastTransition_Name: 9287,\n LimitAlarmType_ShelvingState_LastTransition_Number: 9288,\n LimitAlarmType_ShelvingState_LastTransition_TransitionTime: 9289,\n LimitAlarmType_ShelvingState_UnshelveTime: 9290,\n LimitAlarmType_ShelvingState_TimedShelve_InputArguments: 9315,\n LimitAlarmType_SuppressedOrShelved: 9316,\n LimitAlarmType_MaxTimeShelved: 9317,\n ExclusiveLimitStateMachineType_CurrentState: 9319,\n ExclusiveLimitStateMachineType_CurrentState_Id: 9320,\n ExclusiveLimitStateMachineType_CurrentState_Name: 9321,\n ExclusiveLimitStateMachineType_CurrentState_Number: 9322,\n ExclusiveLimitStateMachineType_CurrentState_EffectiveDisplayName: 9323,\n ExclusiveLimitStateMachineType_LastTransition: 9324,\n ExclusiveLimitStateMachineType_LastTransition_Id: 9325,\n ExclusiveLimitStateMachineType_LastTransition_Name: 9326,\n ExclusiveLimitStateMachineType_LastTransition_Number: 9327,\n ExclusiveLimitStateMachineType_LastTransition_TransitionTime: 9328,\n ExclusiveLimitStateMachineType_HighHigh_StateNumber: 9330,\n ExclusiveLimitStateMachineType_High_StateNumber: 9332,\n ExclusiveLimitStateMachineType_Low_StateNumber: 9334,\n ExclusiveLimitStateMachineType_LowLow_StateNumber: 9336,\n ExclusiveLimitAlarmType_EventId: 9342,\n ExclusiveLimitAlarmType_EventType: 9343,\n ExclusiveLimitAlarmType_SourceNode: 9344,\n ExclusiveLimitAlarmType_SourceName: 9345,\n ExclusiveLimitAlarmType_Time: 9346,\n ExclusiveLimitAlarmType_ReceiveTime: 9347,\n ExclusiveLimitAlarmType_LocalTime: 9348,\n ExclusiveLimitAlarmType_Message: 9349,\n ExclusiveLimitAlarmType_Severity: 9350,\n ExclusiveLimitAlarmType_ConditionName: 9351,\n ExclusiveLimitAlarmType_BranchId: 9352,\n ExclusiveLimitAlarmType_Retain: 9353,\n ExclusiveLimitAlarmType_EnabledState: 9354,\n ExclusiveLimitAlarmType_EnabledState_Id: 9355,\n ExclusiveLimitAlarmType_EnabledState_Name: 9356,\n ExclusiveLimitAlarmType_EnabledState_Number: 9357,\n ExclusiveLimitAlarmType_EnabledState_EffectiveDisplayName: 9358,\n ExclusiveLimitAlarmType_EnabledState_TransitionTime: 9359,\n ExclusiveLimitAlarmType_EnabledState_EffectiveTransitionTime: 9360,\n ExclusiveLimitAlarmType_EnabledState_TrueState: 9361,\n ExclusiveLimitAlarmType_EnabledState_FalseState: 9362,\n ExclusiveLimitAlarmType_Quality: 9363,\n ExclusiveLimitAlarmType_Quality_SourceTimestamp: 9364,\n ExclusiveLimitAlarmType_LastSeverity: 9365,\n ExclusiveLimitAlarmType_LastSeverity_SourceTimestamp: 9366,\n ExclusiveLimitAlarmType_Comment: 9367,\n ExclusiveLimitAlarmType_Comment_SourceTimestamp: 9368,\n ExclusiveLimitAlarmType_ClientUserId: 9369,\n ExclusiveLimitAlarmType_AddComment_InputArguments: 9373,\n ExclusiveLimitAlarmType_ConditionRefresh_InputArguments: 9375,\n ExclusiveLimitAlarmType_AckedState: 9376,\n ExclusiveLimitAlarmType_AckedState_Id: 9377,\n ExclusiveLimitAlarmType_AckedState_Name: 9378,\n ExclusiveLimitAlarmType_AckedState_Number: 9379,\n ExclusiveLimitAlarmType_AckedState_EffectiveDisplayName: 9380,\n ExclusiveLimitAlarmType_AckedState_TransitionTime: 9381,\n ExclusiveLimitAlarmType_AckedState_EffectiveTransitionTime: 9382,\n ExclusiveLimitAlarmType_AckedState_TrueState: 9383,\n ExclusiveLimitAlarmType_AckedState_FalseState: 9384,\n ExclusiveLimitAlarmType_ConfirmedState: 9385,\n ExclusiveLimitAlarmType_ConfirmedState_Id: 9386,\n ExclusiveLimitAlarmType_ConfirmedState_Name: 9387,\n ExclusiveLimitAlarmType_ConfirmedState_Number: 9388,\n ExclusiveLimitAlarmType_ConfirmedState_EffectiveDisplayName: 9389,\n ExclusiveLimitAlarmType_ConfirmedState_TransitionTime: 9390,\n ExclusiveLimitAlarmType_ConfirmedState_EffectiveTransitionTime: 9391,\n ExclusiveLimitAlarmType_ConfirmedState_TrueState: 9392,\n ExclusiveLimitAlarmType_ConfirmedState_FalseState: 9393,\n ExclusiveLimitAlarmType_Acknowledge_InputArguments: 9395,\n ExclusiveLimitAlarmType_Confirm_InputArguments: 9397,\n ExclusiveLimitAlarmType_ActiveState: 9398,\n ExclusiveLimitAlarmType_ActiveState_Id: 9399,\n ExclusiveLimitAlarmType_ActiveState_Name: 9400,\n ExclusiveLimitAlarmType_ActiveState_Number: 9401,\n ExclusiveLimitAlarmType_ActiveState_EffectiveDisplayName: 9402,\n ExclusiveLimitAlarmType_ActiveState_TransitionTime: 9403,\n ExclusiveLimitAlarmType_ActiveState_EffectiveTransitionTime: 9404,\n ExclusiveLimitAlarmType_ActiveState_TrueState: 9405,\n ExclusiveLimitAlarmType_ActiveState_FalseState: 9406,\n ExclusiveLimitAlarmType_SuppressedState: 9407,\n ExclusiveLimitAlarmType_SuppressedState_Id: 9408,\n ExclusiveLimitAlarmType_SuppressedState_Name: 9409,\n ExclusiveLimitAlarmType_SuppressedState_Number: 9410,\n ExclusiveLimitAlarmType_SuppressedState_EffectiveDisplayName: 9411,\n ExclusiveLimitAlarmType_SuppressedState_TransitionTime: 9412,\n ExclusiveLimitAlarmType_SuppressedState_EffectiveTransitionTime: 9413,\n ExclusiveLimitAlarmType_SuppressedState_TrueState: 9414,\n ExclusiveLimitAlarmType_SuppressedState_FalseState: 9415,\n ExclusiveLimitAlarmType_ShelvingState_CurrentState: 9417,\n ExclusiveLimitAlarmType_ShelvingState_CurrentState_Id: 9418,\n ExclusiveLimitAlarmType_ShelvingState_CurrentState_Name: 9419,\n ExclusiveLimitAlarmType_ShelvingState_CurrentState_Number: 9420,\n ExclusiveLimitAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 9421,\n ExclusiveLimitAlarmType_ShelvingState_LastTransition: 9422,\n ExclusiveLimitAlarmType_ShelvingState_LastTransition_Id: 9423,\n ExclusiveLimitAlarmType_ShelvingState_LastTransition_Name: 9424,\n ExclusiveLimitAlarmType_ShelvingState_LastTransition_Number: 9425,\n ExclusiveLimitAlarmType_ShelvingState_LastTransition_TransitionTime: 9426,\n ExclusiveLimitAlarmType_ShelvingState_UnshelveTime: 9427,\n ExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments: 9452,\n ExclusiveLimitAlarmType_SuppressedOrShelved: 9453,\n ExclusiveLimitAlarmType_MaxTimeShelved: 9454,\n ExclusiveLimitAlarmType_LimitState_CurrentState: 9456,\n ExclusiveLimitAlarmType_LimitState_CurrentState_Id: 9457,\n ExclusiveLimitAlarmType_LimitState_CurrentState_Name: 9458,\n ExclusiveLimitAlarmType_LimitState_CurrentState_Number: 9459,\n ExclusiveLimitAlarmType_LimitState_CurrentState_EffectiveDisplayName: 9460,\n ExclusiveLimitAlarmType_LimitState_LastTransition: 9461,\n ExclusiveLimitAlarmType_LimitState_LastTransition_Id: 9462,\n ExclusiveLimitAlarmType_LimitState_LastTransition_Name: 9463,\n ExclusiveLimitAlarmType_LimitState_LastTransition_Number: 9464,\n ExclusiveLimitAlarmType_LimitState_LastTransition_TransitionTime: 9465,\n ExclusiveLimitAlarmType_HighHighLimit: 9478,\n ExclusiveLimitAlarmType_HighLimit: 9479,\n ExclusiveLimitAlarmType_LowLimit: 9480,\n ExclusiveLimitAlarmType_LowLowLimit: 9481,\n ExclusiveLevelAlarmType_EventId: 9483,\n ExclusiveLevelAlarmType_EventType: 9484,\n ExclusiveLevelAlarmType_SourceNode: 9485,\n ExclusiveLevelAlarmType_SourceName: 9486,\n ExclusiveLevelAlarmType_Time: 9487,\n ExclusiveLevelAlarmType_ReceiveTime: 9488,\n ExclusiveLevelAlarmType_LocalTime: 9489,\n ExclusiveLevelAlarmType_Message: 9490,\n ExclusiveLevelAlarmType_Severity: 9491,\n ExclusiveLevelAlarmType_ConditionName: 9492,\n ExclusiveLevelAlarmType_BranchId: 9493,\n ExclusiveLevelAlarmType_Retain: 9494,\n ExclusiveLevelAlarmType_EnabledState: 9495,\n ExclusiveLevelAlarmType_EnabledState_Id: 9496,\n ExclusiveLevelAlarmType_EnabledState_Name: 9497,\n ExclusiveLevelAlarmType_EnabledState_Number: 9498,\n ExclusiveLevelAlarmType_EnabledState_EffectiveDisplayName: 9499,\n ExclusiveLevelAlarmType_EnabledState_TransitionTime: 9500,\n ExclusiveLevelAlarmType_EnabledState_EffectiveTransitionTime: 9501,\n ExclusiveLevelAlarmType_EnabledState_TrueState: 9502,\n ExclusiveLevelAlarmType_EnabledState_FalseState: 9503,\n ExclusiveLevelAlarmType_Quality: 9504,\n ExclusiveLevelAlarmType_Quality_SourceTimestamp: 9505,\n ExclusiveLevelAlarmType_LastSeverity: 9506,\n ExclusiveLevelAlarmType_LastSeverity_SourceTimestamp: 9507,\n ExclusiveLevelAlarmType_Comment: 9508,\n ExclusiveLevelAlarmType_Comment_SourceTimestamp: 9509,\n ExclusiveLevelAlarmType_ClientUserId: 9510,\n ExclusiveLevelAlarmType_AddComment_InputArguments: 9514,\n ExclusiveLevelAlarmType_ConditionRefresh_InputArguments: 9516,\n ExclusiveLevelAlarmType_AckedState: 9517,\n ExclusiveLevelAlarmType_AckedState_Id: 9518,\n ExclusiveLevelAlarmType_AckedState_Name: 9519,\n ExclusiveLevelAlarmType_AckedState_Number: 9520,\n ExclusiveLevelAlarmType_AckedState_EffectiveDisplayName: 9521,\n ExclusiveLevelAlarmType_AckedState_TransitionTime: 9522,\n ExclusiveLevelAlarmType_AckedState_EffectiveTransitionTime: 9523,\n ExclusiveLevelAlarmType_AckedState_TrueState: 9524,\n ExclusiveLevelAlarmType_AckedState_FalseState: 9525,\n ExclusiveLevelAlarmType_ConfirmedState: 9526,\n ExclusiveLevelAlarmType_ConfirmedState_Id: 9527,\n ExclusiveLevelAlarmType_ConfirmedState_Name: 9528,\n ExclusiveLevelAlarmType_ConfirmedState_Number: 9529,\n ExclusiveLevelAlarmType_ConfirmedState_EffectiveDisplayName: 9530,\n ExclusiveLevelAlarmType_ConfirmedState_TransitionTime: 9531,\n ExclusiveLevelAlarmType_ConfirmedState_EffectiveTransitionTime: 9532,\n ExclusiveLevelAlarmType_ConfirmedState_TrueState: 9533,\n ExclusiveLevelAlarmType_ConfirmedState_FalseState: 9534,\n ExclusiveLevelAlarmType_Acknowledge_InputArguments: 9536,\n ExclusiveLevelAlarmType_Confirm_InputArguments: 9538,\n ExclusiveLevelAlarmType_ActiveState: 9539,\n ExclusiveLevelAlarmType_ActiveState_Id: 9540,\n ExclusiveLevelAlarmType_ActiveState_Name: 9541,\n ExclusiveLevelAlarmType_ActiveState_Number: 9542,\n ExclusiveLevelAlarmType_ActiveState_EffectiveDisplayName: 9543,\n ExclusiveLevelAlarmType_ActiveState_TransitionTime: 9544,\n ExclusiveLevelAlarmType_ActiveState_EffectiveTransitionTime: 9545,\n ExclusiveLevelAlarmType_ActiveState_TrueState: 9546,\n ExclusiveLevelAlarmType_ActiveState_FalseState: 9547,\n ExclusiveLevelAlarmType_SuppressedState: 9548,\n ExclusiveLevelAlarmType_SuppressedState_Id: 9549,\n ExclusiveLevelAlarmType_SuppressedState_Name: 9550,\n ExclusiveLevelAlarmType_SuppressedState_Number: 9551,\n ExclusiveLevelAlarmType_SuppressedState_EffectiveDisplayName: 9552,\n ExclusiveLevelAlarmType_SuppressedState_TransitionTime: 9553,\n ExclusiveLevelAlarmType_SuppressedState_EffectiveTransitionTime: 9554,\n ExclusiveLevelAlarmType_SuppressedState_TrueState: 9555,\n ExclusiveLevelAlarmType_SuppressedState_FalseState: 9556,\n ExclusiveLevelAlarmType_ShelvingState_CurrentState: 9558,\n ExclusiveLevelAlarmType_ShelvingState_CurrentState_Id: 9559,\n ExclusiveLevelAlarmType_ShelvingState_CurrentState_Name: 9560,\n ExclusiveLevelAlarmType_ShelvingState_CurrentState_Number: 9561,\n ExclusiveLevelAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 9562,\n ExclusiveLevelAlarmType_ShelvingState_LastTransition: 9563,\n ExclusiveLevelAlarmType_ShelvingState_LastTransition_Id: 9564,\n ExclusiveLevelAlarmType_ShelvingState_LastTransition_Name: 9565,\n ExclusiveLevelAlarmType_ShelvingState_LastTransition_Number: 9566,\n ExclusiveLevelAlarmType_ShelvingState_LastTransition_TransitionTime: 9567,\n ExclusiveLevelAlarmType_ShelvingState_UnshelveTime: 9568,\n ExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments: 9593,\n ExclusiveLevelAlarmType_SuppressedOrShelved: 9594,\n ExclusiveLevelAlarmType_MaxTimeShelved: 9595,\n ExclusiveLevelAlarmType_LimitState_CurrentState: 9597,\n ExclusiveLevelAlarmType_LimitState_CurrentState_Id: 9598,\n ExclusiveLevelAlarmType_LimitState_CurrentState_Name: 9599,\n ExclusiveLevelAlarmType_LimitState_CurrentState_Number: 9600,\n ExclusiveLevelAlarmType_LimitState_CurrentState_EffectiveDisplayName: 9601,\n ExclusiveLevelAlarmType_LimitState_LastTransition: 9602,\n ExclusiveLevelAlarmType_LimitState_LastTransition_Id: 9603,\n ExclusiveLevelAlarmType_LimitState_LastTransition_Name: 9604,\n ExclusiveLevelAlarmType_LimitState_LastTransition_Number: 9605,\n ExclusiveLevelAlarmType_LimitState_LastTransition_TransitionTime: 9606,\n ExclusiveLevelAlarmType_HighHighLimit: 9619,\n ExclusiveLevelAlarmType_HighLimit: 9620,\n ExclusiveLevelAlarmType_LowLimit: 9621,\n ExclusiveLevelAlarmType_LowLowLimit: 9622,\n ExclusiveRateOfChangeAlarmType_EventId: 9624,\n ExclusiveRateOfChangeAlarmType_EventType: 9625,\n ExclusiveRateOfChangeAlarmType_SourceNode: 9626,\n ExclusiveRateOfChangeAlarmType_SourceName: 9627,\n ExclusiveRateOfChangeAlarmType_Time: 9628,\n ExclusiveRateOfChangeAlarmType_ReceiveTime: 9629,\n ExclusiveRateOfChangeAlarmType_LocalTime: 9630,\n ExclusiveRateOfChangeAlarmType_Message: 9631,\n ExclusiveRateOfChangeAlarmType_Severity: 9632,\n ExclusiveRateOfChangeAlarmType_ConditionName: 9633,\n ExclusiveRateOfChangeAlarmType_BranchId: 9634,\n ExclusiveRateOfChangeAlarmType_Retain: 9635,\n ExclusiveRateOfChangeAlarmType_EnabledState: 9636,\n ExclusiveRateOfChangeAlarmType_EnabledState_Id: 9637,\n ExclusiveRateOfChangeAlarmType_EnabledState_Name: 9638,\n ExclusiveRateOfChangeAlarmType_EnabledState_Number: 9639,\n ExclusiveRateOfChangeAlarmType_EnabledState_EffectiveDisplayName: 9640,\n ExclusiveRateOfChangeAlarmType_EnabledState_TransitionTime: 9641,\n ExclusiveRateOfChangeAlarmType_EnabledState_EffectiveTransitionTime: 9642,\n ExclusiveRateOfChangeAlarmType_EnabledState_TrueState: 9643,\n ExclusiveRateOfChangeAlarmType_EnabledState_FalseState: 9644,\n ExclusiveRateOfChangeAlarmType_Quality: 9645,\n ExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp: 9646,\n ExclusiveRateOfChangeAlarmType_LastSeverity: 9647,\n ExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp: 9648,\n ExclusiveRateOfChangeAlarmType_Comment: 9649,\n ExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp: 9650,\n ExclusiveRateOfChangeAlarmType_ClientUserId: 9651,\n ExclusiveRateOfChangeAlarmType_AddComment_InputArguments: 9655,\n ExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments: 9657,\n ExclusiveRateOfChangeAlarmType_AckedState: 9658,\n ExclusiveRateOfChangeAlarmType_AckedState_Id: 9659,\n ExclusiveRateOfChangeAlarmType_AckedState_Name: 9660,\n ExclusiveRateOfChangeAlarmType_AckedState_Number: 9661,\n ExclusiveRateOfChangeAlarmType_AckedState_EffectiveDisplayName: 9662,\n ExclusiveRateOfChangeAlarmType_AckedState_TransitionTime: 9663,\n ExclusiveRateOfChangeAlarmType_AckedState_EffectiveTransitionTime: 9664,\n ExclusiveRateOfChangeAlarmType_AckedState_TrueState: 9665,\n ExclusiveRateOfChangeAlarmType_AckedState_FalseState: 9666,\n ExclusiveRateOfChangeAlarmType_ConfirmedState: 9667,\n ExclusiveRateOfChangeAlarmType_ConfirmedState_Id: 9668,\n ExclusiveRateOfChangeAlarmType_ConfirmedState_Name: 9669,\n ExclusiveRateOfChangeAlarmType_ConfirmedState_Number: 9670,\n ExclusiveRateOfChangeAlarmType_ConfirmedState_EffectiveDisplayName: 9671,\n ExclusiveRateOfChangeAlarmType_ConfirmedState_TransitionTime: 9672,\n ExclusiveRateOfChangeAlarmType_ConfirmedState_EffectiveTransitionTime: 9673,\n ExclusiveRateOfChangeAlarmType_ConfirmedState_TrueState: 9674,\n ExclusiveRateOfChangeAlarmType_ConfirmedState_FalseState: 9675,\n ExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments: 9677,\n ExclusiveRateOfChangeAlarmType_Confirm_InputArguments: 9679,\n ExclusiveRateOfChangeAlarmType_ActiveState: 9680,\n ExclusiveRateOfChangeAlarmType_ActiveState_Id: 9681,\n ExclusiveRateOfChangeAlarmType_ActiveState_Name: 9682,\n ExclusiveRateOfChangeAlarmType_ActiveState_Number: 9683,\n ExclusiveRateOfChangeAlarmType_ActiveState_EffectiveDisplayName: 9684,\n ExclusiveRateOfChangeAlarmType_ActiveState_TransitionTime: 9685,\n ExclusiveRateOfChangeAlarmType_ActiveState_EffectiveTransitionTime: 9686,\n ExclusiveRateOfChangeAlarmType_ActiveState_TrueState: 9687,\n ExclusiveRateOfChangeAlarmType_ActiveState_FalseState: 9688,\n ExclusiveRateOfChangeAlarmType_SuppressedState: 9689,\n ExclusiveRateOfChangeAlarmType_SuppressedState_Id: 9690,\n ExclusiveRateOfChangeAlarmType_SuppressedState_Name: 9691,\n ExclusiveRateOfChangeAlarmType_SuppressedState_Number: 9692,\n ExclusiveRateOfChangeAlarmType_SuppressedState_EffectiveDisplayName: 9693,\n ExclusiveRateOfChangeAlarmType_SuppressedState_TransitionTime: 9694,\n ExclusiveRateOfChangeAlarmType_SuppressedState_EffectiveTransitionTime: 9695,\n ExclusiveRateOfChangeAlarmType_SuppressedState_TrueState: 9696,\n ExclusiveRateOfChangeAlarmType_SuppressedState_FalseState: 9697,\n ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState: 9699,\n ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id: 9700,\n ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Name: 9701,\n ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Number: 9702,\n ExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 9703,\n ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition: 9704,\n ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id: 9705,\n ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Name: 9706,\n ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Number: 9707,\n ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_TransitionTime: 9708,\n ExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime: 9709,\n ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments: 9734,\n ExclusiveRateOfChangeAlarmType_SuppressedOrShelved: 9735,\n ExclusiveRateOfChangeAlarmType_MaxTimeShelved: 9736,\n ExclusiveRateOfChangeAlarmType_LimitState_CurrentState: 9738,\n ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Id: 9739,\n ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Name: 9740,\n ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_Number: 9741,\n ExclusiveRateOfChangeAlarmType_LimitState_CurrentState_EffectiveDisplayName: 9742,\n ExclusiveRateOfChangeAlarmType_LimitState_LastTransition: 9743,\n ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Id: 9744,\n ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Name: 9745,\n ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_Number: 9746,\n ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_TransitionTime: 9747,\n ExclusiveRateOfChangeAlarmType_HighHighLimit: 9760,\n ExclusiveRateOfChangeAlarmType_HighLimit: 9761,\n ExclusiveRateOfChangeAlarmType_LowLimit: 9762,\n ExclusiveRateOfChangeAlarmType_LowLowLimit: 9763,\n ExclusiveDeviationAlarmType_EventId: 9765,\n ExclusiveDeviationAlarmType_EventType: 9766,\n ExclusiveDeviationAlarmType_SourceNode: 9767,\n ExclusiveDeviationAlarmType_SourceName: 9768,\n ExclusiveDeviationAlarmType_Time: 9769,\n ExclusiveDeviationAlarmType_ReceiveTime: 9770,\n ExclusiveDeviationAlarmType_LocalTime: 9771,\n ExclusiveDeviationAlarmType_Message: 9772,\n ExclusiveDeviationAlarmType_Severity: 9773,\n ExclusiveDeviationAlarmType_ConditionName: 9774,\n ExclusiveDeviationAlarmType_BranchId: 9775,\n ExclusiveDeviationAlarmType_Retain: 9776,\n ExclusiveDeviationAlarmType_EnabledState: 9777,\n ExclusiveDeviationAlarmType_EnabledState_Id: 9778,\n ExclusiveDeviationAlarmType_EnabledState_Name: 9779,\n ExclusiveDeviationAlarmType_EnabledState_Number: 9780,\n ExclusiveDeviationAlarmType_EnabledState_EffectiveDisplayName: 9781,\n ExclusiveDeviationAlarmType_EnabledState_TransitionTime: 9782,\n ExclusiveDeviationAlarmType_EnabledState_EffectiveTransitionTime: 9783,\n ExclusiveDeviationAlarmType_EnabledState_TrueState: 9784,\n ExclusiveDeviationAlarmType_EnabledState_FalseState: 9785,\n ExclusiveDeviationAlarmType_Quality: 9786,\n ExclusiveDeviationAlarmType_Quality_SourceTimestamp: 9787,\n ExclusiveDeviationAlarmType_LastSeverity: 9788,\n ExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp: 9789,\n ExclusiveDeviationAlarmType_Comment: 9790,\n ExclusiveDeviationAlarmType_Comment_SourceTimestamp: 9791,\n ExclusiveDeviationAlarmType_ClientUserId: 9792,\n ExclusiveDeviationAlarmType_AddComment_InputArguments: 9796,\n ExclusiveDeviationAlarmType_ConditionRefresh_InputArguments: 9798,\n ExclusiveDeviationAlarmType_AckedState: 9799,\n ExclusiveDeviationAlarmType_AckedState_Id: 9800,\n ExclusiveDeviationAlarmType_AckedState_Name: 9801,\n ExclusiveDeviationAlarmType_AckedState_Number: 9802,\n ExclusiveDeviationAlarmType_AckedState_EffectiveDisplayName: 9803,\n ExclusiveDeviationAlarmType_AckedState_TransitionTime: 9804,\n ExclusiveDeviationAlarmType_AckedState_EffectiveTransitionTime: 9805,\n ExclusiveDeviationAlarmType_AckedState_TrueState: 9806,\n ExclusiveDeviationAlarmType_AckedState_FalseState: 9807,\n ExclusiveDeviationAlarmType_ConfirmedState: 9808,\n ExclusiveDeviationAlarmType_ConfirmedState_Id: 9809,\n ExclusiveDeviationAlarmType_ConfirmedState_Name: 9810,\n ExclusiveDeviationAlarmType_ConfirmedState_Number: 9811,\n ExclusiveDeviationAlarmType_ConfirmedState_EffectiveDisplayName: 9812,\n ExclusiveDeviationAlarmType_ConfirmedState_TransitionTime: 9813,\n ExclusiveDeviationAlarmType_ConfirmedState_EffectiveTransitionTime: 9814,\n ExclusiveDeviationAlarmType_ConfirmedState_TrueState: 9815,\n ExclusiveDeviationAlarmType_ConfirmedState_FalseState: 9816,\n ExclusiveDeviationAlarmType_Acknowledge_InputArguments: 9818,\n ExclusiveDeviationAlarmType_Confirm_InputArguments: 9820,\n ExclusiveDeviationAlarmType_ActiveState: 9821,\n ExclusiveDeviationAlarmType_ActiveState_Id: 9822,\n ExclusiveDeviationAlarmType_ActiveState_Name: 9823,\n ExclusiveDeviationAlarmType_ActiveState_Number: 9824,\n ExclusiveDeviationAlarmType_ActiveState_EffectiveDisplayName: 9825,\n ExclusiveDeviationAlarmType_ActiveState_TransitionTime: 9826,\n ExclusiveDeviationAlarmType_ActiveState_EffectiveTransitionTime: 9827,\n ExclusiveDeviationAlarmType_ActiveState_TrueState: 9828,\n ExclusiveDeviationAlarmType_ActiveState_FalseState: 9829,\n ExclusiveDeviationAlarmType_SuppressedState: 9830,\n ExclusiveDeviationAlarmType_SuppressedState_Id: 9831,\n ExclusiveDeviationAlarmType_SuppressedState_Name: 9832,\n ExclusiveDeviationAlarmType_SuppressedState_Number: 9833,\n ExclusiveDeviationAlarmType_SuppressedState_EffectiveDisplayName: 9834,\n ExclusiveDeviationAlarmType_SuppressedState_TransitionTime: 9835,\n ExclusiveDeviationAlarmType_SuppressedState_EffectiveTransitionTime: 9836,\n ExclusiveDeviationAlarmType_SuppressedState_TrueState: 9837,\n ExclusiveDeviationAlarmType_SuppressedState_FalseState: 9838,\n ExclusiveDeviationAlarmType_ShelvingState_CurrentState: 9840,\n ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id: 9841,\n ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Name: 9842,\n ExclusiveDeviationAlarmType_ShelvingState_CurrentState_Number: 9843,\n ExclusiveDeviationAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 9844,\n ExclusiveDeviationAlarmType_ShelvingState_LastTransition: 9845,\n ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id: 9846,\n ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Name: 9847,\n ExclusiveDeviationAlarmType_ShelvingState_LastTransition_Number: 9848,\n ExclusiveDeviationAlarmType_ShelvingState_LastTransition_TransitionTime: 9849,\n ExclusiveDeviationAlarmType_ShelvingState_UnshelveTime: 9850,\n ExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments: 9875,\n ExclusiveDeviationAlarmType_SuppressedOrShelved: 9876,\n ExclusiveDeviationAlarmType_MaxTimeShelved: 9877,\n ExclusiveDeviationAlarmType_LimitState_CurrentState: 9879,\n ExclusiveDeviationAlarmType_LimitState_CurrentState_Id: 9880,\n ExclusiveDeviationAlarmType_LimitState_CurrentState_Name: 9881,\n ExclusiveDeviationAlarmType_LimitState_CurrentState_Number: 9882,\n ExclusiveDeviationAlarmType_LimitState_CurrentState_EffectiveDisplayName: 9883,\n ExclusiveDeviationAlarmType_LimitState_LastTransition: 9884,\n ExclusiveDeviationAlarmType_LimitState_LastTransition_Id: 9885,\n ExclusiveDeviationAlarmType_LimitState_LastTransition_Name: 9886,\n ExclusiveDeviationAlarmType_LimitState_LastTransition_Number: 9887,\n ExclusiveDeviationAlarmType_LimitState_LastTransition_TransitionTime: 9888,\n ExclusiveDeviationAlarmType_HighHighLimit: 9901,\n ExclusiveDeviationAlarmType_HighLimit: 9902,\n ExclusiveDeviationAlarmType_LowLimit: 9903,\n ExclusiveDeviationAlarmType_LowLowLimit: 9904,\n ExclusiveDeviationAlarmType_SetpointNode: 9905,\n NonExclusiveLimitAlarmType_EventId: 9907,\n NonExclusiveLimitAlarmType_EventType: 9908,\n NonExclusiveLimitAlarmType_SourceNode: 9909,\n NonExclusiveLimitAlarmType_SourceName: 9910,\n NonExclusiveLimitAlarmType_Time: 9911,\n NonExclusiveLimitAlarmType_ReceiveTime: 9912,\n NonExclusiveLimitAlarmType_LocalTime: 9913,\n NonExclusiveLimitAlarmType_Message: 9914,\n NonExclusiveLimitAlarmType_Severity: 9915,\n NonExclusiveLimitAlarmType_ConditionName: 9916,\n NonExclusiveLimitAlarmType_BranchId: 9917,\n NonExclusiveLimitAlarmType_Retain: 9918,\n NonExclusiveLimitAlarmType_EnabledState: 9919,\n NonExclusiveLimitAlarmType_EnabledState_Id: 9920,\n NonExclusiveLimitAlarmType_EnabledState_Name: 9921,\n NonExclusiveLimitAlarmType_EnabledState_Number: 9922,\n NonExclusiveLimitAlarmType_EnabledState_EffectiveDisplayName: 9923,\n NonExclusiveLimitAlarmType_EnabledState_TransitionTime: 9924,\n NonExclusiveLimitAlarmType_EnabledState_EffectiveTransitionTime: 9925,\n NonExclusiveLimitAlarmType_EnabledState_TrueState: 9926,\n NonExclusiveLimitAlarmType_EnabledState_FalseState: 9927,\n NonExclusiveLimitAlarmType_Quality: 9928,\n NonExclusiveLimitAlarmType_Quality_SourceTimestamp: 9929,\n NonExclusiveLimitAlarmType_LastSeverity: 9930,\n NonExclusiveLimitAlarmType_LastSeverity_SourceTimestamp: 9931,\n NonExclusiveLimitAlarmType_Comment: 9932,\n NonExclusiveLimitAlarmType_Comment_SourceTimestamp: 9933,\n NonExclusiveLimitAlarmType_ClientUserId: 9934,\n NonExclusiveLimitAlarmType_AddComment_InputArguments: 9938,\n NonExclusiveLimitAlarmType_ConditionRefresh_InputArguments: 9940,\n NonExclusiveLimitAlarmType_AckedState: 9941,\n NonExclusiveLimitAlarmType_AckedState_Id: 9942,\n NonExclusiveLimitAlarmType_AckedState_Name: 9943,\n NonExclusiveLimitAlarmType_AckedState_Number: 9944,\n NonExclusiveLimitAlarmType_AckedState_EffectiveDisplayName: 9945,\n NonExclusiveLimitAlarmType_AckedState_TransitionTime: 9946,\n NonExclusiveLimitAlarmType_AckedState_EffectiveTransitionTime: 9947,\n NonExclusiveLimitAlarmType_AckedState_TrueState: 9948,\n NonExclusiveLimitAlarmType_AckedState_FalseState: 9949,\n NonExclusiveLimitAlarmType_ConfirmedState: 9950,\n NonExclusiveLimitAlarmType_ConfirmedState_Id: 9951,\n NonExclusiveLimitAlarmType_ConfirmedState_Name: 9952,\n NonExclusiveLimitAlarmType_ConfirmedState_Number: 9953,\n NonExclusiveLimitAlarmType_ConfirmedState_EffectiveDisplayName: 9954,\n NonExclusiveLimitAlarmType_ConfirmedState_TransitionTime: 9955,\n NonExclusiveLimitAlarmType_ConfirmedState_EffectiveTransitionTime: 9956,\n NonExclusiveLimitAlarmType_ConfirmedState_TrueState: 9957,\n NonExclusiveLimitAlarmType_ConfirmedState_FalseState: 9958,\n NonExclusiveLimitAlarmType_Acknowledge_InputArguments: 9960,\n NonExclusiveLimitAlarmType_Confirm_InputArguments: 9962,\n NonExclusiveLimitAlarmType_ActiveState: 9963,\n NonExclusiveLimitAlarmType_ActiveState_Id: 9964,\n NonExclusiveLimitAlarmType_ActiveState_Name: 9965,\n NonExclusiveLimitAlarmType_ActiveState_Number: 9966,\n NonExclusiveLimitAlarmType_ActiveState_EffectiveDisplayName: 9967,\n NonExclusiveLimitAlarmType_ActiveState_TransitionTime: 9968,\n NonExclusiveLimitAlarmType_ActiveState_EffectiveTransitionTime: 9969,\n NonExclusiveLimitAlarmType_ActiveState_TrueState: 9970,\n NonExclusiveLimitAlarmType_ActiveState_FalseState: 9971,\n NonExclusiveLimitAlarmType_SuppressedState: 9972,\n NonExclusiveLimitAlarmType_SuppressedState_Id: 9973,\n NonExclusiveLimitAlarmType_SuppressedState_Name: 9974,\n NonExclusiveLimitAlarmType_SuppressedState_Number: 9975,\n NonExclusiveLimitAlarmType_SuppressedState_EffectiveDisplayName: 9976,\n NonExclusiveLimitAlarmType_SuppressedState_TransitionTime: 9977,\n NonExclusiveLimitAlarmType_SuppressedState_EffectiveTransitionTime: 9978,\n NonExclusiveLimitAlarmType_SuppressedState_TrueState: 9979,\n NonExclusiveLimitAlarmType_SuppressedState_FalseState: 9980,\n NonExclusiveLimitAlarmType_ShelvingState_CurrentState: 9982,\n NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Id: 9983,\n NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Name: 9984,\n NonExclusiveLimitAlarmType_ShelvingState_CurrentState_Number: 9985,\n NonExclusiveLimitAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 9986,\n NonExclusiveLimitAlarmType_ShelvingState_LastTransition: 9987,\n NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Id: 9988,\n NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Name: 9989,\n NonExclusiveLimitAlarmType_ShelvingState_LastTransition_Number: 9990,\n NonExclusiveLimitAlarmType_ShelvingState_LastTransition_TransitionTime: 9991,\n NonExclusiveLimitAlarmType_ShelvingState_UnshelveTime: 9992,\n NonExclusiveLimitAlarmType_ShelvingState_TimedShelve_InputArguments: 10017,\n NonExclusiveLimitAlarmType_SuppressedOrShelved: 10018,\n NonExclusiveLimitAlarmType_MaxTimeShelved: 10019,\n NonExclusiveLimitAlarmType_HighHighState: 10020,\n NonExclusiveLimitAlarmType_HighHighState_Id: 10021,\n NonExclusiveLimitAlarmType_HighHighState_Name: 10022,\n NonExclusiveLimitAlarmType_HighHighState_Number: 10023,\n NonExclusiveLimitAlarmType_HighHighState_EffectiveDisplayName: 10024,\n NonExclusiveLimitAlarmType_HighHighState_TransitionTime: 10025,\n NonExclusiveLimitAlarmType_HighHighState_EffectiveTransitionTime: 10026,\n NonExclusiveLimitAlarmType_HighHighState_TrueState: 10027,\n NonExclusiveLimitAlarmType_HighHighState_FalseState: 10028,\n NonExclusiveLimitAlarmType_HighState: 10029,\n NonExclusiveLimitAlarmType_HighState_Id: 10030,\n NonExclusiveLimitAlarmType_HighState_Name: 10031,\n NonExclusiveLimitAlarmType_HighState_Number: 10032,\n NonExclusiveLimitAlarmType_HighState_EffectiveDisplayName: 10033,\n NonExclusiveLimitAlarmType_HighState_TransitionTime: 10034,\n NonExclusiveLimitAlarmType_HighState_EffectiveTransitionTime: 10035,\n NonExclusiveLimitAlarmType_HighState_TrueState: 10036,\n NonExclusiveLimitAlarmType_HighState_FalseState: 10037,\n NonExclusiveLimitAlarmType_LowState: 10038,\n NonExclusiveLimitAlarmType_LowState_Id: 10039,\n NonExclusiveLimitAlarmType_LowState_Name: 10040,\n NonExclusiveLimitAlarmType_LowState_Number: 10041,\n NonExclusiveLimitAlarmType_LowState_EffectiveDisplayName: 10042,\n NonExclusiveLimitAlarmType_LowState_TransitionTime: 10043,\n NonExclusiveLimitAlarmType_LowState_EffectiveTransitionTime: 10044,\n NonExclusiveLimitAlarmType_LowState_TrueState: 10045,\n NonExclusiveLimitAlarmType_LowState_FalseState: 10046,\n NonExclusiveLimitAlarmType_LowLowState: 10047,\n NonExclusiveLimitAlarmType_LowLowState_Id: 10048,\n NonExclusiveLimitAlarmType_LowLowState_Name: 10049,\n NonExclusiveLimitAlarmType_LowLowState_Number: 10050,\n NonExclusiveLimitAlarmType_LowLowState_EffectiveDisplayName: 10051,\n NonExclusiveLimitAlarmType_LowLowState_TransitionTime: 10052,\n NonExclusiveLimitAlarmType_LowLowState_EffectiveTransitionTime: 10053,\n NonExclusiveLimitAlarmType_LowLowState_TrueState: 10054,\n NonExclusiveLimitAlarmType_LowLowState_FalseState: 10055,\n NonExclusiveLimitAlarmType_HighHighLimit: 10056,\n NonExclusiveLimitAlarmType_HighLimit: 10057,\n NonExclusiveLimitAlarmType_LowLimit: 10058,\n NonExclusiveLimitAlarmType_LowLowLimit: 10059,\n NonExclusiveLevelAlarmType_EventId: 10061,\n NonExclusiveLevelAlarmType_EventType: 10062,\n NonExclusiveLevelAlarmType_SourceNode: 10063,\n NonExclusiveLevelAlarmType_SourceName: 10064,\n NonExclusiveLevelAlarmType_Time: 10065,\n NonExclusiveLevelAlarmType_ReceiveTime: 10066,\n NonExclusiveLevelAlarmType_LocalTime: 10067,\n NonExclusiveLevelAlarmType_Message: 10068,\n NonExclusiveLevelAlarmType_Severity: 10069,\n NonExclusiveLevelAlarmType_ConditionName: 10070,\n NonExclusiveLevelAlarmType_BranchId: 10071,\n NonExclusiveLevelAlarmType_Retain: 10072,\n NonExclusiveLevelAlarmType_EnabledState: 10073,\n NonExclusiveLevelAlarmType_EnabledState_Id: 10074,\n NonExclusiveLevelAlarmType_EnabledState_Name: 10075,\n NonExclusiveLevelAlarmType_EnabledState_Number: 10076,\n NonExclusiveLevelAlarmType_EnabledState_EffectiveDisplayName: 10077,\n NonExclusiveLevelAlarmType_EnabledState_TransitionTime: 10078,\n NonExclusiveLevelAlarmType_EnabledState_EffectiveTransitionTime: 10079,\n NonExclusiveLevelAlarmType_EnabledState_TrueState: 10080,\n NonExclusiveLevelAlarmType_EnabledState_FalseState: 10081,\n NonExclusiveLevelAlarmType_Quality: 10082,\n NonExclusiveLevelAlarmType_Quality_SourceTimestamp: 10083,\n NonExclusiveLevelAlarmType_LastSeverity: 10084,\n NonExclusiveLevelAlarmType_LastSeverity_SourceTimestamp: 10085,\n NonExclusiveLevelAlarmType_Comment: 10086,\n NonExclusiveLevelAlarmType_Comment_SourceTimestamp: 10087,\n NonExclusiveLevelAlarmType_ClientUserId: 10088,\n NonExclusiveLevelAlarmType_AddComment_InputArguments: 10092,\n NonExclusiveLevelAlarmType_ConditionRefresh_InputArguments: 10094,\n NonExclusiveLevelAlarmType_AckedState: 10095,\n NonExclusiveLevelAlarmType_AckedState_Id: 10096,\n NonExclusiveLevelAlarmType_AckedState_Name: 10097,\n NonExclusiveLevelAlarmType_AckedState_Number: 10098,\n NonExclusiveLevelAlarmType_AckedState_EffectiveDisplayName: 10099,\n NonExclusiveLevelAlarmType_AckedState_TransitionTime: 10100,\n NonExclusiveLevelAlarmType_AckedState_EffectiveTransitionTime: 10101,\n NonExclusiveLevelAlarmType_AckedState_TrueState: 10102,\n NonExclusiveLevelAlarmType_AckedState_FalseState: 10103,\n NonExclusiveLevelAlarmType_ConfirmedState: 10104,\n NonExclusiveLevelAlarmType_ConfirmedState_Id: 10105,\n NonExclusiveLevelAlarmType_ConfirmedState_Name: 10106,\n NonExclusiveLevelAlarmType_ConfirmedState_Number: 10107,\n NonExclusiveLevelAlarmType_ConfirmedState_EffectiveDisplayName: 10108,\n NonExclusiveLevelAlarmType_ConfirmedState_TransitionTime: 10109,\n NonExclusiveLevelAlarmType_ConfirmedState_EffectiveTransitionTime: 10110,\n NonExclusiveLevelAlarmType_ConfirmedState_TrueState: 10111,\n NonExclusiveLevelAlarmType_ConfirmedState_FalseState: 10112,\n NonExclusiveLevelAlarmType_Acknowledge_InputArguments: 10114,\n NonExclusiveLevelAlarmType_Confirm_InputArguments: 10116,\n NonExclusiveLevelAlarmType_ActiveState: 10117,\n NonExclusiveLevelAlarmType_ActiveState_Id: 10118,\n NonExclusiveLevelAlarmType_ActiveState_Name: 10119,\n NonExclusiveLevelAlarmType_ActiveState_Number: 10120,\n NonExclusiveLevelAlarmType_ActiveState_EffectiveDisplayName: 10121,\n NonExclusiveLevelAlarmType_ActiveState_TransitionTime: 10122,\n NonExclusiveLevelAlarmType_ActiveState_EffectiveTransitionTime: 10123,\n NonExclusiveLevelAlarmType_ActiveState_TrueState: 10124,\n NonExclusiveLevelAlarmType_ActiveState_FalseState: 10125,\n NonExclusiveLevelAlarmType_SuppressedState: 10126,\n NonExclusiveLevelAlarmType_SuppressedState_Id: 10127,\n NonExclusiveLevelAlarmType_SuppressedState_Name: 10128,\n NonExclusiveLevelAlarmType_SuppressedState_Number: 10129,\n NonExclusiveLevelAlarmType_SuppressedState_EffectiveDisplayName: 10130,\n NonExclusiveLevelAlarmType_SuppressedState_TransitionTime: 10131,\n NonExclusiveLevelAlarmType_SuppressedState_EffectiveTransitionTime: 10132,\n NonExclusiveLevelAlarmType_SuppressedState_TrueState: 10133,\n NonExclusiveLevelAlarmType_SuppressedState_FalseState: 10134,\n NonExclusiveLevelAlarmType_ShelvingState_CurrentState: 10136,\n NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Id: 10137,\n NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Name: 10138,\n NonExclusiveLevelAlarmType_ShelvingState_CurrentState_Number: 10139,\n NonExclusiveLevelAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 10140,\n NonExclusiveLevelAlarmType_ShelvingState_LastTransition: 10141,\n NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Id: 10142,\n NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Name: 10143,\n NonExclusiveLevelAlarmType_ShelvingState_LastTransition_Number: 10144,\n NonExclusiveLevelAlarmType_ShelvingState_LastTransition_TransitionTime: 10145,\n NonExclusiveLevelAlarmType_ShelvingState_UnshelveTime: 10146,\n NonExclusiveLevelAlarmType_ShelvingState_TimedShelve_InputArguments: 10171,\n NonExclusiveLevelAlarmType_SuppressedOrShelved: 10172,\n NonExclusiveLevelAlarmType_MaxTimeShelved: 10173,\n NonExclusiveLevelAlarmType_HighHighState: 10174,\n NonExclusiveLevelAlarmType_HighHighState_Id: 10175,\n NonExclusiveLevelAlarmType_HighHighState_Name: 10176,\n NonExclusiveLevelAlarmType_HighHighState_Number: 10177,\n NonExclusiveLevelAlarmType_HighHighState_EffectiveDisplayName: 10178,\n NonExclusiveLevelAlarmType_HighHighState_TransitionTime: 10179,\n NonExclusiveLevelAlarmType_HighHighState_EffectiveTransitionTime: 10180,\n NonExclusiveLevelAlarmType_HighHighState_TrueState: 10181,\n NonExclusiveLevelAlarmType_HighHighState_FalseState: 10182,\n NonExclusiveLevelAlarmType_HighState: 10183,\n NonExclusiveLevelAlarmType_HighState_Id: 10184,\n NonExclusiveLevelAlarmType_HighState_Name: 10185,\n NonExclusiveLevelAlarmType_HighState_Number: 10186,\n NonExclusiveLevelAlarmType_HighState_EffectiveDisplayName: 10187,\n NonExclusiveLevelAlarmType_HighState_TransitionTime: 10188,\n NonExclusiveLevelAlarmType_HighState_EffectiveTransitionTime: 10189,\n NonExclusiveLevelAlarmType_HighState_TrueState: 10190,\n NonExclusiveLevelAlarmType_HighState_FalseState: 10191,\n NonExclusiveLevelAlarmType_LowState: 10192,\n NonExclusiveLevelAlarmType_LowState_Id: 10193,\n NonExclusiveLevelAlarmType_LowState_Name: 10194,\n NonExclusiveLevelAlarmType_LowState_Number: 10195,\n NonExclusiveLevelAlarmType_LowState_EffectiveDisplayName: 10196,\n NonExclusiveLevelAlarmType_LowState_TransitionTime: 10197,\n NonExclusiveLevelAlarmType_LowState_EffectiveTransitionTime: 10198,\n NonExclusiveLevelAlarmType_LowState_TrueState: 10199,\n NonExclusiveLevelAlarmType_LowState_FalseState: 10200,\n NonExclusiveLevelAlarmType_LowLowState: 10201,\n NonExclusiveLevelAlarmType_LowLowState_Id: 10202,\n NonExclusiveLevelAlarmType_LowLowState_Name: 10203,\n NonExclusiveLevelAlarmType_LowLowState_Number: 10204,\n NonExclusiveLevelAlarmType_LowLowState_EffectiveDisplayName: 10205,\n NonExclusiveLevelAlarmType_LowLowState_TransitionTime: 10206,\n NonExclusiveLevelAlarmType_LowLowState_EffectiveTransitionTime: 10207,\n NonExclusiveLevelAlarmType_LowLowState_TrueState: 10208,\n NonExclusiveLevelAlarmType_LowLowState_FalseState: 10209,\n NonExclusiveLevelAlarmType_HighHighLimit: 10210,\n NonExclusiveLevelAlarmType_HighLimit: 10211,\n NonExclusiveLevelAlarmType_LowLimit: 10212,\n NonExclusiveLevelAlarmType_LowLowLimit: 10213,\n NonExclusiveRateOfChangeAlarmType_EventId: 10215,\n NonExclusiveRateOfChangeAlarmType_EventType: 10216,\n NonExclusiveRateOfChangeAlarmType_SourceNode: 10217,\n NonExclusiveRateOfChangeAlarmType_SourceName: 10218,\n NonExclusiveRateOfChangeAlarmType_Time: 10219,\n NonExclusiveRateOfChangeAlarmType_ReceiveTime: 10220,\n NonExclusiveRateOfChangeAlarmType_LocalTime: 10221,\n NonExclusiveRateOfChangeAlarmType_Message: 10222,\n NonExclusiveRateOfChangeAlarmType_Severity: 10223,\n NonExclusiveRateOfChangeAlarmType_ConditionName: 10224,\n NonExclusiveRateOfChangeAlarmType_BranchId: 10225,\n NonExclusiveRateOfChangeAlarmType_Retain: 10226,\n NonExclusiveRateOfChangeAlarmType_EnabledState: 10227,\n NonExclusiveRateOfChangeAlarmType_EnabledState_Id: 10228,\n NonExclusiveRateOfChangeAlarmType_EnabledState_Name: 10229,\n NonExclusiveRateOfChangeAlarmType_EnabledState_Number: 10230,\n NonExclusiveRateOfChangeAlarmType_EnabledState_EffectiveDisplayName: 10231,\n NonExclusiveRateOfChangeAlarmType_EnabledState_TransitionTime: 10232,\n NonExclusiveRateOfChangeAlarmType_EnabledState_EffectiveTransitionTime: 10233,\n NonExclusiveRateOfChangeAlarmType_EnabledState_TrueState: 10234,\n NonExclusiveRateOfChangeAlarmType_EnabledState_FalseState: 10235,\n NonExclusiveRateOfChangeAlarmType_Quality: 10236,\n NonExclusiveRateOfChangeAlarmType_Quality_SourceTimestamp: 10237,\n NonExclusiveRateOfChangeAlarmType_LastSeverity: 10238,\n NonExclusiveRateOfChangeAlarmType_LastSeverity_SourceTimestamp: 10239,\n NonExclusiveRateOfChangeAlarmType_Comment: 10240,\n NonExclusiveRateOfChangeAlarmType_Comment_SourceTimestamp: 10241,\n NonExclusiveRateOfChangeAlarmType_ClientUserId: 10242,\n NonExclusiveRateOfChangeAlarmType_AddComment_InputArguments: 10246,\n NonExclusiveRateOfChangeAlarmType_ConditionRefresh_InputArguments: 10248,\n NonExclusiveRateOfChangeAlarmType_AckedState: 10249,\n NonExclusiveRateOfChangeAlarmType_AckedState_Id: 10250,\n NonExclusiveRateOfChangeAlarmType_AckedState_Name: 10251,\n NonExclusiveRateOfChangeAlarmType_AckedState_Number: 10252,\n NonExclusiveRateOfChangeAlarmType_AckedState_EffectiveDisplayName: 10253,\n NonExclusiveRateOfChangeAlarmType_AckedState_TransitionTime: 10254,\n NonExclusiveRateOfChangeAlarmType_AckedState_EffectiveTransitionTime: 10255,\n NonExclusiveRateOfChangeAlarmType_AckedState_TrueState: 10256,\n NonExclusiveRateOfChangeAlarmType_AckedState_FalseState: 10257,\n NonExclusiveRateOfChangeAlarmType_ConfirmedState: 10258,\n NonExclusiveRateOfChangeAlarmType_ConfirmedState_Id: 10259,\n NonExclusiveRateOfChangeAlarmType_ConfirmedState_Name: 10260,\n NonExclusiveRateOfChangeAlarmType_ConfirmedState_Number: 10261,\n NonExclusiveRateOfChangeAlarmType_ConfirmedState_EffectiveDisplayName: 10262,\n NonExclusiveRateOfChangeAlarmType_ConfirmedState_TransitionTime: 10263,\n NonExclusiveRateOfChangeAlarmType_ConfirmedState_EffectiveTransitionTime: 10264,\n NonExclusiveRateOfChangeAlarmType_ConfirmedState_TrueState: 10265,\n NonExclusiveRateOfChangeAlarmType_ConfirmedState_FalseState: 10266,\n NonExclusiveRateOfChangeAlarmType_Acknowledge_InputArguments: 10268,\n NonExclusiveRateOfChangeAlarmType_Confirm_InputArguments: 10270,\n NonExclusiveRateOfChangeAlarmType_ActiveState: 10271,\n NonExclusiveRateOfChangeAlarmType_ActiveState_Id: 10272,\n NonExclusiveRateOfChangeAlarmType_ActiveState_Name: 10273,\n NonExclusiveRateOfChangeAlarmType_ActiveState_Number: 10274,\n NonExclusiveRateOfChangeAlarmType_ActiveState_EffectiveDisplayName: 10275,\n NonExclusiveRateOfChangeAlarmType_ActiveState_TransitionTime: 10276,\n NonExclusiveRateOfChangeAlarmType_ActiveState_EffectiveTransitionTime: 10277,\n NonExclusiveRateOfChangeAlarmType_ActiveState_TrueState: 10278,\n NonExclusiveRateOfChangeAlarmType_ActiveState_FalseState: 10279,\n NonExclusiveRateOfChangeAlarmType_SuppressedState: 10280,\n NonExclusiveRateOfChangeAlarmType_SuppressedState_Id: 10281,\n NonExclusiveRateOfChangeAlarmType_SuppressedState_Name: 10282,\n NonExclusiveRateOfChangeAlarmType_SuppressedState_Number: 10283,\n NonExclusiveRateOfChangeAlarmType_SuppressedState_EffectiveDisplayName: 10284,\n NonExclusiveRateOfChangeAlarmType_SuppressedState_TransitionTime: 10285,\n NonExclusiveRateOfChangeAlarmType_SuppressedState_EffectiveTransitionTime: 10286,\n NonExclusiveRateOfChangeAlarmType_SuppressedState_TrueState: 10287,\n NonExclusiveRateOfChangeAlarmType_SuppressedState_FalseState: 10288,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState: 10290,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Id: 10291,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Name: 10292,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_Number: 10293,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 10294,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition: 10295,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Id: 10296,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Name: 10297,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_Number: 10298,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_TransitionTime: 10299,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_UnshelveTime: 10300,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve_InputArguments: 10325,\n NonExclusiveRateOfChangeAlarmType_SuppressedOrShelved: 10326,\n NonExclusiveRateOfChangeAlarmType_MaxTimeShelved: 10327,\n NonExclusiveRateOfChangeAlarmType_HighHighState: 10328,\n NonExclusiveRateOfChangeAlarmType_HighHighState_Id: 10329,\n NonExclusiveRateOfChangeAlarmType_HighHighState_Name: 10330,\n NonExclusiveRateOfChangeAlarmType_HighHighState_Number: 10331,\n NonExclusiveRateOfChangeAlarmType_HighHighState_EffectiveDisplayName: 10332,\n NonExclusiveRateOfChangeAlarmType_HighHighState_TransitionTime: 10333,\n NonExclusiveRateOfChangeAlarmType_HighHighState_EffectiveTransitionTime: 10334,\n NonExclusiveRateOfChangeAlarmType_HighHighState_TrueState: 10335,\n NonExclusiveRateOfChangeAlarmType_HighHighState_FalseState: 10336,\n NonExclusiveRateOfChangeAlarmType_HighState: 10337,\n NonExclusiveRateOfChangeAlarmType_HighState_Id: 10338,\n NonExclusiveRateOfChangeAlarmType_HighState_Name: 10339,\n NonExclusiveRateOfChangeAlarmType_HighState_Number: 10340,\n NonExclusiveRateOfChangeAlarmType_HighState_EffectiveDisplayName: 10341,\n NonExclusiveRateOfChangeAlarmType_HighState_TransitionTime: 10342,\n NonExclusiveRateOfChangeAlarmType_HighState_EffectiveTransitionTime: 10343,\n NonExclusiveRateOfChangeAlarmType_HighState_TrueState: 10344,\n NonExclusiveRateOfChangeAlarmType_HighState_FalseState: 10345,\n NonExclusiveRateOfChangeAlarmType_LowState: 10346,\n NonExclusiveRateOfChangeAlarmType_LowState_Id: 10347,\n NonExclusiveRateOfChangeAlarmType_LowState_Name: 10348,\n NonExclusiveRateOfChangeAlarmType_LowState_Number: 10349,\n NonExclusiveRateOfChangeAlarmType_LowState_EffectiveDisplayName: 10350,\n NonExclusiveRateOfChangeAlarmType_LowState_TransitionTime: 10351,\n NonExclusiveRateOfChangeAlarmType_LowState_EffectiveTransitionTime: 10352,\n NonExclusiveRateOfChangeAlarmType_LowState_TrueState: 10353,\n NonExclusiveRateOfChangeAlarmType_LowState_FalseState: 10354,\n NonExclusiveRateOfChangeAlarmType_LowLowState: 10355,\n NonExclusiveRateOfChangeAlarmType_LowLowState_Id: 10356,\n NonExclusiveRateOfChangeAlarmType_LowLowState_Name: 10357,\n NonExclusiveRateOfChangeAlarmType_LowLowState_Number: 10358,\n NonExclusiveRateOfChangeAlarmType_LowLowState_EffectiveDisplayName: 10359,\n NonExclusiveRateOfChangeAlarmType_LowLowState_TransitionTime: 10360,\n NonExclusiveRateOfChangeAlarmType_LowLowState_EffectiveTransitionTime: 10361,\n NonExclusiveRateOfChangeAlarmType_LowLowState_TrueState: 10362,\n NonExclusiveRateOfChangeAlarmType_LowLowState_FalseState: 10363,\n NonExclusiveRateOfChangeAlarmType_HighHighLimit: 10364,\n NonExclusiveRateOfChangeAlarmType_HighLimit: 10365,\n NonExclusiveRateOfChangeAlarmType_LowLimit: 10366,\n NonExclusiveRateOfChangeAlarmType_LowLowLimit: 10367,\n NonExclusiveDeviationAlarmType_EventId: 10369,\n NonExclusiveDeviationAlarmType_EventType: 10370,\n NonExclusiveDeviationAlarmType_SourceNode: 10371,\n NonExclusiveDeviationAlarmType_SourceName: 10372,\n NonExclusiveDeviationAlarmType_Time: 10373,\n NonExclusiveDeviationAlarmType_ReceiveTime: 10374,\n NonExclusiveDeviationAlarmType_LocalTime: 10375,\n NonExclusiveDeviationAlarmType_Message: 10376,\n NonExclusiveDeviationAlarmType_Severity: 10377,\n NonExclusiveDeviationAlarmType_ConditionName: 10378,\n NonExclusiveDeviationAlarmType_BranchId: 10379,\n NonExclusiveDeviationAlarmType_Retain: 10380,\n NonExclusiveDeviationAlarmType_EnabledState: 10381,\n NonExclusiveDeviationAlarmType_EnabledState_Id: 10382,\n NonExclusiveDeviationAlarmType_EnabledState_Name: 10383,\n NonExclusiveDeviationAlarmType_EnabledState_Number: 10384,\n NonExclusiveDeviationAlarmType_EnabledState_EffectiveDisplayName: 10385,\n NonExclusiveDeviationAlarmType_EnabledState_TransitionTime: 10386,\n NonExclusiveDeviationAlarmType_EnabledState_EffectiveTransitionTime: 10387,\n NonExclusiveDeviationAlarmType_EnabledState_TrueState: 10388,\n NonExclusiveDeviationAlarmType_EnabledState_FalseState: 10389,\n NonExclusiveDeviationAlarmType_Quality: 10390,\n NonExclusiveDeviationAlarmType_Quality_SourceTimestamp: 10391,\n NonExclusiveDeviationAlarmType_LastSeverity: 10392,\n NonExclusiveDeviationAlarmType_LastSeverity_SourceTimestamp: 10393,\n NonExclusiveDeviationAlarmType_Comment: 10394,\n NonExclusiveDeviationAlarmType_Comment_SourceTimestamp: 10395,\n NonExclusiveDeviationAlarmType_ClientUserId: 10396,\n NonExclusiveDeviationAlarmType_AddComment_InputArguments: 10400,\n NonExclusiveDeviationAlarmType_ConditionRefresh_InputArguments: 10402,\n NonExclusiveDeviationAlarmType_AckedState: 10403,\n NonExclusiveDeviationAlarmType_AckedState_Id: 10404,\n NonExclusiveDeviationAlarmType_AckedState_Name: 10405,\n NonExclusiveDeviationAlarmType_AckedState_Number: 10406,\n NonExclusiveDeviationAlarmType_AckedState_EffectiveDisplayName: 10407,\n NonExclusiveDeviationAlarmType_AckedState_TransitionTime: 10408,\n NonExclusiveDeviationAlarmType_AckedState_EffectiveTransitionTime: 10409,\n NonExclusiveDeviationAlarmType_AckedState_TrueState: 10410,\n NonExclusiveDeviationAlarmType_AckedState_FalseState: 10411,\n NonExclusiveDeviationAlarmType_ConfirmedState: 10412,\n NonExclusiveDeviationAlarmType_ConfirmedState_Id: 10413,\n NonExclusiveDeviationAlarmType_ConfirmedState_Name: 10414,\n NonExclusiveDeviationAlarmType_ConfirmedState_Number: 10415,\n NonExclusiveDeviationAlarmType_ConfirmedState_EffectiveDisplayName: 10416,\n NonExclusiveDeviationAlarmType_ConfirmedState_TransitionTime: 10417,\n NonExclusiveDeviationAlarmType_ConfirmedState_EffectiveTransitionTime: 10418,\n NonExclusiveDeviationAlarmType_ConfirmedState_TrueState: 10419,\n NonExclusiveDeviationAlarmType_ConfirmedState_FalseState: 10420,\n NonExclusiveDeviationAlarmType_Acknowledge_InputArguments: 10422,\n NonExclusiveDeviationAlarmType_Confirm_InputArguments: 10424,\n NonExclusiveDeviationAlarmType_ActiveState: 10425,\n NonExclusiveDeviationAlarmType_ActiveState_Id: 10426,\n NonExclusiveDeviationAlarmType_ActiveState_Name: 10427,\n NonExclusiveDeviationAlarmType_ActiveState_Number: 10428,\n NonExclusiveDeviationAlarmType_ActiveState_EffectiveDisplayName: 10429,\n NonExclusiveDeviationAlarmType_ActiveState_TransitionTime: 10430,\n NonExclusiveDeviationAlarmType_ActiveState_EffectiveTransitionTime: 10431,\n NonExclusiveDeviationAlarmType_ActiveState_TrueState: 10432,\n NonExclusiveDeviationAlarmType_ActiveState_FalseState: 10433,\n NonExclusiveDeviationAlarmType_SuppressedState: 10434,\n NonExclusiveDeviationAlarmType_SuppressedState_Id: 10435,\n NonExclusiveDeviationAlarmType_SuppressedState_Name: 10436,\n NonExclusiveDeviationAlarmType_SuppressedState_Number: 10437,\n NonExclusiveDeviationAlarmType_SuppressedState_EffectiveDisplayName: 10438,\n NonExclusiveDeviationAlarmType_SuppressedState_TransitionTime: 10439,\n NonExclusiveDeviationAlarmType_SuppressedState_EffectiveTransitionTime: 10440,\n NonExclusiveDeviationAlarmType_SuppressedState_TrueState: 10441,\n NonExclusiveDeviationAlarmType_SuppressedState_FalseState: 10442,\n NonExclusiveDeviationAlarmType_ShelvingState_CurrentState: 10444,\n NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Id: 10445,\n NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Name: 10446,\n NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_Number: 10447,\n NonExclusiveDeviationAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 10448,\n NonExclusiveDeviationAlarmType_ShelvingState_LastTransition: 10449,\n NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Id: 10450,\n NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Name: 10451,\n NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_Number: 10452,\n NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_TransitionTime: 10453,\n NonExclusiveDeviationAlarmType_ShelvingState_UnshelveTime: 10454,\n NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve_InputArguments: 10479,\n NonExclusiveDeviationAlarmType_SuppressedOrShelved: 10480,\n NonExclusiveDeviationAlarmType_MaxTimeShelved: 10481,\n NonExclusiveDeviationAlarmType_HighHighState: 10482,\n NonExclusiveDeviationAlarmType_HighHighState_Id: 10483,\n NonExclusiveDeviationAlarmType_HighHighState_Name: 10484,\n NonExclusiveDeviationAlarmType_HighHighState_Number: 10485,\n NonExclusiveDeviationAlarmType_HighHighState_EffectiveDisplayName: 10486,\n NonExclusiveDeviationAlarmType_HighHighState_TransitionTime: 10487,\n NonExclusiveDeviationAlarmType_HighHighState_EffectiveTransitionTime: 10488,\n NonExclusiveDeviationAlarmType_HighHighState_TrueState: 10489,\n NonExclusiveDeviationAlarmType_HighHighState_FalseState: 10490,\n NonExclusiveDeviationAlarmType_HighState: 10491,\n NonExclusiveDeviationAlarmType_HighState_Id: 10492,\n NonExclusiveDeviationAlarmType_HighState_Name: 10493,\n NonExclusiveDeviationAlarmType_HighState_Number: 10494,\n NonExclusiveDeviationAlarmType_HighState_EffectiveDisplayName: 10495,\n NonExclusiveDeviationAlarmType_HighState_TransitionTime: 10496,\n NonExclusiveDeviationAlarmType_HighState_EffectiveTransitionTime: 10497,\n NonExclusiveDeviationAlarmType_HighState_TrueState: 10498,\n NonExclusiveDeviationAlarmType_HighState_FalseState: 10499,\n NonExclusiveDeviationAlarmType_LowState: 10500,\n NonExclusiveDeviationAlarmType_LowState_Id: 10501,\n NonExclusiveDeviationAlarmType_LowState_Name: 10502,\n NonExclusiveDeviationAlarmType_LowState_Number: 10503,\n NonExclusiveDeviationAlarmType_LowState_EffectiveDisplayName: 10504,\n NonExclusiveDeviationAlarmType_LowState_TransitionTime: 10505,\n NonExclusiveDeviationAlarmType_LowState_EffectiveTransitionTime: 10506,\n NonExclusiveDeviationAlarmType_LowState_TrueState: 10507,\n NonExclusiveDeviationAlarmType_LowState_FalseState: 10508,\n NonExclusiveDeviationAlarmType_LowLowState: 10509,\n NonExclusiveDeviationAlarmType_LowLowState_Id: 10510,\n NonExclusiveDeviationAlarmType_LowLowState_Name: 10511,\n NonExclusiveDeviationAlarmType_LowLowState_Number: 10512,\n NonExclusiveDeviationAlarmType_LowLowState_EffectiveDisplayName: 10513,\n NonExclusiveDeviationAlarmType_LowLowState_TransitionTime: 10514,\n NonExclusiveDeviationAlarmType_LowLowState_EffectiveTransitionTime: 10515,\n NonExclusiveDeviationAlarmType_LowLowState_TrueState: 10516,\n NonExclusiveDeviationAlarmType_LowLowState_FalseState: 10517,\n NonExclusiveDeviationAlarmType_HighHighLimit: 10518,\n NonExclusiveDeviationAlarmType_HighLimit: 10519,\n NonExclusiveDeviationAlarmType_LowLimit: 10520,\n NonExclusiveDeviationAlarmType_LowLowLimit: 10521,\n NonExclusiveDeviationAlarmType_SetpointNode: 10522,\n DiscreteAlarmType_EventId: 10524,\n DiscreteAlarmType_EventType: 10525,\n DiscreteAlarmType_SourceNode: 10526,\n DiscreteAlarmType_SourceName: 10527,\n DiscreteAlarmType_Time: 10528,\n DiscreteAlarmType_ReceiveTime: 10529,\n DiscreteAlarmType_LocalTime: 10530,\n DiscreteAlarmType_Message: 10531,\n DiscreteAlarmType_Severity: 10532,\n DiscreteAlarmType_ConditionName: 10533,\n DiscreteAlarmType_BranchId: 10534,\n DiscreteAlarmType_Retain: 10535,\n DiscreteAlarmType_EnabledState: 10536,\n DiscreteAlarmType_EnabledState_Id: 10537,\n DiscreteAlarmType_EnabledState_Name: 10538,\n DiscreteAlarmType_EnabledState_Number: 10539,\n DiscreteAlarmType_EnabledState_EffectiveDisplayName: 10540,\n DiscreteAlarmType_EnabledState_TransitionTime: 10541,\n DiscreteAlarmType_EnabledState_EffectiveTransitionTime: 10542,\n DiscreteAlarmType_EnabledState_TrueState: 10543,\n DiscreteAlarmType_EnabledState_FalseState: 10544,\n DiscreteAlarmType_Quality: 10545,\n DiscreteAlarmType_Quality_SourceTimestamp: 10546,\n DiscreteAlarmType_LastSeverity: 10547,\n DiscreteAlarmType_LastSeverity_SourceTimestamp: 10548,\n DiscreteAlarmType_Comment: 10549,\n DiscreteAlarmType_Comment_SourceTimestamp: 10550,\n DiscreteAlarmType_ClientUserId: 10551,\n DiscreteAlarmType_AddComment_InputArguments: 10555,\n DiscreteAlarmType_ConditionRefresh_InputArguments: 10557,\n DiscreteAlarmType_AckedState: 10558,\n DiscreteAlarmType_AckedState_Id: 10559,\n DiscreteAlarmType_AckedState_Name: 10560,\n DiscreteAlarmType_AckedState_Number: 10561,\n DiscreteAlarmType_AckedState_EffectiveDisplayName: 10562,\n DiscreteAlarmType_AckedState_TransitionTime: 10563,\n DiscreteAlarmType_AckedState_EffectiveTransitionTime: 10564,\n DiscreteAlarmType_AckedState_TrueState: 10565,\n DiscreteAlarmType_AckedState_FalseState: 10566,\n DiscreteAlarmType_ConfirmedState: 10567,\n DiscreteAlarmType_ConfirmedState_Id: 10568,\n DiscreteAlarmType_ConfirmedState_Name: 10569,\n DiscreteAlarmType_ConfirmedState_Number: 10570,\n DiscreteAlarmType_ConfirmedState_EffectiveDisplayName: 10571,\n DiscreteAlarmType_ConfirmedState_TransitionTime: 10572,\n DiscreteAlarmType_ConfirmedState_EffectiveTransitionTime: 10573,\n DiscreteAlarmType_ConfirmedState_TrueState: 10574,\n DiscreteAlarmType_ConfirmedState_FalseState: 10575,\n DiscreteAlarmType_Acknowledge_InputArguments: 10577,\n DiscreteAlarmType_Confirm_InputArguments: 10579,\n DiscreteAlarmType_ActiveState: 10580,\n DiscreteAlarmType_ActiveState_Id: 10581,\n DiscreteAlarmType_ActiveState_Name: 10582,\n DiscreteAlarmType_ActiveState_Number: 10583,\n DiscreteAlarmType_ActiveState_EffectiveDisplayName: 10584,\n DiscreteAlarmType_ActiveState_TransitionTime: 10585,\n DiscreteAlarmType_ActiveState_EffectiveTransitionTime: 10586,\n DiscreteAlarmType_ActiveState_TrueState: 10587,\n DiscreteAlarmType_ActiveState_FalseState: 10588,\n DiscreteAlarmType_SuppressedState: 10589,\n DiscreteAlarmType_SuppressedState_Id: 10590,\n DiscreteAlarmType_SuppressedState_Name: 10591,\n DiscreteAlarmType_SuppressedState_Number: 10592,\n DiscreteAlarmType_SuppressedState_EffectiveDisplayName: 10593,\n DiscreteAlarmType_SuppressedState_TransitionTime: 10594,\n DiscreteAlarmType_SuppressedState_EffectiveTransitionTime: 10595,\n DiscreteAlarmType_SuppressedState_TrueState: 10596,\n DiscreteAlarmType_SuppressedState_FalseState: 10597,\n DiscreteAlarmType_ShelvingState_CurrentState: 10599,\n DiscreteAlarmType_ShelvingState_CurrentState_Id: 10600,\n DiscreteAlarmType_ShelvingState_CurrentState_Name: 10601,\n DiscreteAlarmType_ShelvingState_CurrentState_Number: 10602,\n DiscreteAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 10603,\n DiscreteAlarmType_ShelvingState_LastTransition: 10604,\n DiscreteAlarmType_ShelvingState_LastTransition_Id: 10605,\n DiscreteAlarmType_ShelvingState_LastTransition_Name: 10606,\n DiscreteAlarmType_ShelvingState_LastTransition_Number: 10607,\n DiscreteAlarmType_ShelvingState_LastTransition_TransitionTime: 10608,\n DiscreteAlarmType_ShelvingState_UnshelveTime: 10609,\n DiscreteAlarmType_ShelvingState_TimedShelve_InputArguments: 10634,\n DiscreteAlarmType_SuppressedOrShelved: 10635,\n DiscreteAlarmType_MaxTimeShelved: 10636,\n OffNormalAlarmType_EventId: 10638,\n OffNormalAlarmType_EventType: 10639,\n OffNormalAlarmType_SourceNode: 10640,\n OffNormalAlarmType_SourceName: 10641,\n OffNormalAlarmType_Time: 10642,\n OffNormalAlarmType_ReceiveTime: 10643,\n OffNormalAlarmType_LocalTime: 10644,\n OffNormalAlarmType_Message: 10645,\n OffNormalAlarmType_Severity: 10646,\n OffNormalAlarmType_ConditionName: 10647,\n OffNormalAlarmType_BranchId: 10648,\n OffNormalAlarmType_Retain: 10649,\n OffNormalAlarmType_EnabledState: 10650,\n OffNormalAlarmType_EnabledState_Id: 10651,\n OffNormalAlarmType_EnabledState_Name: 10652,\n OffNormalAlarmType_EnabledState_Number: 10653,\n OffNormalAlarmType_EnabledState_EffectiveDisplayName: 10654,\n OffNormalAlarmType_EnabledState_TransitionTime: 10655,\n OffNormalAlarmType_EnabledState_EffectiveTransitionTime: 10656,\n OffNormalAlarmType_EnabledState_TrueState: 10657,\n OffNormalAlarmType_EnabledState_FalseState: 10658,\n OffNormalAlarmType_Quality: 10659,\n OffNormalAlarmType_Quality_SourceTimestamp: 10660,\n OffNormalAlarmType_LastSeverity: 10661,\n OffNormalAlarmType_LastSeverity_SourceTimestamp: 10662,\n OffNormalAlarmType_Comment: 10663,\n OffNormalAlarmType_Comment_SourceTimestamp: 10664,\n OffNormalAlarmType_ClientUserId: 10665,\n OffNormalAlarmType_AddComment_InputArguments: 10669,\n OffNormalAlarmType_ConditionRefresh_InputArguments: 10671,\n OffNormalAlarmType_AckedState: 10672,\n OffNormalAlarmType_AckedState_Id: 10673,\n OffNormalAlarmType_AckedState_Name: 10674,\n OffNormalAlarmType_AckedState_Number: 10675,\n OffNormalAlarmType_AckedState_EffectiveDisplayName: 10676,\n OffNormalAlarmType_AckedState_TransitionTime: 10677,\n OffNormalAlarmType_AckedState_EffectiveTransitionTime: 10678,\n OffNormalAlarmType_AckedState_TrueState: 10679,\n OffNormalAlarmType_AckedState_FalseState: 10680,\n OffNormalAlarmType_ConfirmedState: 10681,\n OffNormalAlarmType_ConfirmedState_Id: 10682,\n OffNormalAlarmType_ConfirmedState_Name: 10683,\n OffNormalAlarmType_ConfirmedState_Number: 10684,\n OffNormalAlarmType_ConfirmedState_EffectiveDisplayName: 10685,\n OffNormalAlarmType_ConfirmedState_TransitionTime: 10686,\n OffNormalAlarmType_ConfirmedState_EffectiveTransitionTime: 10687,\n OffNormalAlarmType_ConfirmedState_TrueState: 10688,\n OffNormalAlarmType_ConfirmedState_FalseState: 10689,\n OffNormalAlarmType_Acknowledge_InputArguments: 10691,\n OffNormalAlarmType_Confirm_InputArguments: 10693,\n OffNormalAlarmType_ActiveState: 10694,\n OffNormalAlarmType_ActiveState_Id: 10695,\n OffNormalAlarmType_ActiveState_Name: 10696,\n OffNormalAlarmType_ActiveState_Number: 10697,\n OffNormalAlarmType_ActiveState_EffectiveDisplayName: 10698,\n OffNormalAlarmType_ActiveState_TransitionTime: 10699,\n OffNormalAlarmType_ActiveState_EffectiveTransitionTime: 10700,\n OffNormalAlarmType_ActiveState_TrueState: 10701,\n OffNormalAlarmType_ActiveState_FalseState: 10702,\n OffNormalAlarmType_SuppressedState: 10703,\n OffNormalAlarmType_SuppressedState_Id: 10704,\n OffNormalAlarmType_SuppressedState_Name: 10705,\n OffNormalAlarmType_SuppressedState_Number: 10706,\n OffNormalAlarmType_SuppressedState_EffectiveDisplayName: 10707,\n OffNormalAlarmType_SuppressedState_TransitionTime: 10708,\n OffNormalAlarmType_SuppressedState_EffectiveTransitionTime: 10709,\n OffNormalAlarmType_SuppressedState_TrueState: 10710,\n OffNormalAlarmType_SuppressedState_FalseState: 10711,\n OffNormalAlarmType_ShelvingState_CurrentState: 10713,\n OffNormalAlarmType_ShelvingState_CurrentState_Id: 10714,\n OffNormalAlarmType_ShelvingState_CurrentState_Name: 10715,\n OffNormalAlarmType_ShelvingState_CurrentState_Number: 10716,\n OffNormalAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 10717,\n OffNormalAlarmType_ShelvingState_LastTransition: 10718,\n OffNormalAlarmType_ShelvingState_LastTransition_Id: 10719,\n OffNormalAlarmType_ShelvingState_LastTransition_Name: 10720,\n OffNormalAlarmType_ShelvingState_LastTransition_Number: 10721,\n OffNormalAlarmType_ShelvingState_LastTransition_TransitionTime: 10722,\n OffNormalAlarmType_ShelvingState_UnshelveTime: 10723,\n OffNormalAlarmType_ShelvingState_TimedShelve_InputArguments: 10748,\n OffNormalAlarmType_SuppressedOrShelved: 10749,\n OffNormalAlarmType_MaxTimeShelved: 10750,\n TripAlarmType_EventId: 10752,\n TripAlarmType_EventType: 10753,\n TripAlarmType_SourceNode: 10754,\n TripAlarmType_SourceName: 10755,\n TripAlarmType_Time: 10756,\n TripAlarmType_ReceiveTime: 10757,\n TripAlarmType_LocalTime: 10758,\n TripAlarmType_Message: 10759,\n TripAlarmType_Severity: 10760,\n TripAlarmType_ConditionName: 10761,\n TripAlarmType_BranchId: 10762,\n TripAlarmType_Retain: 10763,\n TripAlarmType_EnabledState: 10764,\n TripAlarmType_EnabledState_Id: 10765,\n TripAlarmType_EnabledState_Name: 10766,\n TripAlarmType_EnabledState_Number: 10767,\n TripAlarmType_EnabledState_EffectiveDisplayName: 10768,\n TripAlarmType_EnabledState_TransitionTime: 10769,\n TripAlarmType_EnabledState_EffectiveTransitionTime: 10770,\n TripAlarmType_EnabledState_TrueState: 10771,\n TripAlarmType_EnabledState_FalseState: 10772,\n TripAlarmType_Quality: 10773,\n TripAlarmType_Quality_SourceTimestamp: 10774,\n TripAlarmType_LastSeverity: 10775,\n TripAlarmType_LastSeverity_SourceTimestamp: 10776,\n TripAlarmType_Comment: 10777,\n TripAlarmType_Comment_SourceTimestamp: 10778,\n TripAlarmType_ClientUserId: 10779,\n TripAlarmType_AddComment_InputArguments: 10783,\n TripAlarmType_ConditionRefresh_InputArguments: 10785,\n TripAlarmType_AckedState: 10786,\n TripAlarmType_AckedState_Id: 10787,\n TripAlarmType_AckedState_Name: 10788,\n TripAlarmType_AckedState_Number: 10789,\n TripAlarmType_AckedState_EffectiveDisplayName: 10790,\n TripAlarmType_AckedState_TransitionTime: 10791,\n TripAlarmType_AckedState_EffectiveTransitionTime: 10792,\n TripAlarmType_AckedState_TrueState: 10793,\n TripAlarmType_AckedState_FalseState: 10794,\n TripAlarmType_ConfirmedState: 10795,\n TripAlarmType_ConfirmedState_Id: 10796,\n TripAlarmType_ConfirmedState_Name: 10797,\n TripAlarmType_ConfirmedState_Number: 10798,\n TripAlarmType_ConfirmedState_EffectiveDisplayName: 10799,\n TripAlarmType_ConfirmedState_TransitionTime: 10800,\n TripAlarmType_ConfirmedState_EffectiveTransitionTime: 10801,\n TripAlarmType_ConfirmedState_TrueState: 10802,\n TripAlarmType_ConfirmedState_FalseState: 10803,\n TripAlarmType_Acknowledge_InputArguments: 10805,\n TripAlarmType_Confirm_InputArguments: 10807,\n TripAlarmType_ActiveState: 10808,\n TripAlarmType_ActiveState_Id: 10809,\n TripAlarmType_ActiveState_Name: 10810,\n TripAlarmType_ActiveState_Number: 10811,\n TripAlarmType_ActiveState_EffectiveDisplayName: 10812,\n TripAlarmType_ActiveState_TransitionTime: 10813,\n TripAlarmType_ActiveState_EffectiveTransitionTime: 10814,\n TripAlarmType_ActiveState_TrueState: 10815,\n TripAlarmType_ActiveState_FalseState: 10816,\n TripAlarmType_SuppressedState: 10817,\n TripAlarmType_SuppressedState_Id: 10818,\n TripAlarmType_SuppressedState_Name: 10819,\n TripAlarmType_SuppressedState_Number: 10820,\n TripAlarmType_SuppressedState_EffectiveDisplayName: 10821,\n TripAlarmType_SuppressedState_TransitionTime: 10822,\n TripAlarmType_SuppressedState_EffectiveTransitionTime: 10823,\n TripAlarmType_SuppressedState_TrueState: 10824,\n TripAlarmType_SuppressedState_FalseState: 10825,\n TripAlarmType_ShelvingState_CurrentState: 10827,\n TripAlarmType_ShelvingState_CurrentState_Id: 10828,\n TripAlarmType_ShelvingState_CurrentState_Name: 10829,\n TripAlarmType_ShelvingState_CurrentState_Number: 10830,\n TripAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 10831,\n TripAlarmType_ShelvingState_LastTransition: 10832,\n TripAlarmType_ShelvingState_LastTransition_Id: 10833,\n TripAlarmType_ShelvingState_LastTransition_Name: 10834,\n TripAlarmType_ShelvingState_LastTransition_Number: 10835,\n TripAlarmType_ShelvingState_LastTransition_TransitionTime: 10836,\n TripAlarmType_ShelvingState_UnshelveTime: 10837,\n TripAlarmType_ShelvingState_TimedShelve_InputArguments: 10862,\n TripAlarmType_SuppressedOrShelved: 10863,\n TripAlarmType_MaxTimeShelved: 10864,\n AuditConditionShelvingEventType_EventId: 11094,\n AuditConditionShelvingEventType_EventType: 11095,\n AuditConditionShelvingEventType_SourceNode: 11096,\n AuditConditionShelvingEventType_SourceName: 11097,\n AuditConditionShelvingEventType_Time: 11098,\n AuditConditionShelvingEventType_ReceiveTime: 11099,\n AuditConditionShelvingEventType_LocalTime: 11100,\n AuditConditionShelvingEventType_Message: 11101,\n AuditConditionShelvingEventType_Severity: 11102,\n AuditConditionShelvingEventType_ActionTimeStamp: 11103,\n AuditConditionShelvingEventType_Status: 11104,\n AuditConditionShelvingEventType_ServerId: 11105,\n AuditConditionShelvingEventType_ClientAuditEntryId: 11106,\n AuditConditionShelvingEventType_ClientUserId: 11107,\n AuditConditionShelvingEventType_MethodId: 11108,\n AuditConditionShelvingEventType_InputArguments: 11109,\n TwoStateVariableType_TrueState: 11110,\n TwoStateVariableType_FalseState: 11111,\n ConditionType_ConditionClassId: 11112,\n ConditionType_ConditionClassName: 11113,\n DialogConditionType_ConditionClassId: 11114,\n DialogConditionType_ConditionClassName: 11115,\n AcknowledgeableConditionType_ConditionClassId: 11116,\n AcknowledgeableConditionType_ConditionClassName: 11117,\n AlarmConditionType_ConditionClassId: 11118,\n AlarmConditionType_ConditionClassName: 11119,\n AlarmConditionType_InputNode: 11120,\n LimitAlarmType_ConditionClassId: 11121,\n LimitAlarmType_ConditionClassName: 11122,\n LimitAlarmType_InputNode: 11123,\n LimitAlarmType_HighHighLimit: 11124,\n LimitAlarmType_HighLimit: 11125,\n LimitAlarmType_LowLimit: 11126,\n LimitAlarmType_LowLowLimit: 11127,\n ExclusiveLimitAlarmType_ConditionClassId: 11128,\n ExclusiveLimitAlarmType_ConditionClassName: 11129,\n ExclusiveLimitAlarmType_InputNode: 11130,\n ExclusiveLevelAlarmType_ConditionClassId: 11131,\n ExclusiveLevelAlarmType_ConditionClassName: 11132,\n ExclusiveLevelAlarmType_InputNode: 11133,\n ExclusiveRateOfChangeAlarmType_ConditionClassId: 11134,\n ExclusiveRateOfChangeAlarmType_ConditionClassName: 11135,\n ExclusiveRateOfChangeAlarmType_InputNode: 11136,\n ExclusiveDeviationAlarmType_ConditionClassId: 11137,\n ExclusiveDeviationAlarmType_ConditionClassName: 11138,\n ExclusiveDeviationAlarmType_InputNode: 11139,\n NonExclusiveLimitAlarmType_ConditionClassId: 11140,\n NonExclusiveLimitAlarmType_ConditionClassName: 11141,\n NonExclusiveLimitAlarmType_InputNode: 11142,\n NonExclusiveLevelAlarmType_ConditionClassId: 11143,\n NonExclusiveLevelAlarmType_ConditionClassName: 11144,\n NonExclusiveLevelAlarmType_InputNode: 11145,\n NonExclusiveRateOfChangeAlarmType_ConditionClassId: 11146,\n NonExclusiveRateOfChangeAlarmType_ConditionClassName: 11147,\n NonExclusiveRateOfChangeAlarmType_InputNode: 11148,\n NonExclusiveDeviationAlarmType_ConditionClassId: 11149,\n NonExclusiveDeviationAlarmType_ConditionClassName: 11150,\n NonExclusiveDeviationAlarmType_InputNode: 11151,\n DiscreteAlarmType_ConditionClassId: 11152,\n DiscreteAlarmType_ConditionClassName: 11153,\n DiscreteAlarmType_InputNode: 11154,\n OffNormalAlarmType_ConditionClassId: 11155,\n OffNormalAlarmType_ConditionClassName: 11156,\n OffNormalAlarmType_InputNode: 11157,\n OffNormalAlarmType_NormalState: 11158,\n TripAlarmType_ConditionClassId: 11159,\n TripAlarmType_ConditionClassName: 11160,\n TripAlarmType_InputNode: 11161,\n TripAlarmType_NormalState: 11162,\n HistoricalDataConfigurationType_AggregateConfiguration_TreatUncertainAsBad: 11168,\n HistoricalDataConfigurationType_AggregateConfiguration_PercentDataBad: 11169,\n HistoricalDataConfigurationType_AggregateConfiguration_PercentDataGood: 11170,\n HistoricalDataConfigurationType_AggregateConfiguration_UseSlopedExtrapolation: 11171,\n AggregateConfigurationType_TreatUncertainAsBad: 11188,\n AggregateConfigurationType_PercentDataBad: 11189,\n AggregateConfigurationType_PercentDataGood: 11190,\n AggregateConfigurationType_UseSlopedExtrapolation: 11191,\n HistoryServerCapabilities_AccessHistoryDataCapability: 11193,\n HistoryServerCapabilities_InsertDataCapability: 11196,\n HistoryServerCapabilities_ReplaceDataCapability: 11197,\n HistoryServerCapabilities_UpdateDataCapability: 11198,\n HistoryServerCapabilities_DeleteRawCapability: 11199,\n HistoryServerCapabilities_DeleteAtTimeCapability: 11200,\n HAConfiguration_AggregateConfiguration_TreatUncertainAsBad: 11204,\n HAConfiguration_AggregateConfiguration_PercentDataBad: 11205,\n HAConfiguration_AggregateConfiguration_PercentDataGood: 11206,\n HAConfiguration_AggregateConfiguration_UseSlopedExtrapolation: 11207,\n HAConfiguration_Stepped: 11208,\n HAConfiguration_Definition: 11209,\n HAConfiguration_MaxTimeInterval: 11210,\n HAConfiguration_MinTimeInterval: 11211,\n HAConfiguration_ExceptionDeviation: 11212,\n HAConfiguration_ExceptionDeviationFormat: 11213,\n Annotations: 11214,\n HistoricalEventFilter: 11215,\n MultiStateValueDiscreteType_Definition: 11239,\n MultiStateValueDiscreteType_ValuePrecision: 11240,\n MultiStateValueDiscreteType_EnumValues: 11241,\n HistoryServerCapabilities_AccessHistoryEventsCapability: 11242,\n HistoryServerCapabilitiesType_MaxReturnDataValues: 11268,\n HistoryServerCapabilitiesType_MaxReturnEventValues: 11269,\n HistoryServerCapabilitiesType_InsertAnnotationCapability: 11270,\n HistoryServerCapabilities_MaxReturnDataValues: 11273,\n HistoryServerCapabilities_MaxReturnEventValues: 11274,\n HistoryServerCapabilities_InsertAnnotationCapability: 11275,\n HistoryServerCapabilitiesType_InsertEventCapability: 11278,\n HistoryServerCapabilitiesType_ReplaceEventCapability: 11279,\n HistoryServerCapabilitiesType_UpdateEventCapability: 11280,\n HistoryServerCapabilities_InsertEventCapability: 11281,\n HistoryServerCapabilities_ReplaceEventCapability: 11282,\n HistoryServerCapabilities_UpdateEventCapability: 11283,\n Server_ServerRedundancy_CurrentServerId: 11312,\n Server_ServerRedundancy_RedundantServerArray: 11313,\n Server_ServerRedundancy_ServerUriArray: 11314,\n ShelvedStateMachineType_UnshelvedToTimedShelved_TransitionNumber: 11322,\n ShelvedStateMachineType_UnshelvedToOneShotShelved_TransitionNumber: 11323,\n ShelvedStateMachineType_TimedShelvedToUnshelved_TransitionNumber: 11324,\n ShelvedStateMachineType_TimedShelvedToOneShotShelved_TransitionNumber: 11325,\n ShelvedStateMachineType_OneShotShelvedToUnshelved_TransitionNumber: 11326,\n ShelvedStateMachineType_OneShotShelvedToTimedShelved_TransitionNumber: 11327,\n ExclusiveLimitStateMachineType_LowLowToLow_TransitionNumber: 11340,\n ExclusiveLimitStateMachineType_LowToLowLow_TransitionNumber: 11341,\n ExclusiveLimitStateMachineType_HighHighToHigh_TransitionNumber: 11342,\n ExclusiveLimitStateMachineType_HighToHighHigh_TransitionNumber: 11343,\n EnumStrings: 11432,\n ValueAsText: 11433,\n ProgressEventType_EventId: 11437,\n ProgressEventType_EventType: 11438,\n ProgressEventType_SourceNode: 11439,\n ProgressEventType_SourceName: 11440,\n ProgressEventType_Time: 11441,\n ProgressEventType_ReceiveTime: 11442,\n ProgressEventType_LocalTime: 11443,\n ProgressEventType_Message: 11444,\n ProgressEventType_Severity: 11445,\n SystemStatusChangeEventType_EventId: 11447,\n SystemStatusChangeEventType_EventType: 11448,\n SystemStatusChangeEventType_SourceNode: 11449,\n SystemStatusChangeEventType_SourceName: 11450,\n SystemStatusChangeEventType_Time: 11451,\n SystemStatusChangeEventType_ReceiveTime: 11452,\n SystemStatusChangeEventType_LocalTime: 11453,\n SystemStatusChangeEventType_Message: 11454,\n SystemStatusChangeEventType_Severity: 11455,\n TransitionVariableType_EffectiveTransitionTime: 11456,\n FiniteTransitionVariableType_EffectiveTransitionTime: 11457,\n StateMachineType_LastTransition_EffectiveTransitionTime: 11458,\n FiniteStateMachineType_LastTransition_EffectiveTransitionTime: 11459,\n TransitionEventType_Transition_EffectiveTransitionTime: 11460,\n MultiStateValueDiscreteType_ValueAsText: 11461,\n ProgramTransitionEventType_Transition_EffectiveTransitionTime: 11462,\n ProgramTransitionAuditEventType_Transition_EffectiveTransitionTime: 11463,\n ProgramStateMachineType_LastTransition_EffectiveTransitionTime: 11464,\n ShelvedStateMachineType_LastTransition_EffectiveTransitionTime: 11465,\n AlarmConditionType_ShelvingState_LastTransition_EffectiveTransitionTime: 11466,\n LimitAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11467,\n ExclusiveLimitStateMachineType_LastTransition_EffectiveTransitionTime: 11468,\n ExclusiveLimitAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11469,\n ExclusiveLimitAlarmType_LimitState_LastTransition_EffectiveTransitionTime: 11470,\n ExclusiveLevelAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11471,\n ExclusiveLevelAlarmType_LimitState_LastTransition_EffectiveTransitionTime: 11472,\n ExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11473,\n ExclusiveRateOfChangeAlarmType_LimitState_LastTransition_EffectiveTransitionTime: 11474,\n ExclusiveDeviationAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11475,\n ExclusiveDeviationAlarmType_LimitState_LastTransition_EffectiveTransitionTime: 11476,\n NonExclusiveLimitAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11477,\n NonExclusiveLevelAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11478,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11479,\n NonExclusiveDeviationAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11480,\n DiscreteAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11481,\n OffNormalAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11482,\n TripAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11483,\n AuditActivateSessionEventType_SecureChannelId: 11485,\n OptionSetType_OptionSetValues: 11488,\n ServerType_GetMonitoredItems_InputArguments: 11490,\n ServerType_GetMonitoredItems_OutputArguments: 11491,\n Server_GetMonitoredItems_InputArguments: 11493,\n Server_GetMonitoredItems_OutputArguments: 11494,\n GetMonitoredItemsMethodType_InputArguments: 11496,\n GetMonitoredItemsMethodType_OutputArguments: 11497,\n MaxStringLength: 11498,\n HistoricalDataConfigurationType_StartOfArchive: 11499,\n HistoricalDataConfigurationType_StartOfOnlineArchive: 11500,\n HistoryServerCapabilitiesType_DeleteEventCapability: 11501,\n HistoryServerCapabilities_DeleteEventCapability: 11502,\n HAConfiguration_StartOfArchive: 11503,\n HAConfiguration_StartOfOnlineArchive: 11504,\n ModellingRule_OptionalPlaceholder_NamingRule: 11509,\n ModellingRule_MandatoryPlaceholder_NamingRule: 11511,\n MaxArrayLength: 11512,\n EngineeringUnits: 11513,\n ServerType_ServerCapabilities_MaxArrayLength: 11514,\n ServerType_ServerCapabilities_MaxStringLength: 11515,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerRead: 11517,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerWrite: 11519,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall: 11521,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerBrowse: 11522,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes: 11523,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds: 11524,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement: 11525,\n ServerType_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall: 11526,\n ServerCapabilitiesType_MaxArrayLength: 11549,\n ServerCapabilitiesType_MaxStringLength: 11550,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerRead: 11552,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerWrite: 11554,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerMethodCall: 11556,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerBrowse: 11557,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerRegisterNodes: 11558,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds: 11559,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerNodeManagement: 11560,\n ServerCapabilitiesType_OperationLimits_MaxMonitoredItemsPerCall: 11561,\n ServerCapabilitiesType_VendorCapability_Placeholder: 11562,\n OperationLimitsType_MaxNodesPerRead: 11565,\n OperationLimitsType_MaxNodesPerWrite: 11567,\n OperationLimitsType_MaxNodesPerMethodCall: 11569,\n OperationLimitsType_MaxNodesPerBrowse: 11570,\n OperationLimitsType_MaxNodesPerRegisterNodes: 11571,\n OperationLimitsType_MaxNodesPerTranslateBrowsePathsToNodeIds: 11572,\n OperationLimitsType_MaxNodesPerNodeManagement: 11573,\n OperationLimitsType_MaxMonitoredItemsPerCall: 11574,\n FileType_Size: 11576,\n FileType_OpenCount: 11579,\n FileType_Open_InputArguments: 11581,\n FileType_Open_OutputArguments: 11582,\n FileType_Close_InputArguments: 11584,\n FileType_Read_InputArguments: 11586,\n FileType_Read_OutputArguments: 11587,\n FileType_Write_InputArguments: 11589,\n FileType_GetPosition_InputArguments: 11591,\n FileType_GetPosition_OutputArguments: 11592,\n FileType_SetPosition_InputArguments: 11594,\n AddressSpaceFileType_Size: 11596,\n AddressSpaceFileType_OpenCount: 11599,\n AddressSpaceFileType_Open_InputArguments: 11601,\n AddressSpaceFileType_Open_OutputArguments: 11602,\n AddressSpaceFileType_Close_InputArguments: 11604,\n AddressSpaceFileType_Read_InputArguments: 11606,\n AddressSpaceFileType_Read_OutputArguments: 11607,\n AddressSpaceFileType_Write_InputArguments: 11609,\n AddressSpaceFileType_GetPosition_InputArguments: 11611,\n AddressSpaceFileType_GetPosition_OutputArguments: 11612,\n AddressSpaceFileType_SetPosition_InputArguments: 11614,\n NamespaceMetadataType_NamespaceUri: 11617,\n NamespaceMetadataType_NamespaceVersion: 11618,\n NamespaceMetadataType_NamespacePublicationDate: 11619,\n NamespaceMetadataType_IsNamespaceSubset: 11620,\n NamespaceMetadataType_StaticNodeIdTypes: 11621,\n NamespaceMetadataType_StaticNumericNodeIdRange: 11622,\n NamespaceMetadataType_StaticStringNodeIdPattern: 11623,\n NamespaceMetadataType_NamespaceFile_Size: 11625,\n NamespaceMetadataType_NamespaceFile_OpenCount: 11628,\n NamespaceMetadataType_NamespaceFile_Open_InputArguments: 11630,\n NamespaceMetadataType_NamespaceFile_Open_OutputArguments: 11631,\n NamespaceMetadataType_NamespaceFile_Close_InputArguments: 11633,\n NamespaceMetadataType_NamespaceFile_Read_InputArguments: 11635,\n NamespaceMetadataType_NamespaceFile_Read_OutputArguments: 11636,\n NamespaceMetadataType_NamespaceFile_Write_InputArguments: 11638,\n NamespaceMetadataType_NamespaceFile_GetPosition_InputArguments: 11640,\n NamespaceMetadataType_NamespaceFile_GetPosition_OutputArguments: 11641,\n NamespaceMetadataType_NamespaceFile_SetPosition_InputArguments: 11643,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceUri: 11647,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceVersion: 11648,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespacePublicationDate: 11649,\n NamespacesType_NamespaceIdentifier_Placeholder_IsNamespaceSubset: 11650,\n NamespacesType_NamespaceIdentifier_Placeholder_StaticNodeIdTypes: 11651,\n NamespacesType_NamespaceIdentifier_Placeholder_StaticNumericNodeIdRange: 11652,\n NamespacesType_NamespaceIdentifier_Placeholder_StaticStringNodeIdPattern: 11653,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Size: 11655,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_OpenCount: 11658,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_InputArguments: 11660,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open_OutputArguments: 11661,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close_InputArguments: 11663,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_InputArguments: 11665,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read_OutputArguments: 11666,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write_InputArguments: 11668,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_InputArguments: 11670,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition_OutputArguments: 11671,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition_InputArguments: 11673,\n SystemStatusChangeEventType_SystemState: 11696,\n SamplingIntervalDiagnosticsType_SampledMonitoredItemsCount: 11697,\n SamplingIntervalDiagnosticsType_MaxSampledMonitoredItemsCount: 11698,\n SamplingIntervalDiagnosticsType_DisabledMonitoredItemsSamplingCount: 11699,\n OptionSetType_BitMask: 11701,\n Server_ServerCapabilities_MaxArrayLength: 11702,\n Server_ServerCapabilities_MaxStringLength: 11703,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerRead: 11705,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerWrite: 11707,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerMethodCall: 11709,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerBrowse: 11710,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerRegisterNodes: 11711,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerTranslateBrowsePathsToNodeIds: 11712,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerNodeManagement: 11713,\n Server_ServerCapabilities_OperationLimits_MaxMonitoredItemsPerCall: 11714,\n OpenMethodType_InputArguments: 11739,\n OpenMethodType_OutputArguments: 11740,\n CloseMethodType_InputArguments: 11742,\n ReadMethodType_InputArguments: 11744,\n ReadMethodType_OutputArguments: 11745,\n WriteMethodType_InputArguments: 11747,\n GetPositionMethodType_InputArguments: 11749,\n GetPositionMethodType_OutputArguments: 11750,\n SetPositionMethodType_InputArguments: 11752,\n SystemOffNormalAlarmType_EventId: 11754,\n SystemOffNormalAlarmType_EventType: 11755,\n SystemOffNormalAlarmType_SourceNode: 11756,\n SystemOffNormalAlarmType_SourceName: 11757,\n SystemOffNormalAlarmType_Time: 11758,\n SystemOffNormalAlarmType_ReceiveTime: 11759,\n SystemOffNormalAlarmType_LocalTime: 11760,\n SystemOffNormalAlarmType_Message: 11761,\n SystemOffNormalAlarmType_Severity: 11762,\n SystemOffNormalAlarmType_ConditionClassId: 11763,\n SystemOffNormalAlarmType_ConditionClassName: 11764,\n SystemOffNormalAlarmType_ConditionName: 11765,\n SystemOffNormalAlarmType_BranchId: 11766,\n SystemOffNormalAlarmType_Retain: 11767,\n SystemOffNormalAlarmType_EnabledState: 11768,\n SystemOffNormalAlarmType_EnabledState_Id: 11769,\n SystemOffNormalAlarmType_EnabledState_Name: 11770,\n SystemOffNormalAlarmType_EnabledState_Number: 11771,\n SystemOffNormalAlarmType_EnabledState_EffectiveDisplayName: 11772,\n SystemOffNormalAlarmType_EnabledState_TransitionTime: 11773,\n SystemOffNormalAlarmType_EnabledState_EffectiveTransitionTime: 11774,\n SystemOffNormalAlarmType_EnabledState_TrueState: 11775,\n SystemOffNormalAlarmType_EnabledState_FalseState: 11776,\n SystemOffNormalAlarmType_Quality: 11777,\n SystemOffNormalAlarmType_Quality_SourceTimestamp: 11778,\n SystemOffNormalAlarmType_LastSeverity: 11779,\n SystemOffNormalAlarmType_LastSeverity_SourceTimestamp: 11780,\n SystemOffNormalAlarmType_Comment: 11781,\n SystemOffNormalAlarmType_Comment_SourceTimestamp: 11782,\n SystemOffNormalAlarmType_ClientUserId: 11783,\n SystemOffNormalAlarmType_AddComment_InputArguments: 11787,\n SystemOffNormalAlarmType_ConditionRefresh_InputArguments: 11789,\n SystemOffNormalAlarmType_AckedState: 11790,\n SystemOffNormalAlarmType_AckedState_Id: 11791,\n SystemOffNormalAlarmType_AckedState_Name: 11792,\n SystemOffNormalAlarmType_AckedState_Number: 11793,\n SystemOffNormalAlarmType_AckedState_EffectiveDisplayName: 11794,\n SystemOffNormalAlarmType_AckedState_TransitionTime: 11795,\n SystemOffNormalAlarmType_AckedState_EffectiveTransitionTime: 11796,\n SystemOffNormalAlarmType_AckedState_TrueState: 11797,\n SystemOffNormalAlarmType_AckedState_FalseState: 11798,\n SystemOffNormalAlarmType_ConfirmedState: 11799,\n SystemOffNormalAlarmType_ConfirmedState_Id: 11800,\n SystemOffNormalAlarmType_ConfirmedState_Name: 11801,\n SystemOffNormalAlarmType_ConfirmedState_Number: 11802,\n SystemOffNormalAlarmType_ConfirmedState_EffectiveDisplayName: 11803,\n SystemOffNormalAlarmType_ConfirmedState_TransitionTime: 11804,\n SystemOffNormalAlarmType_ConfirmedState_EffectiveTransitionTime: 11805,\n SystemOffNormalAlarmType_ConfirmedState_TrueState: 11806,\n SystemOffNormalAlarmType_ConfirmedState_FalseState: 11807,\n SystemOffNormalAlarmType_Acknowledge_InputArguments: 11809,\n SystemOffNormalAlarmType_Confirm_InputArguments: 11811,\n SystemOffNormalAlarmType_ActiveState: 11812,\n SystemOffNormalAlarmType_ActiveState_Id: 11813,\n SystemOffNormalAlarmType_ActiveState_Name: 11814,\n SystemOffNormalAlarmType_ActiveState_Number: 11815,\n SystemOffNormalAlarmType_ActiveState_EffectiveDisplayName: 11816,\n SystemOffNormalAlarmType_ActiveState_TransitionTime: 11817,\n SystemOffNormalAlarmType_ActiveState_EffectiveTransitionTime: 11818,\n SystemOffNormalAlarmType_ActiveState_TrueState: 11819,\n SystemOffNormalAlarmType_ActiveState_FalseState: 11820,\n SystemOffNormalAlarmType_InputNode: 11821,\n SystemOffNormalAlarmType_SuppressedState: 11822,\n SystemOffNormalAlarmType_SuppressedState_Id: 11823,\n SystemOffNormalAlarmType_SuppressedState_Name: 11824,\n SystemOffNormalAlarmType_SuppressedState_Number: 11825,\n SystemOffNormalAlarmType_SuppressedState_EffectiveDisplayName: 11826,\n SystemOffNormalAlarmType_SuppressedState_TransitionTime: 11827,\n SystemOffNormalAlarmType_SuppressedState_EffectiveTransitionTime: 11828,\n SystemOffNormalAlarmType_SuppressedState_TrueState: 11829,\n SystemOffNormalAlarmType_SuppressedState_FalseState: 11830,\n SystemOffNormalAlarmType_ShelvingState_CurrentState: 11832,\n SystemOffNormalAlarmType_ShelvingState_CurrentState_Id: 11833,\n SystemOffNormalAlarmType_ShelvingState_CurrentState_Name: 11834,\n SystemOffNormalAlarmType_ShelvingState_CurrentState_Number: 11835,\n SystemOffNormalAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 11836,\n SystemOffNormalAlarmType_ShelvingState_LastTransition: 11837,\n SystemOffNormalAlarmType_ShelvingState_LastTransition_Id: 11838,\n SystemOffNormalAlarmType_ShelvingState_LastTransition_Name: 11839,\n SystemOffNormalAlarmType_ShelvingState_LastTransition_Number: 11840,\n SystemOffNormalAlarmType_ShelvingState_LastTransition_TransitionTime: 11841,\n SystemOffNormalAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 11842,\n SystemOffNormalAlarmType_ShelvingState_UnshelveTime: 11843,\n SystemOffNormalAlarmType_ShelvingState_TimedShelve_InputArguments: 11847,\n SystemOffNormalAlarmType_SuppressedOrShelved: 11848,\n SystemOffNormalAlarmType_MaxTimeShelved: 11849,\n SystemOffNormalAlarmType_NormalState: 11850,\n AuditConditionCommentEventType_Comment: 11851,\n AuditConditionRespondEventType_SelectedResponse: 11852,\n AuditConditionAcknowledgeEventType_Comment: 11853,\n AuditConditionConfirmEventType_Comment: 11854,\n AuditConditionShelvingEventType_ShelvingTime: 11855,\n AuditProgramTransitionEventType_EventId: 11857,\n AuditProgramTransitionEventType_EventType: 11858,\n AuditProgramTransitionEventType_SourceNode: 11859,\n AuditProgramTransitionEventType_SourceName: 11860,\n AuditProgramTransitionEventType_Time: 11861,\n AuditProgramTransitionEventType_ReceiveTime: 11862,\n AuditProgramTransitionEventType_LocalTime: 11863,\n AuditProgramTransitionEventType_Message: 11864,\n AuditProgramTransitionEventType_Severity: 11865,\n AuditProgramTransitionEventType_ActionTimeStamp: 11866,\n AuditProgramTransitionEventType_Status: 11867,\n AuditProgramTransitionEventType_ServerId: 11868,\n AuditProgramTransitionEventType_ClientAuditEntryId: 11869,\n AuditProgramTransitionEventType_ClientUserId: 11870,\n AuditProgramTransitionEventType_MethodId: 11871,\n AuditProgramTransitionEventType_InputArguments: 11872,\n AuditProgramTransitionEventType_OldStateId: 11873,\n AuditProgramTransitionEventType_NewStateId: 11874,\n AuditProgramTransitionEventType_TransitionNumber: 11875,\n NodeClass_EnumValues: 11878,\n NodeAttributesMask_EnumValues: 11881,\n BrowseResultMask_EnumValues: 11883,\n HistoryUpdateType_EnumValues: 11884,\n PerformUpdateType_EnumValues: 11885,\n SessionDiagnosticsObjectType_SessionDiagnostics_UnauthorizedRequestCount: 11891,\n SessionDiagnosticsVariableType_UnauthorizedRequestCount: 11892,\n OpenFileMode_EnumValues: 11940,\n ModelChangeStructureVerbMask_EnumValues: 11942,\n NonTransparentNetworkRedundancyType_RedundancySupport: 11946,\n NonTransparentNetworkRedundancyType_ServerUriArray: 11947,\n NonTransparentNetworkRedundancyType_ServerNetworkGroups: 11948,\n OpcUa_XmlSchema_EndpointUrlListDataType: 11951,\n OpcUa_XmlSchema_EndpointUrlListDataType_DataTypeVersion: 11952,\n OpcUa_XmlSchema_EndpointUrlListDataType_DictionaryFragment: 11953,\n OpcUa_XmlSchema_NetworkGroupDataType: 11954,\n OpcUa_XmlSchema_NetworkGroupDataType_DataTypeVersion: 11955,\n OpcUa_XmlSchema_NetworkGroupDataType_DictionaryFragment: 11956,\n OpcUa_BinarySchema_EndpointUrlListDataType: 11959,\n OpcUa_BinarySchema_EndpointUrlListDataType_DataTypeVersion: 11960,\n OpcUa_BinarySchema_EndpointUrlListDataType_DictionaryFragment: 11961,\n OpcUa_BinarySchema_NetworkGroupDataType: 11962,\n OpcUa_BinarySchema_NetworkGroupDataType_DataTypeVersion: 11963,\n OpcUa_BinarySchema_NetworkGroupDataType_DictionaryFragment: 11964,\n ArrayItemType_Definition: 12022,\n ArrayItemType_ValuePrecision: 12023,\n ArrayItemType_InstrumentRange: 12024,\n ArrayItemType_EURange: 12025,\n ArrayItemType_EngineeringUnits: 12026,\n ArrayItemType_Title: 12027,\n ArrayItemType_AxisScaleType: 12028,\n YArrayItemType_Definition: 12030,\n YArrayItemType_ValuePrecision: 12031,\n YArrayItemType_InstrumentRange: 12032,\n YArrayItemType_EURange: 12033,\n YArrayItemType_EngineeringUnits: 12034,\n YArrayItemType_Title: 12035,\n YArrayItemType_AxisScaleType: 12036,\n YArrayItemType_XAxisDefinition: 12037,\n XYArrayItemType_Definition: 12039,\n XYArrayItemType_ValuePrecision: 12040,\n XYArrayItemType_InstrumentRange: 12041,\n XYArrayItemType_EURange: 12042,\n XYArrayItemType_EngineeringUnits: 12043,\n XYArrayItemType_Title: 12044,\n XYArrayItemType_AxisScaleType: 12045,\n XYArrayItemType_XAxisDefinition: 12046,\n ImageItemType_Definition: 12048,\n ImageItemType_ValuePrecision: 12049,\n ImageItemType_InstrumentRange: 12050,\n ImageItemType_EURange: 12051,\n ImageItemType_EngineeringUnits: 12052,\n ImageItemType_Title: 12053,\n ImageItemType_AxisScaleType: 12054,\n ImageItemType_XAxisDefinition: 12055,\n ImageItemType_YAxisDefinition: 12056,\n CubeItemType_Definition: 12058,\n CubeItemType_ValuePrecision: 12059,\n CubeItemType_InstrumentRange: 12060,\n CubeItemType_EURange: 12061,\n CubeItemType_EngineeringUnits: 12062,\n CubeItemType_Title: 12063,\n CubeItemType_AxisScaleType: 12064,\n CubeItemType_XAxisDefinition: 12065,\n CubeItemType_YAxisDefinition: 12066,\n CubeItemType_ZAxisDefinition: 12067,\n NDimensionArrayItemType_Definition: 12069,\n NDimensionArrayItemType_ValuePrecision: 12070,\n NDimensionArrayItemType_InstrumentRange: 12071,\n NDimensionArrayItemType_EURange: 12072,\n NDimensionArrayItemType_EngineeringUnits: 12073,\n NDimensionArrayItemType_Title: 12074,\n NDimensionArrayItemType_AxisScaleType: 12075,\n NDimensionArrayItemType_AxisDefinition: 12076,\n AxisScaleEnumeration_EnumStrings: 12078,\n OpcUa_XmlSchema_AxisInformation: 12083,\n OpcUa_XmlSchema_AxisInformation_DataTypeVersion: 12084,\n OpcUa_XmlSchema_AxisInformation_DictionaryFragment: 12085,\n OpcUa_XmlSchema_XVType: 12086,\n OpcUa_XmlSchema_XVType_DataTypeVersion: 12087,\n OpcUa_XmlSchema_XVType_DictionaryFragment: 12088,\n OpcUa_BinarySchema_AxisInformation: 12091,\n OpcUa_BinarySchema_AxisInformation_DataTypeVersion: 12092,\n OpcUa_BinarySchema_AxisInformation_DictionaryFragment: 12093,\n OpcUa_BinarySchema_XVType: 12094,\n OpcUa_BinarySchema_XVType_DataTypeVersion: 12095,\n OpcUa_BinarySchema_XVType_DictionaryFragment: 12096,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics: 12098,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionId: 12099,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SessionName: 12100,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientDescription: 12101,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ServerUri: 12102,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_EndpointUrl: 12103,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_LocaleIds: 12104,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ActualSessionTimeout: 12105,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_MaxResponseMessageSize: 12106,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientConnectionTime: 12107,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ClientLastContactTime: 12108,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentSubscriptionsCount: 12109,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentMonitoredItemsCount: 12110,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CurrentPublishRequestsInQueue: 12111,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TotalRequestCount: 12112,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnauthorizedRequestCount: 12113,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ReadCount: 12114,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryReadCount: 12115,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_WriteCount: 12116,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_HistoryUpdateCount: 12117,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CallCount: 12118,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateMonitoredItemsCount: 12119,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifyMonitoredItemsCount: 12120,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetMonitoringModeCount: 12121,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetTriggeringCount: 12122,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteMonitoredItemsCount: 12123,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_CreateSubscriptionCount: 12124,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_ModifySubscriptionCount: 12125,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_SetPublishingModeCount: 12126,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_PublishCount: 12127,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RepublishCount: 12128,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TransferSubscriptionsCount: 12129,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteSubscriptionsCount: 12130,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddNodesCount: 12131,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_AddReferencesCount: 12132,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteNodesCount: 12133,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_DeleteReferencesCount: 12134,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseCount: 12135,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_BrowseNextCount: 12136,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount: 12137,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryFirstCount: 12138,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_QueryNextCount: 12139,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_RegisterNodesCount: 12140,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionDiagnostics_UnregisterNodesCount: 12141,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics: 12142,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SessionId: 12143,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdOfSession: 12144,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientUserIdHistory: 12145,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_AuthenticationMechanism: 12146,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_Encoding: 12147,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_TransportProtocol: 12148,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityMode: 12149,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_SecurityPolicyUri: 12150,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SessionSecurityDiagnostics_ClientCertificate: 12151,\n SessionsDiagnosticsSummaryType_ClientName_Placeholder_SubscriptionDiagnosticsArray: 12152,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData: 12153,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents: 12154,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData: 12155,\n ServerType_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents: 12156,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerHistoryReadData: 12157,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerHistoryReadEvents: 12158,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerHistoryUpdateData: 12159,\n ServerCapabilitiesType_OperationLimits_MaxNodesPerHistoryUpdateEvents: 12160,\n OperationLimitsType_MaxNodesPerHistoryReadData: 12161,\n OperationLimitsType_MaxNodesPerHistoryReadEvents: 12162,\n OperationLimitsType_MaxNodesPerHistoryUpdateData: 12163,\n OperationLimitsType_MaxNodesPerHistoryUpdateEvents: 12164,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadData: 12165,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryReadEvents: 12166,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateData: 12167,\n Server_ServerCapabilities_OperationLimits_MaxNodesPerHistoryUpdateEvents: 12168,\n NamingRuleType_EnumValues: 12169,\n ViewVersion: 12170,\n OpcUa_XmlSchema_ComplexNumberType: 12175,\n OpcUa_XmlSchema_ComplexNumberType_DataTypeVersion: 12176,\n OpcUa_XmlSchema_ComplexNumberType_DictionaryFragment: 12177,\n OpcUa_XmlSchema_DoubleComplexNumberType: 12178,\n OpcUa_XmlSchema_DoubleComplexNumberType_DataTypeVersion: 12179,\n OpcUa_XmlSchema_DoubleComplexNumberType_DictionaryFragment: 12180,\n OpcUa_BinarySchema_ComplexNumberType: 12183,\n OpcUa_BinarySchema_ComplexNumberType_DataTypeVersion: 12184,\n OpcUa_BinarySchema_ComplexNumberType_DictionaryFragment: 12185,\n OpcUa_BinarySchema_DoubleComplexNumberType: 12186,\n OpcUa_BinarySchema_DoubleComplexNumberType_DataTypeVersion: 12187,\n OpcUa_BinarySchema_DoubleComplexNumberType_DictionaryFragment: 12188,\n OpcUa_XmlSchema_ServerOnNetwork: 12201,\n OpcUa_XmlSchema_ServerOnNetwork_DataTypeVersion: 12202,\n OpcUa_XmlSchema_ServerOnNetwork_DictionaryFragment: 12203,\n OpcUa_BinarySchema_ServerOnNetwork: 12213,\n OpcUa_BinarySchema_ServerOnNetwork_DataTypeVersion: 12214,\n OpcUa_BinarySchema_ServerOnNetwork_DictionaryFragment: 12215,\n ProgressEventType_Context: 12502,\n ProgressEventType_Progress: 12503,\n OpenWithMasksMethodType_InputArguments: 12514,\n OpenWithMasksMethodType_OutputArguments: 12515,\n CloseAndUpdateMethodType_OutputArguments: 12517,\n AddCertificateMethodType_InputArguments: 12519,\n RemoveCertificateMethodType_InputArguments: 12521,\n TrustListType_Size: 12523,\n TrustListType_OpenCount: 12526,\n TrustListType_Open_InputArguments: 12528,\n TrustListType_Open_OutputArguments: 12529,\n TrustListType_Close_InputArguments: 12531,\n TrustListType_Read_InputArguments: 12533,\n TrustListType_Read_OutputArguments: 12534,\n TrustListType_Write_InputArguments: 12536,\n TrustListType_GetPosition_InputArguments: 12538,\n TrustListType_GetPosition_OutputArguments: 12539,\n TrustListType_SetPosition_InputArguments: 12541,\n TrustListType_LastUpdateTime: 12542,\n TrustListType_OpenWithMasks_InputArguments: 12544,\n TrustListType_OpenWithMasks_OutputArguments: 12545,\n TrustListType_CloseAndUpdate_OutputArguments: 12547,\n TrustListType_AddCertificate_InputArguments: 12549,\n TrustListType_RemoveCertificate_InputArguments: 12551,\n TrustListMasks_EnumValues: 12553,\n TrustListUpdatedAuditEventType_EventId: 12562,\n TrustListUpdatedAuditEventType_EventType: 12563,\n TrustListUpdatedAuditEventType_SourceNode: 12564,\n TrustListUpdatedAuditEventType_SourceName: 12565,\n TrustListUpdatedAuditEventType_Time: 12566,\n TrustListUpdatedAuditEventType_ReceiveTime: 12567,\n TrustListUpdatedAuditEventType_LocalTime: 12568,\n TrustListUpdatedAuditEventType_Message: 12569,\n TrustListUpdatedAuditEventType_Severity: 12570,\n TrustListUpdatedAuditEventType_ActionTimeStamp: 12571,\n TrustListUpdatedAuditEventType_Status: 12572,\n TrustListUpdatedAuditEventType_ServerId: 12573,\n TrustListUpdatedAuditEventType_ClientAuditEntryId: 12574,\n TrustListUpdatedAuditEventType_ClientUserId: 12575,\n TrustListUpdatedAuditEventType_MethodId: 12576,\n TrustListUpdatedAuditEventType_InputArguments: 12577,\n UpdateCertificateMethodType_InputArguments: 12579,\n UpdateCertificateMethodType_OutputArguments: 12580,\n ServerConfigurationType_SupportedPrivateKeyFormats: 12583,\n ServerConfigurationType_MaxTrustListSize: 12584,\n ServerConfigurationType_MulticastDnsEnabled: 12585,\n ServerConfigurationType_UpdateCertificate_InputArguments: 12617,\n ServerConfigurationType_UpdateCertificate_OutputArguments: 12618,\n CertificateUpdatedAuditEventType_EventId: 12621,\n CertificateUpdatedAuditEventType_EventType: 12622,\n CertificateUpdatedAuditEventType_SourceNode: 12623,\n CertificateUpdatedAuditEventType_SourceName: 12624,\n CertificateUpdatedAuditEventType_Time: 12625,\n CertificateUpdatedAuditEventType_ReceiveTime: 12626,\n CertificateUpdatedAuditEventType_LocalTime: 12627,\n CertificateUpdatedAuditEventType_Message: 12628,\n CertificateUpdatedAuditEventType_Severity: 12629,\n CertificateUpdatedAuditEventType_ActionTimeStamp: 12630,\n CertificateUpdatedAuditEventType_Status: 12631,\n CertificateUpdatedAuditEventType_ServerId: 12632,\n CertificateUpdatedAuditEventType_ClientAuditEntryId: 12633,\n CertificateUpdatedAuditEventType_ClientUserId: 12634,\n CertificateUpdatedAuditEventType_MethodId: 12635,\n CertificateUpdatedAuditEventType_InputArguments: 12636,\n ServerConfiguration_SupportedPrivateKeyFormats: 12639,\n ServerConfiguration_MaxTrustListSize: 12640,\n ServerConfiguration_MulticastDnsEnabled: 12641,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Size: 12643,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount: 12646,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments: 12648,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments: 12649,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments: 12651,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments: 12653,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments: 12654,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments: 12656,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments: 12658,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments: 12659,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments: 12661,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime: 12662,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments: 12664,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments: 12665,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments: 12667,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments: 12669,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments: 12671,\n OpcUa_XmlSchema_TrustListDataType: 12677,\n OpcUa_XmlSchema_TrustListDataType_DataTypeVersion: 12678,\n OpcUa_XmlSchema_TrustListDataType_DictionaryFragment: 12679,\n OpcUa_BinarySchema_TrustListDataType: 12681,\n OpcUa_BinarySchema_TrustListDataType_DataTypeVersion: 12682,\n OpcUa_BinarySchema_TrustListDataType_DictionaryFragment: 12683,\n FileType_Writable: 12686,\n FileType_UserWritable: 12687,\n AddressSpaceFileType_Writable: 12688,\n AddressSpaceFileType_UserWritable: 12689,\n NamespaceMetadataType_NamespaceFile_Writable: 12690,\n NamespaceMetadataType_NamespaceFile_UserWritable: 12691,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Writable: 12692,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_UserWritable: 12693,\n TrustListType_Writable: 12698,\n TrustListType_UserWritable: 12699,\n CloseAndUpdateMethodType_InputArguments: 12704,\n TrustListType_CloseAndUpdate_InputArguments: 12705,\n ServerConfigurationType_ServerCapabilities: 12708,\n ServerConfiguration_ServerCapabilities: 12710,\n OpcUa_XmlSchema_RelativePathElement: 12712,\n OpcUa_XmlSchema_RelativePathElement_DataTypeVersion: 12713,\n OpcUa_XmlSchema_RelativePathElement_DictionaryFragment: 12714,\n OpcUa_XmlSchema_RelativePath: 12715,\n OpcUa_XmlSchema_RelativePath_DataTypeVersion: 12716,\n OpcUa_XmlSchema_RelativePath_DictionaryFragment: 12717,\n OpcUa_BinarySchema_RelativePathElement: 12718,\n OpcUa_BinarySchema_RelativePathElement_DataTypeVersion: 12719,\n OpcUa_BinarySchema_RelativePathElement_DictionaryFragment: 12720,\n OpcUa_BinarySchema_RelativePath: 12721,\n OpcUa_BinarySchema_RelativePath_DataTypeVersion: 12722,\n OpcUa_BinarySchema_RelativePath_DictionaryFragment: 12723,\n ServerConfigurationType_CreateSigningRequest_InputArguments: 12732,\n ServerConfigurationType_CreateSigningRequest_OutputArguments: 12733,\n ServerConfiguration_CreateSigningRequest_InputArguments: 12738,\n ServerConfiguration_CreateSigningRequest_OutputArguments: 12739,\n CreateSigningRequestMethodType_InputArguments: 12742,\n CreateSigningRequestMethodType_OutputArguments: 12743,\n OptionSetValues: 12745,\n ServerType_SetSubscriptionDurable_InputArguments: 12747,\n ServerType_SetSubscriptionDurable_OutputArguments: 12748,\n Server_SetSubscriptionDurable_InputArguments: 12750,\n Server_SetSubscriptionDurable_OutputArguments: 12751,\n SetSubscriptionDurableMethodType_InputArguments: 12753,\n SetSubscriptionDurableMethodType_OutputArguments: 12754,\n OpcUa_XmlSchema_OptionSet: 12759,\n OpcUa_XmlSchema_OptionSet_DataTypeVersion: 12760,\n OpcUa_XmlSchema_OptionSet_DictionaryFragment: 12761,\n OpcUa_XmlSchema_Union: 12762,\n OpcUa_XmlSchema_Union_DataTypeVersion: 12763,\n OpcUa_XmlSchema_Union_DictionaryFragment: 12764,\n OpcUa_BinarySchema_OptionSet: 12767,\n OpcUa_BinarySchema_OptionSet_DataTypeVersion: 12768,\n OpcUa_BinarySchema_OptionSet_DictionaryFragment: 12769,\n OpcUa_BinarySchema_Union: 12770,\n OpcUa_BinarySchema_Union_DataTypeVersion: 12771,\n OpcUa_BinarySchema_Union_DictionaryFragment: 12772,\n GetRejectedListMethodType_OutputArguments: 12774,\n ServerConfigurationType_GetRejectedList_OutputArguments: 12776,\n ServerConfiguration_GetRejectedList_OutputArguments: 12778,\n SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics: 12779,\n SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SamplingInterval: 12780,\n SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_SampledMonitoredItemsCount: 12781,\n SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_MaxSampledMonitoredItemsCount: 12782,\n SamplingIntervalDiagnosticsArrayType_SamplingIntervalDiagnostics_DisabledMonitoredItemsSamplingCount: 12783,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics: 12784,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SessionId: 12785,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_SubscriptionId: 12786,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_Priority: 12787,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingInterval: 12788,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxKeepAliveCount: 12789,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxLifetimeCount: 12790,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MaxNotificationsPerPublish: 12791,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishingEnabled: 12792,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_ModifyCount: 12793,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EnableCount: 12794,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisableCount: 12795,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishRequestCount: 12796,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageRequestCount: 12797,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_RepublishMessageCount: 12798,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferRequestCount: 12799,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToAltClientCount: 12800,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_TransferredToSameClientCount: 12801,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_PublishRequestCount: 12802,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DataChangeNotificationsCount: 12803,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventNotificationsCount: 12804,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NotificationsCount: 12805,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_LatePublishRequestCount: 12806,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentKeepAliveCount: 12807,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_CurrentLifetimeCount: 12808,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_UnacknowledgedMessageCount: 12809,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DiscardedMessageCount: 12810,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoredItemCount: 12811,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_DisabledMonitoredItemCount: 12812,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_MonitoringQueueOverflowCount: 12813,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_NextSequenceNumber: 12814,\n SubscriptionDiagnosticsArrayType_SubscriptionDiagnostics_EventQueueOverflowCount: 12815,\n SessionDiagnosticsArrayType_SessionDiagnostics: 12816,\n SessionDiagnosticsArrayType_SessionDiagnostics_SessionId: 12817,\n SessionDiagnosticsArrayType_SessionDiagnostics_SessionName: 12818,\n SessionDiagnosticsArrayType_SessionDiagnostics_ClientDescription: 12819,\n SessionDiagnosticsArrayType_SessionDiagnostics_ServerUri: 12820,\n SessionDiagnosticsArrayType_SessionDiagnostics_EndpointUrl: 12821,\n SessionDiagnosticsArrayType_SessionDiagnostics_LocaleIds: 12822,\n SessionDiagnosticsArrayType_SessionDiagnostics_ActualSessionTimeout: 12823,\n SessionDiagnosticsArrayType_SessionDiagnostics_MaxResponseMessageSize: 12824,\n SessionDiagnosticsArrayType_SessionDiagnostics_ClientConnectionTime: 12825,\n SessionDiagnosticsArrayType_SessionDiagnostics_ClientLastContactTime: 12826,\n SessionDiagnosticsArrayType_SessionDiagnostics_CurrentSubscriptionsCount: 12827,\n SessionDiagnosticsArrayType_SessionDiagnostics_CurrentMonitoredItemsCount: 12828,\n SessionDiagnosticsArrayType_SessionDiagnostics_CurrentPublishRequestsInQueue: 12829,\n SessionDiagnosticsArrayType_SessionDiagnostics_TotalRequestCount: 12830,\n SessionDiagnosticsArrayType_SessionDiagnostics_UnauthorizedRequestCount: 12831,\n SessionDiagnosticsArrayType_SessionDiagnostics_ReadCount: 12832,\n SessionDiagnosticsArrayType_SessionDiagnostics_HistoryReadCount: 12833,\n SessionDiagnosticsArrayType_SessionDiagnostics_WriteCount: 12834,\n SessionDiagnosticsArrayType_SessionDiagnostics_HistoryUpdateCount: 12835,\n SessionDiagnosticsArrayType_SessionDiagnostics_CallCount: 12836,\n SessionDiagnosticsArrayType_SessionDiagnostics_CreateMonitoredItemsCount: 12837,\n SessionDiagnosticsArrayType_SessionDiagnostics_ModifyMonitoredItemsCount: 12838,\n SessionDiagnosticsArrayType_SessionDiagnostics_SetMonitoringModeCount: 12839,\n SessionDiagnosticsArrayType_SessionDiagnostics_SetTriggeringCount: 12840,\n SessionDiagnosticsArrayType_SessionDiagnostics_DeleteMonitoredItemsCount: 12841,\n SessionDiagnosticsArrayType_SessionDiagnostics_CreateSubscriptionCount: 12842,\n SessionDiagnosticsArrayType_SessionDiagnostics_ModifySubscriptionCount: 12843,\n SessionDiagnosticsArrayType_SessionDiagnostics_SetPublishingModeCount: 12844,\n SessionDiagnosticsArrayType_SessionDiagnostics_PublishCount: 12845,\n SessionDiagnosticsArrayType_SessionDiagnostics_RepublishCount: 12846,\n SessionDiagnosticsArrayType_SessionDiagnostics_TransferSubscriptionsCount: 12847,\n SessionDiagnosticsArrayType_SessionDiagnostics_DeleteSubscriptionsCount: 12848,\n SessionDiagnosticsArrayType_SessionDiagnostics_AddNodesCount: 12849,\n SessionDiagnosticsArrayType_SessionDiagnostics_AddReferencesCount: 12850,\n SessionDiagnosticsArrayType_SessionDiagnostics_DeleteNodesCount: 12851,\n SessionDiagnosticsArrayType_SessionDiagnostics_DeleteReferencesCount: 12852,\n SessionDiagnosticsArrayType_SessionDiagnostics_BrowseCount: 12853,\n SessionDiagnosticsArrayType_SessionDiagnostics_BrowseNextCount: 12854,\n SessionDiagnosticsArrayType_SessionDiagnostics_TranslateBrowsePathsToNodeIdsCount: 12855,\n SessionDiagnosticsArrayType_SessionDiagnostics_QueryFirstCount: 12856,\n SessionDiagnosticsArrayType_SessionDiagnostics_QueryNextCount: 12857,\n SessionDiagnosticsArrayType_SessionDiagnostics_RegisterNodesCount: 12858,\n SessionDiagnosticsArrayType_SessionDiagnostics_UnregisterNodesCount: 12859,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics: 12860,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SessionId: 12861,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdOfSession: 12862,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientUserIdHistory: 12863,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_AuthenticationMechanism: 12864,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_Encoding: 12865,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_TransportProtocol: 12866,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityMode: 12867,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_SecurityPolicyUri: 12868,\n SessionSecurityDiagnosticsArrayType_SessionSecurityDiagnostics_ClientCertificate: 12869,\n ServerType_ResendData_InputArguments: 12872,\n Server_ResendData_InputArguments: 12874,\n ResendDataMethodType_InputArguments: 12876,\n ServerType_EstimatedReturnTime: 12882,\n ServerType_RequestServerStateChange_InputArguments: 12884,\n Server_EstimatedReturnTime: 12885,\n Server_RequestServerStateChange_InputArguments: 12887,\n RequestServerStateChangeMethodType_InputArguments: 12889,\n OpcUa_XmlSchema_DiscoveryConfiguration: 12894,\n OpcUa_XmlSchema_DiscoveryConfiguration_DataTypeVersion: 12895,\n OpcUa_XmlSchema_DiscoveryConfiguration_DictionaryFragment: 12896,\n OpcUa_XmlSchema_MdnsDiscoveryConfiguration: 12897,\n OpcUa_XmlSchema_MdnsDiscoveryConfiguration_DataTypeVersion: 12898,\n OpcUa_XmlSchema_MdnsDiscoveryConfiguration_DictionaryFragment: 12899,\n OpcUa_BinarySchema_DiscoveryConfiguration: 12902,\n OpcUa_BinarySchema_DiscoveryConfiguration_DataTypeVersion: 12903,\n OpcUa_BinarySchema_DiscoveryConfiguration_DictionaryFragment: 12904,\n OpcUa_BinarySchema_MdnsDiscoveryConfiguration: 12905,\n OpcUa_BinarySchema_MdnsDiscoveryConfiguration_DataTypeVersion: 12906,\n OpcUa_BinarySchema_MdnsDiscoveryConfiguration_DictionaryFragment: 12907,\n MaxByteStringLength: 12908,\n ServerType_ServerCapabilities_MaxByteStringLength: 12909,\n ServerCapabilitiesType_MaxByteStringLength: 12910,\n Server_ServerCapabilities_MaxByteStringLength: 12911,\n ConditionType_ConditionRefresh2_InputArguments: 12913,\n ConditionRefresh2MethodType_InputArguments: 12915,\n DialogConditionType_ConditionRefresh2_InputArguments: 12917,\n AcknowledgeableConditionType_ConditionRefresh2_InputArguments: 12919,\n AlarmConditionType_ConditionRefresh2_InputArguments: 12985,\n LimitAlarmType_ConditionRefresh2_InputArguments: 12987,\n ExclusiveLimitAlarmType_ConditionRefresh2_InputArguments: 12989,\n NonExclusiveLimitAlarmType_ConditionRefresh2_InputArguments: 12991,\n NonExclusiveLevelAlarmType_ConditionRefresh2_InputArguments: 12993,\n ExclusiveLevelAlarmType_ConditionRefresh2_InputArguments: 12995,\n NonExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments: 12997,\n ExclusiveDeviationAlarmType_ConditionRefresh2_InputArguments: 12999,\n NonExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments: 13001,\n ExclusiveRateOfChangeAlarmType_ConditionRefresh2_InputArguments: 13003,\n DiscreteAlarmType_ConditionRefresh2_InputArguments: 13005,\n OffNormalAlarmType_ConditionRefresh2_InputArguments: 13007,\n SystemOffNormalAlarmType_ConditionRefresh2_InputArguments: 13009,\n TripAlarmType_ConditionRefresh2_InputArguments: 13011,\n CertificateExpirationAlarmType_EventId: 13226,\n CertificateExpirationAlarmType_EventType: 13227,\n CertificateExpirationAlarmType_SourceNode: 13228,\n CertificateExpirationAlarmType_SourceName: 13229,\n CertificateExpirationAlarmType_Time: 13230,\n CertificateExpirationAlarmType_ReceiveTime: 13231,\n CertificateExpirationAlarmType_LocalTime: 13232,\n CertificateExpirationAlarmType_Message: 13233,\n CertificateExpirationAlarmType_Severity: 13234,\n CertificateExpirationAlarmType_ConditionClassId: 13235,\n CertificateExpirationAlarmType_ConditionClassName: 13236,\n CertificateExpirationAlarmType_ConditionName: 13237,\n CertificateExpirationAlarmType_BranchId: 13238,\n CertificateExpirationAlarmType_Retain: 13239,\n CertificateExpirationAlarmType_EnabledState: 13240,\n CertificateExpirationAlarmType_EnabledState_Id: 13241,\n CertificateExpirationAlarmType_EnabledState_Name: 13242,\n CertificateExpirationAlarmType_EnabledState_Number: 13243,\n CertificateExpirationAlarmType_EnabledState_EffectiveDisplayName: 13244,\n CertificateExpirationAlarmType_EnabledState_TransitionTime: 13245,\n CertificateExpirationAlarmType_EnabledState_EffectiveTransitionTime: 13246,\n CertificateExpirationAlarmType_EnabledState_TrueState: 13247,\n CertificateExpirationAlarmType_EnabledState_FalseState: 13248,\n CertificateExpirationAlarmType_Quality: 13249,\n CertificateExpirationAlarmType_Quality_SourceTimestamp: 13250,\n CertificateExpirationAlarmType_LastSeverity: 13251,\n CertificateExpirationAlarmType_LastSeverity_SourceTimestamp: 13252,\n CertificateExpirationAlarmType_Comment: 13253,\n CertificateExpirationAlarmType_Comment_SourceTimestamp: 13254,\n CertificateExpirationAlarmType_ClientUserId: 13255,\n CertificateExpirationAlarmType_AddComment_InputArguments: 13259,\n CertificateExpirationAlarmType_ConditionRefresh_InputArguments: 13261,\n CertificateExpirationAlarmType_ConditionRefresh2_InputArguments: 13263,\n CertificateExpirationAlarmType_AckedState: 13264,\n CertificateExpirationAlarmType_AckedState_Id: 13265,\n CertificateExpirationAlarmType_AckedState_Name: 13266,\n CertificateExpirationAlarmType_AckedState_Number: 13267,\n CertificateExpirationAlarmType_AckedState_EffectiveDisplayName: 13268,\n CertificateExpirationAlarmType_AckedState_TransitionTime: 13269,\n CertificateExpirationAlarmType_AckedState_EffectiveTransitionTime: 13270,\n CertificateExpirationAlarmType_AckedState_TrueState: 13271,\n CertificateExpirationAlarmType_AckedState_FalseState: 13272,\n CertificateExpirationAlarmType_ConfirmedState: 13273,\n CertificateExpirationAlarmType_ConfirmedState_Id: 13274,\n CertificateExpirationAlarmType_ConfirmedState_Name: 13275,\n CertificateExpirationAlarmType_ConfirmedState_Number: 13276,\n CertificateExpirationAlarmType_ConfirmedState_EffectiveDisplayName: 13277,\n CertificateExpirationAlarmType_ConfirmedState_TransitionTime: 13278,\n CertificateExpirationAlarmType_ConfirmedState_EffectiveTransitionTime: 13279,\n CertificateExpirationAlarmType_ConfirmedState_TrueState: 13280,\n CertificateExpirationAlarmType_ConfirmedState_FalseState: 13281,\n CertificateExpirationAlarmType_Acknowledge_InputArguments: 13283,\n CertificateExpirationAlarmType_Confirm_InputArguments: 13285,\n CertificateExpirationAlarmType_ActiveState: 13286,\n CertificateExpirationAlarmType_ActiveState_Id: 13287,\n CertificateExpirationAlarmType_ActiveState_Name: 13288,\n CertificateExpirationAlarmType_ActiveState_Number: 13289,\n CertificateExpirationAlarmType_ActiveState_EffectiveDisplayName: 13290,\n CertificateExpirationAlarmType_ActiveState_TransitionTime: 13291,\n CertificateExpirationAlarmType_ActiveState_EffectiveTransitionTime: 13292,\n CertificateExpirationAlarmType_ActiveState_TrueState: 13293,\n CertificateExpirationAlarmType_ActiveState_FalseState: 13294,\n CertificateExpirationAlarmType_InputNode: 13295,\n CertificateExpirationAlarmType_SuppressedState: 13296,\n CertificateExpirationAlarmType_SuppressedState_Id: 13297,\n CertificateExpirationAlarmType_SuppressedState_Name: 13298,\n CertificateExpirationAlarmType_SuppressedState_Number: 13299,\n CertificateExpirationAlarmType_SuppressedState_EffectiveDisplayName: 13300,\n CertificateExpirationAlarmType_SuppressedState_TransitionTime: 13301,\n CertificateExpirationAlarmType_SuppressedState_EffectiveTransitionTime: 13302,\n CertificateExpirationAlarmType_SuppressedState_TrueState: 13303,\n CertificateExpirationAlarmType_SuppressedState_FalseState: 13304,\n CertificateExpirationAlarmType_ShelvingState_CurrentState: 13306,\n CertificateExpirationAlarmType_ShelvingState_CurrentState_Id: 13307,\n CertificateExpirationAlarmType_ShelvingState_CurrentState_Name: 13308,\n CertificateExpirationAlarmType_ShelvingState_CurrentState_Number: 13309,\n CertificateExpirationAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 13310,\n CertificateExpirationAlarmType_ShelvingState_LastTransition: 13311,\n CertificateExpirationAlarmType_ShelvingState_LastTransition_Id: 13312,\n CertificateExpirationAlarmType_ShelvingState_LastTransition_Name: 13313,\n CertificateExpirationAlarmType_ShelvingState_LastTransition_Number: 13314,\n CertificateExpirationAlarmType_ShelvingState_LastTransition_TransitionTime: 13315,\n CertificateExpirationAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 13316,\n CertificateExpirationAlarmType_ShelvingState_UnshelveTime: 13317,\n CertificateExpirationAlarmType_ShelvingState_TimedShelve_InputArguments: 13321,\n CertificateExpirationAlarmType_SuppressedOrShelved: 13322,\n CertificateExpirationAlarmType_MaxTimeShelved: 13323,\n CertificateExpirationAlarmType_NormalState: 13324,\n CertificateExpirationAlarmType_ExpirationDate: 13325,\n CertificateExpirationAlarmType_CertificateType: 13326,\n CertificateExpirationAlarmType_Certificate: 13327,\n FileType_MimeType: 13341,\n CreateDirectoryMethodType_InputArguments: 13343,\n CreateDirectoryMethodType_OutputArguments: 13344,\n CreateFileMethodType_InputArguments: 13346,\n CreateFileMethodType_OutputArguments: 13347,\n DeleteFileMethodType_InputArguments: 13349,\n MoveOrCopyMethodType_InputArguments: 13351,\n MoveOrCopyMethodType_OutputArguments: 13352,\n FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_InputArguments: 13356,\n FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments: 13357,\n FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_InputArguments: 13359,\n FileDirectoryType_FileDirectoryName_Placeholder_CreateFile_OutputArguments: 13360,\n FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments: 13364,\n FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments: 13365,\n FileDirectoryType_FileName_Placeholder_Size: 13367,\n FileDirectoryType_FileName_Placeholder_Writable: 13368,\n FileDirectoryType_FileName_Placeholder_UserWritable: 13369,\n FileDirectoryType_FileName_Placeholder_OpenCount: 13370,\n FileDirectoryType_FileName_Placeholder_MimeType: 13371,\n FileDirectoryType_FileName_Placeholder_Open_InputArguments: 13373,\n FileDirectoryType_FileName_Placeholder_Open_OutputArguments: 13374,\n FileDirectoryType_FileName_Placeholder_Close_InputArguments: 13376,\n FileDirectoryType_FileName_Placeholder_Read_InputArguments: 13378,\n FileDirectoryType_FileName_Placeholder_Read_OutputArguments: 13379,\n FileDirectoryType_FileName_Placeholder_Write_InputArguments: 13381,\n FileDirectoryType_FileName_Placeholder_GetPosition_InputArguments: 13383,\n FileDirectoryType_FileName_Placeholder_GetPosition_OutputArguments: 13384,\n FileDirectoryType_FileName_Placeholder_SetPosition_InputArguments: 13386,\n FileDirectoryType_CreateDirectory_InputArguments: 13388,\n FileDirectoryType_CreateDirectory_OutputArguments: 13389,\n FileDirectoryType_CreateFile_InputArguments: 13391,\n FileDirectoryType_CreateFile_OutputArguments: 13392,\n FileDirectoryType_DeleteFileSystemObject_InputArguments: 13394,\n FileDirectoryType_MoveOrCopy_InputArguments: 13396,\n FileDirectoryType_MoveOrCopy_OutputArguments: 13397,\n AddressSpaceFileType_MimeType: 13398,\n NamespaceMetadataType_NamespaceFile_MimeType: 13399,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_MimeType: 13400,\n TrustListType_MimeType: 13403,\n CertificateGroupType_TrustList_Size: 13600,\n CertificateGroupType_TrustList_Writable: 13601,\n CertificateGroupType_TrustList_UserWritable: 13602,\n CertificateGroupType_TrustList_OpenCount: 13603,\n CertificateGroupType_TrustList_MimeType: 13604,\n CertificateGroupType_TrustList_Open_InputArguments: 13606,\n CertificateGroupType_TrustList_Open_OutputArguments: 13607,\n CertificateGroupType_TrustList_Close_InputArguments: 13609,\n CertificateGroupType_TrustList_Read_InputArguments: 13611,\n CertificateGroupType_TrustList_Read_OutputArguments: 13612,\n CertificateGroupType_TrustList_Write_InputArguments: 13614,\n CertificateGroupType_TrustList_GetPosition_InputArguments: 13616,\n CertificateGroupType_TrustList_GetPosition_OutputArguments: 13617,\n CertificateGroupType_TrustList_SetPosition_InputArguments: 13619,\n CertificateGroupType_TrustList_LastUpdateTime: 13620,\n CertificateGroupType_TrustList_OpenWithMasks_InputArguments: 13622,\n CertificateGroupType_TrustList_OpenWithMasks_OutputArguments: 13623,\n CertificateGroupType_TrustList_CloseAndUpdate_InputArguments: 13625,\n CertificateGroupType_TrustList_CloseAndUpdate_OutputArguments: 13626,\n CertificateGroupType_TrustList_AddCertificate_InputArguments: 13628,\n CertificateGroupType_TrustList_RemoveCertificate_InputArguments: 13630,\n CertificateGroupType_CertificateTypes: 13631,\n CertificateUpdatedAuditEventType_CertificateGroup: 13735,\n CertificateUpdatedAuditEventType_CertificateType: 13736,\n ServerConfiguration_UpdateCertificate_InputArguments: 13738,\n ServerConfiguration_UpdateCertificate_OutputArguments: 13739,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Size: 13816,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Writable: 13817,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_UserWritable: 13818,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenCount: 13819,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_MimeType: 13820,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_InputArguments: 13822,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open_OutputArguments: 13823,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close_InputArguments: 13825,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_InputArguments: 13827,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read_OutputArguments: 13828,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write_InputArguments: 13830,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_InputArguments: 13832,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments: 13833,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition_InputArguments: 13835,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_LastUpdateTime: 13836,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments: 13838,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments: 13839,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments: 13841,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments: 13842,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments: 13844,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments: 13846,\n CertificateGroupFolderType_DefaultApplicationGroup_CertificateTypes: 13847,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Size: 13850,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Writable: 13851,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_UserWritable: 13852,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenCount: 13853,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_MimeType: 13854,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_InputArguments: 13856,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open_OutputArguments: 13857,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close_InputArguments: 13859,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_InputArguments: 13861,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read_OutputArguments: 13862,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write_InputArguments: 13864,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_InputArguments: 13866,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments: 13867,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition_InputArguments: 13869,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_LastUpdateTime: 13870,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments: 13872,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments: 13873,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments: 13875,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments: 13876,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments: 13878,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments: 13880,\n CertificateGroupFolderType_DefaultHttpsGroup_CertificateTypes: 13881,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Size: 13884,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Writable: 13885,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_UserWritable: 13886,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenCount: 13887,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_MimeType: 13888,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_InputArguments: 13890,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open_OutputArguments: 13891,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close_InputArguments: 13893,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_InputArguments: 13895,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read_OutputArguments: 13896,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write_InputArguments: 13898,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments: 13900,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments: 13901,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments: 13903,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_LastUpdateTime: 13904,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments: 13906,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments: 13907,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments: 13909,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments: 13910,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments: 13912,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments: 13914,\n CertificateGroupFolderType_DefaultUserTokenGroup_CertificateTypes: 13915,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Size: 13918,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Writable: 13919,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_UserWritable: 13920,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenCount: 13921,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_MimeType: 13922,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_InputArguments: 13924,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open_OutputArguments: 13925,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close_InputArguments: 13927,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_InputArguments: 13929,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read_OutputArguments: 13930,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write_InputArguments: 13932,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_InputArguments: 13934,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition_OutputArguments: 13935,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition_InputArguments: 13937,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_LastUpdateTime: 13938,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_InputArguments: 13940,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks_OutputArguments: 13941,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_InputArguments: 13943,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate_OutputArguments: 13944,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate_InputArguments: 13946,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate_InputArguments: 13948,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_CertificateTypes: 13949,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Size: 13953,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Writable: 13954,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable: 13955,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenCount: 13956,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_MimeType: 13957,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_InputArguments: 13959,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open_OutputArguments: 13960,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close_InputArguments: 13962,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_InputArguments: 13964,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read_OutputArguments: 13965,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write_InputArguments: 13967,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_InputArguments: 13969,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition_OutputArguments: 13970,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition_InputArguments: 13972,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_LastUpdateTime: 13973,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_InputArguments: 13975,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks_OutputArguments: 13976,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments: 13978,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_OutputArguments: 13979,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate_InputArguments: 13981,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate_InputArguments: 13983,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_CertificateTypes: 13984,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Size: 13987,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Writable: 13988,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable: 13989,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount: 13990,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_MimeType: 13991,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments: 13993,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments: 13994,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments: 13996,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments: 13998,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments: 13999,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments: 14001,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments: 14003,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments: 14004,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments: 14006,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime: 14007,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments: 14009,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments: 14010,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments: 14012,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments: 14013,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments: 14015,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments: 14017,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_CertificateTypes: 14018,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Size: 14021,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable: 14022,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable: 14023,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount: 14024,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_MimeType: 14025,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments: 14027,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments: 14028,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments: 14030,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments: 14032,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments: 14033,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments: 14035,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments: 14037,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments: 14038,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments: 14040,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime: 14041,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments: 14043,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments: 14044,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments: 14046,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments: 14047,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments: 14049,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments: 14051,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_CertificateTypes: 14052,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Size: 14090,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Writable: 14091,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_UserWritable: 14092,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenCount: 14093,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_MimeType: 14094,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_InputArguments: 14096,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open_OutputArguments: 14097,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close_InputArguments: 14099,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_InputArguments: 14101,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read_OutputArguments: 14102,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write_InputArguments: 14104,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_InputArguments: 14106,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition_OutputArguments: 14107,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition_InputArguments: 14109,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_LastUpdateTime: 14110,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_InputArguments: 14112,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks_OutputArguments: 14113,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_InputArguments: 14115,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate_OutputArguments: 14116,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate_InputArguments: 14118,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate_InputArguments: 14120,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_CertificateTypes: 14121,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Size: 14124,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Writable: 14125,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_UserWritable: 14126,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenCount: 14127,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_MimeType: 14128,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_InputArguments: 14130,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open_OutputArguments: 14131,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close_InputArguments: 14133,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_InputArguments: 14135,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read_OutputArguments: 14136,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write_InputArguments: 14138,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_InputArguments: 14140,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition_OutputArguments: 14141,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition_InputArguments: 14143,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_LastUpdateTime: 14144,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_InputArguments: 14146,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks_OutputArguments: 14147,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_InputArguments: 14149,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate_OutputArguments: 14150,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate_InputArguments: 14152,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate_InputArguments: 14154,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_CertificateTypes: 14155,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Writable: 14157,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_UserWritable: 14158,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_MimeType: 14159,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate_InputArguments: 14160,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_CertificateTypes: 14161,\n AuditCreateSessionEventType_SessionId: 14413,\n AuditUrlMismatchEventType_SessionId: 14414,\n Server_ServerRedundancy_ServerNetworkGroups: 14415,\n StructureType_EnumStrings: 14528,\n OpcUa_XmlSchema_EnumField: 14826,\n OpcUa_XmlSchema_EnumField_DataTypeVersion: 14827,\n OpcUa_XmlSchema_EnumField_DictionaryFragment: 14828,\n OpcUa_XmlSchema_KeyValuePair: 14829,\n OpcUa_XmlSchema_KeyValuePair_DataTypeVersion: 14830,\n OpcUa_XmlSchema_KeyValuePair_DictionaryFragment: 14831,\n OpcUa_BinarySchema_EnumField: 14870,\n OpcUa_BinarySchema_EnumField_DataTypeVersion: 14871,\n OpcUa_BinarySchema_EnumField_DictionaryFragment: 14872,\n OpcUa_BinarySchema_KeyValuePair: 14873,\n OpcUa_BinarySchema_KeyValuePair_DataTypeVersion: 14874,\n OpcUa_BinarySchema_KeyValuePair_DictionaryFragment: 14875,\n CertificateExpirationAlarmType_ExpirationLimit: 14900,\n DataTypeDictionaryType_Deprecated: 15001,\n MaxCharacters: 15002,\n ServerType_UrisVersion: 15003,\n Server_UrisVersion: 15004,\n AuditConditionResetEventType_EventId: 15014,\n AuditConditionResetEventType_EventType: 15015,\n AuditConditionResetEventType_SourceNode: 15016,\n AuditConditionResetEventType_SourceName: 15017,\n AuditConditionResetEventType_Time: 15018,\n AuditConditionResetEventType_ReceiveTime: 15019,\n AuditConditionResetEventType_LocalTime: 15020,\n AuditConditionResetEventType_Message: 15021,\n AuditConditionResetEventType_Severity: 15022,\n AuditConditionResetEventType_ActionTimeStamp: 15023,\n AuditConditionResetEventType_Status: 15024,\n AuditConditionResetEventType_ServerId: 15025,\n AuditConditionResetEventType_ClientAuditEntryId: 15026,\n AuditConditionResetEventType_ClientUserId: 15027,\n AuditConditionResetEventType_MethodId: 15028,\n AuditConditionResetEventType_InputArguments: 15029,\n PermissionType_OptionSetValues: 15030,\n AccessLevelType_OptionSetValues: 15032,\n EventNotifierType_OptionSetValues: 15034,\n AccessRestrictionType_OptionSetValues: 15035,\n AttributeWriteMask_OptionSetValues: 15036,\n OpcUa_BinarySchema_Deprecated: 15037,\n ProgramStateMachineType_ProgramDiagnostics_LastMethodInputValues: 15038,\n OpcUa_XmlSchema_Deprecated: 15039,\n ProgramStateMachineType_ProgramDiagnostics_LastMethodOutputValues: 15040,\n ProgramDiagnostic2Type_CreateSessionId: 15384,\n ProgramDiagnostic2Type_CreateClientName: 15385,\n ProgramDiagnostic2Type_InvocationCreationTime: 15386,\n ProgramDiagnostic2Type_LastTransitionTime: 15387,\n ProgramDiagnostic2Type_LastMethodCall: 15388,\n ProgramDiagnostic2Type_LastMethodSessionId: 15389,\n ProgramDiagnostic2Type_LastMethodInputArguments: 15390,\n ProgramDiagnostic2Type_LastMethodOutputArguments: 15391,\n ProgramDiagnostic2Type_LastMethodInputValues: 15392,\n ProgramDiagnostic2Type_LastMethodOutputValues: 15393,\n ProgramDiagnostic2Type_LastMethodCallTime: 15394,\n ProgramDiagnostic2Type_LastMethodReturnStatus: 15395,\n OpcUa_BinarySchema_ProgramDiagnostic2DataType: 15398,\n OpcUa_BinarySchema_ProgramDiagnostic2DataType_DataTypeVersion: 15399,\n OpcUa_BinarySchema_ProgramDiagnostic2DataType_DictionaryFragment: 15400,\n OpcUa_XmlSchema_ProgramDiagnostic2DataType: 15402,\n OpcUa_XmlSchema_ProgramDiagnostic2DataType_DataTypeVersion: 15403,\n OpcUa_XmlSchema_ProgramDiagnostic2DataType_DictionaryFragment: 15404,\n AccessLevelExType_OptionSetValues: 15407,\n RoleSetType_RoleName_Placeholder_ApplicationsExclude: 15408,\n RoleSetType_RoleName_Placeholder_EndpointsExclude: 15409,\n RoleType_ApplicationsExclude: 15410,\n RoleType_EndpointsExclude: 15411,\n WellKnownRole_Anonymous_ApplicationsExclude: 15412,\n WellKnownRole_Anonymous_EndpointsExclude: 15413,\n WellKnownRole_AuthenticatedUser_ApplicationsExclude: 15414,\n WellKnownRole_AuthenticatedUser_EndpointsExclude: 15415,\n WellKnownRole_Observer_ApplicationsExclude: 15416,\n WellKnownRole_Observer_EndpointsExclude: 15417,\n WellKnownRole_Operator_ApplicationsExclude: 15418,\n WellKnownRole_Operator_EndpointsExclude: 15423,\n WellKnownRole_Engineer_ApplicationsExclude: 15424,\n WellKnownRole_Engineer_EndpointsExclude: 15425,\n WellKnownRole_Supervisor_ApplicationsExclude: 15426,\n WellKnownRole_Supervisor_EndpointsExclude: 15427,\n WellKnownRole_ConfigureAdmin_ApplicationsExclude: 15428,\n WellKnownRole_ConfigureAdmin_EndpointsExclude: 15429,\n WellKnownRole_SecurityAdmin_ApplicationsExclude: 15430,\n WellKnownRole_SecurityAdmin_EndpointsExclude: 15527,\n RoleSetType_RoleName_Placeholder_AddIdentity_InputArguments: 15613,\n RoleSetType_RoleName_Placeholder_RemoveIdentity_InputArguments: 15615,\n RoleType_AddIdentity_InputArguments: 15625,\n RoleType_RemoveIdentity_InputArguments: 15627,\n IdentityCriteriaType_EnumValues: 15633,\n AddIdentityMethodType_InputArguments: 15637,\n RemoveIdentityMethodType_InputArguments: 15639,\n WellKnownRole_Anonymous_AddIdentity_InputArguments: 15649,\n WellKnownRole_Anonymous_RemoveIdentity_InputArguments: 15651,\n WellKnownRole_AuthenticatedUser_AddIdentity_InputArguments: 15661,\n WellKnownRole_AuthenticatedUser_RemoveIdentity_InputArguments: 15663,\n WellKnownRole_Observer_AddIdentity_InputArguments: 15673,\n WellKnownRole_Observer_RemoveIdentity_InputArguments: 15675,\n WellKnownRole_Operator_AddIdentity_InputArguments: 15685,\n WellKnownRole_Operator_RemoveIdentity_InputArguments: 15687,\n WellKnownRole_Supervisor_AddIdentity_InputArguments: 15697,\n WellKnownRole_Supervisor_RemoveIdentity_InputArguments: 15699,\n WellKnownRole_SecurityAdmin_AddIdentity_InputArguments: 15709,\n WellKnownRole_SecurityAdmin_RemoveIdentity_InputArguments: 15711,\n WellKnownRole_ConfigureAdmin_AddIdentity_InputArguments: 15721,\n WellKnownRole_ConfigureAdmin_RemoveIdentity_InputArguments: 15723,\n OpcUa_XmlSchema_IdentityMappingRuleType: 15730,\n OpcUa_XmlSchema_IdentityMappingRuleType_DataTypeVersion: 15731,\n OpcUa_XmlSchema_IdentityMappingRuleType_DictionaryFragment: 15732,\n OpcUa_BinarySchema_EndpointType: 15734,\n OpcUa_BinarySchema_EndpointType_DataTypeVersion: 15735,\n OpcUa_BinarySchema_EndpointType_DictionaryFragment: 15737,\n OpcUa_BinarySchema_IdentityMappingRuleType: 15738,\n OpcUa_BinarySchema_IdentityMappingRuleType_DataTypeVersion: 15739,\n OpcUa_BinarySchema_IdentityMappingRuleType_DictionaryFragment: 15740,\n TemporaryFileTransferType_ClientProcessingTimeout: 15745,\n TemporaryFileTransferType_GenerateFileForRead_InputArguments: 15747,\n TemporaryFileTransferType_GenerateFileForRead_OutputArguments: 15748,\n TemporaryFileTransferType_GenerateFileForWrite_OutputArguments: 15750,\n TemporaryFileTransferType_CloseAndCommit_InputArguments: 15752,\n TemporaryFileTransferType_CloseAndCommit_OutputArguments: 15753,\n TemporaryFileTransferType_TransferState_Placeholder_CurrentState: 15755,\n TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Id: 15756,\n TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Name: 15757,\n TemporaryFileTransferType_TransferState_Placeholder_CurrentState_Number: 15758,\n TemporaryFileTransferType_TransferState_Placeholder_CurrentState_EffectiveDisplayName: 15759,\n TemporaryFileTransferType_TransferState_Placeholder_LastTransition: 15760,\n TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Id: 15761,\n TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Name: 15762,\n TemporaryFileTransferType_TransferState_Placeholder_LastTransition_Number: 15763,\n TemporaryFileTransferType_TransferState_Placeholder_LastTransition_TransitionTime: 15764,\n TemporaryFileTransferType_TransferState_Placeholder_LastTransition_EffectiveTransitionTime: 15765,\n GenerateFileForReadMethodType_InputArguments: 15796,\n GenerateFileForReadMethodType_OutputArguments: 15797,\n GenerateFileForWriteMethodType_OutputArguments: 15799,\n CloseAndCommitMethodType_InputArguments: 15801,\n CloseAndCommitMethodType_OutputArguments: 15802,\n FileTransferStateMachineType_CurrentState: 15804,\n FileTransferStateMachineType_CurrentState_Id: 15805,\n FileTransferStateMachineType_CurrentState_Name: 15806,\n FileTransferStateMachineType_CurrentState_Number: 15807,\n FileTransferStateMachineType_CurrentState_EffectiveDisplayName: 15808,\n FileTransferStateMachineType_LastTransition: 15809,\n FileTransferStateMachineType_LastTransition_Id: 15810,\n FileTransferStateMachineType_LastTransition_Name: 15811,\n FileTransferStateMachineType_LastTransition_Number: 15812,\n FileTransferStateMachineType_LastTransition_TransitionTime: 15813,\n FileTransferStateMachineType_LastTransition_EffectiveTransitionTime: 15814,\n FileTransferStateMachineType_Idle_StateNumber: 15816,\n FileTransferStateMachineType_ReadPrepare_StateNumber: 15818,\n FileTransferStateMachineType_ReadTransfer_StateNumber: 15820,\n FileTransferStateMachineType_ApplyWrite_StateNumber: 15822,\n FileTransferStateMachineType_Error_StateNumber: 15824,\n FileTransferStateMachineType_IdleToReadPrepare_TransitionNumber: 15826,\n FileTransferStateMachineType_ReadPrepareToReadTransfer_TransitionNumber: 15828,\n FileTransferStateMachineType_ReadTransferToIdle_TransitionNumber: 15830,\n FileTransferStateMachineType_IdleToApplyWrite_TransitionNumber: 15832,\n FileTransferStateMachineType_ApplyWriteToIdle_TransitionNumber: 15834,\n FileTransferStateMachineType_ReadPrepareToError_TransitionNumber: 15836,\n FileTransferStateMachineType_ReadTransferToError_TransitionNumber: 15838,\n FileTransferStateMachineType_ApplyWriteToError_TransitionNumber: 15840,\n FileTransferStateMachineType_ErrorToIdle_TransitionNumber: 15842,\n OPCUANamespaceMetadata_NamespaceUri: 15958,\n OPCUANamespaceMetadata_NamespaceVersion: 15959,\n OPCUANamespaceMetadata_NamespacePublicationDate: 15960,\n OPCUANamespaceMetadata_IsNamespaceSubset: 15961,\n OPCUANamespaceMetadata_StaticNodeIdTypes: 15962,\n OPCUANamespaceMetadata_StaticNumericNodeIdRange: 15963,\n OPCUANamespaceMetadata_StaticStringNodeIdPattern: 15964,\n OPCUANamespaceMetadata_NamespaceFile_Size: 15966,\n OPCUANamespaceMetadata_NamespaceFile_Writable: 15967,\n OPCUANamespaceMetadata_NamespaceFile_UserWritable: 15968,\n OPCUANamespaceMetadata_NamespaceFile_OpenCount: 15969,\n OPCUANamespaceMetadata_NamespaceFile_MimeType: 15970,\n OPCUANamespaceMetadata_NamespaceFile_Open_InputArguments: 15972,\n OPCUANamespaceMetadata_NamespaceFile_Open_OutputArguments: 15973,\n OPCUANamespaceMetadata_NamespaceFile_Close_InputArguments: 15975,\n OPCUANamespaceMetadata_NamespaceFile_Read_InputArguments: 15977,\n OPCUANamespaceMetadata_NamespaceFile_Read_OutputArguments: 15978,\n OPCUANamespaceMetadata_NamespaceFile_Write_InputArguments: 15980,\n OPCUANamespaceMetadata_NamespaceFile_GetPosition_InputArguments: 15982,\n OPCUANamespaceMetadata_NamespaceFile_GetPosition_OutputArguments: 15983,\n OPCUANamespaceMetadata_NamespaceFile_SetPosition_InputArguments: 15985,\n RoleSetType_AddRole_InputArguments: 15998,\n RoleSetType_AddRole_OutputArguments: 15999,\n RoleSetType_RemoveRole_InputArguments: 16001,\n AddRoleMethodType_InputArguments: 16003,\n AddRoleMethodType_OutputArguments: 16004,\n RemoveRoleMethodType_InputArguments: 16006,\n OpcUa_XmlSchema_EndpointType: 16024,\n OpcUa_XmlSchema_EndpointType_DataTypeVersion: 16025,\n OpcUa_XmlSchema_EndpointType_DictionaryFragment: 16026,\n WellKnownRole_Engineer_AddIdentity_InputArguments: 16042,\n WellKnownRole_Engineer_RemoveIdentity_InputArguments: 16044,\n OpcUa_XmlSchema_RolePermissionType: 16127,\n OpcUa_XmlSchema_RolePermissionType_DataTypeVersion: 16128,\n OpcUa_XmlSchema_RolePermissionType_DictionaryFragment: 16129,\n OpcUa_BinarySchema_RolePermissionType: 16131,\n OpcUa_BinarySchema_RolePermissionType_DataTypeVersion: 16132,\n OpcUa_BinarySchema_RolePermissionType_DictionaryFragment: 16133,\n OPCUANamespaceMetadata_DefaultRolePermissions: 16134,\n OPCUANamespaceMetadata_DefaultUserRolePermissions: 16135,\n OPCUANamespaceMetadata_DefaultAccessRestrictions: 16136,\n NamespaceMetadataType_DefaultRolePermissions: 16137,\n NamespaceMetadataType_DefaultUserRolePermissions: 16138,\n NamespaceMetadataType_DefaultAccessRestrictions: 16139,\n NamespacesType_NamespaceIdentifier_Placeholder_DefaultRolePermissions: 16140,\n NamespacesType_NamespaceIdentifier_Placeholder_DefaultUserRolePermissions: 16141,\n NamespacesType_NamespaceIdentifier_Placeholder_DefaultAccessRestrictions: 16142,\n RoleSetType_RoleName_Placeholder_Identities: 16162,\n RoleSetType_RoleName_Placeholder_Applications: 16163,\n RoleSetType_RoleName_Placeholder_Endpoints: 16164,\n RoleSetType_RoleName_Placeholder_AddApplication_InputArguments: 16166,\n RoleSetType_RoleName_Placeholder_RemoveApplication_InputArguments: 16168,\n RoleSetType_RoleName_Placeholder_AddEndpoint_InputArguments: 16170,\n RoleSetType_RoleName_Placeholder_RemoveEndpoint_InputArguments: 16172,\n RoleType_Identities: 16173,\n RoleType_Applications: 16174,\n RoleType_Endpoints: 16175,\n RoleType_AddApplication_InputArguments: 16177,\n RoleType_RemoveApplication_InputArguments: 16179,\n RoleType_AddEndpoint_InputArguments: 16181,\n RoleType_RemoveEndpoint_InputArguments: 16183,\n AddApplicationMethodType_InputArguments: 16185,\n RemoveApplicationMethodType_InputArguments: 16187,\n AddEndpointMethodType_InputArguments: 16189,\n RemoveEndpointMethodType_InputArguments: 16191,\n WellKnownRole_Anonymous_Identities: 16192,\n WellKnownRole_Anonymous_Applications: 16193,\n WellKnownRole_Anonymous_Endpoints: 16194,\n WellKnownRole_Anonymous_AddApplication_InputArguments: 16196,\n WellKnownRole_Anonymous_RemoveApplication_InputArguments: 16198,\n WellKnownRole_Anonymous_AddEndpoint_InputArguments: 16200,\n WellKnownRole_Anonymous_RemoveEndpoint_InputArguments: 16202,\n WellKnownRole_AuthenticatedUser_Identities: 16203,\n WellKnownRole_AuthenticatedUser_Applications: 16204,\n WellKnownRole_AuthenticatedUser_Endpoints: 16205,\n WellKnownRole_AuthenticatedUser_AddApplication_InputArguments: 16207,\n WellKnownRole_AuthenticatedUser_RemoveApplication_InputArguments: 16209,\n WellKnownRole_AuthenticatedUser_AddEndpoint_InputArguments: 16211,\n WellKnownRole_AuthenticatedUser_RemoveEndpoint_InputArguments: 16213,\n WellKnownRole_Observer_Identities: 16214,\n WellKnownRole_Observer_Applications: 16215,\n WellKnownRole_Observer_Endpoints: 16216,\n WellKnownRole_Observer_AddApplication_InputArguments: 16218,\n WellKnownRole_Observer_RemoveApplication_InputArguments: 16220,\n WellKnownRole_Observer_AddEndpoint_InputArguments: 16222,\n WellKnownRole_Observer_RemoveEndpoint_InputArguments: 16224,\n WellKnownRole_Operator_Identities: 16225,\n WellKnownRole_Operator_Applications: 16226,\n WellKnownRole_Operator_Endpoints: 16227,\n WellKnownRole_Operator_AddApplication_InputArguments: 16229,\n WellKnownRole_Operator_RemoveApplication_InputArguments: 16231,\n WellKnownRole_Operator_AddEndpoint_InputArguments: 16233,\n WellKnownRole_Operator_RemoveEndpoint_InputArguments: 16235,\n WellKnownRole_Engineer_Identities: 16236,\n WellKnownRole_Engineer_Applications: 16237,\n WellKnownRole_Engineer_Endpoints: 16238,\n WellKnownRole_Engineer_AddApplication_InputArguments: 16240,\n WellKnownRole_Engineer_RemoveApplication_InputArguments: 16242,\n WellKnownRole_Engineer_AddEndpoint_InputArguments: 16244,\n WellKnownRole_Engineer_RemoveEndpoint_InputArguments: 16246,\n WellKnownRole_Supervisor_Identities: 16247,\n WellKnownRole_Supervisor_Applications: 16248,\n WellKnownRole_Supervisor_Endpoints: 16249,\n WellKnownRole_Supervisor_AddApplication_InputArguments: 16251,\n WellKnownRole_Supervisor_RemoveApplication_InputArguments: 16253,\n WellKnownRole_Supervisor_AddEndpoint_InputArguments: 16255,\n WellKnownRole_Supervisor_RemoveEndpoint_InputArguments: 16257,\n WellKnownRole_SecurityAdmin_Identities: 16258,\n WellKnownRole_SecurityAdmin_Applications: 16259,\n WellKnownRole_SecurityAdmin_Endpoints: 16260,\n WellKnownRole_SecurityAdmin_AddApplication_InputArguments: 16262,\n WellKnownRole_SecurityAdmin_RemoveApplication_InputArguments: 16264,\n WellKnownRole_SecurityAdmin_AddEndpoint_InputArguments: 16266,\n WellKnownRole_SecurityAdmin_RemoveEndpoint_InputArguments: 16268,\n WellKnownRole_ConfigureAdmin_Identities: 16269,\n WellKnownRole_ConfigureAdmin_Applications: 16270,\n WellKnownRole_ConfigureAdmin_Endpoints: 16271,\n WellKnownRole_ConfigureAdmin_AddApplication_InputArguments: 16273,\n WellKnownRole_ConfigureAdmin_RemoveApplication_InputArguments: 16275,\n WellKnownRole_ConfigureAdmin_AddEndpoint_InputArguments: 16277,\n WellKnownRole_ConfigureAdmin_RemoveEndpoint_InputArguments: 16279,\n ServerType_ServerCapabilities_Roles_AddRole_InputArguments: 16291,\n ServerType_ServerCapabilities_Roles_AddRole_OutputArguments: 16292,\n ServerType_ServerCapabilities_Roles_RemoveRole_InputArguments: 16294,\n ServerCapabilitiesType_Roles_AddRole_InputArguments: 16297,\n ServerCapabilitiesType_Roles_AddRole_OutputArguments: 16298,\n ServerCapabilitiesType_Roles_RemoveRole_InputArguments: 16300,\n Server_ServerCapabilities_Roles_AddRole_InputArguments: 16302,\n Server_ServerCapabilities_Roles_AddRole_OutputArguments: 16303,\n Server_ServerCapabilities_Roles_RemoveRole_InputArguments: 16305,\n DefaultInputValues: 16306,\n SelectionListType_RestrictToList: 16312,\n Server_CurrentTimeZone: 16313,\n FileSystem_FileDirectoryName_Placeholder_CreateDirectory_InputArguments: 16317,\n FileSystem_FileDirectoryName_Placeholder_CreateDirectory_OutputArguments: 16318,\n FileSystem_FileDirectoryName_Placeholder_CreateFile_InputArguments: 16320,\n FileSystem_FileDirectoryName_Placeholder_CreateFile_OutputArguments: 16321,\n FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_InputArguments: 16325,\n FileSystem_FileDirectoryName_Placeholder_MoveOrCopy_OutputArguments: 16326,\n FileSystem_FileName_Placeholder_Size: 16328,\n FileSystem_FileName_Placeholder_Writable: 16329,\n FileSystem_FileName_Placeholder_UserWritable: 16330,\n FileSystem_FileName_Placeholder_OpenCount: 16331,\n FileSystem_FileName_Placeholder_MimeType: 16332,\n FileSystem_FileName_Placeholder_Open_InputArguments: 16334,\n FileSystem_FileName_Placeholder_Open_OutputArguments: 16335,\n FileSystem_FileName_Placeholder_Close_InputArguments: 16337,\n FileSystem_FileName_Placeholder_Read_InputArguments: 16339,\n FileSystem_FileName_Placeholder_Read_OutputArguments: 16340,\n FileSystem_FileName_Placeholder_Write_InputArguments: 16342,\n FileSystem_FileName_Placeholder_GetPosition_InputArguments: 16344,\n FileSystem_FileName_Placeholder_GetPosition_OutputArguments: 16345,\n FileSystem_FileName_Placeholder_SetPosition_InputArguments: 16347,\n FileSystem_CreateDirectory_InputArguments: 16349,\n FileSystem_CreateDirectory_OutputArguments: 16350,\n FileSystem_CreateFile_InputArguments: 16352,\n FileSystem_CreateFile_OutputArguments: 16353,\n FileSystem_DeleteFileSystemObject_InputArguments: 16355,\n FileSystem_MoveOrCopy_InputArguments: 16357,\n FileSystem_MoveOrCopy_OutputArguments: 16358,\n TemporaryFileTransferType_GenerateFileForWrite_InputArguments: 16359,\n GenerateFileForWriteMethodType_InputArguments: 16360,\n ConditionType_ConditionSubClassId: 16363,\n ConditionType_ConditionSubClassName: 16364,\n DialogConditionType_ConditionSubClassId: 16365,\n DialogConditionType_ConditionSubClassName: 16366,\n AcknowledgeableConditionType_ConditionSubClassId: 16367,\n AcknowledgeableConditionType_ConditionSubClassName: 16368,\n AlarmConditionType_ConditionSubClassId: 16369,\n AlarmConditionType_ConditionSubClassName: 16370,\n AlarmConditionType_OutOfServiceState: 16371,\n AlarmConditionType_OutOfServiceState_Id: 16372,\n AlarmConditionType_OutOfServiceState_Name: 16373,\n AlarmConditionType_OutOfServiceState_Number: 16374,\n AlarmConditionType_OutOfServiceState_EffectiveDisplayName: 16375,\n AlarmConditionType_OutOfServiceState_TransitionTime: 16376,\n AlarmConditionType_OutOfServiceState_EffectiveTransitionTime: 16377,\n AlarmConditionType_OutOfServiceState_TrueState: 16378,\n AlarmConditionType_OutOfServiceState_FalseState: 16379,\n AlarmConditionType_SilenceState: 16380,\n AlarmConditionType_SilenceState_Id: 16381,\n AlarmConditionType_SilenceState_Name: 16382,\n AlarmConditionType_SilenceState_Number: 16383,\n AlarmConditionType_SilenceState_EffectiveDisplayName: 16384,\n AlarmConditionType_SilenceState_TransitionTime: 16385,\n AlarmConditionType_SilenceState_EffectiveTransitionTime: 16386,\n AlarmConditionType_SilenceState_TrueState: 16387,\n AlarmConditionType_SilenceState_FalseState: 16388,\n AlarmConditionType_AudibleEnabled: 16389,\n AlarmConditionType_AudibleSound: 16390,\n AlarmConditionType_OnDelay: 16395,\n AlarmConditionType_OffDelay: 16396,\n AlarmConditionType_FirstInGroupFlag: 16397,\n AlarmConditionType_ReAlarmTime: 16400,\n AlarmConditionType_ReAlarmRepeatCount: 16401,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EventId: 16407,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EventType: 16408,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SourceNode: 16409,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SourceName: 16410,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Time: 16411,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ReceiveTime: 16412,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LocalTime: 16413,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Message: 16414,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Severity: 16415,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassId: 16416,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionClassName: 16417,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionSubClassId: 16418,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionSubClassName: 16419,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConditionName: 16420,\n AlarmGroupType_AlarmConditionInstance_Placeholder_BranchId: 16421,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Retain: 16422,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState: 16423,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_Id: 16424,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_Name: 16425,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_Number: 16426,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_EffectiveDisplayName: 16427,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_TransitionTime: 16428,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_EffectiveTransitionTime: 16429,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_TrueState: 16430,\n AlarmGroupType_AlarmConditionInstance_Placeholder_EnabledState_FalseState: 16431,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Quality: 16432,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Quality_SourceTimestamp: 16433,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity: 16434,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LastSeverity_SourceTimestamp: 16435,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Comment: 16436,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Comment_SourceTimestamp: 16437,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ClientUserId: 16438,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment_InputArguments: 16442,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState: 16443,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_Id: 16444,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_Name: 16445,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_Number: 16446,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_EffectiveDisplayName: 16447,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_TransitionTime: 16448,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_EffectiveTransitionTime: 16449,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_TrueState: 16450,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AckedState_FalseState: 16451,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState: 16452,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_Id: 16453,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_Name: 16454,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_Number: 16455,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_EffectiveDisplayName: 16456,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_TransitionTime: 16457,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_EffectiveTransitionTime: 16458,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_TrueState: 16459,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ConfirmedState_FalseState: 16460,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge_InputArguments: 16462,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Confirm_InputArguments: 16464,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState: 16465,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_Id: 16466,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_Name: 16467,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_Number: 16468,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_EffectiveDisplayName: 16469,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_TransitionTime: 16470,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_EffectiveTransitionTime: 16471,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_TrueState: 16472,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ActiveState_FalseState: 16473,\n AlarmGroupType_AlarmConditionInstance_Placeholder_InputNode: 16474,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState: 16475,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_Id: 16476,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_Name: 16477,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_Number: 16478,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_EffectiveDisplayName: 16479,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_TransitionTime: 16480,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_EffectiveTransitionTime: 16481,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_TrueState: 16482,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedState_FalseState: 16483,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState: 16484,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_Id: 16485,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_Name: 16486,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_Number: 16487,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_EffectiveDisplayName: 16488,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_TransitionTime: 16489,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_EffectiveTransitionTime: 16490,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_TrueState: 16491,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OutOfServiceState_FalseState: 16492,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState: 16493,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_Id: 16494,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_Name: 16495,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_Number: 16496,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_EffectiveDisplayName: 16497,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_TransitionTime: 16498,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_EffectiveTransitionTime: 16499,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_TrueState: 16500,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SilenceState_FalseState: 16501,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState: 16503,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_Id: 16504,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_Name: 16505,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_Number: 16506,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_CurrentState_EffectiveDisplayName: 16507,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition: 16508,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_Id: 16509,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_Name: 16510,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_Number: 16511,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_TransitionTime: 16512,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_LastTransition_EffectiveTransitionTime: 16513,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_UnshelveTime: 16514,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve_InputArguments: 16518,\n AlarmGroupType_AlarmConditionInstance_Placeholder_SuppressedOrShelved: 16519,\n AlarmGroupType_AlarmConditionInstance_Placeholder_MaxTimeShelved: 16520,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleEnabled: 16521,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleSound: 16522,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OnDelay: 16527,\n AlarmGroupType_AlarmConditionInstance_Placeholder_OffDelay: 16528,\n AlarmGroupType_AlarmConditionInstance_Placeholder_FirstInGroupFlag: 16529,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ReAlarmTime: 16531,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ReAlarmRepeatCount: 16532,\n LimitAlarmType_ConditionSubClassId: 16536,\n LimitAlarmType_ConditionSubClassName: 16537,\n LimitAlarmType_OutOfServiceState: 16538,\n LimitAlarmType_OutOfServiceState_Id: 16539,\n LimitAlarmType_OutOfServiceState_Name: 16540,\n LimitAlarmType_OutOfServiceState_Number: 16541,\n LimitAlarmType_OutOfServiceState_EffectiveDisplayName: 16542,\n LimitAlarmType_OutOfServiceState_TransitionTime: 16543,\n LimitAlarmType_OutOfServiceState_EffectiveTransitionTime: 16544,\n LimitAlarmType_OutOfServiceState_TrueState: 16545,\n LimitAlarmType_OutOfServiceState_FalseState: 16546,\n LimitAlarmType_SilenceState: 16547,\n LimitAlarmType_SilenceState_Id: 16548,\n LimitAlarmType_SilenceState_Name: 16549,\n LimitAlarmType_SilenceState_Number: 16550,\n LimitAlarmType_SilenceState_EffectiveDisplayName: 16551,\n LimitAlarmType_SilenceState_TransitionTime: 16552,\n LimitAlarmType_SilenceState_EffectiveTransitionTime: 16553,\n LimitAlarmType_SilenceState_TrueState: 16554,\n LimitAlarmType_SilenceState_FalseState: 16555,\n LimitAlarmType_AudibleEnabled: 16556,\n LimitAlarmType_AudibleSound: 16557,\n LimitAlarmType_OnDelay: 16562,\n LimitAlarmType_OffDelay: 16563,\n LimitAlarmType_FirstInGroupFlag: 16564,\n LimitAlarmType_ReAlarmTime: 16567,\n LimitAlarmType_ReAlarmRepeatCount: 16568,\n LimitAlarmType_BaseHighHighLimit: 16572,\n LimitAlarmType_BaseHighLimit: 16573,\n LimitAlarmType_BaseLowLimit: 16574,\n LimitAlarmType_BaseLowLowLimit: 16575,\n ExclusiveLimitAlarmType_ConditionSubClassId: 16576,\n ExclusiveLimitAlarmType_ConditionSubClassName: 16577,\n ExclusiveLimitAlarmType_OutOfServiceState: 16578,\n ExclusiveLimitAlarmType_OutOfServiceState_Id: 16579,\n ExclusiveLimitAlarmType_OutOfServiceState_Name: 16580,\n ExclusiveLimitAlarmType_OutOfServiceState_Number: 16581,\n ExclusiveLimitAlarmType_OutOfServiceState_EffectiveDisplayName: 16582,\n ExclusiveLimitAlarmType_OutOfServiceState_TransitionTime: 16583,\n ExclusiveLimitAlarmType_OutOfServiceState_EffectiveTransitionTime: 16584,\n ExclusiveLimitAlarmType_OutOfServiceState_TrueState: 16585,\n ExclusiveLimitAlarmType_OutOfServiceState_FalseState: 16586,\n ExclusiveLimitAlarmType_SilenceState: 16587,\n ExclusiveLimitAlarmType_SilenceState_Id: 16588,\n ExclusiveLimitAlarmType_SilenceState_Name: 16589,\n ExclusiveLimitAlarmType_SilenceState_Number: 16590,\n ExclusiveLimitAlarmType_SilenceState_EffectiveDisplayName: 16591,\n ExclusiveLimitAlarmType_SilenceState_TransitionTime: 16592,\n ExclusiveLimitAlarmType_SilenceState_EffectiveTransitionTime: 16593,\n ExclusiveLimitAlarmType_SilenceState_TrueState: 16594,\n ExclusiveLimitAlarmType_SilenceState_FalseState: 16595,\n ExclusiveLimitAlarmType_AudibleEnabled: 16596,\n ExclusiveLimitAlarmType_AudibleSound: 16597,\n ExclusiveLimitAlarmType_OnDelay: 16602,\n ExclusiveLimitAlarmType_OffDelay: 16603,\n ExclusiveLimitAlarmType_FirstInGroupFlag: 16604,\n ExclusiveLimitAlarmType_ReAlarmTime: 16607,\n ExclusiveLimitAlarmType_ReAlarmRepeatCount: 16608,\n ExclusiveLimitAlarmType_BaseHighHighLimit: 16612,\n ExclusiveLimitAlarmType_BaseHighLimit: 16613,\n ExclusiveLimitAlarmType_BaseLowLimit: 16614,\n ExclusiveLimitAlarmType_BaseLowLowLimit: 16615,\n NonExclusiveLimitAlarmType_ConditionSubClassId: 16616,\n NonExclusiveLimitAlarmType_ConditionSubClassName: 16617,\n NonExclusiveLimitAlarmType_OutOfServiceState: 16618,\n NonExclusiveLimitAlarmType_OutOfServiceState_Id: 16619,\n NonExclusiveLimitAlarmType_OutOfServiceState_Name: 16620,\n NonExclusiveLimitAlarmType_OutOfServiceState_Number: 16621,\n NonExclusiveLimitAlarmType_OutOfServiceState_EffectiveDisplayName: 16622,\n NonExclusiveLimitAlarmType_OutOfServiceState_TransitionTime: 16623,\n NonExclusiveLimitAlarmType_OutOfServiceState_EffectiveTransitionTime: 16624,\n NonExclusiveLimitAlarmType_OutOfServiceState_TrueState: 16625,\n NonExclusiveLimitAlarmType_OutOfServiceState_FalseState: 16626,\n NonExclusiveLimitAlarmType_SilenceState: 16627,\n NonExclusiveLimitAlarmType_SilenceState_Id: 16628,\n NonExclusiveLimitAlarmType_SilenceState_Name: 16629,\n NonExclusiveLimitAlarmType_SilenceState_Number: 16630,\n NonExclusiveLimitAlarmType_SilenceState_EffectiveDisplayName: 16631,\n NonExclusiveLimitAlarmType_SilenceState_TransitionTime: 16632,\n NonExclusiveLimitAlarmType_SilenceState_EffectiveTransitionTime: 16633,\n NonExclusiveLimitAlarmType_SilenceState_TrueState: 16634,\n NonExclusiveLimitAlarmType_SilenceState_FalseState: 16635,\n NonExclusiveLimitAlarmType_AudibleEnabled: 16636,\n NonExclusiveLimitAlarmType_AudibleSound: 16637,\n NonExclusiveLimitAlarmType_OnDelay: 16642,\n NonExclusiveLimitAlarmType_OffDelay: 16643,\n NonExclusiveLimitAlarmType_FirstInGroupFlag: 16644,\n NonExclusiveLimitAlarmType_ReAlarmTime: 16647,\n NonExclusiveLimitAlarmType_ReAlarmRepeatCount: 16648,\n NonExclusiveLimitAlarmType_BaseHighHighLimit: 16652,\n NonExclusiveLimitAlarmType_BaseHighLimit: 16653,\n NonExclusiveLimitAlarmType_BaseLowLimit: 16654,\n NonExclusiveLimitAlarmType_BaseLowLowLimit: 16655,\n NonExclusiveLevelAlarmType_ConditionSubClassId: 16656,\n NonExclusiveLevelAlarmType_ConditionSubClassName: 16657,\n NonExclusiveLevelAlarmType_OutOfServiceState: 16658,\n NonExclusiveLevelAlarmType_OutOfServiceState_Id: 16659,\n NonExclusiveLevelAlarmType_OutOfServiceState_Name: 16660,\n NonExclusiveLevelAlarmType_OutOfServiceState_Number: 16661,\n NonExclusiveLevelAlarmType_OutOfServiceState_EffectiveDisplayName: 16662,\n NonExclusiveLevelAlarmType_OutOfServiceState_TransitionTime: 16663,\n NonExclusiveLevelAlarmType_OutOfServiceState_EffectiveTransitionTime: 16664,\n NonExclusiveLevelAlarmType_OutOfServiceState_TrueState: 16665,\n NonExclusiveLevelAlarmType_OutOfServiceState_FalseState: 16666,\n NonExclusiveLevelAlarmType_SilenceState: 16667,\n NonExclusiveLevelAlarmType_SilenceState_Id: 16668,\n NonExclusiveLevelAlarmType_SilenceState_Name: 16669,\n NonExclusiveLevelAlarmType_SilenceState_Number: 16670,\n NonExclusiveLevelAlarmType_SilenceState_EffectiveDisplayName: 16671,\n NonExclusiveLevelAlarmType_SilenceState_TransitionTime: 16672,\n NonExclusiveLevelAlarmType_SilenceState_EffectiveTransitionTime: 16673,\n NonExclusiveLevelAlarmType_SilenceState_TrueState: 16674,\n NonExclusiveLevelAlarmType_SilenceState_FalseState: 16675,\n NonExclusiveLevelAlarmType_AudibleEnabled: 16676,\n NonExclusiveLevelAlarmType_AudibleSound: 16677,\n NonExclusiveLevelAlarmType_OnDelay: 16682,\n NonExclusiveLevelAlarmType_OffDelay: 16683,\n NonExclusiveLevelAlarmType_FirstInGroupFlag: 16684,\n NonExclusiveLevelAlarmType_ReAlarmTime: 16687,\n NonExclusiveLevelAlarmType_ReAlarmRepeatCount: 16688,\n NonExclusiveLevelAlarmType_BaseHighHighLimit: 16692,\n NonExclusiveLevelAlarmType_BaseHighLimit: 16693,\n NonExclusiveLevelAlarmType_BaseLowLimit: 16694,\n NonExclusiveLevelAlarmType_BaseLowLowLimit: 16695,\n ExclusiveLevelAlarmType_ConditionSubClassId: 16696,\n ExclusiveLevelAlarmType_ConditionSubClassName: 16697,\n ExclusiveLevelAlarmType_OutOfServiceState: 16698,\n ExclusiveLevelAlarmType_OutOfServiceState_Id: 16699,\n ExclusiveLevelAlarmType_OutOfServiceState_Name: 16700,\n ExclusiveLevelAlarmType_OutOfServiceState_Number: 16701,\n ExclusiveLevelAlarmType_OutOfServiceState_EffectiveDisplayName: 16702,\n ExclusiveLevelAlarmType_OutOfServiceState_TransitionTime: 16703,\n ExclusiveLevelAlarmType_OutOfServiceState_EffectiveTransitionTime: 16704,\n ExclusiveLevelAlarmType_OutOfServiceState_TrueState: 16705,\n ExclusiveLevelAlarmType_OutOfServiceState_FalseState: 16706,\n ExclusiveLevelAlarmType_SilenceState: 16707,\n ExclusiveLevelAlarmType_SilenceState_Id: 16708,\n ExclusiveLevelAlarmType_SilenceState_Name: 16709,\n ExclusiveLevelAlarmType_SilenceState_Number: 16710,\n ExclusiveLevelAlarmType_SilenceState_EffectiveDisplayName: 16711,\n ExclusiveLevelAlarmType_SilenceState_TransitionTime: 16712,\n ExclusiveLevelAlarmType_SilenceState_EffectiveTransitionTime: 16713,\n ExclusiveLevelAlarmType_SilenceState_TrueState: 16714,\n ExclusiveLevelAlarmType_SilenceState_FalseState: 16715,\n ExclusiveLevelAlarmType_AudibleEnabled: 16716,\n ExclusiveLevelAlarmType_AudibleSound: 16717,\n ExclusiveLevelAlarmType_OnDelay: 16722,\n ExclusiveLevelAlarmType_OffDelay: 16723,\n ExclusiveLevelAlarmType_FirstInGroupFlag: 16724,\n ExclusiveLevelAlarmType_ReAlarmTime: 16727,\n ExclusiveLevelAlarmType_ReAlarmRepeatCount: 16728,\n ExclusiveLevelAlarmType_BaseHighHighLimit: 16732,\n ExclusiveLevelAlarmType_BaseHighLimit: 16733,\n ExclusiveLevelAlarmType_BaseLowLimit: 16734,\n ExclusiveLevelAlarmType_BaseLowLowLimit: 16735,\n NonExclusiveDeviationAlarmType_ConditionSubClassId: 16736,\n NonExclusiveDeviationAlarmType_ConditionSubClassName: 16737,\n NonExclusiveDeviationAlarmType_OutOfServiceState: 16738,\n NonExclusiveDeviationAlarmType_OutOfServiceState_Id: 16739,\n NonExclusiveDeviationAlarmType_OutOfServiceState_Name: 16740,\n NonExclusiveDeviationAlarmType_OutOfServiceState_Number: 16741,\n NonExclusiveDeviationAlarmType_OutOfServiceState_EffectiveDisplayName: 16742,\n NonExclusiveDeviationAlarmType_OutOfServiceState_TransitionTime: 16743,\n NonExclusiveDeviationAlarmType_OutOfServiceState_EffectiveTransitionTime: 16744,\n NonExclusiveDeviationAlarmType_OutOfServiceState_TrueState: 16745,\n NonExclusiveDeviationAlarmType_OutOfServiceState_FalseState: 16746,\n NonExclusiveDeviationAlarmType_SilenceState: 16747,\n NonExclusiveDeviationAlarmType_SilenceState_Id: 16748,\n NonExclusiveDeviationAlarmType_SilenceState_Name: 16749,\n NonExclusiveDeviationAlarmType_SilenceState_Number: 16750,\n NonExclusiveDeviationAlarmType_SilenceState_EffectiveDisplayName: 16751,\n NonExclusiveDeviationAlarmType_SilenceState_TransitionTime: 16752,\n NonExclusiveDeviationAlarmType_SilenceState_EffectiveTransitionTime: 16753,\n NonExclusiveDeviationAlarmType_SilenceState_TrueState: 16754,\n NonExclusiveDeviationAlarmType_SilenceState_FalseState: 16755,\n NonExclusiveDeviationAlarmType_AudibleEnabled: 16756,\n NonExclusiveDeviationAlarmType_AudibleSound: 16757,\n NonExclusiveDeviationAlarmType_OnDelay: 16762,\n NonExclusiveDeviationAlarmType_OffDelay: 16763,\n NonExclusiveDeviationAlarmType_FirstInGroupFlag: 16764,\n NonExclusiveDeviationAlarmType_ReAlarmTime: 16767,\n NonExclusiveDeviationAlarmType_ReAlarmRepeatCount: 16768,\n NonExclusiveDeviationAlarmType_BaseHighHighLimit: 16772,\n NonExclusiveDeviationAlarmType_BaseHighLimit: 16773,\n NonExclusiveDeviationAlarmType_BaseLowLimit: 16774,\n NonExclusiveDeviationAlarmType_BaseLowLowLimit: 16775,\n NonExclusiveDeviationAlarmType_BaseSetpointNode: 16776,\n ExclusiveDeviationAlarmType_ConditionSubClassId: 16777,\n ExclusiveDeviationAlarmType_ConditionSubClassName: 16778,\n ExclusiveDeviationAlarmType_OutOfServiceState: 16779,\n ExclusiveDeviationAlarmType_OutOfServiceState_Id: 16780,\n ExclusiveDeviationAlarmType_OutOfServiceState_Name: 16781,\n ExclusiveDeviationAlarmType_OutOfServiceState_Number: 16782,\n ExclusiveDeviationAlarmType_OutOfServiceState_EffectiveDisplayName: 16783,\n ExclusiveDeviationAlarmType_OutOfServiceState_TransitionTime: 16784,\n ExclusiveDeviationAlarmType_OutOfServiceState_EffectiveTransitionTime: 16785,\n ExclusiveDeviationAlarmType_OutOfServiceState_TrueState: 16786,\n ExclusiveDeviationAlarmType_OutOfServiceState_FalseState: 16787,\n ExclusiveDeviationAlarmType_SilenceState: 16788,\n ExclusiveDeviationAlarmType_SilenceState_Id: 16789,\n ExclusiveDeviationAlarmType_SilenceState_Name: 16790,\n ExclusiveDeviationAlarmType_SilenceState_Number: 16791,\n ExclusiveDeviationAlarmType_SilenceState_EffectiveDisplayName: 16792,\n ExclusiveDeviationAlarmType_SilenceState_TransitionTime: 16793,\n ExclusiveDeviationAlarmType_SilenceState_EffectiveTransitionTime: 16794,\n ExclusiveDeviationAlarmType_SilenceState_TrueState: 16795,\n ExclusiveDeviationAlarmType_SilenceState_FalseState: 16796,\n ExclusiveDeviationAlarmType_AudibleEnabled: 16797,\n ExclusiveDeviationAlarmType_AudibleSound: 16798,\n ExclusiveDeviationAlarmType_OnDelay: 16803,\n ExclusiveDeviationAlarmType_OffDelay: 16804,\n ExclusiveDeviationAlarmType_FirstInGroupFlag: 16805,\n ExclusiveDeviationAlarmType_ReAlarmTime: 16808,\n ExclusiveDeviationAlarmType_ReAlarmRepeatCount: 16809,\n ExclusiveDeviationAlarmType_BaseHighHighLimit: 16813,\n ExclusiveDeviationAlarmType_BaseHighLimit: 16814,\n ExclusiveDeviationAlarmType_BaseLowLimit: 16815,\n ExclusiveDeviationAlarmType_BaseLowLowLimit: 16816,\n ExclusiveDeviationAlarmType_BaseSetpointNode: 16817,\n NonExclusiveRateOfChangeAlarmType_ConditionSubClassId: 16818,\n NonExclusiveRateOfChangeAlarmType_ConditionSubClassName: 16819,\n NonExclusiveRateOfChangeAlarmType_OutOfServiceState: 16820,\n NonExclusiveRateOfChangeAlarmType_OutOfServiceState_Id: 16821,\n NonExclusiveRateOfChangeAlarmType_OutOfServiceState_Name: 16822,\n NonExclusiveRateOfChangeAlarmType_OutOfServiceState_Number: 16823,\n NonExclusiveRateOfChangeAlarmType_OutOfServiceState_EffectiveDisplayName: 16824,\n NonExclusiveRateOfChangeAlarmType_OutOfServiceState_TransitionTime: 16825,\n NonExclusiveRateOfChangeAlarmType_OutOfServiceState_EffectiveTransitionTime: 16826,\n NonExclusiveRateOfChangeAlarmType_OutOfServiceState_TrueState: 16827,\n NonExclusiveRateOfChangeAlarmType_OutOfServiceState_FalseState: 16828,\n NonExclusiveRateOfChangeAlarmType_SilenceState: 16829,\n NonExclusiveRateOfChangeAlarmType_SilenceState_Id: 16830,\n NonExclusiveRateOfChangeAlarmType_SilenceState_Name: 16831,\n NonExclusiveRateOfChangeAlarmType_SilenceState_Number: 16832,\n NonExclusiveRateOfChangeAlarmType_SilenceState_EffectiveDisplayName: 16833,\n NonExclusiveRateOfChangeAlarmType_SilenceState_TransitionTime: 16834,\n NonExclusiveRateOfChangeAlarmType_SilenceState_EffectiveTransitionTime: 16835,\n NonExclusiveRateOfChangeAlarmType_SilenceState_TrueState: 16836,\n NonExclusiveRateOfChangeAlarmType_SilenceState_FalseState: 16837,\n NonExclusiveRateOfChangeAlarmType_AudibleEnabled: 16838,\n NonExclusiveRateOfChangeAlarmType_AudibleSound: 16839,\n NonExclusiveRateOfChangeAlarmType_OnDelay: 16844,\n NonExclusiveRateOfChangeAlarmType_OffDelay: 16845,\n NonExclusiveRateOfChangeAlarmType_FirstInGroupFlag: 16846,\n NonExclusiveRateOfChangeAlarmType_ReAlarmTime: 16849,\n NonExclusiveRateOfChangeAlarmType_ReAlarmRepeatCount: 16850,\n NonExclusiveRateOfChangeAlarmType_BaseHighHighLimit: 16854,\n NonExclusiveRateOfChangeAlarmType_BaseHighLimit: 16855,\n NonExclusiveRateOfChangeAlarmType_BaseLowLimit: 16856,\n NonExclusiveRateOfChangeAlarmType_BaseLowLowLimit: 16857,\n NonExclusiveRateOfChangeAlarmType_EngineeringUnits: 16858,\n ExclusiveRateOfChangeAlarmType_ConditionSubClassId: 16859,\n ExclusiveRateOfChangeAlarmType_ConditionSubClassName: 16860,\n ExclusiveRateOfChangeAlarmType_OutOfServiceState: 16861,\n ExclusiveRateOfChangeAlarmType_OutOfServiceState_Id: 16862,\n ExclusiveRateOfChangeAlarmType_OutOfServiceState_Name: 16863,\n ExclusiveRateOfChangeAlarmType_OutOfServiceState_Number: 16864,\n ExclusiveRateOfChangeAlarmType_OutOfServiceState_EffectiveDisplayName: 16865,\n ExclusiveRateOfChangeAlarmType_OutOfServiceState_TransitionTime: 16866,\n ExclusiveRateOfChangeAlarmType_OutOfServiceState_EffectiveTransitionTime: 16867,\n ExclusiveRateOfChangeAlarmType_OutOfServiceState_TrueState: 16868,\n ExclusiveRateOfChangeAlarmType_OutOfServiceState_FalseState: 16869,\n ExclusiveRateOfChangeAlarmType_SilenceState: 16870,\n ExclusiveRateOfChangeAlarmType_SilenceState_Id: 16871,\n ExclusiveRateOfChangeAlarmType_SilenceState_Name: 16872,\n ExclusiveRateOfChangeAlarmType_SilenceState_Number: 16873,\n ExclusiveRateOfChangeAlarmType_SilenceState_EffectiveDisplayName: 16874,\n ExclusiveRateOfChangeAlarmType_SilenceState_TransitionTime: 16875,\n ExclusiveRateOfChangeAlarmType_SilenceState_EffectiveTransitionTime: 16876,\n ExclusiveRateOfChangeAlarmType_SilenceState_TrueState: 16877,\n ExclusiveRateOfChangeAlarmType_SilenceState_FalseState: 16878,\n ExclusiveRateOfChangeAlarmType_AudibleEnabled: 16879,\n ExclusiveRateOfChangeAlarmType_AudibleSound: 16880,\n ExclusiveRateOfChangeAlarmType_OnDelay: 16885,\n ExclusiveRateOfChangeAlarmType_OffDelay: 16886,\n ExclusiveRateOfChangeAlarmType_FirstInGroupFlag: 16887,\n ExclusiveRateOfChangeAlarmType_ReAlarmTime: 16890,\n ExclusiveRateOfChangeAlarmType_ReAlarmRepeatCount: 16891,\n ExclusiveRateOfChangeAlarmType_BaseHighHighLimit: 16895,\n ExclusiveRateOfChangeAlarmType_BaseHighLimit: 16896,\n ExclusiveRateOfChangeAlarmType_BaseLowLimit: 16897,\n ExclusiveRateOfChangeAlarmType_BaseLowLowLimit: 16898,\n ExclusiveRateOfChangeAlarmType_EngineeringUnits: 16899,\n DiscreteAlarmType_ConditionSubClassId: 16900,\n DiscreteAlarmType_ConditionSubClassName: 16901,\n DiscreteAlarmType_OutOfServiceState: 16902,\n DiscreteAlarmType_OutOfServiceState_Id: 16903,\n DiscreteAlarmType_OutOfServiceState_Name: 16904,\n DiscreteAlarmType_OutOfServiceState_Number: 16905,\n DiscreteAlarmType_OutOfServiceState_EffectiveDisplayName: 16906,\n DiscreteAlarmType_OutOfServiceState_TransitionTime: 16907,\n DiscreteAlarmType_OutOfServiceState_EffectiveTransitionTime: 16908,\n DiscreteAlarmType_OutOfServiceState_TrueState: 16909,\n DiscreteAlarmType_OutOfServiceState_FalseState: 16910,\n DiscreteAlarmType_SilenceState: 16911,\n DiscreteAlarmType_SilenceState_Id: 16912,\n DiscreteAlarmType_SilenceState_Name: 16913,\n DiscreteAlarmType_SilenceState_Number: 16914,\n DiscreteAlarmType_SilenceState_EffectiveDisplayName: 16915,\n DiscreteAlarmType_SilenceState_TransitionTime: 16916,\n DiscreteAlarmType_SilenceState_EffectiveTransitionTime: 16917,\n DiscreteAlarmType_SilenceState_TrueState: 16918,\n DiscreteAlarmType_SilenceState_FalseState: 16919,\n DiscreteAlarmType_AudibleEnabled: 16920,\n DiscreteAlarmType_AudibleSound: 16921,\n DiscreteAlarmType_OnDelay: 16926,\n DiscreteAlarmType_OffDelay: 16927,\n DiscreteAlarmType_FirstInGroupFlag: 16928,\n DiscreteAlarmType_ReAlarmTime: 16931,\n DiscreteAlarmType_ReAlarmRepeatCount: 16932,\n OffNormalAlarmType_ConditionSubClassId: 16936,\n OffNormalAlarmType_ConditionSubClassName: 16937,\n OffNormalAlarmType_OutOfServiceState: 16938,\n OffNormalAlarmType_OutOfServiceState_Id: 16939,\n OffNormalAlarmType_OutOfServiceState_Name: 16940,\n OffNormalAlarmType_OutOfServiceState_Number: 16941,\n OffNormalAlarmType_OutOfServiceState_EffectiveDisplayName: 16942,\n OffNormalAlarmType_OutOfServiceState_TransitionTime: 16943,\n OffNormalAlarmType_OutOfServiceState_EffectiveTransitionTime: 16944,\n OffNormalAlarmType_OutOfServiceState_TrueState: 16945,\n OffNormalAlarmType_OutOfServiceState_FalseState: 16946,\n OffNormalAlarmType_SilenceState: 16947,\n OffNormalAlarmType_SilenceState_Id: 16948,\n OffNormalAlarmType_SilenceState_Name: 16949,\n OffNormalAlarmType_SilenceState_Number: 16950,\n OffNormalAlarmType_SilenceState_EffectiveDisplayName: 16951,\n OffNormalAlarmType_SilenceState_TransitionTime: 16952,\n OffNormalAlarmType_SilenceState_EffectiveTransitionTime: 16953,\n OffNormalAlarmType_SilenceState_TrueState: 16954,\n OffNormalAlarmType_SilenceState_FalseState: 16955,\n OffNormalAlarmType_AudibleEnabled: 16956,\n OffNormalAlarmType_AudibleSound: 16957,\n OffNormalAlarmType_OnDelay: 16962,\n OffNormalAlarmType_OffDelay: 16963,\n OffNormalAlarmType_FirstInGroupFlag: 16964,\n OffNormalAlarmType_ReAlarmTime: 16967,\n OffNormalAlarmType_ReAlarmRepeatCount: 16968,\n SystemOffNormalAlarmType_ConditionSubClassId: 16972,\n SystemOffNormalAlarmType_ConditionSubClassName: 16973,\n SystemOffNormalAlarmType_OutOfServiceState: 16974,\n SystemOffNormalAlarmType_OutOfServiceState_Id: 16975,\n SystemOffNormalAlarmType_OutOfServiceState_Name: 16976,\n SystemOffNormalAlarmType_OutOfServiceState_Number: 16977,\n SystemOffNormalAlarmType_OutOfServiceState_EffectiveDisplayName: 16978,\n SystemOffNormalAlarmType_OutOfServiceState_TransitionTime: 16979,\n SystemOffNormalAlarmType_OutOfServiceState_EffectiveTransitionTime: 16980,\n SystemOffNormalAlarmType_OutOfServiceState_TrueState: 16981,\n SystemOffNormalAlarmType_OutOfServiceState_FalseState: 16982,\n SystemOffNormalAlarmType_SilenceState: 16983,\n SystemOffNormalAlarmType_SilenceState_Id: 16984,\n SystemOffNormalAlarmType_SilenceState_Name: 16985,\n SystemOffNormalAlarmType_SilenceState_Number: 16986,\n SystemOffNormalAlarmType_SilenceState_EffectiveDisplayName: 16987,\n SystemOffNormalAlarmType_SilenceState_TransitionTime: 16988,\n SystemOffNormalAlarmType_SilenceState_EffectiveTransitionTime: 16989,\n SystemOffNormalAlarmType_SilenceState_TrueState: 16990,\n SystemOffNormalAlarmType_SilenceState_FalseState: 16991,\n SystemOffNormalAlarmType_AudibleEnabled: 16992,\n SystemOffNormalAlarmType_AudibleSound: 16993,\n SystemOffNormalAlarmType_OnDelay: 16998,\n SystemOffNormalAlarmType_OffDelay: 16999,\n SystemOffNormalAlarmType_FirstInGroupFlag: 17000,\n SystemOffNormalAlarmType_ReAlarmTime: 17003,\n SystemOffNormalAlarmType_ReAlarmRepeatCount: 17004,\n TripAlarmType_ConditionSubClassId: 17008,\n TripAlarmType_ConditionSubClassName: 17009,\n TripAlarmType_OutOfServiceState: 17010,\n TripAlarmType_OutOfServiceState_Id: 17011,\n TripAlarmType_OutOfServiceState_Name: 17012,\n TripAlarmType_OutOfServiceState_Number: 17013,\n TripAlarmType_OutOfServiceState_EffectiveDisplayName: 17014,\n TripAlarmType_OutOfServiceState_TransitionTime: 17015,\n TripAlarmType_OutOfServiceState_EffectiveTransitionTime: 17016,\n TripAlarmType_OutOfServiceState_TrueState: 17017,\n TripAlarmType_OutOfServiceState_FalseState: 17018,\n TripAlarmType_SilenceState: 17019,\n TripAlarmType_SilenceState_Id: 17020,\n TripAlarmType_SilenceState_Name: 17021,\n TripAlarmType_SilenceState_Number: 17022,\n TripAlarmType_SilenceState_EffectiveDisplayName: 17023,\n TripAlarmType_SilenceState_TransitionTime: 17024,\n TripAlarmType_SilenceState_EffectiveTransitionTime: 17025,\n TripAlarmType_SilenceState_TrueState: 17026,\n TripAlarmType_SilenceState_FalseState: 17027,\n TripAlarmType_AudibleEnabled: 17028,\n TripAlarmType_AudibleSound: 17029,\n TripAlarmType_OnDelay: 17034,\n TripAlarmType_OffDelay: 17035,\n TripAlarmType_FirstInGroupFlag: 17036,\n TripAlarmType_ReAlarmTime: 17039,\n TripAlarmType_ReAlarmRepeatCount: 17040,\n CertificateExpirationAlarmType_ConditionSubClassId: 17044,\n CertificateExpirationAlarmType_ConditionSubClassName: 17045,\n CertificateExpirationAlarmType_OutOfServiceState: 17046,\n CertificateExpirationAlarmType_OutOfServiceState_Id: 17047,\n CertificateExpirationAlarmType_OutOfServiceState_Name: 17048,\n CertificateExpirationAlarmType_OutOfServiceState_Number: 17049,\n CertificateExpirationAlarmType_OutOfServiceState_EffectiveDisplayName: 17050,\n CertificateExpirationAlarmType_OutOfServiceState_TransitionTime: 17051,\n CertificateExpirationAlarmType_OutOfServiceState_EffectiveTransitionTime: 17052,\n CertificateExpirationAlarmType_OutOfServiceState_TrueState: 17053,\n CertificateExpirationAlarmType_OutOfServiceState_FalseState: 17054,\n CertificateExpirationAlarmType_SilenceState: 17055,\n CertificateExpirationAlarmType_SilenceState_Id: 17056,\n CertificateExpirationAlarmType_SilenceState_Name: 17057,\n CertificateExpirationAlarmType_SilenceState_Number: 17058,\n CertificateExpirationAlarmType_SilenceState_EffectiveDisplayName: 17059,\n CertificateExpirationAlarmType_SilenceState_TransitionTime: 17060,\n CertificateExpirationAlarmType_SilenceState_EffectiveTransitionTime: 17061,\n CertificateExpirationAlarmType_SilenceState_TrueState: 17062,\n CertificateExpirationAlarmType_SilenceState_FalseState: 17063,\n CertificateExpirationAlarmType_AudibleEnabled: 17064,\n CertificateExpirationAlarmType_AudibleSound: 17065,\n CertificateExpirationAlarmType_OnDelay: 17070,\n CertificateExpirationAlarmType_OffDelay: 17071,\n CertificateExpirationAlarmType_FirstInGroupFlag: 17072,\n CertificateExpirationAlarmType_ReAlarmTime: 17075,\n CertificateExpirationAlarmType_ReAlarmRepeatCount: 17076,\n DiscrepancyAlarmType_EventId: 17081,\n DiscrepancyAlarmType_EventType: 17082,\n DiscrepancyAlarmType_SourceNode: 17083,\n DiscrepancyAlarmType_SourceName: 17084,\n DiscrepancyAlarmType_Time: 17085,\n DiscrepancyAlarmType_ReceiveTime: 17086,\n DiscrepancyAlarmType_LocalTime: 17087,\n DiscrepancyAlarmType_Message: 17088,\n DiscrepancyAlarmType_Severity: 17089,\n DiscrepancyAlarmType_ConditionClassId: 17090,\n DiscrepancyAlarmType_ConditionClassName: 17091,\n DiscrepancyAlarmType_ConditionSubClassId: 17092,\n DiscrepancyAlarmType_ConditionSubClassName: 17093,\n DiscrepancyAlarmType_ConditionName: 17094,\n DiscrepancyAlarmType_BranchId: 17095,\n DiscrepancyAlarmType_Retain: 17096,\n DiscrepancyAlarmType_EnabledState: 17097,\n DiscrepancyAlarmType_EnabledState_Id: 17098,\n DiscrepancyAlarmType_EnabledState_Name: 17099,\n DiscrepancyAlarmType_EnabledState_Number: 17100,\n DiscrepancyAlarmType_EnabledState_EffectiveDisplayName: 17101,\n DiscrepancyAlarmType_EnabledState_TransitionTime: 17102,\n DiscrepancyAlarmType_EnabledState_EffectiveTransitionTime: 17103,\n DiscrepancyAlarmType_EnabledState_TrueState: 17104,\n DiscrepancyAlarmType_EnabledState_FalseState: 17105,\n DiscrepancyAlarmType_Quality: 17106,\n DiscrepancyAlarmType_Quality_SourceTimestamp: 17107,\n DiscrepancyAlarmType_LastSeverity: 17108,\n DiscrepancyAlarmType_LastSeverity_SourceTimestamp: 17109,\n DiscrepancyAlarmType_Comment: 17110,\n DiscrepancyAlarmType_Comment_SourceTimestamp: 17111,\n DiscrepancyAlarmType_ClientUserId: 17112,\n DiscrepancyAlarmType_AddComment_InputArguments: 17116,\n DiscrepancyAlarmType_ConditionRefresh_InputArguments: 17118,\n DiscrepancyAlarmType_ConditionRefresh2_InputArguments: 17120,\n DiscrepancyAlarmType_AckedState: 17121,\n DiscrepancyAlarmType_AckedState_Id: 17122,\n DiscrepancyAlarmType_AckedState_Name: 17123,\n DiscrepancyAlarmType_AckedState_Number: 17124,\n DiscrepancyAlarmType_AckedState_EffectiveDisplayName: 17125,\n DiscrepancyAlarmType_AckedState_TransitionTime: 17126,\n DiscrepancyAlarmType_AckedState_EffectiveTransitionTime: 17127,\n DiscrepancyAlarmType_AckedState_TrueState: 17128,\n DiscrepancyAlarmType_AckedState_FalseState: 17129,\n DiscrepancyAlarmType_ConfirmedState: 17130,\n DiscrepancyAlarmType_ConfirmedState_Id: 17131,\n DiscrepancyAlarmType_ConfirmedState_Name: 17132,\n DiscrepancyAlarmType_ConfirmedState_Number: 17133,\n DiscrepancyAlarmType_ConfirmedState_EffectiveDisplayName: 17134,\n DiscrepancyAlarmType_ConfirmedState_TransitionTime: 17135,\n DiscrepancyAlarmType_ConfirmedState_EffectiveTransitionTime: 17136,\n DiscrepancyAlarmType_ConfirmedState_TrueState: 17137,\n DiscrepancyAlarmType_ConfirmedState_FalseState: 17138,\n DiscrepancyAlarmType_Acknowledge_InputArguments: 17140,\n DiscrepancyAlarmType_Confirm_InputArguments: 17142,\n DiscrepancyAlarmType_ActiveState: 17143,\n DiscrepancyAlarmType_ActiveState_Id: 17144,\n DiscrepancyAlarmType_ActiveState_Name: 17145,\n DiscrepancyAlarmType_ActiveState_Number: 17146,\n DiscrepancyAlarmType_ActiveState_EffectiveDisplayName: 17147,\n DiscrepancyAlarmType_ActiveState_TransitionTime: 17148,\n DiscrepancyAlarmType_ActiveState_EffectiveTransitionTime: 17149,\n DiscrepancyAlarmType_ActiveState_TrueState: 17150,\n DiscrepancyAlarmType_ActiveState_FalseState: 17151,\n DiscrepancyAlarmType_InputNode: 17152,\n DiscrepancyAlarmType_SuppressedState: 17153,\n DiscrepancyAlarmType_SuppressedState_Id: 17154,\n DiscrepancyAlarmType_SuppressedState_Name: 17155,\n DiscrepancyAlarmType_SuppressedState_Number: 17156,\n DiscrepancyAlarmType_SuppressedState_EffectiveDisplayName: 17157,\n DiscrepancyAlarmType_SuppressedState_TransitionTime: 17158,\n DiscrepancyAlarmType_SuppressedState_EffectiveTransitionTime: 17159,\n DiscrepancyAlarmType_SuppressedState_TrueState: 17160,\n DiscrepancyAlarmType_SuppressedState_FalseState: 17161,\n DiscrepancyAlarmType_OutOfServiceState: 17162,\n DiscrepancyAlarmType_OutOfServiceState_Id: 17163,\n DiscrepancyAlarmType_OutOfServiceState_Name: 17164,\n DiscrepancyAlarmType_OutOfServiceState_Number: 17165,\n DiscrepancyAlarmType_OutOfServiceState_EffectiveDisplayName: 17166,\n DiscrepancyAlarmType_OutOfServiceState_TransitionTime: 17167,\n DiscrepancyAlarmType_OutOfServiceState_EffectiveTransitionTime: 17168,\n DiscrepancyAlarmType_OutOfServiceState_TrueState: 17169,\n DiscrepancyAlarmType_OutOfServiceState_FalseState: 17170,\n DiscrepancyAlarmType_SilenceState: 17171,\n DiscrepancyAlarmType_SilenceState_Id: 17172,\n DiscrepancyAlarmType_SilenceState_Name: 17173,\n DiscrepancyAlarmType_SilenceState_Number: 17174,\n DiscrepancyAlarmType_SilenceState_EffectiveDisplayName: 17175,\n DiscrepancyAlarmType_SilenceState_TransitionTime: 17176,\n DiscrepancyAlarmType_SilenceState_EffectiveTransitionTime: 17177,\n DiscrepancyAlarmType_SilenceState_TrueState: 17178,\n DiscrepancyAlarmType_SilenceState_FalseState: 17179,\n DiscrepancyAlarmType_ShelvingState_CurrentState: 17181,\n DiscrepancyAlarmType_ShelvingState_CurrentState_Id: 17182,\n DiscrepancyAlarmType_ShelvingState_CurrentState_Name: 17183,\n DiscrepancyAlarmType_ShelvingState_CurrentState_Number: 17184,\n DiscrepancyAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 17185,\n DiscrepancyAlarmType_ShelvingState_LastTransition: 17186,\n DiscrepancyAlarmType_ShelvingState_LastTransition_Id: 17187,\n DiscrepancyAlarmType_ShelvingState_LastTransition_Name: 17188,\n DiscrepancyAlarmType_ShelvingState_LastTransition_Number: 17189,\n DiscrepancyAlarmType_ShelvingState_LastTransition_TransitionTime: 17190,\n DiscrepancyAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 17191,\n DiscrepancyAlarmType_ShelvingState_UnshelveTime: 17192,\n DiscrepancyAlarmType_ShelvingState_TimedShelve_InputArguments: 17196,\n DiscrepancyAlarmType_SuppressedOrShelved: 17197,\n DiscrepancyAlarmType_MaxTimeShelved: 17198,\n DiscrepancyAlarmType_AudibleEnabled: 17199,\n DiscrepancyAlarmType_AudibleSound: 17200,\n DiscrepancyAlarmType_OnDelay: 17205,\n DiscrepancyAlarmType_OffDelay: 17206,\n DiscrepancyAlarmType_FirstInGroupFlag: 17207,\n DiscrepancyAlarmType_ReAlarmTime: 17210,\n DiscrepancyAlarmType_ReAlarmRepeatCount: 17211,\n DiscrepancyAlarmType_TargetValueNode: 17215,\n DiscrepancyAlarmType_ExpectedTime: 17216,\n DiscrepancyAlarmType_Tolerance: 17217,\n AuditConditionCommentEventType_ConditionEventId: 17222,\n AuditConditionAcknowledgeEventType_ConditionEventId: 17223,\n AuditConditionConfirmEventType_ConditionEventId: 17224,\n AuditConditionSuppressEventType_EventId: 17226,\n AuditConditionSuppressEventType_EventType: 17227,\n AuditConditionSuppressEventType_SourceNode: 17228,\n AuditConditionSuppressEventType_SourceName: 17229,\n AuditConditionSuppressEventType_Time: 17230,\n AuditConditionSuppressEventType_ReceiveTime: 17231,\n AuditConditionSuppressEventType_LocalTime: 17232,\n AuditConditionSuppressEventType_Message: 17233,\n AuditConditionSuppressEventType_Severity: 17234,\n AuditConditionSuppressEventType_ActionTimeStamp: 17235,\n AuditConditionSuppressEventType_Status: 17236,\n AuditConditionSuppressEventType_ServerId: 17237,\n AuditConditionSuppressEventType_ClientAuditEntryId: 17238,\n AuditConditionSuppressEventType_ClientUserId: 17239,\n AuditConditionSuppressEventType_MethodId: 17240,\n AuditConditionSuppressEventType_InputArguments: 17241,\n AuditConditionSilenceEventType_EventId: 17243,\n AuditConditionSilenceEventType_EventType: 17244,\n AuditConditionSilenceEventType_SourceNode: 17245,\n AuditConditionSilenceEventType_SourceName: 17246,\n AuditConditionSilenceEventType_Time: 17247,\n AuditConditionSilenceEventType_ReceiveTime: 17248,\n AuditConditionSilenceEventType_LocalTime: 17249,\n AuditConditionSilenceEventType_Message: 17250,\n AuditConditionSilenceEventType_Severity: 17251,\n AuditConditionSilenceEventType_ActionTimeStamp: 17252,\n AuditConditionSilenceEventType_Status: 17253,\n AuditConditionSilenceEventType_ServerId: 17254,\n AuditConditionSilenceEventType_ClientAuditEntryId: 17255,\n AuditConditionSilenceEventType_ClientUserId: 17256,\n AuditConditionSilenceEventType_MethodId: 17257,\n AuditConditionSilenceEventType_InputArguments: 17258,\n AuditConditionOutOfServiceEventType_EventId: 17260,\n AuditConditionOutOfServiceEventType_EventType: 17261,\n AuditConditionOutOfServiceEventType_SourceNode: 17262,\n AuditConditionOutOfServiceEventType_SourceName: 17263,\n AuditConditionOutOfServiceEventType_Time: 17264,\n AuditConditionOutOfServiceEventType_ReceiveTime: 17265,\n AuditConditionOutOfServiceEventType_LocalTime: 17266,\n AuditConditionOutOfServiceEventType_Message: 17267,\n AuditConditionOutOfServiceEventType_Severity: 17268,\n AuditConditionOutOfServiceEventType_ActionTimeStamp: 17269,\n AuditConditionOutOfServiceEventType_Status: 17270,\n AuditConditionOutOfServiceEventType_ServerId: 17271,\n AuditConditionOutOfServiceEventType_ClientAuditEntryId: 17272,\n AuditConditionOutOfServiceEventType_ClientUserId: 17273,\n AuditConditionOutOfServiceEventType_MethodId: 17274,\n AuditConditionOutOfServiceEventType_InputArguments: 17275,\n AlarmRateVariableType_Rate: 17278,\n AlarmMetricsType_AlarmCount: 17280,\n AlarmMetricsType_MaximumActiveState: 17281,\n AlarmMetricsType_MaximumUnAck: 17282,\n AlarmMetricsType_MaximumReAlarmCount: 17283,\n AlarmMetricsType_CurrentAlarmRate: 17284,\n AlarmMetricsType_CurrentAlarmRate_Rate: 17285,\n AlarmMetricsType_MaximumAlarmRate: 17286,\n AlarmMetricsType_MaximumAlarmRate_Rate: 17287,\n AlarmMetricsType_AverageAlarmRate: 17288,\n AlarmMetricsType_AverageAlarmRate_Rate: 17289,\n ServerType_LocalTime: 17612,\n AuditSecurityEventType_StatusCodeId: 17615,\n AuditChannelEventType_StatusCodeId: 17616,\n AuditOpenSecureChannelEventType_StatusCodeId: 17617,\n AuditSessionEventType_StatusCodeId: 17618,\n AuditCreateSessionEventType_StatusCodeId: 17619,\n AuditUrlMismatchEventType_StatusCodeId: 17620,\n AuditActivateSessionEventType_StatusCodeId: 17621,\n AuditCancelEventType_StatusCodeId: 17622,\n AuditCertificateEventType_StatusCodeId: 17623,\n AuditCertificateDataMismatchEventType_StatusCodeId: 17624,\n AuditCertificateExpiredEventType_StatusCodeId: 17625,\n AuditCertificateInvalidEventType_StatusCodeId: 17626,\n AuditCertificateUntrustedEventType_StatusCodeId: 17627,\n AuditCertificateRevokedEventType_StatusCodeId: 17628,\n AuditCertificateMismatchEventType_StatusCodeId: 17629,\n SelectionListType_Selections: 17632,\n SelectionListType_SelectionDescriptions: 17633,\n Server_LocalTime: 17634,\n FiniteStateMachineType_AvailableStates: 17635,\n FiniteStateMachineType_AvailableTransitions: 17636,\n TemporaryFileTransferType_TransferState_Placeholder_AvailableStates: 17637,\n TemporaryFileTransferType_TransferState_Placeholder_AvailableTransitions: 17638,\n FileTransferStateMachineType_AvailableStates: 17639,\n FileTransferStateMachineType_AvailableTransitions: 17640,\n RoleMappingRuleChangedAuditEventType_EventId: 17642,\n RoleMappingRuleChangedAuditEventType_EventType: 17643,\n RoleMappingRuleChangedAuditEventType_SourceNode: 17644,\n RoleMappingRuleChangedAuditEventType_SourceName: 17645,\n RoleMappingRuleChangedAuditEventType_Time: 17646,\n RoleMappingRuleChangedAuditEventType_ReceiveTime: 17647,\n RoleMappingRuleChangedAuditEventType_LocalTime: 17648,\n RoleMappingRuleChangedAuditEventType_Message: 17649,\n RoleMappingRuleChangedAuditEventType_Severity: 17650,\n RoleMappingRuleChangedAuditEventType_ActionTimeStamp: 17651,\n RoleMappingRuleChangedAuditEventType_Status: 17652,\n RoleMappingRuleChangedAuditEventType_ServerId: 17653,\n RoleMappingRuleChangedAuditEventType_ClientAuditEntryId: 17654,\n RoleMappingRuleChangedAuditEventType_ClientUserId: 17655,\n RoleMappingRuleChangedAuditEventType_MethodId: 17656,\n RoleMappingRuleChangedAuditEventType_InputArguments: 17657,\n AlarmConditionType_ShelvingState_AvailableStates: 17658,\n AlarmConditionType_ShelvingState_AvailableTransitions: 17659,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_AvailableStates: 17660,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_AvailableTransitions: 17661,\n ShelvedStateMachineType_AvailableStates: 17662,\n ShelvedStateMachineType_AvailableTransitions: 17663,\n LimitAlarmType_ShelvingState_AvailableStates: 17664,\n LimitAlarmType_ShelvingState_AvailableTransitions: 17665,\n ExclusiveLimitStateMachineType_AvailableStates: 17666,\n ExclusiveLimitStateMachineType_AvailableTransitions: 17667,\n ExclusiveLimitAlarmType_ShelvingState_AvailableStates: 17668,\n ExclusiveLimitAlarmType_ShelvingState_AvailableTransitions: 17669,\n ExclusiveLimitAlarmType_LimitState_AvailableStates: 17670,\n ExclusiveLimitAlarmType_LimitState_AvailableTransitions: 17671,\n NonExclusiveLimitAlarmType_ShelvingState_AvailableStates: 17672,\n NonExclusiveLimitAlarmType_ShelvingState_AvailableTransitions: 17673,\n NonExclusiveLevelAlarmType_ShelvingState_AvailableStates: 17674,\n NonExclusiveLevelAlarmType_ShelvingState_AvailableTransitions: 17675,\n ExclusiveLevelAlarmType_ShelvingState_AvailableStates: 17676,\n ExclusiveLevelAlarmType_ShelvingState_AvailableTransitions: 17677,\n ExclusiveLevelAlarmType_LimitState_AvailableStates: 17678,\n ExclusiveLevelAlarmType_LimitState_AvailableTransitions: 17679,\n NonExclusiveDeviationAlarmType_ShelvingState_AvailableStates: 17680,\n NonExclusiveDeviationAlarmType_ShelvingState_AvailableTransitions: 17681,\n ExclusiveDeviationAlarmType_ShelvingState_AvailableStates: 17682,\n ExclusiveDeviationAlarmType_ShelvingState_AvailableTransitions: 17683,\n ExclusiveDeviationAlarmType_LimitState_AvailableStates: 17684,\n ExclusiveDeviationAlarmType_LimitState_AvailableTransitions: 17685,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_AvailableStates: 17686,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_AvailableTransitions: 17687,\n ExclusiveRateOfChangeAlarmType_ShelvingState_AvailableStates: 17688,\n ExclusiveRateOfChangeAlarmType_ShelvingState_AvailableTransitions: 17689,\n ExclusiveRateOfChangeAlarmType_LimitState_AvailableStates: 17690,\n ExclusiveRateOfChangeAlarmType_LimitState_AvailableTransitions: 17691,\n DiscreteAlarmType_ShelvingState_AvailableStates: 17692,\n DiscreteAlarmType_ShelvingState_AvailableTransitions: 17693,\n OffNormalAlarmType_ShelvingState_AvailableStates: 17694,\n OffNormalAlarmType_ShelvingState_AvailableTransitions: 17695,\n SystemOffNormalAlarmType_ShelvingState_AvailableStates: 17696,\n SystemOffNormalAlarmType_ShelvingState_AvailableTransitions: 17697,\n TripAlarmType_ShelvingState_AvailableStates: 17698,\n TripAlarmType_ShelvingState_AvailableTransitions: 17699,\n CertificateExpirationAlarmType_ShelvingState_AvailableStates: 17700,\n CertificateExpirationAlarmType_ShelvingState_AvailableTransitions: 17701,\n DiscrepancyAlarmType_ShelvingState_AvailableStates: 17702,\n DiscrepancyAlarmType_ShelvingState_AvailableTransitions: 17703,\n ProgramStateMachineType_AvailableStates: 17704,\n ProgramStateMachineType_AvailableTransitions: 17705,\n FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments: 17719,\n FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject_InputArguments: 17723,\n AuthorizationServiceConfigurationType_ServiceCertificate: 17860,\n AlarmConditionType_AudibleSound_ListId: 17865,\n AlarmConditionType_AudibleSound_AgencyId: 17866,\n AlarmConditionType_AudibleSound_VersionId: 17867,\n LimitAlarmType_AudibleSound_ListId: 17879,\n LimitAlarmType_AudibleSound_AgencyId: 17880,\n LimitAlarmType_AudibleSound_VersionId: 17881,\n ExclusiveLimitAlarmType_AudibleSound_ListId: 17886,\n ExclusiveLimitAlarmType_AudibleSound_AgencyId: 17887,\n ExclusiveLimitAlarmType_AudibleSound_VersionId: 17888,\n NonExclusiveLimitAlarmType_AudibleSound_ListId: 17893,\n NonExclusiveLimitAlarmType_AudibleSound_AgencyId: 17894,\n NonExclusiveLimitAlarmType_AudibleSound_VersionId: 17895,\n ExclusiveLevelAlarmType_AudibleSound_ListId: 17907,\n ExclusiveLevelAlarmType_AudibleSound_AgencyId: 17908,\n ExclusiveLevelAlarmType_AudibleSound_VersionId: 17909,\n NonExclusiveDeviationAlarmType_AudibleSound_ListId: 17914,\n NonExclusiveDeviationAlarmType_AudibleSound_AgencyId: 17915,\n NonExclusiveDeviationAlarmType_AudibleSound_VersionId: 17916,\n NonExclusiveRateOfChangeAlarmType_AudibleSound_ListId: 17921,\n NonExclusiveRateOfChangeAlarmType_AudibleSound_AgencyId: 17922,\n NonExclusiveRateOfChangeAlarmType_AudibleSound_VersionId: 17923,\n ExclusiveDeviationAlarmType_AudibleSound_ListId: 17928,\n ExclusiveDeviationAlarmType_AudibleSound_AgencyId: 17929,\n ExclusiveDeviationAlarmType_AudibleSound_VersionId: 17930,\n ExclusiveRateOfChangeAlarmType_AudibleSound_ListId: 17935,\n ExclusiveRateOfChangeAlarmType_AudibleSound_AgencyId: 17936,\n ExclusiveRateOfChangeAlarmType_AudibleSound_VersionId: 17937,\n DiscreteAlarmType_AudibleSound_ListId: 17942,\n DiscreteAlarmType_AudibleSound_AgencyId: 17943,\n DiscreteAlarmType_AudibleSound_VersionId: 17944,\n OffNormalAlarmType_AudibleSound_ListId: 17949,\n OffNormalAlarmType_AudibleSound_AgencyId: 17950,\n OffNormalAlarmType_AudibleSound_VersionId: 17951,\n SystemOffNormalAlarmType_AudibleSound_ListId: 17956,\n SystemOffNormalAlarmType_AudibleSound_AgencyId: 17957,\n SystemOffNormalAlarmType_AudibleSound_VersionId: 17958,\n TripAlarmType_AudibleSound_ListId: 17963,\n TripAlarmType_AudibleSound_AgencyId: 17964,\n TripAlarmType_AudibleSound_VersionId: 17965,\n CertificateExpirationAlarmType_AudibleSound_ListId: 17970,\n CertificateExpirationAlarmType_AudibleSound_AgencyId: 17971,\n CertificateExpirationAlarmType_AudibleSound_VersionId: 17972,\n DiscrepancyAlarmType_AudibleSound_ListId: 17977,\n DiscrepancyAlarmType_AudibleSound_AgencyId: 17978,\n DiscrepancyAlarmType_AudibleSound_VersionId: 17979,\n AudioVariableType_ListId: 17988,\n AudioVariableType_AgencyId: 17989,\n AudioVariableType_VersionId: 17990,\n AlarmMetricsType_StartTime: 17991,\n KeyCredentialConfigurationType_EndpointUrls: 18004,\n KeyCredentialConfigurationType_ServiceStatus: 18005,\n KeyCredentialConfigurationType_UpdateCredential_InputArguments: 18007,\n KeyCredentialUpdateMethodType_InputArguments: 18010,\n KeyCredentialAuditEventType_EventId: 18012,\n KeyCredentialAuditEventType_EventType: 18013,\n KeyCredentialAuditEventType_SourceNode: 18014,\n KeyCredentialAuditEventType_SourceName: 18015,\n KeyCredentialAuditEventType_Time: 18016,\n KeyCredentialAuditEventType_ReceiveTime: 18017,\n KeyCredentialAuditEventType_LocalTime: 18018,\n KeyCredentialAuditEventType_Message: 18019,\n KeyCredentialAuditEventType_Severity: 18020,\n KeyCredentialAuditEventType_ActionTimeStamp: 18021,\n KeyCredentialAuditEventType_Status: 18022,\n KeyCredentialAuditEventType_ServerId: 18023,\n KeyCredentialAuditEventType_ClientAuditEntryId: 18024,\n KeyCredentialAuditEventType_ClientUserId: 18025,\n KeyCredentialAuditEventType_MethodId: 18026,\n KeyCredentialAuditEventType_InputArguments: 18027,\n KeyCredentialAuditEventType_ResourceUri: 18028,\n KeyCredentialUpdatedAuditEventType_EventId: 18030,\n KeyCredentialUpdatedAuditEventType_EventType: 18031,\n KeyCredentialUpdatedAuditEventType_SourceNode: 18032,\n KeyCredentialUpdatedAuditEventType_SourceName: 18033,\n KeyCredentialUpdatedAuditEventType_Time: 18034,\n KeyCredentialUpdatedAuditEventType_ReceiveTime: 18035,\n KeyCredentialUpdatedAuditEventType_LocalTime: 18036,\n KeyCredentialUpdatedAuditEventType_Message: 18037,\n KeyCredentialUpdatedAuditEventType_Severity: 18038,\n KeyCredentialUpdatedAuditEventType_ActionTimeStamp: 18039,\n KeyCredentialUpdatedAuditEventType_Status: 18040,\n KeyCredentialUpdatedAuditEventType_ServerId: 18041,\n KeyCredentialUpdatedAuditEventType_ClientAuditEntryId: 18042,\n KeyCredentialUpdatedAuditEventType_ClientUserId: 18043,\n KeyCredentialUpdatedAuditEventType_MethodId: 18044,\n KeyCredentialUpdatedAuditEventType_InputArguments: 18045,\n KeyCredentialUpdatedAuditEventType_ResourceUri: 18046,\n KeyCredentialDeletedAuditEventType_EventId: 18048,\n KeyCredentialDeletedAuditEventType_EventType: 18049,\n KeyCredentialDeletedAuditEventType_SourceNode: 18050,\n KeyCredentialDeletedAuditEventType_SourceName: 18051,\n KeyCredentialDeletedAuditEventType_Time: 18052,\n KeyCredentialDeletedAuditEventType_ReceiveTime: 18053,\n KeyCredentialDeletedAuditEventType_LocalTime: 18054,\n KeyCredentialDeletedAuditEventType_Message: 18055,\n KeyCredentialDeletedAuditEventType_Severity: 18056,\n KeyCredentialDeletedAuditEventType_ActionTimeStamp: 18057,\n KeyCredentialDeletedAuditEventType_Status: 18058,\n KeyCredentialDeletedAuditEventType_ServerId: 18059,\n KeyCredentialDeletedAuditEventType_ClientAuditEntryId: 18060,\n KeyCredentialDeletedAuditEventType_ClientUserId: 18061,\n KeyCredentialDeletedAuditEventType_MethodId: 18062,\n KeyCredentialDeletedAuditEventType_InputArguments: 18063,\n KeyCredentialDeletedAuditEventType_ResourceUri: 18064,\n AuthorizationServices_ServiceName_Placeholder_ServiceCertificate: 18066,\n KeyCredentialConfigurationType_ResourceUri: 18069,\n AuthorizationServices_ServiceName_Placeholder_ServiceUri: 18070,\n AuthorizationServices_ServiceName_Placeholder_IssuerEndpointUrl: 18071,\n AuthorizationServiceConfigurationType_ServiceUri: 18072,\n AuthorizationServiceConfigurationType_IssuerEndpointUrl: 18073,\n KeyCredentialConfiguration_ServiceName_Placeholder_ResourceUri: 18157,\n KeyCredentialConfiguration_ServiceName_Placeholder_EndpointUrls: 18159,\n KeyCredentialConfiguration_ServiceName_Placeholder_ServiceStatus: 18160,\n KeyCredentialConfiguration_ServiceName_Placeholder_UpdateCredential_InputArguments: 18162,\n KeyCredentialConfiguration_ServiceName_Placeholder_ProfileUri: 18164,\n KeyCredentialConfigurationType_ProfileUri: 18165,\n OpcUa_XmlSchema_DataTypeDefinition: 18166,\n OpcUa_XmlSchema_DataTypeDefinition_DataTypeVersion: 18167,\n OpcUa_XmlSchema_DataTypeDefinition_DictionaryFragment: 18168,\n OpcUa_XmlSchema_StructureField: 18169,\n OpcUa_XmlSchema_StructureField_DataTypeVersion: 18170,\n OpcUa_XmlSchema_StructureField_DictionaryFragment: 18171,\n OpcUa_XmlSchema_StructureDefinition: 18172,\n OpcUa_XmlSchema_StructureDefinition_DataTypeVersion: 18173,\n OpcUa_XmlSchema_StructureDefinition_DictionaryFragment: 18174,\n OpcUa_XmlSchema_EnumDefinition: 18175,\n OpcUa_XmlSchema_EnumDefinition_DataTypeVersion: 18176,\n OpcUa_XmlSchema_EnumDefinition_DictionaryFragment: 18177,\n OpcUa_BinarySchema_DataTypeDefinition: 18178,\n OpcUa_BinarySchema_DataTypeDefinition_DataTypeVersion: 18179,\n OpcUa_BinarySchema_DataTypeDefinition_DictionaryFragment: 18180,\n OpcUa_BinarySchema_StructureField: 18181,\n OpcUa_BinarySchema_StructureField_DataTypeVersion: 18182,\n OpcUa_BinarySchema_StructureField_DictionaryFragment: 18183,\n OpcUa_BinarySchema_StructureDefinition: 18184,\n OpcUa_BinarySchema_StructureDefinition_DataTypeVersion: 18185,\n OpcUa_BinarySchema_StructureDefinition_DictionaryFragment: 18186,\n OpcUa_BinarySchema_EnumDefinition: 18187,\n OpcUa_BinarySchema_EnumDefinition_DataTypeVersion: 18188,\n OpcUa_BinarySchema_EnumDefinition_DictionaryFragment: 18189,\n AlarmConditionType_LatchedState: 18190,\n AlarmConditionType_LatchedState_Id: 18191,\n AlarmConditionType_LatchedState_Name: 18192,\n AlarmConditionType_LatchedState_Number: 18193,\n AlarmConditionType_LatchedState_EffectiveDisplayName: 18194,\n AlarmConditionType_LatchedState_TransitionTime: 18195,\n AlarmConditionType_LatchedState_EffectiveTransitionTime: 18196,\n AlarmConditionType_LatchedState_TrueState: 18197,\n AlarmConditionType_LatchedState_FalseState: 18198,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleSound_ListId: 18200,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleSound_AgencyId: 18201,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AudibleSound_VersionId: 18202,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState: 18203,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_Id: 18204,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_Name: 18205,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_Number: 18206,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_EffectiveDisplayName: 18207,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_TransitionTime: 18208,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_EffectiveTransitionTime: 18209,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_TrueState: 18210,\n AlarmGroupType_AlarmConditionInstance_Placeholder_LatchedState_FalseState: 18211,\n LimitAlarmType_LatchedState: 18213,\n LimitAlarmType_LatchedState_Id: 18214,\n LimitAlarmType_LatchedState_Name: 18215,\n LimitAlarmType_LatchedState_Number: 18216,\n LimitAlarmType_LatchedState_EffectiveDisplayName: 18217,\n LimitAlarmType_LatchedState_TransitionTime: 18218,\n LimitAlarmType_LatchedState_EffectiveTransitionTime: 18219,\n LimitAlarmType_LatchedState_TrueState: 18220,\n LimitAlarmType_LatchedState_FalseState: 18221,\n ExclusiveLimitAlarmType_LatchedState: 18223,\n ExclusiveLimitAlarmType_LatchedState_Id: 18224,\n ExclusiveLimitAlarmType_LatchedState_Name: 18225,\n ExclusiveLimitAlarmType_LatchedState_Number: 18226,\n ExclusiveLimitAlarmType_LatchedState_EffectiveDisplayName: 18227,\n ExclusiveLimitAlarmType_LatchedState_TransitionTime: 18228,\n ExclusiveLimitAlarmType_LatchedState_EffectiveTransitionTime: 18229,\n ExclusiveLimitAlarmType_LatchedState_TrueState: 18230,\n ExclusiveLimitAlarmType_LatchedState_FalseState: 18231,\n NonExclusiveLimitAlarmType_LatchedState: 18233,\n NonExclusiveLimitAlarmType_LatchedState_Id: 18234,\n NonExclusiveLimitAlarmType_LatchedState_Name: 18235,\n NonExclusiveLimitAlarmType_LatchedState_Number: 18236,\n NonExclusiveLimitAlarmType_LatchedState_EffectiveDisplayName: 18237,\n NonExclusiveLimitAlarmType_LatchedState_TransitionTime: 18238,\n NonExclusiveLimitAlarmType_LatchedState_EffectiveTransitionTime: 18239,\n NonExclusiveLimitAlarmType_LatchedState_TrueState: 18240,\n NonExclusiveLimitAlarmType_LatchedState_FalseState: 18241,\n NonExclusiveLevelAlarmType_AudibleSound_ListId: 18243,\n NonExclusiveLevelAlarmType_AudibleSound_AgencyId: 18244,\n NonExclusiveLevelAlarmType_AudibleSound_VersionId: 18245,\n NonExclusiveLevelAlarmType_LatchedState: 18246,\n NonExclusiveLevelAlarmType_LatchedState_Id: 18247,\n NonExclusiveLevelAlarmType_LatchedState_Name: 18248,\n NonExclusiveLevelAlarmType_LatchedState_Number: 18249,\n NonExclusiveLevelAlarmType_LatchedState_EffectiveDisplayName: 18250,\n NonExclusiveLevelAlarmType_LatchedState_TransitionTime: 18251,\n NonExclusiveLevelAlarmType_LatchedState_EffectiveTransitionTime: 18252,\n NonExclusiveLevelAlarmType_LatchedState_TrueState: 18253,\n NonExclusiveLevelAlarmType_LatchedState_FalseState: 18254,\n ExclusiveLevelAlarmType_LatchedState: 18257,\n ExclusiveLevelAlarmType_LatchedState_Id: 18258,\n ExclusiveLevelAlarmType_LatchedState_Name: 18259,\n ExclusiveLevelAlarmType_LatchedState_Number: 18260,\n ExclusiveLevelAlarmType_LatchedState_EffectiveDisplayName: 18261,\n ExclusiveLevelAlarmType_LatchedState_TransitionTime: 18262,\n ExclusiveLevelAlarmType_LatchedState_EffectiveTransitionTime: 18263,\n ExclusiveLevelAlarmType_LatchedState_TrueState: 18264,\n ExclusiveLevelAlarmType_LatchedState_FalseState: 18265,\n NonExclusiveDeviationAlarmType_LatchedState: 18267,\n NonExclusiveDeviationAlarmType_LatchedState_Id: 18268,\n NonExclusiveDeviationAlarmType_LatchedState_Name: 18269,\n NonExclusiveDeviationAlarmType_LatchedState_Number: 18270,\n NonExclusiveDeviationAlarmType_LatchedState_EffectiveDisplayName: 18271,\n NonExclusiveDeviationAlarmType_LatchedState_TransitionTime: 18272,\n NonExclusiveDeviationAlarmType_LatchedState_EffectiveTransitionTime: 18273,\n NonExclusiveDeviationAlarmType_LatchedState_TrueState: 18274,\n NonExclusiveDeviationAlarmType_LatchedState_FalseState: 18275,\n NonExclusiveRateOfChangeAlarmType_LatchedState: 18277,\n NonExclusiveRateOfChangeAlarmType_LatchedState_Id: 18278,\n NonExclusiveRateOfChangeAlarmType_LatchedState_Name: 18279,\n NonExclusiveRateOfChangeAlarmType_LatchedState_Number: 18280,\n NonExclusiveRateOfChangeAlarmType_LatchedState_EffectiveDisplayName: 18281,\n NonExclusiveRateOfChangeAlarmType_LatchedState_TransitionTime: 18282,\n NonExclusiveRateOfChangeAlarmType_LatchedState_EffectiveTransitionTime: 18283,\n NonExclusiveRateOfChangeAlarmType_LatchedState_TrueState: 18284,\n NonExclusiveRateOfChangeAlarmType_LatchedState_FalseState: 18285,\n ExclusiveDeviationAlarmType_LatchedState: 18287,\n ExclusiveDeviationAlarmType_LatchedState_Id: 18288,\n ExclusiveDeviationAlarmType_LatchedState_Name: 18289,\n ExclusiveDeviationAlarmType_LatchedState_Number: 18290,\n ExclusiveDeviationAlarmType_LatchedState_EffectiveDisplayName: 18291,\n ExclusiveDeviationAlarmType_LatchedState_TransitionTime: 18292,\n ExclusiveDeviationAlarmType_LatchedState_EffectiveTransitionTime: 18293,\n ExclusiveDeviationAlarmType_LatchedState_TrueState: 18294,\n ExclusiveDeviationAlarmType_LatchedState_FalseState: 18295,\n ExclusiveRateOfChangeAlarmType_LatchedState: 18297,\n ExclusiveRateOfChangeAlarmType_LatchedState_Id: 18298,\n ExclusiveRateOfChangeAlarmType_LatchedState_Name: 18299,\n ExclusiveRateOfChangeAlarmType_LatchedState_Number: 18300,\n ExclusiveRateOfChangeAlarmType_LatchedState_EffectiveDisplayName: 18301,\n ExclusiveRateOfChangeAlarmType_LatchedState_TransitionTime: 18302,\n ExclusiveRateOfChangeAlarmType_LatchedState_EffectiveTransitionTime: 18303,\n ExclusiveRateOfChangeAlarmType_LatchedState_TrueState: 18304,\n ExclusiveRateOfChangeAlarmType_LatchedState_FalseState: 18305,\n DiscreteAlarmType_LatchedState: 18307,\n DiscreteAlarmType_LatchedState_Id: 18308,\n DiscreteAlarmType_LatchedState_Name: 18309,\n DiscreteAlarmType_LatchedState_Number: 18310,\n DiscreteAlarmType_LatchedState_EffectiveDisplayName: 18311,\n DiscreteAlarmType_LatchedState_TransitionTime: 18312,\n DiscreteAlarmType_LatchedState_EffectiveTransitionTime: 18313,\n DiscreteAlarmType_LatchedState_TrueState: 18314,\n DiscreteAlarmType_LatchedState_FalseState: 18315,\n OffNormalAlarmType_LatchedState: 18317,\n OffNormalAlarmType_LatchedState_Id: 18318,\n OffNormalAlarmType_LatchedState_Name: 18319,\n OffNormalAlarmType_LatchedState_Number: 18320,\n OffNormalAlarmType_LatchedState_EffectiveDisplayName: 18321,\n OffNormalAlarmType_LatchedState_TransitionTime: 18322,\n OffNormalAlarmType_LatchedState_EffectiveTransitionTime: 18323,\n OffNormalAlarmType_LatchedState_TrueState: 18324,\n OffNormalAlarmType_LatchedState_FalseState: 18325,\n SystemOffNormalAlarmType_LatchedState: 18327,\n SystemOffNormalAlarmType_LatchedState_Id: 18328,\n SystemOffNormalAlarmType_LatchedState_Name: 18329,\n SystemOffNormalAlarmType_LatchedState_Number: 18330,\n SystemOffNormalAlarmType_LatchedState_EffectiveDisplayName: 18331,\n SystemOffNormalAlarmType_LatchedState_TransitionTime: 18332,\n SystemOffNormalAlarmType_LatchedState_EffectiveTransitionTime: 18333,\n SystemOffNormalAlarmType_LatchedState_TrueState: 18334,\n SystemOffNormalAlarmType_LatchedState_FalseState: 18335,\n TripAlarmType_LatchedState: 18337,\n TripAlarmType_LatchedState_Id: 18338,\n TripAlarmType_LatchedState_Name: 18339,\n TripAlarmType_LatchedState_Number: 18340,\n TripAlarmType_LatchedState_EffectiveDisplayName: 18341,\n TripAlarmType_LatchedState_TransitionTime: 18342,\n TripAlarmType_LatchedState_EffectiveTransitionTime: 18343,\n TripAlarmType_LatchedState_TrueState: 18344,\n TripAlarmType_LatchedState_FalseState: 18345,\n InstrumentDiagnosticAlarmType_EventId: 18348,\n InstrumentDiagnosticAlarmType_EventType: 18349,\n InstrumentDiagnosticAlarmType_SourceNode: 18350,\n InstrumentDiagnosticAlarmType_SourceName: 18351,\n InstrumentDiagnosticAlarmType_Time: 18352,\n InstrumentDiagnosticAlarmType_ReceiveTime: 18353,\n InstrumentDiagnosticAlarmType_LocalTime: 18354,\n InstrumentDiagnosticAlarmType_Message: 18355,\n InstrumentDiagnosticAlarmType_Severity: 18356,\n InstrumentDiagnosticAlarmType_ConditionClassId: 18357,\n InstrumentDiagnosticAlarmType_ConditionClassName: 18358,\n InstrumentDiagnosticAlarmType_ConditionSubClassId: 18359,\n InstrumentDiagnosticAlarmType_ConditionSubClassName: 18360,\n InstrumentDiagnosticAlarmType_ConditionName: 18361,\n InstrumentDiagnosticAlarmType_BranchId: 18362,\n InstrumentDiagnosticAlarmType_Retain: 18363,\n InstrumentDiagnosticAlarmType_EnabledState: 18364,\n InstrumentDiagnosticAlarmType_EnabledState_Id: 18365,\n InstrumentDiagnosticAlarmType_EnabledState_Name: 18366,\n InstrumentDiagnosticAlarmType_EnabledState_Number: 18367,\n InstrumentDiagnosticAlarmType_EnabledState_EffectiveDisplayName: 18368,\n InstrumentDiagnosticAlarmType_EnabledState_TransitionTime: 18369,\n InstrumentDiagnosticAlarmType_EnabledState_EffectiveTransitionTime: 18370,\n InstrumentDiagnosticAlarmType_EnabledState_TrueState: 18371,\n InstrumentDiagnosticAlarmType_EnabledState_FalseState: 18372,\n InstrumentDiagnosticAlarmType_Quality: 18373,\n InstrumentDiagnosticAlarmType_Quality_SourceTimestamp: 18374,\n InstrumentDiagnosticAlarmType_LastSeverity: 18375,\n InstrumentDiagnosticAlarmType_LastSeverity_SourceTimestamp: 18376,\n InstrumentDiagnosticAlarmType_Comment: 18377,\n InstrumentDiagnosticAlarmType_Comment_SourceTimestamp: 18378,\n InstrumentDiagnosticAlarmType_ClientUserId: 18379,\n InstrumentDiagnosticAlarmType_AddComment_InputArguments: 18383,\n InstrumentDiagnosticAlarmType_ConditionRefresh_InputArguments: 18385,\n InstrumentDiagnosticAlarmType_ConditionRefresh2_InputArguments: 18387,\n InstrumentDiagnosticAlarmType_AckedState: 18388,\n InstrumentDiagnosticAlarmType_AckedState_Id: 18389,\n InstrumentDiagnosticAlarmType_AckedState_Name: 18390,\n InstrumentDiagnosticAlarmType_AckedState_Number: 18391,\n InstrumentDiagnosticAlarmType_AckedState_EffectiveDisplayName: 18392,\n InstrumentDiagnosticAlarmType_AckedState_TransitionTime: 18393,\n InstrumentDiagnosticAlarmType_AckedState_EffectiveTransitionTime: 18394,\n InstrumentDiagnosticAlarmType_AckedState_TrueState: 18395,\n InstrumentDiagnosticAlarmType_AckedState_FalseState: 18396,\n InstrumentDiagnosticAlarmType_ConfirmedState: 18397,\n InstrumentDiagnosticAlarmType_ConfirmedState_Id: 18398,\n InstrumentDiagnosticAlarmType_ConfirmedState_Name: 18399,\n InstrumentDiagnosticAlarmType_ConfirmedState_Number: 18400,\n InstrumentDiagnosticAlarmType_ConfirmedState_EffectiveDisplayName: 18401,\n InstrumentDiagnosticAlarmType_ConfirmedState_TransitionTime: 18402,\n InstrumentDiagnosticAlarmType_ConfirmedState_EffectiveTransitionTime: 18403,\n InstrumentDiagnosticAlarmType_ConfirmedState_TrueState: 18404,\n InstrumentDiagnosticAlarmType_ConfirmedState_FalseState: 18405,\n InstrumentDiagnosticAlarmType_Acknowledge_InputArguments: 18407,\n InstrumentDiagnosticAlarmType_Confirm_InputArguments: 18409,\n InstrumentDiagnosticAlarmType_ActiveState: 18410,\n InstrumentDiagnosticAlarmType_ActiveState_Id: 18411,\n InstrumentDiagnosticAlarmType_ActiveState_Name: 18412,\n InstrumentDiagnosticAlarmType_ActiveState_Number: 18413,\n InstrumentDiagnosticAlarmType_ActiveState_EffectiveDisplayName: 18414,\n InstrumentDiagnosticAlarmType_ActiveState_TransitionTime: 18415,\n InstrumentDiagnosticAlarmType_ActiveState_EffectiveTransitionTime: 18416,\n InstrumentDiagnosticAlarmType_ActiveState_TrueState: 18417,\n InstrumentDiagnosticAlarmType_ActiveState_FalseState: 18418,\n InstrumentDiagnosticAlarmType_InputNode: 18419,\n InstrumentDiagnosticAlarmType_SuppressedState: 18420,\n InstrumentDiagnosticAlarmType_SuppressedState_Id: 18421,\n InstrumentDiagnosticAlarmType_SuppressedState_Name: 18422,\n InstrumentDiagnosticAlarmType_SuppressedState_Number: 18423,\n InstrumentDiagnosticAlarmType_SuppressedState_EffectiveDisplayName: 18424,\n InstrumentDiagnosticAlarmType_SuppressedState_TransitionTime: 18425,\n InstrumentDiagnosticAlarmType_SuppressedState_EffectiveTransitionTime: 18426,\n InstrumentDiagnosticAlarmType_SuppressedState_TrueState: 18427,\n InstrumentDiagnosticAlarmType_SuppressedState_FalseState: 18428,\n InstrumentDiagnosticAlarmType_OutOfServiceState: 18429,\n InstrumentDiagnosticAlarmType_OutOfServiceState_Id: 18430,\n InstrumentDiagnosticAlarmType_OutOfServiceState_Name: 18431,\n InstrumentDiagnosticAlarmType_OutOfServiceState_Number: 18432,\n InstrumentDiagnosticAlarmType_OutOfServiceState_EffectiveDisplayName: 18433,\n InstrumentDiagnosticAlarmType_OutOfServiceState_TransitionTime: 18434,\n InstrumentDiagnosticAlarmType_OutOfServiceState_EffectiveTransitionTime: 18435,\n InstrumentDiagnosticAlarmType_OutOfServiceState_TrueState: 18436,\n InstrumentDiagnosticAlarmType_OutOfServiceState_FalseState: 18437,\n InstrumentDiagnosticAlarmType_ShelvingState_CurrentState: 18439,\n InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_Id: 18440,\n InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_Name: 18441,\n InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_Number: 18442,\n InstrumentDiagnosticAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 18443,\n InstrumentDiagnosticAlarmType_ShelvingState_LastTransition: 18444,\n InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_Id: 18445,\n InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_Name: 18446,\n InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_Number: 18447,\n InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_TransitionTime: 18448,\n InstrumentDiagnosticAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 18449,\n InstrumentDiagnosticAlarmType_ShelvingState_AvailableStates: 18450,\n InstrumentDiagnosticAlarmType_ShelvingState_AvailableTransitions: 18451,\n InstrumentDiagnosticAlarmType_ShelvingState_UnshelveTime: 18452,\n InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments: 18454,\n InstrumentDiagnosticAlarmType_SuppressedOrShelved: 18457,\n InstrumentDiagnosticAlarmType_MaxTimeShelved: 18458,\n InstrumentDiagnosticAlarmType_AudibleEnabled: 18459,\n InstrumentDiagnosticAlarmType_AudibleSound: 18460,\n InstrumentDiagnosticAlarmType_AudibleSound_ListId: 18461,\n InstrumentDiagnosticAlarmType_AudibleSound_AgencyId: 18462,\n InstrumentDiagnosticAlarmType_AudibleSound_VersionId: 18463,\n InstrumentDiagnosticAlarmType_SilenceState: 18464,\n InstrumentDiagnosticAlarmType_SilenceState_Id: 18465,\n InstrumentDiagnosticAlarmType_SilenceState_Name: 18466,\n InstrumentDiagnosticAlarmType_SilenceState_Number: 18467,\n InstrumentDiagnosticAlarmType_SilenceState_EffectiveDisplayName: 18468,\n InstrumentDiagnosticAlarmType_SilenceState_TransitionTime: 18469,\n InstrumentDiagnosticAlarmType_SilenceState_EffectiveTransitionTime: 18470,\n InstrumentDiagnosticAlarmType_SilenceState_TrueState: 18471,\n InstrumentDiagnosticAlarmType_SilenceState_FalseState: 18472,\n InstrumentDiagnosticAlarmType_OnDelay: 18473,\n InstrumentDiagnosticAlarmType_OffDelay: 18474,\n InstrumentDiagnosticAlarmType_FirstInGroupFlag: 18475,\n InstrumentDiagnosticAlarmType_LatchedState: 18477,\n InstrumentDiagnosticAlarmType_LatchedState_Id: 18478,\n InstrumentDiagnosticAlarmType_LatchedState_Name: 18479,\n InstrumentDiagnosticAlarmType_LatchedState_Number: 18480,\n InstrumentDiagnosticAlarmType_LatchedState_EffectiveDisplayName: 18481,\n InstrumentDiagnosticAlarmType_LatchedState_TransitionTime: 18482,\n InstrumentDiagnosticAlarmType_LatchedState_EffectiveTransitionTime: 18483,\n InstrumentDiagnosticAlarmType_LatchedState_TrueState: 18484,\n InstrumentDiagnosticAlarmType_LatchedState_FalseState: 18485,\n InstrumentDiagnosticAlarmType_ReAlarmTime: 18487,\n InstrumentDiagnosticAlarmType_ReAlarmRepeatCount: 18488,\n InstrumentDiagnosticAlarmType_NormalState: 18495,\n SystemDiagnosticAlarmType_EventId: 18497,\n SystemDiagnosticAlarmType_EventType: 18498,\n SystemDiagnosticAlarmType_SourceNode: 18499,\n SystemDiagnosticAlarmType_SourceName: 18500,\n SystemDiagnosticAlarmType_Time: 18501,\n SystemDiagnosticAlarmType_ReceiveTime: 18502,\n SystemDiagnosticAlarmType_LocalTime: 18503,\n SystemDiagnosticAlarmType_Message: 18504,\n SystemDiagnosticAlarmType_Severity: 18505,\n SystemDiagnosticAlarmType_ConditionClassId: 18506,\n SystemDiagnosticAlarmType_ConditionClassName: 18507,\n SystemDiagnosticAlarmType_ConditionSubClassId: 18508,\n SystemDiagnosticAlarmType_ConditionSubClassName: 18509,\n SystemDiagnosticAlarmType_ConditionName: 18510,\n SystemDiagnosticAlarmType_BranchId: 18511,\n SystemDiagnosticAlarmType_Retain: 18512,\n SystemDiagnosticAlarmType_EnabledState: 18513,\n SystemDiagnosticAlarmType_EnabledState_Id: 18514,\n SystemDiagnosticAlarmType_EnabledState_Name: 18515,\n SystemDiagnosticAlarmType_EnabledState_Number: 18516,\n SystemDiagnosticAlarmType_EnabledState_EffectiveDisplayName: 18517,\n SystemDiagnosticAlarmType_EnabledState_TransitionTime: 18518,\n SystemDiagnosticAlarmType_EnabledState_EffectiveTransitionTime: 18519,\n SystemDiagnosticAlarmType_EnabledState_TrueState: 18520,\n SystemDiagnosticAlarmType_EnabledState_FalseState: 18521,\n SystemDiagnosticAlarmType_Quality: 18522,\n SystemDiagnosticAlarmType_Quality_SourceTimestamp: 18523,\n SystemDiagnosticAlarmType_LastSeverity: 18524,\n SystemDiagnosticAlarmType_LastSeverity_SourceTimestamp: 18525,\n SystemDiagnosticAlarmType_Comment: 18526,\n SystemDiagnosticAlarmType_Comment_SourceTimestamp: 18527,\n SystemDiagnosticAlarmType_ClientUserId: 18528,\n SystemDiagnosticAlarmType_AddComment_InputArguments: 18532,\n SystemDiagnosticAlarmType_ConditionRefresh_InputArguments: 18534,\n SystemDiagnosticAlarmType_ConditionRefresh2_InputArguments: 18536,\n SystemDiagnosticAlarmType_AckedState: 18537,\n SystemDiagnosticAlarmType_AckedState_Id: 18538,\n SystemDiagnosticAlarmType_AckedState_Name: 18539,\n SystemDiagnosticAlarmType_AckedState_Number: 18540,\n SystemDiagnosticAlarmType_AckedState_EffectiveDisplayName: 18541,\n SystemDiagnosticAlarmType_AckedState_TransitionTime: 18542,\n SystemDiagnosticAlarmType_AckedState_EffectiveTransitionTime: 18543,\n SystemDiagnosticAlarmType_AckedState_TrueState: 18544,\n SystemDiagnosticAlarmType_AckedState_FalseState: 18545,\n SystemDiagnosticAlarmType_ConfirmedState: 18546,\n SystemDiagnosticAlarmType_ConfirmedState_Id: 18547,\n SystemDiagnosticAlarmType_ConfirmedState_Name: 18548,\n SystemDiagnosticAlarmType_ConfirmedState_Number: 18549,\n SystemDiagnosticAlarmType_ConfirmedState_EffectiveDisplayName: 18550,\n SystemDiagnosticAlarmType_ConfirmedState_TransitionTime: 18551,\n SystemDiagnosticAlarmType_ConfirmedState_EffectiveTransitionTime: 18552,\n SystemDiagnosticAlarmType_ConfirmedState_TrueState: 18553,\n SystemDiagnosticAlarmType_ConfirmedState_FalseState: 18554,\n SystemDiagnosticAlarmType_Acknowledge_InputArguments: 18556,\n SystemDiagnosticAlarmType_Confirm_InputArguments: 18558,\n SystemDiagnosticAlarmType_ActiveState: 18559,\n SystemDiagnosticAlarmType_ActiveState_Id: 18560,\n SystemDiagnosticAlarmType_ActiveState_Name: 18561,\n SystemDiagnosticAlarmType_ActiveState_Number: 18562,\n SystemDiagnosticAlarmType_ActiveState_EffectiveDisplayName: 18563,\n SystemDiagnosticAlarmType_ActiveState_TransitionTime: 18564,\n SystemDiagnosticAlarmType_ActiveState_EffectiveTransitionTime: 18565,\n SystemDiagnosticAlarmType_ActiveState_TrueState: 18566,\n SystemDiagnosticAlarmType_ActiveState_FalseState: 18567,\n SystemDiagnosticAlarmType_InputNode: 18568,\n SystemDiagnosticAlarmType_SuppressedState: 18569,\n SystemDiagnosticAlarmType_SuppressedState_Id: 18570,\n SystemDiagnosticAlarmType_SuppressedState_Name: 18571,\n SystemDiagnosticAlarmType_SuppressedState_Number: 18572,\n SystemDiagnosticAlarmType_SuppressedState_EffectiveDisplayName: 18573,\n SystemDiagnosticAlarmType_SuppressedState_TransitionTime: 18574,\n SystemDiagnosticAlarmType_SuppressedState_EffectiveTransitionTime: 18575,\n SystemDiagnosticAlarmType_SuppressedState_TrueState: 18576,\n SystemDiagnosticAlarmType_SuppressedState_FalseState: 18577,\n SystemDiagnosticAlarmType_OutOfServiceState: 18578,\n SystemDiagnosticAlarmType_OutOfServiceState_Id: 18579,\n SystemDiagnosticAlarmType_OutOfServiceState_Name: 18580,\n SystemDiagnosticAlarmType_OutOfServiceState_Number: 18581,\n SystemDiagnosticAlarmType_OutOfServiceState_EffectiveDisplayName: 18582,\n SystemDiagnosticAlarmType_OutOfServiceState_TransitionTime: 18583,\n SystemDiagnosticAlarmType_OutOfServiceState_EffectiveTransitionTime: 18584,\n SystemDiagnosticAlarmType_OutOfServiceState_TrueState: 18585,\n SystemDiagnosticAlarmType_OutOfServiceState_FalseState: 18586,\n SystemDiagnosticAlarmType_ShelvingState_CurrentState: 18588,\n SystemDiagnosticAlarmType_ShelvingState_CurrentState_Id: 18589,\n SystemDiagnosticAlarmType_ShelvingState_CurrentState_Name: 18590,\n SystemDiagnosticAlarmType_ShelvingState_CurrentState_Number: 18591,\n SystemDiagnosticAlarmType_ShelvingState_CurrentState_EffectiveDisplayName: 18592,\n SystemDiagnosticAlarmType_ShelvingState_LastTransition: 18593,\n SystemDiagnosticAlarmType_ShelvingState_LastTransition_Id: 18594,\n SystemDiagnosticAlarmType_ShelvingState_LastTransition_Name: 18595,\n SystemDiagnosticAlarmType_ShelvingState_LastTransition_Number: 18596,\n SystemDiagnosticAlarmType_ShelvingState_LastTransition_TransitionTime: 18597,\n SystemDiagnosticAlarmType_ShelvingState_LastTransition_EffectiveTransitionTime: 18598,\n SystemDiagnosticAlarmType_ShelvingState_AvailableStates: 18599,\n SystemDiagnosticAlarmType_ShelvingState_AvailableTransitions: 18600,\n SystemDiagnosticAlarmType_ShelvingState_UnshelveTime: 18601,\n SystemDiagnosticAlarmType_ShelvingState_TimedShelve_InputArguments: 18603,\n SystemDiagnosticAlarmType_SuppressedOrShelved: 18606,\n SystemDiagnosticAlarmType_MaxTimeShelved: 18607,\n SystemDiagnosticAlarmType_AudibleEnabled: 18608,\n SystemDiagnosticAlarmType_AudibleSound: 18609,\n SystemDiagnosticAlarmType_AudibleSound_ListId: 18610,\n SystemDiagnosticAlarmType_AudibleSound_AgencyId: 18611,\n SystemDiagnosticAlarmType_AudibleSound_VersionId: 18612,\n SystemDiagnosticAlarmType_SilenceState: 18613,\n SystemDiagnosticAlarmType_SilenceState_Id: 18614,\n SystemDiagnosticAlarmType_SilenceState_Name: 18615,\n SystemDiagnosticAlarmType_SilenceState_Number: 18616,\n SystemDiagnosticAlarmType_SilenceState_EffectiveDisplayName: 18617,\n SystemDiagnosticAlarmType_SilenceState_TransitionTime: 18618,\n SystemDiagnosticAlarmType_SilenceState_EffectiveTransitionTime: 18619,\n SystemDiagnosticAlarmType_SilenceState_TrueState: 18620,\n SystemDiagnosticAlarmType_SilenceState_FalseState: 18621,\n SystemDiagnosticAlarmType_OnDelay: 18622,\n SystemDiagnosticAlarmType_OffDelay: 18623,\n SystemDiagnosticAlarmType_FirstInGroupFlag: 18624,\n SystemDiagnosticAlarmType_LatchedState: 18626,\n SystemDiagnosticAlarmType_LatchedState_Id: 18627,\n SystemDiagnosticAlarmType_LatchedState_Name: 18628,\n SystemDiagnosticAlarmType_LatchedState_Number: 18629,\n SystemDiagnosticAlarmType_LatchedState_EffectiveDisplayName: 18630,\n SystemDiagnosticAlarmType_LatchedState_TransitionTime: 18631,\n SystemDiagnosticAlarmType_LatchedState_EffectiveTransitionTime: 18632,\n SystemDiagnosticAlarmType_LatchedState_TrueState: 18633,\n SystemDiagnosticAlarmType_LatchedState_FalseState: 18634,\n SystemDiagnosticAlarmType_ReAlarmTime: 18636,\n SystemDiagnosticAlarmType_ReAlarmRepeatCount: 18637,\n SystemDiagnosticAlarmType_NormalState: 18644,\n CertificateExpirationAlarmType_LatchedState: 18645,\n CertificateExpirationAlarmType_LatchedState_Id: 18646,\n CertificateExpirationAlarmType_LatchedState_Name: 18647,\n CertificateExpirationAlarmType_LatchedState_Number: 18648,\n CertificateExpirationAlarmType_LatchedState_EffectiveDisplayName: 18649,\n CertificateExpirationAlarmType_LatchedState_TransitionTime: 18650,\n CertificateExpirationAlarmType_LatchedState_EffectiveTransitionTime: 18651,\n CertificateExpirationAlarmType_LatchedState_TrueState: 18652,\n CertificateExpirationAlarmType_LatchedState_FalseState: 18653,\n DiscrepancyAlarmType_LatchedState: 18655,\n DiscrepancyAlarmType_LatchedState_Id: 18656,\n DiscrepancyAlarmType_LatchedState_Name: 18657,\n DiscrepancyAlarmType_LatchedState_Number: 18658,\n DiscrepancyAlarmType_LatchedState_EffectiveDisplayName: 18659,\n DiscrepancyAlarmType_LatchedState_TransitionTime: 18660,\n DiscrepancyAlarmType_LatchedState_EffectiveTransitionTime: 18661,\n DiscrepancyAlarmType_LatchedState_TrueState: 18662,\n DiscrepancyAlarmType_LatchedState_FalseState: 18663\n};\n export var MethodIds = { \n ProgramStateMachineType_Start: 2426,\n ProgramStateMachineType_Suspend: 2427,\n ProgramStateMachineType_Resume: 2428,\n ProgramStateMachineType_Halt: 2429,\n ProgramStateMachineType_Reset: 2430,\n ShelvedStateMachineType_Unshelve: 2947,\n ShelvedStateMachineType_OneShotShelve: 2948,\n ShelvedStateMachineType_TimedShelve: 2949,\n AddCommentMethodType: 3863,\n ConditionType_ConditionRefresh: 3875,\n DialogConditionType_ConditionRefresh: 4198,\n AcknowledgeableConditionType_ConditionRefresh: 5123,\n AlarmConditionType_ConditionRefresh: 5550,\n TimedShelveMethodType: 6102,\n LimitAlarmType_ConditionRefresh: 6126,\n ConditionRefreshMethodType: 9007,\n ConditionType_Enable: 9027,\n ConditionType_Disable: 9028,\n ConditionType_AddComment: 9029,\n DialogResponseMethodType: 9031,\n DialogConditionType_Enable: 9051,\n DialogConditionType_Disable: 9052,\n DialogConditionType_AddComment: 9053,\n DialogConditionType_Respond: 9069,\n AcknowledgeableConditionType_Enable: 9089,\n AcknowledgeableConditionType_Disable: 9090,\n AcknowledgeableConditionType_AddComment: 9091,\n AcknowledgeableConditionType_Acknowledge: 9111,\n AcknowledgeableConditionType_Confirm: 9113,\n AlarmConditionType_Enable: 9134,\n AlarmConditionType_Disable: 9135,\n AlarmConditionType_AddComment: 9136,\n AlarmConditionType_Acknowledge: 9156,\n AlarmConditionType_Confirm: 9158,\n AlarmConditionType_ShelvingState_Unshelve: 9211,\n AlarmConditionType_ShelvingState_OneShotShelve: 9212,\n AlarmConditionType_ShelvingState_TimedShelve: 9213,\n LimitAlarmType_Enable: 9235,\n LimitAlarmType_Disable: 9236,\n LimitAlarmType_AddComment: 9237,\n LimitAlarmType_Acknowledge: 9257,\n LimitAlarmType_Confirm: 9259,\n LimitAlarmType_ShelvingState_Unshelve: 9312,\n LimitAlarmType_ShelvingState_OneShotShelve: 9313,\n LimitAlarmType_ShelvingState_TimedShelve: 9314,\n ExclusiveLimitAlarmType_Enable: 9370,\n ExclusiveLimitAlarmType_Disable: 9371,\n ExclusiveLimitAlarmType_AddComment: 9372,\n ExclusiveLimitAlarmType_ConditionRefresh: 9374,\n ExclusiveLimitAlarmType_Acknowledge: 9394,\n ExclusiveLimitAlarmType_Confirm: 9396,\n ExclusiveLimitAlarmType_ShelvingState_Unshelve: 9449,\n ExclusiveLimitAlarmType_ShelvingState_OneShotShelve: 9450,\n ExclusiveLimitAlarmType_ShelvingState_TimedShelve: 9451,\n ExclusiveLevelAlarmType_Enable: 9511,\n ExclusiveLevelAlarmType_Disable: 9512,\n ExclusiveLevelAlarmType_AddComment: 9513,\n ExclusiveLevelAlarmType_ConditionRefresh: 9515,\n ExclusiveLevelAlarmType_Acknowledge: 9535,\n ExclusiveLevelAlarmType_Confirm: 9537,\n ExclusiveLevelAlarmType_ShelvingState_Unshelve: 9590,\n ExclusiveLevelAlarmType_ShelvingState_OneShotShelve: 9591,\n ExclusiveLevelAlarmType_ShelvingState_TimedShelve: 9592,\n ExclusiveRateOfChangeAlarmType_Enable: 9652,\n ExclusiveRateOfChangeAlarmType_Disable: 9653,\n ExclusiveRateOfChangeAlarmType_AddComment: 9654,\n ExclusiveRateOfChangeAlarmType_ConditionRefresh: 9656,\n ExclusiveRateOfChangeAlarmType_Acknowledge: 9676,\n ExclusiveRateOfChangeAlarmType_Confirm: 9678,\n ExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve: 9731,\n ExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve: 9732,\n ExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve: 9733,\n ExclusiveDeviationAlarmType_Enable: 9793,\n ExclusiveDeviationAlarmType_Disable: 9794,\n ExclusiveDeviationAlarmType_AddComment: 9795,\n ExclusiveDeviationAlarmType_ConditionRefresh: 9797,\n ExclusiveDeviationAlarmType_Acknowledge: 9817,\n ExclusiveDeviationAlarmType_Confirm: 9819,\n ExclusiveDeviationAlarmType_ShelvingState_Unshelve: 9872,\n ExclusiveDeviationAlarmType_ShelvingState_OneShotShelve: 9873,\n ExclusiveDeviationAlarmType_ShelvingState_TimedShelve: 9874,\n NonExclusiveLimitAlarmType_Enable: 9935,\n NonExclusiveLimitAlarmType_Disable: 9936,\n NonExclusiveLimitAlarmType_AddComment: 9937,\n NonExclusiveLimitAlarmType_ConditionRefresh: 9939,\n NonExclusiveLimitAlarmType_Acknowledge: 9959,\n NonExclusiveLimitAlarmType_Confirm: 9961,\n NonExclusiveLimitAlarmType_ShelvingState_Unshelve: 10014,\n NonExclusiveLimitAlarmType_ShelvingState_OneShotShelve: 10015,\n NonExclusiveLimitAlarmType_ShelvingState_TimedShelve: 10016,\n NonExclusiveLevelAlarmType_Enable: 10089,\n NonExclusiveLevelAlarmType_Disable: 10090,\n NonExclusiveLevelAlarmType_AddComment: 10091,\n NonExclusiveLevelAlarmType_ConditionRefresh: 10093,\n NonExclusiveLevelAlarmType_Acknowledge: 10113,\n NonExclusiveLevelAlarmType_Confirm: 10115,\n NonExclusiveLevelAlarmType_ShelvingState_Unshelve: 10168,\n NonExclusiveLevelAlarmType_ShelvingState_OneShotShelve: 10169,\n NonExclusiveLevelAlarmType_ShelvingState_TimedShelve: 10170,\n NonExclusiveRateOfChangeAlarmType_Enable: 10243,\n NonExclusiveRateOfChangeAlarmType_Disable: 10244,\n NonExclusiveRateOfChangeAlarmType_AddComment: 10245,\n NonExclusiveRateOfChangeAlarmType_ConditionRefresh: 10247,\n NonExclusiveRateOfChangeAlarmType_Acknowledge: 10267,\n NonExclusiveRateOfChangeAlarmType_Confirm: 10269,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_Unshelve: 10322,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_OneShotShelve: 10323,\n NonExclusiveRateOfChangeAlarmType_ShelvingState_TimedShelve: 10324,\n NonExclusiveDeviationAlarmType_Enable: 10397,\n NonExclusiveDeviationAlarmType_Disable: 10398,\n NonExclusiveDeviationAlarmType_AddComment: 10399,\n NonExclusiveDeviationAlarmType_ConditionRefresh: 10401,\n NonExclusiveDeviationAlarmType_Acknowledge: 10421,\n NonExclusiveDeviationAlarmType_Confirm: 10423,\n NonExclusiveDeviationAlarmType_ShelvingState_Unshelve: 10476,\n NonExclusiveDeviationAlarmType_ShelvingState_OneShotShelve: 10477,\n NonExclusiveDeviationAlarmType_ShelvingState_TimedShelve: 10478,\n DiscreteAlarmType_Enable: 10552,\n DiscreteAlarmType_Disable: 10553,\n DiscreteAlarmType_AddComment: 10554,\n DiscreteAlarmType_ConditionRefresh: 10556,\n DiscreteAlarmType_Acknowledge: 10576,\n DiscreteAlarmType_Confirm: 10578,\n DiscreteAlarmType_ShelvingState_Unshelve: 10631,\n DiscreteAlarmType_ShelvingState_OneShotShelve: 10632,\n DiscreteAlarmType_ShelvingState_TimedShelve: 10633,\n OffNormalAlarmType_Enable: 10666,\n OffNormalAlarmType_Disable: 10667,\n OffNormalAlarmType_AddComment: 10668,\n OffNormalAlarmType_ConditionRefresh: 10670,\n OffNormalAlarmType_Acknowledge: 10690,\n OffNormalAlarmType_Confirm: 10692,\n OffNormalAlarmType_ShelvingState_Unshelve: 10745,\n OffNormalAlarmType_ShelvingState_OneShotShelve: 10746,\n OffNormalAlarmType_ShelvingState_TimedShelve: 10747,\n TripAlarmType_Enable: 10780,\n TripAlarmType_Disable: 10781,\n TripAlarmType_AddComment: 10782,\n TripAlarmType_ConditionRefresh: 10784,\n TripAlarmType_Acknowledge: 10804,\n TripAlarmType_Confirm: 10806,\n TripAlarmType_ShelvingState_Unshelve: 10859,\n TripAlarmType_ShelvingState_OneShotShelve: 10860,\n TripAlarmType_ShelvingState_TimedShelve: 10861,\n ServerType_GetMonitoredItems: 11489,\n Server_GetMonitoredItems: 11492,\n GetMonitoredItemsMethodType: 11495,\n FileType_Open: 11580,\n FileType_Close: 11583,\n FileType_Read: 11585,\n FileType_Write: 11588,\n FileType_GetPosition: 11590,\n FileType_SetPosition: 11593,\n AddressSpaceFileType_Open: 11600,\n AddressSpaceFileType_Close: 11603,\n AddressSpaceFileType_Read: 11605,\n AddressSpaceFileType_Write: 11608,\n AddressSpaceFileType_GetPosition: 11610,\n AddressSpaceFileType_SetPosition: 11613,\n AddressSpaceFileType_ExportNamespace: 11615,\n NamespaceMetadataType_NamespaceFile_Open: 11629,\n NamespaceMetadataType_NamespaceFile_Close: 11632,\n NamespaceMetadataType_NamespaceFile_Read: 11634,\n NamespaceMetadataType_NamespaceFile_Write: 11637,\n NamespaceMetadataType_NamespaceFile_GetPosition: 11639,\n NamespaceMetadataType_NamespaceFile_SetPosition: 11642,\n NamespaceMetadataType_NamespaceFile_ExportNamespace: 11644,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Open: 11659,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Close: 11662,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Read: 11664,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_Write: 11667,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_GetPosition: 11669,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_SetPosition: 11672,\n NamespacesType_NamespaceIdentifier_Placeholder_NamespaceFile_ExportNamespace: 11674,\n OpenMethodType: 11738,\n CloseMethodType: 11741,\n ReadMethodType: 11743,\n WriteMethodType: 11746,\n GetPositionMethodType: 11748,\n SetPositionMethodType: 11751,\n SystemOffNormalAlarmType_Disable: 11784,\n SystemOffNormalAlarmType_Enable: 11785,\n SystemOffNormalAlarmType_AddComment: 11786,\n SystemOffNormalAlarmType_ConditionRefresh: 11788,\n SystemOffNormalAlarmType_Acknowledge: 11808,\n SystemOffNormalAlarmType_Confirm: 11810,\n SystemOffNormalAlarmType_ShelvingState_Unshelve: 11844,\n SystemOffNormalAlarmType_ShelvingState_OneShotShelve: 11845,\n SystemOffNormalAlarmType_ShelvingState_TimedShelve: 11846,\n OpenWithMasksMethodType: 12513,\n CloseAndUpdateMethodType: 12516,\n AddCertificateMethodType: 12518,\n RemoveCertificateMethodType: 12520,\n TrustListType_Open: 12527,\n TrustListType_Close: 12530,\n TrustListType_Read: 12532,\n TrustListType_Write: 12535,\n TrustListType_GetPosition: 12537,\n TrustListType_SetPosition: 12540,\n TrustListType_OpenWithMasks: 12543,\n TrustListType_CloseAndUpdate: 12546,\n TrustListType_AddCertificate: 12548,\n TrustListType_RemoveCertificate: 12550,\n UpdateCertificateMethodType: 12578,\n ServerConfigurationType_UpdateCertificate: 12616,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Open: 12647,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Close: 12650,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Read: 12652,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_Write: 12655,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition: 12657,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition: 12660,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks: 12663,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate: 12666,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate: 12668,\n ServerConfiguration_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate: 12670,\n ServerConfigurationType_CreateSigningRequest: 12731,\n ServerConfigurationType_ApplyChanges: 12734,\n ServerConfiguration_CreateSigningRequest: 12737,\n ServerConfiguration_ApplyChanges: 12740,\n CreateSigningRequestMethodType: 12741,\n ServerType_SetSubscriptionDurable: 12746,\n Server_SetSubscriptionDurable: 12749,\n SetSubscriptionDurableMethodType: 12752,\n GetRejectedListMethodType: 12773,\n ServerConfigurationType_GetRejectedList: 12775,\n ServerConfiguration_GetRejectedList: 12777,\n ServerType_ResendData: 12871,\n Server_ResendData: 12873,\n ResendDataMethodType: 12875,\n ServerType_RequestServerStateChange: 12883,\n Server_RequestServerStateChange: 12886,\n RequestServerStateChangeMethodType: 12888,\n ConditionType_ConditionRefresh2: 12912,\n ConditionRefresh2MethodType: 12914,\n DialogConditionType_ConditionRefresh2: 12916,\n AcknowledgeableConditionType_ConditionRefresh2: 12918,\n AlarmConditionType_ConditionRefresh2: 12984,\n LimitAlarmType_ConditionRefresh2: 12986,\n ExclusiveLimitAlarmType_ConditionRefresh2: 12988,\n NonExclusiveLimitAlarmType_ConditionRefresh2: 12990,\n NonExclusiveLevelAlarmType_ConditionRefresh2: 12992,\n ExclusiveLevelAlarmType_ConditionRefresh2: 12994,\n NonExclusiveDeviationAlarmType_ConditionRefresh2: 12996,\n ExclusiveDeviationAlarmType_ConditionRefresh2: 12998,\n NonExclusiveRateOfChangeAlarmType_ConditionRefresh2: 13000,\n ExclusiveRateOfChangeAlarmType_ConditionRefresh2: 13002,\n DiscreteAlarmType_ConditionRefresh2: 13004,\n OffNormalAlarmType_ConditionRefresh2: 13006,\n SystemOffNormalAlarmType_ConditionRefresh2: 13008,\n TripAlarmType_ConditionRefresh2: 13010,\n CertificateExpirationAlarmType_Disable: 13256,\n CertificateExpirationAlarmType_Enable: 13257,\n CertificateExpirationAlarmType_AddComment: 13258,\n CertificateExpirationAlarmType_ConditionRefresh: 13260,\n CertificateExpirationAlarmType_ConditionRefresh2: 13262,\n CertificateExpirationAlarmType_Acknowledge: 13282,\n CertificateExpirationAlarmType_Confirm: 13284,\n CertificateExpirationAlarmType_ShelvingState_Unshelve: 13318,\n CertificateExpirationAlarmType_ShelvingState_OneShotShelve: 13319,\n CertificateExpirationAlarmType_ShelvingState_TimedShelve: 13320,\n CreateDirectoryMethodType: 13342,\n CreateFileMethodType: 13345,\n DeleteFileMethodType: 13348,\n MoveOrCopyMethodType: 13350,\n FileDirectoryType_FileDirectoryName_Placeholder_CreateDirectory: 13355,\n FileDirectoryType_FileDirectoryName_Placeholder_CreateFile: 13358,\n FileDirectoryType_FileDirectoryName_Placeholder_MoveOrCopy: 13363,\n FileDirectoryType_FileName_Placeholder_Open: 13372,\n FileDirectoryType_FileName_Placeholder_Close: 13375,\n FileDirectoryType_FileName_Placeholder_Read: 13377,\n FileDirectoryType_FileName_Placeholder_Write: 13380,\n FileDirectoryType_FileName_Placeholder_GetPosition: 13382,\n FileDirectoryType_FileName_Placeholder_SetPosition: 13385,\n FileDirectoryType_CreateDirectory: 13387,\n FileDirectoryType_CreateFile: 13390,\n FileDirectoryType_DeleteFileSystemObject: 13393,\n FileDirectoryType_MoveOrCopy: 13395,\n CertificateGroupType_TrustList_Open: 13605,\n CertificateGroupType_TrustList_Close: 13608,\n CertificateGroupType_TrustList_Read: 13610,\n CertificateGroupType_TrustList_Write: 13613,\n CertificateGroupType_TrustList_GetPosition: 13615,\n CertificateGroupType_TrustList_SetPosition: 13618,\n CertificateGroupType_TrustList_OpenWithMasks: 13621,\n CertificateGroupType_TrustList_CloseAndUpdate: 13624,\n CertificateGroupType_TrustList_AddCertificate: 13627,\n CertificateGroupType_TrustList_RemoveCertificate: 13629,\n ServerConfiguration_UpdateCertificate: 13737,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Open: 13821,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Close: 13824,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Read: 13826,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_Write: 13829,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_GetPosition: 13831,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_SetPosition: 13834,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_OpenWithMasks: 13837,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_CloseAndUpdate: 13840,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_AddCertificate: 13843,\n CertificateGroupFolderType_DefaultApplicationGroup_TrustList_RemoveCertificate: 13845,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Open: 13855,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Close: 13858,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Read: 13860,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_Write: 13863,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_GetPosition: 13865,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_SetPosition: 13868,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_OpenWithMasks: 13871,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_CloseAndUpdate: 13874,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_AddCertificate: 13877,\n CertificateGroupFolderType_DefaultHttpsGroup_TrustList_RemoveCertificate: 13879,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Open: 13889,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Close: 13892,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Read: 13894,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_Write: 13897,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_GetPosition: 13899,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_SetPosition: 13902,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_OpenWithMasks: 13905,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_CloseAndUpdate: 13908,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_AddCertificate: 13911,\n CertificateGroupFolderType_DefaultUserTokenGroup_TrustList_RemoveCertificate: 13913,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Open: 13923,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Close: 13926,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Read: 13928,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_Write: 13931,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_GetPosition: 13933,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_SetPosition: 13936,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_OpenWithMasks: 13939,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_CloseAndUpdate: 13942,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_AddCertificate: 13945,\n CertificateGroupFolderType_AdditionalGroup_Placeholder_TrustList_RemoveCertificate: 13947,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Open: 13958,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Close: 13961,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Read: 13963,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_Write: 13966,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_GetPosition: 13968,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_SetPosition: 13971,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_OpenWithMasks: 13974,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_CloseAndUpdate: 13977,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_AddCertificate: 13980,\n ServerConfigurationType_CertificateGroups_DefaultApplicationGroup_TrustList_RemoveCertificate: 13982,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Open: 13992,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Close: 13995,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Read: 13997,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_Write: 14000,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition: 14002,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition: 14005,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks: 14008,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate: 14011,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate: 14014,\n ServerConfigurationType_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate: 14016,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Open: 14026,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Close: 14029,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Read: 14031,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_Write: 14034,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition: 14036,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition: 14039,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks: 14042,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate: 14045,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate: 14048,\n ServerConfigurationType_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate: 14050,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Open: 14095,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Close: 14098,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Read: 14100,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_Write: 14103,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_GetPosition: 14105,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_SetPosition: 14108,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_OpenWithMasks: 14111,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_CloseAndUpdate: 14114,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_AddCertificate: 14117,\n ServerConfiguration_CertificateGroups_DefaultHttpsGroup_TrustList_RemoveCertificate: 14119,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Open: 14129,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Close: 14132,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Read: 14134,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_Write: 14137,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_GetPosition: 14139,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_SetPosition: 14142,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_OpenWithMasks: 14145,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_CloseAndUpdate: 14148,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_AddCertificate: 14151,\n ServerConfiguration_CertificateGroups_DefaultUserTokenGroup_TrustList_RemoveCertificate: 14153,\n RoleSetType_RoleName_Placeholder_AddIdentity: 15612,\n RoleSetType_RoleName_Placeholder_RemoveIdentity: 15614,\n RoleType_AddIdentity: 15624,\n RoleType_RemoveIdentity: 15626,\n AddIdentityMethodType: 15636,\n RemoveIdentityMethodType: 15638,\n WellKnownRole_Anonymous_AddIdentity: 15648,\n WellKnownRole_Anonymous_RemoveIdentity: 15650,\n WellKnownRole_AuthenticatedUser_AddIdentity: 15660,\n WellKnownRole_AuthenticatedUser_RemoveIdentity: 15662,\n WellKnownRole_Observer_AddIdentity: 15672,\n WellKnownRole_Observer_RemoveIdentity: 15674,\n WellKnownRole_Operator_AddIdentity: 15684,\n WellKnownRole_Operator_RemoveIdentity: 15686,\n WellKnownRole_Supervisor_AddIdentity: 15696,\n WellKnownRole_Supervisor_RemoveIdentity: 15698,\n WellKnownRole_SecurityAdmin_AddIdentity: 15708,\n WellKnownRole_SecurityAdmin_RemoveIdentity: 15710,\n WellKnownRole_ConfigureAdmin_AddIdentity: 15720,\n WellKnownRole_ConfigureAdmin_RemoveIdentity: 15722,\n TemporaryFileTransferType_GenerateFileForRead: 15746,\n TemporaryFileTransferType_GenerateFileForWrite: 15749,\n TemporaryFileTransferType_CloseAndCommit: 15751,\n TemporaryFileTransferType_TransferState_Placeholder_Reset: 15794,\n GenerateFileForReadMethodType: 15795,\n GenerateFileForWriteMethodType: 15798,\n CloseAndCommitMethodType: 15800,\n FileTransferStateMachineType_Reset: 15843,\n OPCUANamespaceMetadata_NamespaceFile_Open: 15971,\n OPCUANamespaceMetadata_NamespaceFile_Close: 15974,\n OPCUANamespaceMetadata_NamespaceFile_Read: 15976,\n OPCUANamespaceMetadata_NamespaceFile_Write: 15979,\n OPCUANamespaceMetadata_NamespaceFile_GetPosition: 15981,\n OPCUANamespaceMetadata_NamespaceFile_SetPosition: 15984,\n OPCUANamespaceMetadata_NamespaceFile_ExportNamespace: 15986,\n RoleSetType_AddRole: 15997,\n RoleSetType_RemoveRole: 16000,\n AddRoleMethodType: 16002,\n RemoveRoleMethodType: 16005,\n WellKnownRole_Engineer_AddIdentity: 16041,\n WellKnownRole_Engineer_RemoveIdentity: 16043,\n RoleSetType_RoleName_Placeholder_AddApplication: 16165,\n RoleSetType_RoleName_Placeholder_RemoveApplication: 16167,\n RoleSetType_RoleName_Placeholder_AddEndpoint: 16169,\n RoleSetType_RoleName_Placeholder_RemoveEndpoint: 16171,\n RoleType_AddApplication: 16176,\n RoleType_RemoveApplication: 16178,\n RoleType_AddEndpoint: 16180,\n RoleType_RemoveEndpoint: 16182,\n AddApplicationMethodType: 16184,\n RemoveApplicationMethodType: 16186,\n AddEndpointMethodType: 16188,\n RemoveEndpointMethodType: 16190,\n WellKnownRole_Anonymous_AddApplication: 16195,\n WellKnownRole_Anonymous_RemoveApplication: 16197,\n WellKnownRole_Anonymous_AddEndpoint: 16199,\n WellKnownRole_Anonymous_RemoveEndpoint: 16201,\n WellKnownRole_AuthenticatedUser_AddApplication: 16206,\n WellKnownRole_AuthenticatedUser_RemoveApplication: 16208,\n WellKnownRole_AuthenticatedUser_AddEndpoint: 16210,\n WellKnownRole_AuthenticatedUser_RemoveEndpoint: 16212,\n WellKnownRole_Observer_AddApplication: 16217,\n WellKnownRole_Observer_RemoveApplication: 16219,\n WellKnownRole_Observer_AddEndpoint: 16221,\n WellKnownRole_Observer_RemoveEndpoint: 16223,\n WellKnownRole_Operator_AddApplication: 16228,\n WellKnownRole_Operator_RemoveApplication: 16230,\n WellKnownRole_Operator_AddEndpoint: 16232,\n WellKnownRole_Operator_RemoveEndpoint: 16234,\n WellKnownRole_Engineer_AddApplication: 16239,\n WellKnownRole_Engineer_RemoveApplication: 16241,\n WellKnownRole_Engineer_AddEndpoint: 16243,\n WellKnownRole_Engineer_RemoveEndpoint: 16245,\n WellKnownRole_Supervisor_AddApplication: 16250,\n WellKnownRole_Supervisor_RemoveApplication: 16252,\n WellKnownRole_Supervisor_AddEndpoint: 16254,\n WellKnownRole_Supervisor_RemoveEndpoint: 16256,\n WellKnownRole_SecurityAdmin_AddApplication: 16261,\n WellKnownRole_SecurityAdmin_RemoveApplication: 16263,\n WellKnownRole_SecurityAdmin_AddEndpoint: 16265,\n WellKnownRole_SecurityAdmin_RemoveEndpoint: 16267,\n WellKnownRole_ConfigureAdmin_AddApplication: 16272,\n WellKnownRole_ConfigureAdmin_RemoveApplication: 16274,\n WellKnownRole_ConfigureAdmin_AddEndpoint: 16276,\n WellKnownRole_ConfigureAdmin_RemoveEndpoint: 16278,\n ServerType_ServerCapabilities_Roles_AddRole: 16290,\n ServerType_ServerCapabilities_Roles_RemoveRole: 16293,\n ServerCapabilitiesType_Roles_AddRole: 16296,\n ServerCapabilitiesType_Roles_RemoveRole: 16299,\n Server_ServerCapabilities_Roles_AddRole: 16301,\n Server_ServerCapabilities_Roles_RemoveRole: 16304,\n FileSystem_FileDirectoryName_Placeholder_CreateDirectory: 16316,\n FileSystem_FileDirectoryName_Placeholder_CreateFile: 16319,\n FileSystem_FileDirectoryName_Placeholder_MoveOrCopy: 16324,\n FileSystem_FileName_Placeholder_Open: 16333,\n FileSystem_FileName_Placeholder_Close: 16336,\n FileSystem_FileName_Placeholder_Read: 16338,\n FileSystem_FileName_Placeholder_Write: 16341,\n FileSystem_FileName_Placeholder_GetPosition: 16343,\n FileSystem_FileName_Placeholder_SetPosition: 16346,\n FileSystem_CreateDirectory: 16348,\n FileSystem_CreateFile: 16351,\n FileSystem_DeleteFileSystemObject: 16354,\n FileSystem_MoveOrCopy: 16356,\n AlarmConditionType_Silence: 16402,\n AlarmConditionType_Suppress: 16403,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Disable: 16439,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Enable: 16440,\n AlarmGroupType_AlarmConditionInstance_Placeholder_AddComment: 16441,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Acknowledge: 16461,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Confirm: 16463,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_Unshelve: 16515,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_OneShotShelve: 16516,\n AlarmGroupType_AlarmConditionInstance_Placeholder_ShelvingState_TimedShelve: 16517,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Silence: 16533,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Suppress: 16534,\n LimitAlarmType_Silence: 16569,\n LimitAlarmType_Suppress: 16570,\n ExclusiveLimitAlarmType_Silence: 16609,\n ExclusiveLimitAlarmType_Suppress: 16610,\n NonExclusiveLimitAlarmType_Silence: 16649,\n NonExclusiveLimitAlarmType_Suppress: 16650,\n NonExclusiveLevelAlarmType_Silence: 16689,\n NonExclusiveLevelAlarmType_Suppress: 16690,\n ExclusiveLevelAlarmType_Silence: 16729,\n ExclusiveLevelAlarmType_Suppress: 16730,\n NonExclusiveDeviationAlarmType_Silence: 16769,\n NonExclusiveDeviationAlarmType_Suppress: 16770,\n ExclusiveDeviationAlarmType_Silence: 16810,\n ExclusiveDeviationAlarmType_Suppress: 16811,\n NonExclusiveRateOfChangeAlarmType_Silence: 16851,\n NonExclusiveRateOfChangeAlarmType_Suppress: 16852,\n ExclusiveRateOfChangeAlarmType_Silence: 16892,\n ExclusiveRateOfChangeAlarmType_Suppress: 16893,\n DiscreteAlarmType_Silence: 16933,\n DiscreteAlarmType_Suppress: 16934,\n OffNormalAlarmType_Silence: 16969,\n OffNormalAlarmType_Suppress: 16970,\n SystemOffNormalAlarmType_Silence: 17005,\n SystemOffNormalAlarmType_Suppress: 17006,\n TripAlarmType_Silence: 17041,\n TripAlarmType_Suppress: 17042,\n CertificateExpirationAlarmType_Silence: 17077,\n CertificateExpirationAlarmType_Suppress: 17078,\n DiscrepancyAlarmType_Disable: 17113,\n DiscrepancyAlarmType_Enable: 17114,\n DiscrepancyAlarmType_AddComment: 17115,\n DiscrepancyAlarmType_ConditionRefresh: 17117,\n DiscrepancyAlarmType_ConditionRefresh2: 17119,\n DiscrepancyAlarmType_Acknowledge: 17139,\n DiscrepancyAlarmType_Confirm: 17141,\n DiscrepancyAlarmType_ShelvingState_Unshelve: 17193,\n DiscrepancyAlarmType_ShelvingState_OneShotShelve: 17194,\n DiscrepancyAlarmType_ShelvingState_TimedShelve: 17195,\n DiscrepancyAlarmType_Silence: 17212,\n DiscrepancyAlarmType_Suppress: 17213,\n FileDirectoryType_FileDirectoryName_Placeholder_DeleteFileSystemObject: 17718,\n FileSystem_FileDirectoryName_Placeholder_DeleteFileSystemObject: 17722,\n AlarmConditionType_Unsuppress: 17868,\n AlarmConditionType_RemoveFromService: 17869,\n AlarmConditionType_PlaceInService: 17870,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Unsuppress: 17875,\n AlarmGroupType_AlarmConditionInstance_Placeholder_RemoveFromService: 17876,\n AlarmGroupType_AlarmConditionInstance_Placeholder_PlaceInService: 17877,\n LimitAlarmType_Unsuppress: 17882,\n LimitAlarmType_RemoveFromService: 17883,\n LimitAlarmType_PlaceInService: 17884,\n ExclusiveLimitAlarmType_Unsuppress: 17889,\n ExclusiveLimitAlarmType_RemoveFromService: 17890,\n ExclusiveLimitAlarmType_PlaceInService: 17891,\n NonExclusiveLimitAlarmType_Unsuppress: 17896,\n NonExclusiveLimitAlarmType_RemoveFromService: 17897,\n NonExclusiveLimitAlarmType_PlaceInService: 17898,\n NonExclusiveLevelAlarmType_RemoveFromService: 17904,\n NonExclusiveLevelAlarmType_PlaceInService: 17905,\n ExclusiveLevelAlarmType_Unsuppress: 17910,\n ExclusiveLevelAlarmType_RemoveFromService: 17911,\n ExclusiveLevelAlarmType_PlaceInService: 17912,\n NonExclusiveDeviationAlarmType_Unsuppress: 17917,\n NonExclusiveDeviationAlarmType_RemoveFromService: 17918,\n NonExclusiveDeviationAlarmType_PlaceInService: 17919,\n NonExclusiveRateOfChangeAlarmType_Unsuppress: 17924,\n NonExclusiveRateOfChangeAlarmType_RemoveFromService: 17925,\n NonExclusiveRateOfChangeAlarmType_PlaceInService: 17926,\n ExclusiveDeviationAlarmType_Unsuppress: 17931,\n ExclusiveDeviationAlarmType_RemoveFromService: 17932,\n ExclusiveDeviationAlarmType_PlaceInService: 17933,\n ExclusiveRateOfChangeAlarmType_Unsuppress: 17938,\n ExclusiveRateOfChangeAlarmType_RemoveFromService: 17939,\n ExclusiveRateOfChangeAlarmType_PlaceInService: 17940,\n DiscreteAlarmType_Unsuppress: 17945,\n DiscreteAlarmType_RemoveFromService: 17946,\n DiscreteAlarmType_PlaceInService: 17947,\n OffNormalAlarmType_Unsuppress: 17952,\n OffNormalAlarmType_RemoveFromService: 17953,\n OffNormalAlarmType_PlaceInService: 17954,\n SystemOffNormalAlarmType_Unsuppress: 17959,\n SystemOffNormalAlarmType_RemoveFromService: 17960,\n SystemOffNormalAlarmType_PlaceInService: 17961,\n TripAlarmType_Unsuppress: 17966,\n TripAlarmType_RemoveFromService: 17967,\n TripAlarmType_PlaceInService: 17968,\n CertificateExpirationAlarmType_Unsuppress: 17973,\n CertificateExpirationAlarmType_RemoveFromService: 17974,\n CertificateExpirationAlarmType_PlaceInService: 17975,\n DiscrepancyAlarmType_Unsuppress: 17980,\n DiscrepancyAlarmType_RemoveFromService: 17981,\n DiscrepancyAlarmType_PlaceInService: 17982,\n KeyCredentialConfigurationType_UpdateCredential: 18006,\n KeyCredentialConfigurationType_DeleteCredential: 18008,\n KeyCredentialUpdateMethodType: 18009,\n KeyCredentialConfiguration_ServiceName_Placeholder_UpdateCredential: 18161,\n KeyCredentialConfiguration_ServiceName_Placeholder_DeleteCredential: 18163,\n AlarmConditionType_Reset: 18199,\n AlarmGroupType_AlarmConditionInstance_Placeholder_Reset: 18212,\n LimitAlarmType_Reset: 18222,\n ExclusiveLimitAlarmType_Reset: 18232,\n NonExclusiveLimitAlarmType_Reset: 18242,\n NonExclusiveLevelAlarmType_Unsuppress: 18255,\n NonExclusiveLevelAlarmType_Reset: 18256,\n ExclusiveLevelAlarmType_Reset: 18266,\n NonExclusiveDeviationAlarmType_Reset: 18276,\n NonExclusiveRateOfChangeAlarmType_Reset: 18286,\n ExclusiveDeviationAlarmType_Reset: 18296,\n ExclusiveRateOfChangeAlarmType_Reset: 18306,\n DiscreteAlarmType_Reset: 18316,\n OffNormalAlarmType_Reset: 18326,\n SystemOffNormalAlarmType_Reset: 18336,\n TripAlarmType_Reset: 18346,\n InstrumentDiagnosticAlarmType_Disable: 18380,\n InstrumentDiagnosticAlarmType_Enable: 18381,\n InstrumentDiagnosticAlarmType_AddComment: 18382,\n InstrumentDiagnosticAlarmType_ConditionRefresh: 18384,\n InstrumentDiagnosticAlarmType_ConditionRefresh2: 18386,\n InstrumentDiagnosticAlarmType_Acknowledge: 18406,\n InstrumentDiagnosticAlarmType_Confirm: 18408,\n InstrumentDiagnosticAlarmType_ShelvingState_TimedShelve: 18453,\n InstrumentDiagnosticAlarmType_ShelvingState_Unshelve: 18455,\n InstrumentDiagnosticAlarmType_ShelvingState_OneShotShelve: 18456,\n InstrumentDiagnosticAlarmType_Silence: 18489,\n InstrumentDiagnosticAlarmType_Suppress: 18490,\n InstrumentDiagnosticAlarmType_Unsuppress: 18491,\n InstrumentDiagnosticAlarmType_RemoveFromService: 18492,\n InstrumentDiagnosticAlarmType_PlaceInService: 18493,\n InstrumentDiagnosticAlarmType_Reset: 18494,\n SystemDiagnosticAlarmType_Disable: 18529,\n SystemDiagnosticAlarmType_Enable: 18530,\n SystemDiagnosticAlarmType_AddComment: 18531,\n SystemDiagnosticAlarmType_ConditionRefresh: 18533,\n SystemDiagnosticAlarmType_ConditionRefresh2: 18535,\n SystemDiagnosticAlarmType_Acknowledge: 18555,\n SystemDiagnosticAlarmType_Confirm: 18557,\n SystemDiagnosticAlarmType_ShelvingState_TimedShelve: 18602,\n SystemDiagnosticAlarmType_ShelvingState_Unshelve: 18604,\n SystemDiagnosticAlarmType_ShelvingState_OneShotShelve: 18605,\n SystemDiagnosticAlarmType_Silence: 18638,\n SystemDiagnosticAlarmType_Suppress: 18639,\n SystemDiagnosticAlarmType_Unsuppress: 18640,\n SystemDiagnosticAlarmType_RemoveFromService: 18641,\n SystemDiagnosticAlarmType_PlaceInService: 18642,\n SystemDiagnosticAlarmType_Reset: 18643,\n CertificateExpirationAlarmType_Reset: 18654,\n DiscrepancyAlarmType_Reset: 18664,\n AlarmMetricsType_Reset: 18666\n};\n","\n\nimport {RelativePathElement} from './RelativePathElement';\nimport {decodeRelativePathElement} from './RelativePathElement';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IRelativePath {\n\t\telements? : RelativePathElement[];\n}\n\n/**\nA relative path constructed from reference types and browse names.\n*/\n\nexport class RelativePath {\n \t\telements : RelativePathElement[];\n\n\tconstructor(\toptions? : IRelativePath) { \n\t\toptions = options || {};\n\t\tthis.elements= (options.elements) ? options.elements:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeArray(this.elements,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.elements = ec.decodeArray(inp,decodeRelativePathElement);\n\n\t}\n\n\n\tclone(\ttarget? : RelativePath) : RelativePath { \n\t\tif(!target) {\n\t\t\ttarget = new RelativePath();\n\t\t}\n\t\tif (this.elements) { target.elements = ec.cloneComplexArray(this.elements);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRelativePath(\tinp : DataStream) : RelativePath { \n\t\tlet obj = new RelativePath();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"RelativePath\",RelativePath, makeExpandedNodeId(542,0));","import { DataStream } from \"./DataStream\";\r\n\r\n\"use strict\";\r\n\r\nexport type Guid = string;\r\n\r\nfunction toHex(i, nb) {\r\n    return (\"000000000000000\" + i.toString(16)).substr(-nb);\r\n}\r\n\r\n\r\nfunction getRandomInt(min, max) {\r\n    return Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n\r\nvar regexGUID = /^[0-9A-Fa-f]{8}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{4}-[0-9A-Fa-f]{12}/;\r\n\r\n/**\r\n * @method isValidGuid\r\n *\r\n * A valid Guid\r\n *   XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXX\r\n * @param guid {String}\r\n * @return {Boolean} return true if the string is a valid GUID.\r\n */\r\nexport function isValidGuid(guid : string) : Boolean {\r\n    return regexGUID.test(guid);\r\n};\r\n\r\n//                             1         2         3\r\n//                   012345678901234567890123456789012345\r\nexport var emptyGuid = \"00000000-0000-0000-0000-000000000000\";\r\n\r\nexport function randomGuid() : string {\r\n    \r\n        var b = new DataStream(20);\r\n        for (var i = 0; i < 20; i++) {\r\n            b.setUint8(getRandomInt(0, 255));\r\n        }\r\n        b.rewind();\r\n        var value = decodeGuid(b);\r\n        return value;\r\n    };\r\n    \r\nexport function encodeGuid(guid : string, stream : DataStream) : void {\r\n    \r\n        if (!isValidGuid(guid)) {\r\n            throw new Error(\" Invalid GUID : '\" + JSON.stringify(guid) +\"'\");\r\n        }\r\n        //           1         2         3\r\n        // 012345678901234567890123456789012345\r\n        // |        |    |    | |  | | | | | |\r\n        // 12345678-1234-1234-ABCD-0123456789AB\r\n        // 00000000-0000-0000-0000-000000000000\";\r\n        function write_UInt32(starts) {\r\n            var start,i,n = starts.length;\r\n            for (i=0;i<n;i++) {\r\n                start = starts[i];\r\n                stream.setUint32(parseInt(guid.substr(start, 8), 16));\r\n            }\r\n        }\r\n    \r\n        function write_UInt16(starts) {\r\n            var start,i,n = starts.length;\r\n            for (i=0;i<n;i++) {\r\n                start = starts[i];\r\n                stream.setUint16(parseInt(guid.substr(start, 4), 16));\r\n            }\r\n        }\r\n    \r\n        function write_UInt8(starts){\r\n            var start,i,n = starts.length;\r\n            for (i=0;i<n;i++) {\r\n                start = starts[i];\r\n                stream.setUint8(parseInt(guid.substr(start, 2), 16));\r\n            }\r\n        }\r\n    \r\n        write_UInt32([0]);\r\n        write_UInt16([9, 14]);\r\n        write_UInt8([19, 21, 24, 26, 28, 30, 32, 34]);\r\n    };\r\n    \r\n    \r\n    export function decodeGuid(stream : DataStream) {\r\n    \r\n        function read_UInt32() {\r\n            return toHex(stream.getUint32(), 8);\r\n        }\r\n    \r\n        function read_UInt16() {\r\n            return toHex(stream.getUint16(), 4);\r\n        }\r\n    \r\n        function read_UInt8() {\r\n            return toHex(stream.getUint8(), 2);\r\n        }\r\n    \r\n        function read_many(func, nb) {\r\n            var result = \"\";\r\n            for (var i = 0; i < nb; i++) {\r\n                result += func();\r\n            }\r\n            return result;\r\n        }\r\n    \r\n        var data1 = read_UInt32();\r\n    \r\n        var data2 = read_UInt16();\r\n    \r\n        var data3 = read_UInt16();\r\n    \r\n        var data4_5 = read_many(read_UInt8, 2);\r\n    \r\n        var data6_B = read_many(read_UInt8, 6);\r\n    \r\n        var guid = data1 + \"-\" + data2 + \"-\" + data3 + \"-\" + data4_5 + \"-\" + data6_B;\r\n    \r\n        return guid.toUpperCase();\r\n    };\r\n    \r\n","\n\nimport * as ec from '../basic-types';\nimport {LocalizedText} from './LocalizedText';\nimport {ApplicationType, encodeApplicationType, decodeApplicationType} from './ApplicationType';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IApplicationDescription {\n\t\tapplicationUri? : string;\n\t\tproductUri? : string;\n\t\tapplicationName? : LocalizedText;\n\t\tapplicationType? : ApplicationType;\n\t\tgatewayServerUri? : string;\n\t\tdiscoveryProfileUri? : string;\n\t\tdiscoveryUrls? : string[];\n}\n\n/**\nDescribes an application and how to find it.\n*/\n\nexport class ApplicationDescription {\n \t\tapplicationUri : string;\n\t\tproductUri : string;\n\t\tapplicationName : LocalizedText;\n\t\tapplicationType : ApplicationType;\n\t\tgatewayServerUri : string;\n\t\tdiscoveryProfileUri : string;\n\t\tdiscoveryUrls : string[];\n\n\tconstructor(\toptions? : IApplicationDescription) { \n\t\toptions = options || {};\n\t\tthis.applicationUri= (options.applicationUri) ? options.applicationUri:null;\n\t\tthis.productUri= (options.productUri) ? options.productUri:null;\n\t\tthis.applicationName= (options.applicationName) ? options.applicationName:new LocalizedText();\n\t\tthis.applicationType= (options.applicationType) ? options.applicationType:null;\n\t\tthis.gatewayServerUri= (options.gatewayServerUri) ? options.gatewayServerUri:null;\n\t\tthis.discoveryProfileUri= (options.discoveryProfileUri) ? options.discoveryProfileUri:null;\n\t\tthis.discoveryUrls= (options.discoveryUrls) ? options.discoveryUrls:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.applicationUri,out);\n\t\tec.encodeString(this.productUri,out);\n\t\tthis.applicationName.encode(out);\n\t\tencodeApplicationType(this.applicationType,out);\n\t\tec.encodeString(this.gatewayServerUri,out);\n\t\tec.encodeString(this.discoveryProfileUri,out);\n\t\tec.encodeArray(this.discoveryUrls,out,ec.encodeString);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.applicationUri = ec.decodeString(inp);\n\t\tthis.productUri = ec.decodeString(inp);\n\t\tthis.applicationName.decode(inp);\n\t\tthis.applicationType = decodeApplicationType(inp);\n\t\tthis.gatewayServerUri = ec.decodeString(inp);\n\t\tthis.discoveryProfileUri = ec.decodeString(inp);\n\t\tthis.discoveryUrls = ec.decodeArray(inp,ec.decodeString);\n\n\t}\n\n\n\tclone(\ttarget? : ApplicationDescription) : ApplicationDescription { \n\t\tif(!target) {\n\t\t\ttarget = new ApplicationDescription();\n\t\t}\n\t\ttarget.applicationUri = this.applicationUri;\n\t\ttarget.productUri = this.productUri;\n\t\tif (this.applicationName) { target.applicationName = this.applicationName.clone();}\n\t\ttarget.applicationType = this.applicationType;\n\t\ttarget.gatewayServerUri = this.gatewayServerUri;\n\t\ttarget.discoveryProfileUri = this.discoveryProfileUri;\n\t\ttarget.discoveryUrls = ec.cloneArray(this.discoveryUrls);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeApplicationDescription(\tinp : DataStream) : ApplicationDescription { \n\t\tlet obj = new ApplicationDescription();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ApplicationDescription\",ApplicationDescription, makeExpandedNodeId(310,0));","\"use strict\";\r\n/**\r\n * @module opcua.address_space.types\r\n */\r\n\r\nimport {BinaryStreamSizeCalculator, DataStream} from '../basic-types/DataStream';\r\n\r\nexport abstract class BaseUAObject {\r\n\r\n/**\r\n * Encode the object to the binary stream.\r\n * @class BaseUAObject\r\n * @method encode\r\n * @param stream {BinaryStream}\r\n * @param options {BinaryStream}\r\n */\r\npublic abstract encode(stream : DataStream|BinaryStreamSizeCalculator);\r\n\r\n/**\r\n * Decode the object from the binary stream.\r\n * @class BaseUAObject\r\n * @method decode\r\n * @param stream {BinaryStream}\r\n * @param options {Object}\r\n */\r\npublic abstract decode(stream : DataStream);\r\n\r\n/**\r\n * Calculate the required size to store this object in a binary stream.\r\n * @method binaryStoreSize\r\n * @return {Number}\r\n */\r\nbinaryStoreSize() : number {\r\n\r\n    var stream = new BinaryStreamSizeCalculator();\r\n    this.encode(stream);\r\n    return stream.length;\r\n};\r\n\r\n/**\r\n * @method toString\r\n * @return {String}\r\n */\r\ntoString() : string {\r\n    return this.toJSON();\r\n};\r\n\r\n\r\n/**\r\n *\r\n * verify that all object attributes values are valid according to schema\r\n * @method isValid\r\n * @return {boolean}\r\n */\r\nisValid() : boolean {\r\n    //TODO implement me\r\n    return true;\r\n};\r\n\r\n\r\n\r\ntoJSON() : string {\r\n    return JSON.stringify(this);\r\n}\r\n\r\n\r\npublic abstract clone(target : any) : BaseUAObject;\r\n\r\n}","\n\nimport {DataStream} from '../basic-types/DataStream';\n\nexport enum ServerState {\n \t\tRunning = 0,\n\t\tFailed = 1,\n\t\tNoConfiguration = 2,\n\t\tSuspended = 3,\n\t\tShutdown = 4,\n\t\tTest = 5,\n\t\tCommunicationFault = 6,\n\t\tUnknown = 7,\n\n}\n\nexport function encodeServerState(\tdata : ServerState, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeServerState(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"ServerState\",ServerState,encodeServerState ,decodeServerState ,null);","import baseGetTag from './_baseGetTag.js';\nimport isObject from './isObject.js';\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nexport default isFunction;\n","import isFunction from './isFunction.js';\nimport isLength from './isLength.js';\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nexport default isArrayLike;\n","\"use strict\";\r\n\r\n// OPC Unified Architecture, Part 4 $7.36 page 160\r\n// This value is an enumeration with one of the following values:\r\n//  ANONYMOUS_0     No token is required.\r\n//  USERNAME_1      A username/password token.\r\n//  CERTIFICATE_2   An X509v3 certificate token.\r\n//  ISSUEDTOKEN_3    Any WS-Security defined token.\r\n//  A tokenType of ANONYMOUS indicates that the Server does not require any\r\n//  user identification. In this case the Client application instance Certificate is used\r\n//  as the user identification.\r\nexport enum UserIdentityTokenType {\r\n    ANONYMOUS = 0,\r\n    USERNAME = 1,\r\n    CERTIFICATE = 2,\r\n    ISSUEDTOKEN = 3\r\n}","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IGetEndpointsRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tendpointUrl? : string;\n\t\tlocaleIds? : string[];\n\t\tprofileUris? : string[];\n}\n\n/**\nGets the endpoints used by the server.\n*/\n\nexport class GetEndpointsRequest {\n \t\trequestHeader : RequestHeader;\n\t\tendpointUrl : string;\n\t\tlocaleIds : string[];\n\t\tprofileUris : string[];\n\n\tconstructor(\toptions? : IGetEndpointsRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.endpointUrl= (options.endpointUrl) ? options.endpointUrl:null;\n\t\tthis.localeIds= (options.localeIds) ? options.localeIds:[];\n\t\tthis.profileUris= (options.profileUris) ? options.profileUris:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeString(this.endpointUrl,out);\n\t\tec.encodeArray(this.localeIds,out,ec.encodeString);\n\t\tec.encodeArray(this.profileUris,out,ec.encodeString);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.endpointUrl = ec.decodeString(inp);\n\t\tthis.localeIds = ec.decodeArray(inp,ec.decodeString);\n\t\tthis.profileUris = ec.decodeArray(inp,ec.decodeString);\n\n\t}\n\n\n\tclone(\ttarget? : GetEndpointsRequest) : GetEndpointsRequest { \n\t\tif(!target) {\n\t\t\ttarget = new GetEndpointsRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.endpointUrl = this.endpointUrl;\n\t\ttarget.localeIds = ec.cloneArray(this.localeIds);\n\t\ttarget.profileUris = ec.cloneArray(this.profileUris);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeGetEndpointsRequest(\tinp : DataStream) : GetEndpointsRequest { \n\t\tlet obj = new GetEndpointsRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"GetEndpointsRequest\",GetEndpointsRequest, makeExpandedNodeId(428,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {EndpointDescription} from './EndpointDescription';\nimport {decodeEndpointDescription} from './EndpointDescription';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IGetEndpointsResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tendpoints? : EndpointDescription[];\n}\n\n/**\nGets the endpoints used by the server.\n*/\n\nexport class GetEndpointsResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tendpoints : EndpointDescription[];\n\n\tconstructor(\toptions? : IGetEndpointsResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.endpoints= (options.endpoints) ? options.endpoints:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.endpoints,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.endpoints = ec.decodeArray(inp,decodeEndpointDescription);\n\n\t}\n\n\n\tclone(\ttarget? : GetEndpointsResponse) : GetEndpointsResponse { \n\t\tif(!target) {\n\t\t\ttarget = new GetEndpointsResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.endpoints) { target.endpoints = ec.cloneComplexArray(this.endpoints);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeGetEndpointsResponse(\tinp : DataStream) : GetEndpointsResponse { \n\t\tlet obj = new GetEndpointsResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"GetEndpointsResponse\",GetEndpointsResponse, makeExpandedNodeId(431,0));","\"use strict\";\r\n/**\r\n * @module opcua.client\r\n */\r\n\r\n\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {StatusCodes} from '../constants';\r\nimport {assert} from '../assert'\r\n\r\nimport * as subscription_service from \"../service-subscription\";\r\nimport * as read_service from '../service-read';\r\n\r\nimport {TimestampsToReturn} from '../generated/TimestampsToReturn';\r\nimport {AttributeIds, ObjectTypeIds} from '../constants';\r\nimport {ClientSubscription} from './ClientSubscription';\r\n\r\nimport {resolveNodeId} from '../nodeid/nodeid';\r\n\r\nimport {CreateMonitoredItemsRequest} from '../generated/CreateMonitoredItemsRequest';\r\nimport {ModifyMonitoredItemsRequest} from '../generated/ModifyMonitoredItemsRequest';\r\nimport { MonitoringParameters, IMonitoringParameters } from '../generated/MonitoringParameters';\r\nimport { MonitoringMode } from '../generated/MonitoringMode';\r\nimport { MonitoredItemCreateResult } from '../generated/MonitoredItemCreateResult';\r\nimport { MonitoredItem } from './MonitoredItem';\r\n\r\nimport { StatusCode,NodeId,ExtensionObject} from '../basic-types';\r\nimport { IReadValueId } from '../generated/ReadValueId';\r\nimport { QualifiedName } from '../data-model';\r\n\r\n//import {MonitoredItemsModifyRequest} from '../generated/MonitoredItemsModifyRequest';\r\nvar MonitoredItemModifyRequest = subscription_service.MonitoredItemModifyRequest;\r\n\r\nexport class MonitoredItemBase extends EventEmitter{\r\n\r\n    protected _itemToMonitor : read_service.ReadValueId;\r\n    protected _monitoringParameters : MonitoringParameters;\r\n    protected _subscription : ClientSubscription;\r\n    protected _monitoringMode : MonitoringMode ;\r\n    protected _statusCode : StatusCode;\r\n    protected _result : MonitoredItemCreateResult;\r\n    protected _monitoredItemId : number;\r\n    protected _filterResult : ExtensionObject;\r\n\r\n\r\nconstructor(subscription : ClientSubscription, itemToMonitor : IReadValueId, monitoringParameters : IMonitoringParameters) {\r\n    super();\r\n    //assert(subscription.constructor.name === \"ClientSubscription\");\r\n\r\n\r\n\r\n    this._itemToMonitor = new read_service.ReadValueId(itemToMonitor);\r\n    this._monitoringParameters = new MonitoringParameters(monitoringParameters);\r\n    this._subscription = subscription;\r\n    this._monitoringMode = subscription_service.MonitoringMode.Reporting;\r\n    assert(this._monitoringParameters.clientHandle === null/*4294967295*/, \"should not have a client handle yet\");\r\n}\r\n\r\npublic get monitoringParameters() {\r\n    return this._monitoringParameters;\r\n}\r\n\r\npublic get itemToMonitor() {\r\n    return this._itemToMonitor;\r\n}\r\n\r\npublic get nodeId() {\r\n    return this._itemToMonitor.nodeId;\r\n}\r\n\r\npublic get monitoringMode() {\r\n    return this._monitoringMode;\r\n}\r\n\r\npublic get monitoredItemId() {\r\n    return this._monitoredItemId;\r\n}\r\n\r\n\r\npublic _notify_value_change(value) {\r\n    /**\r\n     * Notify the observers that the MonitoredItem value has changed on the server side.\r\n     * @event changed\r\n     * @param value\r\n     */\r\n     try {\r\n       this.emit(\"changed\", value);\r\n     }\r\n     catch(err) {\r\n       console.log(\"Exception raised inside the event handler called by ClientMonitoredItem.on('change')\",err);\r\n       console.log(\"Please verify the application using this node-opcua client\");\r\n     }\r\n};\r\n\r\nprotected _prepare_for_monitoring () : subscription_service.MonitoredItemCreateRequest | Error{\r\n\r\n    assert(this._subscription.subscriptionId !== \"pending\");\r\n    assert(this._monitoringParameters.clientHandle === /*4294967295*/null, \"should not have a client handle yet\");\r\n    this._monitoringParameters.clientHandle = this._subscription.nextClientHandle();\r\n    assert(this._monitoringParameters.clientHandle > 0 && this._monitoringParameters.clientHandle !== null/*4294967295*/);\r\n\r\n    // If attributeId is EventNotifier then monitoring parameters need a filter.\r\n    // The filter must then either be DataChangeFilter, EventFilter or AggregateFilter.\r\n    // todo can be done in another way?\r\n    // todo implement AggregateFilter\r\n    // todo support DataChangeFilter\r\n    // todo support whereClause\r\n    if (this._itemToMonitor.attributeId === AttributeIds.EventNotifier) {\r\n\r\n        //\r\n        // see OPCUA Spec 1.02 part 4 page 65 : 5.12.1.4 Filter\r\n        // see                 part 4 page 130: 7.16.3 EventFilter\r\n        //                     part 3 page 11 : 4.6 Event Model\r\n        // To monitor for Events, the attributeId element of the ReadValueId structure is the\r\n        // the id of the EventNotifierAttribute\r\n\r\n        // OPC Unified Architecture 1.02, Part 4 5.12.1.2 Sampling interval page 64:\r\n        // \"A Client shall define a sampling interval of 0 if it subscribes for Events.\"\r\n        // toDO\r\n\r\n        // note : the EventFilter is used when monitoring Events.\r\n        this._monitoringParameters.filter = this._monitoringParameters.filter || new subscription_service.EventFilter({});\r\n\r\n        var filter : ExtensionObject = this._monitoringParameters.filter;\r\n        if (!(filter instanceof subscription_service.EventFilter)) {\r\n            return new Error(\r\n                \"Mismatch between attributeId and filter in monitoring parameters : \" +\r\n                \"An EventFilter object is required when itemToMonitor.attributeId== AttributeIds.EventNotifier\"\r\n            );\r\n        }\r\n\r\n    } else if (this._itemToMonitor.attributeId === AttributeIds.Value) {\r\n        // the DataChangeFilter and the AggregateFilter are used when monitoring Variable Values\r\n\r\n        // The Value Attribute is used when monitoring Variables. Variable values are monitored for a change\r\n        // in value or a change in their status. The filters defined in this standard (see 7.16.2) and in Part 8 are\r\n        // used to determine if the value change is large enough to cause a Notification to be generated for the\r\n        // to do : check 'DataChangeFilter'  && 'AggregateFilter'\r\n    } else {\r\n        if (this._monitoringParameters.filter) {\r\n            return new Error(\r\n                \"Mismatch between attributeId and filter in monitoring parameters : \" +\r\n                \"no filter expected when attributeId is not Value  or  EventNotifier\"\r\n            );\r\n        }\r\n    }\r\n    return new subscription_service.MonitoredItemCreateRequest({\r\n        itemToMonitor: this._itemToMonitor,\r\n        monitoringMode: this._monitoringMode,\r\n        requestedParameters: this._monitoringParameters\r\n    });\r\n\r\n};\r\n\r\nprotected _after_create(monitoredItemResult : MonitoredItemCreateResult) {\r\n\r\n    this._statusCode = monitoredItemResult.statusCode;\r\n    /* istanbul ignore else */\r\n    if (monitoredItemResult.statusCode === StatusCodes.Good) {\r\n\r\n\r\n        this._result = monitoredItemResult;\r\n        this._monitoredItemId = monitoredItemResult.monitoredItemId;\r\n        this._monitoringParameters.samplingInterval = monitoredItemResult.revisedSamplingInterval;\r\n        this._monitoringParameters.queueSize = monitoredItemResult.revisedQueueSize;\r\n        this._filterResult = monitoredItemResult.filterResult;\r\n\r\n\r\n        this._subscription._add_monitored_item(this._monitoringParameters.clientHandle, this);\r\n        /**\r\n         * Notify the observers that the monitored item is now fully initialized.\r\n         * @event initialized\r\n         */\r\n        this.emit(\"initialized\");\r\n\r\n    } else {\r\n\r\n        /**\r\n         * Notify the observers that the monitored item has failed to initialized.\r\n         * @event err\r\n         * @param statusCode {StatusCode}\r\n         */\r\n        var err = new Error(monitoredItemResult.statusCode.toString());\r\n        this.emit(\"err\", err.message);\r\n        this.emit(\"terminated\");\r\n    }\r\n};\r\n\r\npublic static _toolbox_monitor(subscription : ClientSubscription, timestampsToReturn, monitoredItems : MonitoredItemBase[], done) {\r\n    assert(('function' === typeof done) && (typeof subscription.subscriptionId === \"number\"));\r\n    var itemsToCreate : subscription_service.MonitoredItemCreateRequest[] = [];\r\n    for (var i = 0; i < monitoredItems.length; i++) {\r\n\r\n        var monitoredItem = monitoredItems[i];\r\n        var itemToCreate = (<any>monitoredItem)._prepare_for_monitoring(done);\r\n        if (typeof itemToCreate.error === 'string' || itemToCreate.error instanceof String  /*_.isString(itemToCreate.error)*/) {\r\n            return done(new Error(itemToCreate.error));\r\n        }\r\n        itemsToCreate.push(itemToCreate);\r\n    }\r\n\r\n    if(typeof subscription.subscriptionId === \"string\") {\r\n        //subscription either pending or terminated\r\n        throw new Error(\"subscription either pending or terminated - subscription.subscriptionId: \" + subscription.subscriptionId );\r\n    }\r\n\r\n    var createMonitorItemsRequest = new subscription_service.CreateMonitoredItemsRequest({\r\n        subscriptionId: subscription.subscriptionId,\r\n        timestampsToReturn: timestampsToReturn,\r\n        itemsToCreate: itemsToCreate\r\n    });\r\n\r\n    assert(subscription.session);\r\n    subscription.session.createMonitoredItems(createMonitorItemsRequest, function (err, response) {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            //xx console.log(\"ClientMonitoredItemBase#_toolbox_monitor:  ERROR in createMonitoredItems \".red, err.message);\r\n            //xx  console.log(\"ClientMonitoredItemBase#_toolbox_monitor:  ERROR in createMonitoredItems \".red, err);\r\n            //xx  console.log(createMonitorItemsRequest.toString());\r\n        } else {\r\n            assert(response instanceof subscription_service.CreateMonitoredItemsResponse);\r\n\r\n            for (var i = 0; i < response.results.length; i++) {\r\n                var monitoredItemResult = response.results[i];\r\n                var monitoredItem = monitoredItems[i];\r\n                monitoredItem._after_create(monitoredItemResult);\r\n            }\r\n        }\r\n        done(err);\r\n    });\r\n\r\n};\r\npublic static _toolbox_modify(subscription : ClientSubscription, monitoredItems : MonitoredItemBase[], parameters : IMonitoringParameters , timestampsToReturn : TimestampsToReturn, callback) {\r\n\r\n    assert(callback === undefined || ('function' === typeof callback));\r\n\r\n    var itemsToModify = monitoredItems.map(function (monitoredItem) {\r\n        let monParams = new MonitoringParameters(parameters);\r\n        monParams.clientHandle = monitoredItem.monitoringParameters.clientHandle;\r\n        return new MonitoredItemModifyRequest({\r\n            monitoredItemId: monitoredItem._monitoredItemId,\r\n            requestedParameters: monParams\r\n        });\r\n    });\r\n    var modifyMonitoredItemsRequest = new ModifyMonitoredItemsRequest({\r\n        subscriptionId: <number>subscription.subscriptionId,\r\n        timestampsToReturn: timestampsToReturn,\r\n        itemsToModify: itemsToModify\r\n    });\r\n\r\n    subscription.session.modifyMonitoredItems(modifyMonitoredItemsRequest, function (err, response) {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        assert(response.results.length === monitoredItems.length);\r\n\r\n        var res = response.results[0];\r\n\r\n        /* istanbul ignore next */\r\n        if (response.results.length === 1 && res.statusCode !== StatusCodes.Good) {\r\n            return callback(new Error(\"Error\" + res.statusCode.toString()));\r\n        }\r\n        callback(null, response.results);\r\n    });\r\n};\r\npublic static _toolbox_setMonitoringMode(subscription : ClientSubscription, monitoredItems : MonitoredItemBase[], monitoringMode : MonitoringMode, callback) {\r\n\r\n    var monitoredItemIds = monitoredItems.map(function (monitoredItem) {\r\n        return monitoredItem._monitoredItemId;\r\n    });\r\n\r\n    var setMonitoringModeRequest = {\r\n        subscriptionId: subscription.subscriptionId,\r\n        monitoringMode: monitoringMode,\r\n        monitoredItemIds: monitoredItemIds\r\n    };\r\n    subscription.session.setMonitoringMode(setMonitoringModeRequest, (err, results) => {\r\n        if (!err) {\r\n            monitoredItems.forEach((monitoredItem) => {\r\n                monitoredItem._monitoringMode = monitoringMode;\r\n            });\r\n        }\r\n        if (callback) {\r\n            callback(err, results ? results[0] : null);\r\n        }\r\n    });\r\n\r\n};\r\n}\r\n","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\n\r\n\r\nimport {assert} from '../assert';\r\nimport {EventEmitter} from 'eventemitter3';\r\n\r\nimport {ChunkManager} from '../chunkmanager';\r\nimport {DataStream} from '../basic-types/DataStream';\r\n\r\nimport {SequenceHeader,AsymmetricAlgorithmSecurityHeader,SymmetricAlgorithmSecurityHeader} from '../service-secure-channel';\r\n\r\nexport function chooseSecurityHeader(msgType) {\r\n\r\n    var securityHeader = (msgType === \"OPN\") ?\r\n        new AsymmetricAlgorithmSecurityHeader() :\r\n        new SymmetricAlgorithmSecurityHeader();\r\n    return securityHeader;\r\n}\r\n\r\n\r\nexport interface SecureMessageChunkManagerOptions {\r\n    sequenceHeaderSize: number\r\n    secureChannelId: any;\r\n    chunkSize?: number;\r\n    requestId?: number;\r\n    signatureLength : number;\r\n    signingFunc : Function\r\n    plainBlockSize: number,\r\n    cipherBlockSize: number,\r\n    encrypt_buffer: ArrayBuffer\r\n}\r\n\r\n/**\r\n * @class SecureMessageChunkManager\r\n *\r\n * @param msgType\r\n * @param options\r\n * @param options.chunkSize {Integer} [=8196]\r\n * @param options.secureChannelId\r\n * @param options.requestId\r\n * @param options.signatureLength  {Integer}  [undefined]\r\n * @param options.signingFunc {Function} [undefined]\r\n *\r\n * @param securityHeader\r\n * @param sequenceNumberGenerator\r\n * @constructor\r\n */\r\nexport class SecureMessageChunkManager extends EventEmitter {\r\n    protected _chunkManager: ChunkManager;\r\n    protected _sequenceHeader: SequenceHeader;\r\n    protected _securityHeader: any;\r\n    protected _sequenceNumberGenerator: any;\r\n    protected _secureChannelId: any;\r\n    protected _msgType: any;\r\n    protected _chunkSize: number;\r\n    protected _aborted: boolean;\r\n    protected _headerSize: number;\r\nconstructor (msgType, options : SecureMessageChunkManagerOptions, securityHeader, sequenceNumberGenerator) {\r\n    super()\r\n    this._aborted = false;\r\n\r\n    msgType = msgType || \"OPN\";\r\n\r\n    securityHeader = securityHeader || chooseSecurityHeader(msgType);\r\n    assert(typeof securityHeader === 'object');\r\n\r\n    // the maximum size of a message chunk:\r\n    // Note: OPCUA requires that chunkSize is at least 8196\r\n    this._chunkSize = options.chunkSize || 1024*128;\r\n\r\n    this._msgType = msgType;\r\n\r\n    options.secureChannelId = options.secureChannelId || 0;\r\n    assert(Number.isFinite(options.secureChannelId));\r\n    this._secureChannelId = options.secureChannelId;\r\n\r\n    var requestId = options.requestId;\r\n\r\n    this._sequenceNumberGenerator = sequenceNumberGenerator;\r\n\r\n    this._securityHeader = securityHeader;\r\n\r\n    assert(requestId > 0, \"expecting a valid request ID\");\r\n\r\n    this._sequenceHeader = new SequenceHeader({requestId: requestId, sequenceNumber: -1});\r\n\r\n    var securityHeaderSize = DataStream.binaryStoreSize(this._securityHeader);\r\n    var sequenceHeaderSize = DataStream.binaryStoreSize(this._sequenceHeader);\r\n    assert(sequenceHeaderSize === 8);\r\n\r\n    this._headerSize = 12 + securityHeaderSize;\r\n    var self = this;\r\n    var params = {\r\n        chunkSize: this._chunkSize,\r\n\r\n        headerSize: this._headerSize,\r\n        writeHeaderFunc:  (block, isLast, totalLength) => {\r\n\r\n            var finalC = isLast ? \"F\" : \"C\";\r\n            finalC = this._aborted ? \"A\" : finalC;\r\n            this.write_header(finalC, block, totalLength);\r\n        },\r\n\r\n        sequenceHeaderSize: options.sequenceHeaderSize,\r\n        writeSequenceHeaderFunc: function (block : DataStream | DataView) {\r\n            assert(block.byteLength === this.sequenceHeaderSize);\r\n            self.writeSequenceHeader(block);\r\n        },\r\n\r\n        // ---------------------------------------- Signing stuff\r\n        signatureLength: options.signatureLength,\r\n        compute_signature: options.signingFunc,\r\n\r\n        // ---------------------------------------- Encrypting stuff\r\n        plainBlockSize: options.plainBlockSize,\r\n        cipherBlockSize: options.cipherBlockSize,\r\n        encrypt_buffer: options.encrypt_buffer\r\n    };\r\n\r\n    this._chunkManager = new ChunkManager(params);\r\n\r\n    this._chunkManager.on(\"chunk\", (chunk, is_last) => {\r\n        /**\r\n         * @event chunk\r\n         * @param chunk {Buffer}\r\n         */\r\n        this.emit(\"chunk\", chunk, is_last || this._aborted);\r\n\r\n    });\r\n};\r\n\r\npublic write_header(finalC, buf : DataStream | DataView, length) {\r\n\r\n    assert(buf.byteLength > 12);\r\n    assert(finalC.length === 1);\r\n\r\n    if (buf instanceof DataView) {\r\n        buf = new DataStream(buf);\r\n    }\r\n\r\n    // message header --------------------------\r\n    \r\n    // ---------------------------------------------------------------\r\n    // OPC UA Secure Conversation Message Header : Part 6 page 36\r\n    // MessageType     Byte[3]\r\n    // IsFinal         Byte[1]  C : intermediate, F: Final , A: Final with Error\r\n    // MessageSize     UInt32   The length of the MessageChunk, in bytes. This value includes size of the message header.\r\n    // SecureChannelId UInt32   A unique identifier for the ClientSecureChannelLayer assigned by the server.\r\n\r\n    buf.setUint8(this._msgType.charCodeAt(0));\r\n    buf.setUint8(this._msgType.charCodeAt(1));\r\n    buf.setUint8(this._msgType.charCodeAt(2));\r\n    buf.setUint8(finalC.charCodeAt(0));\r\n\r\n    buf.setUint32(length);\r\n    buf.setUint32(this._secureChannelId);\r\n\r\n    assert(buf.length === 12);\r\n\r\n    //xx console.log(\"securityHeader size = \",DataStream.binaryStoreSize(this.securityHeader));\r\n    // write Security Header -----------------\r\n    this._securityHeader.encode(buf);\r\n    assert(buf.length === this._headerSize);\r\n};\r\n\r\npublic writeSequenceHeader(block : DataStream | DataView) {\r\n    if (block instanceof DataView) {\r\n        block = new DataStream(block);\r\n    }\r\n    // write Sequence Header -----------------\r\n    this._sequenceHeader.sequenceNumber = this._sequenceNumberGenerator.next();\r\n    this._sequenceHeader.encode(block);\r\n    assert(block.length === 8);\r\n\r\n};\r\n\r\n/**\r\n * @method write\r\n * @param buffer {Buffer}\r\n * @param length {Integer} - optional if not provided  buffer.length is used instead.\r\n */\r\npublic write(buffer : ArrayBuffer, length : number) {\r\n    length = length || buffer.byteLength;\r\n    this._chunkManager.write(buffer, length);\r\n};\r\n\r\n/**\r\n * @method abort\r\n *\r\n */\r\npublic abort() {\r\n    this._aborted = true;\r\n    this.end();\r\n};\r\n\r\n/**\r\n * @method end\r\n */\r\npublic end() {\r\n    this._chunkManager.end();\r\n    this.emit(\"finished\");\r\n};\r\n\r\n}\r\n","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IMonitoringParameters {\n\t\tclientHandle? : ec.UInt32;\n\t\tsamplingInterval? : ec.Double;\n\t\tfilter? : ec.ExtensionObject;\n\t\tqueueSize? : ec.UInt32;\n\t\tdiscardOldest? : boolean;\n}\n\n/**\n\n*/\n\nexport class MonitoringParameters {\n \t\tclientHandle : ec.UInt32;\n\t\tsamplingInterval : ec.Double;\n\t\tfilter : ec.ExtensionObject;\n\t\tqueueSize : ec.UInt32;\n\t\tdiscardOldest : boolean;\n\n\tconstructor(\toptions? : IMonitoringParameters) { \n\t\toptions = options || {};\n\t\tthis.clientHandle= (options.clientHandle) ? options.clientHandle:null;\n\t\tthis.samplingInterval= (options.samplingInterval) ? options.samplingInterval:null;\n\t\tthis.filter= (options.filter) ? options.filter:null;\n\t\tthis.queueSize= (options.queueSize) ? options.queueSize:null;\n\t\tthis.discardOldest= (options.discardOldest) ? options.discardOldest:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.clientHandle,out);\n\t\tec.encodeDouble(this.samplingInterval,out);\n\t\tec.encodeExtensionObject(this.filter,out);\n\t\tec.encodeUInt32(this.queueSize,out);\n\t\tec.encodeBoolean(this.discardOldest,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.clientHandle = ec.decodeUInt32(inp);\n\t\tthis.samplingInterval = ec.decodeDouble(inp);\n\t\tthis.filter = ec.decodeExtensionObject(inp);\n\t\tthis.queueSize = ec.decodeUInt32(inp);\n\t\tthis.discardOldest = ec.decodeBoolean(inp);\n\n\t}\n\n\n\tclone(\ttarget? : MonitoringParameters) : MonitoringParameters { \n\t\tif(!target) {\n\t\t\ttarget = new MonitoringParameters();\n\t\t}\n\t\ttarget.clientHandle = this.clientHandle;\n\t\ttarget.samplingInterval = this.samplingInterval;\n\t\ttarget.filter = this.filter;\n\t\ttarget.queueSize = this.queueSize;\n\t\ttarget.discardOldest = this.discardOldest;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeMonitoringParameters(\tinp : DataStream) : MonitoringParameters { \n\t\tlet obj = new MonitoringParameters();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"MonitoringParameters\",MonitoringParameters, makeExpandedNodeId(742,0));","\n\nimport * as ec from '../basic-types';\nimport {QualifiedName} from './QualifiedName';\nimport {LocalizedText} from './LocalizedText';\nimport {NodeClass, encodeNodeClass, decodeNodeClass} from './NodeClass';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IReferenceDescription {\n\t\treferenceTypeId? : ec.NodeId;\n\t\tisForward? : boolean;\n\t\tnodeId? : ec.ExpandedNodeId;\n\t\tbrowseName? : QualifiedName;\n\t\tdisplayName? : LocalizedText;\n\t\tnodeClass? : NodeClass;\n\t\ttypeDefinition? : ec.ExpandedNodeId;\n}\n\n/**\nThe description of a reference.\n*/\n\nexport class ReferenceDescription {\n \t\treferenceTypeId : ec.NodeId;\n\t\tisForward : boolean;\n\t\tnodeId : ec.ExpandedNodeId;\n\t\tbrowseName : QualifiedName;\n\t\tdisplayName : LocalizedText;\n\t\tnodeClass : NodeClass;\n\t\ttypeDefinition : ec.ExpandedNodeId;\n\n\tconstructor(\toptions? : IReferenceDescription) { \n\t\toptions = options || {};\n\t\tthis.referenceTypeId= (options.referenceTypeId) ? options.referenceTypeId:null;\n\t\tthis.isForward= (options.isForward) ? options.isForward:null;\n\t\tthis.nodeId= (options.nodeId) ? options.nodeId:null;\n\t\tthis.browseName= (options.browseName) ? options.browseName:new QualifiedName();\n\t\tthis.displayName= (options.displayName) ? options.displayName:new LocalizedText();\n\t\tthis.nodeClass= (options.nodeClass) ? options.nodeClass:null;\n\t\tthis.typeDefinition= (options.typeDefinition) ? options.typeDefinition:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.referenceTypeId,out);\n\t\tec.encodeBoolean(this.isForward,out);\n\t\tec.encodeExpandedNodeId(this.nodeId,out);\n\t\tthis.browseName.encode(out);\n\t\tthis.displayName.encode(out);\n\t\tencodeNodeClass(this.nodeClass,out);\n\t\tec.encodeExpandedNodeId(this.typeDefinition,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.referenceTypeId = ec.decodeNodeId(inp);\n\t\tthis.isForward = ec.decodeBoolean(inp);\n\t\tthis.nodeId = ec.decodeExpandedNodeId(inp);\n\t\tthis.browseName.decode(inp);\n\t\tthis.displayName.decode(inp);\n\t\tthis.nodeClass = decodeNodeClass(inp);\n\t\tthis.typeDefinition = ec.decodeExpandedNodeId(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ReferenceDescription) : ReferenceDescription { \n\t\tif(!target) {\n\t\t\ttarget = new ReferenceDescription();\n\t\t}\n\t\ttarget.referenceTypeId = this.referenceTypeId;\n\t\ttarget.isForward = this.isForward;\n\t\ttarget.nodeId = this.nodeId;\n\t\tif (this.browseName) { target.browseName = this.browseName.clone();}\n\t\tif (this.displayName) { target.displayName = this.displayName.clone();}\n\t\ttarget.nodeClass = this.nodeClass;\n\t\ttarget.typeDefinition = this.typeDefinition;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeReferenceDescription(\tinp : DataStream) : ReferenceDescription { \n\t\tlet obj = new ReferenceDescription();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ReferenceDescription\",ReferenceDescription, makeExpandedNodeId(520,0));","\n\nimport * as ec from '../basic-types';\nimport {ReferenceDescription} from './ReferenceDescription';\nimport {decodeReferenceDescription} from './ReferenceDescription';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBrowseResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\tcontinuationPoint? : Uint8Array;\n\t\treferences? : ReferenceDescription[];\n}\n\n/**\nThe result of a browse operation.\n*/\n\nexport class BrowseResult {\n \t\tstatusCode : ec.StatusCode;\n\t\tcontinuationPoint : Uint8Array;\n\t\treferences : ReferenceDescription[];\n\n\tconstructor(\toptions? : IBrowseResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.continuationPoint= (options.continuationPoint) ? options.continuationPoint:null;\n\t\tthis.references= (options.references) ? options.references:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeByteString(this.continuationPoint,out);\n\t\tec.encodeArray(this.references,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.continuationPoint = ec.decodeByteString(inp);\n\t\tthis.references = ec.decodeArray(inp,decodeReferenceDescription);\n\n\t}\n\n\n\tclone(\ttarget? : BrowseResult) : BrowseResult { \n\t\tif(!target) {\n\t\t\ttarget = new BrowseResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.continuationPoint = this.continuationPoint;\n\t\tif (this.references) { target.references = ec.cloneComplexArray(this.references);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBrowseResult(\tinp : DataStream) : BrowseResult { \n\t\tlet obj = new BrowseResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BrowseResult\",BrowseResult, makeExpandedNodeId(524,0));","\n\nimport * as ec from '../basic-types';\nimport {BrowseDirection, encodeBrowseDirection, decodeBrowseDirection} from './BrowseDirection';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBrowseDescription {\n\t\tnodeId? : ec.NodeId;\n\t\tbrowseDirection? : BrowseDirection;\n\t\treferenceTypeId? : ec.NodeId;\n\t\tincludeSubtypes? : boolean;\n\t\tnodeClassMask? : ec.UInt32;\n\t\tresultMask? : ec.UInt32;\n}\n\n/**\nA request to browse the the references from a node.\n*/\n\nexport class BrowseDescription {\n \t\tnodeId : ec.NodeId;\n\t\tbrowseDirection : BrowseDirection;\n\t\treferenceTypeId : ec.NodeId;\n\t\tincludeSubtypes : boolean;\n\t\tnodeClassMask : ec.UInt32;\n\t\tresultMask : ec.UInt32;\n\n\tconstructor(\toptions? : IBrowseDescription) { \n\t\toptions = options || {};\n\t\tthis.nodeId= (options.nodeId) ? options.nodeId:null;\n\t\tthis.browseDirection= (options.browseDirection) ? options.browseDirection:null;\n\t\tthis.referenceTypeId= (options.referenceTypeId) ? options.referenceTypeId:null;\n\t\tthis.includeSubtypes= (options.includeSubtypes) ? options.includeSubtypes:null;\n\t\tthis.nodeClassMask= (options.nodeClassMask) ? options.nodeClassMask:null;\n\t\tthis.resultMask= (options.resultMask) ? options.resultMask:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.nodeId,out);\n\t\tencodeBrowseDirection(this.browseDirection,out);\n\t\tec.encodeNodeId(this.referenceTypeId,out);\n\t\tec.encodeBoolean(this.includeSubtypes,out);\n\t\tec.encodeUInt32(this.nodeClassMask,out);\n\t\tec.encodeUInt32(this.resultMask,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.nodeId = ec.decodeNodeId(inp);\n\t\tthis.browseDirection = decodeBrowseDirection(inp);\n\t\tthis.referenceTypeId = ec.decodeNodeId(inp);\n\t\tthis.includeSubtypes = ec.decodeBoolean(inp);\n\t\tthis.nodeClassMask = ec.decodeUInt32(inp);\n\t\tthis.resultMask = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : BrowseDescription) : BrowseDescription { \n\t\tif(!target) {\n\t\t\ttarget = new BrowseDescription();\n\t\t}\n\t\ttarget.nodeId = this.nodeId;\n\t\ttarget.browseDirection = this.browseDirection;\n\t\ttarget.referenceTypeId = this.referenceTypeId;\n\t\ttarget.includeSubtypes = this.includeSubtypes;\n\t\ttarget.nodeClassMask = this.nodeClassMask;\n\t\ttarget.resultMask = this.resultMask;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBrowseDescription(\tinp : DataStream) : BrowseDescription { \n\t\tlet obj = new BrowseDescription();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BrowseDescription\",BrowseDescription, makeExpandedNodeId(516,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport {ViewDescription} from './ViewDescription';\nimport * as ec from '../basic-types';\nimport {BrowseDescription} from './BrowseDescription';\nimport {decodeBrowseDescription} from './BrowseDescription';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBrowseRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tview? : ViewDescription;\n\t\trequestedMaxReferencesPerNode? : ec.UInt32;\n\t\tnodesToBrowse? : BrowseDescription[];\n}\n\n/**\nBrowse the references for one or more nodes from the server address space.\n*/\n\nexport class BrowseRequest {\n \t\trequestHeader : RequestHeader;\n\t\tview : ViewDescription;\n\t\trequestedMaxReferencesPerNode : ec.UInt32;\n\t\tnodesToBrowse : BrowseDescription[];\n\n\tconstructor(\toptions? : IBrowseRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.view= (options.view) ? options.view:new ViewDescription();\n\t\tthis.requestedMaxReferencesPerNode= (options.requestedMaxReferencesPerNode) ? options.requestedMaxReferencesPerNode:null;\n\t\tthis.nodesToBrowse= (options.nodesToBrowse) ? options.nodesToBrowse:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tthis.view.encode(out);\n\t\tec.encodeUInt32(this.requestedMaxReferencesPerNode,out);\n\t\tec.encodeArray(this.nodesToBrowse,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.view.decode(inp);\n\t\tthis.requestedMaxReferencesPerNode = ec.decodeUInt32(inp);\n\t\tthis.nodesToBrowse = ec.decodeArray(inp,decodeBrowseDescription);\n\n\t}\n\n\n\tclone(\ttarget? : BrowseRequest) : BrowseRequest { \n\t\tif(!target) {\n\t\t\ttarget = new BrowseRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\tif (this.view) { target.view = this.view.clone();}\n\t\ttarget.requestedMaxReferencesPerNode = this.requestedMaxReferencesPerNode;\n\t\tif (this.nodesToBrowse) { target.nodesToBrowse = ec.cloneComplexArray(this.nodesToBrowse);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBrowseRequest(\tinp : DataStream) : BrowseRequest { \n\t\tlet obj = new BrowseRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BrowseRequest\",BrowseRequest, makeExpandedNodeId(527,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {BrowseResult} from './BrowseResult';\nimport {decodeBrowseResult} from './BrowseResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBrowseResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : BrowseResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\nBrowse the references for one or more nodes from the server address space.\n*/\n\nexport class BrowseResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : BrowseResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IBrowseResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeBrowseResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : BrowseResponse) : BrowseResponse { \n\t\tif(!target) {\n\t\t\ttarget = new BrowseResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBrowseResponse(\tinp : DataStream) : BrowseResponse { \n\t\tlet obj = new BrowseResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BrowseResponse\",BrowseResponse, makeExpandedNodeId(530,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBrowseNextRequest {\n\t\trequestHeader? : RequestHeader;\n\t\treleaseContinuationPoints? : boolean;\n\t\tcontinuationPoints? : Uint8Array[];\n}\n\n/**\nContinues one or more browse operations.\n*/\n\nexport class BrowseNextRequest {\n \t\trequestHeader : RequestHeader;\n\t\treleaseContinuationPoints : boolean;\n\t\tcontinuationPoints : Uint8Array[];\n\n\tconstructor(\toptions? : IBrowseNextRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.releaseContinuationPoints= (options.releaseContinuationPoints) ? options.releaseContinuationPoints:null;\n\t\tthis.continuationPoints= (options.continuationPoints) ? options.continuationPoints:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeBoolean(this.releaseContinuationPoints,out);\n\t\tec.encodeArray(this.continuationPoints,out,ec.encodeByteString);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.releaseContinuationPoints = ec.decodeBoolean(inp);\n\t\tthis.continuationPoints = ec.decodeArray(inp,ec.decodeByteString);\n\n\t}\n\n\n\tclone(\ttarget? : BrowseNextRequest) : BrowseNextRequest { \n\t\tif(!target) {\n\t\t\ttarget = new BrowseNextRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.releaseContinuationPoints = this.releaseContinuationPoints;\n\t\ttarget.continuationPoints = ec.cloneArray(this.continuationPoints);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBrowseNextRequest(\tinp : DataStream) : BrowseNextRequest { \n\t\tlet obj = new BrowseNextRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BrowseNextRequest\",BrowseNextRequest, makeExpandedNodeId(533,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {BrowseResult} from './BrowseResult';\nimport {decodeBrowseResult} from './BrowseResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBrowseNextResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : BrowseResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\nContinues one or more browse operations.\n*/\n\nexport class BrowseNextResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : BrowseResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IBrowseNextResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeBrowseResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : BrowseNextResponse) : BrowseNextResponse { \n\t\tif(!target) {\n\t\t\ttarget = new BrowseNextResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBrowseNextResponse(\tinp : DataStream) : BrowseNextResponse { \n\t\tlet obj = new BrowseNextResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BrowseNextResponse\",BrowseNextResponse, makeExpandedNodeId(536,0));","\"use strict\";\r\n\r\nimport {QualifiedName} from '../generated/QualifiedName';\r\nimport {assert} from '../assert';\r\n/**\r\n * @method stringToQualifiedName\r\n * @param value {String}\r\n * @return {{namespaceIndex: Number, name: String}}\r\n *\r\n * @example\r\n *\r\n *  stringToQualifiedName(\"Hello\")   => {namespaceIndex: 0, name: \"Hello\"}\r\n *  stringToQualifiedName(\"3:Hello\") => {namespaceIndex: 3, name: \"Hello\"}\r\n */\r\nexport function stringToQualifiedName(value) {\r\n\r\n    var split_array = value.split(\":\");\r\n    var namespaceIndex = 0;\r\n    if (!isNaN(parseFloat(split_array[0])) && isFinite(split_array[0]) && Number.isInteger(parseFloat(split_array[0])) && split_array.length > 1) {\r\n        namespaceIndex = parseInt(split_array[0]);\r\n        split_array.shift();\r\n        value = split_array.join(':');\r\n    }\r\n    return new QualifiedName({namespaceIndex: namespaceIndex, name: value});\r\n}\r\n\r\n\r\nexport function coerceQualifyName(value) {\r\n\r\n    if (!value) {\r\n        return null;\r\n    } else if (value instanceof QualifiedName) {\r\n        return value;\r\n    } else if (typeof value === 'string' || value instanceof String) {\r\n        return stringToQualifiedName(value);\r\n    } else {\r\n        assert(value.hasOwnProperty(\"namespaceIndex\"));\r\n        assert(value.hasOwnProperty(\"name\"));\r\n        return new QualifiedName(value);\r\n    }\r\n}\r\n\r\n","\n\nimport * as ec from '../basic-types';\nimport {LocalizedText} from './LocalizedText';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IEnumValueType {\n\t\tvalue? : ec.Int64;\n\t\tdisplayName? : LocalizedText;\n\t\tdescription? : LocalizedText;\n}\n\n/**\nA mapping between a value of an enumerated type and a name and description.\n*/\n\nexport class EnumValueType {\n \t\tvalue : ec.Int64;\n\t\tdisplayName : LocalizedText;\n\t\tdescription : LocalizedText;\n\n\tconstructor(\toptions? : IEnumValueType) { \n\t\toptions = options || {};\n\t\tthis.value= (options.value) ? options.value:null;\n\t\tthis.displayName= (options.displayName) ? options.displayName:new LocalizedText();\n\t\tthis.description= (options.description) ? options.description:new LocalizedText();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeInt64(this.value,out);\n\t\tthis.displayName.encode(out);\n\t\tthis.description.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.value = ec.decodeInt64(inp);\n\t\tthis.displayName.decode(inp);\n\t\tthis.description.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : EnumValueType) : EnumValueType { \n\t\tif(!target) {\n\t\t\ttarget = new EnumValueType();\n\t\t}\n\t\ttarget.value = this.value;\n\t\tif (this.displayName) { target.displayName = this.displayName.clone();}\n\t\tif (this.description) { target.description = this.description.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeEnumValueType(\tinp : DataStream) : EnumValueType { \n\t\tlet obj = new EnumValueType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"EnumValueType\",EnumValueType, makeExpandedNodeId(8251,0));","\n\nimport {DataStream} from '../basic-types/DataStream';\n\n/**\nDefine bits used to indicate which attributes are writable.*/\nexport enum AttributeWriteMask {\n \t\tNone = 0,\n\t\tAccessLevel = 1,\n\t\tArrayDimensions = 2,\n\t\tBrowseName = 4,\n\t\tContainsNoLoops = 8,\n\t\tDataType = 16,\n\t\tDescription = 32,\n\t\tDisplayName = 64,\n\t\tEventNotifier = 128,\n\t\tExecutable = 256,\n\t\tHistorizing = 512,\n\t\tInverseName = 1024,\n\t\tIsAbstract = 2048,\n\t\tMinimumSamplingInterval = 4096,\n\t\tNodeClass = 8192,\n\t\tNodeId = 16384,\n\t\tSymmetric = 32768,\n\t\tUserAccessLevel = 65536,\n\t\tUserExecutable = 131072,\n\t\tUserWriteMask = 262144,\n\t\tValueRank = 524288,\n\t\tWriteMask = 1048576,\n\t\tValueForVariableType = 2097152,\n\t\tDataTypeDefinition = 4194304,\n\t\tRolePermissions = 8388608,\n\t\tAccessRestrictions = 16777216,\n\t\tAccessLevelEx = 33554432,\n\n}\n\nexport function encodeAttributeWriteMask(\tdata : AttributeWriteMask, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeAttributeWriteMask(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"AttributeWriteMask\",AttributeWriteMask,encodeAttributeWriteMask ,decodeAttributeWriteMask ,null);","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ITimeZoneDataType {\n\t\toffset? : ec.Int16;\n\t\tdaylightSavingInOffset? : boolean;\n}\n\n/**\n\n*/\n\nexport class TimeZoneDataType {\n \t\toffset : ec.Int16;\n\t\tdaylightSavingInOffset : boolean;\n\n\tconstructor(\toptions? : ITimeZoneDataType) { \n\t\toptions = options || {};\n\t\tthis.offset= (options.offset) ? options.offset:null;\n\t\tthis.daylightSavingInOffset= (options.daylightSavingInOffset) ? options.daylightSavingInOffset:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeInt16(this.offset,out);\n\t\tec.encodeBoolean(this.daylightSavingInOffset,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.offset = ec.decodeInt16(inp);\n\t\tthis.daylightSavingInOffset = ec.decodeBoolean(inp);\n\n\t}\n\n\n\tclone(\ttarget? : TimeZoneDataType) : TimeZoneDataType { \n\t\tif(!target) {\n\t\t\ttarget = new TimeZoneDataType();\n\t\t}\n\t\ttarget.offset = this.offset;\n\t\ttarget.daylightSavingInOffset = this.daylightSavingInOffset;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeTimeZoneDataType(\tinp : DataStream) : TimeZoneDataType { \n\t\tlet obj = new TimeZoneDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"TimeZoneDataType\",TimeZoneDataType, makeExpandedNodeId(8917,0));","import { LocalizedText } from \"../generated/LocalizedText\";\r\nimport { assert} from '../assert';\r\n\r\nexport function coerceLocalizedText(value) {\r\n    if (value === undefined || value === null) {\r\n        return null;\r\n    }\r\n    if (typeof value === \"string\") {\r\n        return new LocalizedText({locale: null, text: value});\r\n    }\r\n    if (value instanceof LocalizedText) {\r\n        return value;\r\n    }\r\n    assert(value.hasOwnProperty(\"locale\"));\r\n    assert(value.hasOwnProperty(\"text\"));\r\n    return new LocalizedText(value);\r\n}","\r\n\r\n\r\n\r\n//coerceLocalizedText: require(\"./src/localized_text\").coerceLocalizedText,\r\nexport { LocalizedText } from '../generated/LocalizedText';\r\n\r\nexport { QualifiedName } from '../generated/QualifiedName';\r\n\r\nexport { coerceQualifyName, stringToQualifiedName } from './qualified_name_util';\r\n\r\nexport { DiagnosticInfo } from '../generated/DiagnosticInfo';\r\n\r\nexport { NodeClass } from '../generated/NodeClass';\r\n\r\nexport { AttributeIds } from '../constants';\r\n\r\n//export {AccessLevelFlag} from './access_level'; //<-- generated as AccessLevelType\r\n\r\n//AttributeNameById: require(\"./src/attributeIds\").AttributeNameById,\r\n//is_valid_attributeId: require(\"./src/attributeIds\").is_valid_attributeId,\r\n\r\n//NodeClassMask: require(\"./src/node_class_mask\").NodeClassMask,\r\n//makeNodeClassMask: require(\"./src/node_class_mask\").makeNodeClassMask,\r\n\r\nexport { BrowseResultMask } from '../generated/BrowseResultMask';\r\n//ResultMask: require(\"./src/result_mask\").ResultMask,\r\n//makeResultMask: require(\"./src/result_mask\").makeResultMask,\r\n\r\nexport { BrowseDirection } from '../generated/BrowseDirection';\r\n\r\n\r\n//AccessLevelFlag: require(\"./src/access_level\").AccessLevelFlag,\r\n//makeAccessLevel: require(\"./src/access_level\").makeAccessLevel,\r\n\r\n\r\n// is_dataEncoding:require(\"./src/data_encoding\").is_dataEncoding,\r\n// is_valid_dataEncoding:require(\"./src/data_encoding\").is_valid_dataEncoding,\r\n\r\nexport { EnumValueType } from '../generated/EnumValueType';\r\nexport { AttributeWriteMask } from '../generated/AttributeWriteMask';\r\nexport { TimeZoneDataType } from '../generated/TimeZoneDataType'\r\n\r\nexport {coerceLocalizedText} from './localized_text_util'\r\n\r\n\r\n\r\n","\n\nimport {DataStream} from '../basic-types/DataStream';\n\n/**\nThe types of applications.*/\nexport enum ApplicationType {\n \t\tServer = 0,\n\t\tClient = 1,\n\t\tClientAndServer = 2,\n\t\tDiscoveryServer = 3,\n\n}\n\nexport function encodeApplicationType(\tdata : ApplicationType, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeApplicationType(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"ApplicationType\",ApplicationType,encodeApplicationType ,decodeApplicationType ,null);","export default function onlyOnce(fn) {\n    return function() {\n        if (fn === null) throw new Error(\"Callback was already called.\");\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n","export default function slice(arrayLike, start) {\n    start = start|0;\n    var newLen = Math.max(arrayLike.length - start, 0);\n    var newArr = Array(newLen);\n    for(var idx = 0; idx < newLen; idx++)  {\n        newArr[idx] = arrayLike[start + idx];\n    }\n    return newArr;\n}\n","import eachOfLimit from './eachOfLimit';\nimport doLimit from './internal/doLimit';\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs only a single async operation at a time.\n *\n * @name eachOfSeries\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfSeries\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Invoked with (err).\n */\nexport default doLimit(eachOfLimit, 1);\n","import parallel from './internal/parallel';\nimport eachOfSeries from './eachOfSeries';\n\n/**\n * Run the functions in the `tasks` collection in series, each one running once\n * the previous function has completed. If any functions in the series pass an\n * error to its callback, no more functions are run, and `callback` is\n * immediately called with the value of the error. Otherwise, `callback`\n * receives an array of results when `tasks` have completed.\n *\n * It is also possible to use an object instead of an array. Each property will\n * be run as a function, and the results will be passed to the final `callback`\n * as an object instead of an array. This can be a more readable way of handling\n *  results from {@link async.series}.\n *\n * **Note** that while many implementations preserve the order of object\n * properties, the [ECMAScript Language Specification](http://www.ecma-international.org/ecma-262/5.1/#sec-8.6)\n * explicitly states that\n *\n * > The mechanics and order of enumerating the properties is not specified.\n *\n * So if you rely on the order in which your series of functions are executed,\n * and want this to work on all platforms, consider using an array.\n *\n * @name series\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Array|Iterable|Object} tasks - A collection containing\n * [async functions]{@link AsyncFunction} to run in series.\n * Each function can complete with any number of optional `result` values.\n * @param {Function} [callback] - An optional callback to run once all the\n * functions have completed. This function gets a results array (or object)\n * containing all the result arguments passed to the `task` callbacks. Invoked\n * with (err, result).\n * @example\n * async.series([\n *     function(callback) {\n *         // do some stuff ...\n *         callback(null, 'one');\n *     },\n *     function(callback) {\n *         // do some more stuff ...\n *         callback(null, 'two');\n *     }\n * ],\n * // optional callback\n * function(err, results) {\n *     // results is now equal to ['one', 'two']\n * });\n *\n * async.series({\n *     one: function(callback) {\n *         setTimeout(function() {\n *             callback(null, 1);\n *         }, 200);\n *     },\n *     two: function(callback){\n *         setTimeout(function() {\n *             callback(null, 2);\n *         }, 100);\n *     }\n * }, function(err, results) {\n *     // results is now equal to: {one: 1, two: 2}\n * });\n */\nexport default function series(tasks, callback) {\n    parallel(eachOfSeries, tasks, callback);\n}\n","import noop from 'lodash-es/noop';\nimport isArrayLike from 'lodash-es/isArrayLike';\nimport slice from './slice';\nimport wrapAsync from './wrapAsync';\n\nexport default function _parallel(eachfn, tasks, callback) {\n    callback = callback || noop;\n    var results = isArrayLike(tasks) ? [] : {};\n\n    eachfn(tasks, function (task, key, callback) {\n        wrapAsync(task)(function (err, result) {\n            if (arguments.length > 2) {\n                result = slice(arguments, 1);\n            }\n            results[key] = result;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n","\n\nimport {DataStream} from '../basic-types/DataStream';\n\n/**\nThe directions of the references to return.*/\nexport enum BrowseDirection {\n \t\tForward = 0,\n\t\tInverse = 1,\n\t\tBoth = 2,\n\t\tInvalid = 3,\n\n}\n\nexport function encodeBrowseDirection(\tdata : BrowseDirection, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeBrowseDirection(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"BrowseDirection\",BrowseDirection,encodeBrowseDirection ,decodeBrowseDirection ,null);","\n\nimport {DataStream} from '../basic-types/DataStream';\n\n/**\nA mask specifying the class of the node.*/\nexport enum NodeClass {\n \t\tUnspecified = 0,\n\t\tObject = 1,\n\t\tVariable = 2,\n\t\tMethod = 4,\n\t\tObjectType = 8,\n\t\tVariableType = 16,\n\t\tReferenceType = 32,\n\t\tDataType = 64,\n\t\tView = 128,\n\n}\n\nexport function encodeNodeClass(\tdata : NodeClass, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeNodeClass(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"NodeClass\",NodeClass,encodeNodeClass ,decodeNodeClass ,null);","\r\nimport {ClientSession} from './client_session';\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {assert} from '../assert';\r\nimport {coerceNodeId} from '../nodeid/nodeid';\r\nimport {VariableIds} from '../constants';\r\nimport {StatusCodes} from '../constants';\r\nimport {ServerState} from '../generated/ServerState';\r\n\r\nvar serverStatus_State_Id = coerceNodeId(VariableIds.Server_ServerStatus_State);\r\n\r\n\r\n\r\nexport class ClientSessionKeepAliveManager extends EventEmitter {\r\n\r\n    protected timerId;\r\n    protected session;\r\n    protected pingTimeout : number;\r\n    protected lastKnownState : any;\r\n    protected checkInterval: number;\r\n\r\nconstructor ( session : ClientSession) {\r\n    super();\r\n    this.session = session;\r\n    this.timerId = 0;\r\n}\r\n\r\n/**\r\n * @method ping_server\r\n *\r\n * when a session is opened on a server, the client shall send request on a regular basis otherwise the server\r\n * session object might time out.\r\n * start_ping make sure that ping_server is called on a regular basis to prevent session to timeout.\r\n *\r\n * @param callback\r\n */\r\npublic ping_server(callback) {\r\n    callback = callback || function () { };\r\n    var the_session = this.session;\r\n    if (!the_session) {\r\n        return callback();\r\n    }\r\n\r\n    var now = Date.now();\r\n\r\n    var timeSinceLastServerContact = now - the_session.lastResponseReceivedTime;\r\n    if (timeSinceLastServerContact < this.pingTimeout) {\r\n        // no need to send a ping yet\r\n        //xx console.log(\"Skipping \",timeSinceLastServerContact,self.session.timeout);\r\n        return callback();\r\n    }\r\n    //xx console.log(\"readVariableValue \",timeSinceLastServerContact,self.session.timeout);\r\n\r\n    // Server_ServerStatus_State\r\n    the_session.readVariableValue(serverStatus_State_Id, (err, dataValue) => {\r\n        if (err) {\r\n            console.log(\" warning : ClientSessionKeepAliveManager#ping_server \", err.message);\r\n            this.stop();\r\n\r\n            /**\r\n             * @event failure\r\n             * raised when the server is not responding or is responding with en error to\r\n             * the keep alive read Variable value transaction\r\n             */\r\n            this.emit(\"failure\");\r\n\r\n        } else {\r\n            if (dataValue.statusCode === StatusCodes.Good) {\r\n                var newState = ServerState[dataValue.value.value];\r\n                //istanbul ignore next\r\n                if (newState !== this.lastKnownState) {\r\n                    console.log(\" Server State = \", newState.toString());\r\n                }\r\n                this.lastKnownState = newState;\r\n            }\r\n\r\n            this.emit(\"keepalive\",this.lastKnownState);\r\n        }\r\n        callback();\r\n    });\r\n};\r\n\r\n\r\npublic start() {\r\n    \r\n    assert(!this.timerId);\r\n    assert(this.session.timeout > 100);\r\n\r\n    this.pingTimeout   =  this.session.timeout * 2/3;\r\n    this.checkInterval =  this.pingTimeout  / 3;\r\n    this.timerId = setInterval(this.ping_server.bind(this),this.checkInterval);\r\n};\r\n\r\npublic stop() : void {\r\n    if (this.timerId) {\r\n        clearInterval(this.timerId);\r\n        this.timerId = 0;\r\n    }\r\n};\r\n}","\n\nimport {RelativePath} from './RelativePath';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IQueryDataDescription {\n\t\trelativePath? : RelativePath;\n\t\tattributeId? : ec.UInt32;\n\t\tindexRange? : string;\n}\n\n/**\n\n*/\n\nexport class QueryDataDescription {\n \t\trelativePath : RelativePath;\n\t\tattributeId : ec.UInt32;\n\t\tindexRange : string;\n\n\tconstructor(\toptions? : IQueryDataDescription) { \n\t\toptions = options || {};\n\t\tthis.relativePath= (options.relativePath) ? options.relativePath:new RelativePath();\n\t\tthis.attributeId= (options.attributeId) ? options.attributeId:null;\n\t\tthis.indexRange= (options.indexRange) ? options.indexRange:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.relativePath.encode(out);\n\t\tec.encodeUInt32(this.attributeId,out);\n\t\tec.encodeString(this.indexRange,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.relativePath.decode(inp);\n\t\tthis.attributeId = ec.decodeUInt32(inp);\n\t\tthis.indexRange = ec.decodeString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : QueryDataDescription) : QueryDataDescription { \n\t\tif(!target) {\n\t\t\ttarget = new QueryDataDescription();\n\t\t}\n\t\tif (this.relativePath) { target.relativePath = this.relativePath.clone();}\n\t\ttarget.attributeId = this.attributeId;\n\t\ttarget.indexRange = this.indexRange;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeQueryDataDescription(\tinp : DataStream) : QueryDataDescription { \n\t\tlet obj = new QueryDataDescription();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"QueryDataDescription\",QueryDataDescription, makeExpandedNodeId(572,0));","\n\nimport * as ec from '../basic-types';\nimport {QueryDataDescription} from './QueryDataDescription';\nimport {decodeQueryDataDescription} from './QueryDataDescription';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface INodeTypeDescription {\n\t\ttypeDefinitionNode? : ec.ExpandedNodeId;\n\t\tincludeSubTypes? : boolean;\n\t\tdataToReturn? : QueryDataDescription[];\n}\n\n/**\n\n*/\n\nexport class NodeTypeDescription {\n \t\ttypeDefinitionNode : ec.ExpandedNodeId;\n\t\tincludeSubTypes : boolean;\n\t\tdataToReturn : QueryDataDescription[];\n\n\tconstructor(\toptions? : INodeTypeDescription) { \n\t\toptions = options || {};\n\t\tthis.typeDefinitionNode= (options.typeDefinitionNode) ? options.typeDefinitionNode:null;\n\t\tthis.includeSubTypes= (options.includeSubTypes) ? options.includeSubTypes:null;\n\t\tthis.dataToReturn= (options.dataToReturn) ? options.dataToReturn:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeExpandedNodeId(this.typeDefinitionNode,out);\n\t\tec.encodeBoolean(this.includeSubTypes,out);\n\t\tec.encodeArray(this.dataToReturn,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.typeDefinitionNode = ec.decodeExpandedNodeId(inp);\n\t\tthis.includeSubTypes = ec.decodeBoolean(inp);\n\t\tthis.dataToReturn = ec.decodeArray(inp,decodeQueryDataDescription);\n\n\t}\n\n\n\tclone(\ttarget? : NodeTypeDescription) : NodeTypeDescription { \n\t\tif(!target) {\n\t\t\ttarget = new NodeTypeDescription();\n\t\t}\n\t\ttarget.typeDefinitionNode = this.typeDefinitionNode;\n\t\ttarget.includeSubTypes = this.includeSubTypes;\n\t\tif (this.dataToReturn) { target.dataToReturn = ec.cloneComplexArray(this.dataToReturn);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeNodeTypeDescription(\tinp : DataStream) : NodeTypeDescription { \n\t\tlet obj = new NodeTypeDescription();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"NodeTypeDescription\",NodeTypeDescription, makeExpandedNodeId(575,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport {ViewDescription} from './ViewDescription';\nimport {NodeTypeDescription} from './NodeTypeDescription';\nimport {decodeNodeTypeDescription} from './NodeTypeDescription';\nimport {ContentFilter} from './ContentFilter';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IQueryFirstRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tview? : ViewDescription;\n\t\tnodeTypes? : NodeTypeDescription[];\n\t\tfilter? : ContentFilter;\n\t\tmaxDataSetsToReturn? : ec.UInt32;\n\t\tmaxReferencesToReturn? : ec.UInt32;\n}\n\n/**\n\n*/\n\nexport class QueryFirstRequest {\n \t\trequestHeader : RequestHeader;\n\t\tview : ViewDescription;\n\t\tnodeTypes : NodeTypeDescription[];\n\t\tfilter : ContentFilter;\n\t\tmaxDataSetsToReturn : ec.UInt32;\n\t\tmaxReferencesToReturn : ec.UInt32;\n\n\tconstructor(\toptions? : IQueryFirstRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.view= (options.view) ? options.view:new ViewDescription();\n\t\tthis.nodeTypes= (options.nodeTypes) ? options.nodeTypes:[];\n\t\tthis.filter= (options.filter) ? options.filter:new ContentFilter();\n\t\tthis.maxDataSetsToReturn= (options.maxDataSetsToReturn) ? options.maxDataSetsToReturn:null;\n\t\tthis.maxReferencesToReturn= (options.maxReferencesToReturn) ? options.maxReferencesToReturn:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tthis.view.encode(out);\n\t\tec.encodeArray(this.nodeTypes,out);\n\t\tthis.filter.encode(out);\n\t\tec.encodeUInt32(this.maxDataSetsToReturn,out);\n\t\tec.encodeUInt32(this.maxReferencesToReturn,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.view.decode(inp);\n\t\tthis.nodeTypes = ec.decodeArray(inp,decodeNodeTypeDescription);\n\t\tthis.filter.decode(inp);\n\t\tthis.maxDataSetsToReturn = ec.decodeUInt32(inp);\n\t\tthis.maxReferencesToReturn = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : QueryFirstRequest) : QueryFirstRequest { \n\t\tif(!target) {\n\t\t\ttarget = new QueryFirstRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\tif (this.view) { target.view = this.view.clone();}\n\t\tif (this.nodeTypes) { target.nodeTypes = ec.cloneComplexArray(this.nodeTypes);}\n\t\tif (this.filter) { target.filter = this.filter.clone();}\n\t\ttarget.maxDataSetsToReturn = this.maxDataSetsToReturn;\n\t\ttarget.maxReferencesToReturn = this.maxReferencesToReturn;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeQueryFirstRequest(\tinp : DataStream) : QueryFirstRequest { \n\t\tlet obj = new QueryFirstRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"QueryFirstRequest\",QueryFirstRequest, makeExpandedNodeId(615,0));","\n\nimport * as ec from '../basic-types';\nimport {Variant} from '../variant';\nimport {decodeVariant} from '../variant';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IQueryDataSet {\n\t\tnodeId? : ec.ExpandedNodeId;\n\t\ttypeDefinitionNode? : ec.ExpandedNodeId;\n\t\tvalues? : Variant[];\n}\n\n/**\n\n*/\n\nexport class QueryDataSet {\n \t\tnodeId : ec.ExpandedNodeId;\n\t\ttypeDefinitionNode : ec.ExpandedNodeId;\n\t\tvalues : Variant[];\n\n\tconstructor(\toptions? : IQueryDataSet) { \n\t\toptions = options || {};\n\t\tthis.nodeId= (options.nodeId) ? options.nodeId:null;\n\t\tthis.typeDefinitionNode= (options.typeDefinitionNode) ? options.typeDefinitionNode:null;\n\t\tthis.values= (options.values) ? options.values:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeExpandedNodeId(this.nodeId,out);\n\t\tec.encodeExpandedNodeId(this.typeDefinitionNode,out);\n\t\tec.encodeArray(this.values,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.nodeId = ec.decodeExpandedNodeId(inp);\n\t\tthis.typeDefinitionNode = ec.decodeExpandedNodeId(inp);\n\t\tthis.values = ec.decodeArray(inp,decodeVariant);\n\n\t}\n\n\n\tclone(\ttarget? : QueryDataSet) : QueryDataSet { \n\t\tif(!target) {\n\t\t\ttarget = new QueryDataSet();\n\t\t}\n\t\ttarget.nodeId = this.nodeId;\n\t\ttarget.typeDefinitionNode = this.typeDefinitionNode;\n\t\tif (this.values) { target.values = ec.cloneComplexArray(this.values);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeQueryDataSet(\tinp : DataStream) : QueryDataSet { \n\t\tlet obj = new QueryDataSet();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"QueryDataSet\",QueryDataSet, makeExpandedNodeId(579,0));","\n\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IParsingResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\tdataStatusCodes? : ec.StatusCode[];\n\t\tdataDiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class ParsingResult {\n \t\tstatusCode : ec.StatusCode;\n\t\tdataStatusCodes : ec.StatusCode[];\n\t\tdataDiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IParsingResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.dataStatusCodes= (options.dataStatusCodes) ? options.dataStatusCodes:[];\n\t\tthis.dataDiagnosticInfos= (options.dataDiagnosticInfos) ? options.dataDiagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeArray(this.dataStatusCodes,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.dataDiagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.dataStatusCodes = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.dataDiagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : ParsingResult) : ParsingResult { \n\t\tif(!target) {\n\t\t\ttarget = new ParsingResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.dataStatusCodes = ec.cloneArray(this.dataStatusCodes);\n\t\tif (this.dataDiagnosticInfos) { target.dataDiagnosticInfos = ec.cloneComplexArray(this.dataDiagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeParsingResult(\tinp : DataStream) : ParsingResult { \n\t\tlet obj = new ParsingResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ParsingResult\",ParsingResult, makeExpandedNodeId(612,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {QueryDataSet} from './QueryDataSet';\nimport {decodeQueryDataSet} from './QueryDataSet';\nimport * as ec from '../basic-types';\nimport {ParsingResult} from './ParsingResult';\nimport {decodeParsingResult} from './ParsingResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {ContentFilterResult} from './ContentFilterResult';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IQueryFirstResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tqueryDataSets? : QueryDataSet[];\n\t\tcontinuationPoint? : Uint8Array;\n\t\tparsingResults? : ParsingResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n\t\tfilterResult? : ContentFilterResult;\n}\n\n/**\n\n*/\n\nexport class QueryFirstResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tqueryDataSets : QueryDataSet[];\n\t\tcontinuationPoint : Uint8Array;\n\t\tparsingResults : ParsingResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\t\tfilterResult : ContentFilterResult;\n\n\tconstructor(\toptions? : IQueryFirstResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.queryDataSets= (options.queryDataSets) ? options.queryDataSets:[];\n\t\tthis.continuationPoint= (options.continuationPoint) ? options.continuationPoint:null;\n\t\tthis.parsingResults= (options.parsingResults) ? options.parsingResults:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\t\tthis.filterResult= (options.filterResult) ? options.filterResult:new ContentFilterResult();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.queryDataSets,out);\n\t\tec.encodeByteString(this.continuationPoint,out);\n\t\tec.encodeArray(this.parsingResults,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\t\tthis.filterResult.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.queryDataSets = ec.decodeArray(inp,decodeQueryDataSet);\n\t\tthis.continuationPoint = ec.decodeByteString(inp);\n\t\tthis.parsingResults = ec.decodeArray(inp,decodeParsingResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\t\tthis.filterResult.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : QueryFirstResponse) : QueryFirstResponse { \n\t\tif(!target) {\n\t\t\ttarget = new QueryFirstResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.queryDataSets) { target.queryDataSets = ec.cloneComplexArray(this.queryDataSets);}\n\t\ttarget.continuationPoint = this.continuationPoint;\n\t\tif (this.parsingResults) { target.parsingResults = ec.cloneComplexArray(this.parsingResults);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\tif (this.filterResult) { target.filterResult = this.filterResult.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeQueryFirstResponse(\tinp : DataStream) : QueryFirstResponse { \n\t\tlet obj = new QueryFirstResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"QueryFirstResponse\",QueryFirstResponse, makeExpandedNodeId(618,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IQueryNextRequest {\n\t\trequestHeader? : RequestHeader;\n\t\treleaseContinuationPoint? : boolean;\n\t\tcontinuationPoint? : Uint8Array;\n}\n\n/**\n\n*/\n\nexport class QueryNextRequest {\n \t\trequestHeader : RequestHeader;\n\t\treleaseContinuationPoint : boolean;\n\t\tcontinuationPoint : Uint8Array;\n\n\tconstructor(\toptions? : IQueryNextRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.releaseContinuationPoint= (options.releaseContinuationPoint) ? options.releaseContinuationPoint:null;\n\t\tthis.continuationPoint= (options.continuationPoint) ? options.continuationPoint:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeBoolean(this.releaseContinuationPoint,out);\n\t\tec.encodeByteString(this.continuationPoint,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.releaseContinuationPoint = ec.decodeBoolean(inp);\n\t\tthis.continuationPoint = ec.decodeByteString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : QueryNextRequest) : QueryNextRequest { \n\t\tif(!target) {\n\t\t\ttarget = new QueryNextRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.releaseContinuationPoint = this.releaseContinuationPoint;\n\t\ttarget.continuationPoint = this.continuationPoint;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeQueryNextRequest(\tinp : DataStream) : QueryNextRequest { \n\t\tlet obj = new QueryNextRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"QueryNextRequest\",QueryNextRequest, makeExpandedNodeId(621,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {QueryDataSet} from './QueryDataSet';\nimport {decodeQueryDataSet} from './QueryDataSet';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IQueryNextResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tqueryDataSets? : QueryDataSet[];\n\t\trevisedContinuationPoint? : Uint8Array;\n}\n\n/**\n\n*/\n\nexport class QueryNextResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tqueryDataSets : QueryDataSet[];\n\t\trevisedContinuationPoint : Uint8Array;\n\n\tconstructor(\toptions? : IQueryNextResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.queryDataSets= (options.queryDataSets) ? options.queryDataSets:[];\n\t\tthis.revisedContinuationPoint= (options.revisedContinuationPoint) ? options.revisedContinuationPoint:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.queryDataSets,out);\n\t\tec.encodeByteString(this.revisedContinuationPoint,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.queryDataSets = ec.decodeArray(inp,decodeQueryDataSet);\n\t\tthis.revisedContinuationPoint = ec.decodeByteString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : QueryNextResponse) : QueryNextResponse { \n\t\tif(!target) {\n\t\t\ttarget = new QueryNextResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.queryDataSets) { target.queryDataSets = ec.cloneComplexArray(this.queryDataSets);}\n\t\ttarget.revisedContinuationPoint = this.revisedContinuationPoint;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeQueryNextResponse(\tinp : DataStream) : QueryNextResponse { \n\t\tlet obj = new QueryNextResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"QueryNextResponse\",QueryNextResponse, makeExpandedNodeId(624,0));","\"use strict\";\r\n/**\r\n * @module opcua.client\r\n */\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {assert} from '../assert';\r\nimport {resolveNodeId,coerceNodeId,makeNodeId,NodeId} from '../nodeid/nodeid';\r\nimport {OPCUAClientBase} from './client_base';\r\nimport { OPCUAClientOptions } from '../common/client_options';\r\nimport {StatusCodes} from '../constants/raw_status_codes';\r\n\r\nimport {CreateMonitoredItemsRequest, ICreateMonitoredItemsRequest} from '../generated/CreateMonitoredItemsRequest';\r\nimport {CreateMonitoredItemsResponse} from '../generated/CreateMonitoredItemsResponse';\r\nimport {CreateSubscriptionRequest, ICreateSubscriptionRequest} from '../generated/CreateSubscriptionRequest';\r\nimport {CreateSubscriptionResponse} from '../generated/CreateSubscriptionResponse';\r\nimport { PublishResponse } from '../generated/PublishResponse';\r\nimport { PublishRequest } from '../generated/PublishRequest';\r\nimport { RepublishRequest } from '../generated/RepublishRequest';\r\nimport { RepublishResponse } from '../generated/RepublishResponse';\r\nimport { IDeleteMonitoredItemsRequest } from '../generated/DeleteMonitoredItemsRequest';\r\nimport { ModifyMonitoredItemsRequest} from '../generated/ModifyMonitoredItemsRequest';\r\nimport { ModifyMonitoredItemsResponse} from '../generated/ModifyMonitoredItemsResponse';\r\nimport { IDeleteSubscriptionsRequest} from '../generated/DeleteSubscriptionsRequest';\r\nimport {TransferSubscriptionsRequest} from '../generated/TransferSubscriptionsRequest';\r\n\r\nimport { ClientSidePublishEngine} from './client_publish_engine';\r\nimport { ClientSessionKeepAliveManager} from './client_session_keepalive_manager';\r\n\r\nimport { UInt32} from '../basic-types';\r\nimport { CallMethodRequest } from '../generated/CallMethodRequest';\r\nimport { CallMethodResult } from '../generated/CallMethodResult';\r\nimport { Argument } from '../generated/Argument';\r\n\r\nimport {AttributeIds,ReferenceTypeIds} from '../constants/';\r\nimport { DataType } from '../variant/DataTypeEnum';\r\n\r\n\r\nimport {DataValue} from '../data-value';\r\nimport {Variant} from '../variant';\r\n\r\n\r\n\r\n//var makeNodeClassMask = require(\"node-opcua-data-model\").makeNodeClassMask;\r\n\r\nimport * as subscription_service from '../service-subscription';\r\nimport * as read_service from '../service-read';\r\nimport * as historizing_service from '../service-history';\r\nimport * as browse_service from '../service-browse';\r\nimport * as write_service from '../service-write';\r\nimport * as call_service from '../service-call';\r\nimport * as query_service from \"../service-query\";\r\nimport * as translate_service from \"../service-translate-browse-path\";\r\n\r\n\r\nimport * as utils from '../utils';\r\nimport {doDebug,debugLog} from '../common/debug';\r\nimport { QualifiedName } from '../generated/QualifiedName';\r\nimport { NodeClass } from '../generated/NodeClass';\r\nimport { DiagnosticInfo } from '../data-model';\r\nimport { ReferenceDescription } from '../service-browse';\r\n\r\n\r\n\r\n\r\n\r\nexport enum BrowseDirection {\r\n    Invalid =-1, //\r\n    Forward = 0, // Return forward references.\r\n    Inverse = 1, //Return inverse references.\r\n    Both = 2  // Return forward and inverse references.\r\n}\r\n\r\nexport interface BrowseDescription {\r\n    nodeId?: NodeId, // The id of the node to browse.\r\n    browseDirection?: BrowseDirection,// The direction of the references to return.\r\n    referenceTypeId?: NodeId,  // The type of references to return.Specifies the NodeId of the ReferenceType to follow. Only instances of this ReferenceType or its subtype are returned.If not specified then all ReferenceTypes are returned and includeSubtypes is ignored.\r\n    includeSubtypes?: boolean, // Includes subtypes of the reference type.\r\n    nodeClassMask?: UInt32,  // A mask indicating which node classes to return. 0 means return all nodes.\r\n    resultMask?: UInt32 // } A mask indicating which fields in the ReferenceDescription should be returned in the results.\r\n}\r\n\r\n\r\ntype CoercibleToBrowseDescription = string | BrowseDescription;\r\n\r\n\r\n\r\n/**\r\n * @class ClientSession\r\n * @param client {OPCUAClient}\r\n * @constructor\r\n */\r\nexport class ClientSession extends EventEmitter {\r\n    \r\n    serverCertificate: any;\r\n    serverNonce: any;\r\n    serverSignature: any;\r\n    authenticationToken: any;\r\n    sessionId: any;\r\n    name: any;\r\n    protected _closeEventHasBeenEmmitted : boolean;\r\n    protected _client : OPCUAClientBase;\r\n    protected _publishEngine : ClientSidePublishEngine;\r\n    protected _closed : boolean;\r\n    protected _requestedMaxReferencesPerNode : number;\r\n    protected _keepAliveManager : ClientSessionKeepAliveManager;\r\n\r\n    protected lastRequestSentTime : number;\r\n    protected lastResponseReceivedTime : number;\r\n    protected _timeout : number\r\n\r\n    protected static emptyUint32Array = new Uint32Array(0);\r\n\r\n    get client() {\r\n        return this._client;\r\n    }\r\n\r\n    set client(cli : OPCUAClientBase) {\r\n        this._client = cli;\r\n    }\r\n\r\n\r\n    get closed() {\r\n        return this._closed;\r\n    }\r\n\r\n    set closed(closed : boolean) {\r\n        this._closed = closed;\r\n    }\r\n\r\n    constructor (client: OPCUAClientBase) {\r\n        super();\r\n        this._closeEventHasBeenEmmitted = false;\r\n        this._client = client;\r\n        this._publishEngine = null;\r\n        this._closed = false;\r\n    };\r\n\r\n    /**\r\n * the endpoint on which this session is operating\r\n * @property endpoint\r\n * @type {EndpointDescription}\r\n */\r\npublic get endpoint() {\r\n    return this._client.endpoint;\r\n};\r\n\r\npublic get timeout() : number {\r\n    return this._timeout;\r\n}\r\n\r\npublic set timeout(t : number) {\r\n    this._timeout = t;\r\n}\r\n\r\n/**\r\n * @method getPublishEngine\r\n * @return {ClientSidePublishEngine}\r\n */\r\ngetPublishEngine() : ClientSidePublishEngine {\r\n\r\n    if (!this._publishEngine) {\r\n        this._publishEngine = new ClientSidePublishEngine(this);\r\n    }\r\n\r\n    return this._publishEngine;\r\n};\r\n\r\npublic static coerceBrowseDescription(data) {\r\n    if (typeof data === \"string\" || data instanceof NodeId) {\r\n        return ClientSession.coerceBrowseDescription({\r\n            nodeId: data,\r\n            includeSubtypes: true,\r\n            browseDirection: BrowseDirection.Forward,//BrowseDirection.Both,\r\n            nodeClassMask: 0,\r\n            resultMask: 63\r\n        });\r\n    } else {\r\n        data.nodeId = resolveNodeId(data.nodeId);\r\n        data.referenceTypeId = data.referenceTypeId ? resolveNodeId(data.referenceTypeId) : null;\r\n        return new browse_service.BrowseDescription(data);\r\n    }\r\n}\r\n\r\n/**\r\n * browse a node or an array of nodes.\r\n *\r\n * @method browse\r\n * @async\r\n *\r\n * @example:\r\n *\r\n * form1:\r\n *\r\n *    ``` javascript\r\n *    session.browse(\"RootFolder\",function(err,results,diagnostics) {} );\r\n *    ```\r\n *\r\n * form2:\r\n *\r\n *    ``` javascript\r\n *    var browseDescription = {\r\n *       nodeId: \"ObjectsFolder\",\r\n *       referenceTypeId: \"Organizes\",\r\n *       browseDirection: BrowseDirection.Inverse,\r\n *       includeSubtypes: true,\r\n *       nodeClassMask: 0,\r\n *       resultMask: 63\r\n *    }\r\n *    session.browse(browseDescription,function(err,results,diagnostics) {} );\r\n *    ```\r\n *\r\n * form3:\r\n *\r\n *    ``` javascript\r\n *    session.browse([ \"RootFolder\", \"ObjectsFolder\"],function(err,results,diagnostics) {\r\n *       assert(results.length === 2);\r\n *    });\r\n *    ```\r\n *\r\n * form4:\r\n *\r\n *   ``` javascript\r\n *    var browseDescription = [\r\n *      {\r\n *          nodeId: \"ObjectsFolder\",\r\n *          referenceTypeId: \"Organizes\",\r\n *          browseDirection: BrowseDirection.Inverse,\r\n *          includeSubtypes: true,\r\n *          nodeClassMask: 0,\r\n *          resultMask: 63\r\n *      }\r\n *    ]\r\n *    session.browse(browseDescription,function(err,results,diagnostics) {} );\r\n *    ```\r\n *\r\n * @param nodes {Object}\r\n * @param {Function} callback\r\n * @param {Error|null} callback.err\r\n * @param {BrowseResult[]} callback.results an array containing the BrowseResult of each BrowseDescription.\r\n */\r\nbrowse(nodes : string|string[]|NodeId|NodeId[]|BrowseDescription|BrowseDescription[], callback : (err : Error, results : browse_service.BrowseResult[], diagnostInfos : DiagnosticInfo[]| browse_service.BrowseResponse) => void) {\r\n\r\n    this._requestedMaxReferencesPerNode = this._requestedMaxReferencesPerNode || 10000;\r\n    assert(Number.isFinite(this._requestedMaxReferencesPerNode));\r\n    assert('function' === typeof callback);\r\n\r\n    if (!Array.isArray(nodes)) {\r\n        (<any>nodes) = [nodes];\r\n    }\r\n\r\n    var nodesToBrowse = (<any>nodes).map(ClientSession.coerceBrowseDescription);\r\n\r\n    var request = new browse_service.BrowseRequest({\r\n        nodesToBrowse: nodesToBrowse,\r\n        requestedMaxReferencesPerNode: this._requestedMaxReferencesPerNode\r\n    });\r\n\r\n    this.performMessageTransaction(request, (err, response : browse_service.BrowseResponse) => {\r\n\r\n        var i, r;\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err, null, response);\r\n        }\r\n\r\n        assert(response instanceof browse_service.BrowseResponse);\r\n\r\n        if (this._requestedMaxReferencesPerNode > 0) {\r\n\r\n            for (i = 0; i < response.results.length; i++) {\r\n                r = response.results[i];\r\n\r\n                /* istanbul ignore next */\r\n                if (r.references && r.references.length > this._requestedMaxReferencesPerNode) {\r\n                    console.log(\"warning BrowseResponse : server didn't take into account our requestedMaxReferencesPerNode \");\r\n                    console.log(\"        self.requestedMaxReferencesPerNode= \" + this._requestedMaxReferencesPerNode);\r\n                    console.log(\"        got \" + r.references.length + \"for \" + nodesToBrowse[i].nodeId.toString());\r\n                    console.log(\"        continuationPoint \", r.continuationPoint);\r\n                }\r\n            }\r\n        }\r\n        for (i = 0; i < response.results.length; i++) {\r\n            r = response.results[i];\r\n            r.references = r.references || [];\r\n        }\r\n        // detect unsupported case :\r\n        // todo implement proper support for r.continuationPoint\r\n        for (i = 0; i < response.results.length; i++) {\r\n            r = response.results[i];\r\n\r\n            if (r.continuationPoint !== null) {\r\n                console.log(\" warning: BrowseResponse : server didn't send all references and has provided a continuationPoint. Unfortunately we do not support this yet\");\r\n                console.log(\"           self.requestedMaxReferencesPerNode = \", this._requestedMaxReferencesPerNode);\r\n                console.log(\"           continuationPoint \", r.continuationPoint);\r\n            }\r\n        }\r\n        callback(null, response.results, response.diagnosticInfos);\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * @method readVariableValue\r\n * @async\r\n * @example:\r\n *\r\n *     session.readVariableValue(\"ns=2;s=Furnace_1.Temperature\",function(err,dataValues,diagnostics) {} );\r\n *\r\n * @param nodes  {ReadValueId[]} - the read value id\r\n * @param {Function} callback -   the callback function\r\n * @param callback.err {object|null} the error if write has failed or null if OK\r\n * @param callback.results {DataValue[]} - an array of dataValue each read\r\n * @param callback.diagnosticInfos {DiagnosticInfo[]} - the diagnostic info.\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n * - read a single node :\r\n *\r\n *   session.readVariableValue(\"ns=0;i=2257\",function(err,dataValue) {\r\n *      if (!err) {\r\n *         console.log(dataValue.toString());\r\n *      }\r\n *   });\r\n *\r\n * - read a array of nodes\r\n *   session.readVariableValue([\"ns=0;i=2257\",\"ns=0;i=2258\"],function(err,dataValues) {\r\n *      if (!err) {\r\n *         console.log(dataValues[0].toString());\r\n *         console.log(dataValues[1].toString());\r\n *      }\r\n *   });\r\n *\r\n *\r\n*/\r\nreadVariableValue(nodes : string | string[] | NodeId | NodeId[] |read_service.ReadValueId | read_service.ReadValueId[], \r\n                    callback : (err:Error,results? : DataValue[], diagInf? : DiagnosticInfo[]) => void ) {\r\n    \r\n        assert('function' === typeof callback);\r\n\r\n\r\n    var isArray = Array.isArray(nodes);\r\n    if (!isArray) {\r\n        nodes = <string[]|read_service.ReadValueId[]>[nodes];\r\n    }\r\n\r\n    var nodesToRead = [];\r\n\r\n    function coerceReadValueId(node) {\r\n\r\n        if (typeof node === \"string\" || node instanceof NodeId) {\r\n            return new read_service.ReadValueId({\r\n                    nodeId: resolveNodeId(node),\r\n                    attributeId: read_service.AttributeIds.Value,\r\n                    indexRange: null,\r\n                    dataEncoding: new QualifiedName( {namespaceIndex: 0, name: null})\r\n            });\r\n\r\n        } else {\r\n            assert(node instanceof Object);\r\n            return new read_service.ReadValueId(node);\r\n        }\r\n    }\r\n    (<any[]>nodes).forEach(function (node) {\r\n        nodesToRead.push(coerceReadValueId(node));\r\n    });\r\n\r\n    var request = new read_service.ReadRequest({\r\n        nodesToRead: nodesToRead,\r\n        timestampsToReturn: read_service.TimestampsToReturn.Neither\r\n    });\r\n\r\n    assert((<any[]>nodes).length === request.nodesToRead.length);\r\n\r\n    this.performMessageTransaction(request, (err, response) => {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err, response);\r\n        }\r\n        if (response.responseHeader.serviceResult !== StatusCodes.Good) {\r\n            return callback(new Error(response.responseHeader.serviceResult.toString()));\r\n        }\r\n        assert(response instanceof read_service.ReadResponse);\r\n        assert((<any[]>nodes).length === response.results.length);\r\n\r\n        response.results = response.results || [];\r\n        response.diagnosticInfos = response.diagnosticInfos || [];\r\n        var results = isArray ? response.results : response.results[0];\r\n        var diags   = isArray ? response.diagnosticInfos : response.diagnosticInfos[0];\r\n\r\n        callback(null, results, diags);\r\n\r\n    });\r\n\r\n};\r\n\r\n/**\r\n * @method readHistoryValue\r\n * @async\r\n * @example:\r\n *\r\n *     session.readHistoryValue(\"ns=5;s=Simulation Examples.Functions.Sine1\",\"2015-06-10T09:00:00.000Z\",\"2015-06-10T09:01:00.000Z\",function(err,dataValues,diagnostics) {} );\r\n *\r\n * @param nodes  {ReadValueId[]} - the read value id\r\n * @param start - the starttime in UTC format\r\n * @param end - the endtime in UTC format\r\n * @param {Function} callback -   the callback function\r\n * @param callback.err {object|null} the error if write has failed or null if OK\r\n * @param callback.results {DataValue[]} - an array of dataValue each read\r\n * @param callback.diagnosticInfos {DiagnosticInfo[]} - the diagnostic infos.\r\n */\r\nreadHistoryValue(nodes, start, end, callback) {\r\n    assert('function' === typeof callback);\r\n    if (!Array.isArray(nodes)) {\r\n        nodes = [nodes];\r\n    }\r\n\r\n    var nodesToRead = [];\r\n    var historyReadDetails = [];\r\n    nodes.forEach(function (node) {\r\n        nodesToRead.push({\r\n            nodeId: resolveNodeId(node),\r\n            indexRange: null,\r\n            dataEncoding: {namespaceIndex: 0, name: null},\r\n            continuationPoint: null\r\n        });\r\n    });\r\n\r\n    var ReadRawModifiedDetails = new historizing_service.ReadRawModifiedDetails({\r\n        isReadModified: false,\r\n        startTime: start,\r\n        endTime: end,\r\n        numValuesPerNode: 0,\r\n        returnBounds: true\r\n    });\r\n\r\n    var request = new historizing_service.HistoryReadRequest({\r\n        nodesToRead: nodesToRead,\r\n        historyReadDetails: ReadRawModifiedDetails,\r\n        timestampsToReturn: read_service.TimestampsToReturn.Both,\r\n        releaseContinuationPoints: false\r\n    });\r\n\r\n    assert(nodes.length === request.nodesToRead.length);\r\n    this.performMessageTransaction(request, (err, response) => {\r\n\r\n        if (err) {\r\n            return callback(err, response);\r\n        }\r\n\r\n        if (response.responseHeader.serviceResult !== StatusCodes.Good) {\r\n            return callback(new Error(response.responseHeader.serviceResult.toString()));\r\n        }\r\n\r\n        assert(response instanceof historizing_service.HistoryReadResponse);\r\n        assert(nodes.length === response.results.length);\r\n\r\n        callback(null, response.results, response.diagnosticInfos);\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * @async\r\n * @method write\r\n * @param nodesToWrite {Array.<WriteValue>}  - the array of value to write. One or more elements.\r\n *\r\n * @param {Function} callback -   the callback function\r\n * @param callback.err {object|null} the error if write has failed or null if OK\r\n * @param callback.statusCodes {StatusCode[]} - an array of status code of each write\r\n * @param callback.diagnosticInfos {DiagnosticInfo[]} - the diagnostic infos.\r\n */\r\nwrite(nodesToWrite, callback) {\r\n\r\n    assert('function' === typeof callback);\r\n    assert(Array.isArray(nodesToWrite));\r\n\r\n    var request = new write_service.WriteRequest({nodesToWrite: nodesToWrite});\r\n\r\n    this.performMessageTransaction(request, (err, response) => {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err, response);\r\n        }\r\n        if (response.responseHeader.serviceResult !== StatusCodes.Good) {\r\n            return callback(new Error(response.responseHeader.serviceResult.toString()));\r\n        }\r\n        assert(response instanceof write_service.WriteResponse);\r\n        assert(nodesToWrite.length === response.results.length);\r\n        callback(null, response.results, response.diagnosticInfos);\r\n\r\n    });\r\n};\r\n\r\n\r\n/**\r\n *\r\n * @async\r\n * @method writeSingleNode\r\n * @param nodeId  {NodeId}  - the node id of the node to write\r\n * @param value   {Variant} - the value to write\r\n * @param callback   {Function}\r\n * @param callback.err {object|null} the error if write has failed or null if OK\r\n * @param callback.statusCode {StatusCode} - the status code of the write\r\n * @param callback.diagnosticInfo {DiagnosticInfo} the diagnostic info.\r\n */\r\nwriteSingleNode(nodeId : NodeId, value : Variant, callback : Function) {\r\n\r\n    assert('function' === typeof callback);\r\n\r\n    var nodesToWrite = [];\r\n\r\n    nodesToWrite.push({\r\n        nodeId: resolveNodeId(nodeId),\r\n        attributeId: read_service.AttributeIds.Value,\r\n        indexRange: null,\r\n        value: new DataValue({value: value})\r\n    });\r\n    this.write(nodesToWrite, function (err, statusCodes, diagnosticInfos) {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n\r\n        assert(statusCodes.length === 1);\r\n        var diagnosticInfo = diagnosticInfos ? diagnosticInfos[0] : null;\r\n        callback(null, statusCodes[0], diagnosticInfo);\r\n\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * @method readAllAttributes\r\n *\r\n * @example:\r\n *\r\n *    ``` javascript\r\n *    session.readAllAttributes(\"ns=2;s=Furnace_1.Temperature\",function(err,nodesToRead,dataValues,diagnostics) {} );\r\n *    ```\r\n *\r\n * @async\r\n * @param nodes  {NodeId[]} - an array of nodeId to read\r\n * @param callback              {Function} - the callback function\r\n * @param callback.err          {Error|null} - the error or null if the transaction was OK\r\n * @param callback.nodesToRead  {ReadValueId[]}\r\n * @param callback.results      {DataValue[]}\r\n * @param callback.diagnostic  {DiagnosticInfo[]}\r\n *\r\n */\r\nreadAllAttributes(nodes : NodeId[], callback) {\r\n\r\n    assert('function' === typeof callback);\r\n    if (!Array.isArray(nodes)) {\r\n        nodes = [nodes];\r\n    }\r\n\r\n\r\n    var nodesToRead = [];\r\n\r\n    nodes.forEach(function (node) {\r\n        Object.keys(read_service.AttributeIds).forEach(function (key) {\r\n            var attributeId = read_service.AttributeIds[key];\r\n            nodesToRead.push({\r\n                nodeId: resolveNodeId(node),\r\n                attributeId: attributeId,\r\n                indexRange: null,\r\n                dataEncoding: {namespaceIndex: 0, name: null}\r\n            });\r\n        });\r\n    });\r\n\r\n    this.read(nodesToRead, function (err, nodesToRead, result, diagnosticInfos) {\r\n        callback(err, nodesToRead, result, diagnosticInfos);\r\n    });\r\n\r\n\r\n};\r\n\r\n/**\r\n * @method read\r\n *\r\n * @example:\r\n *\r\n *    ``` javascript\r\n *    var nodesToRead = [\r\n *        {\r\n *             nodeId:      \"ns=2;s=Furnace_1.Temperature\",\r\n *             attributeId: AttributeIds.BrowseName\r\n *        }\r\n *    ];\r\n *    session.read(nodesToRead,function(err,nodesToRead,results,diagnosticInfos) {\r\n *        if (!err) {\r\n *        }\r\n *    });\r\n *    ```\r\n *\r\n * @async\r\n * @param nodesToRead               {[]} - an array of nodeId to read\r\n * @param nodesToRead.nodeId       {NodeId|string}\r\n * @param nodesToRead.attributeId  {AttributeId[]}\r\n * @param [maxAge]                 {Number}\r\n * @param callback                 {Function}      - the callback function\r\n * @param callback.err             {Error|null}    - the error or null if the transaction was OK\r\n * @param callback.nodesToRead     {ReadValueId[]}\r\n * @param callback.results         {DataValue[]}\r\n * @param callback.diagnosticInfos {DiagnosticInfo[]}\r\n *\r\n */\r\npublic read(nodesToRead, maxAge?, callback?) {\r\n\r\n    if (!callback) {\r\n        callback = maxAge;\r\n        maxAge = 0;\r\n    }\r\n\r\n    assert(Array.isArray(nodesToRead));\r\n    assert('function' === typeof callback);\r\n\r\n    // coerce nodeIds\r\n    nodesToRead.forEach(function (node) {\r\n        node.nodeId = resolveNodeId(node.nodeId);\r\n    });\r\n\r\n    var request = new read_service.ReadRequest({\r\n        nodesToRead: nodesToRead,\r\n        maxAge: maxAge,\r\n        timestampsToReturn: read_service.TimestampsToReturn.Both\r\n    });\r\n\r\n    this.performMessageTransaction(request, (err, response) => {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err, response);\r\n        }\r\n        assert(response instanceof read_service.ReadResponse);\r\n        callback(null, nodesToRead, response.results, response.diagnosticInfos);\r\n\r\n    });\r\n};\r\n\r\npublic emitCloseEvent(statusCode?:any) {\r\n\r\n\r\n    \r\n    if (!this._closeEventHasBeenEmmitted) {\r\n        debugLog(\"ClientSession#emitCloseEvent\");\r\n        this._closeEventHasBeenEmmitted = true;\r\n        this.emit(\"session_closed\",statusCode);\r\n    }\r\n};\r\n\r\nprotected _defaultRequest(SomeRequest, SomeResponse, options, callback) {\r\n\r\n    assert('function' === typeof callback);\r\n\r\n    var request = new SomeRequest(options);\r\n\r\n    /* istanbul ignore next */\r\n    if (doDebug) {\r\n        request.trace = new Error().stack;\r\n    }\r\n\r\n    this.performMessageTransaction(request, (err, response) => {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            // let intercept interesting error message\r\n            if (err.message.match(/BadSessionClosed/)) {\r\n                // the session has been closed by Server\r\n                // probably due to timeout issue\r\n                // let's print some statistics\r\n                var now = new Date();\r\n                debugLog( \" server send BadSessionClosed !\");\r\n                debugLog( \" timeout.................. \" + this._timeout);\r\n                debugLog( \" lastRequestSentTime...... \" + new Date(this.lastRequestSentTime).toISOString() + (<any>now - this.lastRequestSentTime));\r\n                debugLog( \" lastResponseReceivedTime. \" + new Date(this.lastResponseReceivedTime).toISOString() + (<any>now - this.lastResponseReceivedTime));\r\n\r\n                this._terminatePublishEngine();\r\n                /**\r\n                 * @event session_closed\r\n                 * send when the session has been closed by the server ( proabably due to inactivity and timeout)\r\n                 */\r\n                this.emitCloseEvent(StatusCodes.BadSessionClosed);\r\n\r\n\r\n            }\r\n            return callback(err, response);\r\n        }\r\n        assert(response instanceof SomeResponse);\r\n        callback(null, response);\r\n\r\n    });\r\n};\r\n\r\n/**\r\n * @method createSubscription\r\n * @async\r\n *\r\n * @example:\r\n *\r\n *    ``` javascript\r\n *    session.createSubscription(request,function(err,response) {} );\r\n *    ```\r\n *\r\n * @param options {CreateSubscriptionRequest}\r\n * @param options.requestedPublishingInterval {Duration}\r\n * @param options.requestedLifetimeCount {Counter}\r\n * @param options.requestedMaxKeepAliveCount {Counter}\r\n * @param options.maxNotificationsPerPublish {Counter}\r\n * @param options.publishingEnabled {Boolean}\r\n * @param options.priority {Byte}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n * @param callback.response {CreateSubscriptionResponse} - the response\r\n */\r\ncreateSubscription(options : ICreateSubscriptionRequest, callback : (err : Error|null,response : CreateSubscriptionResponse) =>void ) {\r\n\r\n    assert('function' === typeof callback);\r\n\r\n    var request = new subscription_service.CreateSubscriptionRequest(options);\r\n\r\n    this.performMessageTransaction(request, (err, response) => {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err, response);\r\n        }\r\n        assert(response instanceof subscription_service.CreateSubscriptionResponse);\r\n        callback(null, response);\r\n    });\r\n};\r\n\r\n/**\r\n * @method deleteSubscriptions\r\n * @async\r\n * @example:\r\n *\r\n *     session.deleteSubscriptions(request,function(err,response) {} );\r\n *\r\n * @param options {DeleteSubscriptionsRequest}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n * @param callback.response {DeleteSubscriptionsResponse} - the response\r\n */\r\ndeleteSubscriptions(options : IDeleteSubscriptionsRequest, callback) {\r\n    this._defaultRequest(\r\n        subscription_service.DeleteSubscriptionsRequest,\r\n        subscription_service.DeleteSubscriptionsResponse,\r\n        options, callback);\r\n};\r\n\r\n/**\r\n * @method transferSubscriptions\r\n *\r\n * @async\r\n * @param options {TransferSubscriptionsRequest}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n * @param callback.response {TransferSubscriptionsResponse} - the response\r\n */\r\ntransferSubscriptions(options : TransferSubscriptionsRequest,callback : FunctionConstructor) {\r\n    this._defaultRequest(\r\n        subscription_service.TransferSubscriptionsRequest,\r\n        subscription_service.TransferSubscriptionsResponse,\r\n        options, callback);\r\n};\r\n\r\n/**\r\n *\r\n * @method createMonitoredItems\r\n * @async\r\n * @param options  {CreateMonitoredItemsRequest}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n * @param callback.response {CreateMonitoredItemsResponse} - the response\r\n */\r\npublic createMonitoredItems(options : ICreateMonitoredItemsRequest, callback : (err : Error|null,response : CreateMonitoredItemsResponse)=>void) {\r\n    this._defaultRequest(\r\n        subscription_service.CreateMonitoredItemsRequest,\r\n        subscription_service.CreateMonitoredItemsResponse,\r\n        options, callback);\r\n};\r\n\r\n/**\r\n *\r\n * @method modifyMonitoredItems\r\n * @async\r\n * @param options {ModifyMonitoredItemsRequest}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n * @param callback.response {ModifyMonitoredItemsResponse} - the response\r\n */\r\npublic modifyMonitoredItems(options : ModifyMonitoredItemsRequest, callback : (err : Error|null,response : ModifyMonitoredItemsResponse)=>void ) {\r\n    this._defaultRequest(\r\n        subscription_service.ModifyMonitoredItemsRequest,\r\n        subscription_service.ModifyMonitoredItemsResponse,\r\n        options, callback);\r\n};\r\n\r\n/**\r\n *\r\n * @method modifySubscription\r\n * @async\r\n * @param options {ModifySubscriptionRequest}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n * @param callback.response {ModifySubscriptionResponse} - the response\r\n */\r\npublic modifySubscription(options, callback) {\r\n    this._defaultRequest(\r\n        subscription_service.ModifySubscriptionRequest,\r\n        subscription_service.ModifySubscriptionResponse,\r\n        options, callback);\r\n};\r\n\r\npublic setMonitoringMode(options, callback) {\r\n    this._defaultRequest(\r\n        subscription_service.SetMonitoringModeRequest,\r\n        subscription_service.SetMonitoringModeResponse,\r\n        options, callback);\r\n};\r\n\r\n/**\r\n *\r\n * @method publish\r\n * @async\r\n * @param options  {PublishRequest}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n * @param callback.response {PublishResponse} - the response\r\n */\r\npublic publish(options : PublishRequest, callback : (err : Error|null, response : PublishResponse) => void) {\r\n    this._defaultRequest(\r\n        subscription_service.PublishRequest,\r\n        subscription_service.PublishResponse,\r\n        options, callback);\r\n};\r\n\r\n/**\r\n *\r\n * @method republish\r\n * @async\r\n * @param options  {RepublishRequest}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n * @param callback.response {RepublishResponse} - the response\r\n */\r\npublic republish(options : RepublishRequest, callback : (err : Error|null,response : RepublishResponse )=>void ) {\r\n    this._defaultRequest(\r\n        subscription_service.RepublishRequest,\r\n        subscription_service.RepublishResponse,\r\n        options, callback);\r\n};\r\n\r\n/**\r\n *\r\n * @method deleteMonitoredItems\r\n * @async\r\n * @param options  {DeleteMonitoredItemsRequest}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n */\r\npublic deleteMonitoredItems(options : IDeleteMonitoredItemsRequest, callback : (err : Error|null)=>void ) {\r\n    this._defaultRequest(\r\n        subscription_service.DeleteMonitoredItemsRequest,\r\n        subscription_service.DeleteMonitoredItemsResponse,\r\n        options, callback);\r\n};\r\n\r\n/**\r\n *\r\n * @method setPublishingMode\r\n * @async\r\n * @param publishingEnabled  {Boolean}\r\n * @param subscriptionIds {Array<Integer>}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n */\r\npublic setPublishingMode(publishingEnabled : boolean, subscriptionIds : number[]|number, callback) {\r\n    assert('function' === typeof callback);\r\n    assert(publishingEnabled === true || publishingEnabled === false);\r\n    if (!Array.isArray(subscriptionIds)) {\r\n        assert(typeof subscriptionIds === 'number');\r\n        subscriptionIds = [subscriptionIds];\r\n    }\r\n\r\n    var request = new subscription_service.SetPublishingModeRequest({\r\n        publishingEnabled: publishingEnabled,\r\n        subscriptionIds: subscriptionIds\r\n    });\r\n\r\n    this.performMessageTransaction(request, function (err, response) {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err, null);\r\n        }\r\n\r\n        callback(err, response.results);\r\n\r\n    });\r\n};\r\n\r\n/**\r\n *\r\n * @method translateBrowsePath\r\n * @async\r\n * @param browsePath {BrowsePath|Array<BrowsePath>}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}\r\n * @param callback.response {BrowsePathResult|Array<BrowsePathResult>}\r\n *\r\n *\r\n *\r\n */\r\npublic translateBrowsePath(browsePath : translate_service.BrowsePath | translate_service.BrowsePath[], callback : (err :Error|null,results : translate_service.BrowsePathResult | translate_service.BrowsePathResult[]) => void) {\r\n    assert('function' === typeof callback);\r\n\r\n    var has_single_element = !Array.isArray(browsePath);\r\n    browsePath = has_single_element ? [<translate_service.BrowsePath>browsePath] : <translate_service.BrowsePath[]>browsePath;\r\n\r\n    var request = new translate_service.TranslateBrowsePathsToNodeIdsRequest({\r\n        browsePaths: browsePath\r\n    });\r\n\r\n    this.performMessageTransaction(request, (err, response) => {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err, response);\r\n        }\r\n        assert(response instanceof translate_service.TranslateBrowsePathsToNodeIdsResponse);\r\n        callback(null, has_single_element ? response.results[0] : response.results);\r\n\r\n    });\r\n\r\n};\r\n\r\npublic isChannelValid() : boolean {\r\n    assert(this._client);\r\n    return this._client.secureChannel && this._client.secureChannel.isOpened();\r\n};\r\n\r\npublic performMessageTransaction(request, callback) {\r\n\r\n    assert('function' === typeof callback);\r\n    assert(this._client);\r\n\r\n    if (!this.isChannelValid()) {\r\n        // we need to queue this transaction,as a secure token may be being reprocessed\r\n        console.log(\"!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!! \");\r\n        return callback(new Error(\"Invalid Channel \"));\r\n    }\r\n    request.requestHeader.authenticationToken = this.authenticationToken;\r\n\r\n    this.lastRequestSentTime = Date.now();\r\n\r\n    this._client.performMessageTransaction(request, (err, response) => {\r\n\r\n        this.lastResponseReceivedTime = Date.now();\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err, response);\r\n        }\r\n\r\n        if (response.responseHeader.serviceResult !== StatusCodes.Good) {\r\n            err = new Error(\" ServiceResult is \" + response.responseHeader.serviceResult.toString());\r\n        }\r\n        callback(err, response);\r\n    });\r\n};\r\n\r\nprotected _terminatePublishEngine = function () {\r\n    if (this._publishEngine) {\r\n        this._publishEngine.terminate();\r\n        this._publishEngine = null;\r\n    }\r\n};\r\n\r\n/**\r\n *\r\n * @method close\r\n * @async\r\n * @param [deleteSubscription=true] {Boolean}\r\n * @param callback {Function}\r\n */\r\npublic close(deleteSubscription : boolean = true,callback) {\r\n\r\n    if (arguments.length === 1) {\r\n        callback = deleteSubscription;\r\n        deleteSubscription = true;\r\n    }\r\n    assert('function' === typeof callback);\r\n    //assert(_.isBoolean(deleteSubscription));\r\n    assert(this._client);\r\n\r\n    this._terminatePublishEngine();\r\n    this._client.closeSession(this,deleteSubscription,callback);\r\n\r\n};\r\n\r\n/**\r\n *\r\n * @returns {Boolean}\r\n */\r\npublic hasBeenClosed() : boolean {\r\n    return utils.isNullOrUndefined(this._client) || this._closed;\r\n};\r\n\r\n/**\r\n *\r\n * @method call\r\n *\r\n * @param methodsToCall {CallMethodRequest[]} the call method request array\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}\r\n * @param callback.response {CallMethodResult[]}\r\n *\r\n *\r\n * @example :\r\n *\r\n * var methodsToCall = [ {\r\n *     objectId: \"ns=2;i=12\",\r\n *     methodId: \"ns=2;i=13\",\r\n *     inputArguments: [\r\n *         new Variant({...}),\r\n *         new Variant({...}),\r\n *     ]\r\n * }];\r\n * session.call(methodsToCall,function(err,response) {\r\n *    if (!err) {\r\n *         var rep = response[0];\r\n *         console.log(\" statusCode = \",rep.statusCode);\r\n *         console.log(\" inputArgumentResults[0] = \",rep.inputArgumentResults[0].toString());\r\n *         console.log(\" inputArgumentResults[1] = \",rep.inputArgumentResults[1].toString());\r\n *         console.log(\" outputArgument[0]       = \",rep.outputArgument[0].toString()); // array of variant\r\n *    }\r\n * });\r\n */\r\npublic call(methodsToCall : CallMethodRequest[], callback : (err : Error|null, response?: CallMethodResult[], diagnosticInfo? : any) => void ) {\r\n\r\n    assert(Array.isArray(methodsToCall));\r\n\r\n    // Note : The client has no explicit address space and therefore will struggle to\r\n    //        access the method arguments signature.\r\n    //        There are two methods that can be considered:\r\n    //           - get the object definition by querying the server\r\n    //           - load a fake address space to have some thing to query on our end\r\n    // var request = self._client.factory.constructObjectId(\"CallRequest\",{ methodsToCall: methodsToCall});\r\n    var request = new call_service.CallRequest({methodsToCall: methodsToCall});\r\n\r\n    this.performMessageTransaction(request, (err, response) => {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n\r\n        assert(response instanceof call_service.CallResponse);\r\n        callback(null, response.results);\r\n\r\n    });\r\n\r\n};\r\n\r\n\r\n\r\n/**\r\n * @method getMonitoredItems\r\n * @param subscriptionId {UInt32} the subscription Id to return\r\n * @param callback {Function}\r\n * @param callback.err {Error}\r\n * @param callback.monitoredItems the monitored Items\r\n * @param callback.monitoredItems the monitored Items\r\n */\r\npublic getMonitoredItems(subscriptionId : UInt32, callback) {\r\n\r\n    // <UAObject NodeId=\"i=2253\"  BrowseName=\"Server\">\r\n    // <UAMethod NodeId=\"i=11492\" BrowseName=\"GetMonitoredItems\" ParentNodeId=\"i=2253\" MethodDeclarationId=\"i=11489\">\r\n    // <UAMethod NodeId=\"i=11489\" BrowseName=\"GetMonitoredItems\" ParentNodeId=\"i=2004\">\r\n    var self = this;\r\n    var methodsToCall =\r\n        new CallMethodRequest({\r\n            objectId: coerceNodeId(\"ns=0;i=2253\"),  // ObjectId.Server\r\n            methodId: coerceNodeId(\"ns=0;i=11492\"), // MethodIds.Server_GetMonitoredItems;\r\n            inputArguments: [\r\n                // BaseDataType\r\n                new Variant({dataType: DataType.UInt32, value: subscriptionId})\r\n            ]\r\n        });\r\n\r\n    self.call([methodsToCall], (err, result, diagnosticInfo) => {\r\n\r\n            /* istanbul ignore next */\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n\r\n            var res = result[0];\r\n            diagnosticInfo = diagnosticInfo ? diagnosticInfo[0] : null;\r\n            //xx console.log(\" xxxxxxxxxxxxxxxxxx RRR err\",err);\r\n            //xx console.log(\" xxxxxxxxxxxxxxxxxx RRR result \".red.bold,result.toString());\r\n            //xx console.log(\" xxxxxxxxxxxxxxxxxx RRR err\",diagnosticInfo);\r\n            if (res.statusCode !== StatusCodes.Good) {\r\n\r\n                callback(new Error(res.statusCode.toString()), result, diagnosticInfo);\r\n\r\n            } else {\r\n\r\n                assert(res.outputArguments.length === 2);\r\n                var data = {\r\n                    serverHandles: res.outputArguments[0].value, //\r\n                    clientHandles: res.outputArguments[1].value\r\n                };\r\n\r\n                // Note some server might return null array\r\n                // let make sure we have Uint32Array and not a null pointer\r\n                data.serverHandles = data.serverHandles || ClientSession.emptyUint32Array;\r\n                data.clientHandles = data.clientHandles || ClientSession.emptyUint32Array;\r\n\r\n                assert(data.serverHandles instanceof Uint32Array);\r\n                assert(data.clientHandles instanceof Uint32Array);\r\n                callback(null, data, diagnosticInfo);\r\n            }\r\n        }\r\n    );\r\n};\r\n\r\n\r\n/**\r\n * extract the argument definition of a method\r\n * @method getArgumentDefinition\r\n * @param methodId {NodeId}\r\n * @param callback  {Function}\r\n * @param {Error|null} callback.err\r\n * @param {Argument<>} callback.inputArguments\r\n * @param {Argument<>} callback.outputArguments\r\n */\r\npublic getArgumentDefinition(methodId : NodeId, callback : (err : Error|null,inputArguments?:Argument[],outputarguments?:Argument[]) => void ) {\r\n\r\n    assert('function' === typeof callback);\r\n    assert(methodId instanceof NodeId);\r\n\r\n    var browseDescription = [{\r\n        nodeId: methodId,\r\n        referenceTypeId: resolveNodeId(\"HasProperty\"),\r\n        browseDirection: BrowseDirection.Forward,\r\n        nodeClassMask: NodeClass.Variable,\r\n        includeSubtypes: true,\r\n        resultMask: browse_service.BrowseResultMask.BrowseName\r\n    }];\r\n\r\n    //Xx console.log(\"xxxx browseDescription\", util.inspect(browseDescription, {colors: true, depth: 10}));\r\n    this.browse(browseDescription, (err, results) => {\r\n\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        results[0].references = results[0].references || [];\r\n\r\n        //xx console.log(\"xxxx results\", util.inspect(results, {colors: true, depth: 10}));\r\n        var inputArgumentRef = results[0].references.filter(function (r) {\r\n            return r.browseName.name === \"InputArguments\";\r\n        });\r\n\r\n        // note : InputArguments property is optional thus may be missing\r\n        inputArgumentRef = (inputArgumentRef.length === 1)  ? <any>inputArgumentRef[0] : null;\r\n\r\n        var outputArgumentRef = results[0].references.filter(function (r) {\r\n            return r.browseName.name === \"OutputArguments\";\r\n        });\r\n\r\n        // note : OutputArguments property is optional thus may be missing\r\n        outputArgumentRef = (outputArgumentRef.length === 1)  ? <any>outputArgumentRef[0] : null;\r\n\r\n        //xx console.log(\"xxxx argument\", util.inspect(argument, {colors: true, depth: 10}));\r\n        //xx console.log(\"xxxx argument nodeId\", argument.nodeId.toString());\r\n\r\n        var inputArguments = [], outputArguments = [];\r\n\r\n        var nodesToRead = [];\r\n        var actions = [];\r\n\r\n        if(inputArgumentRef) {\r\n            nodesToRead.push({\r\n                nodeId: (<ReferenceDescription><any>inputArgumentRef).nodeId,\r\n                attributeId: read_service.AttributeIds.Value\r\n            });\r\n            actions.push(function(result) { inputArguments = result.value.value;});\r\n        }\r\n        if(outputArgumentRef) {\r\n            nodesToRead.push({\r\n                nodeId: (<ReferenceDescription><any>outputArgumentRef).nodeId,\r\n                    attributeId: read_service.AttributeIds.Value\r\n            });\r\n            actions.push(function(result) { outputArguments = result.value.value;});\r\n        }\r\n\r\n        if (nodesToRead.length === 0 ) {\r\n            return callback(null, inputArguments, outputArguments);\r\n        }\r\n        // now read the variable\r\n        this.read(nodesToRead,(err, unused_nodesToRead, results) => {\r\n\r\n            /* istanbul ignore next */\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n\r\n            results.forEach(function(result,index){ actions[index].call(null,result); });\r\n\r\n            //xx console.log(\"xxxx result\", util.inspect(result, {colors: true, depth: 10}));\r\n            callback(null, inputArguments, outputArguments);\r\n        });\r\n\r\n\r\n    });\r\n};\r\n\r\n/**\r\n * @method queryFirst\r\n * @param queryFirstRequest {queryFirstRequest}\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}\r\n * @param callback.response {queryFirstResponse}\r\n *\r\n */\r\npublic queryFirst(queryFirstRequest,callback) {\r\n    assert('function' === typeof callback);\r\n\r\n    var request = new query_service.QueryFirstRequest(queryFirstRequest);\r\n\r\n    this.performMessageTransaction(request, (err, response) => {\r\n        /* istanbul ignore next */\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        assert(response instanceof query_service.QueryFirstResponse);\r\n        callback(null, response.results);\r\n    });\r\n};\r\n\r\npublic startKeepAliveManager() {\r\n    assert(!this._keepAliveManager,\"keepAliveManger already started\");\r\n    this._keepAliveManager = new ClientSessionKeepAliveManager(this);\r\n\r\n\r\n    this._keepAliveManager.on(\"failure\",() => {\r\n        this.stopKeepAliveManager();\r\n        /**\r\n         * raised when a keep-alive request has failed on the session, may be the session has timeout\r\n         * unexpectidaly on the server side, may be the connection is broken.\r\n         * @event keepalive_failure\r\n         */\r\n        this.emit(\"keepalive_failure\");\r\n    });\r\n    this._keepAliveManager.on(\"keepalive\",function(state) {\r\n        /**\r\n         * @event keepalive\r\n         */\r\n        this.emit(\"keepalive\",state);\r\n    });\r\n    this._keepAliveManager.start();\r\n};\r\n\r\npublic stopKeepAliveManager() {\r\n    if (this._keepAliveManager) {\r\n        this._keepAliveManager.stop();\r\n        this._keepAliveManager = null;\r\n    }\r\n};\r\n\r\npublic dispose() {\r\n    assert(this._closeEventHasBeenEmmitted);\r\n    this._terminatePublishEngine();\r\n    this.stopKeepAliveManager();\r\n    this.removeAllListeners();\r\n};\r\n\r\npublic toString() : void {\r\n\r\n    var now = Date.now();\r\n\r\n    console.log( \" name..................... \",this.name);\r\n    console.log( \" sessionId................ \",this.sessionId);\r\n    console.log( \" authenticationToken...... \",this.authenticationToken);\r\n    console.log( \" timeout.................. \",this._timeout);\r\n    console.log( \" serverNonce.............. \",this.serverNonce.toString(\"hex\"));\r\n    console.log( \" serverCertificate........ \",this.serverCertificate.toString(\"base64\"));\r\n    console.log( \" serverSignature.......... \",this.serverSignature);\r\n    console.log( \" lastRequestSentTime...... \",new Date(this.lastRequestSentTime).toISOString(), now - this.lastRequestSentTime);\r\n    console.log( \" lastResponseReceivedTime. \",new Date(this.lastResponseReceivedTime).toISOString(), now - this.lastResponseReceivedTime);\r\n};\r\n\r\nprotected __findBasicDataType(session,dataTypeId,callback) {\r\n\r\n    assert(dataTypeId instanceof NodeId);\r\n\r\n    if (dataTypeId.value <=25) {\r\n        // we have a well-known DataType\r\n        var dataType = DataType[dataTypeId.value];\r\n        callback(null,dataType);\r\n    } else {\r\n\r\n        // let's browse for the SuperType of this object\r\n        var nodeToBrowse = new browse_service.BrowseDescription({\r\n            referenceTypeId: makeNodeId(ReferenceTypeIds.HasSubtype),\r\n            includeSubtypes: false,\r\n            browseDirection: BrowseDirection.Inverse,\r\n            nodeId: dataTypeId,\r\n            resultMask: browse_service.BrowseResultMask.ReferenceTypeId\r\n        });\r\n\r\n        session.browse([nodeToBrowse],function(err,results) {\r\n            var result = results[0];\r\n            if (err) return callback(err);\r\n            var baseDataType = result.references[0].nodeId;\r\n            return this.__findBasicDataType(session,baseDataType,callback);\r\n        });\r\n    }\r\n}\r\n/**\r\n * retrieve the built-in DataType of a Variable, from its DataType attribute\r\n * useful to determine which DataType to use when constructing a Variant\r\n * @param nodeId {NodeId} the node id of the variable to query\r\n * @param callback {Function} the callback function\r\n * @param callback.err\r\n * @param callback.result {DataType}\r\n * @async\r\n *\r\n *\r\n * @example\r\n *     var session = ...; // ClientSession\r\n *     var nodeId = opcua.VariableIds.Server_ServerStatus_CurrentTime;\r\n *     session.getBuildInDataType(nodeId,function(err,dataType) {\r\n *        assert(dataType === opcua.DataType.DateTime);\r\n *     });\r\n *     // or\r\n *     nodeId = opcua.coerceNodeId(\"ns=411;s=Scalar_Static_ImagePNG\");\r\n *     session.getBuildInDataType(nodeId,function(err,dataType) {\r\n *        assert(dataType === opcua.DataType.ByteString);\r\n *     });\r\n *\r\n */\r\npublic getBuiltInDataType(nodeId,callback : (err : Error|null,result?: DataType)=>void){\r\n\r\n    var dataTypeId = null;\r\n    var dataType;\r\n    var session = this;\r\n    var nodes_to_read = [\r\n        {\r\n            nodeId: nodeId,\r\n            attributeId: AttributeIds.DataType\r\n        }\r\n    ];\r\n    session.read(nodes_to_read, 0, (err,nodes_to_read,dataValues?) => {\r\n        if (err) return callback(err);\r\n        if (dataValues[0].statusCode !== StatusCodes.Good) {\r\n            return callback(new Error(\"cannot read DataType Attribute \"+  dataValues[0].statusCode.toString()));\r\n        }\r\n        dataTypeId = dataValues[0].value.value;\r\n        assert(dataTypeId instanceof NodeId);\r\n        this.__findBasicDataType(session,dataTypeId,callback);\r\n    });\r\n\r\n};\r\n\r\npublic resumePublishEngine() {\r\n  \r\n    if (this._publishEngine.subscriptionCount>0) {\r\n        this._publishEngine.replenish_publish_request_queue();\r\n    }\r\n};\r\n}\r\n\r\n\r\n","export enum AttributeIds {\r\n    NodeId = 1,\r\n    NodeClass = 2,\r\n    BrowseName = 3,\r\n    DisplayName = 4,\r\n    Description = 5,\r\n    WriteMask = 6,\r\n    UserWriteMask = 7,\r\n    IsAbstract = 8,\r\n    Symmetric = 9,\r\n    InverseName = 10,\r\n    ContainsNoLoops = 11,\r\n    EventNotifier = 12,\r\n    Value = 13,\r\n    DataType = 14,\r\n    ValueRank = 15,\r\n    ArrayDimensions = 16,\r\n    AccessLevel = 17,\r\n    UserAccessLevel = 18,\r\n    MinimumSamplingInterval = 19,\r\n    Historizing = 20,\r\n    Executable = 21,\r\n    UserExecutable = 22,\r\n    INVALID = 999\r\n}","\"use strict\";\r\nimport {assert} from '../assert';\r\nimport {DataStream} from './DataStream';\r\n/**\r\n * @method encodeArray\r\n * @param arr {Array} the array to encode.\r\n * @param stream {DataStream}  the stream.\r\n * @param encode_element_func  {Function}  The  function to encode a single array element.\r\n * @param encode_element_func.element {object}\r\n * @param encode_element_func.stream  {DataStream}  the stream.\r\n */\r\nexport function encodeArray (arr : Array<any>, stream : DataStream, encode_element_func?: (obj : any,stream : DataStream) => void ) : void {\r\n\r\n    if (arr === null) {\r\n        stream.setUint32(0xFFFFFFFF);\r\n        return;\r\n    }\r\n    assert(Array.isArray(arr));\r\n    stream.setUint32(arr.length);\r\n\r\n    if (encode_element_func) {\r\n        for (var i = 0; i < arr.length; ++i) {\r\n            encode_element_func(arr[i], stream);\r\n        }\r\n    } else {\r\n        for (var i = 0; i <arr.length; ++i) {\r\n            arr[i].encode(stream);\r\n        }\r\n    }\r\n};\r\n/**\r\n * @method decodeArray\r\n * @param stream {DataStream}  the stream.\r\n * @param decode_element_func {Function}  The  function to decode a single array element. This function returns the element decoded from the stream\r\n * @param decode_element_func.stream {DataStream}  the stream.\r\n */\r\nexport function decodeArray (stream : DataStream, decode_element_func?: (stream : DataStream) => void ) {\r\n\r\n    \r\n    var length = stream.getInt32();\r\n    if (length === -1) {\r\n        return null;\r\n    }\r\n\r\n    var arr = [];\r\n    for (var i = 0; i < length; i++) {\r\n        arr.push(decode_element_func(stream));\r\n    }\r\n\r\n    return arr;\r\n};\r\n\r\n\r\n\r\nexport function cloneArray (arr : any[]) {\r\n    let out = [];\r\n\r\n    if (arr && arr.length > 0) {\r\n        for (let item  of arr) {\r\n            out.push(item);\r\n        }\r\n    }\r\n\r\n    return out;\r\n}\r\n\r\nexport function cloneComplexArray(arr : any[]) {\r\n    let out = [];\r\n\r\n    if (arr && arr.length > 0) {\r\n        for (let item  of arr) {\r\n            out.push(item.clone());\r\n        }\r\n    }\r\n\r\n    return out;\r\n\r\n}\r\n\r\nexport function concatTypedArrays<T extends Uint16Array | Uint8Array | Uint32Array | Int16Array | Int8Array | Int32Array | Float32Array | Float64Array >(arrays : T[]) : T {\r\n    let len : number = 0;\r\n    for (let ar of arrays) {\r\n        len += ar.length;\r\n    }\r\n\r\n    let buf = new (<any>arrays[0].constructor)(len); //new (<any>T.constructor)(len);\r\n    let offset = 0;  \r\n    for (let ar of arrays) {\r\n        buf.set(ar,offset);\r\n        offset += ar.length;\r\n    }\r\n    return buf;\r\n}\r\n\r\nexport function concatArrayBuffers(arrays : ArrayBuffer[]) : ArrayBuffer {\r\n    if (arrays.length == 1) {\r\n        return arrays[0];\r\n    }\r\n    let len : number = 0;\r\n    for (let ar of arrays) {\r\n        len += ar.byteLength;\r\n    }\r\n\r\n    let buf = new Uint8Array(len);\r\n\r\n    let offset = 0;  \r\n    for (let ar of arrays) {\r\n        buf.set(new Uint8Array(ar),offset);\r\n        offset += ar.byteLength;\r\n    }\r\n    return buf.buffer;\r\n}\r\n","\n\nimport * as ec from '../basic-types';\nimport {QualifiedName} from './QualifiedName';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IReadValueId {\n\t\tnodeId? : ec.NodeId;\n\t\tattributeId? : ec.UInt32;\n\t\tindexRange? : string;\n\t\tdataEncoding? : QualifiedName;\n}\n\n/**\n\n*/\n\nexport class ReadValueId {\n \t\tnodeId : ec.NodeId;\n\t\tattributeId : ec.UInt32;\n\t\tindexRange : string;\n\t\tdataEncoding : QualifiedName;\n\n\tconstructor(\toptions? : IReadValueId) { \n\t\toptions = options || {};\n\t\tthis.nodeId= (options.nodeId) ? options.nodeId:null;\n\t\tthis.attributeId= (options.attributeId) ? options.attributeId:null;\n\t\tthis.indexRange= (options.indexRange) ? options.indexRange:null;\n\t\tthis.dataEncoding= (options.dataEncoding) ? options.dataEncoding:new QualifiedName();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.nodeId,out);\n\t\tec.encodeUInt32(this.attributeId,out);\n\t\tec.encodeString(this.indexRange,out);\n\t\tthis.dataEncoding.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.nodeId = ec.decodeNodeId(inp);\n\t\tthis.attributeId = ec.decodeUInt32(inp);\n\t\tthis.indexRange = ec.decodeString(inp);\n\t\tthis.dataEncoding.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ReadValueId) : ReadValueId { \n\t\tif(!target) {\n\t\t\ttarget = new ReadValueId();\n\t\t}\n\t\ttarget.nodeId = this.nodeId;\n\t\ttarget.attributeId = this.attributeId;\n\t\ttarget.indexRange = this.indexRange;\n\t\tif (this.dataEncoding) { target.dataEncoding = this.dataEncoding.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeReadValueId(\tinp : DataStream) : ReadValueId { \n\t\tlet obj = new ReadValueId();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ReadValueId\",ReadValueId, makeExpandedNodeId(628,0));","\n\nimport * as ec from '../basic-types';\nimport {Variant} from '../variant';\nimport {decodeVariant} from '../variant';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICallMethodRequest {\n\t\tobjectId? : ec.NodeId;\n\t\tmethodId? : ec.NodeId;\n\t\tinputArguments? : Variant[];\n}\n\n/**\n\n*/\n\nexport class CallMethodRequest {\n \t\tobjectId : ec.NodeId;\n\t\tmethodId : ec.NodeId;\n\t\tinputArguments : Variant[];\n\n\tconstructor(\toptions? : ICallMethodRequest) { \n\t\toptions = options || {};\n\t\tthis.objectId= (options.objectId) ? options.objectId:null;\n\t\tthis.methodId= (options.methodId) ? options.methodId:null;\n\t\tthis.inputArguments= (options.inputArguments) ? options.inputArguments:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.objectId,out);\n\t\tec.encodeNodeId(this.methodId,out);\n\t\tec.encodeArray(this.inputArguments,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.objectId = ec.decodeNodeId(inp);\n\t\tthis.methodId = ec.decodeNodeId(inp);\n\t\tthis.inputArguments = ec.decodeArray(inp,decodeVariant);\n\n\t}\n\n\n\tclone(\ttarget? : CallMethodRequest) : CallMethodRequest { \n\t\tif(!target) {\n\t\t\ttarget = new CallMethodRequest();\n\t\t}\n\t\ttarget.objectId = this.objectId;\n\t\ttarget.methodId = this.methodId;\n\t\tif (this.inputArguments) { target.inputArguments = ec.cloneComplexArray(this.inputArguments);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCallMethodRequest(\tinp : DataStream) : CallMethodRequest { \n\t\tlet obj = new CallMethodRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CallMethodRequest\",CallMethodRequest, makeExpandedNodeId(706,0));","\n\nimport * as ec from '../basic-types';\nimport {ApplicationDescription} from './ApplicationDescription';\nimport {MessageSecurityMode, encodeMessageSecurityMode, decodeMessageSecurityMode} from './MessageSecurityMode';\nimport {UserTokenPolicy} from './UserTokenPolicy';\nimport {decodeUserTokenPolicy} from './UserTokenPolicy';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IEndpointDescription {\n\t\tendpointUrl? : string;\n\t\tserver? : ApplicationDescription;\n\t\tserverCertificate? : Uint8Array;\n\t\tsecurityMode? : MessageSecurityMode;\n\t\tsecurityPolicyUri? : string;\n\t\tuserIdentityTokens? : UserTokenPolicy[];\n\t\ttransportProfileUri? : string;\n\t\tsecurityLevel? : ec.Byte;\n}\n\n/**\nThe description of a endpoint that can be used to access a server.\n*/\n\nexport class EndpointDescription {\n \t\tendpointUrl : string;\n\t\tserver : ApplicationDescription;\n\t\tserverCertificate : Uint8Array;\n\t\tsecurityMode : MessageSecurityMode;\n\t\tsecurityPolicyUri : string;\n\t\tuserIdentityTokens : UserTokenPolicy[];\n\t\ttransportProfileUri : string;\n\t\tsecurityLevel : ec.Byte;\n\n\tconstructor(\toptions? : IEndpointDescription) { \n\t\toptions = options || {};\n\t\tthis.endpointUrl= (options.endpointUrl) ? options.endpointUrl:null;\n\t\tthis.server= (options.server) ? options.server:new ApplicationDescription();\n\t\tthis.serverCertificate= (options.serverCertificate) ? options.serverCertificate:null;\n\t\tthis.securityMode= (options.securityMode) ? options.securityMode:null;\n\t\tthis.securityPolicyUri= (options.securityPolicyUri) ? options.securityPolicyUri:null;\n\t\tthis.userIdentityTokens= (options.userIdentityTokens) ? options.userIdentityTokens:[];\n\t\tthis.transportProfileUri= (options.transportProfileUri) ? options.transportProfileUri:null;\n\t\tthis.securityLevel= (options.securityLevel) ? options.securityLevel:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.endpointUrl,out);\n\t\tthis.server.encode(out);\n\t\tec.encodeByteString(this.serverCertificate,out);\n\t\tencodeMessageSecurityMode(this.securityMode,out);\n\t\tec.encodeString(this.securityPolicyUri,out);\n\t\tec.encodeArray(this.userIdentityTokens,out);\n\t\tec.encodeString(this.transportProfileUri,out);\n\t\tec.encodeByte(this.securityLevel,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.endpointUrl = ec.decodeString(inp);\n\t\tthis.server.decode(inp);\n\t\tthis.serverCertificate = ec.decodeByteString(inp);\n\t\tthis.securityMode = decodeMessageSecurityMode(inp);\n\t\tthis.securityPolicyUri = ec.decodeString(inp);\n\t\tthis.userIdentityTokens = ec.decodeArray(inp,decodeUserTokenPolicy);\n\t\tthis.transportProfileUri = ec.decodeString(inp);\n\t\tthis.securityLevel = ec.decodeByte(inp);\n\n\t}\n\n\n\tclone(\ttarget? : EndpointDescription) : EndpointDescription { \n\t\tif(!target) {\n\t\t\ttarget = new EndpointDescription();\n\t\t}\n\t\ttarget.endpointUrl = this.endpointUrl;\n\t\tif (this.server) { target.server = this.server.clone();}\n\t\ttarget.serverCertificate = this.serverCertificate;\n\t\ttarget.securityMode = this.securityMode;\n\t\ttarget.securityPolicyUri = this.securityPolicyUri;\n\t\tif (this.userIdentityTokens) { target.userIdentityTokens = ec.cloneComplexArray(this.userIdentityTokens);}\n\t\ttarget.transportProfileUri = this.transportProfileUri;\n\t\ttarget.securityLevel = this.securityLevel;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeEndpointDescription(\tinp : DataStream) : EndpointDescription { \n\t\tlet obj = new EndpointDescription();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"EndpointDescription\",EndpointDescription, makeExpandedNodeId(314,0));","\n\nimport {ContentFilterElementResult} from './ContentFilterElementResult';\nimport {decodeContentFilterElementResult} from './ContentFilterElementResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IContentFilterResult {\n\t\telementResults? : ContentFilterElementResult[];\n\t\telementDiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class ContentFilterResult {\n \t\telementResults : ContentFilterElementResult[];\n\t\telementDiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IContentFilterResult) { \n\t\toptions = options || {};\n\t\tthis.elementResults= (options.elementResults) ? options.elementResults:[];\n\t\tthis.elementDiagnosticInfos= (options.elementDiagnosticInfos) ? options.elementDiagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeArray(this.elementResults,out);\n\t\tec.encodeArray(this.elementDiagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.elementResults = ec.decodeArray(inp,decodeContentFilterElementResult);\n\t\tthis.elementDiagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : ContentFilterResult) : ContentFilterResult { \n\t\tif(!target) {\n\t\t\ttarget = new ContentFilterResult();\n\t\t}\n\t\tif (this.elementResults) { target.elementResults = ec.cloneComplexArray(this.elementResults);}\n\t\tif (this.elementDiagnosticInfos) { target.elementDiagnosticInfos = ec.cloneComplexArray(this.elementDiagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeContentFilterResult(\tinp : DataStream) : ContentFilterResult { \n\t\tlet obj = new ContentFilterResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ContentFilterResult\",ContentFilterResult, makeExpandedNodeId(609,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IAggregateConfiguration {\n\t\tuseServerCapabilitiesDefaults? : boolean;\n\t\ttreatUncertainAsBad? : boolean;\n\t\tpercentDataBad? : ec.Byte;\n\t\tpercentDataGood? : ec.Byte;\n\t\tuseSlopedExtrapolation? : boolean;\n}\n\n/**\n\n*/\n\nexport class AggregateConfiguration {\n \t\tuseServerCapabilitiesDefaults : boolean;\n\t\ttreatUncertainAsBad : boolean;\n\t\tpercentDataBad : ec.Byte;\n\t\tpercentDataGood : ec.Byte;\n\t\tuseSlopedExtrapolation : boolean;\n\n\tconstructor(\toptions? : IAggregateConfiguration) { \n\t\toptions = options || {};\n\t\tthis.useServerCapabilitiesDefaults= (options.useServerCapabilitiesDefaults) ? options.useServerCapabilitiesDefaults:null;\n\t\tthis.treatUncertainAsBad= (options.treatUncertainAsBad) ? options.treatUncertainAsBad:null;\n\t\tthis.percentDataBad= (options.percentDataBad) ? options.percentDataBad:null;\n\t\tthis.percentDataGood= (options.percentDataGood) ? options.percentDataGood:null;\n\t\tthis.useSlopedExtrapolation= (options.useSlopedExtrapolation) ? options.useSlopedExtrapolation:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeBoolean(this.useServerCapabilitiesDefaults,out);\n\t\tec.encodeBoolean(this.treatUncertainAsBad,out);\n\t\tec.encodeByte(this.percentDataBad,out);\n\t\tec.encodeByte(this.percentDataGood,out);\n\t\tec.encodeBoolean(this.useSlopedExtrapolation,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.useServerCapabilitiesDefaults = ec.decodeBoolean(inp);\n\t\tthis.treatUncertainAsBad = ec.decodeBoolean(inp);\n\t\tthis.percentDataBad = ec.decodeByte(inp);\n\t\tthis.percentDataGood = ec.decodeByte(inp);\n\t\tthis.useSlopedExtrapolation = ec.decodeBoolean(inp);\n\n\t}\n\n\n\tclone(\ttarget? : AggregateConfiguration) : AggregateConfiguration { \n\t\tif(!target) {\n\t\t\ttarget = new AggregateConfiguration();\n\t\t}\n\t\ttarget.useServerCapabilitiesDefaults = this.useServerCapabilitiesDefaults;\n\t\ttarget.treatUncertainAsBad = this.treatUncertainAsBad;\n\t\ttarget.percentDataBad = this.percentDataBad;\n\t\ttarget.percentDataGood = this.percentDataGood;\n\t\ttarget.useSlopedExtrapolation = this.useSlopedExtrapolation;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeAggregateConfiguration(\tinp : DataStream) : AggregateConfiguration { \n\t\tlet obj = new AggregateConfiguration();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"AggregateConfiguration\",AggregateConfiguration, makeExpandedNodeId(950,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IChannelSecurityToken {\n\t\tchannelId? : ec.UInt32;\n\t\ttokenId? : ec.UInt32;\n\t\tcreatedAt? : Date;\n\t\trevisedLifetime? : ec.UInt32;\n}\n\n/**\nThe token that identifies a set of keys for an active secure channel.\n*/\n\nexport class ChannelSecurityToken {\n \t\tchannelId : ec.UInt32;\n\t\ttokenId : ec.UInt32;\n\t\tcreatedAt : Date;\n\t\trevisedLifetime : ec.UInt32;\n\n\tconstructor(\toptions? : IChannelSecurityToken) { \n\t\toptions = options || {};\n\t\tthis.channelId= (options.channelId) ? options.channelId:null;\n\t\tthis.tokenId= (options.tokenId) ? options.tokenId:null;\n\t\tthis.createdAt= (options.createdAt) ? options.createdAt:null;\n\t\tthis.revisedLifetime= (options.revisedLifetime) ? options.revisedLifetime:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.channelId,out);\n\t\tec.encodeUInt32(this.tokenId,out);\n\t\tec.encodeDateTime(this.createdAt,out);\n\t\tec.encodeUInt32(this.revisedLifetime,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.channelId = ec.decodeUInt32(inp);\n\t\tthis.tokenId = ec.decodeUInt32(inp);\n\t\tthis.createdAt = ec.decodeDateTime(inp);\n\t\tthis.revisedLifetime = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ChannelSecurityToken) : ChannelSecurityToken { \n\t\tif(!target) {\n\t\t\ttarget = new ChannelSecurityToken();\n\t\t}\n\t\ttarget.channelId = this.channelId;\n\t\ttarget.tokenId = this.tokenId;\n\t\ttarget.createdAt = this.createdAt;\n\t\ttarget.revisedLifetime = this.revisedLifetime;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeChannelSecurityToken(\tinp : DataStream) : ChannelSecurityToken { \n\t\tlet obj = new ChannelSecurityToken();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ChannelSecurityToken\",ChannelSecurityToken, makeExpandedNodeId(443,0));","\n\nimport * as ec from '../basic-types';\nimport {QualifiedName} from './QualifiedName';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IRelativePathElement {\n\t\treferenceTypeId? : ec.NodeId;\n\t\tisInverse? : boolean;\n\t\tincludeSubtypes? : boolean;\n\t\ttargetName? : QualifiedName;\n}\n\n/**\nAn element in a relative path.\n*/\n\nexport class RelativePathElement {\n \t\treferenceTypeId : ec.NodeId;\n\t\tisInverse : boolean;\n\t\tincludeSubtypes : boolean;\n\t\ttargetName : QualifiedName;\n\n\tconstructor(\toptions? : IRelativePathElement) { \n\t\toptions = options || {};\n\t\tthis.referenceTypeId= (options.referenceTypeId) ? options.referenceTypeId:null;\n\t\tthis.isInverse= (options.isInverse) ? options.isInverse:null;\n\t\tthis.includeSubtypes= (options.includeSubtypes) ? options.includeSubtypes:null;\n\t\tthis.targetName= (options.targetName) ? options.targetName:new QualifiedName();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.referenceTypeId,out);\n\t\tec.encodeBoolean(this.isInverse,out);\n\t\tec.encodeBoolean(this.includeSubtypes,out);\n\t\tthis.targetName.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.referenceTypeId = ec.decodeNodeId(inp);\n\t\tthis.isInverse = ec.decodeBoolean(inp);\n\t\tthis.includeSubtypes = ec.decodeBoolean(inp);\n\t\tthis.targetName.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : RelativePathElement) : RelativePathElement { \n\t\tif(!target) {\n\t\t\ttarget = new RelativePathElement();\n\t\t}\n\t\ttarget.referenceTypeId = this.referenceTypeId;\n\t\ttarget.isInverse = this.isInverse;\n\t\ttarget.includeSubtypes = this.includeSubtypes;\n\t\tif (this.targetName) { target.targetName = this.targetName.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRelativePathElement(\tinp : DataStream) : RelativePathElement { \n\t\tlet obj = new RelativePathElement();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"RelativePathElement\",RelativePathElement, makeExpandedNodeId(539,0));","\"use strict\";\r\n/**\r\n * @module opcua.client\r\n */\r\n\r\nimport {assert} from '../assert';\r\nimport * as log from 'loglevel';\r\nimport async_series from 'async-es/series';\r\nimport async_map from 'async-es/map';\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {SecurityPolicy,fromURI,toUri} from '../secure-channel/security_policy';\r\nimport {MessageSecurityMode} from '../secure-channel';\r\nimport {once} from '../utils/once';\r\nimport * as delayed from 'delayed';\r\nimport {ObjectRegistry} from '../object-registry/objectRegistry'\r\n//import {OPCUASecureObject} from '../common/secure_object'\r\nimport {doDebug} from '../common/debug';\r\nimport * as endpoints_service from \"../service-endpoints\";\r\n\r\nvar GetEndpointsRequest = endpoints_service.GetEndpointsRequest;\r\nvar GetEndpointsResponse = endpoints_service.GetEndpointsResponse;\r\n\r\n/**\r\n *\r\n * send a FindServers request to a discovery server\r\n * @method findServers\r\n * @async\r\n * @param callback [Function}\r\n */\r\n\r\nimport * as register_server_service from \"../service-register-server\";\r\nvar FindServersRequest = register_server_service.FindServersRequest;\r\nvar FindServersResponse = register_server_service.FindServersResponse;\r\n\r\n\r\nfunction debugLog(s : String) {\r\n    if (doDebug) {\r\n        log.debug(s);\r\n    }\r\n}\r\n\r\n\r\n\r\nimport {ClientSecureChannelLayer} from '../secure-channel/client_secure_channel_layer';\r\nimport { OPCUASecureObject } from '../common/secure_object';\r\nimport { RequestHeader } from '../service-secure-channel';\r\nimport { ClientSession } from './client_session';\r\nimport { EndpointDescription } from '../service-endpoints';\r\nimport { IFindServersRequest } from '../generated/FindServersRequest';\r\nimport { IGetEndpointsRequest } from '../generated/GetEndpointsRequest';\r\n\r\nvar defaultConnectionStrategy = {\r\n    maxRetry:     100,\r\n    initialDelay: 1000,\r\n    maxDelay:     20000,\r\n    randomisationFactor: 0.1\r\n};\r\n\r\nexport interface ErrorCallback {\r\n    (err?: Error): void;\r\n}\r\n\r\nexport interface ResponseCallback<T> {\r\n    (err?: Error | null, response?: T): void;\r\n}\r\n\r\n\r\nexport interface ConnectionStrategy {\r\n    maxRetry?: number;\r\n    initialDelay?: number;\r\n    maxDelay?: number;\r\n    randomisationFactor?: number;\r\n}\r\n\r\nexport interface OPCUAClientOptions {\r\n    \r\n        defaultSecureTokenLifeTime?: number, //default secure token lifetime in ms\r\n        serverCertificate?: any, // =null] {Certificate} the server certificate.\r\n        connectionStrategy?: ConnectionStrategy,\r\n        // {MessageSecurityMode} the default security mode.\r\n        securityMode?: MessageSecurityMode, //  MessageSecurityMode, // [ =  MessageSecurityMode.None]\r\n        securityPolicy?: SecurityPolicy, // : SecurityPolicy,//  =SecurityPolicy.NONE] {SecurityPolicy} the security mode.\r\n        requestedSessionTimeout?: number, //= 60000]            {Number} the requested session time out in CreateSession\r\n        applicationName?: string,// =\"NodeOPCUA-Client\"]        {string} the client application name\r\n        endpoint_must_exist?: boolean, // true] {Boolean} set to false if the client should accept server endpoint mismatch\r\n        keepSessionAlive?: boolean,//=false]{Boolean}\r\n        certificateFile?: string, // \"certificates/client_selfsigned_cert_1024.pem\"] {String} client certificate pem file.\r\n        privateKeyFile?: string,// \"certificates/client_key_1024.pem\"] {String} client private key pem file.\r\n        clientName?: string //] {String} a client name string that will be used to generate session names.\r\n    }\r\n\r\nexport interface IFindServersOptions {\r\n    endpointUrl? : string;\r\n    localeIds? : string[];\r\n    serverUris? : string[];\r\n}\r\n\r\n/**\r\n * @class OPCUAClientBase\r\n * @extends EventEmitter\r\n * @param options\r\n * @param options.defaultSecureTokenLifeTime {Number} default secure token lifetime in ms\r\n * @param [options.securityMode=MessageSecurityMode.None] {MessageSecurityMode} the default security mode.\r\n * @param [options.securityPolicy =SecurityPolicy.NONE] {SecurityPolicy} the security mode.\r\n * @param [options.serverCertificate=null] {Certificate} the server certificate.\r\n * @param [options.certificateFile=\"certificates/client_selfsigned_cert_1024.pem\"] {String} client certificate pem file.\r\n * @param [options.privateKeyFile=\"certificates/client_key_1024.pem\"] {String} client private key pem file.\r\n * @param [options.connectionStrategy] {Object}\r\n * @param [options.keepSessionAlive=false]{Boolean}\r\n * @constructor\r\n */\r\nexport class OPCUAClientBase extends EventEmitter {\r\n\r\n    endpoint: any;\r\n    secureObject : OPCUASecureObject;\r\n    /**\r\n     * @property securityMode\r\n     * @type MessageSecurityMode\r\n     */\r\n    securityMode: MessageSecurityMode;\r\n    \r\n        /**\r\n         *\r\n         */\r\n        securityPolicy: SecurityPolicy;\r\n    \r\n        /**\r\n         *\r\n         */\r\n        serverCertificate: Uint8Array | null;\r\n\r\n        protected protocolVersion : number;\r\n        protected options : OPCUAClientOptions;\r\n\r\n        /* TODO: check if this should be static */\r\n        protected registry  = new ObjectRegistry();\r\n\r\n        protected _sessions : ClientSession[];\r\n        protected defaultSecureTokenLifetime : number;\r\n\r\n        protected _endpointUrl : string;\r\n        protected connectionStrategy : ConnectionStrategy;\r\n\r\n        /**\r\n     * true if session shall periodically probe the server to keep the session alive and prevent timeout\r\n     * @property keepSessionAlive\r\n     * @type {boolean}\r\n     */\r\n        protected keepSessionAlive : boolean;\r\n\r\n        protected _byteRead : number;\r\n        protected _byteWritten : number;\r\n        protected _transactionsPerformed : number;\r\n        protected _timedOutRequestCount : number;\r\n    \r\n        protected _secureChannel : ClientSecureChannelLayer;\r\n        protected _server_endpoints : EndpointDescription[];\r\n\r\n        protected _isReconnecting : boolean;\r\n        /**\r\n         * total number of bytes read by the client\r\n         * @property bytesRead\r\n         * @type {Number}\r\n         */\r\n        get bytesRead() {\r\n            return this._byteRead + (this._secureChannel ? this._secureChannel.bytesRead : 0);\r\n        };\r\n\r\n    /**\r\n     * total number of bytes written by the client\r\n     * @property bytesWritten\r\n     * @type {Number}\r\n     */\r\n    get bytesWritten() {\r\n        return this._byteWritten + (this._secureChannel ?  this._secureChannel.bytesWritten : 0 );\r\n    };\r\n\r\n    /**\r\n     * total number of transactions performed by the client\r\n     * @property transactionsPerformed\r\n     * @type {Number}\r\n     */\r\n    get transactionsPerformed() {    \r\n        return this._transactionsPerformed + (this._secureChannel ? this._secureChannel.transactionsPerformed : 0);\r\n    };\r\n\r\n    get timedOutRequestCount() {\r\n        return this._timedOutRequestCount + (this._secureChannel ? this._secureChannel.timedOutRequestCount : 0);\r\n    };\r\n\r\n    /**\r\n     * is true when the client has already requested the server end points.\r\n     * @property knowsServerEndpoint\r\n     * @type boolean\r\n     */\r\n    get knowsServerEndpoint() {\r\n        return (this._server_endpoints && this._server_endpoints.length >0);\r\n    };\r\n\r\n    /**\r\n     * @property isReconnecting\r\n     * @type {Boolean} true if the client is trying to reconnect to the server after a connection break.\r\n     */\r\n    get isReconnecting() {\r\n        return !!(this._secureChannel && this._secureChannel.isConnecting);\r\n    };\r\n\r\n    /**\r\n     * true if the connection strategy is set to automatically try to reconnect in case of failure\r\n     * @property reconnectOnFailure\r\n     * @type {Boolean}\r\n     */\r\n    get reconnectOnFailure() {\r\n        return  this.connectionStrategy.maxRetry >0;\r\n    };\r\n\r\n    get secureChannel() {\r\n        return this._secureChannel;\r\n    }\r\n\r\n    get endpointUrl() {\r\n        return this._endpointUrl;\r\n    }\r\n\r\n    constructor(options ?: OPCUAClientOptions) {\r\n        super();\r\n        \r\n        options = options || {};\r\n        \r\n        // options.certificateFile = options.certificateFile || path.join(__dirname, \"../certificates/client_selfsigned_cert_1024.pem\");\r\n        // options.privateKeyFile = options.privateKeyFile || path.join(__dirname, \"../certificates/PKI/own/private/private_key.pem\");    \r\n    //          // istanbul ignore next\r\n    // if (!fs.existsSync(options.certificateFile)) {\r\n    //     throw new Error(\" cannot locate certificate file \" + options.certificateFile);\r\n    // }\r\n\r\n    // // istanbul ignore next\r\n    // if (!fs.existsSync(options.privateKeyFile)) {\r\n    //     throw new Error(\" cannot locate private key file \" + options.privateKeyFile);\r\n    // } \r\n\r\n //       OPCUASecureObject.call(this, options);\r\n        this.secureObject = new OPCUASecureObject(options);\r\n\r\n        this.registry = new ObjectRegistry();\r\n    // must be ZERO with Spec 1.0.2\r\n    this.protocolVersion = 0;\r\n\r\n    this._sessions = [];\r\n\r\n\r\n    this._server_endpoints = [];\r\n    this._secureChannel = null;\r\n\r\n    this.defaultSecureTokenLifetime = options.defaultSecureTokenLifeTime || 600000;\r\n    this.securityMode = options.securityMode || MessageSecurityMode.None;\r\n\r\n    /**\r\n     * @property securityPolicy\r\n     * @type {SecurityPolicy}\r\n     */\r\n    this.securityPolicy = options.securityPolicy || toUri(\"None\");\r\n    this.securityPolicy = SecurityPolicy[this.securityPolicy];\r\n\r\n    /**\r\n     * @property serverCertificate\r\n     * @type {Certificate}\r\n     */\r\n    this.serverCertificate = options.serverCertificate || null;\r\n\r\n    \r\n    this.keepSessionAlive = options.keepSessionAlive ? options.keepSessionAlive : false;\r\n    \r\n    // statistics...\r\n    this._byteRead    = 0;\r\n    this._byteWritten = 0;\r\n    this._transactionsPerformed = 0;\r\n    this._timedOutRequestCount = 0;\r\n\r\n    // this.objectFactory = {\r\n    //     constructObject: function (id) {\r\n    //         return factories.constructObject(id);\r\n    //     }\r\n    // };\r\n    /**\r\n     * @property connectionStrategy\r\n     * @type {options.connectionStrategy|{maxRetry, initialDelay, maxDelay, randomisationFactor}|*|{maxRetry: number, initialDelay: number, maxDelay: number, randomisationFactor: number}}\r\n     */\r\n    this.connectionStrategy= options.connectionStrategy || defaultConnectionStrategy;\r\n    }\r\n\r\n    closeSession(arg0: any, arg1: any, arg2: any): any {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n           /**\r\n         *\r\n         * connect the OPC-UA client to a server end point.\r\n         * @param options\r\n         * @param callback\r\n         */\r\n        connect(endpointUrl: string, callback: ErrorCallback): void {\r\n                assert('function' === typeof callback, \"expecting a callback\");\r\n                            \r\n                this._endpointUrl = endpointUrl;\r\n            \r\n                // prevent illegal call to connect\r\n                if (this._secureChannel !== null) {\r\n                    setImmediate(() => {\r\n                        callback(new Error(\"connect already called\"));\r\n                    });\r\n                    return;\r\n                }\r\n            \r\n                if (!this.serverCertificate && this.securityMode!== MessageSecurityMode.None) {\r\n            \r\n                    // we have not been given the serverCertificate but this certificate\r\n                    // is required as the connection is to be secured.\r\n                    //\r\n                    // Let's explore the server endpoint that matches our security settings\r\n                    // This will give us the missing Certificate as well from the server itself.\r\n                    // todo :\r\n                    // Once we have the certificate, we cannot trust it straight away\r\n                    // we have to verify that the certificate is valid and not outdated and not revoked.\r\n                    // if the certificate is self-signed the certificate must appear in the trust certificate\r\n                    // list.\r\n                    // if the certificate has been certified by an Certificate Authority we have to\r\n                    // verify that the certificates in the chain are valid and not revoked.\r\n                    //\r\n                    return OPCUAClientBase.__findEndpoint(endpointUrl,this.securityMode,this.securityPolicy,(err,endpoint) =>{\r\n                        if (err) { return callback(err); }\r\n                        if (!endpoint) {\r\n                            return callback(new Error(\"cannot find end point\"));\r\n                        }\r\n                        //xx console.log(\" Found End point \");\r\n                        \r\n                        return this.connect(endpointUrl,callback);\r\n                    });\r\n                }\r\n            \r\n                //todo: make sure endpoint_url exists in the list of endpoints send by the server\r\n                // [...]\r\n            \r\n                // make sure callback will only be call once regardless of outcome, and will be also deferred.\r\n                var callback_od = once(delayed.deferred(callback)); callback = null;\r\n            \r\n                this.registry.register(this);\r\n            \r\n                this._internal_create_secure_channel((err,secureChannel) => {\r\n                    callback_od(err);\r\n                });\r\n            \r\n            }\r\n    \r\n        disconnect(callback: ErrorCallback): void {\r\n\r\n    assert('function' === typeof callback);\r\n    \r\n        if (this.isReconnecting) {\r\n            debugLog(\"OPCUAClientBase#disconnect called while reconnection is in progress\");\r\n            // let's abort the reconnection process\r\n            return this._cancel_reconnection((err) => {\r\n                assert(!err,\" why would this fail ?\");\r\n                assert(!this.isReconnecting);\r\n                // sessions cannot be cancelled properly and must be discarded.\r\n                this.disconnect(callback);\r\n            });\r\n        }\r\n        if (this._sessions.length) {\r\n            console.log(\"warning : disconnection : closing pending sessions\");\r\n            // disconnect has been called whereas living session exists\r\n            // we need to close them first ....\r\n            this._close_pending_sessions((/*err*/) => {\r\n                this.disconnect(callback);\r\n            });\r\n            return;\r\n        }\r\n    \r\n        assert(this._sessions.length === 0, \" attempt to disconnect a client with live sessions \");\r\n    \r\n        this.registry.unregister(this);\r\n    \r\n        if (this._secureChannel) {\r\n    \r\n            var tmp_channel = this._secureChannel;\r\n    \r\n            this._destroy_secure_channel();\r\n    \r\n            tmp_channel.close(() => {\r\n    \r\n                debugLog(\" EMIT NORMAL CLOSE\");\r\n                /**\r\n                 * @event close\r\n                 */\r\n                this.emit(\"close\", null);\r\n                setImmediate(callback);\r\n            });\r\n        } else {\r\n            this.emit(\"close\", null);\r\n            callback();\r\n        }\r\n    \r\n        }\r\n    \r\n        performMessageTransaction(request: any,\r\n            callback: ResponseCallback<any>): void {\r\n                        \r\n                        if (!this._secureChannel) {\r\n                            // this may happen if the Server has closed the connection abruptly for some unknown reason\r\n                            // or if the tcp connection has been broken.\r\n                            return callback(new Error(\"No SecureChannel , connection may have been canceled abruptly by server\"));\r\n                        }\r\n                        assert(this._secureChannel);\r\n                        assert(request);\r\n                        assert(request.requestHeader);\r\n                        assert(typeof callback === \"function\");\r\n                        this._secureChannel.performMessageTransaction(request, callback);         \r\n        }\r\n\r\n        /**\r\n * @method findServers\r\n * @param options\r\n * @param [options.endpointUrl]\r\n * @param [options.localeIds] Array\r\n * @param [options.serverUris] Array\r\n * @param callback\r\n */\r\npublic findServers(options : IFindServersOptions, callback : ResponseCallback<endpoints_service.ApplicationDescription[]>) {\r\n    \r\n        if (!this._secureChannel) {\r\n            setImmediate(function () {\r\n                callback(new Error(\"Invalid Secure Channel\"));\r\n            });\r\n            return;\r\n        }\r\n    \r\n        /*\r\n        if (!callback) {\r\n            callback = options;\r\n            options = {};\r\n        }*/\r\n    \r\n        var request = new FindServersRequest({\r\n            endpointUrl: options.endpointUrl || this._endpointUrl,\r\n            localeIds: options.localeIds || [],\r\n            serverUris: options.serverUris || []\r\n        });\r\n    \r\n    \r\n        this.performMessageTransaction(request, function (err, response) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            assert(response instanceof FindServersResponse);\r\n            callback(null, response.servers);\r\n        });\r\n    };\r\n    \r\n    \r\n    protected _close_pending_sessions(callback) {\r\n    \r\n        assert('function' === typeof callback);\r\n    \r\n        var sessions = this._sessions.slice();//_.clone(this._sessions);\r\n        async_map(sessions, function (session: ClientSession, next) {\r\n    \r\n            assert(session.client === this);\r\n            session.close(true,function(err){\r\n                // We should not bother if we have an error here\r\n                // Session may fail to close , if they haven't been activate and forcefully closed by server\r\n                // in a attempt to preserve resources in the case of a DOS attack for instance.\r\n                if (err) {\r\n                    debugLog(\" failing to close session \" + session.authenticationToken.toString());\r\n                }\r\n                next();\r\n            });\r\n    \r\n        }, function (err) {\r\n    \r\n            // istanbul ignore next\r\n            if (this._sessions.length>0) {\r\n                console.log(this._sessions.map(function(s){ return s.authenticationToken.toString()}).join(\" \"));\r\n            }\r\n    \r\n            assert(this._sessions.length === 0, \" failed to disconnect exiting sessions \");\r\n            callback(err);\r\n        });\r\n    \r\n    };\r\n        /**\r\n * @method getEndpoints\r\n * @async\r\n * @async\r\n *\r\n * @param [options]\r\n * @param [options.endpointUrl] {String} the network address that the Client used to access the Discovery Endpoint .\r\n * @param [options.localeIds} {Array<LocaleId>}  List of locales to use.\r\n * @param [options.profileUris} {Array<String>}  List of transport profiles that the returned Endpoints shall support.\r\n * @param callback {Function}\r\n * @param callback.err {Error|null}\r\n * @param callback.serverEndpoints {Array<EndpointDescription>} the array of endpoint descriptions\r\n *\r\n */\r\npublic getEndpoints(options : IGetEndpointsRequest, callback?) : void {   \r\n        if (!callback) {\r\n            callback = options;\r\n            options = {};\r\n        }\r\n\r\n        if (!options) {\r\n            options = {};\r\n        }\r\n        \r\n        assert('function' === typeof callback);\r\n    \r\n        options.endpointUrl = options.endpointUrl || this._endpointUrl;\r\n        options.localeIds = options.localeIds || [];\r\n        options.profileUris = options.profileUris || [];\r\n    \r\n        var request = new GetEndpointsRequest({\r\n            endpointUrl: options.endpointUrl,\r\n            localeIds:   options.localeIds,\r\n            profileUris: options.profileUris,\r\n            requestHeader: new RequestHeader({\r\n                auditEntryId: null\r\n            })\r\n        });\r\n    \r\n        this.performMessageTransaction(request, (err, response) => {\r\n            this._server_endpoints = null;\r\n            if (!err) {\r\n                assert(response instanceof GetEndpointsResponse);\r\n                this._server_endpoints = response.endpoints;\r\n            }\r\n            callback(err, this._server_endpoints);\r\n        });\r\n    };\r\n    \r\n\r\n\r\n        // override me !\r\n        protected _on_connection_reestablished(callback) {\r\n            callback();\r\n        };\r\n\r\n\r\n        protected _addSession(session) {\r\n            assert(!session._client || session._client === this);\r\n            assert(this._sessions.indexOf(session) < 0, \"session already added\");\r\n            session._client = this;\r\n            this._sessions.push(session);\r\n        \r\n            if (this.keepSessionAlive) {\r\n                session.startKeepAliveManager();\r\n            }\r\n        \r\n        };\r\n        \r\n        protected _removeSession(session) {\r\n            var index = this._sessions.indexOf(session);\r\n            if (index >= 0) {\r\n                this._sessions.splice(index, 1);\r\n                assert(this._sessions.indexOf(session) < 0);\r\n                session.dispose();\r\n            }\r\n            assert(this._sessions.indexOf(session) < 0);\r\n        };\r\n        \r\n        /**\r\n *\r\n * return the endpoint information matching the specified url , security mode and security policy.\r\n * @method findEndpoint\r\n * @return {EndPoint}\r\n */\r\npublic findEndpoint(endpointUrl, securityMode, securityPolicy) {\r\n    assert(this.knowsServerEndpoint, \"Server end point are not known yet\");\r\n    return this._server_endpoints.find(function (endpoint) {\r\n        return endpoint.endpointUrl === endpointUrl &&\r\n            endpoint.securityMode === securityMode &&\r\n            endpoint.securityPolicyUri === securityPolicy;\r\n    });\r\n};\r\n\r\n\r\n\r\n        public toString() {\r\n            \r\n                console.log(\"  defaultSecureTokenLifetime.... \",this.defaultSecureTokenLifetime);\r\n                console.log(\"  securityMode.................. \",this.securityMode.toString());\r\n                console.log(\"  securityPolicy................ \",this.securityPolicy.toString());\r\n                //xx this.serverCertificate = options.serverCertificate || null;\r\n                console.log(\"  keepSessionAlive.............. \",this.keepSessionAlive);\r\n                console.log(\"  bytesRead..................... \",this.bytesRead);\r\n                console.log(\"  bytesWritten.................. \",this.bytesWritten);\r\n                console.log(\"  transactionsPerformed......... \",this.transactionsPerformed);\r\n                console.log(\"  timedOutRequestCount.......... \",this.timedOutRequestCount);\r\n                console.log(\"  connectionStrategy.\");\r\n                console.log(\"        .maxRetry............... \",this.connectionStrategy.maxRetry);\r\n                console.log(\"        .initialDelay........... \",this.connectionStrategy.initialDelay);\r\n                console.log(\"        .maxDelay............... \",this.connectionStrategy.maxDelay);\r\n                console.log(\"        .randomisationFactor.... \",this.connectionStrategy.randomisationFactor);\r\n                console.log(\"  keepSessionAlive.............. \",this.keepSessionAlive);\r\n            };\r\n\r\n\r\nprotected _destroy_secure_channel() {\r\n\r\n\r\n    if (this._secureChannel) {\r\n\r\n        if (doDebug) {\r\n            debugLog(\" DESTROYING SECURE CHANNEL \"+this._secureChannel.isTransactionInProgress());\r\n        }\r\n\r\n        // keep accumulated statistics\r\n        this._byteWritten += this._secureChannel.bytesWritten;\r\n        this._byteRead    += this._secureChannel.bytesRead;\r\n        this._transactionsPerformed += this._secureChannel.transactionsPerformed;\r\n        this._timedOutRequestCount += this._secureChannel.timedOutRequestCount;\r\n\r\n\r\n        this._secureChannel.dispose();\r\n\r\n        this._secureChannel.removeAllListeners();\r\n        this._secureChannel = null;\r\n    }\r\n};\r\n\r\nprivate static __findEndpoint(endpointUrl,securityMode,securityPolicy,callback) {\r\n\r\n    var client = new OPCUAClientBase();\r\n\r\n    var selected_endpoint = null;\r\n    var all_endpoints = null;\r\n    var tasks = [\r\n        function(callback) {\r\n            client.connect(endpointUrl, callback);\r\n        },\r\n        function (callback) {\r\n            client.getEndpoints( null,(err, endpoints) => {\r\n\r\n                if (!err) {\r\n                    endpoints.forEach(function (endpoint, i) {\r\n                        if (endpoint.securityMode === securityMode && endpoint.securityPolicyUri == securityPolicy.value){\r\n                            selected_endpoint = endpoint; // found it\r\n                        }\r\n                    });\r\n                }\r\n                callback(err);\r\n            });\r\n        },\r\n        function (callback) {\r\n            client.disconnect(callback);\r\n        }\r\n    ];\r\n\r\n    async_series(tasks,function(err){\r\n       if(err) { return callback(err); }\r\n        if (!selected_endpoint) {\r\n            callback (new Error(\" Cannot find an Endpoint matching \" +\r\n                \" security mode: \"+securityMode.toString() +\r\n                \" policy: \" + securityPolicy.toString()));\r\n        }\r\n        callback(null,selected_endpoint,all_endpoints);\r\n    });\r\n}\r\n\r\n\r\nprotected _cancel_reconnection(callback : Function) {\r\n    // istanbul ignore next\r\n    if (!this._secureChannel) {\r\n        return callback(null); // nothing to do\r\n    }\r\n    this._secureChannel.abortConnection((err) => {\r\n        this._secureChannel = null;\r\n        callback();\r\n    });\r\n};\r\n\r\nprotected _recreate_secure_channel(callback : Function) {\r\n\r\n    debugLog(\"_recreate_secure_channel...\");\r\n\r\n    assert('function' === typeof callback);\r\n\r\n    if (!this.knowsServerEndpoint) {\r\n        return callback(new Error(\"Cannot reconnect, server endpoint is unknown\"));\r\n    }\r\n    assert(this.knowsServerEndpoint);\r\n\r\n    assert(!this.isReconnecting);\r\n\r\n    /**\r\n     * notifies the observer that the OPCUA is now trying to reestablish the connection\r\n     * after having received a connection break...\r\n     * @event start_reconnection\r\n     *\r\n     */\r\n    this.emit(\"start_reconnection\"); // send after callback\r\n\r\n    // create a secure channel\r\n    // a new secure channel must be established\r\n    setImmediate(() => {\r\n\r\n        this._destroy_secure_channel();\r\n\r\n        assert(!this._secureChannel);\r\n\r\n        this._internal_create_secure_channel( (err) => {\r\n\r\n\r\n            if (err) {\r\n                debugLog(\"OPCUAClientBase: cannot reconnect ..\");\r\n            } else {\r\n                assert(this._secureChannel);\r\n                // a new channel has be created and a new connection is established\r\n                debugLog(\"OPCUAClientBase:  RECONNECTED                                       !!!\");\r\n            }\r\n\r\n            callback(err);\r\n\r\n            /**\r\n             * notify the observers that the reconnection process has been completed\r\n             * @event after_reconnection\r\n             * @param err\r\n             */\r\n            this.emit(\"after_reconnection\",err); // send after callback\r\n\r\n        });\r\n    });\r\n};\r\n\r\n\r\n\r\nprotected _internal_create_secure_channel (callback : Function) {\r\n\r\n    let secureChannel : ClientSecureChannelLayer;\r\n    assert(this._secureChannel === null);\r\n    assert( typeof this._endpointUrl === 'string' || <any>this._endpointUrl instanceof String);\r\n\r\n    async_series([\r\n\r\n        //------------------------------------------------- STEP 2 : OpenSecureChannel\r\n        (_inner_callback) => {\r\n\r\n            secureChannel = new ClientSecureChannelLayer({\r\n                defaultSecureTokenLifetime: this.defaultSecureTokenLifetime,\r\n                securityMode: this.securityMode,\r\n                securityPolicy: this.securityPolicy,\r\n                serverCertificate: this.serverCertificate,\r\n                parent: this,\r\n          //      objectFactory: this.objectFactory,\r\n                connectionStrategy: this.connectionStrategy\r\n            });\r\n\r\n            this._secureChannel = secureChannel;\r\n\r\n            secureChannel.protocolVersion = this.protocolVersion;\r\n\r\n            secureChannel.create(this._endpointUrl, (err) => {\r\n                if (err) {\r\n                    debugLog(\"Cannot create secureChannel\");\r\n                    this._destroy_secure_channel();\r\n                } else {\r\n                   OPCUAClientBase._install_secure_channel_event_handlers(this,secureChannel);\r\n                }\r\n                _inner_callback(err);\r\n            });\r\n\r\n            secureChannel.on(\"backoff\",(number,delay) => {\r\n                this.emit(\"backoff\",number,delay);\r\n            });\r\n\r\n            secureChannel.on(\"abort\",() => {\r\n                this.emit(\"abort\");\r\n            });\r\n\r\n\r\n        },\r\n        //------------------------------------------------- STEP 3 : GetEndpointsRequest\r\n        (_inner_callback) => {\r\n\r\n            if (!this.knowsServerEndpoint) {\r\n                assert(this._secureChannel !== null);\r\n                this.getEndpoints(null,(err/*, endpoints*/) => {\r\n                    _inner_callback(err);\r\n                });\r\n            } else {\r\n                // end points are already known\r\n                _inner_callback(null);\r\n            }\r\n        }\r\n\r\n    ], (err) => {\r\n\r\n        if (err) {\r\n            //xx this.disconnect(function () {\r\n            //xx });\r\n            this._secureChannel = null;\r\n            callback(err);\r\n        } else {\r\n            callback(err,secureChannel);\r\n        }\r\n\r\n    });\r\n\r\n};\r\n\r\n\r\nprivate static _install_secure_channel_event_handlers(client : OPCUAClientBase,secureChannel) {\r\n\r\n    assert(client instanceof OPCUAClientBase);\r\n\r\n    secureChannel.on(\"send_chunk\", (message_chunk) => {\r\n        /**\r\n         * notify the observer that a message_chunk has been sent\r\n         * @event send_chunk\r\n         * @param message_chunk\r\n         */\r\n        client.emit(\"send_chunk\", message_chunk);\r\n    });\r\n\r\n    secureChannel.on(\"receive_chunk\", (message_chunk) => {\r\n        /**\r\n         * notify the observer that a message_chunk has been received\r\n         * @event receive_chunk\r\n         * @param message_chunk\r\n         */\r\n        client.emit(\"receive_chunk\", message_chunk);\r\n    });\r\n\r\n    secureChannel.on(\"send_request\", (message) => {\r\n        /**\r\n         * notify the observer that a request has been sent to the server.\r\n         * @event send_request\r\n         * @param message\r\n         */\r\n        client.emit(\"send_request\", message);\r\n    });\r\n\r\n    secureChannel.on(\"receive_response\", (message) => {\r\n        /**\r\n         * notify the observer that a response has been received from the server.\r\n         * @event receive_response\r\n         * @param message\r\n         */\r\n        client.emit(\"receive_response\", message);\r\n    });\r\n\r\n    secureChannel.on(\"lifetime_75\", (token) => {\r\n        // secureChannel requests a new token\r\n        debugLog(\"SecureChannel Security Token \" + token.tokenId + \" is about to expired , it's time to request a new token\");\r\n        // forward message to upper level\r\n        client.emit(\"lifetime_75\", token);\r\n    });\r\n\r\n    secureChannel.on(\"security_token_renewed\", () => {\r\n        // forward message to upper level\r\n        client.emit(\"security_token_renewed\");\r\n    });\r\n\r\n    secureChannel.on(\"close\", (err) => {\r\n\r\n        debugLog(\" OPCUAClientBase emitting close\" +  err);\r\n\r\n        if (!err || !client.reconnectOnFailure) {\r\n            // this is a normal close operation initiated byu\r\n            /**\r\n             * @event close\r\n             * @param error {Error}\r\n             */\r\n            client.emit(\"close\", err);\r\n            setImmediate( () => {\r\n                client._destroy_secure_channel();\r\n            });\r\n            return;\r\n        } else {\r\n\r\n\r\n            client._recreate_secure_channel((err) => {\r\n\r\n                debugLog(\"secureChannel#on(close) => _recreate_secure_channel returns \" + err ? err.message : \"OK\");\r\n                if (err) {\r\n                    //xx assert(!this._secureChannel);\r\n                    client.emit(\"close\",err);\r\n                    return;\r\n                } else {\r\n                    /**\r\n                     * @event connection_reestablished\r\n                     *        send when the connection is reestablished after a connection break\r\n                     */\r\n                    client.emit(\"connection_reestablished\");\r\n\r\n                    // now delegate to upper class the\r\n                    if (client._on_connection_reestablished) {\r\n                        assert('function' === typeof client._on_connection_reestablished);\r\n                        client._on_connection_reestablished((err) => {\r\n\r\n                            if (err) {\r\n                                debugLog(\"connection_reestablished has failed\");\r\n                                client.disconnect(()=>{\r\n                                    //xx callback(err);\r\n                                });\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        //xx console.log(\"xxxx OPCUAClientBase emitting close\".yellow.bold,err);\r\n    });\r\n\r\n    secureChannel.on(\"timed_out_request\", (request) => {\r\n        /**\r\n         * send when a request has timed out without receiving a response\r\n         * @event timed_out_request\r\n         * @param request\r\n         */\r\n        client.emit(\"timed_out_request\", request);\r\n    });\r\n//            client._secureChannel.on(\"end\", (err) => {\r\n//                console.log(\"xxx OPCUAClientBase emitting end\".yellow.bold,err);\r\n//                client.emit(\"close\", err);\r\n//            });\r\n}\r\n\r\npublic getClientNonce() {\r\n    return this._secureChannel.clientNonce;\r\n};\r\n\r\npublic getPrivateKey() {\r\n    return this.secureObject.getPrivateKey();\r\n};\r\n\r\n\r\npublic getCertificate(){\r\n    return this.secureObject.getCertificate();\r\n}\r\n\r\npublic getCertificateChain(){\r\n    return this.secureObject.getCertificateChain();\r\n}\r\n\r\n\r\n/**\r\n *\r\n * return the endpoint information matching  security mode and security policy.\r\n * @method findEndpoint\r\n * @return {EndPoint}\r\n */\r\npublic findEndpointForSecurity(securityMode : MessageSecurityMode, securityPolicy : SecurityPolicy) {\r\n    assert(this.knowsServerEndpoint, \"Server end point are not known yet\");\r\n    return this._server_endpoints.find((endpoint) => {\r\n        return endpoint.securityMode === securityMode &&\r\n               endpoint.securityPolicyUri === securityPolicy;\r\n    });\r\n};\r\n\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n","\n\nimport * as ec from '../basic-types';\n/**\n\n*/\n\nexport class MonitoringFilter {\n \n\tconstructor(){};\n\n\tclone(\ttarget? : MonitoringFilter) : MonitoringFilter { \n\t\tif(!target) {\n\t\t\ttarget = new MonitoringFilter();\n\t\t}\n\t\treturn target;\n\t}\n\n\n}\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"MonitoringFilter\",MonitoringFilter, makeExpandedNodeId(721,0));","export default function once(fn) {\n    return function () {\n        if (fn === null) return;\n        var callFn = fn;\n        fn = null;\n        callFn.apply(this, arguments);\n    };\n}\n","// A temporary value used to identify if the loop should be broken.\n// See #1064, #1293\nexport default {};","export default function doLimit(fn, limit) {\n    return function (iterable, iteratee, callback) {\n        return fn(iterable, limit, iteratee, callback);\n    };\n}\n","var iteratorSymbol = typeof Symbol === 'function' && Symbol.iterator;\n\nexport default function (coll) {\n    return iteratorSymbol && coll[iteratorSymbol] && coll[iteratorSymbol]();\n}\n","/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nexport default baseTimes;\n","/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nexport default isObjectLike;\n","import baseGetTag from './_baseGetTag.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nexport default baseIsArguments;\n","import baseIsArguments from './_baseIsArguments.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nexport default isArguments;\n","/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nexport default isArray;\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nexport default isIndex;\n","import baseGetTag from './_baseGetTag.js';\nimport isLength from './isLength.js';\nimport isObjectLike from './isObjectLike.js';\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nexport default baseIsTypedArray;\n","/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nexport default baseUnary;\n","import baseIsTypedArray from './_baseIsTypedArray.js';\nimport baseUnary from './_baseUnary.js';\nimport nodeUtil from './_nodeUtil.js';\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nexport default isTypedArray;\n","import baseTimes from './_baseTimes.js';\nimport isArguments from './isArguments.js';\nimport isArray from './isArray.js';\nimport isBuffer from './isBuffer.js';\nimport isIndex from './_isIndex.js';\nimport isTypedArray from './isTypedArray.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default arrayLikeKeys;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nexport default isPrototype;\n","/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nexport default overArg;\n","import overArg from './_overArg.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nexport default nativeKeys;\n","import isPrototype from './_isPrototype.js';\nimport nativeKeys from './_nativeKeys.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nexport default baseKeys;\n","import arrayLikeKeys from './_arrayLikeKeys.js';\nimport baseKeys from './_baseKeys.js';\nimport isArrayLike from './isArrayLike.js';\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nexport default keys;\n","import isArrayLike from 'lodash-es/isArrayLike';\nimport getIterator from './getIterator';\nimport keys from 'lodash-es/keys';\n\nfunction createArrayIterator(coll) {\n    var i = -1;\n    var len = coll.length;\n    return function next() {\n        return ++i < len ? {value: coll[i], key: i} : null;\n    }\n}\n\nfunction createES2015Iterator(iterator) {\n    var i = -1;\n    return function next() {\n        var item = iterator.next();\n        if (item.done)\n            return null;\n        i++;\n        return {value: item.value, key: i};\n    }\n}\n\nfunction createObjectIterator(obj) {\n    var okeys = keys(obj);\n    var i = -1;\n    var len = okeys.length;\n    return function next() {\n        var key = okeys[++i];\n        return i < len ? {value: obj[key], key: key} : null;\n    };\n}\n\nexport default function iterator(coll) {\n    if (isArrayLike(coll)) {\n        return createArrayIterator(coll);\n    }\n\n    var iterator = getIterator(coll);\n    return iterator ? createES2015Iterator(iterator) : createObjectIterator(coll);\n}\n","import _eachOfLimit from './internal/eachOfLimit';\nimport wrapAsync from './internal/wrapAsync';\n\n/**\n * The same as [`eachOf`]{@link module:Collections.eachOf} but runs a maximum of `limit` async operations at a\n * time.\n *\n * @name eachOfLimit\n * @static\n * @memberOf module:Collections\n * @method\n * @see [async.eachOf]{@link module:Collections.eachOf}\n * @alias forEachOfLimit\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {number} limit - The maximum number of async operations at a time.\n * @param {AsyncFunction} iteratee - An async function to apply to each\n * item in `coll`. The `key` is the item's key, or index in the case of an\n * array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n */\nexport default function eachOfLimit(coll, limit, iteratee, callback) {\n    _eachOfLimit(limit)(coll, wrapAsync(iteratee), callback);\n}\n","import noop from 'lodash-es/noop';\nimport once from './once';\n\nimport iterator from './iterator';\nimport onlyOnce from './onlyOnce';\n\nimport breakLoop from './breakLoop';\n\nexport default function _eachOfLimit(limit) {\n    return function (obj, iteratee, callback) {\n        callback = once(callback || noop);\n        if (limit <= 0 || !obj) {\n            return callback(null);\n        }\n        var nextElem = iterator(obj);\n        var done = false;\n        var running = 0;\n        var looping = false;\n\n        function iterateeCallback(err, value) {\n            running -= 1;\n            if (err) {\n                done = true;\n                callback(err);\n            }\n            else if (value === breakLoop || (done && running <= 0)) {\n                done = true;\n                return callback(null);\n            }\n            else if (!looping) {\n                replenish();\n            }\n        }\n\n        function replenish () {\n            looping = true;\n            while (running < limit && !done) {\n                var elem = nextElem();\n                if (elem === null) {\n                    done = true;\n                    if (running <= 0) {\n                        callback(null);\n                    }\n                    return;\n                }\n                running += 1;\n                iteratee(elem.value, elem.key, onlyOnce(iterateeCallback));\n            }\n            looping = false;\n        }\n\n        replenish();\n    };\n}\n","\n\nimport {DataValue} from './DataValue';\nimport {decodeDataValue} from './DataValue';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IHistoryData {\n\t\tdataValues? : DataValue[];\n}\n\n/**\n\n*/\n\nexport class HistoryData {\n \t\tdataValues : DataValue[];\n\n\tconstructor(\toptions? : IHistoryData) { \n\t\toptions = options || {};\n\t\tthis.dataValues= (options.dataValues) ? options.dataValues:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeArray(this.dataValues,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.dataValues = ec.decodeArray(inp,decodeDataValue);\n\n\t}\n\n\n\tclone(\ttarget? : HistoryData) : HistoryData { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryData();\n\t\t}\n\t\tif (this.dataValues) { target.dataValues = ec.cloneComplexArray(this.dataValues);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeHistoryData(\tinp : DataStream) : HistoryData { \n\t\tlet obj = new HistoryData();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryData\",HistoryData, makeExpandedNodeId(658,0));","\n\nimport {DataStream} from '../basic-types/DataStream';\n\nexport enum HistoryUpdateType {\n \t\tInsert = 1,\n\t\tReplace = 2,\n\t\tUpdate = 3,\n\t\tDelete = 4,\n\n}\n\nexport function encodeHistoryUpdateType(\tdata : HistoryUpdateType, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeHistoryUpdateType(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"HistoryUpdateType\",HistoryUpdateType,encodeHistoryUpdateType ,decodeHistoryUpdateType ,null);","\n\nimport * as ec from '../basic-types';\nimport {HistoryUpdateType, encodeHistoryUpdateType, decodeHistoryUpdateType} from './HistoryUpdateType';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IModificationInfo {\n\t\tmodificationTime? : Date;\n\t\tupdateType? : HistoryUpdateType;\n\t\tuserName? : string;\n}\n\n/**\n\n*/\n\nexport class ModificationInfo {\n \t\tmodificationTime : Date;\n\t\tupdateType : HistoryUpdateType;\n\t\tuserName : string;\n\n\tconstructor(\toptions? : IModificationInfo) { \n\t\toptions = options || {};\n\t\tthis.modificationTime= (options.modificationTime) ? options.modificationTime:null;\n\t\tthis.updateType= (options.updateType) ? options.updateType:null;\n\t\tthis.userName= (options.userName) ? options.userName:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeDateTime(this.modificationTime,out);\n\t\tencodeHistoryUpdateType(this.updateType,out);\n\t\tec.encodeString(this.userName,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.modificationTime = ec.decodeDateTime(inp);\n\t\tthis.updateType = decodeHistoryUpdateType(inp);\n\t\tthis.userName = ec.decodeString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ModificationInfo) : ModificationInfo { \n\t\tif(!target) {\n\t\t\ttarget = new ModificationInfo();\n\t\t}\n\t\ttarget.modificationTime = this.modificationTime;\n\t\ttarget.updateType = this.updateType;\n\t\ttarget.userName = this.userName;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeModificationInfo(\tinp : DataStream) : ModificationInfo { \n\t\tlet obj = new ModificationInfo();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ModificationInfo\",ModificationInfo, makeExpandedNodeId(11226,0));","\n\nimport * as ec from '../basic-types';\nimport {ModificationInfo} from './ModificationInfo';\nimport {decodeModificationInfo} from './ModificationInfo';\nimport {DataStream} from '../basic-types/DataStream';\nimport {HistoryData} from './HistoryData';\nimport {IHistoryData} from './HistoryData';\n\nexport interface IHistoryModifiedData extends IHistoryData {\n\t\tnoOfDataValues? : ec.Int32;\n\t\tmodificationInfos? : ModificationInfo[];\n}\n\n/**\n\n*/\n\nexport class HistoryModifiedData extends HistoryData {\n \t\tnoOfDataValues : ec.Int32;\n\t\tmodificationInfos : ModificationInfo[];\n\n\tconstructor(\toptions? : IHistoryModifiedData) { \n\t\toptions = options || {};\n\t\tsuper(options);\n\t\tthis.noOfDataValues= (options.noOfDataValues) ? options.noOfDataValues:null;\n\t\tthis.modificationInfos= (options.modificationInfos) ? options.modificationInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tsuper.encode(out);\n\t\tec.encodeInt32(this.noOfDataValues,out);\n\t\tec.encodeArray(this.modificationInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tsuper.decode(inp);\n\t\tthis.noOfDataValues = ec.decodeInt32(inp);\n\t\tthis.modificationInfos = ec.decodeArray(inp,decodeModificationInfo);\n\n\t}\n\n\n\tclone(\ttarget? : HistoryModifiedData) : HistoryModifiedData { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryModifiedData();\n\t\t}\n\t\tsuper.clone(target);\n\t\ttarget.noOfDataValues = this.noOfDataValues;\n\t\tif (this.modificationInfos) { target.modificationInfos = ec.cloneComplexArray(this.modificationInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeHistoryModifiedData(\tinp : DataStream) : HistoryModifiedData { \n\t\tlet obj = new HistoryModifiedData();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryModifiedData\",HistoryModifiedData, makeExpandedNodeId(11227,0));","\n\nimport * as ec from '../basic-types';\n/**\n\n*/\n\nexport class HistoryReadDetails {\n \n\tconstructor(){};\n\n\tclone(\ttarget? : HistoryReadDetails) : HistoryReadDetails { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryReadDetails();\n\t\t}\n\t\treturn target;\n\t}\n\n\n}\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryReadDetails\",HistoryReadDetails, makeExpandedNodeId(643,0));","\n\nimport * as ec from '../basic-types';\nimport {QualifiedName} from './QualifiedName';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IHistoryReadValueId {\n\t\tnodeId? : ec.NodeId;\n\t\tindexRange? : string;\n\t\tdataEncoding? : QualifiedName;\n\t\tcontinuationPoint? : Uint8Array;\n}\n\n/**\n\n*/\n\nexport class HistoryReadValueId {\n \t\tnodeId : ec.NodeId;\n\t\tindexRange : string;\n\t\tdataEncoding : QualifiedName;\n\t\tcontinuationPoint : Uint8Array;\n\n\tconstructor(\toptions? : IHistoryReadValueId) { \n\t\toptions = options || {};\n\t\tthis.nodeId= (options.nodeId) ? options.nodeId:null;\n\t\tthis.indexRange= (options.indexRange) ? options.indexRange:null;\n\t\tthis.dataEncoding= (options.dataEncoding) ? options.dataEncoding:new QualifiedName();\n\t\tthis.continuationPoint= (options.continuationPoint) ? options.continuationPoint:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.nodeId,out);\n\t\tec.encodeString(this.indexRange,out);\n\t\tthis.dataEncoding.encode(out);\n\t\tec.encodeByteString(this.continuationPoint,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.nodeId = ec.decodeNodeId(inp);\n\t\tthis.indexRange = ec.decodeString(inp);\n\t\tthis.dataEncoding.decode(inp);\n\t\tthis.continuationPoint = ec.decodeByteString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : HistoryReadValueId) : HistoryReadValueId { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryReadValueId();\n\t\t}\n\t\ttarget.nodeId = this.nodeId;\n\t\ttarget.indexRange = this.indexRange;\n\t\tif (this.dataEncoding) { target.dataEncoding = this.dataEncoding.clone();}\n\t\ttarget.continuationPoint = this.continuationPoint;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeHistoryReadValueId(\tinp : DataStream) : HistoryReadValueId { \n\t\tlet obj = new HistoryReadValueId();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryReadValueId\",HistoryReadValueId, makeExpandedNodeId(637,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IHistoryReadResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\tcontinuationPoint? : Uint8Array;\n\t\thistoryData? : ec.ExtensionObject;\n}\n\n/**\n\n*/\n\nexport class HistoryReadResult {\n \t\tstatusCode : ec.StatusCode;\n\t\tcontinuationPoint : Uint8Array;\n\t\thistoryData : ec.ExtensionObject;\n\n\tconstructor(\toptions? : IHistoryReadResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.continuationPoint= (options.continuationPoint) ? options.continuationPoint:null;\n\t\tthis.historyData= (options.historyData) ? options.historyData:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeByteString(this.continuationPoint,out);\n\t\tec.encodeExtensionObject(this.historyData,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.continuationPoint = ec.decodeByteString(inp);\n\t\tthis.historyData = ec.decodeExtensionObject(inp);\n\n\t}\n\n\n\tclone(\ttarget? : HistoryReadResult) : HistoryReadResult { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryReadResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.continuationPoint = this.continuationPoint;\n\t\ttarget.historyData = this.historyData;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeHistoryReadResult(\tinp : DataStream) : HistoryReadResult { \n\t\tlet obj = new HistoryReadResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryReadResult\",HistoryReadResult, makeExpandedNodeId(640,0));","\n\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IHistoryUpdateResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\toperationResults? : ec.StatusCode[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class HistoryUpdateResult {\n \t\tstatusCode : ec.StatusCode;\n\t\toperationResults : ec.StatusCode[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IHistoryUpdateResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.operationResults= (options.operationResults) ? options.operationResults:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeArray(this.operationResults,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.operationResults = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : HistoryUpdateResult) : HistoryUpdateResult { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryUpdateResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.operationResults = ec.cloneArray(this.operationResults);\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeHistoryUpdateResult(\tinp : DataStream) : HistoryUpdateResult { \n\t\tlet obj = new HistoryUpdateResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryUpdateResult\",HistoryUpdateResult, makeExpandedNodeId(697,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {TimestampsToReturn, encodeTimestampsToReturn, decodeTimestampsToReturn} from './TimestampsToReturn';\nimport {HistoryReadValueId} from './HistoryReadValueId';\nimport {decodeHistoryReadValueId} from './HistoryReadValueId';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IHistoryReadRequest {\n\t\trequestHeader? : RequestHeader;\n\t\thistoryReadDetails? : ec.ExtensionObject;\n\t\ttimestampsToReturn? : TimestampsToReturn;\n\t\treleaseContinuationPoints? : boolean;\n\t\tnodesToRead? : HistoryReadValueId[];\n}\n\n/**\n\n*/\n\nexport class HistoryReadRequest {\n \t\trequestHeader : RequestHeader;\n\t\thistoryReadDetails : ec.ExtensionObject;\n\t\ttimestampsToReturn : TimestampsToReturn;\n\t\treleaseContinuationPoints : boolean;\n\t\tnodesToRead : HistoryReadValueId[];\n\n\tconstructor(\toptions? : IHistoryReadRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.historyReadDetails= (options.historyReadDetails) ? options.historyReadDetails:null;\n\t\tthis.timestampsToReturn= (options.timestampsToReturn) ? options.timestampsToReturn:null;\n\t\tthis.releaseContinuationPoints= (options.releaseContinuationPoints) ? options.releaseContinuationPoints:null;\n\t\tthis.nodesToRead= (options.nodesToRead) ? options.nodesToRead:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeExtensionObject(this.historyReadDetails,out);\n\t\tencodeTimestampsToReturn(this.timestampsToReturn,out);\n\t\tec.encodeBoolean(this.releaseContinuationPoints,out);\n\t\tec.encodeArray(this.nodesToRead,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.historyReadDetails = ec.decodeExtensionObject(inp);\n\t\tthis.timestampsToReturn = decodeTimestampsToReturn(inp);\n\t\tthis.releaseContinuationPoints = ec.decodeBoolean(inp);\n\t\tthis.nodesToRead = ec.decodeArray(inp,decodeHistoryReadValueId);\n\n\t}\n\n\n\tclone(\ttarget? : HistoryReadRequest) : HistoryReadRequest { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryReadRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.historyReadDetails = this.historyReadDetails;\n\t\ttarget.timestampsToReturn = this.timestampsToReturn;\n\t\ttarget.releaseContinuationPoints = this.releaseContinuationPoints;\n\t\tif (this.nodesToRead) { target.nodesToRead = ec.cloneComplexArray(this.nodesToRead);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeHistoryReadRequest(\tinp : DataStream) : HistoryReadRequest { \n\t\tlet obj = new HistoryReadRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryReadRequest\",HistoryReadRequest, makeExpandedNodeId(664,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {HistoryReadResult} from './HistoryReadResult';\nimport {decodeHistoryReadResult} from './HistoryReadResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IHistoryReadResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : HistoryReadResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class HistoryReadResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : HistoryReadResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IHistoryReadResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeHistoryReadResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : HistoryReadResponse) : HistoryReadResponse { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryReadResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeHistoryReadResponse(\tinp : DataStream) : HistoryReadResponse { \n\t\tlet obj = new HistoryReadResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryReadResponse\",HistoryReadResponse, makeExpandedNodeId(667,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IHistoryUpdateRequest {\n\t\trequestHeader? : RequestHeader;\n\t\thistoryUpdateDetails? : ec.ExtensionObject[];\n}\n\n/**\n\n*/\n\nexport class HistoryUpdateRequest {\n \t\trequestHeader : RequestHeader;\n\t\thistoryUpdateDetails : ec.ExtensionObject[];\n\n\tconstructor(\toptions? : IHistoryUpdateRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.historyUpdateDetails= (options.historyUpdateDetails) ? options.historyUpdateDetails:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeArray(this.historyUpdateDetails,out,ec.encodeExtensionObject);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.historyUpdateDetails = ec.decodeArray(inp,ec.decodeExtensionObject);\n\n\t}\n\n\n\tclone(\ttarget? : HistoryUpdateRequest) : HistoryUpdateRequest { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryUpdateRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.historyUpdateDetails = ec.cloneArray(this.historyUpdateDetails);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeHistoryUpdateRequest(\tinp : DataStream) : HistoryUpdateRequest { \n\t\tlet obj = new HistoryUpdateRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryUpdateRequest\",HistoryUpdateRequest, makeExpandedNodeId(700,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {HistoryUpdateResult} from './HistoryUpdateResult';\nimport {decodeHistoryUpdateResult} from './HistoryUpdateResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IHistoryUpdateResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : HistoryUpdateResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class HistoryUpdateResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : HistoryUpdateResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IHistoryUpdateResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeHistoryUpdateResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : HistoryUpdateResponse) : HistoryUpdateResponse { \n\t\tif(!target) {\n\t\t\ttarget = new HistoryUpdateResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeHistoryUpdateResponse(\tinp : DataStream) : HistoryUpdateResponse { \n\t\tlet obj = new HistoryUpdateResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"HistoryUpdateResponse\",HistoryUpdateResponse, makeExpandedNodeId(703,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\nimport {HistoryReadDetails} from './HistoryReadDetails';\n\nexport interface IReadRawModifiedDetails {\n\t\tisReadModified? : boolean;\n\t\tstartTime? : Date;\n\t\tendTime? : Date;\n\t\tnumValuesPerNode? : ec.UInt32;\n\t\treturnBounds? : boolean;\n}\n\n/**\n\n*/\n\nexport class ReadRawModifiedDetails extends HistoryReadDetails {\n \t\tisReadModified : boolean;\n\t\tstartTime : Date;\n\t\tendTime : Date;\n\t\tnumValuesPerNode : ec.UInt32;\n\t\treturnBounds : boolean;\n\n\tconstructor(\toptions? : IReadRawModifiedDetails) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.isReadModified= (options.isReadModified) ? options.isReadModified:null;\n\t\tthis.startTime= (options.startTime) ? options.startTime:null;\n\t\tthis.endTime= (options.endTime) ? options.endTime:null;\n\t\tthis.numValuesPerNode= (options.numValuesPerNode) ? options.numValuesPerNode:null;\n\t\tthis.returnBounds= (options.returnBounds) ? options.returnBounds:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeBoolean(this.isReadModified,out);\n\t\tec.encodeDateTime(this.startTime,out);\n\t\tec.encodeDateTime(this.endTime,out);\n\t\tec.encodeUInt32(this.numValuesPerNode,out);\n\t\tec.encodeBoolean(this.returnBounds,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.isReadModified = ec.decodeBoolean(inp);\n\t\tthis.startTime = ec.decodeDateTime(inp);\n\t\tthis.endTime = ec.decodeDateTime(inp);\n\t\tthis.numValuesPerNode = ec.decodeUInt32(inp);\n\t\tthis.returnBounds = ec.decodeBoolean(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ReadRawModifiedDetails) : ReadRawModifiedDetails { \n\t\tif(!target) {\n\t\t\ttarget = new ReadRawModifiedDetails();\n\t\t}\n\t\ttarget.isReadModified = this.isReadModified;\n\t\ttarget.startTime = this.startTime;\n\t\ttarget.endTime = this.endTime;\n\t\ttarget.numValuesPerNode = this.numValuesPerNode;\n\t\ttarget.returnBounds = this.returnBounds;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeReadRawModifiedDetails(\tinp : DataStream) : ReadRawModifiedDetails { \n\t\tlet obj = new ReadRawModifiedDetails();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ReadRawModifiedDetails\",ReadRawModifiedDetails, makeExpandedNodeId(649,0));","\n\nimport * as ec from '../basic-types';\nimport {AggregateConfiguration} from './AggregateConfiguration';\nimport {DataStream} from '../basic-types/DataStream';\nimport {HistoryReadDetails} from './HistoryReadDetails';\n\nexport interface IReadProcessedDetails {\n\t\tstartTime? : Date;\n\t\tendTime? : Date;\n\t\tprocessingInterval? : ec.Double;\n\t\taggregateType? : ec.NodeId[];\n\t\taggregateConfiguration? : AggregateConfiguration;\n}\n\n/**\n\n*/\n\nexport class ReadProcessedDetails extends HistoryReadDetails {\n \t\tstartTime : Date;\n\t\tendTime : Date;\n\t\tprocessingInterval : ec.Double;\n\t\taggregateType : ec.NodeId[];\n\t\taggregateConfiguration : AggregateConfiguration;\n\n\tconstructor(\toptions? : IReadProcessedDetails) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.startTime= (options.startTime) ? options.startTime:null;\n\t\tthis.endTime= (options.endTime) ? options.endTime:null;\n\t\tthis.processingInterval= (options.processingInterval) ? options.processingInterval:null;\n\t\tthis.aggregateType= (options.aggregateType) ? options.aggregateType:[];\n\t\tthis.aggregateConfiguration= (options.aggregateConfiguration) ? options.aggregateConfiguration:new AggregateConfiguration();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeDateTime(this.startTime,out);\n\t\tec.encodeDateTime(this.endTime,out);\n\t\tec.encodeDouble(this.processingInterval,out);\n\t\tec.encodeArray(this.aggregateType,out,ec.encodeNodeId);\n\t\tthis.aggregateConfiguration.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.startTime = ec.decodeDateTime(inp);\n\t\tthis.endTime = ec.decodeDateTime(inp);\n\t\tthis.processingInterval = ec.decodeDouble(inp);\n\t\tthis.aggregateType = ec.decodeArray(inp,ec.decodeNodeId);\n\t\tthis.aggregateConfiguration.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ReadProcessedDetails) : ReadProcessedDetails { \n\t\tif(!target) {\n\t\t\ttarget = new ReadProcessedDetails();\n\t\t}\n\t\ttarget.startTime = this.startTime;\n\t\ttarget.endTime = this.endTime;\n\t\ttarget.processingInterval = this.processingInterval;\n\t\ttarget.aggregateType = ec.cloneArray(this.aggregateType);\n\t\tif (this.aggregateConfiguration) { target.aggregateConfiguration = this.aggregateConfiguration.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeReadProcessedDetails(\tinp : DataStream) : ReadProcessedDetails { \n\t\tlet obj = new ReadProcessedDetails();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ReadProcessedDetails\",ReadProcessedDetails, makeExpandedNodeId(652,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\nimport {HistoryReadDetails} from './HistoryReadDetails';\n\nexport interface IReadAtTimeDetails {\n\t\treqTimes? : Date[];\n\t\tuseSimpleBounds? : boolean;\n}\n\n/**\n\n*/\n\nexport class ReadAtTimeDetails extends HistoryReadDetails {\n \t\treqTimes : Date[];\n\t\tuseSimpleBounds : boolean;\n\n\tconstructor(\toptions? : IReadAtTimeDetails) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.reqTimes= (options.reqTimes) ? options.reqTimes:[];\n\t\tthis.useSimpleBounds= (options.useSimpleBounds) ? options.useSimpleBounds:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeArray(this.reqTimes,out,ec.encodeDateTime);\n\t\tec.encodeBoolean(this.useSimpleBounds,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.reqTimes = ec.decodeArray(inp,ec.decodeDateTime);\n\t\tthis.useSimpleBounds = ec.decodeBoolean(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ReadAtTimeDetails) : ReadAtTimeDetails { \n\t\tif(!target) {\n\t\t\ttarget = new ReadAtTimeDetails();\n\t\t}\n\t\ttarget.reqTimes = ec.cloneArray(this.reqTimes);\n\t\ttarget.useSimpleBounds = this.useSimpleBounds;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeReadAtTimeDetails(\tinp : DataStream) : ReadAtTimeDetails { \n\t\tlet obj = new ReadAtTimeDetails();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ReadAtTimeDetails\",ReadAtTimeDetails, makeExpandedNodeId(655,0));","\n\nimport * as ec from '../basic-types';\nimport {EventFilter} from './EventFilter';\nimport {DataStream} from '../basic-types/DataStream';\nimport {HistoryReadDetails} from './HistoryReadDetails';\n\nexport interface IReadEventDetails {\n\t\tnumValuesPerNode? : ec.UInt32;\n\t\tstartTime? : Date;\n\t\tendTime? : Date;\n\t\tfilter? : EventFilter;\n}\n\n/**\n\n*/\n\nexport class ReadEventDetails extends HistoryReadDetails {\n \t\tnumValuesPerNode : ec.UInt32;\n\t\tstartTime : Date;\n\t\tendTime : Date;\n\t\tfilter : EventFilter;\n\n\tconstructor(\toptions? : IReadEventDetails) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.numValuesPerNode= (options.numValuesPerNode) ? options.numValuesPerNode:null;\n\t\tthis.startTime= (options.startTime) ? options.startTime:null;\n\t\tthis.endTime= (options.endTime) ? options.endTime:null;\n\t\tthis.filter= (options.filter) ? options.filter:new EventFilter();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.numValuesPerNode,out);\n\t\tec.encodeDateTime(this.startTime,out);\n\t\tec.encodeDateTime(this.endTime,out);\n\t\tthis.filter.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.numValuesPerNode = ec.decodeUInt32(inp);\n\t\tthis.startTime = ec.decodeDateTime(inp);\n\t\tthis.endTime = ec.decodeDateTime(inp);\n\t\tthis.filter.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ReadEventDetails) : ReadEventDetails { \n\t\tif(!target) {\n\t\t\ttarget = new ReadEventDetails();\n\t\t}\n\t\ttarget.numValuesPerNode = this.numValuesPerNode;\n\t\ttarget.startTime = this.startTime;\n\t\ttarget.endTime = this.endTime;\n\t\tif (this.filter) { target.filter = this.filter.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeReadEventDetails(\tinp : DataStream) : ReadEventDetails { \n\t\tlet obj = new ReadEventDetails();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ReadEventDetails\",ReadEventDetails, makeExpandedNodeId(646,0));","import root from './_root.js';\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nexport default Symbol;\n","import Symbol from './_Symbol.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nexport default getRawTag;\n","/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nexport default objectToString;\n","import Symbol from './_Symbol.js';\nimport getRawTag from './_getRawTag.js';\nimport objectToString from './_objectToString.js';\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nexport default baseGetTag;\n","/*\n* loglevel - https://github.com/pimterry/loglevel\n*\n* Copyright (c) 2013 Tim Perry\n* Licensed under the MIT license.\n*/\n(function (root, definition) {\n    \"use strict\";\n    if (typeof define === 'function' && define.amd) {\n        define(definition);\n    } else if (typeof module === 'object' && module.exports) {\n        module.exports = definition();\n    } else {\n        root.log = definition();\n    }\n}(this, function () {\n    \"use strict\";\n\n    // Slightly dubious tricks to cut down minimized file size\n    var noop = function() {};\n    var undefinedType = \"undefined\";\n\n    var logMethods = [\n        \"trace\",\n        \"debug\",\n        \"info\",\n        \"warn\",\n        \"error\"\n    ];\n\n    // Cross-browser bind equivalent that works at least back to IE6\n    function bindMethod(obj, methodName) {\n        var method = obj[methodName];\n        if (typeof method.bind === 'function') {\n            return method.bind(obj);\n        } else {\n            try {\n                return Function.prototype.bind.call(method, obj);\n            } catch (e) {\n                // Missing bind shim or IE8 + Modernizr, fallback to wrapping\n                return function() {\n                    return Function.prototype.apply.apply(method, [obj, arguments]);\n                };\n            }\n        }\n    }\n\n    // Build the best logging method possible for this env\n    // Wherever possible we want to bind, not wrap, to preserve stack traces\n    function realMethod(methodName) {\n        if (methodName === 'debug') {\n            methodName = 'log';\n        }\n\n        if (typeof console === undefinedType) {\n            return false; // No method possible, for now - fixed later by enableLoggingWhenConsoleArrives\n        } else if (console[methodName] !== undefined) {\n            return bindMethod(console, methodName);\n        } else if (console.log !== undefined) {\n            return bindMethod(console, 'log');\n        } else {\n            return noop;\n        }\n    }\n\n    // These private functions always need `this` to be set properly\n\n    function replaceLoggingMethods(level, loggerName) {\n        /*jshint validthis:true */\n        for (var i = 0; i < logMethods.length; i++) {\n            var methodName = logMethods[i];\n            this[methodName] = (i < level) ?\n                noop :\n                this.methodFactory(methodName, level, loggerName);\n        }\n\n        // Define log.log as an alias for log.debug\n        this.log = this.debug;\n    }\n\n    // In old IE versions, the console isn't present until you first open it.\n    // We build realMethod() replacements here that regenerate logging methods\n    function enableLoggingWhenConsoleArrives(methodName, level, loggerName) {\n        return function () {\n            if (typeof console !== undefinedType) {\n                replaceLoggingMethods.call(this, level, loggerName);\n                this[methodName].apply(this, arguments);\n            }\n        };\n    }\n\n    // By default, we use closely bound real methods wherever possible, and\n    // otherwise we wait for a console to appear, and then try again.\n    function defaultMethodFactory(methodName, level, loggerName) {\n        /*jshint validthis:true */\n        return realMethod(methodName) ||\n               enableLoggingWhenConsoleArrives.apply(this, arguments);\n    }\n\n    function Logger(name, defaultLevel, factory) {\n      var self = this;\n      var currentLevel;\n      var storageKey = \"loglevel\";\n      if (name) {\n        storageKey += \":\" + name;\n      }\n\n      function persistLevelIfPossible(levelNum) {\n          var levelName = (logMethods[levelNum] || 'silent').toUpperCase();\n\n          if (typeof window === undefinedType) return;\n\n          // Use localStorage if available\n          try {\n              window.localStorage[storageKey] = levelName;\n              return;\n          } catch (ignore) {}\n\n          // Use session cookie as fallback\n          try {\n              window.document.cookie =\n                encodeURIComponent(storageKey) + \"=\" + levelName + \";\";\n          } catch (ignore) {}\n      }\n\n      function getPersistedLevel() {\n          var storedLevel;\n\n          if (typeof window === undefinedType) return;\n\n          try {\n              storedLevel = window.localStorage[storageKey];\n          } catch (ignore) {}\n\n          // Fallback to cookies if local storage gives us nothing\n          if (typeof storedLevel === undefinedType) {\n              try {\n                  var cookie = window.document.cookie;\n                  var location = cookie.indexOf(\n                      encodeURIComponent(storageKey) + \"=\");\n                  if (location !== -1) {\n                      storedLevel = /^([^;]+)/.exec(cookie.slice(location))[1];\n                  }\n              } catch (ignore) {}\n          }\n\n          // If the stored level is not valid, treat it as if nothing was stored.\n          if (self.levels[storedLevel] === undefined) {\n              storedLevel = undefined;\n          }\n\n          return storedLevel;\n      }\n\n      /*\n       *\n       * Public logger API - see https://github.com/pimterry/loglevel for details\n       *\n       */\n\n      self.name = name;\n\n      self.levels = { \"TRACE\": 0, \"DEBUG\": 1, \"INFO\": 2, \"WARN\": 3,\n          \"ERROR\": 4, \"SILENT\": 5};\n\n      self.methodFactory = factory || defaultMethodFactory;\n\n      self.getLevel = function () {\n          return currentLevel;\n      };\n\n      self.setLevel = function (level, persist) {\n          if (typeof level === \"string\" && self.levels[level.toUpperCase()] !== undefined) {\n              level = self.levels[level.toUpperCase()];\n          }\n          if (typeof level === \"number\" && level >= 0 && level <= self.levels.SILENT) {\n              currentLevel = level;\n              if (persist !== false) {  // defaults to true\n                  persistLevelIfPossible(level);\n              }\n              replaceLoggingMethods.call(self, level, name);\n              if (typeof console === undefinedType && level < self.levels.SILENT) {\n                  return \"No console available for logging\";\n              }\n          } else {\n              throw \"log.setLevel() called with invalid level: \" + level;\n          }\n      };\n\n      self.setDefaultLevel = function (level) {\n          if (!getPersistedLevel()) {\n              self.setLevel(level, false);\n          }\n      };\n\n      self.enableAll = function(persist) {\n          self.setLevel(self.levels.TRACE, persist);\n      };\n\n      self.disableAll = function(persist) {\n          self.setLevel(self.levels.SILENT, persist);\n      };\n\n      // Initialize with the right level\n      var initialLevel = getPersistedLevel();\n      if (initialLevel == null) {\n          initialLevel = defaultLevel == null ? \"WARN\" : defaultLevel;\n      }\n      self.setLevel(initialLevel, false);\n    }\n\n    /*\n     *\n     * Top-level API\n     *\n     */\n\n    var defaultLogger = new Logger();\n\n    var _loggersByName = {};\n    defaultLogger.getLogger = function getLogger(name) {\n        if (typeof name !== \"string\" || name === \"\") {\n          throw new TypeError(\"You must supply a name when creating a logger.\");\n        }\n\n        var logger = _loggersByName[name];\n        if (!logger) {\n          logger = _loggersByName[name] = new Logger(\n            name, defaultLogger.getLevel(), defaultLogger.methodFactory);\n        }\n        return logger;\n    };\n\n    // Grab the current global log variable in case of overwrite\n    var _log = (typeof window !== undefinedType) ? window.log : undefined;\n    defaultLogger.noConflict = function() {\n        if (typeof window !== undefinedType &&\n               window.log === defaultLogger) {\n            window.log = _log;\n        }\n\n        return defaultLogger;\n    };\n\n    defaultLogger.getLoggers = function getLoggers() {\n        return _loggersByName;\n    };\n\n    return defaultLogger;\n}));\n","\"use strict\";\r\n\r\nimport {assert} from \"../assert\";\r\n\r\nimport {DataType} from './DataTypeEnum';\r\nimport {VariantArrayType} from './VariantArrayTypeEnum';\r\nimport {makeNodeId} from '../nodeid/nodeid';\r\nimport {makeExpandedNodeId} from '../nodeid/expanded_nodeid';\r\n\r\nimport {_defaultTypeMap} from '../factory/factories_builtin_types';\r\nimport * as ec from '../basic-types';\r\nvar encodeArray = ec.encodeArray;\r\nvar decodeArray = ec.decodeArray;\r\n\r\n\r\nimport {_enumerations} from '../factory/factories_enumerations';\r\n\r\nimport {getFactory} from '../factory/factories_factories';\r\nimport {BaseUAObject} from '../factory/factories_baseobject';\r\nimport { DataStream } from \"../basic-types/DataStream\";\r\nimport { UInt32 } from \"../basic-types\";\r\n\r\n\r\nvar Variant_ArrayMask = 0x80;\r\nvar Variant_ArrayDimensionsMask = 0x40;\r\nvar Variant_TypeMask = 0x3F;\r\n\r\nexport interface IVariant {\r\n    dataType? : DataType;\r\n    arrayType? : VariantArrayType;\r\n    value? : any;\r\n    dimensions? : UInt32[];\r\n}\r\n \r\n/**\r\n * \r\n * @class Variant\r\n * @constructor\r\n * @extends BaseUAObject\r\n * @param  options {Object}\r\n * @param  [options.dataType = 0] {DataType} the variant type.\r\n * @param  [options.arrayType = 0] {VariantArrayType} \r\n * @param  [options.value = null] {Any} \r\n * @param  [options.dimensions = null] {UInt32[]} the matrix dimensions\r\n */\r\nexport class Variant extends BaseUAObject {\r\n\r\npublic dataType : DataType = DataType.Null;\r\npublic arrayType : VariantArrayType = VariantArrayType.Scalar;\r\npublic value : any;\r\npublic dimensions : UInt32[] = null;\r\n\r\nconstructor(options? : IVariant)\r\n{\r\n    super();\r\n    options = <any>options || {};\r\n\r\n    /**\r\n      * the variant type.\r\n      * @property dataType\r\n      * @type {DataType}\r\n      * @default  0\r\n      */\r\n     if (options.dataType !== undefined) {\r\n        this.setDataType(options.dataType);\r\n     }\r\n\r\n    /**\r\n      * \r\n      * @property arrayType\r\n      * @type {VariantArrayType}\r\n      * @default  0\r\n      */\r\n     if (options.arrayType !== undefined) {\r\n        this.setArrayType(options.arrayType);\r\n     }\r\n\r\n    /**\r\n      * \r\n      * @property value\r\n      * @type {Any}\r\n      * @default  null\r\n      */\r\n     if (options.value !== undefined) {\r\n        this.value = options.value;\r\n     }\r\n\r\n    /**\r\n      * the matrix dimensions\r\n      * @property dimensions\r\n      * @type {UInt32[]}\r\n      * @default  null\r\n      */\r\n    if (options.dimensions !== undefined) {\r\n    this.dimensions = options.dimensions;\r\n    }\r\n\r\n   // Object.preventExtensions(self);\r\n}\r\n\r\n//## Define Enumeration setters\r\npublic setDataType(value : number | DataType) {\r\n    if ( !(value in DataType)) {\r\n        throw new Error(\"value cannot be coerced to DataType: \" + value);\r\n    }\r\n\r\n   this.dataType = value;\r\n};\r\n\r\npublic setArrayType(value : number| VariantArrayType) {\r\n    if (! (value in VariantArrayType)) {\r\n        throw new Error(\"value cannot be coerced to VariantArrayType: \" + value);\r\n    }\r\n\r\n   this.arrayType = value;\r\n};\r\n\r\n\r\n// Variant.prototype.encodingDefaultBinary = makeExpandedNodeId(schema.id);\r\n// Variant.prototype._schema = schema;\r\n\r\n// var encode_DataType = _enumerations.DataType.encode;\r\n// var decode_DataType = _enumerations.DataType.decode;\r\n// var encode_VariantArrayType = _enumerations.VariantArrayType.encode;\r\n// var decode_VariantArrayType = _enumerations.VariantArrayType.decode;\r\n// var encode_Any = _defaultTypeMap.Any.encode;\r\n// var decode_Any = _defaultTypeMap.Any.decode;\r\n// var encode_UInt32 = _defaultTypeMap.UInt32.encode;\r\n// var decode_UInt32 = _defaultTypeMap.UInt32.decode;\r\npublic encode(out : DataStream) {\r\n    var encodingByte = this.dataType;\r\n\r\n    if (this.arrayType === VariantArrayType.Array || this.arrayType === VariantArrayType.Matrix) {\r\n        encodingByte |= Variant_ArrayMask;\r\n    }\r\n    if (this.dimensions) {\r\n        encodingByte |= Variant_ArrayDimensionsMask;\r\n    }\r\n    ec.encodeUInt8(encodingByte, out);\r\n\r\n    if (this.arrayType === VariantArrayType.Array || this.arrayType === VariantArrayType.Matrix) {\r\n        encodeVariantArray(this.dataType, out, this.value);\r\n    }\r\n    else {\r\n        var encode = get_encoder(this.dataType);\r\n        encode(this.value, out);\r\n    }\r\n\r\n    if (this.dimensions) {\r\n        encodeGeneralArray(DataType.UInt32, out, this.dimensions);\r\n    }\r\n};\r\n/**\r\n * decode the object from a binary stream\r\n * @method decode\r\n *\r\n * @param stream {DataStream} \r\n * @param [option] {object} \r\n */\r\npublic decode(inp : DataStream) {\r\n    var encodingByte = ec.decodeUInt8(inp);\r\n\r\n    var isArray = ((encodingByte & Variant_ArrayMask) === Variant_ArrayMask);\r\n\r\n    var hasDimension = (( encodingByte & Variant_ArrayDimensionsMask  ) === Variant_ArrayDimensionsMask);\r\n\r\n    this.dataType = encodingByte & Variant_TypeMask;\r\n\r\n    if (! (this.dataType in DataType)) {\r\n        throw new Error(\"cannot find DataType for encodingByte = 0x\" + (encodingByte & Variant_TypeMask).toString(16));\r\n    }\r\n    if (isArray) {\r\n        this.arrayType = hasDimension ? VariantArrayType.Matrix : VariantArrayType.Array;\r\n        this.value = decodeVariantArray(this.dataType, inp);\r\n    }\r\n    else {\r\n        this.arrayType = VariantArrayType.Scalar;\r\n        var decode = get_decoder(this.dataType);\r\n        this.value = decode(inp);\r\n    }\r\n    if (hasDimension) {\r\n        this.dimensions = decodeGeneralArray(DataType.UInt32, inp);\r\n        var verification = calculate_product(this.dimensions);\r\n        if (verification !== this.value.length) {\r\n            throw new Error(\"BadDecodingError\");\r\n        }\r\n    }\r\n};\r\n\r\npublic coerceVariant(variantLike : any) {\r\n    var value =  (variantLike instanceof Variant) ? variantLike : new Variant(variantLike);\r\n    assert(value instanceof Variant);\r\n    return value;\r\n}\r\n\r\n/**\r\n * @method clone\r\n *   deep clone a variant\r\n *\r\n * @return {Variant}\r\n */\r\npublic clone() : Variant {\r\n    return new Variant(this);\r\n};\r\n\r\n\r\n}\r\n\r\nimport {register_class_definition} from '../factory/factories_factories';\r\nimport {registerSpecialVariantEncoder} from '../factory/factories_builtin_types_special';\r\nimport { DataTypeNode } from \"../generated/DataTypeNode\";\r\nregister_class_definition(\"Variant\",Variant,makeExpandedNodeId(generate_new_id()));\r\nregisterSpecialVariantEncoder(Variant,\"Variant\");\r\n\r\n\r\n\r\n\r\nexport function isValidVariant(arrayType : VariantArrayType, dataType : DataType, value, dimensions) {\r\n\r\n    assert(dataType,\"expecting a variant type\");\r\n\r\n    switch (arrayType) {\r\n        case VariantArrayType.Scalar:\r\n            return isValidScalarVariant(dataType, value);\r\n        case VariantArrayType.Array:\r\n            return isValidArrayVariant(dataType, value);\r\n        default:\r\n            assert(arrayType === VariantArrayType.Matrix);\r\n            return isValidMatrixVariant(dataType, value, dimensions);\r\n    }\r\n}\r\n\r\nfunction isValidScalarVariant(dataType, value) : boolean{\r\n\r\n    assert(value === null || DataType.Int64 === dataType || DataType.ByteString === dataType || DataType.UInt64 === dataType || !(value instanceof Array));\r\n    assert(value === null || !(value instanceof Int32Array));\r\n    assert(value === null || !(value instanceof Uint32Array));\r\n    switch (dataType) {\r\n        case DataType.NodeId:\r\n            return ec.isValidNodeId(value);\r\n        case DataType.String:\r\n            return typeof value === \"string\" || value === null || value === undefined;\r\n        case DataType.Int64:\r\n            return ec.isValidInt64(value);\r\n        case DataType.UInt64:\r\n            return ec.isValidUInt64(value);\r\n        case DataType.UInt32:\r\n            return ec.isValidUInt32(value);\r\n        case DataType.Int32:\r\n            return ec.isValidInt32(value);\r\n        case DataType.UInt16:\r\n            return ec.isValidUInt16(value);\r\n        case DataType.Int16:\r\n            return ec.isValidInt16(value);\r\n        case DataType.Byte:\r\n            return ec.isValidUInt8(value);\r\n        case DataType.SByte:\r\n            return ec.isValidInt8(value);\r\n        case DataType.Boolean:\r\n            return ec.isValidBoolean(value);\r\n        case DataType.ByteString:\r\n            return ec.isValidByteString(value);\r\n        default:\r\n            return true;\r\n    }\r\n}\r\n\r\nfunction isValidArrayVariant(dataType, value)  : boolean{\r\n\r\n    if (dataType === DataType.Float && value instanceof Float32Array) {\r\n        return true;\r\n    } else if (dataType === DataType.Double && value instanceof Float64Array) {\r\n        return true;\r\n    } else if (dataType === DataType.SByte && ( value instanceof Int8Array )) {\r\n        return true;\r\n    } else if (dataType === DataType.Byte && ( value instanceof Uint8Array /*|| value instanceof Buffer*/ )) {\r\n        return true;\r\n    } else if (dataType === DataType.Int16 && value instanceof Int16Array) {\r\n        return true;\r\n    } else if (dataType === DataType.Int32 && value instanceof Int32Array) {\r\n        return true;\r\n    } else if (dataType === DataType.UInt16 && value instanceof Uint16Array) {\r\n        return true;\r\n    } else if (dataType === DataType.UInt32 && value instanceof Uint32Array) {\r\n        return true;\r\n    }\r\n    // array values can be store in Buffer, Float32Array\r\n    assert(Array.isArray(value));\r\n    for (var i=0;i<value.length;i++) {\r\n        if (!isValidScalarVariant(dataType, value[i])) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n\r\n/*istanbul ignore next*/\r\nfunction isValidMatrixVariant(dataType,value,dimensions) : boolean{\r\n\r\n    if(!dimensions) {\r\n        return false;\r\n    }\r\n    if (!isValidArrayVariant(dataType,value)) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n\r\n\r\nimport {findBuiltInType} from '../factory/factories_builtin_types';\r\nimport { generate_new_id } from \"../factory\";\r\nfunction get_encoder(dataType : DataType) {\r\n    var encode = findBuiltInType(DataType[dataType]).encode;\r\n    /* istanbul ignore next */\r\n    if (!encode) {\r\n        throw new Error(\"Cannot find encode function for dataType \" + dataType);\r\n    }\r\n    return encode;\r\n}\r\n\r\nfunction get_decoder(dataType : DataType) {\r\n    var decode = findBuiltInType(DataType[dataType]).decode;\r\n    /* istanbul ignore next */\r\n    if (!decode) {\r\n        throw new Error(\"Variant.decode : cannot find decoder for type \" + dataType);\r\n    }\r\n    return decode;\r\n}\r\n\r\n\r\nfunction encodeGeneralArray(dataType : DataType, stream, value) {\r\n\r\n    var arr = value || [];\r\n    assert(arr instanceof Array);\r\n    assert(Number.isFinite(arr.length));\r\n    ec.encodeUInt32(arr.length, stream);\r\n    var encode = get_encoder(dataType);\r\n    var i, n = arr.length;\r\n    for (i = 0; i < n; i++) {\r\n        encode(arr[i], stream);\r\n    }\r\n}\r\n\r\nfunction encodeVariantArray(dataType, stream : DataStream, value) {\r\n\r\n    if (value.buffer && value.buffer instanceof ArrayBuffer) {\r\n        try {\r\n            ec.encodeUInt32(value.length, stream);\r\n            stream.writeArrayBuffer(value.buffer, value.byteOffset, value.byteLength);\r\n        } catch (err) {\r\n            console.log(\"DATATYPE: \" + dataType);\r\n            console.log(\"value: \" + value.length);\r\n        }\r\n    }\r\n    return encodeGeneralArray(dataType, stream, value);\r\n}\r\n\r\nfunction decodeGeneralArray(dataType, stream) {\r\n\r\n    var length = ec.decodeUInt32(stream);\r\n\r\n    if (length === 0xFFFFFFFF) {\r\n        return null;\r\n    }\r\n\r\n    var decode = get_decoder(dataType);\r\n\r\n    var arr = [];\r\n    for (var i = 0; i < length; i++) {\r\n        arr.push(decode(stream));\r\n    }\r\n    return arr;\r\n}\r\n\r\nfunction decodeVariantArray(dataType : DataType, stream : DataStream) {\r\n\r\n    let length = ec.decodeUInt32(stream);\r\n    if (length === 0xFFFFFFFF) {\r\n        return null;\r\n    }\r\n    switch(dataType) {\r\n        case DataType.Float:\r\n            return new Float32Array(stream.readArrayBuffer(length * Float32Array.BYTES_PER_ELEMENT));\r\n        case DataType.Double:\r\n            return new Float64Array(stream.readArrayBuffer(length * Float64Array.BYTES_PER_ELEMENT));\r\n        case DataType.SByte:\r\n            return new Int8Array(stream.readArrayBuffer(length));\r\n        case DataType.Byte:\r\n            return stream.readArrayBuffer(length);\r\n        case DataType.Int16:\r\n            return new Int16Array(stream.readArrayBuffer(length * Int16Array.BYTES_PER_ELEMENT));\r\n        case DataType.Int32:\r\n            return new Int32Array(stream.readArrayBuffer(length * Int32Array.BYTES_PER_ELEMENT));\r\n        case DataType.UInt16:\r\n            return new Uint16Array(stream.readArrayBuffer(length * Uint32Array.BYTES_PER_ELEMENT));\r\n        case DataType.UInt32:\r\n            return new Uint32Array(stream.readArrayBuffer(length * Uint32Array.BYTES_PER_ELEMENT));\r\n       //() case DataType.UInt64: ?\r\n           \r\n    }\r\n\r\n    return decodeGeneralArray(dataType, stream);\r\n}\r\n\r\nfunction calculate_product(array) {\r\n    return array.reduce(function (n, p) {\r\n        return n * p;\r\n    }, 1);\r\n}\r\n\r\nexport function decodeVariant(\tinp : DataStream) : Variant { \r\n    let obj = new Variant(null);\r\n        obj.decode(inp); \r\n        return obj;\r\n\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","var scope = (typeof global !== \"undefined\" && global) ||\n            (typeof self !== \"undefined\" && self) ||\n            window;\nvar apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, scope, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, scope, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(scope, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\n// On some exotic environments, it's not clear which object `setimmediate` was\n// able to install onto.  Search each possibility in the same order as the\n// `setimmediate` library.\nexports.setImmediate = (typeof self !== \"undefined\" && self.setImmediate) ||\n                       (typeof global !== \"undefined\" && global.setImmediate) ||\n                       (this && this.setImmediate);\nexports.clearImmediate = (typeof self !== \"undefined\" && self.clearImmediate) ||\n                         (typeof global !== \"undefined\" && global.clearImmediate) ||\n                         (this && this.clearImmediate);\n","\"use strict\";\r\nimport {assert} from \"../assert\";\r\n\r\nexport function offset_factor_1601() {\r\n\r\n    var utc1600 = new Date(Date.UTC(1601, 0, 1, 0, 0, 0));\r\n    var t1600 = utc1600.getTime();\r\n\r\n    var utc1600_plus_one_day = new Date(Date.UTC(1601, 0, 2, 0, 0, 0));\r\n    var t1600_1d = utc1600_plus_one_day.getTime();\r\n\r\n    var factor = (24 * 60 * 60 * 1000) * 10000 / (t1600_1d - t1600);\r\n\r\n    var utc1970 = new Date(Date.UTC(1970, 0, 1, 0, 0, 0));\r\n    var t1970 = utc1970.getTime();\r\n\r\n    var offsetToGregorianCalendarZero = -t1600 + t1970;\r\n\r\n    assert(factor === 10000);\r\n    assert(offsetToGregorianCalendarZero === 11644473600000);\r\n    return [offsetToGregorianCalendarZero, factor];\r\n\r\n};\r\n\r\nvar offset = offset_factor_1601[0];\r\nvar factor = offset_factor_1601[1];\r\n\r\nvar F = 0x100000000;\r\nvar A = factor / F;\r\nvar B = offset * A;\r\nvar oh = Math.floor(offset / F);\r\nvar ol = offset % F;\r\nvar fl = factor % F;\r\nvar F_div_factor = (F / factor);\r\n\r\n// Extracted from OpcUA Spec v1.02 : part 6:\r\n//\r\n// 5.2.2.5 DateTime\r\n// A DateTime value shall be encoded as a 64-bit signed integer (see Clause 5.2.2.2) which represents\r\n// the number of 100 nanosecond intervals since January 1, 1601 (UTC) .\r\n// Not all DevelopmentPlatforms will be able to represent the full range of dates and times that can be\r\n// represented with this DataEncoding. For example, the UNIX time_t structure only has a 1 second\r\n// resolution and cannot represent dates prior to 1970. For this reason, a number of rules shall be\r\n// applied when dealing with date/time values that exceed the dynamic range of a DevelopmentPlatform.\r\n//\r\n// These rules are:\r\n// a) A date/time value is encoded as 0 if either\r\n//    1) The value is equal to or earlier than 1601-01-01 12:00AM.\r\n//    2) The value is the earliest date that can be represented with the DevelopmentPlatform‟s encoding.\r\n//\r\n// b) A date/time is encoded as the maximum value for an Int64 if either\r\n//     1) The value is equal to or greater than 9999-01-01 11:59:59PM,\r\n//     2) The value is the latest date that can be represented with the DevelopmentPlatform‟s encoding.\r\n//\r\n// c) A date/time is decoded as the earliest time that can be represented on the platform if either\r\n//    1) The encoded value is 0,\r\n//    2) The encoded value represents a time earlier than the earliest time that can be\r\n//       represented with the DevelopmentPlatform‟s encoding.\r\n//\r\n//  d) A date/time is decoded as the latest time that can be represented on the platform if either\r\n//    1) The encoded value is the maximum value for an Int64,\r\n//    2) The encoded value represents a time later than the latest time that can be represented with the\r\n//       DevelopmentPlatform‟s encoding.\r\n//\r\n// These rules imply that the earliest and latest times that can be represented on a given platform are\r\n// invalid date/time values and should be treated that way by Applications.\r\n// A decoder shall truncate the value if a decoder encounters a DateTime value with a resolution that is\r\n// greater than the resolution supported on the DevelopmentPlatform.\r\n//\r\n/**\r\n *\r\n * @param date {Date}\r\n * @returns {[high,low]}\r\n */\r\nexport function bn_dateToHundredNanoSecondFrom1601_fast(date: Date): number[] {\r\n    assert(date instanceof Date);\r\n    if ((<any>date).high_low) {\r\n         return (<any>date).high_low;\r\n    }\r\n\r\n    // note : The value returned by the getTime method is the number\r\n    //        of milliseconds since 1 January 1970 00:00:00 UTC.\r\n    //\r\n    var t = date.getTime(); // number of milliseconds since since 1 January 1970 00:00:00 UTC.\r\n\r\n    //Note:\r\n    // The number of 100-nano since 1 Jan 1601 is given by the formula :\r\n    //\r\n    //           value_64 = (t + offset ) * factor;\r\n    //\r\n    // However this number is too large and shall be converted to a 64 bits integer\r\n    //\r\n    // Let say that value_64 = (value_h * 0xFFFFFFFF ) + value_l, where value_h and value_l are two 32bits integers.\r\n    //\r\n    //  Let say F = 0x100000000\r\n    //  (value_h * F ) + value_l =  (t+ offset)*factor;\r\n    //\r\n    //  value_h =  (t+ offset)*factor // F;\r\n    //  value_l =  (t+ offset)*factor %  F;\r\n    //\r\n    //  value_h =  floor(t * factor / F + offset*factor / F)\r\n    //             floor(t * A                    + B)\r\n    //\r\n    //  value_l = ((t % F + offset % F) * (factor % F) )% F\r\n    //  value_l = ((t % F + ol        ) * fl           )% F\r\n\r\n    var value_h = Math.floor(t * A + B);\r\n    var value_l = ((t % F + ol) * fl) % F;\r\n    value_l = (value_l + F) % F;\r\n    var high_low = [value_h, value_l];\r\n    (<any>date).high_low = high_low;\r\n    return high_low;\r\n}\r\n\r\nexport function bn_hundredNanoSecondFrom1601ToDate_fast(high : number, low : number) {\r\n    //xx assert(_.isFinite(high), _.isFinite(low));\r\n\r\n    //   (h * F + l)/f    - o=\r\n    //    h / f * F + l/f - o=\r\n    //\r\n    //    h   = ((h div f)* f + h % f)\r\n    //    h/f =     (h div f)   + (h % f) /f\r\n    //    h/f * F = (h div f)*F + (h % f) * F/f\r\n    //    o = oh * F + ol\r\n    var value1 = (Math.floor(high / factor) - oh) * F + Math.floor((high % factor) * F_div_factor + low / factor) - ol;\r\n    var date = new Date(value1);\r\n\r\n    // enrich the date\r\n    (<any>date).high_low = [high,low];\r\n    //xxObject.defineProperty(date, \"high_low\", {\r\n    //xx    get: function () {\r\n    //xx        return [high, low];\r\n    //xx    }, enumerable: false\r\n    //xx});\r\n\r\n    return date;\r\n}\r\n\r\n\r\nvar last_now_date = null;\r\nvar last_picoseconds = 0;\r\n\r\nexport function getCurrentClock() {\r\n    var now = new Date();\r\n    if (last_now_date && now.getTime() === last_now_date.getTime()) {\r\n        last_picoseconds += 1;\r\n    } else {\r\n        last_picoseconds = 1;\r\n        last_now_date = now;\r\n    }\r\n    return {\r\n        timestamp: last_now_date,\r\n        picoseconds: last_picoseconds\r\n    };\r\n}\r\n\r\nexport function coerceClock(timestamp, picoseconds) {\r\n    if (timestamp) {\r\n        return {\r\n            timestamp: timestamp,\r\n            picoseconds: picoseconds\r\n        };\r\n    } else {\r\n        return getCurrentClock();\r\n    }\r\n}\r\n","\"use strict\";\r\nimport {assert} from '../assert';\r\n\r\n\r\nimport {DataValue} from '../generated/DataValue';\r\nimport {DataType} from '../variant/DataTypeEnum';\r\n\r\n\r\nimport {TimestampsToReturn} from '../generated/TimestampsToReturn';\r\n\r\nimport {registerSpecialVariantEncoder} from '../factory';\r\n\r\nregisterSpecialVariantEncoder(DataValue,\"DataValue\");\r\n\r\nimport {getCurrentClock,coerceClock} from '../date-time/date_time';\r\n\r\nimport {Variant,sameVariant,VariantArrayType} from '../variant';\r\n\r\n\r\n// DataValue.prototype.toString = function () {\r\n//     var str = \"DataValue:\";\r\n//     if (this.value) {\r\n//         str += \"\\n   value:           \" + Variant.prototype.toString.apply(this.value);//this.value.toString();\r\n//     } else {\r\n//         str += \"\\n   value:            <null>\";\r\n//     }\r\n//     str += \"\\n   statusCode:      \" + (this.statusCode ? this.statusCode.toString() : \"null\");\r\n//     str += \"\\n   serverTimestamp: \" + (this.serverTimestamp ? this.serverTimestamp.toISOString() + \" $ \" + this.serverPicoseconds : \"null\");//+ \"  \" + (this.serverTimestamp ? this.serverTimestamp.getTime() :\"-\");\r\n//     str += \"\\n   sourceTimestamp: \" + (this.sourceTimestamp ? this.sourceTimestamp.toISOString() + \" $ \" + this.sourcePicoseconds : \"null\");// + \"  \" + (this.sourceTimestamp ? this.sourceTimestamp.getTime() :\"-\");\r\n//     return str;\r\n// };\r\n\r\nexport function apply_timestamps(dataValue, timestampsToReturn, attributeId) {\r\n\r\n    assert(attributeId > 0);\r\n    assert(timestampsToReturn.hasOwnProperty(\"key\"));\r\n    assert(dataValue instanceof DataValue);\r\n    assert(dataValue.hasOwnProperty(\"serverTimestamp\"));\r\n    assert(dataValue.hasOwnProperty(\"sourceTimestamp\"));\r\n\r\n    var cloneDataValue = new DataValue({});\r\n    cloneDataValue.value = dataValue.value;\r\n    cloneDataValue.statusCode = dataValue.statusCode;\r\n\r\n    var now = getCurrentClock();\r\n    // apply timestamps\r\n    switch (timestampsToReturn) {\r\n        case TimestampsToReturn.Server:\r\n            cloneDataValue.serverTimestamp = dataValue.serverTimestamp;\r\n            cloneDataValue.serverPicoseconds = dataValue.serverPicoseconds;\r\n            if (true || !cloneDataValue.serverTimestamp ) {\r\n                cloneDataValue.serverTimestamp =now.timestamp;\r\n                cloneDataValue.serverPicoseconds = now.picoseconds;\r\n            }\r\n            break;\r\n        case TimestampsToReturn.Source:\r\n            cloneDataValue.sourceTimestamp = dataValue.sourceTimestamp;\r\n            cloneDataValue.sourcePicoseconds = dataValue.sourcePicoseconds;\r\n            break;\r\n        case TimestampsToReturn.Both:\r\n            cloneDataValue.serverTimestamp = dataValue.serverTimestamp;\r\n            cloneDataValue.serverPicoseconds = dataValue.serverPicoseconds;\r\n            if (true || !cloneDataValue.serverTimestamp ) {\r\n                cloneDataValue.serverTimestamp =now.timestamp;\r\n                cloneDataValue.serverPicoseconds = now.picoseconds;\r\n            }\r\n\r\n            cloneDataValue.sourceTimestamp = dataValue.sourceTimestamp;\r\n            cloneDataValue.sourcePicoseconds = dataValue.sourcePicoseconds;\r\n            break;\r\n    }\r\n\r\n    // unset sourceTimestamp unless AttributeId is Value\r\n    if (attributeId !== 13/*AttributeIds.Value*/) {\r\n        cloneDataValue.sourceTimestamp = null;\r\n    }\r\n    return cloneDataValue;\r\n}\r\n\r\n/*\r\n * @method _clone_with_array_replacement\r\n * @param dataValue\r\n * @param result\r\n * @return {DataValue}\r\n * @private\r\n * @static\r\n */\r\nfunction _clone_with_array_replacement(dataValue : DataValue, result) {\r\n\r\n    return new DataValue({\r\n        statusCode: result.statusCode,\r\n        serverTimestamp: dataValue.serverTimestamp,\r\n        serverPicoseconds: dataValue.serverPicoseconds,\r\n        sourceTimestamp: dataValue.sourceTimestamp,\r\n        sourcePicoseconds: dataValue.sourcePicoseconds,\r\n        value: new Variant({\r\n            dataType: dataValue.value.dataType,\r\n            arrayType: dataValue.value.arrayType,\r\n            value: result.array,\r\n            dimensions: dataValue.value.dimensions\r\n        })\r\n    });\r\n}\r\n\r\nfunction canRange(dataValue) {\r\n    return dataValue.value && (( dataValue.value.arrayType !== VariantArrayType.Scalar ) ||\r\n        ( (dataValue.value.arrayType === VariantArrayType.Scalar) && (dataValue.value.dataType === DataType.ByteString) ) ||\r\n        ( (dataValue.value.arrayType === VariantArrayType.Scalar) && (dataValue.value.dataType === DataType.String) ));\r\n}\r\n\r\n\r\nexport function extractRange(dataValue, indexRange) {\r\n\r\n    //xx console.log(\"xxxxxxx indexRange =\".yellow,indexRange ? indexRange.toString():\"<null>\") ;\r\n    //xx console.log(\"         dataValue =\",dataValue.toString());\r\n    //xx console.log(\"         can Range =\", canRange(dataValue));\r\n    var variant = dataValue.value;\r\n    if (indexRange && canRange(dataValue)) {\r\n        var result = indexRange.extract_values(variant.value);\r\n        dataValue = _clone_with_array_replacement(dataValue, result);\r\n        //xx console.log(\"         dataValue =\",dataValue.toString());\r\n    } else {\r\n        // clone the whole data Value\r\n        dataValue =new DataValue(dataValue);\r\n    }\r\n    return dataValue;\r\n}\r\n\r\nfunction sameDate(date1,date2) {\r\n\r\n    if (date1 === date2) {\r\n        return true;\r\n    }\r\n    if (date1 && !date2) {\r\n        return false;\r\n    }\r\n    if (!date1 && date2) {\r\n        return false;\r\n    }\r\n    return date1.getTime() === date2.getTime();\r\n}\r\n\r\nexport function sourceTimestampHasChanged(dataValue1, dataValue2) {\r\n\r\n    assert(dataValue1,\"expecting valid dataValue1\");\r\n    assert(dataValue2,\"expecting valid dataValue2\");\r\n    var hasChanged =\r\n        !sameDate(dataValue1.sourceTimestamp, dataValue2.sourceTimestamp )||\r\n        (dataValue1.sourcePicoseconds !== dataValue2.sourcePicoseconds);\r\n    return hasChanged;\r\n}\r\n\r\nexport function serverTimestampHasChanged(dataValue1, dataValue2) {\r\n    assert(dataValue1,\"expecting valid dataValue1\");\r\n    assert(dataValue2,\"expecting valid dataValue2\");\r\n    var hasChanged =\r\n        !sameDate(dataValue1.serverTimestamp ,dataValue2.serverTimestamp) ||\r\n        (dataValue1.serverPicoseconds !== dataValue2.serverPicoseconds);\r\n    return hasChanged;\r\n}\r\n\r\nexport function timestampHasChanged(dataValue1, dataValue2,timestampsToReturn) {\r\n\r\n//TODO:    timestampsToReturn = timestampsToReturn || { key: \"Neither\"};\r\n    if (!timestampsToReturn) {\r\n        return sourceTimestampHasChanged(dataValue1,dataValue2) || serverTimestampHasChanged(dataValue1,dataValue2);\r\n    }\r\n    switch(timestampsToReturn.key) {\r\n        case \"Neither\":\r\n            return false;\r\n        case \"Both\":\r\n            return sourceTimestampHasChanged(dataValue1,dataValue2) || serverTimestampHasChanged(dataValue1,dataValue2);\r\n        case \"Source\":\r\n            return sourceTimestampHasChanged(dataValue1,dataValue2);\r\n        default:\r\n            assert(timestampsToReturn.key === \"Server\");\r\n            return serverTimestampHasChanged(dataValue1,dataValue2);\r\n    }\r\n//    return sourceTimestampHasChanged(dataValue1,dataValue2) || serverTimestampHasChanged(dataValue1,dataValue2);\r\n}\r\n\r\n/**\r\n *\r\n * @param v1 {DataValue}\r\n * @param v2 {DataValue}\r\n * @param [timestampsToReturn {TimestampsToReturn}]\r\n * @return {boolean} true if data values are identical\r\n */\r\nexport function sameDataValue(v1: DataValue, v2: DataValue,timestampsToReturn: TimestampsToReturn): boolean {\r\n\r\n    if (v1 === v2) {\r\n        return true;\r\n    }\r\n    if (v1 && !v2) {\r\n        return false;\r\n    }\r\n    if (v2 && !v1) {\r\n        return false;\r\n    }\r\n    if (v1.statusCode !== v2.statusCode) {\r\n        return false;\r\n    }\r\n    //\r\n    // For performance reason, sourceTimestamp is\r\n    // used to determine if a dataValue has changed.\r\n    // if sourceTimestamp and sourcePicoseconds are identical\r\n    // then we make the assumption that Variant value is identical too.\r\n    // This will prevent us to deep compare potential large arrays.\r\n    // but before this is possible, we need to implement a mechanism\r\n    // that ensure that date() is always strictly increasing\r\n    if ((v1.sourceTimestamp && v2.sourceTimestamp) && !sourceTimestampHasChanged(v1,v2)) {\r\n       return true;\r\n    }\r\n    if (timestampHasChanged(v1,v2,timestampsToReturn)) {\r\n        return false;\r\n    }\r\n\r\n    return sameVariant(v1.value, v2.value);\r\n}","\n\nimport * as ec from '../basic-types';\nimport {LocalizedText} from './LocalizedText';\nimport {decodeLocalizedText} from './LocalizedText';\nimport {ApplicationType, encodeApplicationType, decodeApplicationType} from './ApplicationType';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IRegisteredServer {\n\t\tserverUri? : string;\n\t\tproductUri? : string;\n\t\tserverNames? : LocalizedText[];\n\t\tserverType? : ApplicationType;\n\t\tgatewayServerUri? : string;\n\t\tdiscoveryUrls? : string[];\n\t\tsemaphoreFilePath? : string;\n\t\tisOnline? : boolean;\n}\n\n/**\nThe information required to register a server with a discovery server.\n*/\n\nexport class RegisteredServer {\n \t\tserverUri : string;\n\t\tproductUri : string;\n\t\tserverNames : LocalizedText[];\n\t\tserverType : ApplicationType;\n\t\tgatewayServerUri : string;\n\t\tdiscoveryUrls : string[];\n\t\tsemaphoreFilePath : string;\n\t\tisOnline : boolean;\n\n\tconstructor(\toptions? : IRegisteredServer) { \n\t\toptions = options || {};\n\t\tthis.serverUri= (options.serverUri) ? options.serverUri:null;\n\t\tthis.productUri= (options.productUri) ? options.productUri:null;\n\t\tthis.serverNames= (options.serverNames) ? options.serverNames:[];\n\t\tthis.serverType= (options.serverType) ? options.serverType:null;\n\t\tthis.gatewayServerUri= (options.gatewayServerUri) ? options.gatewayServerUri:null;\n\t\tthis.discoveryUrls= (options.discoveryUrls) ? options.discoveryUrls:[];\n\t\tthis.semaphoreFilePath= (options.semaphoreFilePath) ? options.semaphoreFilePath:null;\n\t\tthis.isOnline= (options.isOnline) ? options.isOnline:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.serverUri,out);\n\t\tec.encodeString(this.productUri,out);\n\t\tec.encodeArray(this.serverNames,out);\n\t\tencodeApplicationType(this.serverType,out);\n\t\tec.encodeString(this.gatewayServerUri,out);\n\t\tec.encodeArray(this.discoveryUrls,out,ec.encodeString);\n\t\tec.encodeString(this.semaphoreFilePath,out);\n\t\tec.encodeBoolean(this.isOnline,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.serverUri = ec.decodeString(inp);\n\t\tthis.productUri = ec.decodeString(inp);\n\t\tthis.serverNames = ec.decodeArray(inp,decodeLocalizedText);\n\t\tthis.serverType = decodeApplicationType(inp);\n\t\tthis.gatewayServerUri = ec.decodeString(inp);\n\t\tthis.discoveryUrls = ec.decodeArray(inp,ec.decodeString);\n\t\tthis.semaphoreFilePath = ec.decodeString(inp);\n\t\tthis.isOnline = ec.decodeBoolean(inp);\n\n\t}\n\n\n\tclone(\ttarget? : RegisteredServer) : RegisteredServer { \n\t\tif(!target) {\n\t\t\ttarget = new RegisteredServer();\n\t\t}\n\t\ttarget.serverUri = this.serverUri;\n\t\ttarget.productUri = this.productUri;\n\t\tif (this.serverNames) { target.serverNames = ec.cloneComplexArray(this.serverNames);}\n\t\ttarget.serverType = this.serverType;\n\t\ttarget.gatewayServerUri = this.gatewayServerUri;\n\t\ttarget.discoveryUrls = ec.cloneArray(this.discoveryUrls);\n\t\ttarget.semaphoreFilePath = this.semaphoreFilePath;\n\t\ttarget.isOnline = this.isOnline;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRegisteredServer(\tinp : DataStream) : RegisteredServer { \n\t\tlet obj = new RegisteredServer();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"RegisteredServer\",RegisteredServer, makeExpandedNodeId(434,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport {RegisteredServer} from './RegisteredServer';\nimport {DataStream} from '../basic-types/DataStream';\nimport * as ec from '../basic-types';\n\nexport interface IRegisterServerRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tserver? : RegisteredServer;\n}\n\n/**\nRegisters a server with the discovery server.\n*/\n\nexport class RegisterServerRequest {\n \t\trequestHeader : RequestHeader;\n\t\tserver : RegisteredServer;\n\n\tconstructor(\toptions? : IRegisterServerRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.server= (options.server) ? options.server:new RegisteredServer();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tthis.server.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.server.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : RegisterServerRequest) : RegisterServerRequest { \n\t\tif(!target) {\n\t\t\ttarget = new RegisterServerRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\tif (this.server) { target.server = this.server.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRegisterServerRequest(\tinp : DataStream) : RegisterServerRequest { \n\t\tlet obj = new RegisterServerRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"RegisterServerRequest\",RegisterServerRequest, makeExpandedNodeId(437,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {DataStream} from '../basic-types/DataStream';\nimport * as ec from '../basic-types';\n\nexport interface IRegisterServerResponse {\n\t\tresponseHeader? : ResponseHeader;\n}\n\n/**\nRegisters a server with the discovery server.\n*/\n\nexport class RegisterServerResponse {\n \t\tresponseHeader : ResponseHeader;\n\n\tconstructor(\toptions? : IRegisterServerResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : RegisterServerResponse) : RegisterServerResponse { \n\t\tif(!target) {\n\t\t\ttarget = new RegisterServerResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRegisterServerResponse(\tinp : DataStream) : RegisterServerResponse { \n\t\tlet obj = new RegisterServerResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"RegisterServerResponse\",RegisterServerResponse, makeExpandedNodeId(440,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IFindServersRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tendpointUrl? : string;\n\t\tlocaleIds? : string[];\n\t\tserverUris? : string[];\n}\n\n/**\nFinds the servers known to the discovery server.\n*/\n\nexport class FindServersRequest {\n \t\trequestHeader : RequestHeader;\n\t\tendpointUrl : string;\n\t\tlocaleIds : string[];\n\t\tserverUris : string[];\n\n\tconstructor(\toptions? : IFindServersRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.endpointUrl= (options.endpointUrl) ? options.endpointUrl:null;\n\t\tthis.localeIds= (options.localeIds) ? options.localeIds:[];\n\t\tthis.serverUris= (options.serverUris) ? options.serverUris:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeString(this.endpointUrl,out);\n\t\tec.encodeArray(this.localeIds,out,ec.encodeString);\n\t\tec.encodeArray(this.serverUris,out,ec.encodeString);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.endpointUrl = ec.decodeString(inp);\n\t\tthis.localeIds = ec.decodeArray(inp,ec.decodeString);\n\t\tthis.serverUris = ec.decodeArray(inp,ec.decodeString);\n\n\t}\n\n\n\tclone(\ttarget? : FindServersRequest) : FindServersRequest { \n\t\tif(!target) {\n\t\t\ttarget = new FindServersRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.endpointUrl = this.endpointUrl;\n\t\ttarget.localeIds = ec.cloneArray(this.localeIds);\n\t\ttarget.serverUris = ec.cloneArray(this.serverUris);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeFindServersRequest(\tinp : DataStream) : FindServersRequest { \n\t\tlet obj = new FindServersRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"FindServersRequest\",FindServersRequest, makeExpandedNodeId(422,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {ApplicationDescription} from './ApplicationDescription';\nimport {decodeApplicationDescription} from './ApplicationDescription';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IFindServersResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tservers? : ApplicationDescription[];\n}\n\n/**\nFinds the servers known to the discovery server.\n*/\n\nexport class FindServersResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tservers : ApplicationDescription[];\n\n\tconstructor(\toptions? : IFindServersResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.servers= (options.servers) ? options.servers:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.servers,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.servers = ec.decodeArray(inp,decodeApplicationDescription);\n\n\t}\n\n\n\tclone(\ttarget? : FindServersResponse) : FindServersResponse { \n\t\tif(!target) {\n\t\t\ttarget = new FindServersResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.servers) { target.servers = ec.cloneComplexArray(this.servers);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeFindServersResponse(\tinp : DataStream) : FindServersResponse { \n\t\tlet obj = new FindServersResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"FindServersResponse\",FindServersResponse, makeExpandedNodeId(425,0));","\n\nimport * as ec from '../basic-types';\nimport {LocalizedText} from './LocalizedText';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IArgument {\n\t\tname? : string;\n\t\tdataType? : ec.NodeId;\n\t\tvalueRank? : ec.Int32;\n\t\tarrayDimensions? : ec.UInt32[];\n\t\tdescription? : LocalizedText;\n}\n\n/**\nAn argument for a method.\n*/\n\nexport class Argument {\n \t\tname : string;\n\t\tdataType : ec.NodeId;\n\t\tvalueRank : ec.Int32;\n\t\tarrayDimensions : ec.UInt32[];\n\t\tdescription : LocalizedText;\n\n\tconstructor(\toptions? : IArgument) { \n\t\toptions = options || {};\n\t\tthis.name= (options.name) ? options.name:null;\n\t\tthis.dataType= (options.dataType) ? options.dataType:null;\n\t\tthis.valueRank= (options.valueRank) ? options.valueRank:null;\n\t\tthis.arrayDimensions= (options.arrayDimensions) ? options.arrayDimensions:[];\n\t\tthis.description= (options.description) ? options.description:new LocalizedText();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.name,out);\n\t\tec.encodeNodeId(this.dataType,out);\n\t\tec.encodeInt32(this.valueRank,out);\n\t\tec.encodeArray(this.arrayDimensions,out,ec.encodeUInt32);\n\t\tthis.description.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.name = ec.decodeString(inp);\n\t\tthis.dataType = ec.decodeNodeId(inp);\n\t\tthis.valueRank = ec.decodeInt32(inp);\n\t\tthis.arrayDimensions = ec.decodeArray(inp,ec.decodeUInt32);\n\t\tthis.description.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : Argument) : Argument { \n\t\tif(!target) {\n\t\t\ttarget = new Argument();\n\t\t}\n\t\ttarget.name = this.name;\n\t\ttarget.dataType = this.dataType;\n\t\ttarget.valueRank = this.valueRank;\n\t\ttarget.arrayDimensions = ec.cloneArray(this.arrayDimensions);\n\t\tif (this.description) { target.description = this.description.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeArgument(\tinp : DataStream) : Argument { \n\t\tlet obj = new Argument();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"Argument\",Argument, makeExpandedNodeId(298,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport {CallMethodRequest} from './CallMethodRequest';\nimport {decodeCallMethodRequest} from './CallMethodRequest';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICallRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tmethodsToCall? : CallMethodRequest[];\n}\n\n/**\n\n*/\n\nexport class CallRequest {\n \t\trequestHeader : RequestHeader;\n\t\tmethodsToCall : CallMethodRequest[];\n\n\tconstructor(\toptions? : ICallRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.methodsToCall= (options.methodsToCall) ? options.methodsToCall:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeArray(this.methodsToCall,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.methodsToCall = ec.decodeArray(inp,decodeCallMethodRequest);\n\n\t}\n\n\n\tclone(\ttarget? : CallRequest) : CallRequest { \n\t\tif(!target) {\n\t\t\ttarget = new CallRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\tif (this.methodsToCall) { target.methodsToCall = ec.cloneComplexArray(this.methodsToCall);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCallRequest(\tinp : DataStream) : CallRequest { \n\t\tlet obj = new CallRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CallRequest\",CallRequest, makeExpandedNodeId(712,0));","\n\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {Variant} from '../variant';\nimport {decodeVariant} from '../variant';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICallMethodResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\tinputArgumentResults? : ec.StatusCode[];\n\t\tinputArgumentDiagnosticInfos? : DiagnosticInfo[];\n\t\toutputArguments? : Variant[];\n}\n\n/**\n\n*/\n\nexport class CallMethodResult {\n \t\tstatusCode : ec.StatusCode;\n\t\tinputArgumentResults : ec.StatusCode[];\n\t\tinputArgumentDiagnosticInfos : DiagnosticInfo[];\n\t\toutputArguments : Variant[];\n\n\tconstructor(\toptions? : ICallMethodResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.inputArgumentResults= (options.inputArgumentResults) ? options.inputArgumentResults:[];\n\t\tthis.inputArgumentDiagnosticInfos= (options.inputArgumentDiagnosticInfos) ? options.inputArgumentDiagnosticInfos:[];\n\t\tthis.outputArguments= (options.outputArguments) ? options.outputArguments:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeArray(this.inputArgumentResults,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.inputArgumentDiagnosticInfos,out);\n\t\tec.encodeArray(this.outputArguments,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.inputArgumentResults = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.inputArgumentDiagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\t\tthis.outputArguments = ec.decodeArray(inp,decodeVariant);\n\n\t}\n\n\n\tclone(\ttarget? : CallMethodResult) : CallMethodResult { \n\t\tif(!target) {\n\t\t\ttarget = new CallMethodResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.inputArgumentResults = ec.cloneArray(this.inputArgumentResults);\n\t\tif (this.inputArgumentDiagnosticInfos) { target.inputArgumentDiagnosticInfos = ec.cloneComplexArray(this.inputArgumentDiagnosticInfos);}\n\t\tif (this.outputArguments) { target.outputArguments = ec.cloneComplexArray(this.outputArguments);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCallMethodResult(\tinp : DataStream) : CallMethodResult { \n\t\tlet obj = new CallMethodResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CallMethodResult\",CallMethodResult, makeExpandedNodeId(709,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {CallMethodResult} from './CallMethodResult';\nimport {decodeCallMethodResult} from './CallMethodResult';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICallResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : CallMethodResult[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class CallResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : CallMethodResult[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : ICallResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,decodeCallMethodResult);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : CallResponse) : CallResponse { \n\t\tif(!target) {\n\t\t\ttarget = new CallResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\tif (this.results) { target.results = ec.cloneComplexArray(this.results);}\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCallResponse(\tinp : DataStream) : CallResponse { \n\t\tlet obj = new CallResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CallResponse\",CallResponse, makeExpandedNodeId(715,0));","/**\r\n *\r\n * This Service is used to call (invoke) a list of Methods. Each method call is invoked within the context\r\n * of an existing Session. If the Session is terminated, the results of the method’s execution cannot be\r\n * returned to the Client and are discarded. This is independent of the task actually performed at the\r\n * Server.\r\n * This Service provides for passing input and output arguments to/from a method. These arguments\r\n * are defined by Properties of the method.\r\n *\r\n * @module services.call\r\n */\r\n\r\n\r\n/*\r\n *\r\n *\r\n * extract from OPCUA Specification Part 4 Release 1.02 page 61:\r\n *\r\n * 5.11 **Method Service Set**\r\n *\r\n * 5.11.1 Overview\r\n *   Methods represent the function calls of Objects. They are defined in Part 3. Methods are invoked\r\n *   and return only after completion (successful or unsuccessful). Execution times for methods may\r\n *   vary, depending on the function that they perform.\r\n *   The Method Service Set defines the means to invoke methods. A method shall be a component of an\r\n *   Object. Discovery is provided through the Browse and Query Services. Clients discover the methods\r\n *   supported by a Server by browsing for the owning Objects References that identify their supported\r\n *   methods.\r\n *   Because Methods may control some aspect of plant operations, method invocation may depend on\r\n *   environmental or other conditions. This may be especially true when attempting to re -invoke a\r\n *   method immediately after it has completed execution. Conditions that are required to invoke the\r\n *   method might not yet have returned to the state that permits the method to start again.\r\n *\r\n *\r\n */\r\n\r\n\r\n    export {Argument} from '../generated/Argument';\r\n\r\n    /**\r\n     * @class CallMethodRequest\r\n     */\r\n    export {CallMethodRequest} from \"../generated/CallMethodRequest\"\r\n    /**\r\n     * @class CallRequest\r\n     */\r\n    export {CallRequest} from \"../generated/CallRequest\";\r\n    /**\r\n     * @class CallMethodResult\r\n     */\r\n    export {CallMethodResult}  from \"../generated/CallMethodResult\";\r\n    /**\r\n     * @class CallResponse\r\n     */\r\n    export {CallResponse} from \"../generated/CallResponse\";\r\n\r\n","\n\nimport * as ec from '../basic-types';\nimport {DataValue} from './DataValue';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IWriteValue {\n\t\tnodeId? : ec.NodeId;\n\t\tattributeId? : ec.UInt32;\n\t\tindexRange? : string;\n\t\tvalue? : DataValue;\n}\n\n/**\n\n*/\n\nexport class WriteValue {\n \t\tnodeId : ec.NodeId;\n\t\tattributeId : ec.UInt32;\n\t\tindexRange : string;\n\t\tvalue : DataValue;\n\n\tconstructor(\toptions? : IWriteValue) { \n\t\toptions = options || {};\n\t\tthis.nodeId= (options.nodeId) ? options.nodeId:null;\n\t\tthis.attributeId= (options.attributeId) ? options.attributeId:null;\n\t\tthis.indexRange= (options.indexRange) ? options.indexRange:null;\n\t\tthis.value= (options.value) ? options.value:new DataValue();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.nodeId,out);\n\t\tec.encodeUInt32(this.attributeId,out);\n\t\tec.encodeString(this.indexRange,out);\n\t\tthis.value.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.nodeId = ec.decodeNodeId(inp);\n\t\tthis.attributeId = ec.decodeUInt32(inp);\n\t\tthis.indexRange = ec.decodeString(inp);\n\t\tthis.value.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : WriteValue) : WriteValue { \n\t\tif(!target) {\n\t\t\ttarget = new WriteValue();\n\t\t}\n\t\ttarget.nodeId = this.nodeId;\n\t\ttarget.attributeId = this.attributeId;\n\t\ttarget.indexRange = this.indexRange;\n\t\tif (this.value) { target.value = this.value.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeWriteValue(\tinp : DataStream) : WriteValue { \n\t\tlet obj = new WriteValue();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"WriteValue\",WriteValue, makeExpandedNodeId(670,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport {WriteValue} from './WriteValue';\nimport {decodeWriteValue} from './WriteValue';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IWriteRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tnodesToWrite? : WriteValue[];\n}\n\n/**\n\n*/\n\nexport class WriteRequest {\n \t\trequestHeader : RequestHeader;\n\t\tnodesToWrite : WriteValue[];\n\n\tconstructor(\toptions? : IWriteRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.nodesToWrite= (options.nodesToWrite) ? options.nodesToWrite:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeArray(this.nodesToWrite,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.nodesToWrite = ec.decodeArray(inp,decodeWriteValue);\n\n\t}\n\n\n\tclone(\ttarget? : WriteRequest) : WriteRequest { \n\t\tif(!target) {\n\t\t\ttarget = new WriteRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\tif (this.nodesToWrite) { target.nodesToWrite = ec.cloneComplexArray(this.nodesToWrite);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeWriteRequest(\tinp : DataStream) : WriteRequest { \n\t\tlet obj = new WriteRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"WriteRequest\",WriteRequest, makeExpandedNodeId(673,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IWriteResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tresults? : ec.StatusCode[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class WriteResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tresults : ec.StatusCode[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IWriteResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeArray(this.results,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.results = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : WriteResponse) : WriteResponse { \n\t\tif(!target) {\n\t\t\ttarget = new WriteResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.results = ec.cloneArray(this.results);\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeWriteResponse(\tinp : DataStream) : WriteResponse { \n\t\tlet obj = new WriteResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"WriteResponse\",WriteResponse, makeExpandedNodeId(676,0));","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {DataStream} from '../basic-types/DataStream';\r\nimport {assert} from '../assert';\r\nimport {get_clock_tick} from '../utils';\r\n\r\nimport {PacketAssembler} from '../packet-assembler/packet_assembler';\r\nimport {readMessageHeader} from '../chunkmanager';\r\nimport { concatTypedArrays, concatArrayBuffers } from '../basic-types/array';\r\n\r\nexport function readRawMessageHeader(data : DataView | ArrayBuffer ) {\r\n    var messageHeader = readMessageHeader(new DataStream(data));\r\n    return {\r\n        length: messageHeader.length,\r\n        messageHeader: messageHeader\r\n    };\r\n}\r\n\r\nexport abstract class MessageBuilderBase extends EventEmitter{\r\n    signatureLength: number;\r\n    options: any;\r\n    packetAssembler: any;\r\n    security_defeated: boolean;\r\n    total_body_size: number;\r\n    total_message_size: number;\r\n    status_error: boolean;\r\n    blocks: any[];\r\n    message_chunks: any[];\r\n    messageHeader: any;\r\n    secureChannelId: any;\r\n    expected_secureChannelId: boolean;\r\n    offsetBodyStart: any;\r\n  \r\n    protected _tick0: number\r\n    protected _tick1: number;\r\n    sequenceHeader: any;\r\n\r\n    constructor(options? : any) {\r\n        super();\r\n        options = options || {};\r\n        this.signatureLength = options.signatureLength || 0;\r\n        this.options = options;\r\n        this.packetAssembler = new PacketAssembler({ readMessageFunc: readRawMessageHeader });\r\n       \r\n        this.packetAssembler.on(\"message\",  (messageChunk) => {\r\n            this._feed_messageChunk(messageChunk);\r\n        });\r\n        this.packetAssembler.on(\"newMessage\",  (info, data) => {\r\n            // record tick 0: when the first data is received\r\n            this._tick0 = get_clock_tick();\r\n            /**\r\n             *\r\n             * notify the observers that a new message is being built\r\n             * @event start_chunk\r\n             * @param info\r\n             * @param data\r\n             */\r\n            this.emit(\"start_chunk\", info, data);\r\n        });\r\n        this.security_defeated = false;\r\n        this.total_body_size = 0;\r\n        this.total_message_size = 0;\r\n        this._init_new();\r\n    }\r\n    protected _init_new() {\r\n        this.security_defeated = false;\r\n        this.status_error = false;\r\n        this.total_body_size = 0;\r\n        this.total_message_size = 0;\r\n        this.blocks = [];\r\n        this.message_chunks = [];\r\n    }\r\n    protected _read_headers(binaryStream : DataStream) {\r\n        this.messageHeader = readMessageHeader(binaryStream);\r\n        assert(binaryStream.length === 8);\r\n        this.secureChannelId = binaryStream.getUint32();\r\n        assert(binaryStream.length === 12);\r\n        // verifying secureChannelId\r\n        if (this.expected_secureChannelId && this.secureChannelId !== this.expected_secureChannelId) {\r\n            return this._report_error(\"Invalid secure channel Id\");\r\n        }\r\n        return true;\r\n    }\r\n    /**\r\n     * append a message chunk\r\n     * @method _append\r\n     * @param message_chunk\r\n     * @private\r\n     */\r\n    protected _append(message_chunk : DataView | ArrayBuffer) {\r\n        if (this.status_error) {\r\n            // the message builder is in error mode and further message chunks should be discarded.\r\n            return false;\r\n        }\r\n\r\n        message_chunk = (message_chunk instanceof ArrayBuffer) ? message_chunk : message_chunk.buffer;\r\n\r\n        this.message_chunks.push(message_chunk);\r\n        this.total_message_size += message_chunk.byteLength;\r\n        var binaryStream = new DataStream(message_chunk);\r\n        if (!this._read_headers(binaryStream)) {\r\n            return false;\r\n        }\r\n        assert(binaryStream.length>= 12);\r\n        // verify message chunk length\r\n        if (this.messageHeader.length !== message_chunk.byteLength) {\r\n            return this._report_error(\"Invalid messageChunk size: \" +\r\n                \"the provided chunk is \" + message_chunk.byteLength + \" bytes long \" +\r\n                \"but header specifies \" + this.messageHeader.length);\r\n        }\r\n        // the start of the message body block\r\n        var offsetBodyStart = binaryStream.length;\r\n        // the end of the message body block\r\n        var offsetBodyEnd = binaryStream.buffer.byteLength;\r\n        this.total_body_size += (offsetBodyEnd - offsetBodyStart);\r\n        this.offsetBodyStart = offsetBodyStart;\r\n        // add message body to a queue\r\n        // note : Buffer.slice create a shared memory !\r\n        //        use Buffer.clone\r\n        var cloned_buf = message_chunk.slice(offsetBodyStart, offsetBodyEnd);\r\n        this.blocks.push(cloned_buf);\r\n    }\r\n    /**\r\n     * Feed message builder with some data\r\n     * @method feed\r\n     * @param data\r\n     */\r\n    feed(data) {\r\n        if (!this.security_defeated && !this.status_error) {\r\n            this.packetAssembler.feed(data);\r\n        }\r\n    }\r\n    protected _feed_messageChunk(messageChunk : ArrayBuffer | DataView) {\r\n        assert(messageChunk);\r\n        var messageHeader = readMessageHeader(new DataStream(messageChunk));\r\n        /**\r\n         * notify the observers that new message chunk has been received\r\n         * @event chunk\r\n         * @param messageChunk {Buffer} the raw message chunk\r\n         */\r\n        this.emit(\"chunk\", messageChunk);\r\n        if (messageHeader.isFinal === \"F\") {\r\n            // last message\r\n            this._append(messageChunk);\r\n            if (this.status_error) {\r\n                return false;\r\n            }\r\n            var full_message_body = concatArrayBuffers(this.blocks);\r\n            //record tick 1: when a complete message has been received ( all chunks assembled)\r\n            this._tick1 = get_clock_tick();\r\n            /**\r\n             * notify the observers that a full message has been received\r\n             * @event full_message_body\r\n             * @param full_message_body {Buffer} the full message body made of all concatenated chunks.\r\n             */\r\n            this.emit(\"full_message_body\", full_message_body);\r\n            if (this._decode_message_body) {\r\n                this._decode_message_body(full_message_body);\r\n            }\r\n            // be ready for next block\r\n            this._init_new();\r\n            return true;\r\n        }\r\n        else if (messageHeader.isFinal === \"A\") {\r\n            return this._report_error(\"received and Abort Message\");\r\n        }\r\n        else if (messageHeader.isFinal === \"C\") {\r\n            return this._append(messageChunk);\r\n        }\r\n    }\r\n    _report_error(errorMessage) {\r\n        this.status_error = true;\r\n        //console.log(\"MESSAGE BUILDER ERROR\".yellow, errorMessage.red);\r\n        /**\r\n         * notify the observers that an error has occurred\r\n         * @event error\r\n         * @param error {Error} the error to raise\r\n         */\r\n        this.emit(\"error\", new Error(errorMessage), this.sequenceHeader ? this.sequenceHeader.requestId : null);\r\n        return false;\r\n    }\r\n\r\n    protected abstract _decode_message_body(full_message_body);\r\n}","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || Function(\"return this\")() || (1, eval)(\"this\");\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","\n\nimport {DataStream} from '../basic-types/DataStream';\n\n/**\nA bit mask which specifies what should be returned in a browse response.*/\nexport enum BrowseResultMask {\n \t\tNone = 0,\n\t\tReferenceTypeId = 1,\n\t\tIsForward = 2,\n\t\tNodeClass = 4,\n\t\tBrowseName = 8,\n\t\tDisplayName = 16,\n\t\tTypeDefinition = 32,\n\t\tAll = 63,\n\t\tReferenceTypeInfo = 3,\n\t\tTargetInfo = 60,\n\n}\n\nexport function encodeBrowseResultMask(\tdata : BrowseResultMask, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeBrowseResultMask(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"BrowseResultMask\",BrowseResultMask,encodeBrowseResultMask ,decodeBrowseResultMask ,null);","export function once(fn : Function, context?) { \r\n\tvar result;\r\n\r\n\treturn function(...args: any[]) { \r\n\t\tif(fn) {\r\n\t\t\tresult = fn.apply(context || this, arguments);\r\n\t\t\tfn = null;\r\n\t\t}\r\n\r\n\t\treturn result;\r\n\t};\r\n}\r\n","\"use strict\";\r\n\r\nimport {assert} from \"../assert\";\r\n\r\nimport  {registerType as registerBuiltInType} from './factories_builtin_types';\r\n\r\nfunction _self_encode(Type) {\r\n    assert('function' === typeof Type);\r\n    return function (value, stream) {\r\n        if (!value || !value.encode) {\r\n            value = new Type(value);\r\n        }\r\n        value.encode(stream);\r\n    };\r\n}\r\nfunction _self_decode(Type) {\r\n    assert('function' === typeof Type);\r\n\r\n    return function (stream) {\r\n        var value = new Type();\r\n        value.decode(stream);\r\n        return value;\r\n    };\r\n}\r\n\r\nexport function registerSpecialVariantEncoder(ConstructorFunc,name : string) {\r\n\r\n    assert('function' === typeof ConstructorFunc);\r\n\r\n    registerBuiltInType({\r\n        name: name,\r\n        encode: _self_encode(ConstructorFunc),\r\n        decode: _self_decode(ConstructorFunc),\r\n        defaultValue: null\r\n    });\r\n\r\n};\r\n\r\n","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\n\r\n\r\n\r\nimport {assert} from '../assert';\r\nimport { OPCUAClientOptions } from \"../client/client_base\";\r\n\r\n\r\nexport class OPCUASecureObject {\r\n    protected _certificateChain: any;\r\n    protected _privateKeyFile: string;\r\n    protected _private_key_pem: any;\r\n    protected _certificateFile: string;\r\n    protected _certificate: any;\r\n/**\r\n * an object that provides a certificate and a privateKey\r\n * @class OPCUASecureObject\r\n * @param options\r\n * @param options.certificateFile {string}\r\n * @param options.privateKeyFile {string}\r\n * @constructor\r\n */\r\nconstructor(options : OPCUAClientOptions) {\r\n\r\n//    assert(typeof options.certificateFile === \"string\");\r\n//    assert(typeof options.privateKeyFile === \"string\");\r\n\r\n    this._certificate = null;\r\n    this._certificateFile = options.certificateFile;\r\n\r\n    this._private_key_pem = null;\r\n    this._privateKeyFile = options.privateKeyFile;\r\n\r\n}\r\n\r\n/**\r\n * @method getCertificate\r\n * @return {Buffer}\r\n */\r\npublic getCertificate() {\r\n\r\n    if (!this._certificate) {\r\n        var certChain    = this.getCertificateChain();\r\n        this._certificate  = null;//**nomsgcrypt** split_der(certChain)[0];\r\n    }\r\n    return this._certificate;\r\n};\r\n\r\n/**\r\n * @method getCertificateChain\r\n * @return {Buffer}\r\n */\r\npublic getCertificateChain() {\r\n\r\n    if (!this._certificateChain) {\r\n     //   assert(fs.existsSync(this._certificateFile), \"Certificate file must exist :\" + this._certificateFile);\r\n        this._certificateChain = null;//**nomsgcrypt** _load_certificate(this._certificateFile);\r\n    }\r\n    return this._certificateChain;\r\n};\r\n\r\n\r\n/**\r\n * @method getPrivateKey\r\n * @return {ArrayBuffer}\r\n */\r\npublic getPrivateKey () {\r\n\r\n    return null;\r\n/* **nomsgcrypt**\r\n    if (!this._private_key_pem) {\r\n        // create fake certificate\r\n        //xx assert(fs.existsSync(this.privateKeyFile));\r\n        this._private_key_pem = _load_private_key(this._privateKeyFile);\r\n    }\r\n    return this._private_key_pem;\r\n*/\r\n};\r\n\r\n}\r\n","\n\nimport * as ec from '../basic-types';\nimport {MonitoringParameters} from './MonitoringParameters';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IMonitoredItemModifyRequest {\n\t\tmonitoredItemId? : ec.UInt32;\n\t\trequestedParameters? : MonitoringParameters;\n}\n\n/**\n\n*/\n\nexport class MonitoredItemModifyRequest {\n \t\tmonitoredItemId : ec.UInt32;\n\t\trequestedParameters : MonitoringParameters;\n\n\tconstructor(\toptions? : IMonitoredItemModifyRequest) { \n\t\toptions = options || {};\n\t\tthis.monitoredItemId= (options.monitoredItemId) ? options.monitoredItemId:null;\n\t\tthis.requestedParameters= (options.requestedParameters) ? options.requestedParameters:new MonitoringParameters();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.monitoredItemId,out);\n\t\tthis.requestedParameters.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.monitoredItemId = ec.decodeUInt32(inp);\n\t\tthis.requestedParameters.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : MonitoredItemModifyRequest) : MonitoredItemModifyRequest { \n\t\tif(!target) {\n\t\t\ttarget = new MonitoredItemModifyRequest();\n\t\t}\n\t\ttarget.monitoredItemId = this.monitoredItemId;\n\t\tif (this.requestedParameters) { target.requestedParameters = this.requestedParameters.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeMonitoredItemModifyRequest(\tinp : DataStream) : MonitoredItemModifyRequest { \n\t\tlet obj = new MonitoredItemModifyRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"MonitoredItemModifyRequest\",MonitoredItemModifyRequest, makeExpandedNodeId(757,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {TimestampsToReturn, encodeTimestampsToReturn, decodeTimestampsToReturn} from './TimestampsToReturn';\nimport {MonitoredItemModifyRequest} from './MonitoredItemModifyRequest';\nimport {decodeMonitoredItemModifyRequest} from './MonitoredItemModifyRequest';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IModifyMonitoredItemsRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tsubscriptionId? : ec.UInt32;\n\t\ttimestampsToReturn? : TimestampsToReturn;\n\t\titemsToModify? : MonitoredItemModifyRequest[];\n}\n\n/**\n\n*/\n\nexport class ModifyMonitoredItemsRequest {\n \t\trequestHeader : RequestHeader;\n\t\tsubscriptionId : ec.UInt32;\n\t\ttimestampsToReturn : TimestampsToReturn;\n\t\titemsToModify : MonitoredItemModifyRequest[];\n\n\tconstructor(\toptions? : IModifyMonitoredItemsRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.timestampsToReturn= (options.timestampsToReturn) ? options.timestampsToReturn:null;\n\t\tthis.itemsToModify= (options.itemsToModify) ? options.itemsToModify:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tencodeTimestampsToReturn(this.timestampsToReturn,out);\n\t\tec.encodeArray(this.itemsToModify,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.timestampsToReturn = decodeTimestampsToReturn(inp);\n\t\tthis.itemsToModify = ec.decodeArray(inp,decodeMonitoredItemModifyRequest);\n\n\t}\n\n\n\tclone(\ttarget? : ModifyMonitoredItemsRequest) : ModifyMonitoredItemsRequest { \n\t\tif(!target) {\n\t\t\ttarget = new ModifyMonitoredItemsRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.timestampsToReturn = this.timestampsToReturn;\n\t\tif (this.itemsToModify) { target.itemsToModify = ec.cloneComplexArray(this.itemsToModify);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeModifyMonitoredItemsRequest(\tinp : DataStream) : ModifyMonitoredItemsRequest { \n\t\tlet obj = new ModifyMonitoredItemsRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ModifyMonitoredItemsRequest\",ModifyMonitoredItemsRequest, makeExpandedNodeId(763,0));","\n\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IContentFilterElementResult {\n\t\tstatusCode? : ec.StatusCode;\n\t\toperandStatusCodes? : ec.StatusCode[];\n\t\toperandDiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\n\n*/\n\nexport class ContentFilterElementResult {\n \t\tstatusCode : ec.StatusCode;\n\t\toperandStatusCodes : ec.StatusCode[];\n\t\toperandDiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IContentFilterElementResult) { \n\t\toptions = options || {};\n\t\tthis.statusCode= (options.statusCode) ? options.statusCode:null;\n\t\tthis.operandStatusCodes= (options.operandStatusCodes) ? options.operandStatusCodes:[];\n\t\tthis.operandDiagnosticInfos= (options.operandDiagnosticInfos) ? options.operandDiagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeStatusCode(this.statusCode,out);\n\t\tec.encodeArray(this.operandStatusCodes,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.operandDiagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.statusCode = ec.decodeStatusCode(inp);\n\t\tthis.operandStatusCodes = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.operandDiagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : ContentFilterElementResult) : ContentFilterElementResult { \n\t\tif(!target) {\n\t\t\ttarget = new ContentFilterElementResult();\n\t\t}\n\t\ttarget.statusCode = this.statusCode;\n\t\ttarget.operandStatusCodes = ec.cloneArray(this.operandStatusCodes);\n\t\tif (this.operandDiagnosticInfos) { target.operandDiagnosticInfos = ec.cloneComplexArray(this.operandDiagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeContentFilterElementResult(\tinp : DataStream) : ContentFilterElementResult { \n\t\tlet obj = new ContentFilterElementResult();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ContentFilterElementResult\",ContentFilterElementResult, makeExpandedNodeId(606,0));","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\n\r\nimport {assert} from '../assert';\r\n\r\n/**\r\n * SequenceNumberGenerator manages a monotonically increasing sequence number.\r\n * @class SequenceNumberGenerator\r\n * @constructor\r\n *\r\n * @see OPC Unified Architecture, Part 6 -  $6.4.2 page 36 -\r\n *\r\n * The SequenceNumber shall also monotonically increase for all messages and shall not wrap\r\n * around until it is greater than 4294966271 (UInt32.MaxValue – 1024). The first number after\r\n * the wrap around shall be less than 1024. Note that this requirement means that\r\n * SequenceNumbers do not reset when a new TokenId is issued.\r\n * The SequenceNumber shall be incremented by exactly one for each MessageChunk sent unless\r\n * the communication channel was interrupted and re-established. Gaps are permitted between the\r\n * SequenceNumber for the last MessageChunk received before the interruption and the\r\n */\r\nexport class SequenceNumberGenerator {\r\n\r\nprivate _counter : number;\r\npublic static readonly MAXVALUE : number = 4294966271;\r\n\r\nconstructor()\r\n{\r\n    this._set(1);\r\n}\r\n\r\n/**\r\n * @method next\r\n * @return {number}\r\n */\r\nnext() : number {\r\n    var current = this._counter;\r\n    this._counter += 1;\r\n    if (this._counter > SequenceNumberGenerator.MAXVALUE) {\r\n        this._set(1);\r\n    }\r\n    return current;\r\n};\r\n/**\r\n * @method future\r\n * @return {Number}\r\n */\r\nfuture() : number {\r\n    return this._counter;\r\n};\r\n\r\n/**\r\n * @method _set\r\n * @private\r\n */\r\n_set(value : number) : void {\r\n    this._counter = value;\r\n};\r\n\r\n}","\"use strict\";\r\n/**\r\n * @module opcua.client\r\n */\r\n\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {StatusCodes} from '../constants';\r\nimport {assert} from '../assert'\r\n\r\nimport {TimestampsToReturn} from '../generated/TimestampsToReturn';\r\nimport {AttributeIds} from '../constants';\r\nimport {resolveNodeId} from '../nodeid/nodeid';\r\n\r\nimport * as subscription_service from \"../service-subscription\";\r\n\r\nimport {ClientSession} from './client_session';\r\nimport {MonitoredItem} from './MonitoredItem';\r\nimport {ReadValueId, IReadValueId} from '../generated/ReadValueId';\r\n\r\nimport {MonitoredItemGroup} from './MonitoredItemGroup';\r\n\r\nimport {doDebug,debugLog} from '../common/debug';\r\nimport {ClientSidePublishEngine} from './client_publish_engine';\r\n\r\nimport 'setimmediate';\r\n\r\nimport series from 'async-es/series';\r\nimport { IMonitoringParameters } from '../generated/MonitoringParameters';\r\n\r\nimport { ICreateSubscriptionRequest } from '../generated/CreateSubscriptionRequest';\r\nimport { MonitoredItemBase } from './MonitoredItemBase';\r\n\r\n\r\n/**\r\n * a object to manage a subscription on the client side.\r\n *\r\n * @class ClientSubscription\r\n * @extends EventEmitter\r\n *\r\n * @param session\r\n * @param options {Object}\r\n * @param options.requestedPublishingInterval {Number}\r\n * @param options.requestedLifetimeCount {Number}\r\n * @param options.requestedMaxKeepAliveCount {Number}\r\n * @param options.maxNotificationsPerPublish {Number}\r\n * @param options.publishingEnabled {Boolean}\r\n * @param options.priority {Number}\r\n * @constructor\r\n *\r\n * events:\r\n *    \"started\",     callback(subscriptionId)  : the subscription has been initiated\r\n *    \"terminated\"                             : the subscription has been deleted\r\n *    \"error\",                                 : the subscription has received an error\r\n *    \"keepalive\",                             : the subscription has received a keep alive message from the server\r\n *    \"received_notifications\",                : the subscription has received one or more notification\r\n */\r\nexport class ClientSubscription extends EventEmitter{\r\n\r\n    protected hasTimedOut : boolean = false;\r\n\r\n    protected _publishEngine : ClientSidePublishEngine;\r\n    protected _subscriptionId : number | string;\r\n    protected _publishingEnabled : boolean;\r\n    protected _publishingInterval : number;\r\n    protected lifetimeCount : number;\r\n    protected maxKeepAliveCount : number;\r\n    protected maxNotificationsPerPublish : number;\r\n    protected priority : number;\r\n\r\n    protected _next_client_handle : number;\r\n    protected monitoredItems : { [key:number] : MonitoredItemBase};\r\n\r\n    protected _timeoutHint : number;\r\n    protected lastSequenceNumber : number;\r\n\r\n    /**\r\n     * the associated session\r\n     * @property session\r\n     * @type {ClientSession}\r\n     */\r\n    public get session() {\r\n        return this._publishEngine.session;\r\n    } \r\n\r\n    public get subscriptionId() {\r\n        return this._subscriptionId;\r\n    }\r\n\r\n    public get timeoutHint() {\r\n        return this._timeoutHint;\r\n    }\r\n\r\n\r\nconstructor (session : ClientSession, options : ICreateSubscriptionRequest) {\r\n    super();\r\n    assert(session instanceof ClientSession);\r\n\r\n    this._publishEngine = session.getPublishEngine();\r\n\r\n\r\n    //// options should have\r\n    //var allowedProperties = [\r\n    //    'requestedPublishingInterval',\r\n    //    'requestedLifetimeCount',\r\n    //    'requestedMaxKeepAliveCount',\r\n    //    'maxNotificationsPerPublish',\r\n    //    'publishingEnabled',\r\n    //    'priority'\r\n    //];\r\n\r\n    options = options || {};\r\n    options.requestedPublishingInterval = options.requestedPublishingInterval || 100;\r\n    options.requestedLifetimeCount = options.requestedLifetimeCount || 60;\r\n    options.requestedMaxKeepAliveCount = options.requestedMaxKeepAliveCount || 10;\r\n    options.maxNotificationsPerPublish = (options.maxNotificationsPerPublish == null || options.maxNotificationsPerPublish == undefined) ? 0 : options.maxNotificationsPerPublish;\r\n    options.publishingEnabled = options.publishingEnabled ? true : false;\r\n    options.priority = options.priority || 1;\r\n\r\n\r\n    this._publishingInterval = options.requestedPublishingInterval;\r\n    this.lifetimeCount = options.requestedLifetimeCount;\r\n    this.maxKeepAliveCount = options.requestedMaxKeepAliveCount;\r\n    this.maxNotificationsPerPublish = options.maxNotificationsPerPublish;\r\n    this._publishingEnabled = options.publishingEnabled;\r\n    this.priority = options.priority;\r\n\r\n    this._subscriptionId = \"pending\";\r\n\r\n    this._next_client_handle = 0;\r\n    this.monitoredItems = {};\r\n\r\n    /**\r\n     * set to True when the server has notified us that this sbuscription has timed out\r\n     * ( maxLifeCounter x published interval without being able to process a PublishRequest\r\n     * @property hasTimedOut\r\n     * @type {boolean}\r\n     */\r\n    this.hasTimedOut = false;\r\n\r\n    setImmediate(() => {\r\n\r\n        this.__create_subscription( (err) => {\r\n\r\n            if (!err) {\r\n\r\n\r\n                setImmediate(()=> {\r\n                    /**\r\n                     * notify the observers that the subscription has now started\r\n                     * @event started\r\n                     */\r\n                    this.emit(\"started\", this.subscriptionId);\r\n                });\r\n            }\r\n        });\r\n    });\r\n}\r\n\r\n\r\nprotected __create_subscription(callback) {\r\n\r\n    assert ('function' === typeof callback)\r\n\r\n    var session = this._publishEngine.session;\r\n\r\n    debugLog(\"ClientSubscription created \");\r\n\r\n    var request = new subscription_service.CreateSubscriptionRequest({\r\n        requestedPublishingInterval: this._publishingInterval,\r\n        requestedLifetimeCount: this.lifetimeCount,\r\n        requestedMaxKeepAliveCount: this.maxKeepAliveCount,\r\n        maxNotificationsPerPublish: this.maxNotificationsPerPublish,\r\n        publishingEnabled: this._publishingEnabled,\r\n        priority: this.priority\r\n    });\r\n\r\n    session.createSubscription(request, (err, response) => {\r\n\r\n        if (err) {\r\n            /* istanbul ignore next */\r\n            this.emit(\"internal_error\", err);\r\n            if (callback) {\r\n                return callback(err);\r\n            }\r\n\r\n        } else {\r\n            this._subscriptionId = response.subscriptionId;\r\n            this._publishingInterval = response.revisedPublishingInterval;\r\n            this.lifetimeCount = response.revisedLifetimeCount;\r\n            this.maxKeepAliveCount = response.revisedMaxKeepAliveCount;\r\n\r\n            this._timeoutHint = (this.maxKeepAliveCount + 10 ) * this._publishingInterval;\r\n\r\n            if (doDebug) {\r\n                debugLog(\"registering callback\");\r\n                debugLog(\"publishingInterval               \" + this._publishingInterval);\r\n                debugLog(\"lifetimeCount                    \" + this.lifetimeCount);\r\n                debugLog(\"maxKeepAliveCount                \" + this.maxKeepAliveCount);\r\n                debugLog(\"publish request timeout hint =   \" + this._timeoutHint);\r\n            }\r\n\r\n            this._publishEngine.registerSubscription(this);\r\n\r\n            if (callback) {\r\n                callback(err);\r\n            }\r\n        }\r\n    });\r\n};\r\n\r\n\r\nprotected __on_publish_response_DataChangeNotification(notification : subscription_service.DataChangeNotification) {\r\n\r\n    assert(notification instanceof subscription_service.DataChangeNotification);\r\n\r\n    var monitoredItems = notification.monitoredItems;\r\n\r\n    monitoredItems.forEach( (monitoredItem) => {\r\n\r\n        var monitorItemObj = this.monitoredItems[monitoredItem.clientHandle];\r\n        if (monitorItemObj) {\r\n            if (monitorItemObj.itemToMonitor.attributeId === AttributeIds.EventNotifier) {\r\n                console.log(\"Warning: Server send a DataChangeNotification for an EventNotifier. EventNotificationList was expected\");\r\n                console.log(\"         the Server may not be fully OPCUA compliant. This notification will be ignored.\");\r\n            } else {\r\n                monitorItemObj._notify_value_change(monitoredItem.value);\r\n            }\r\n        }\r\n\r\n    });\r\n\r\n};\r\n\r\nprotected __on_publish_response_StatusChangeNotification(notification : subscription_service.StatusChangeNotification) {\r\n\r\n    assert(notification instanceof subscription_service.StatusChangeNotification);\r\n\r\n    debugLog(\"Client has received a Status Change Notification \" + notification.status.toString());\r\n\r\n    //TODO !!!! what is this supposed to do --> this notification has no subscriptionId !!!!\r\n    this._publishEngine.cleanup_acknowledgment_for_subscription((<any>notification).subscriptionId);\r\n\r\n    if (notification.status === StatusCodes.GoodSubscriptionTransferred) {\r\n        // OPCUA UA Spec 1.0.3 : part 3 - page 82 - 5.13.7 TransferSubscriptions:\r\n        // If the Server transfers the Subscription to the new Session, the Server shall issue a StatusChangeNotification\r\n        // notificationMessage with the status code Good_SubscriptionTransferred to the old Session.\r\n        console.log(\"ClientSubscription#__on_publish_response_StatusChangeNotification : GoodSubscriptionTransferred\");\r\n        this.hasTimedOut = true;\r\n        this.terminate(()=>{});\r\n    }\r\n    if (notification.status === StatusCodes.BadTimeout) {\r\n        // the server tells use that the subscription has timed out ..\r\n        // this mean that this subscription has been closed on the server side and cannot process any\r\n        // new PublishRequest.\r\n        //\r\n        // from Spec OPCUA Version 1.03 Part 4 - 5.13.1.1 Description : Page 69:\r\n        //\r\n        // h. Subscriptions have a lifetime counter that counts the number of consecutive publishing cycles in\r\n        //    which there have been no Publish requests available to send a Publish response for the\r\n        //    Subscription. Any Service call that uses the SubscriptionId or the processing of a Publish\r\n        //    response resets the lifetime counter of this Subscription. When this counter reaches the value\r\n        //    calculated for the lifetime of a Subscription based on the MaxKeepAliveCount parameter in the\r\n        //    CreateSubscription Service (5.13.2), the Subscription is closed. Closing the Subscription causes\r\n        //    its MonitoredItems to be deleted. In addition the Server shall issue a StatusChangeNotification\r\n        //    notificationMessage with the status code Bad_Timeout.\r\n        //\r\n        this.hasTimedOut = true;\r\n        this.terminate(()=>{});\r\n    }\r\n    /**\r\n     * notify the observers that the server has send a status changed notification (such as BadTimeout )\r\n     * @event status_changed\r\n     */\r\n    this.emit(\"status_changed\", notification.status, notification.diagnosticInfo);\r\n\r\n};\r\n\r\nprotected __on_publish_response_EventNotificationList (notification:subscription_service.EventNotificationList) {\r\n    assert(notification instanceof subscription_service.EventNotificationList);\r\n\r\n    notification.events.forEach((event)=> {\r\n        var monitorItemObj = this.monitoredItems[event.clientHandle];\r\n        assert(monitorItemObj, \"Expecting a monitored item\");\r\n\r\n\r\n        monitorItemObj._notify_value_change(event.eventFields);\r\n    });\r\n};\r\n\r\npublic onNotificationMessage(notificationMessage : subscription_service.NotificationMessage) {\r\n    assert(notificationMessage.hasOwnProperty(\"sequenceNumber\"));\r\n\r\n    this.lastSequenceNumber = notificationMessage.sequenceNumber;\r\n\r\n    this.emit(\"raw_notification\", notificationMessage);\r\n\r\n    var notificationData = notificationMessage.notificationData;\r\n\r\n    if (notificationData.length === 0) {\r\n        // this is a keep alive message\r\n        debugLog(\"Client : received a keep alive notification from client\");\r\n        /**\r\n         * notify the observers that a keep alive Publish Response has been received from the server.\r\n         * @event keepalive\r\n         */\r\n        this.emit(\"keepalive\");\r\n\r\n    } else {\r\n\r\n        /**\r\n         * notify the observers that some notifications has been received from the server in  a PublishResponse\r\n         * each modified monitored Item\r\n         * @event  received_notifications\r\n         */\r\n        this.emit(\"received_notifications\", notificationMessage);\r\n        // let publish a global event\r\n\r\n        // now process all notifications\r\n        notificationData.forEach( (notification) => {\r\n            // DataChangeNotification / StatusChangeNotification / EventNotification\r\n            switch ( notification.constructor) {\r\n                case subscription_service.DataChangeNotification:\r\n                    // now inform each individual monitored item\r\n                    this.__on_publish_response_DataChangeNotification(<subscription_service.DataChangeNotification>notification);\r\n                    break;\r\n                case subscription_service.StatusChangeNotification:\r\n                    this.__on_publish_response_StatusChangeNotification(<subscription_service.StatusChangeNotification>notification);\r\n                    break;\r\n                case subscription_service.EventNotificationList:\r\n                    this.__on_publish_response_EventNotificationList(<subscription_service.EventNotificationList>notification);\r\n                    break;\r\n                default:\r\n                    console.log(\" Invalid notification :\", notification.toString());\r\n            }\r\n        });\r\n    }\r\n\r\n};\r\n\r\n\r\n\r\n\r\nprotected _terminate_step2(callback) {\r\n    setImmediate(() => {\r\n        /**\r\n         * notify the observers tha the client subscription has terminated\r\n         * @event  terminated\r\n         */\r\n        this._subscriptionId = \"terminated\";\r\n        this.emit(\"terminated\");\r\n        callback();\r\n    });\r\n\r\n};\r\n\r\n/**\r\n * @method terminate\r\n * @param callback\r\n *\r\n */\r\npublic terminate(callback) {\r\n\r\n    assert('function' === typeof callback,\"expecting a callback function\");\r\n\r\n    if (this._subscriptionId === \"terminated\") {\r\n        // already terminated... just ignore\r\n        return callback(new Error(\"Already Terminated\"));\r\n    }\r\n\r\n    if (Number.isFinite(<any>this._subscriptionId)) {\r\n\r\n        this._publishEngine.unregisterSubscription(this._subscriptionId);\r\n\r\n        if (!this.session) {\r\n            return this._terminate_step2(callback);\r\n        }\r\n\r\n\r\n        this.session.deleteSubscriptions({\r\n            subscriptionIds: [<number>this._subscriptionId]\r\n        }, (err) => {\r\n\r\n            if (err) {\r\n                /**\r\n                 * notify the observers that an error has occurred\r\n                 * @event internal_error\r\n                 * @param {Error} err the error\r\n                 */\r\n                this.emit(\"internal_error\", err);\r\n            }\r\n            this._terminate_step2(callback);\r\n        });\r\n\r\n    } else {\r\n        assert(this._subscriptionId === \"pending\");\r\n        this._terminate_step2(callback);\r\n    }\r\n};\r\n\r\n/**\r\n * increment and get next client handle\r\n * @method nextClientHandle\r\n */\r\npublic nextClientHandle() : number {\r\n    this._next_client_handle += 1;\r\n    return this._next_client_handle;\r\n};\r\n\r\n\r\npublic _add_monitored_item(clientHandle, monitoredItem) {\r\n    assert(this.isActive(), \"subscription must be active and not terminated\");\r\n    assert(monitoredItem.monitoringParameters.clientHandle === clientHandle);\r\n    this.monitoredItems[clientHandle] = monitoredItem;\r\n\r\n    /**\r\n     * notify the observers that a new monitored item has been added to the subscription.\r\n     * @event item_added\r\n     * @param {MonitoredItem} the monitored item.\r\n     */\r\n    this.emit(\"item_added\", monitoredItem);\r\n};\r\n\r\n\r\nprotected _wait_for_subscription_to_be_ready(done) {\r\n\r\n    var self = this;\r\n\r\n    var _watch_dog = 0;\r\n\r\n    function wait_for_subscription_and_monitor() {\r\n\r\n        _watch_dog++;\r\n\r\n        if (self._subscriptionId === \"pending\") {\r\n            // the subscriptionID is not yet known because the server hasn't replied yet\r\n            // let postpone this call, a little bit, to let things happen\r\n            setImmediate(wait_for_subscription_and_monitor);\r\n\r\n        } else if (self._subscriptionId === \"terminated\") {\r\n            // the subscription has been terminated in the meantime\r\n            // this indicates a potential issue in the code using this api.\r\n            if ('function' === typeof done) {\r\n                done(new Error(\"subscription has been deleted\"));\r\n            }\r\n        } else {\r\n            done();\r\n        }\r\n    }\r\n\r\n    setImmediate(wait_for_subscription_and_monitor);\r\n\r\n};\r\n/**\r\n * add a monitor item to the subscription\r\n *\r\n * @method monitor\r\n * @async\r\n * @param itemToMonitor                        {ReadValueId}\r\n * @param itemToMonitor.nodeId                 {NodeId}\r\n * @param itemToMonitor.attributeId            {AttributeId}\r\n * @param itemToMonitor.indexRange             {null|NumericRange}\r\n * @param itemToMonitor.dataEncoding\r\n * @param requestedParameters                  {MonitoringParameters}\r\n * @param requestedParameters.clientHandle     {IntegerId}\r\n * @param requestedParameters.samplingInterval {Duration}\r\n * @param requestedParameters.filter           {ExtensionObject|null} EventFilter/DataChangeFilter\r\n * @param requestedParameters.queueSize        {Counter}\r\n * @param requestedParameters.discardOldest    {Boolean}\r\n * @param timestampsToReturn                   {TimestampsToReturn} //{TimestampsToReturnId}\r\n * @param  [done]                              {Function} optional done callback\r\n * @return {ClientMonitoredItem}\r\n *\r\n *\r\n * Monitoring a simple Value Change\r\n * ---------------------------------\r\n *\r\n * @example:\r\n *\r\n *   clientSubscription.monitor(\r\n *     // itemToMonitor:\r\n *     {\r\n *       nodeId: \"ns=0;i=2258\",\r\n *       attributeId: AttributeIds.Value,\r\n *       indexRange: null,\r\n *       dataEncoding: { namespaceIndex: 0, name: null }\r\n *     },\r\n *     // requestedParameters:\r\n *     {\r\n *        samplingInterval: 3000,\r\n *        filter: null,\r\n *        queueSize: 1,\r\n *        discardOldest: true\r\n *     },\r\n *     TimestampsToReturn.Neither\r\n *   );\r\n *\r\n * Monitoring a Value Change With a DataChange  Filter\r\n * ---------------------------------------------------\r\n *\r\n * options.trigger       {DataChangeTrigger} {Status|StatusValue|StatusValueTimestamp}\r\n * options.deadbandType  {DeadbandType}      {None|Absolute|Percent}\r\n * options.deadbandValue {Double}\r\n\r\n * @example:\r\n *\r\n *   clientSubscription.monitor(\r\n *     // itemToMonitor:\r\n *     {\r\n *       nodeId: \"ns=0;i=2258\",\r\n *       attributeId: AttributeIds.Value,\r\n *     },\r\n *     // requestedParameters:\r\n *     {\r\n *        samplingInterval: 3000,\r\n *        filter: new DataChangeFilter({\r\n *             trigger: DataChangeTrigger.StatusValue,\r\n *             deadbandType: DeadBandType.Absolute,\r\n *             deadbandValue: 0.1\r\n *        }),\r\n *        queueSize: 1,\r\n *        discardOldest: true\r\n *     },\r\n *     TimestampsToReturn.Neither\r\n *   );\r\n *\r\n *\r\n * Monitoring an Event\r\n * -------------------\r\n *\r\n *  If the monitor attributeId is EventNotifier then the filter must be specified\r\n *\r\n * @example:\r\n *\r\n *  var filter =  new subscription_service.EventFilter({\r\n *    selectClauses: [\r\n *             { browsePath: [ {name: 'ActiveState'  }, {name: 'id'}  ]},\r\n *             { browsePath: [ {name: 'ConditionName'}                ]}\r\n *    ],\r\n *    whereClause: []\r\n *  });\r\n *\r\n *  clientSubscription.monitor(\r\n *     // itemToMonitor:\r\n *     {\r\n *       nodeId: \"ns=0;i=2258\",\r\n *       attributeId: AttributeIds.EventNotifier,\r\n *       indexRange: null,\r\n *       dataEncoding: { namespaceIndex: 0, name: null }\r\n *     },\r\n *     // requestedParameters:\r\n *     {\r\n *        samplingInterval: 3000,\r\n *\r\n *        filter: filter,\r\n *\r\n *        queueSize: 1,\r\n *        discardOldest: true\r\n *     },\r\n *     TimestampsToReturn.Neither\r\n *   );\r\n *\r\n *\r\n *\r\n *\r\n *\r\n *\r\n */\r\npublic monitor(itemToMonitor : ReadValueId, requestedParameters : IMonitoringParameters, timestampsToReturn : TimestampsToReturn, done? : (err : Error|null,mItem? : MonitoredItem) => void) {\r\n    assert(done === undefined || ('function' === typeof done));\r\n\r\n    itemToMonitor.nodeId = resolveNodeId(itemToMonitor.nodeId);\r\n    var monitoredItem = new MonitoredItem(this, itemToMonitor, requestedParameters, timestampsToReturn);\r\n\r\n    this._wait_for_subscription_to_be_ready((err) => {\r\n        if (err) {\r\n            return done && done(err);\r\n        }\r\n        monitoredItem._monitor(function(err){\r\n            if(err) {\r\n                return done && done(err);\r\n            }\r\n            done && done(err,monitoredItem);\r\n        });\r\n    });\r\n    return monitoredItem;\r\n};\r\n\r\n\r\n/**\r\n * @method monitorItems\r\n * @param itemsToMonitor\r\n * @param requestedParameters\r\n * @param timestampsToReturn\r\n * @param done\r\n */\r\npublic monitorItems(itemsToMonitor : IReadValueId[], requestedParameters : IMonitoringParameters, timestampsToReturn? : TimestampsToReturn, done? : (err : Error|null, mItemGroup?: MonitoredItemGroup ) => void ) : MonitoredItemGroup {\r\n    // Try to resolve the nodeId and fail fast if we can't.\r\n    itemsToMonitor.forEach(function (itemToMonitor) {\r\n        itemToMonitor.nodeId = resolveNodeId(itemToMonitor.nodeId);\r\n    });\r\n\r\n    var monitoredItemGroup = new MonitoredItemGroup(this, itemsToMonitor, requestedParameters, timestampsToReturn);\r\n\r\n    this._wait_for_subscription_to_be_ready(function (err) {\r\n        if (err) {\r\n            return done && done(err);\r\n        }\r\n        monitoredItemGroup._monitor(function(err) {\r\n            if(err) {\r\n                return done && done(err);\r\n            }\r\n            done && done(err,monitoredItemGroup);\r\n        });\r\n    });\r\n    return monitoredItemGroup;\r\n};\r\n\r\n// ClientSubscription.prototype.monitorOld = function (itemToMonitor, requestedParameters, timestampsToReturn, done) {\r\n//\r\n//     var self = this;\r\n//\r\n//\r\n//     assert(itemToMonitor.nodeId);\r\n//     assert(itemToMonitor.attributeId);\r\n//     assert(done === undefined || ('function' === typeof done));\r\n//     assert('function' !== typeof timestampsToReturn);\r\n//\r\n//     // Try to resolve the nodeId and fail fast if we can't.\r\n//     resolveNodeId(itemToMonitor.nodeId);\r\n//\r\n//     timestampsToReturn = timestampsToReturn || TimestampsToReturn.Neither;\r\n//\r\n//\r\n//     var monitoredItem = new ClientMonitoredItem(this, itemToMonitor, requestedParameters, timestampsToReturn);\r\n//\r\n//     var _watch_dog = 0;\r\n//\r\n//     function wait_for_subscription_and_monitor() {\r\n//\r\n//         _watch_dog++;\r\n//\r\n//         if (self.subscriptionId === \"pending\") {\r\n//             // the subscriptionID is not yet known because the server hasn't replied yet\r\n//             // let postpone this call, a little bit, to let things happen\r\n//             setImmediate(wait_for_subscription_and_monitor);\r\n//\r\n//         } else if (self.subscriptionId === \"terminated\") {\r\n//             // the subscription has been terminated in the meantime\r\n//             // this indicates a potential issue in the code using this api.\r\n//             if ('function' === typeof done) {\r\n//                 done(new Error(\"subscription has been deleted\"));\r\n//             }\r\n//         } else {\r\n//             //xxx console.log(\"xxxx _watch_dog \",_watch_dog);\r\n//             monitoredItem._monitor(done);\r\n//         }\r\n//     }\r\n//\r\n//     setImmediate(wait_for_subscription_and_monitor);\r\n//     return monitoredItem;\r\n// };\r\n\r\npublic isActive() : boolean {\r\n    return typeof this._subscriptionId !== \"string\";\r\n};\r\n\r\nprotected _remove(monitoredItem : MonitoredItemBase) {\r\n\r\n    var clientHandle = monitoredItem.monitoringParameters.clientHandle;\r\n    assert(clientHandle);\r\n    assert(clientHandle in this.monitoredItems);\r\n    monitoredItem.removeAllListeners();\r\n    delete this.monitoredItems[clientHandle];\r\n};\r\n\r\npublic _delete_monitored_items(monitoredItems : MonitoredItemBase[], callback) : void {\r\n    assert(Array.isArray(monitoredItems));\r\n    \r\n    assert(this.isActive());\r\n\r\n    monitoredItems.forEach( (monitoredItem) => {\r\n        this._remove(monitoredItem);\r\n    });\r\n\r\n    this.session.deleteMonitoredItems({\r\n        subscriptionId: <number>this.subscriptionId,\r\n        monitoredItemIds: monitoredItems.map(function (monitoredItem) {\r\n            return monitoredItem.monitoredItemId;\r\n        })\r\n    }, function (err) {\r\n\r\n\r\n        callback(err);\r\n    });\r\n};\r\n\r\nprotected _delete_monitored_item(monitoredItem : MonitoredItemBase, callback) : void {\r\n    this._delete_monitored_items([monitoredItem], callback);\r\n};\r\n\r\npublic setPublishingMode(publishingEnabled, callback) : void {\r\n    assert('function' === typeof callback);\r\n    this.session.setPublishingMode(publishingEnabled, <number>this._subscriptionId, (err, results) => {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        if (results[0] !== StatusCodes.Good) {\r\n            return callback(new Error(\"Cannot setPublishingMode \" + results[0].toString()));\r\n        }\r\n        callback();\r\n    });\r\n};\r\n\r\n\r\n\r\n/**\r\n *  utility function to recreate new subscription\r\n *  @method recreateSubscriptionAndMonitoredItem\r\n */\r\npublic recreateSubscriptionAndMonitoredItem(callback) {\r\n\r\n    debugLog(\"ClientSubscription#recreateSubscriptionAndMonitoredItem\");\r\n   \r\n    var monitoredItems_old = this.monitoredItems;\r\n\r\n    this._publishEngine.unregisterSubscription(this._subscriptionId);\r\n\r\n    series([\r\n\r\n        this.__create_subscription.bind(this),\r\n\r\n        function (callback) {\r\n\r\n            var test = this._publishEngine.getSubscription(<number>this.subscriptionId);\r\n            assert(test === this);\r\n\r\n            // re-create monitored items\r\n\r\n            let itemsToCreate : subscription_service.MonitoredItemCreateRequest[] = [];\r\n            \r\n            for (let key in monitoredItems_old) {\r\n                let monitoredItem = monitoredItems_old[key];\r\n                assert(monitoredItem.monitoringParameters.clientHandle > 0);\r\n                itemsToCreate.push(new subscription_service.MonitoredItemCreateRequest({\r\n                    itemToMonitor: monitoredItem.itemToMonitor,\r\n                    monitoringMode: monitoredItem.monitoringMode,\r\n                    requestedParameters: monitoredItem.monitoringParameters\r\n                }));\r\n            }\r\n\r\n            var createMonitorItemsRequest = new subscription_service.CreateMonitoredItemsRequest({\r\n                subscriptionId: <number>this._subscriptionId,\r\n                timestampsToReturn: TimestampsToReturn.Both, // self.timestampsToReturn,\r\n                itemsToCreate: itemsToCreate\r\n            });\r\n\r\n            this.session.createMonitoredItems(createMonitorItemsRequest, (err, response) => {\r\n\r\n                if (!err) {\r\n                    assert(response instanceof subscription_service.CreateMonitoredItemsResponse);\r\n                    var monitoredItemResults = response.results;\r\n\r\n                    monitoredItemResults.forEach(function (monitoredItemResult, index) {\r\n\r\n                        var clientHandle = itemsToCreate[index].requestedParameters.clientHandle;\r\n                        var monitoredItem = this.monitoredItems[clientHandle];\r\n\r\n                        if (monitoredItemResult.statusCode === StatusCodes.Good) {\r\n\r\n                            monitoredItem.result = monitoredItemResult;\r\n                            monitoredItem.monitoredItemId = monitoredItemResult.monitoredItemId;\r\n                            monitoredItem.monitoringParameters.samplingInterval = monitoredItemResult.revisedSamplingInterval;\r\n                            monitoredItem.monitoringParameters.queueSize = monitoredItemResult.revisedQueueSize;\r\n                            monitoredItem.filterResult = monitoredItemResult.filterResult;\r\n\r\n                            // istanbul ignore next\r\n                            if (doDebug) {\r\n                                debugLog(\"monitoredItemResult.statusCode = \" + monitoredItemResult.toString());\r\n                            }\r\n\r\n                        } else {\r\n                            // TODO: what should we do ?\r\n                            debugLog(\"monitoredItemResult.statusCode = \" + monitoredItemResult.statusCode.toString());\r\n                        }\r\n                    });\r\n\r\n                }\r\n                callback(err);\r\n            });\r\n\r\n        }\r\n\r\n    ], callback);\r\n};\r\n\r\n\r\n//var thenify = require(\"thenify\");\r\n\r\n// ClientSubscription.prototype.setPublishingMode = thenify.withCallback(ClientSubscription.prototype.setPublishingMode);\r\n// //xx ClientSubscription.prototype.monitor           = thenify.withCallback(ClientSubscription.prototype.monitor);\r\n// xx ClientSubscription.prototype.monitorItems      = thenify.withCallback(ClientSubscription.prototype.monitorItems);\r\n// ClientSubscription.prototype.recreateSubscriptionAndMonitoredItem = thenify.withCallback(ClientSubscription.prototype.recreateSubscriptionAndMonitoredItem);\r\n// ClientSubscription.prototype.terminate = thenify.withCallback(ClientSubscription.prototype.terminate);\r\n}","\"use strict\";\r\n\r\nimport {assert} from '../assert';\r\n\r\nimport { MonitoringMode } from \"../generated/MonitoringMode\";\r\nimport { ClientSubscription } from \"./ClientSubscription\";\r\nimport { IMonitoringParameters } from \"../generated/MonitoringParameters\";\r\nimport { TimestampsToReturn } from \"../generated/TimestampsToReturn\";\r\nimport {MonitoredItemBase} from './MonitoredItemBase';\r\n\r\nimport * as read_service from \"../service-read\";\r\nimport { IReadValueId } from '../generated/ReadValueId';\r\n\r\n\r\n/**\r\n * ClientMonitoredItem\r\n * @class ClientMonitoredItem\r\n * @extends MonitoredItemBase\r\n *\r\n * @param subscription              {ClientSubscription}\r\n * @param itemToMonitor             {ReadValueId}\r\n * @param itemToMonitor.nodeId      {NodeId}\r\n * @param itemToMonitor.attributeId {AttributeId}\r\n *\r\n * @param monitoringParameters      {MonitoringParameters}\r\n * @param timestampsToReturn        {TimestampsToReturn}\r\n * @constructor\r\n *\r\n * event:\r\n *    \"initialized\"\r\n *    \"err\"\r\n *    \"changed\"\r\n *\r\n *  note: this.monitoringMode = subscription_service.MonitoringMode.Reporting;\r\n */\r\nexport class MonitoredItem extends MonitoredItemBase {\r\n    protected _timestampsToReturn : TimestampsToReturn;\r\nconstructor (subscription : ClientSubscription, itemToMonitor : IReadValueId, monitoringParameters : IMonitoringParameters, timestampsToReturn? : TimestampsToReturn) {\r\n\r\n    super(subscription,itemToMonitor,monitoringParameters);\r\n    this._timestampsToReturn = timestampsToReturn || TimestampsToReturn.Neither;\r\n}\r\n\r\npublic toString() : string {\r\n\r\n    var ret = \"\";\r\n    ret+=\"itemToMonitor:        \" + this._itemToMonitor.toString() + \"\\n\";\r\n    ret+=\"monitoringParameters: \" + this._monitoringParameters.toString() + \"\\n\";\r\n    ret+=\"timestampsToReturn:   \" + this._timestampsToReturn.toString() + \"\\n\";\r\n    ret+=\"monitoredItemId       \" + this._monitoredItemId + \"\\n\";\r\n    ret+=\"statusCode:           \" + this._statusCode ? this._statusCode.toString() : \"\";\r\n    return ret;\r\n};\r\n\r\n/**\r\n * remove the MonitoredItem from its subscription\r\n * @method terminate\r\n * @param  done {Function} the done callback\r\n * @async\r\n */\r\npublic terminate(done: Function) {\r\n\r\n    assert(!done || ('function' === typeof done));\r\n    /**\r\n     * Notify the observer that this monitored item has been terminated.\r\n     * @event terminated\r\n     */\r\n    this.emit(\"terminated\");\r\n\r\n    this._subscription._delete_monitored_items([this], function (err) {\r\n        if (done) {\r\n            done(err);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * @method _monitor\r\n * Creates the monitor item (monitoring mode = Reporting)\r\n * @param done {Function} callback\r\n * @private\r\n */\r\npublic _monitor(done) {\r\n    assert(done === undefined || ('function' === typeof done));\r\n    \r\n    MonitoredItemBase._toolbox_monitor(this._subscription, this._timestampsToReturn, [this], (err) => {\r\n        if (err) {\r\n            this.emit(\"err\", err.message);\r\n            this.emit(\"terminated\");\r\n        } else {\r\n            //xx  self.emit(\"initialized\");\r\n        }\r\n        if (done) {\r\n            done(err);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * @method modify\r\n * @param parameters {Object}\r\n * @param [timestampsToReturn=null] {TimestampsToReturn}\r\n * @param callback {Function}\r\n */\r\npublic modify(parameters, timestampsToReturn : TimestampsToReturn, callback) {\r\n    if ('function' === typeof timestampsToReturn) {\r\n        callback = timestampsToReturn;\r\n        timestampsToReturn = null;\r\n    }\r\n    this._timestampsToReturn = timestampsToReturn || this._timestampsToReturn;\r\n    MonitoredItemBase._toolbox_modify(this._subscription, [this], parameters, this._timestampsToReturn, function (err, results) {\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        assert(results.length === 1);\r\n        callback(null, results[0]);\r\n    });\r\n};\r\n\r\npublic setMonitoringMode(monitoringMode : MonitoringMode, callback) {\r\n    MonitoredItemBase._toolbox_setMonitoringMode(this._subscription, [this], monitoringMode, callback);\r\n};\r\n\r\n}","\n\nimport * as ec from '../basic-types';\n/**\n\n*/\n\nexport class FilterOperand {\n \n\tconstructor(){};\n\n\tclone(\ttarget? : FilterOperand) : FilterOperand { \n\t\tif(!target) {\n\t\t\ttarget = new FilterOperand();\n\t\t}\n\t\treturn target;\n\t}\n\n\n}\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"FilterOperand\",FilterOperand, makeExpandedNodeId(591,0));","\n\nimport * as ec from '../basic-types';\nimport {QualifiedName} from './QualifiedName';\nimport {decodeQualifiedName} from './QualifiedName';\nimport {DataStream} from '../basic-types/DataStream';\nimport {FilterOperand} from './FilterOperand';\n\nexport interface ISimpleAttributeOperand {\n\t\ttypeDefinitionId? : ec.NodeId;\n\t\tbrowsePath? : QualifiedName[];\n\t\tattributeId? : ec.UInt32;\n\t\tindexRange? : string;\n}\n\n/**\n\n*/\n\nexport class SimpleAttributeOperand extends FilterOperand {\n \t\ttypeDefinitionId : ec.NodeId;\n\t\tbrowsePath : QualifiedName[];\n\t\tattributeId : ec.UInt32;\n\t\tindexRange : string;\n\n\tconstructor(\toptions? : ISimpleAttributeOperand) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.typeDefinitionId= (options.typeDefinitionId) ? options.typeDefinitionId:null;\n\t\tthis.browsePath= (options.browsePath) ? options.browsePath:[];\n\t\tthis.attributeId= (options.attributeId) ? options.attributeId:null;\n\t\tthis.indexRange= (options.indexRange) ? options.indexRange:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.typeDefinitionId,out);\n\t\tec.encodeArray(this.browsePath,out);\n\t\tec.encodeUInt32(this.attributeId,out);\n\t\tec.encodeString(this.indexRange,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.typeDefinitionId = ec.decodeNodeId(inp);\n\t\tthis.browsePath = ec.decodeArray(inp,decodeQualifiedName);\n\t\tthis.attributeId = ec.decodeUInt32(inp);\n\t\tthis.indexRange = ec.decodeString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : SimpleAttributeOperand) : SimpleAttributeOperand { \n\t\tif(!target) {\n\t\t\ttarget = new SimpleAttributeOperand();\n\t\t}\n\t\ttarget.typeDefinitionId = this.typeDefinitionId;\n\t\tif (this.browsePath) { target.browsePath = ec.cloneComplexArray(this.browsePath);}\n\t\ttarget.attributeId = this.attributeId;\n\t\ttarget.indexRange = this.indexRange;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSimpleAttributeOperand(\tinp : DataStream) : SimpleAttributeOperand { \n\t\tlet obj = new SimpleAttributeOperand();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SimpleAttributeOperand\",SimpleAttributeOperand, makeExpandedNodeId(603,0));","\n\nimport {SimpleAttributeOperand} from './SimpleAttributeOperand';\nimport {decodeSimpleAttributeOperand} from './SimpleAttributeOperand';\nimport {ContentFilter} from './ContentFilter';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\nimport {MonitoringFilter} from './MonitoringFilter';\n\nexport interface IEventFilter {\n\t\tselectClauses? : SimpleAttributeOperand[];\n\t\twhereClause? : ContentFilter;\n}\n\n/**\n\n*/\n\nexport class EventFilter extends MonitoringFilter {\n \t\tselectClauses : SimpleAttributeOperand[];\n\t\twhereClause : ContentFilter;\n\n\tconstructor(\toptions? : IEventFilter) { \n\t\toptions = options || {};\n\t\tsuper();\n\t\tthis.selectClauses= (options.selectClauses) ? options.selectClauses:[];\n\t\tthis.whereClause= (options.whereClause) ? options.whereClause:new ContentFilter();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeArray(this.selectClauses,out);\n\t\tthis.whereClause.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.selectClauses = ec.decodeArray(inp,decodeSimpleAttributeOperand);\n\t\tthis.whereClause.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : EventFilter) : EventFilter { \n\t\tif(!target) {\n\t\t\ttarget = new EventFilter();\n\t\t}\n\t\tif (this.selectClauses) { target.selectClauses = ec.cloneComplexArray(this.selectClauses);}\n\t\tif (this.whereClause) { target.whereClause = this.whereClause.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeEventFilter(\tinp : DataStream) : EventFilter { \n\t\tlet obj = new EventFilter();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"EventFilter\",EventFilter, makeExpandedNodeId(727,0));","\n\nimport {DataStream} from '../basic-types/DataStream';\n\n/**\nThe possible user token types.*/\nexport enum UserTokenType {\n \t\tAnonymous = 0,\n\t\tUserName = 1,\n\t\tCertificate = 2,\n\t\tIssuedToken = 3,\n\n}\n\nexport function encodeUserTokenType(\tdata : UserTokenType, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeUserTokenType(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"UserTokenType\",UserTokenType,encodeUserTokenType ,decodeUserTokenType ,null);","\n\nimport * as ec from '../basic-types';\nimport {UserTokenType, encodeUserTokenType, decodeUserTokenType} from './UserTokenType';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IUserTokenPolicy {\n\t\tpolicyId? : string;\n\t\ttokenType? : UserTokenType;\n\t\tissuedTokenType? : string;\n\t\tissuerEndpointUrl? : string;\n\t\tsecurityPolicyUri? : string;\n}\n\n/**\nDescribes a user token that can be used with a server.\n*/\n\nexport class UserTokenPolicy {\n \t\tpolicyId : string;\n\t\ttokenType : UserTokenType;\n\t\tissuedTokenType : string;\n\t\tissuerEndpointUrl : string;\n\t\tsecurityPolicyUri : string;\n\n\tconstructor(\toptions? : IUserTokenPolicy) { \n\t\toptions = options || {};\n\t\tthis.policyId= (options.policyId) ? options.policyId:null;\n\t\tthis.tokenType= (options.tokenType) ? options.tokenType:null;\n\t\tthis.issuedTokenType= (options.issuedTokenType) ? options.issuedTokenType:null;\n\t\tthis.issuerEndpointUrl= (options.issuerEndpointUrl) ? options.issuerEndpointUrl:null;\n\t\tthis.securityPolicyUri= (options.securityPolicyUri) ? options.securityPolicyUri:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.policyId,out);\n\t\tencodeUserTokenType(this.tokenType,out);\n\t\tec.encodeString(this.issuedTokenType,out);\n\t\tec.encodeString(this.issuerEndpointUrl,out);\n\t\tec.encodeString(this.securityPolicyUri,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.policyId = ec.decodeString(inp);\n\t\tthis.tokenType = decodeUserTokenType(inp);\n\t\tthis.issuedTokenType = ec.decodeString(inp);\n\t\tthis.issuerEndpointUrl = ec.decodeString(inp);\n\t\tthis.securityPolicyUri = ec.decodeString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : UserTokenPolicy) : UserTokenPolicy { \n\t\tif(!target) {\n\t\t\ttarget = new UserTokenPolicy();\n\t\t}\n\t\ttarget.policyId = this.policyId;\n\t\ttarget.tokenType = this.tokenType;\n\t\ttarget.issuedTokenType = this.issuedTokenType;\n\t\ttarget.issuerEndpointUrl = this.issuerEndpointUrl;\n\t\ttarget.securityPolicyUri = this.securityPolicyUri;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeUserTokenPolicy(\tinp : DataStream) : UserTokenPolicy { \n\t\tlet obj = new UserTokenPolicy();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"UserTokenPolicy\",UserTokenPolicy, makeExpandedNodeId(306,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IViewDescription {\n\t\tviewId? : ec.NodeId;\n\t\ttimestamp? : Date;\n\t\tviewVersion? : ec.UInt32;\n}\n\n/**\nThe view to browse.\n*/\n\nexport class ViewDescription {\n \t\tviewId : ec.NodeId;\n\t\ttimestamp : Date;\n\t\tviewVersion : ec.UInt32;\n\n\tconstructor(\toptions? : IViewDescription) { \n\t\toptions = options || {};\n\t\tthis.viewId= (options.viewId) ? options.viewId:null;\n\t\tthis.timestamp= (options.timestamp) ? options.timestamp:null;\n\t\tthis.viewVersion= (options.viewVersion) ? options.viewVersion:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.viewId,out);\n\t\tec.encodeDateTime(this.timestamp,out);\n\t\tec.encodeUInt32(this.viewVersion,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.viewId = ec.decodeNodeId(inp);\n\t\tthis.timestamp = ec.decodeDateTime(inp);\n\t\tthis.viewVersion = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ViewDescription) : ViewDescription { \n\t\tif(!target) {\n\t\t\ttarget = new ViewDescription();\n\t\t}\n\t\ttarget.viewId = this.viewId;\n\t\ttarget.timestamp = this.timestamp;\n\t\ttarget.viewVersion = this.viewVersion;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeViewDescription(\tinp : DataStream) : ViewDescription { \n\t\tlet obj = new ViewDescription();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ViewDescription\",ViewDescription, makeExpandedNodeId(513,0));","\"use strict\";\r\n/**\r\n * @module opcua.transport\r\n */\r\n\r\n\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {assert} from '../assert';\r\nimport { concatTypedArrays } from '../basic-types/array';\r\n\r\nvar doDebug = false;\r\n\r\n/***\r\n * @class PacketAssembler\r\n * @param options\r\n * @param options.readMessageFunc {Function} a function to read\r\n * @param options.minimumSizeInBytes {Integer} the minimum number of bytes that need to be received before the\r\n *                                             readMessageFunc can be called\r\n * @constructor\r\n */\r\nexport class PacketAssembler extends EventEmitter {\r\n    packet_info: any;\r\n    minimumSizeInBytes: any;\r\n    readMessageFunc: any;\r\n    currentLength: number;\r\n    expectedLength: number;\r\n    protected _stack: any[];\r\nconstructor (options) {\r\n    super();\r\n    this._stack = [];\r\n    this.expectedLength = 0;\r\n    this.currentLength = 0;\r\n\r\n    this.readMessageFunc = options.readMessageFunc;\r\n    this.minimumSizeInBytes = options.minimumSizeInBytes || 8;\r\n\r\n    assert('function' === typeof this.readMessageFunc, \"packet assembler requires a readMessageFunc\");\r\n\r\n};\r\n\r\nprotected _read_packet_info(data : DataView) {\r\n    return this.readMessageFunc(data);\r\n};\r\n\r\nprotected _build_data(data) {\r\n    if (data && this._stack.length === 0) {\r\n        return data;\r\n    }\r\n    if (!data && this._stack.length === 1) {\r\n        data = this._stack[0];\r\n        this._stack.length = 0; // empty stack array\r\n        return data;\r\n    }\r\n    this._stack.push(data);\r\n    data = concatTypedArrays(this._stack);\r\n    this._stack.length = 0;\r\n    return data;\r\n};\r\n\r\npublic feed(data : DataView) {\r\n\r\n    var self = this;\r\n\r\n    var messageChunk;\r\n    //xx assert(data instanceof Buffer);\r\n    // xx assert(data.length > 0, \"PacketAssembler expects a no-zero size data block\");\r\n    //xx assert(this.expectedLength === 0 || this.currentLength <= this.expectedLength);\r\n\r\n    if (this.expectedLength === 0 && this.currentLength + data.byteLength >= this.minimumSizeInBytes) {\r\n\r\n        // we are at a start of a block and there is enough data provided to read the length  of the block\r\n\r\n        // let's build the whole data block with previous blocks already read.\r\n        if (this._stack.length > 0) {\r\n            data = this._build_data(data);\r\n            this.currentLength = 0;\r\n        }\r\n\r\n        // we can extract the expected length here\r\n        this.packet_info = this._read_packet_info(data);\r\n\r\n        this.expectedLength = this.packet_info.length;\r\n        assert(this.currentLength === 0);\r\n        assert(this.expectedLength > 0);\r\n\r\n        // we can now emit an event to signal the start of a new packet\r\n        this.emit(\"newMessage\", this.packet_info, data);\r\n\r\n    }\r\n\r\n    if (this.expectedLength === 0 || this.currentLength + data.byteLength < this.expectedLength) {\r\n\r\n        this._stack.push(data);\r\n        this.currentLength += data.byteLength;\r\n        // expecting more data to complete current message chunk\r\n\r\n    } else if (this.currentLength + data.byteLength === this.expectedLength) {\r\n\r\n        this.currentLength += data.byteLength;\r\n\r\n        messageChunk = this._build_data(data);\r\n\r\n        // istanbul ignore next\r\n        if (doDebug) {\r\n            var packet_info = this._read_packet_info(messageChunk);\r\n            assert(this.packet_info.length === packet_info.length);\r\n            assert(messageChunk.length === packet_info.length);\r\n        }\r\n        // reset\r\n        this.currentLength = 0;\r\n        this.expectedLength = 0;\r\n\r\n        this.emit(\"message\", messageChunk);\r\n\r\n    } else {\r\n        // there is more data in this chunk than expected...\r\n        // the chunk need to be split\r\n        var size1 = this.expectedLength - this.currentLength;\r\n        if (size1 > 0) {\r\n            var chunk1 = new DataView(data.buffer,0,size1);//.slice(0, size1);\r\n            self.feed(chunk1);\r\n        }\r\n        var chunk2 = new DataView(data.buffer,size1);\r\n        if (chunk2.byteLength > 0) {\r\n            self.feed(chunk2);\r\n        }\r\n    }\r\n};\r\n}\r\n\r\n\r\n","// --------- This code has been automatically generated !!! 2018-02-08T10:26:02.529Z\n\"use strict\";\n/**\n * @module opcua.address_space.types\n */\n\nimport * as ec from \"../basic-types\";\n\n\nimport {makeExpandedNodeId} from \"../nodeid/expanded_nodeid\";\n\nimport {_enumerations} from \"../factory/factories_enumerations\";\n\nimport {BaseUAObject} from '../factory/factories_baseobject';\n\nimport {register_class_definition} from '../factory/factories_factories';\nimport { DataStream } from \"../basic-types/DataStream\";\nimport { UInt32 } from \"../basic-types\";\nimport { StatusCode,encodeStatusCode,decodeStatusCode} from \"../basic-types/\";\n\nvar encodeArray = ec.encodeArray;\nvar decodeArray = ec.decodeArray;\nvar encode_StatusCode = encodeStatusCode;\nvar decode_StatusCode = decodeStatusCode;\nvar encode_String = ec.encodeString;\nvar decode_String = ec.decodeString;\n\nimport {generate_new_id} from \"../factory\";\n\n/**\n * \n * @class TCPErrorMessage\n * @constructor\n * @extends BaseUAObject\n * @param  options {Object}\n * @param  [options.statusCode] {StatusCode} \n * @param  [options.reason] {String} \n */\nexport class TCPErrorMessage extends BaseUAObject {\n    reason: string;\n    statusCode: StatusCode;\nconstructor(options?)\n{\n    super()\n    options = options || {};\n\n    /**\n      * \n      * @property statusCode\n      * @type {StatusCode}\n      */\n    this.statusCode = options.statusCode;\n\n    /**\n      * \n      * @property reason\n      * @type {String}\n      */\n     this.reason = options.reason;\n\n   // Object.preventExtensions(self);\n}\n\npublic static encodingDefaultBinary = makeExpandedNodeId(generate_new_id());\n\n/**\n * encode the object into a binary stream\n * @method encode\n *\n * @param stream {DataStream} \n */\npublic encode(stream : DataStream) {\n    encode_StatusCode(this.statusCode,stream);\n    encode_String(this.reason,stream);\n};\n/**\n * decode the object from a binary stream\n * @method decode\n *\n * @param stream {BinaryStream} \n * @param [option] {object} \n */\npublic decode(stream : DataStream) {\n    this.statusCode = decode_StatusCode(stream);\n    this.reason = decode_String(stream);\n};\n\npublic clone(target: any): BaseUAObject {\n    throw new Error(\"Method not implemented.\");\n\n}\n\n}\n\nregister_class_definition(\"TCPErrorMessage\",TCPErrorMessage,makeExpandedNodeId(generate_new_id()));\n","/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nexport default isLength;\n","/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nexport default isObject;\n","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nexport default root;\n","/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nexport default freeGlobal;\n","import isArrayLike from 'lodash-es/isArrayLike';\n\nimport breakLoop from './internal/breakLoop';\nimport eachOfLimit from './eachOfLimit';\nimport doLimit from './internal/doLimit';\nimport noop from 'lodash-es/noop';\nimport once from './internal/once';\nimport onlyOnce from './internal/onlyOnce';\nimport wrapAsync from './internal/wrapAsync';\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nexport default function(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, wrapAsync(iteratee), callback);\n}\n","import doParallel from './internal/doParallel';\nimport map from './internal/map';\n\n/**\n * Produces a new collection of values by mapping each value in `coll` through\n * the `iteratee` function. The `iteratee` is called with an item from `coll`\n * and a callback for when it has finished processing. Each of these callback\n * takes 2 arguments: an `error`, and the transformed item from `coll`. If\n * `iteratee` passes an error to its callback, the main `callback` (for the\n * `map` function) is immediately called with the error.\n *\n * Note, that since this function applies the `iteratee` to each item in\n * parallel, there is no guarantee that the `iteratee` functions will complete\n * in order. However, the results array will be in the same order as the\n * original `coll`.\n *\n * If `map` is passed an Object, the results will be an Array.  The results\n * will roughly be in the order of the original Objects' keys (but this can\n * vary across JavaScript engines).\n *\n * @name map\n * @static\n * @memberOf module:Collections\n * @method\n * @category Collection\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - An async function to apply to each item in\n * `coll`.\n * The iteratee should complete with the transformed item.\n * Invoked with (item, callback).\n * @param {Function} [callback] - A callback which is called when all `iteratee`\n * functions have finished, or an error occurs. Results is an Array of the\n * transformed items from the `coll`. Invoked with (err, results).\n * @example\n *\n * async.map(['file1','file2','file3'], fs.stat, function(err, results) {\n *     // results is now an array of stats for each file\n * });\n */\nexport default doParallel(map);\n","import eachOf from '../eachOf';\nimport wrapAsync from './wrapAsync';\n\nexport default function doParallel(fn) {\n    return function (obj, iteratee, callback) {\n        return fn(eachOf, obj, wrapAsync(iteratee), callback);\n    };\n}\n","import noop from 'lodash-es/noop';\nimport wrapAsync from './wrapAsync';\n\nexport default function _asyncMap(eachfn, arr, iteratee, callback) {\n    callback = callback || noop;\n    arr = arr || [];\n    var results = [];\n    var counter = 0;\n    var _iteratee = wrapAsync(iteratee);\n\n    eachfn(arr, function (value, _, callback) {\n        var index = counter++;\n        _iteratee(value, function (err, v) {\n            results[index] = v;\n            callback(err);\n        });\n    }, function (err) {\n        callback(err, results);\n    });\n}\n","\n\nimport {DataStream} from '../basic-types/DataStream';\n\nexport enum FilterOperator {\n \t\tEquals = 0,\n\t\tIsNull = 1,\n\t\tGreaterThan = 2,\n\t\tLessThan = 3,\n\t\tGreaterThanOrEqual = 4,\n\t\tLessThanOrEqual = 5,\n\t\tLike = 6,\n\t\tNot = 7,\n\t\tBetween = 8,\n\t\tInList = 9,\n\t\tAnd = 10,\n\t\tOr = 11,\n\t\tCast = 12,\n\t\tInView = 13,\n\t\tOfType = 14,\n\t\tRelatedTo = 15,\n\t\tBitwiseAnd = 16,\n\t\tBitwiseOr = 17,\n\n}\n\nexport function encodeFilterOperator(\tdata : FilterOperator, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeFilterOperator(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"FilterOperator\",FilterOperator,encodeFilterOperator ,decodeFilterOperator ,null);","\n\nimport {FilterOperator, encodeFilterOperator, decodeFilterOperator} from './FilterOperator';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IContentFilterElement {\n\t\tfilterOperator? : FilterOperator;\n\t\tfilterOperands? : ec.ExtensionObject[];\n}\n\n/**\n\n*/\n\nexport class ContentFilterElement {\n \t\tfilterOperator : FilterOperator;\n\t\tfilterOperands : ec.ExtensionObject[];\n\n\tconstructor(\toptions? : IContentFilterElement) { \n\t\toptions = options || {};\n\t\tthis.filterOperator= (options.filterOperator) ? options.filterOperator:null;\n\t\tthis.filterOperands= (options.filterOperands) ? options.filterOperands:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tencodeFilterOperator(this.filterOperator,out);\n\t\tec.encodeArray(this.filterOperands,out,ec.encodeExtensionObject);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.filterOperator = decodeFilterOperator(inp);\n\t\tthis.filterOperands = ec.decodeArray(inp,ec.decodeExtensionObject);\n\n\t}\n\n\n\tclone(\ttarget? : ContentFilterElement) : ContentFilterElement { \n\t\tif(!target) {\n\t\t\ttarget = new ContentFilterElement();\n\t\t}\n\t\ttarget.filterOperator = this.filterOperator;\n\t\ttarget.filterOperands = ec.cloneArray(this.filterOperands);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeContentFilterElement(\tinp : DataStream) : ContentFilterElement { \n\t\tlet obj = new ContentFilterElement();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ContentFilterElement\",ContentFilterElement, makeExpandedNodeId(585,0));","\n\nimport {ContentFilterElement} from './ContentFilterElement';\nimport {decodeContentFilterElement} from './ContentFilterElement';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IContentFilter {\n\t\telements? : ContentFilterElement[];\n}\n\n/**\n\n*/\n\nexport class ContentFilter {\n \t\telements : ContentFilterElement[];\n\n\tconstructor(\toptions? : IContentFilter) { \n\t\toptions = options || {};\n\t\tthis.elements= (options.elements) ? options.elements:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeArray(this.elements,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.elements = ec.decodeArray(inp,decodeContentFilterElement);\n\n\t}\n\n\n\tclone(\ttarget? : ContentFilter) : ContentFilter { \n\t\tif(!target) {\n\t\t\ttarget = new ContentFilter();\n\t\t}\n\t\tif (this.elements) { target.elements = ec.cloneComplexArray(this.elements);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeContentFilter(\tinp : DataStream) : ContentFilter { \n\t\tlet obj = new ContentFilter();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ContentFilter\",ContentFilter, makeExpandedNodeId(588,0));","\"use strict\";\r\n\r\nexport class ObjectRegistry {\r\n    protected _objectType : any;\r\n    protected _cache : {};\r\n    public static registries : any[] = [];\r\n    private static hashCounter : number = 1;\r\n    constructor(objectType ?: any) {\r\n        this._objectType = objectType;\r\n        this._cache = {};\r\n        ObjectRegistry.registries.push(this);    \r\n    }\r\n\r\n    public register(obj) {\r\n        \r\n            if (!this._objectType) {\r\n                this._objectType = obj.constructor;\r\n            }\r\n        \r\n            if (!obj._____hash) {\r\n                obj._____hash = ObjectRegistry.hashCounter;\r\n                ObjectRegistry.hashCounter += 1;\r\n                this._cache[obj._____hash] = obj;\r\n            }\r\n        \r\n         \r\n        };\r\n        \r\n        public unregister(obj) {\r\n            this._cache[obj._____hash] = null;\r\n            delete this._cache[obj._____hash];\r\n        };\r\n        \r\n        public count() : number {\r\n            return Object.keys(this._cache).length;\r\n        };\r\n        \r\n        public toString() : string {\r\n        \r\n            var className = this.getClassName();\r\n            var str = \" className :\" + className +  \" found => \" + this.count() +  \" object leaking\\n\";\r\n        \r\n            for (let key in this._cache) {\r\n                let obj = this._cache[key];\r\n                str += (<any>obj.constructor).name + \" \" + obj.toString()+ \"\\n\";\r\n            }\r\n        \r\n            return str;\r\n        };\r\n\r\n        public getClassName() : string {\r\n            return this._objectType ? this._objectType.name : \"<???>\";\r\n         };               \r\n}","import freeGlobal from './_freeGlobal.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nexport default nodeUtil;\n","//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\nimport {EventEmitter} from 'eventemitter3';\nimport {Backoff} from './backoff';\nimport {FibonacciBackoffStrategy} from './strategy/fibonacci';\nimport { BackoffStrategy } from './strategy/strategy';\n\n  // States in which the call can be.\nenum FunctionCallState {\n    // Call isn't started yet.\n    PENDING = 0,\n    // Call is in progress.\n    RUNNING = 1,\n    // Call completed successfully which means that either the wrapped function\n    // returned successfully or the maximal number of backoffs was reached.\n    COMPLETED = 2,\n    // The call was aborted.\n    ABORTED = 3\n  };\n// Wraps a function to be called in a backoff loop.\nexport class FunctionCall extends EventEmitter{\n\n    private state_: FunctionCallState;\n    protected retryPredicate_: (err: any) => boolean;\n    protected backoff_: Backoff;\n    protected numRetries_: number;\n    protected lastResult_: any[];\n    protected callback_: Function;\n    protected arguments_: any[];\n    protected function_: Function;\n    protected failAfter_: number;\n    protected strategy_: BackoffStrategy;\nconstructor(fn : Function, args : any[], callback : Function) {\n    super();\n\n\n    this.function_ = fn;\n    this.arguments_ = args;\n    this.callback_ = callback;\n    this.lastResult_ = [];\n    this.numRetries_ = 0;\n\n    this.backoff_ = null;\n    this.strategy_ = null;\n    this.failAfter_ = -1;\n    this.retryPredicate_ = FunctionCall.DEFAULT_RETRY_PREDICATE_;\n\n    this.state_ = FunctionCallState.PENDING;\n}\n\n// The default retry predicate which considers any error as retriable.\npublic static DEFAULT_RETRY_PREDICATE_(err) : boolean {\n  return true;\n};\n\n// Checks whether the call is pending.\npublic isPending() : boolean{\n    return this.state_ == FunctionCallState.PENDING;\n};\n\n// Checks whether the call is in progress.\npublic isRunning() : boolean{\n    return this.state_ == FunctionCallState.RUNNING;\n};\n\n// Checks whether the call is completed.\npublic isCompleted() : boolean{\n    return this.state_ == FunctionCallState.COMPLETED;\n};\n\n// Checks whether the call is aborted.\npublic isAborted() : boolean {\n    return this.state_ == FunctionCallState.ABORTED;\n};\n\n// Sets the backoff strategy to use. Can only be called before the call is\n// started otherwise an exception will be thrown.\npublic setStrategy(strategy : BackoffStrategy) {\n    if (!this.isPending()) {\n        throw new Error('FunctionCall in progress.')\n    }\n    this.strategy_ = strategy;\n    return this; // Return this for chaining.\n};\n\n// Sets the predicate which will be used to determine whether the errors\n// returned from the wrapped function should be retried or not, e.g. a\n// network error would be retriable while a type error would stop the\n// function call.\npublic retryIf(retryPredicate) {\n    if (!this.isPending()) {\n        throw new Error('FunctionCall in progress.')\n    }\n    this.retryPredicate_ = retryPredicate;\n    return this;\n};\n\n// Returns all intermediary results returned by the wrapped function since\n// the initial call.\npublic getLastResult() {\n    return this.lastResult_.concat();\n};\n\n// Returns the number of times the wrapped function call was retried.\npublic getNumRetries() {\n    return this.numRetries_;\n};\n\n// Sets the backoff limit.\npublic failAfter(maxNumberOfRetry : number) {\n    if (!this.isPending()) {\n        throw new Error('FunctionCall in progress.')\n    }\n    this.failAfter_ = maxNumberOfRetry;\n    return this; // Return this for chaining.\n};\n\n// Aborts the call.\npublic abort() {\n    if (this.isCompleted() || this.isAborted()) {\n      return;\n    }\n\n    if (this.isRunning()) {\n        this.backoff_.reset();\n    }\n\n    this.state_ = FunctionCallState.ABORTED;\n    this.lastResult_ = [new Error('Backoff aborted.')];\n    this.emit('abort');\n    this.doCallback_();\n};\n\n// Initiates the call to the wrapped function. Accepts an optional factory\n// function used to create the backoff instance; used when testing.\npublic start(backoffFactory) {\n    if (!this.isPending()) {\n        throw new Error('FunctionCall already started.');\n    }\n    if (this.isAborted()) {\n        throw new Error('FunctionCall is aborted.');\n    }\n\n    var strategy = this.strategy_ || new FibonacciBackoffStrategy();\n\n    this.backoff_ = backoffFactory ?\n        backoffFactory(strategy) :\n        new Backoff(strategy);\n\n    this.backoff_.on('ready', this.doCall_.bind(this, true /* isRetry */));\n    this.backoff_.on('fail', this.doCallback_.bind(this));\n    this.backoff_.on('backoff', this.handleBackoff_.bind(this));\n\n    if (this.failAfter_ > 0) {\n        this.backoff_.failAfter(this.failAfter_);\n    }\n\n    this.state_ = FunctionCallState.RUNNING;\n    this.doCall_(false /* isRetry */);\n};\n\n// Calls the wrapped function.\nprotected doCall_(isRetry : boolean) {\n    if (isRetry) {\n        this.numRetries_++;\n    }\n    var eventArgs = ['call'].concat(this.arguments_);\n    this.emit(<any>eventArgs);\n    var callback = this.handleFunctionCallback_.bind(this);\n    this.function_.apply(null, this.arguments_.concat(callback));\n};\n\n// Calls the wrapped function's callback with the last result returned by the\n// wrapped function.\nprotected doCallback_() {\n    this.callback_.apply(null, this.lastResult_);\n};\n\n// Handles wrapped function's completion. This method acts as a replacement\n// for the original callback function.\nprotected handleFunctionCallback_() {\n    if (this.isAborted()) {\n        return;\n    }\n\n    var args = Array.prototype.slice.call(arguments);\n    this.lastResult_ = args; // Save last callback arguments.\n    this.emit( <any>['callback'].concat(args));\n\n    var err = args[0];\n    if (err && this.retryPredicate_(err)) {\n        this.backoff_.backoff(err);\n    } else {\n        this.state_ = FunctionCallState.COMPLETED;\n        this.doCallback_();\n    }\n};\n\n// Handles the backoff event by reemitting it.\nprotected handleBackoff_(number, delay, err) {\n    this.emit('backoff', number, delay, err);\n};\n}","//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\nimport {EventEmitter} from 'eventemitter3';\nimport {BackoffStrategy} from './strategy/strategy'\n// A class to hold the state of a backoff operation. Accepts a backoff strategy\n// to generate the backoff delays.\nexport class Backoff extends EventEmitter { \n    handlers: { backoff: any; };\n    timeoutID_: number;\n    backoffDelay_: any;\n    maxNumberOfRetry_: any;\n    backoffNumber_: any;\n    backoffStrategy_: any;\nconstructor(backoffStrategy : BackoffStrategy) {\n    super();\n\n    this.backoffStrategy_ = backoffStrategy;\n    this.maxNumberOfRetry_ = -1;\n    this.backoffNumber_ = 0;\n    this.backoffDelay_ = 0;\n    this.timeoutID_ = -1;\n\n    this.handlers = {\n        backoff: this.onBackoff_.bind(this)\n    };\n}\n\n\n// Sets a limit, greater than 0, on the maximum number of backoffs. A 'fail'\n// event will be emitted when the limit is reached.\npublic failAfter(maxNumberOfRetry : number) {\n    if (maxNumberOfRetry <= 0) {\n        throw new Error('Expected a maximum number of retry greater than 0 but got ' +\n        maxNumberOfRetry);\n    }\n    this.maxNumberOfRetry_ = maxNumberOfRetry;\n};\n\n// Starts a backoff operation. Accepts an optional parameter to let the\n// listeners know why the backoff operation was started.\npublic backoff(err) {\n    if (this.timeoutID_ !== -1) {\n        throw new Error('Backoff in progress.')\n    }\n\n    if (this.backoffNumber_ === this.maxNumberOfRetry_) {\n        this.emit('fail', err);\n        this.reset();\n    } else {\n        this.backoffDelay_ = this.backoffStrategy_.next();\n        this.timeoutID_ = setTimeout(this.handlers.backoff, this.backoffDelay_);\n        this.emit('backoff', this.backoffNumber_, this.backoffDelay_, err);\n    }\n};\n\n// Handles the backoff timeout completion.\nprotected onBackoff_() {\n    this.timeoutID_ = -1;\n    this.emit('ready', this.backoffNumber_, this.backoffDelay_);\n    this.backoffNumber_++;\n};\n\n// Stops any backoff operation and resets the backoff delay to its inital value.\npublic reset() {\n    this.backoffNumber_ = 0;\n    this.backoffStrategy_.reset();\n    clearTimeout(this.timeoutID_);\n    this.timeoutID_ = -1;\n};\n}","//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nimport {EventEmitter} from 'eventemitter3';\n\nfunction isDef(value) {\n    return value !== undefined && value !== null;\n}\n\n// Abstract class defining the skeleton for the backoff strategies. Accepts an\n// object holding the options for the backoff strategy:\n//\n//  * `randomisationFactor`: The randomisation factor which must be between 0\n//     and 1 where 1 equates to a randomization factor of 100% and 0 to no\n//     randomization.\n//  * `initialDelay`: The backoff initial delay in milliseconds.\n//  * `maxDelay`: The backoff maximal delay in milliseconds.\nexport class BackoffStrategy {\n\n    protected randomisationFactor_: number;\n    protected maxDelay_: number;\n    protected initialDelay_: number;\nconstructor(options) {\n    options = options || {};\n\n    if (isDef(options.initialDelay) && options.initialDelay < 1) {\n        throw new Error('The initial timeout must be greater than 0.');\n    } else if (isDef(options.maxDelay) && options.maxDelay < 1) {\n        throw new Error('The maximal timeout must be greater than 0.');\n    }\n\n    this.initialDelay_ = options.initialDelay || 100;\n    this.maxDelay_ = options.maxDelay || 10000;\n\n    if (this.maxDelay_ <= this.initialDelay_) {\n        throw new Error('The maximal backoff delay must be ' +\n                        'greater than the initial backoff delay.');\n    }\n\n    if (isDef(options.randomisationFactor) &&\n        (options.randomisationFactor < 0 || options.randomisationFactor > 1)) {\n        throw new Error('The randomisation factor must be between 0 and 1.');\n    }\n\n    this.randomisationFactor_ = options.randomisationFactor || 0;\n}\n\n// Gets the maximal backoff delay.\npublic getMaxDelay() {\n    return this.maxDelay_;\n};\n\n// Gets the initial backoff delay.\npublic getInitialDelay() {\n    return this.initialDelay_;\n};\n\n// Template method that computes and returns the next backoff delay in\n// milliseconds.\npublic next() : number{\n    let backoffDelay = this.next_();\n    let randomisationMultiple = 1 + Math.random() * this.randomisationFactor_;\n    let randomizedDelay = Math.round(backoffDelay * randomisationMultiple);\n    return randomizedDelay;\n};\n\n// Computes and returns the next backoff delay. Intended to be overridden by\n// subclasses.\nprotected next_() : number {\n    throw new Error('BackoffStrategy.next_() unimplemented.');\n};\n\n// Template method that resets the backoff delay to its initial value.\npublic reset() {\n    this.reset_();\n};\n\n// Resets the backoff delay to its initial value. Intended to be overridden by\n// subclasses.\nprotected reset_() {\n    throw new Error('BackoffStrategy.reset_() unimplemented.');\n};\n}","//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\nimport {BackoffStrategy} from  './strategy';\n\n// Fibonacci backoff strategy.\nexport class FibonacciBackoffStrategy extends BackoffStrategy{\n    protected nextBackoffDelay_: number;\n    protected backoffDelay_: number;\nconstructor(options?) {\n    super(options);\n    this.backoffDelay_ = 0;\n    this.nextBackoffDelay_ = this.getInitialDelay();\n}\n\nprotected next_() : number{\n    var backoffDelay = Math.min(this.nextBackoffDelay_, this.getMaxDelay());\n    this.nextBackoffDelay_ += this.backoffDelay_;\n    this.backoffDelay_ = backoffDelay;\n    return backoffDelay;\n};\n\nprotected reset_() {\n    this.nextBackoffDelay_ = this.getInitialDelay();\n    this.backoffDelay_ = 0;\n};\n}","//      Copyright (c) 2012 Mathieu Turcotte\n//      Licensed under the MIT license.\n\n\nimport { BackoffStrategy } from './strategy';\n\n\n// Exponential backoff strategy.\nexport class ExponentialBackoffStrategy extends BackoffStrategy {\n\n    protected factor_: number;\n    protected nextBackoffDelay_: number;\n    protected backoffDelay_: number;\n    // Default multiplication factor used to compute the next backoff delay from\n    // the current one. The value can be overridden by passing a custom factor as\n    // part of the options.\n    public static readonly DEFAULT_FACTOR: number = 2;\n    constructor(options) {\n        super(options);\n        this.backoffDelay_ = 0;\n        this.nextBackoffDelay_ = this.getInitialDelay();\n        this.factor_ = ExponentialBackoffStrategy.DEFAULT_FACTOR;\n\n        if (options && options.factor !== undefined) {\n            if (options.factor <= 1) {\n                throw new Error('Exponential factor should be greater than 1 but got ' + options.factor);\n            }\n            this.factor_ = options.factor;\n        }\n    }\n\n\n    protected next_(): number {\n        this.backoffDelay_ = Math.min(this.nextBackoffDelay_, this.getMaxDelay());\n        this.nextBackoffDelay_ = this.backoffDelay_ * this.factor_;\n        return this.backoffDelay_;\n    };\n\n    protected reset_() {\n        this.backoffDelay_ = 0;\n        this.nextBackoffDelay_ = this.getInitialDelay();\n    };\n}\n","import { FunctionCall } from './function_call';\r\nimport { Backoff } from './backoff';\r\nimport { FibonacciBackoffStrategy } from './strategy/fibonacci';\r\nimport { ExponentialBackoffStrategy } from './strategy/exponential';\r\n\r\n//      Copyright (c) 2012 Mathieu Turcotte\r\n//      Licensed under the MIT license.\r\n\r\nexport {Backoff};\r\nexport {ExponentialBackoffStrategy as ExponentialStrategy};\r\nexport {FibonacciBackoffStrategy as FibonacciStrategy};\r\nexport {FunctionCall};\r\n\r\n\r\n// Constructs a Fibonacci backoff.\r\nexport function fibonacci(options) {\r\n    return new Backoff(new FibonacciBackoffStrategy(options));\r\n};\r\n\r\n// Constructs an exponential backoff.\r\nexport function exponential(options) {\r\n    return new Backoff(new ExponentialBackoffStrategy(options));\r\n};\r\n\r\n// Constructs a FunctionCall for the given function and arguments.\r\nexport function call(fn : Function, vargs?, callback? : Function) {\r\n    var args = Array.prototype.slice.call(arguments);\r\n    fn = args[0];\r\n    vargs = args.slice(1, args.length - 1);\r\n    callback = args[args.length - 1];\r\n    return new FunctionCall(fn, vargs, callback);\r\n};\r\n","/* global NumericRange*/\r\n\"use strict\";\r\n/**\r\n * @module opcua.datamodel\r\n */\r\n\r\nimport {assert} from '../assert';\r\n\r\nimport {StatusCodes} from '../constants';\r\n\r\nimport * as ec from '../basic-types';\r\n\r\n// OPC.UA Part 4 7.21 Numerical Range\r\n// The syntax for the string contains one of the following two constructs. The first construct is the string\r\n// representation of an individual integer. For example, '6' is   valid, but '6.0' and '3.2' are not. The\r\n// minimum and maximum values that can be expressed are defined by the use of this parameter and\r\n// not by this parameter type definition. The second construct is a range represented by two integers\r\n// separated by the colon   (':') character. The first integer shall always have a lower value than the\r\n// second. For example, '5:7' is valid, while '7:5' and '5:5' are not. The minimum and maximum values\r\n// that can be expressed by these integers are defined by the use of this parameter , and not by this\r\n// parameter type definition. No other characters, including white - space characters, are permitted.\r\n// Multi- dimensional arrays can be indexed by specifying a range for each dimension separated by a ','.\r\n//\r\n// For example, a 2x2 block in a 4x4 matrix   could be selected with the range '1:2,0:1'. A single element\r\n// in a multi - dimensional array can be selected by specifying a single number instead of a range.\r\n// For example, '1,1' specifies selects the [1,1] element in a two dimensional array.\r\n// Dimensions are specified in the order that they appear in the  ArrayDimensions Attribute.\r\n// All dimensions shall be specified for a  NumericRange  to be valid.\r\n//\r\n// All indexes start with 0. The maximum value for any index is one less than the length of the\r\n// dimension.\r\n\r\n\r\nvar NumericRangeEmpty_str = \"NumericRange:<Empty>\";\r\n\r\n// BNF of NumericRange\r\n// The following BNF describes the syntax of the NumericRange parameter type.\r\n// <numeric-range>    ::= <dimension> [',' <dimension>]\r\n//     <dimension>    ::= <index> [':' <index>]\r\n//         <index>    ::= <digit> [<digit>]\r\n//         <digit>    ::= '0' | '1' | '2' | '3' | '4' | '5' | '6' | '7' | '8' |9'\r\n//\r\nvar NumericRange_Schema = {\r\n    name: \"NumericRange\",\r\n    subtype: \"UAString\",\r\n    defaultValue: function () {\r\n        return new NumericRange();\r\n    },\r\n    encode: function (value, stream) {\r\n        assert(value === null || value instanceof NumericRange);\r\n        value = (value === null) ? null : value.toEncodeableString();\r\n        ec.encodeString(value, stream);\r\n    },\r\n\r\n\r\n    decode: function (stream) {\r\n        var str = ec.decodeString(stream);\r\n        return new NumericRange(str);\r\n    },\r\n\r\n\r\n    coerce: function (value) {\r\n        if (value instanceof NumericRange) {\r\n            return value;\r\n        }\r\n        if (value === null || value === undefined) {\r\n            return new NumericRange();\r\n        }\r\n        if (value === NumericRangeEmpty_str) {\r\n            return new NumericRange();\r\n        }\r\n        assert(typeof value === \"string\" || Array.isArray(value));\r\n        return new NumericRange(value);\r\n    },\r\n\r\n\r\n    random: function () {\r\n        function r() {\r\n            return Math.ceil(Math.random() * 100);\r\n        }\r\n\r\n        var start = r();\r\n        var end = start + r();\r\n        return new NumericRange(start, end);\r\n    }\r\n};\r\n\r\n\r\nimport {registerBasicType} from '../factory/factories_basic_type';\r\nregisterBasicType(NumericRange_Schema);\r\n\r\nenum NumericRangeType {\r\n    Empty, SingleValue, ArrayRange, MatrixRange, InvalidRange\r\n}\r\n\r\nvar regexNumericRange = /^[0-9:,]*$/;\r\n\r\nfunction _valid_range(low : number, high : number) {\r\n    return !((low >= high) || (low < 0 || high < 0));\r\n}\r\n\r\nfunction construct_numeric_range_bit_from_string(str : string) : NumericRange {\r\n\r\n    var values = str.split(\":\");\r\n    let range = new NumericRange();\r\n\r\n    if (values.length === 1) {\r\n        range.type = NumericRangeType.SingleValue;\r\n        range.value = parseInt(values[0], 10)\r\n        return range;\r\n    } else if (values.length === 2) {\r\n\r\n        var array = values.map(function (a) {\r\n            return parseInt(a, 10);\r\n        });\r\n        if (!_valid_range(array[0], array[1])) {\r\n            range.type = NumericRangeType.InvalidRange;\r\n            range.value = str;\r\n            return range;\r\n        }\r\n        range.type = NumericRangeType.ArrayRange;\r\n        range.value = array;\r\n        return range;\r\n    } else {\r\n        range.type = NumericRangeType.InvalidRange;\r\n        range.value = str;\r\n        return range;\r\n    }\r\n}\r\n\r\nfunction _normalize(e : NumericRange) {\r\n    return e.type === NumericRangeType.SingleValue ? [e.value, e.value] : e.value;\r\n}\r\n\r\nfunction construct_numeric_range_from_string(str : string) : NumericRange {\r\n    let range : NumericRange = new NumericRange();\r\n    if (!regexNumericRange.test(str)) {\r\n        range.type = NumericRangeType.InvalidRange;\r\n        range.value = str;\r\n        return range;\r\n    }\r\n\r\n    /* detect multi dim range*/\r\n    var values = str.split(\",\");\r\n\r\n    if (values.length === 1) {\r\n        return construct_numeric_range_bit_from_string(values[0]);\r\n\r\n    } else if (values.length === 2) {\r\n\r\n        var rowRange, colRange;\r\n        var elements = values.map(construct_numeric_range_bit_from_string);\r\n        rowRange = elements[0];\r\n        colRange = elements[1];\r\n        if (rowRange.type === NumericRangeType.InvalidRange || colRange.type === NumericRangeType.InvalidRange) {\r\n            range.type = NumericRangeType.InvalidRange;\r\n            range.value = str;\r\n            return range;\r\n        }\r\n\r\n        rowRange = _normalize(rowRange);\r\n        colRange = _normalize(colRange);\r\n        range.type = NumericRangeType.MatrixRange;\r\n        range.value = [rowRange,colRange];\r\n        return range;\r\n    } else {\r\n        // not supported yet\r\n        range.type = NumericRangeType.InvalidRange;\r\n        range.value = str;\r\n        return range;\r\n    }\r\n\r\n\r\n}\r\n\r\nfunction _construct_from_string(self : NumericRange, value) {\r\n    var nr = construct_numeric_range_from_string(value);\r\n    self.type = nr.type;\r\n    self.value = nr.value;\r\n}\r\n\r\nfunction _construct_from_values(self : NumericRange, value, second_value?) {\r\n    if (second_value === void.0 /*is undefined*/) {\r\n        (<any>self)._set_single_value(value);\r\n\r\n    } else {\r\n\r\n        if (!Number.isFinite(second_value)) {\r\n            throw new Error(\" invalid second argument, expecting a number\");\r\n        }\r\n        (<any>self)._set_range_value(value, second_value);\r\n    }\r\n\r\n}\r\n\r\nfunction _construct_from_array(self : NumericRange, value : number[]) {\r\n    assert(value.length === 2);\r\n    if (Number.isFinite(value[0])) {\r\n        if (!Number.isFinite(value[1])) {\r\n            throw new Error(\" invalid range in \" + value);\r\n        }\r\n        (<any>self)._set_range_value(value[0], value[1]);\r\n    }\r\n}\r\n\r\nfunction _construct_from_NumericRange(self : NumericRange, value : NumericRange) {\r\n    self.value = value.value; //TODO: clone me\r\n    self.type = value.type;\r\n}\r\n\r\nexport class NumericRange {\r\n    value;\r\n    type : NumericRangeType;\r\nconstructor(value?, second_value?) {\r\n\r\n    var self = this;\r\n\r\n    assert(!value || !(value instanceof NumericRange), \"use coerce to create a NumericRange\");\r\n\r\n    if (typeof value === \"string\") {\r\n        _construct_from_string(self, value);\r\n    } else if (Number.isFinite(value) && !(value === void 0)) {\r\n        _construct_from_values(self, value, second_value);\r\n\r\n    } else if (Array.isArray(value)) {\r\n        _construct_from_array(self, value);\r\n\r\n    } else if (value instanceof NumericRange) {\r\n        _construct_from_NumericRange(self, value);\r\n    } else {\r\n        this.value = \"<invalid>\";\r\n        this.type = NumericRangeType.Empty;\r\n    }\r\n\r\n    assert((this.type !== NumericRangeType.ArrayRange) || Array.isArray(this.value));\r\n}\r\n\r\nprotected _set_single_value(value) {\r\n    assert(Number.isFinite(value));\r\n    this.value = value;\r\n    this.type = NumericRangeType.SingleValue;\r\n    if (this.value < 0) {\r\n        this.type = NumericRangeType.InvalidRange;\r\n    }\r\n};\r\n\r\nprotected _set_range_value(low : number, high : number) {\r\n    assert(Number.isFinite(low));\r\n    assert(Number.isFinite(high));\r\n    this.value = [low, high];\r\n    this.type = NumericRangeType.ArrayRange;\r\n\r\n    if (!this._check_range()) {\r\n        this.type = NumericRangeType.InvalidRange;\r\n    }\r\n};\r\n\r\npublic isValid = function () {\r\n    return this.type !== NumericRangeType.InvalidRange;\r\n};\r\n\r\npublic isEmpty() {\r\n    return this.type === NumericRangeType.Empty;\r\n};\r\n\r\n\r\nprotected _check_range() {\r\n\r\n    if (this.type === NumericRangeType.MatrixRange) {\r\n        assert(Number.isFinite(this.value[0][0]));\r\n        assert(Number.isFinite(this.value[0][1]));\r\n        assert(Number.isFinite(this.value[1][0]));\r\n        assert(Number.isFinite(this.value[1][1]));\r\n\r\n        return _valid_range(this.value[0][0], this.value[0][1]) &&\r\n            _valid_range(this.value[1][0], this.value[1][1]);\r\n\r\n    } else if (this.type === NumericRangeType.ArrayRange) {\r\n        return _valid_range(this.value[0], this.value[1]);\r\n    } else if (this.type === NumericRangeType.SingleValue) {\r\n        return this.value >= 0;\r\n\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\npublic toEncodeableString () {\r\n    switch (this.type) {\r\n        case NumericRangeType.SingleValue:\r\n        case NumericRangeType.ArrayRange:\r\n        case NumericRangeType.MatrixRange:\r\n            return this.toString();\r\n        case NumericRangeType.InvalidRange:\r\n            return this.value; // value contains the origianl strings which was detected invalid\r\n        default:\r\n            return null;\r\n    }\r\n};\r\n\r\npublic toString () {\r\n\r\n    function array_range_to_string(values : number[]) {\r\n        assert(Array.isArray(values));\r\n        if (values.length === 2 && values[0] === values[1]) {\r\n            return values[0].toString();\r\n        }\r\n        return values.map(function (value) {\r\n            return value.toString(10);\r\n        }).join(\":\");\r\n    }\r\n\r\n    function matrix_range_to_string(values : any[]) {\r\n        return values.map(function (value) {\r\n            return (Array.isArray(value)) ? array_range_to_string(value) : value.toString(10);\r\n        }).join(\",\");\r\n    }\r\n\r\n    switch (this.type) {\r\n        case NumericRangeType.SingleValue:\r\n            return this.value.toString(10);\r\n\r\n        case NumericRangeType.ArrayRange:\r\n            return array_range_to_string(this.value);\r\n\r\n        case NumericRangeType.Empty:\r\n            return NumericRangeEmpty_str;\r\n\r\n        case NumericRangeType.MatrixRange:\r\n            return matrix_range_to_string(this.value);\r\n\r\n        default:\r\n            assert(this.type === NumericRangeType.InvalidRange);\r\n            return \"NumericRange:<Invalid>\";\r\n    }\r\n};\r\n\r\npublic toJSON = function () {\r\n    return this.toString();\r\n};\r\n\r\npublic isDefined () {\r\n    return this.type !== NumericRangeType.Empty && this.type !== NumericRangeType.InvalidRange;\r\n};\r\n\r\n/**\r\n * @method extract_values\r\n * @param array {Array<Any>}  flat array containing values\r\n * @param [dimensions = null ]{Array<Number>} dimension of the matrix if data is a matrix\r\n * @return {*}\r\n */\r\npublic extract_values (array : any[], dimensions) {\r\n\r\n    if (!array) {\r\n        return {\r\n            array: array,\r\n            statusCode: this.type === NumericRangeType.Empty ? StatusCodes.Good : StatusCodes.BadIndexRangeNoData\r\n        };\r\n    }\r\n    switch (this.type) {\r\n        case NumericRangeType.Empty:\r\n            return extract_empty(array, dimensions);\r\n\r\n        case NumericRangeType.SingleValue:\r\n            var index = this.value;\r\n            return extract_single_value(array, index);\r\n\r\n        case NumericRangeType.ArrayRange:\r\n            var low_index = this.value[0];\r\n            var high_index = this.value[1];\r\n            return extract_array_range(array, low_index, high_index);\r\n\r\n        case NumericRangeType.MatrixRange:\r\n            var rowRange = this.value[0];\r\n            var colRange = this.value[1];\r\n            return extract_matrix_range(array, rowRange, colRange, dimensions);\r\n\r\n        default:\r\n            return {array: [], statusCode: StatusCodes.BadIndexRangeInvalid};\r\n    }\r\n};\r\n\r\n\r\npublic set_values(arrayToAlter, newValues) {\r\n\r\n    assert_array_or_buffer(arrayToAlter);\r\n    assert_array_or_buffer(newValues);\r\n\r\n    var low_index, high_index;\r\n\r\n    switch (this.type) {\r\n        case NumericRangeType.Empty:\r\n            low_index = 0;\r\n            high_index = arrayToAlter.length - 1;\r\n            break;\r\n        case NumericRangeType.SingleValue:\r\n            low_index = this.value;\r\n            high_index = this.value;\r\n            break;\r\n        case NumericRangeType.ArrayRange:\r\n            low_index = this.value[0];\r\n            high_index = this.value[1];\r\n            break;\r\n        case NumericRangeType.MatrixRange:\r\n            // for the time being MatrixRange is not supported\r\n            return {array: arrayToAlter, statusCode: StatusCodes.BadIndexRangeNoData};\r\n        default:\r\n            return {array: [], statusCode: StatusCodes.BadIndexRangeInvalid};\r\n    }\r\n\r\n    if (high_index >= arrayToAlter.length || low_index >= arrayToAlter.length) {\r\n        return {array: [], statusCode: StatusCodes.BadIndexRangeNoData};\r\n    }\r\n    if ((this.type !== NumericRangeType.Empty) && newValues.length !== (high_index - low_index + 1)) {\r\n        return {array: [], statusCode: StatusCodes.BadIndexRangeInvalid};\r\n    }\r\n\r\n\r\n    var insertInPlace = (Array.isArray(arrayToAlter) ? insertInPlaceStandardArray : (arrayToAlter instanceof Buffer ? insertInPlaceBuffer : insertInPlaceTypedArray));\r\n    return {\r\n        array: insertInPlace(arrayToAlter, low_index, high_index, newValues),\r\n        statusCode: StatusCodes.Good\r\n    };\r\n\r\n};\r\n\r\n\r\n\r\n} \r\n\r\n\r\nfunction slice(arr, start, end) {\r\n\r\n    assert(arr, \"expecting value to slice\");\r\n\r\n    if (start===0 && end === arr.length) {\r\n        return arr;\r\n    }\r\n\r\n    var res;\r\n    //xx console.log(\"arr\",arr.constructor.name,arr.length,start,end);\r\n    if (arr.buffer instanceof ArrayBuffer) {\r\n        //xx console.log(\"XXXX ERN ERN ERN 2\");\r\n        res = arr.subarray(start, end);\r\n    } else {\r\n        //xx console.log(\"XXXX ERN ERN ERN 3\");\r\n\r\n        assert(typeof arr.slice === 'function');\r\n        assert(arr instanceof Array || typeof arr === \"string\");\r\n        res = arr.slice(start, end);\r\n    }\r\n    if (res instanceof Uint8Array && arr instanceof ArrayBuffer) {\r\n\r\n        //TODO: ???\r\n        res = res.buffer;\r\n    }\r\n    return res;\r\n}\r\n\r\nfunction extract_empty(array, dimensions) {\r\n    return {\r\n        array: slice(array, 0, array.length),\r\n        dimensions: dimensions,\r\n        statusCode: StatusCodes.Good\r\n    };\r\n}\r\n\r\nfunction extract_single_value(array : any[], index) {\r\n    if (index >= array.length) {\r\n        return {array: [], statusCode: StatusCodes.BadIndexRangeNoData};\r\n    }\r\n    return {\r\n        array: slice(array, index, index + 1),\r\n        statusCode: StatusCodes.Good\r\n    };\r\n}\r\n\r\nfunction extract_array_range(array : any[], low_index, high_index) {\r\n    assert(Number.isFinite(low_index) && Number.isFinite(high_index));\r\n    assert(low_index >= 0);\r\n    assert(low_index <= high_index);\r\n    if (low_index >= array.length) {\r\n        return {array: [], statusCode: StatusCodes.BadIndexRangeNoData};\r\n    }\r\n    // clamp high index\r\n    high_index = Math.min(high_index, array.length - 1);\r\n\r\n    return {\r\n        array: slice(array, low_index, high_index + 1),\r\n        statusCode: StatusCodes.Good\r\n    };\r\n\r\n}\r\n\r\nfunction isArrayLike(value) {\r\n    return Number.isFinite(value.length) || value.hasOwnProperty(\"length\");\r\n}\r\n\r\nfunction extract_matrix_range(array : any[], rowRange, colRange, dimension) {\r\n    assert(Array.isArray(rowRange) && Array.isArray(colRange));\r\n    if (array.length === 0) {\r\n        return {\r\n            array: [],\r\n            statusCode: StatusCodes.BadIndexRangeNoData\r\n        };\r\n    }\r\n    if (isArrayLike(array[0]) && !dimension) {\r\n        // like extracting data from a one dimensionnal array of strings or byteStrings...\r\n        var result = extract_array_range(array, rowRange[0], rowRange[1]);\r\n        for (var i = 0; i < result.array.length; i++) {\r\n            var e = result.array[i];\r\n            result.array[i] = extract_array_range(e, colRange[0], colRange[1]).array;\r\n        }\r\n        return result;\r\n    }\r\n    if (!dimension) {\r\n        return {\r\n            array: [],\r\n            statusCode: StatusCodes.BadIndexRangeNoData\r\n        };\r\n    }\r\n\r\n    assert(dimension, \"expecting dimension to know the shape of the matrix represented by the flat array\");\r\n\r\n    //\r\n    var rowLow = rowRange[0];\r\n    var rowHigh = rowRange[1];\r\n    var colLow = colRange[0];\r\n    var colHigh = colRange[1];\r\n\r\n    var nbRow = dimension[0];\r\n    var nbCol = dimension[1];\r\n\r\n    var nbRowDest = rowHigh - rowLow + 1;\r\n    var nbColDest = colHigh - colLow + 1;\r\n\r\n\r\n    // constrruct an array of the same type with the appropriate length to\r\n    // store the extracted matrix.\r\n    let ctor = array.constructor;\r\n    var tmp = new (<any>ctor)(nbColDest * nbRowDest);\r\n\r\n    var row, col, r, c;\r\n    r = 0;\r\n    for (row = rowLow; row <= rowHigh; row++) {\r\n        c = 0;\r\n        for (col = colLow; col <= colHigh; col++) {\r\n            var srcIndex = row * nbCol + col;\r\n            var destIndex = r * nbColDest + c;\r\n            tmp[destIndex] = array[srcIndex];\r\n            c++;\r\n        }\r\n        r += 1;\r\n    }\r\n    return {\r\n        array: tmp,\r\n        dimensions: [nbRowDest, nbColDest],\r\n        statusCode: StatusCodes.Good\r\n    };\r\n\r\n}\r\n\r\n\r\nfunction assert_array_or_buffer(array) {\r\n    assert(Array.isArray(array) || (array.buffer instanceof ArrayBuffer) || array instanceof Buffer);\r\n}\r\n\r\nfunction insertInPlaceStandardArray(arrayToAlter, low, high, newValues) {\r\n    var args = [low, high - low + 1].concat(newValues);\r\n    arrayToAlter.splice.apply(arrayToAlter, args);\r\n    return arrayToAlter;\r\n}\r\n\r\nfunction insertInPlaceTypedArray(arrayToAlter, low, high, newValues) {\r\n\r\n    if (low === 0 && high === arrayToAlter.length - 1) {\r\n        return new arrayToAlter.constructor(newValues);\r\n    }\r\n    assert(newValues.length === high - low + 1);\r\n    arrayToAlter.subarray(low, high + 1).set(newValues);\r\n    return arrayToAlter;\r\n}\r\n\r\nfunction insertInPlaceBuffer(bufferToAlter, low, high, newValues) {\r\n    if (low === 0 && high === bufferToAlter.length - 1) {\r\n        return Buffer.from(newValues);\r\n    }\r\n    assert(newValues.length === high - low + 1);\r\n    for (var i = 0; i < newValues.length; i++) {\r\n        bufferToAlter[i + low] = newValues[i];\r\n    }\r\n    return bufferToAlter;\r\n}\r\n\r\nfunction _overlap(l1, h1, l2, h2) {\r\n    return Math.max(l1, l2) <= Math.min(h1, h2);\r\n}\r\n\r\nvar empty = new NumericRange();\r\nexport function numericRange_overlap(nr1 : NumericRange, nr2 : NumericRange) {\r\n    nr1 = nr1 || empty;\r\n    nr2 = nr2 || empty;\r\n    assert(nr1 instanceof NumericRange);\r\n    assert(nr2 instanceof NumericRange);\r\n\r\n    if (NumericRangeType.Empty === nr1.type || NumericRangeType.Empty === nr2.type) {\r\n        return true;\r\n    }\r\n    if (NumericRangeType.SingleValue === nr1.type && NumericRangeType.SingleValue === nr2.type) {\r\n        return nr1.value === nr2.value;\r\n    }\r\n    if (NumericRangeType.ArrayRange === nr1.type && NumericRangeType.ArrayRange === nr2.type) {\r\n        // +-----+        +------+     +---+       +------+\r\n        //     +----+       +---+    +--------+  +---+\r\n        var l1 = nr1.value[0];\r\n        var h1 = nr1.value[1];\r\n        var l2 = nr2.value[0];\r\n        var h2 = nr2.value[1];\r\n        return _overlap(l1, h1, l2, h2);\r\n    }\r\n    console.log(\" NR1 = \", nr1.toEncodeableString());\r\n    console.log(\" NR2 = \", nr2.toEncodeableString());\r\n    assert(false, \"not implemented yet \"); // TODO\r\n};\r\n","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n","module.exports = function(originalModule) {\n\tif (!originalModule.webpackPolyfill) {\n\t\tvar module = Object.create(originalModule);\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"exports\", {\n\t\t\tenumerable: true\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\nimport {assert} from '../assert';\r\n\r\nimport * as ec from '../basic-types';\r\nimport {registerType,_defaultTypeMap} from './factories_builtin_types';\r\n\r\n\r\n\r\n\r\n/**\r\n * register a Basic Type ,\r\n * A basic type is new entity type that resolved to  a SubType\r\n * @example:\r\n *\r\n *\r\n *   registerBasicType({name:\"Duration\"   ,subtype:\"Double\"});\r\n *\r\n * @method registerBasicType\r\n * @param schema\r\n * @param schema.name {String}\r\n * @param schema.subtype {String} mandatory, the basic type from which the new type derives.\r\n *\r\n * @param [schema.encode] {Function} optional,a specific encoder function to encode an instance of this type.\r\n * @param schema.encode.value  {*}\r\n * @param schema.encode.stream {Stream}\r\n *\r\n * @param [schema.decode] {Function} optional,a specific decoder function that returns  the decode value out of the stream.\r\n * @param [schema.decode.stream] {Stream}\r\n *\r\n * @param [schema.coerce] {Function} optional, a method to convert a value into the request type.\r\n * @param schema.coerce.value {*} the value to coerce.\r\n *\r\n * @param [schema.random] {Function} optional, a method to construct a random object of this type\r\n *\r\n * @param [schema.toJSONFunc]{Function} optional, a method to convert a value into the request type.\r\n */\r\nexport function registerBasicType(schema) {\r\n    var name = schema.name;\r\n\r\n    var t = _defaultTypeMap[schema.subtype];\r\n\r\n    /* istanbul ignore next */\r\n    if (!t) {\r\n        console.log(JSON.stringify(schema));\r\n        throw new Error(\" cannot find subtype \" + schema.subtype);\r\n    }\r\n    assert('function' === typeof t.decode);\r\n\r\n    var encodeFunc = schema.encode || t.encode;\r\n    assert('function' === typeof encodeFunc);\r\n\r\n    var decodeFunc = schema.decode || t.decode;\r\n    assert('function' === typeof decodeFunc);\r\n\r\n    var defaultValue = (schema.defaultValue === undefined ) ? t.defaultValue : schema.defaultValue;\r\n    // assert('function' === typeof defaultValue);\r\n\r\n    var coerceFunc = schema.coerce || t.coerce;\r\n\r\n    var toJSONFunc = schema.toJSON || t.toJSON;\r\n\r\n    var random = schema.random || defaultValue;\r\n\r\n    var new_schema = {\r\n        name: name,\r\n        encode: encodeFunc,\r\n        decode: decodeFunc,\r\n        defaultValue: defaultValue,\r\n        coerce: coerceFunc,\r\n        toJSON: toJSONFunc,\r\n        subType: schema.subtype,\r\n        random: random\r\n    };\r\n    registerType(new_schema);\r\n}\r\n\r\n// =============================================================================================\r\n// Registering the Basic Type already defined int the OPC-UA Specification\r\n// =============================================================================================\r\n\r\nregisterBasicType({name: \"Counter\", subtype: \"UInt32\"});\r\n// OPC Unified Architecture, part 3.0 $8.13 page 65\r\nregisterBasicType({name: \"Duration\", subtype: \"Double\"});\r\nregisterBasicType({name: \"UAString\", subtype: \"String\"});\r\nregisterBasicType({name: \"UtcTime\",  subtype: \"DateTime\"});\r\nregisterBasicType({name: \"Int8\",     subtype: \"SByte\"});\r\nregisterBasicType({name: \"UInt8\",    subtype: \"Byte\"});\r\n//xx registerBasicType({name:\"XmlElement\" ,subtype:\"String\"  });\r\nregisterBasicType({name: \"Time\",     subtype: \"String\"});\r\n// string in the form \"en-US\" or \"de-DE\" or \"fr\" etc...\r\n\r\nregisterBasicType({name: \"LocaleId\",\r\n    subtype: \"String\",\r\n    encode: ec.encodeLocaleId,\r\n    decode: ec.decodeLocaleId,\r\n    validate: ec.validateLocaleId,\r\n    defaultValue: null\r\n});\r\n\r\nregisterBasicType({name: \"ContinuationPoint\", subtype: \"ByteString\"});\r\nregisterBasicType({name: \"Image\",    subtype: \"ByteString\"});\r\nregisterBasicType({name: \"ImageBMP\", subtype: \"ByteString\"});\r\nregisterBasicType({name: \"ImageJPG\", subtype: \"ByteString\"});\r\nregisterBasicType({name: \"ImagePNG\", subtype: \"ByteString\"});\r\nregisterBasicType({name: \"ImageGIF\", subtype: \"ByteString\"});\r\n","/*****************************************************************\n  * Delayed: A collection of setTimeout-related function wranglers\n  * Copyright (c) Rod Vagg (@rvagg) 2014\n  * https://github.com/rvagg/delayed\n  * License: MIT\n  */\n\n!(function init (name, definition) {\n  if (typeof module != 'undefined' && module.exports) module.exports = definition()\n  else if (typeof define === 'function' && define.amd) define(name, definition)\n  else this[name] = definition()\n}('delayed', function setup () {\n\n  var context = this\n    , old     = context.delayed\n    , deferMs = 1\n\n\n  function slice (arr, i) {\n    return Array.prototype.slice.call(arr, i)\n  }\n\n\n  function delay (fn, ms, ctx) {\n    var args = slice(arguments, 3)\n    return setTimeout(function delayer () {\n      fn.apply(ctx || null, args)\n    }, ms)\n  }\n\n\n  function defer (fn, ctx) {\n    return delay.apply(null, [ fn, deferMs, ctx ].concat(slice(arguments, 2)))\n  }\n\n\n  function delayed () {\n    var args = slice(arguments)\n    return function delayeder () {\n      return delay.apply(null, args.concat(slice(arguments)))\n    }\n  }\n\n\n  function deferred (fn, ctx) {\n    return delayed.apply(null, [ fn, deferMs, ctx ].concat(slice(arguments, 2)))\n  }\n\n\n  function cumulativeDelayed (fn, ms, ctx) {\n    var args = slice(arguments, 3)\n      , timeout = null\n\n    return function cumulativeDelayeder () {\n      var _args = slice(arguments)\n        , f = function cumulativeDelayedCaller () {\n            return fn.apply(ctx || null, args.concat(_args))\n          }\n      if (timeout != null)\n        clearTimeout(timeout)\n      return timeout = setTimeout(f, ms)\n    }\n  }\n\n\n  function noConflict () {\n    context.delayed = old\n    return this\n  }\n\n\n  return {\n      delay             : delay\n    , defer             : defer\n    , delayed           : delayed\n    , deferred          : deferred\n    , noConflict        : noConflict\n    , cumulativeDelayed : cumulativeDelayed\n    , debounce          : cumulativeDelayed\n  }\n\n}));\n","\"use strict\";\r\n\r\nimport {assert} from '../assert';\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {DataStream} from '../basic-types/DataStream'\r\nimport { MessageSecurityMode } from '../service-secure-channel';\r\nimport { SecurityPolicy, getCryptoFactory, toUri,/* **nomsgcrypt** getOptionsForSymmetricSignAndEncrypt,*/ ICryptoFactory } from './security_policy';\r\nimport { MessageBuilder } from './message_builder';\r\nimport { OPCUAClientOptions,OPCUAClientBase } from '../client/client_base';\r\n\r\nimport * as log from 'loglevel';\r\nimport {doDebug,debugLog,hexDump} from '../common/debug'\r\nimport {StatusCodes} from '../constants/raw_status_codes';\r\n/* global Buffer*/\r\n/**\r\n * @module opcua.client\r\n */\r\nvar crypto : Crypto = window.crypto || (<any>window).msCrypto;\r\n\r\nimport * as utils from '../utils';\r\nvar get_clock_tick = utils.get_clock_tick;\r\n\r\nimport {verify_message_chunk,readMessageHeader} from '../chunkmanager';\r\n\r\nimport * as backoff from '../backoff';\r\n\r\nimport {messageHeaderToString} from './message_header_to_string';\r\nimport {MessageChunker} from \"./message_chunker\";\r\nimport * as secure_channel_service from \"../service-secure-channel\";\r\nimport { ChannelSecurityToken } from '../generated/ChannelSecurityToken';\r\nimport { ClientWSTransport } from '../transport/client_ws_transport';\r\n\r\nvar OpenSecureChannelRequest = secure_channel_service.OpenSecureChannelRequest;\r\nvar CloseSecureChannelRequest = secure_channel_service.CloseSecureChannelRequest;\r\nvar OpenSecureChannelResponse = secure_channel_service.OpenSecureChannelResponse;\r\nvar AsymmetricAlgorithmSecurityHeader = secure_channel_service.AsymmetricAlgorithmSecurityHeader;\r\nvar ServiceFault = secure_channel_service.ServiceFault;\r\nvar SecurityTokenRequestType = secure_channel_service.SecurityTokenRequestType;\r\n\r\nvar do_trace_message = false;\r\nvar do_trace_statistics = false;\r\n\r\nfunction process_request_callback(request_data, err, response) {\r\n\r\n    assert('function' === typeof request_data.callback);\r\n\r\n    if (!response && !err && request_data.msgType !== \"CLO\") {\r\n        // this case happens when CLO is called and when some pending transactions\r\n        // remains in the queue...\r\n        err = new Error(\" Connection has been closed by client , but this transaction cannot be honored\");\r\n    }\r\n    if (response && response instanceof ServiceFault) {\r\n\r\n        response.responseHeader.stringTable = response.responseHeader.stringTable || [];\r\n        response.responseHeader.stringTable = [response.responseHeader.stringTable.join(\"\\n\")];\r\n        err = new Error(\" ServiceFault returned by server \" + response.toString());\r\n        err.response = response;\r\n        response = null;\r\n    }\r\n\r\n    assert((request_data.msgType === \"CLO\") || ((err && !response) || (!err && response)));\r\n\r\n    var the_callback_func = request_data.callback;\r\n    request_data.callback = null;\r\n    the_callback_func(err, response);\r\n}\r\n\r\nfunction _on_message_received(response, msgType, requestId) {\r\n\r\n    /* jshint validthis: true */\r\n    \r\n    assert(msgType !== \"ERR\");\r\n\r\n    /* istanbul ignore next */\r\n    if (do_trace_message) {\r\n        console.log(\"xxxxx  <<<<<< _on_message_received \", requestId, response._schema.name);\r\n    }\r\n\r\n    var request_data = this._request_data[requestId];\r\n    if (!request_data) {\r\n        console.log(\"xxxxx  <<<<<< _on_message_received \", requestId, response._schema.name);\r\n        throw new Error(\" =>  invalid requestId =\" + requestId);\r\n    }\r\n\r\n    log.debug(\" Deleting this._request_data\", requestId);\r\n    delete this._request_data[requestId];\r\n\r\n    /* istanbul ignore next */\r\n    if (response.responseHeader.requestHandle !== request_data.request.requestHeader.requestHandle) {\r\n        var expected = request_data.request.requestHeader.requestHandle;\r\n        var actual = response.responseHeader.requestHandle;\r\n        var moreinfo = \"Class = \" + response._schema.name;\r\n        console.log((\" WARNING SERVER responseHeader.requestHandle is invalid\" +\r\n          \": expecting 0x\" + expected.toString(16) +\r\n          \"  but got 0x\" + actual.toString(16) + \" \"), moreinfo);\r\n    }\r\n\r\n    request_data.response = response;\r\n\r\n    /* istanbul ignore next */\r\n    if (doDebug) {\r\n        log.debug(\" RESPONSE \");\r\n        log.debug(response.toString());\r\n    }\r\n    // record tick2 : after response message has been received, before message processing\r\n    request_data._tick2 = this.messageBuilder._tick1;\r\n    request_data.bytesRead = this.messageBuilder.total_message_size;\r\n\r\n    // record tick3 : after response message has been received, before message processing\r\n    request_data._tick3 = get_clock_tick();\r\n    process_request_callback(request_data, null, response);\r\n\r\n\r\n    // record tick4 after callback\r\n    request_data._tick4 = get_clock_tick();\r\n    // store some statistics\r\n    this._record_transaction_statistics(request_data);\r\n\r\n    // notify that transaction is completed\r\n    this.on_transaction_completed(this.last_transaction_stats);\r\n\r\n}\r\n\r\nvar g_channelId = 0;\r\nvar defaultTransactionTimeout = 60 * 1000; // 1 minute\r\n\r\nexport interface ITransactionStats {\r\n    request: any;\r\n    response: any;\r\n    bytesWritten: number;\r\n    bytesRead: number;\r\n    lap_sending_request: number;\r\n    lap_waiting_response: number;\r\n    lap_receiving_response: number;\r\n    lap_processing_response: number;\r\n    lap_transaction: number;\r\n}\r\n\r\nexport function dump_transaction_statistics(stats : ITransactionStats ) {\r\n  \r\n\r\n    function w(str) {\r\n        return (\"                  \" + str).substr(-12);\r\n    }\r\n\r\n    console.log(\"--------------------------------------------------------------------->> Stats\");\r\n    console.log(\"   request                   : \",\r\n      stats.request._schema.name.toString().yellow, \" / \",\r\n      stats.response._schema.name.toString().yellow, \" - \",\r\n      stats.response.responseHeader.serviceResult.toString());\r\n    console.log(\"   Bytes Read                : \", w(stats.bytesRead), \" bytes\");\r\n    console.log(\"   Bytes Written             : \", w(stats.bytesWritten), \" bytes\");\r\n    console.log(\"   transaction duration      : \", w(stats.lap_transaction.toFixed(3)), \" milliseconds\");\r\n    console.log(\"   time to send request      : \", w((stats.lap_sending_request).toFixed(3)), \" milliseconds\");\r\n    console.log(\"   time waiting for response : \", w((stats.lap_waiting_response).toFixed(3)), \" milliseconds\");\r\n    console.log(\"   time to receive response  : \", w((stats.lap_receiving_response).toFixed(3)), \" milliseconds\");\r\n    console.log(\"   time processing response  : \", w((stats.lap_processing_response).toFixed(3)), \" milliseconds\");\r\n\r\n    console.log(\"---------------------------------------------------------------------<< Stats\");\r\n\r\n}\r\n\r\n\r\n/**\r\n * a ClientSecureChannelLayer represents the client side of the OPCUA secure channel.\r\n * @class ClientSecureChannelLayer\r\n * @extends EventEmitter\r\n * @uses MessageChunker\r\n * @uses MessageBuilder\r\n * @param options\r\n * @param {Number} [options.defaultSecureTokenLifetime=30000 = 30 seconds]\r\n * @param [options.securityMode=MessageSecurityMode.NONE]\r\n * @param [options.securityPolicy=SecurityPolicy.None]\r\n * @param [options.serverCertificate=null] the serverCertificate (required if securityMode!=None)\r\n * @param options.parent {OPCUAClientBase} parent\r\n * @param [options.factory] an factory that provides a method createObjectId(id) for the message builder\r\n * @param [options.transportTimeout = ClientSecureChannelLayer.defaultTransportTimeout = 10 seconds] the transport timeout interval in ms\r\n * @param [options.connectionStrategy] {Object}\r\n * @param [options.connectionStrategy.maxRetry      = 10]\r\n * @param [options.connectionStrategy.initialDelay  = 10]\r\n * @param [options.connectionStrategy.maxDelay      = 10000]\r\n * @constructor\r\n */\r\nexport class ClientSecureChannelLayer extends EventEmitter implements ITransactionStats{\r\n\r\n    \r\n    _securityHeader: any;\r\n    _derivedKeys: any;\r\n    _receiverCertificate: string;\r\n    _serverNonce: any;\r\n    _receiverPublicKey(arg0: any): any {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    _transport: ClientWSTransport;\r\n    _isOpened: boolean;\r\n    _securityToken: ChannelSecurityToken;\r\n    protected _lastRequestId : number;\r\n    protected parent : OPCUAClientBase\r\n    protected _clientNonce : Uint8Array;\r\n    public protocolVersion : number;\r\n    protected messageChunker : MessageChunker;\r\n    protected _securityMode : MessageSecurityMode;\r\n    protected securityPolicy : SecurityPolicy;\r\n    protected defaultSecureTokenLifetime : number;\r\n    protected serverCertificate : string;\r\n    protected messageBuilder : MessageBuilder;\r\n\r\n    protected _request_data : any;\r\n    protected __in_normal_close_operation : boolean = false;\r\n    protected _renew_security_token_requested : number = 0;\r\n    protected _timedout_request_count : number = 0;\r\n    protected _securityTokenTimeoutId = null;\r\n\r\n   // protected _transport : \r\n    protected transportTimeout : number;\r\n    protected channelId;\r\n    protected connectionStrategy : any;\r\n\r\n    protected __call : any;\r\n    \r\n    public static defaultTransportTimeout : number = 10 * 1000; // 1 minute\r\n\r\n    //transaction stats\r\n    request: any;\r\n    response: any;\r\n    lap_sending_request: number;\r\n    lap_waiting_response: number;\r\n    lap_receiving_response: number;\r\n    lap_processing_response: number;\r\n    lap_transaction: number;\r\n\r\n    last_transaction_stats : ITransactionStats;\r\n    /**\r\n     * true if the secure channel is trying to establish the connection with the server. In this case, the client\r\n     * may be in the middle of the b ackoff connection process.\r\n     *\r\n     * @property isConnecting\r\n     * @type {Boolean}\r\n     *\r\n     */\r\n    public get isConnecting() {\r\n        return (!!this.__call);\r\n    };\r\n\r\n    get bytesRead() {\r\n        return this._transport ? this._transport.bytesRead : 0;\r\n    }\r\n    \r\n    get bytesWritten() {\r\n        return this._transport ? this._transport.bytesWritten : 0;\r\n    }\r\n\r\n    get securityMode() : MessageSecurityMode{\r\n        return this._securityMode;\r\n    }\r\n    \r\n    get transactionsPerformed() {\r\n        return this._lastRequestId;\r\n    }\r\n    \r\n    get timedOutRequestCount() {\r\n        return this._timedout_request_count;\r\n    }\r\n\r\n    get clientNonce() {\r\n        return this._clientNonce;\r\n    }\r\n\r\n    get endpointUrl() {\r\n        return this._transport.endpointUrl;\r\n    }\r\n\r\n    constructor(options : any) {\r\n    super();\r\n    options = options || {};\r\n\r\n    this._lastRequestId = 0;\r\n    this.parent = options.parent;\r\n    this._clientNonce = null; // will be created when needed\r\n    this.protocolVersion = 0;\r\n\r\n\r\n    this.messageChunker = new MessageChunker({\r\n        derivedKeys: null\r\n    });\r\n\r\n    this.defaultSecureTokenLifetime = options.defaultSecureTokenLifeTime || 30000;\r\n\r\n    this._securityMode = options.securityMode || MessageSecurityMode.None;\r\n\r\n    this.securityPolicy = options.securityPolicy || SecurityPolicy.None;\r\n\r\n    this.serverCertificate = options.serverCertificate;\r\n\r\n    assert(this._securityMode !== MessageSecurityMode.Invalid, \"invalid security Mode\");\r\n    if (this._securityMode !== MessageSecurityMode.None) {\r\n        assert(this.serverCertificate,\"Expecting a valid certificate when security mode is not None\");\r\n        assert(this.securityPolicy !== SecurityPolicy.None, \"Security Policy None is not a valid choice\");\r\n    }\r\n\r\n    this.messageBuilder = new MessageBuilder();\r\n    this.messageBuilder.securityMode = this._securityMode;\r\n    this.messageBuilder.privateKey = this.getPrivateKey();\r\n\r\n    this._request_data = {};\r\n\r\n    this.messageBuilder\r\n    .on(\"message\", _on_message_received.bind(this))\r\n    .on(\"start_chunk\", function () {\r\n        // record tick2: when the first response chunk is received\r\n        // request_data._tick2 = get_clock_tick();\r\n    }).on(\"error\", (err, requestId) => {\r\n        //\r\n        debugLog(\"request id = \" + requestId + err);\r\n        var request_data = this._request_data[requestId];\r\n        console.log(\" message was \");\r\n        console.log(request_data);\r\n        if (!request_data) {\r\n            request_data = this._request_data[requestId + 1];\r\n            console.log(\" message was 2:\", request_data ? request_data.request.toString() : \"<null>\");\r\n        }\r\n        // xx console.log(request_data.request.toString());\r\n\r\n    });\r\n\r\n    this.__in_normal_close_operation = false;\r\n    this._renew_security_token_requested = 0;\r\n    this._timedout_request_count = 0;\r\n    this._securityTokenTimeoutId = null;\r\n    this.transportTimeout = options.transportTimeout || ClientSecureChannelLayer.defaultTransportTimeout;\r\n    this.channelId = g_channelId;\r\n    g_channelId += 1;\r\n\r\n\r\n    options.connectionStrategy = options.connectionStrategy || {};\r\n    this.connectionStrategy = {};\r\n    this.connectionStrategy.maxRetry = utils.isNullOrUndefined(options.connectionStrategy.maxRetry) ? 10 : options.connectionStrategy.maxRetry;\r\n    this.connectionStrategy.initialDelay = options.connectionStrategy.initialDelay || 10;\r\n    this.connectionStrategy.maxDelay = options.connectionStrategy.maxDelay || 10000;\r\n\r\n    var r = options.connectionStrategy.randomisationFactor;\r\n    this.connectionStrategy.randomisationFactor = (r === undefined) ? 0 : r;\r\n\r\n    \r\n}\r\n\r\n/**\r\n * @method getPrivateKey\r\n * @return {Buffer} the privateKey\r\n */\r\npublic getPrivateKey() {\r\n    return this.parent ? this.parent.getPrivateKey() : null;\r\n};\r\n\r\npublic getCertificateChain() {\r\n    return this.parent ? this.parent.getCertificateChain() : null;\r\n};\r\n\r\n\r\nprotected on_transaction_completed(transaction_stats : ITransactionStats) {\r\n    /* istanbul ignore next */\r\n    if (doDebug) {\r\n        // dump some statistics about transaction ( time and sizes )\r\n        dump_transaction_statistics(transaction_stats);\r\n    }\r\n    this.emit(\"end_transaction\", transaction_stats);\r\n};\r\n\r\nprotected _record_transaction_statistics(request_data) {\r\n\r\n    //---------------------------------------------------------------------------------------------------------|-\r\n    //      _tick0                _tick1                         _tick2                       _tick3          _tick4\r\n    //          sending request\r\n    //        |---------------------|  waiting response\r\n    //                              |------------------------------|      receiving response\r\n    //                                                             |---------------------------| process.resp\r\n    //                                                                                         |---------------|\r\n    this.last_transaction_stats = {\r\n        request: request_data.request,\r\n        response: request_data.response,\r\n        bytesWritten: request_data.bytesWritten_after - request_data.bytesWritten_before,\r\n        bytesRead: request_data.bytesRead,\r\n        lap_sending_request: request_data._tick1 - request_data._tick0,\r\n        lap_waiting_response: request_data._tick2 - request_data._tick1,\r\n        lap_receiving_response: request_data._tick3 - request_data._tick2,\r\n        lap_processing_response: request_data._tick4 - request_data._tick3,\r\n        lap_transaction: request_data._tick4 - request_data._tick0\r\n    };\r\n\r\n\r\n    if (do_trace_statistics) {\r\n        dump_transaction_statistics(this.last_transaction_stats);\r\n    }\r\n\r\n};\r\n\r\n\r\npublic isTransactionInProgress() {\r\n    \r\n    return Object.keys(this._request_data).length > 0;\r\n};\r\n\r\nprotected _cancel_pending_transactions(err) {\r\n    /* jshint validthis: true */\r\n \r\n    debugLog(\"_cancel_pending_transactions  \" + Object.keys(this._request_data) +  (this._transport ? this._transport.name : \"no transport\"));\r\n\r\n    assert(typeof err === 'object', \"expecting valid error\");\r\n    Object.keys(this._request_data).forEach(function (key) {\r\n        var request_data = this._request_data[key];\r\n        debugLog(\"xxxx Cancelling pending transaction \" + request_data.key + request_data.msgType + request_data.request._schema.name);\r\n        process_request_callback(request_data, err, null);\r\n    });\r\n\r\n    this._request_data = {};\r\n\r\n}\r\n\r\nprotected _on_transport_closed(error) {\r\n\r\n    debugLog(\" =>ClientSecureChannelLayer#_on_transport_closed\");\r\n    /* jshint validthis: true */\r\n    \r\n    if (this.__in_normal_close_operation) {\r\n        error = null;\r\n    }\r\n    /**\r\n     * notify the observers that the transport connection has ended.\r\n     * The error object is null or undefined if the disconnection was initiated by the ClientSecureChannelLayer.\r\n     * A Error object is provided if the disconnection has been initiated by an external cause.\r\n     *\r\n     * @event close\r\n     * @param error {Error}\r\n     */\r\n    this.emit(\"close\", error);\r\n    this._cancel_pending_transactions(error);\r\n\r\n    this._transport = null;\r\n\r\n}\r\n\r\nprotected _on_security_token_about_to_expire() {\r\n\r\n    debugLog(\" client: Security Token \" + this._securityToken.tokenId + \" is about to expired, let's raise lifetime_75 event \");\r\n\r\n    /**\r\n     * notify the observer that the secure channel has now reach 75% of its allowed live time and\r\n     * that a new token is going to be requested.\r\n     * @event  lifetime_75\r\n     * @param  securityToken {Object} : the security token that is about to expire.\r\n     *\r\n     */\r\n    this.emit(\"lifetime_75\", this._securityToken);\r\n\r\n    this._renew_security_token();\r\n\r\n}\r\n\r\nprotected _cancel_security_token_watchdog() {\r\n\r\n    if (this._securityTokenTimeoutId) {\r\n        clearTimeout(this._securityTokenTimeoutId);\r\n        this._securityTokenTimeoutId = null;\r\n    }\r\n}\r\n\r\n\r\nprotected _install_security_token_watchdog() {\r\n\r\n    //\r\n    // install timer event to raise a 'lifetime_75' when security token is about to expired\r\n    // so that client can request for a new security token\r\n    //\r\n    var liveTime = this._securityToken.revisedLifetime;\r\n    assert(liveTime && liveTime > 20);\r\n    debugLog(\" revisedLifeTime = \" + liveTime);\r\n\r\n    assert(this._securityTokenTimeoutId === null);\r\n    this._securityTokenTimeoutId = setTimeout( () => {\r\n        this._securityTokenTimeoutId = null;\r\n        this._on_security_token_about_to_expire();\r\n\r\n    }, liveTime * 75 / 100);\r\n}\r\n\r\nprotected _build_client_nonce() {\r\n\r\n    if (this._securityMode === MessageSecurityMode.None) {\r\n        return null;\r\n    }\r\n    // create a client Nonce if secure mode is requested\r\n    // Release 1.02 page 23 OPC Unified Architecture, Part 4 Table 7 – OpenSecureChannel Service Parameters\r\n    // clientNonce\r\n    // \"This parameter shall have a length equal to key size used for the symmetric\r\n    //  encryption algorithm that is identified by the securityPolicyUri\"\r\n\r\n    var cryptoFactory : ICryptoFactory = getCryptoFactory(this.securityPolicy);\r\n    if (!cryptoFactory) {\r\n        // this securityPolicy may not be support yet ... let's return null\r\n        return null;\r\n    }\r\n    assert(typeof cryptoFactory === 'object');\r\n    let arr = new Uint8Array(cryptoFactory.symmetricKeyLength);\r\n    crypto.getRandomValues(arr);\r\n    return arr;\r\n\r\n}\r\n\r\n\r\nprotected _open_secure_channel_request(is_initial, callback) {\r\n\r\n    assert(this._securityMode !== MessageSecurityMode.Invalid, \"invalid security mode\");\r\n    // from the specs:\r\n    // The OpenSecureChannel Messages are not signed or encrypted if the SecurityMode is None. The\r\n    // Nonces are ignored and should be set to null. The SecureChannelId and the TokenId are still\r\n    // assigned but no security is applied to Messages exchanged via the channel.\r\n\r\n\r\n    var msgType = \"OPN\";\r\n    var requestType = (is_initial) ? SecurityTokenRequestType.Issue : SecurityTokenRequestType.Renew;\r\n\r\n    this._clientNonce = this._build_client_nonce();\r\n\r\n    this._isOpened = !is_initial;\r\n\r\n    // OpenSecureChannel\r\n    var msg = new OpenSecureChannelRequest({\r\n        clientProtocolVersion: this.protocolVersion,\r\n        requestType: requestType,\r\n        securityMode: this._securityMode,\r\n        requestHeader: new secure_channel_service.RequestHeader({\r\n            auditEntryId: null\r\n        }),\r\n        clientNonce: this._clientNonce, //\r\n        requestedLifetime: this.defaultSecureTokenLifetime\r\n    });\r\n\r\n    this._performMessageTransaction(msgType, msg, (error, response : secure_channel_service.OpenSecureChannelResponse) =>{\r\n\r\n        if (response && response.responseHeader.serviceResult !== StatusCodes.Good) {\r\n            error = new Error(response.responseHeader.serviceResult.toString());\r\n        }\r\n        if (!error) {\r\n\r\n            /* istanbul ignore next */\r\n            if (doDebug) {\r\n                debugLog(response.toString());\r\n            }\r\n            assert(response instanceof OpenSecureChannelResponse);\r\n            //xx assert(!is_initial || this._securityToken.secureChannelId === response._securityToken.secureChannelId);\r\n\r\n            // todo : verify that server certificate is  valid\r\n            // A self-signed application instance certificate does not need to be verified with a CA.\r\n            // todo : verify that Certificate URI matches the ApplicationURI of the server\r\n\r\n            this._securityToken = response.securityToken;\r\n            assert(this._securityToken.tokenId > 0 || msgType === \"OPN\", \"_sendSecureOpcUARequest: invalid token Id \");\r\n            assert(response.hasOwnProperty(\"serverNonce\"));\r\n\r\n            this._serverNonce = response.serverNonce;\r\n\r\n            if (this._securityMode !== MessageSecurityMode.None) {\r\n                // verify that server nonce if provided is at least 32 bytes long\r\n\r\n                /* istanbul ignore next */\r\n                if (!this._serverNonce) {\r\n                    console.log(\" client : server nonce is invalid !\");\r\n                    return callback(new Error(\" Invalid server nonce\"));\r\n                }\r\n                // This parameter shall have a length equal to key size used for the symmetric\r\n                // encryption algorithm that is identified by the securityPolicyUri.\r\n                if (this._serverNonce.length !== this._clientNonce.length) {\r\n                    console.log(\" client : server nonce is invalid !\");\r\n                    return callback(new Error(\" Invalid server nonce length\"));\r\n                }\r\n            }\r\n\r\n\r\n            var cryptoFactory = this.messageBuilder.cryptoFactory;\r\n            if (cryptoFactory) {\r\n                assert(this._serverNonce instanceof Uint8Array);\r\n                this._derivedKeys = cryptoFactory.compute_derived_keys(this._serverNonce, this._clientNonce);\r\n            }\r\n\r\n            var derivedServerKeys = this._derivedKeys ? this._derivedKeys.derivedServerKeys : null;\r\n            this.messageBuilder.pushNewToken(this._securityToken, derivedServerKeys);\r\n\r\n            this._install_security_token_watchdog();\r\n            this._isOpened = true;\r\n\r\n        }\r\n        callback(error);\r\n    });\r\n}\r\n\r\nprotected _on_connection(transport, callback, err?) {\r\n\r\n    /* jshint validthis: true */\r\n    \r\n\r\n    /* istanbul ignore next */\r\n    if (err) {\r\n\r\n        debugLog(\"cannot connect to server\");\r\n        callback(err);\r\n\r\n    } else {\r\n\r\n        this._transport = transport;\r\n\r\n        this._transport.on(\"message\", (message_chunk) => {\r\n            /**\r\n             * notify the observers that ClientSecureChannelLayer has received a message chunk\r\n             * @event receive_chunk\r\n             * @param message_chunk {Buffer}\r\n             */\r\n            this.emit(\"receive_chunk\", message_chunk);\r\n            this._on_receive_message_chunk(message_chunk);\r\n        });\r\n\r\n\r\n        this._transport.on(\"close\", ()=>this._on_transport_closed);\r\n\r\n        this._transport.on(\"connection_break\", ()=> {\r\n            debugLog(\"Client => CONNECTION BREAK  <=\");\r\n            this._on_transport_closed(new Error(\"Connection Break\"));\r\n        });\r\n\r\n        this._transport.on(\"error\", function () {\r\n            debugLog(\" ERROR\");\r\n        });\r\n\r\n\r\n        var is_initial = true;\r\n        this._open_secure_channel_request(is_initial, callback);\r\n    }\r\n\r\n}\r\n\r\n/**\r\n * establish a secure channel with the provided server end point.\r\n *\r\n * @method create\r\n * @async\r\n * @param endpoint_url {String}\r\n * @param callback {Function}  the async callback function\r\n * @param callback.err {Error|null}\r\n *\r\n *\r\n * @example\r\n *\r\n *    ```javascript\r\n *\r\n *    var secureChannel  = new ClientSecureChannelLayer();\r\n *\r\n *    secureChannel.on(\"end\", function(err) {\r\n *         console.log(\"secure channel has ended\",err);\r\n *         if(err) {\r\n *            console.log(\" the connection was closed by an external cause such as server shutdown\");\r\n  *        }\r\n *    });\r\n *    secureChannel.create(\"opc.tcp://localhost:1234/UA/Sample\", function(err) {\r\n *         if(err) {\r\n *              console.log(\" cannot establish secure channel\" , err);\r\n *         } else {\r\n *              console.log(\"secure channel has been established\");\r\n *         }\r\n *    });\r\n *\r\n *    ```\r\n */\r\npublic create(endpoint_url : string , callback: Function) {\r\n\r\n    assert('function' === typeof callback);\r\n    \r\n\r\n    if (this._securityMode !== MessageSecurityMode.None) {\r\n\r\n\r\n        if (!this.serverCertificate) {\r\n            return callback(new Error(\"ClientSecureChannelLayer#create : expecting a  server certificate when securityMode is not NONE\"));\r\n        }\r\n\r\n        \r\n        // take the opportunity of this async method to perform some async pre-processing\r\n        //**nomsgcrypt**\r\n        /*\r\n        if (_.isUndefined(this._receiverPublicKey)) {\r\n\r\n            crypto_utils.extractPublicKeyFromCertificate(this.serverCertificate, (err, publicKey) => {\r\n                if (err) {\r\n                    return callback(err);\r\n                }\r\n                this._receiverPublicKey = publicKey;\r\n                assert(!_.isUndefined(this._receiverPublicKey)); // make sure we wont go into infinite recursion calling create again.\r\n                this.create(endpoint_url, callback);\r\n            });\r\n            return undefined;\r\n        }\r\n        assert(typeof this._receiverPublicKey === \"string\");\r\n        */\r\n    }\r\n\r\n    var transport = new ClientWSTransport();\r\n    transport.timeout = this.transportTimeout;\r\n    transport.protocolVersion = this.protocolVersion;\r\n\r\n\r\n    // -------------------------------------------------------------------------\r\n    // Handle reconnection\r\n    // --------------------------------------------------------------------------\r\n    var _establish_connection = (transport: ClientWSTransport, endpoint_url, callback) => {\r\n\r\n\r\n        var last_err = null;\r\n\r\n        var _connect = (_i_callback) => {\r\n\r\n            if (this.__call && this.__call._cancelBackoff) {\r\n                return;\r\n            }\r\n\r\n            transport.connect(endpoint_url, (err) => {\r\n\r\n                // force Backoff to fail if err is not ECONNRESET or ECONNREFUSE\r\n                // this mean that the connection to the server has succeeded but for some reason\r\n                // the server has denied the connection\r\n                // the cause could be:\r\n                //   - invalid protocol version specified by client\r\n                //   - server going to shutdown\r\n                //   - server too busy -\r\n                //   - server shielding itself from a DOS attack\r\n                if (err) {\r\n\r\n                    var should_abort = false;\r\n\r\n                    if (err.message.match(/ECONNRESET/)) {\r\n                        should_abort = true;\r\n                    }\r\n                    if (err.message.match(/BadProtocolVersionUnsupported/)) {\r\n                        should_abort = true;\r\n                    }\r\n                    last_err = err;\r\n\r\n                    if (this.__call) {\r\n                        // connection cannot be establish ? if not, abort the backoff process\r\n                        if (should_abort) {\r\n                            debugLog(\" Aborting backoff process prematurally - err = \" + err.message);\r\n                            this.__call.abort();\r\n                        } else {\r\n                            debugLog(\" backoff - keep trying - err = \" + err.message);\r\n                        }\r\n                    }\r\n                }\r\n                _i_callback(err);\r\n            });\r\n        }\r\n\r\n        // No backoff required -> call the _connect function directly\r\n        if (this.connectionStrategy.maxRetry <= 0) {\r\n            this.__call = 0;\r\n            return _connect(callback);\r\n        }\r\n\r\n\r\n        var _backoff_completion = (err) => {\r\n\r\n            if (this.__call) {\r\n                // console log =\r\n                transport.numberOfRetry = transport.numberOfRetry || 0;\r\n                transport.numberOfRetry += this.__call.getNumRetries();\r\n                this.__call.removeAllListeners();\r\n                this.__call = null;\r\n\r\n                if (err) {\r\n                    callback(last_err);\r\n                } else {\r\n                    callback();\r\n                }\r\n            }\r\n        }\r\n\r\n        this.__call = backoff.call(_connect, _backoff_completion);\r\n\r\n        //xx this.__call._cancelBackoff = this.connectionStrategy.maxRetry <=0 ? true : false;\r\n        this.__call.failAfter(Math.max(this.connectionStrategy.maxRetry, 1));\r\n\r\n\r\n        this.__call.on(\"backoff\", (number, delay) => {\r\n\r\n            debugLog(\" Backoff #\" + number + \"delay = \" + delay + this.__call.maxNumberOfRetry_);\r\n            // Do something when backoff starts, e.g. show to the\r\n            // user the delay before next reconnection attempt.\r\n            /**\r\n             * @event backoff\r\n             */\r\n            this.emit(\"backoff\", number, delay);\r\n        });\r\n\r\n        this.__call.on(\"abort\", () => {\r\n            debugLog(\" abort # after \" + this.__call.getNumRetries() + \" retries\");\r\n            // Do something when backoff starts, e.g. show to the\r\n            // user the delay before next reconnection attempt.\r\n            /**\r\n             * @event backoff\r\n             */\r\n            this.emit(\"abort\");\r\n\r\n            setImmediate(function () {\r\n                _backoff_completion(new Error(\"Connection abandoned\"));\r\n            });\r\n\r\n        });\r\n\r\n        this.__call.setStrategy(new backoff.ExponentialStrategy(this.connectionStrategy));\r\n        this.__call.start();\r\n\r\n    };\r\n\r\n    _establish_connection(transport, endpoint_url, ()=>this._on_connection(transport, callback));\r\n\r\n};\r\n\r\npublic dispose() {\r\n    \r\n    this._cancel_security_token_watchdog();\r\n    if (this.__call) {\r\n        this.__call.abort();\r\n    }\r\n\r\n};\r\n\r\npublic abortConnection(callback) {\r\n    assert('function' === typeof callback);\r\n    \r\n    if (this.__call) {\r\n        this.__call.once(\"abort\", function () {\r\n            setTimeout(callback, 20);\r\n        });\r\n        //xx console.log(\"_cancelBackoff !!!\");\r\n        this.__call._cancelBackoff = true;\r\n        this.__call.abort();\r\n\r\n    } else {\r\n        callback();\r\n    }\r\n};\r\n\r\n\r\nprotected _renew_security_token() {\r\n\r\n    \r\n    debugLog(\"ClientSecureChannelLayer#_renew_security_token\");\r\n\r\n    /* istanbul ignore if */\r\n    if (0 && this.isTransactionInProgress()) {\r\n\r\n        this._renew_security_token_requested += 1;\r\n\r\n    } else {\r\n        var is_initial = false;\r\n        this._open_secure_channel_request(is_initial, (err) => {\r\n\r\n            /* istanbul ignore else */\r\n            if (!err) {\r\n                debugLog(\" token renewed\");\r\n                /**\r\n                 * notify the observers that the security has been renewed\r\n                 * @event security_token_renewed\r\n                 */\r\n                this.emit(\"security_token_renewed\");\r\n\r\n            } else {\r\n                console.error(\"ClientSecureChannelLayer: Warning: securityToken hasn't been renewed\");\r\n            }\r\n        });\r\n        this._renew_security_token_requested = 0;\r\n    }\r\n};\r\n\r\nprotected _on_receive_message_chunk(message_chunk) {\r\n\r\n    \r\n\r\n    /* istanbul ignore next */\r\n    if (doDebug) {\r\n        var _stream = new DataStream(message_chunk);\r\n        var messageHeader = readMessageHeader(_stream);\r\n        debugLog(\"CLIENT RECEIVED \" + (JSON.stringify(messageHeader) + \"\"));\r\n        debugLog(\"\\n\" + hexDump(message_chunk));\r\n        debugLog(messageHeaderToString(message_chunk));\r\n    }\r\n    this.messageBuilder.feed(message_chunk);\r\n};\r\n\r\n/**\r\n * @method makeRequestId\r\n * @return {Number} a newly generated request id\r\n * @private\r\n */\r\npublic makeRequestId() {\r\n    this._lastRequestId += 1;\r\n    return this._lastRequestId;\r\n};\r\n\r\n/**\r\n * perform a OPC-UA message transaction, asynchronously.\r\n * @method performMessageTransaction\r\n * @param requestMessage {Object}\r\n * @param callback  {Function}\r\n\r\n * During a transaction, the client sends a request to the server. The provided callback will be invoked\r\n * at a later stage with the reply from the server, or the error.\r\n *\r\n * preconditions:\r\n *   - the channel must be opened\r\n *\r\n * @example\r\n *\r\n *    ```javascript\r\n *    var secure_channel ; // get a  ClientSecureChannelLayer somehow\r\n *\r\n *    var message = new BrowseNameRequest({...});\r\n *    secure_channel.performMessageTransaction(message,function(err,response) {\r\n *       if (err) {\r\n *         // an error has occurred\r\n *       } else {\r\n *          assert(response instanceof BrowseNameResponse);\r\n *         // do something with response.\r\n *       }\r\n *    });\r\n *    ```\r\n *\r\n\r\n */\r\npublic performMessageTransaction(requestMessage, callback) {\r\n    assert('function' === typeof callback);\r\n    this._performMessageTransaction(\"MSG\", requestMessage, callback);\r\n};\r\n\r\npublic isValid() {\r\n   \r\n    return this._transport && this._transport.isValid();\r\n};\r\npublic isOpened() {\r\n    \r\n    return this.isValid() && this._isOpened;\r\n};\r\n\r\n/**\r\n * internal version of _performMessageTransaction.\r\n *\r\n * @method _performMessageTransaction\r\n * @param msgType {String}\r\n * @param requestMessage\r\n * @param callback\r\n * @private\r\n *\r\n * - this method takes a extra parameter : msgType\r\n * TODO:\r\n * - this method can be re-entrant, meaning that a new transaction can be started before any pending transaction\r\n *   is fully completed.\r\n * - Any error on transport will cause all pending transactions to be cancelled\r\n *\r\n * - the method returns a timeout Error if the server fails to return a response within the timeoutHint interval.\r\n *\r\n *\r\n */\r\nprotected _performMessageTransaction(msgType, requestMessage, callback) {\r\n\r\n    /* jshint validthis: true */\r\n\r\n    assert('function' === typeof callback);\r\n  \r\n\r\n    if (!this.isValid()) {\r\n        return callback(new Error(\"ClientSecureChannelLayer => Socket is closed !\"));\r\n    }\r\n\r\n\r\n    var local_callback = callback;\r\n\r\n    var timeout = requestMessage.requestHeader.timeoutHint || defaultTransactionTimeout;\r\n\r\n    var timerId = null;\r\n\r\n    var hasTimedOut = false;\r\n\r\n    let  modified_callback = (err, response) =>{\r\n\r\n        /* istanbul ignore next */\r\n        if (doDebug) {\r\n            debugLog(\"------------------- client receiving response\");\r\n            if (response) {\r\n                debugLog(response.toString());\r\n            }\r\n        }\r\n\r\n\r\n        if (!local_callback) {\r\n            return; // already processed by time  out\r\n        }\r\n        // when response === null we are processing the timeout , therefore there is no need to clearTimeout\r\n        if (!hasTimedOut && timerId) {\r\n            clearTimeout(timerId);\r\n        }\r\n        timerId = null;\r\n\r\n        if (!err && response) {\r\n            /**\r\n             * notify the observers that a server response has been received on the channel\r\n             * @event  receive_response\r\n             * @param response {Object} the response object\r\n             */\r\n            this.emit(\"receive_response\", response);\r\n        }\r\n        assert(!err || (err instanceof Error));\r\n\r\n\r\n        // invoke user callback if it has not been intercepted first ( by a abrupt disconnection for instance )\r\n        try {\r\n            //local_callback.apply(this, [err,response]);\r\n            local_callback(err,response);\r\n        }\r\n        catch (err) {\r\n            console.log(\"ERROR !!! , please check here !!!! callback may be called twice !! \", err);\r\n            callback(err);\r\n        }\r\n        finally {\r\n            local_callback = null;\r\n        }\r\n    }\r\n\r\n    timerId = setTimeout( () => {\r\n        timerId = null;\r\n        console.log(\" Timeout .... waiting for response for \", requestMessage.constructor.name, requestMessage.requestHeader.toString());\r\n\r\n        hasTimedOut = true;\r\n        modified_callback(new Error(\"Transaction has timed out\"), null);\r\n\r\n        this._timedout_request_count += 1;\r\n        /**\r\n         * @event timed_out_request\r\n         * notify the observer that the response from the request has not been\r\n         * received within the timeoutHint specified\r\n         * @param message_chunk {Object}  the message chunk\r\n         */\r\n        this.emit(\"timed_out_request\", requestMessage);\r\n\r\n    }, timeout);\r\n\r\n    var transaction_data = {msgType: msgType, request: requestMessage, callback: modified_callback};\r\n\r\n//xx    this._pending_callback = callback;\r\n\r\n    this._internal_perform_transaction(transaction_data);\r\n};\r\n\r\n/**\r\n *\r\n * @param transaction_data\r\n * @param transaction_data.msgType\r\n * @param transaction_data.request\r\n * @param transaction_data.callback {Function}\r\n * @private\r\n */\r\nprotected _internal_perform_transaction(transaction_data) {\r\n\r\n    \r\n\r\n    assert('function' === typeof transaction_data.callback);\r\n\r\n    if (!this._transport) {\r\n        setTimeout(function () {\r\n            transaction_data.callback(new Error(\"Client not connected\"));\r\n        }, 1000);\r\n        return;\r\n    }\r\n    assert(this._transport, \" must have a valid transport\");\r\n\r\n    var msgType = transaction_data.msgType;\r\n    var requestMessage = transaction_data.request;\r\n    assert(msgType.length === 3);\r\n\r\n    assert(requestMessage instanceof Object);\r\n\r\n    // get a new requestId\r\n    var requestId = this.makeRequestId();\r\n\r\n    /* istanbul ignore next */\r\n    if (do_trace_message) {\r\n        console.log(\"xxxxx   >>>>>>                     \" + requestId + requestMessage._schema.name);\r\n    }\r\n    this._request_data[requestId] = {\r\n        request: requestMessage,\r\n        msgType: msgType,\r\n        callback: transaction_data.callback,\r\n\r\n        bytesWritten_before: this.bytesWritten,\r\n        bytesWritten_after: 0,\r\n\r\n        //record tick0 : before request is being sent to server\r\n        _tick0: get_clock_tick(),\r\n        //record tick1:  after request has been sent to server\r\n        _tick1: null,\r\n        // record tick2 : after response message has been received, before message processing\r\n        _tick2: null,\r\n        // record tick3 : after response message has been received, before message processing\r\n        _tick3: null,\r\n        // record tick4 after callback\r\n        _tick4: null,\r\n        chunk_count: 0\r\n    };\r\n\r\n    this._sendSecureOpcUARequest(msgType, requestMessage, requestId);\r\n\r\n};\r\n\r\nprotected _send_chunk(requestId, messageChunk?) {\r\n\r\n    var request_data = this._request_data[requestId];\r\n\r\n    if (messageChunk) {\r\n\r\n        /**\r\n         * notify the observer that a message chunk is about to be sent to the server\r\n         * @event send_chunk\r\n         * @param message_chunk {Object}  the message chunk\r\n         */\r\n        this.emit(\"send_chunk\", messageChunk);\r\n\r\n        /* istanbul ignore next */\r\n        // if (doDebug && false) {\r\n        //     verify_message_chunk(messageChunk);\r\n        //     debugLog(\"CLIENT SEND chunk \");\r\n        //     debugLog(messageHeaderToString(messageChunk));\r\n        //     debugLog(hexDump(messageChunk));\r\n        // }\r\n        assert(this._transport);\r\n        this._transport.write(messageChunk);\r\n        request_data.chunk_count += 1;\r\n\r\n    } else {\r\n        // last chunk ....\r\n\r\n        /* istanbul ignore next */\r\n        if (doDebug) {\r\n            debugLog(\"CLIENT SEND done.\");\r\n        }\r\n        if (request_data) {\r\n            //record tick1: when request has been sent to server\r\n            request_data._tick1 = get_clock_tick();\r\n            request_data.bytesWritten_after = this.bytesWritten;\r\n        }\r\n    }\r\n};\r\n\r\nprotected _construct_security_header() {\r\n\r\n    assert(this.hasOwnProperty(\"securityMode\"));\r\n    assert(this.hasOwnProperty(\"securityPolicy\"));\r\n\r\n\r\n    this._receiverCertificate = this.serverCertificate;\r\n\r\n    var securityHeader = null;\r\n    switch (this._securityMode) {\r\n        case MessageSecurityMode.Sign:\r\n        case MessageSecurityMode.SignAndEncrypt:\r\n            assert(this.securityPolicy !== SecurityPolicy.None);\r\n            // get the thumbprint of the client certificate\r\n            var thumbprint = null; //**nomsgcrypt** this._receiverCertificate ? crypto_utils.makeSHA1Thumbprint(this._receiverCertificate) : null;\r\n            securityHeader = new AsymmetricAlgorithmSecurityHeader({\r\n                securityPolicyUri: toUri(this.securityPolicy),\r\n                senderCertificate: this.getCertificateChain(),  // certificate of the private key used to sign the message\r\n                receiverCertificateThumbprint: thumbprint       // thumbprint of the public key used to encrypt the message\r\n            });\r\n            break;\r\n        default:\r\n            /* istanbul ignore next */\r\n            assert(false, \"invalid security mode\");\r\n    }\r\n    //xx console.log(\"xxxx security Header\",securityHeader.toJSON());\r\n    //xx console.log(\"xxxx receiverCertificate\",this._receiverCertificate.toString(\"base64\").cyan);\r\n    this._securityHeader = securityHeader;\r\n};\r\n\r\n/* //**nomsgcrypt**\r\nprotected _get_security_options_for_OPN() {\r\n\r\n    \r\n    if (this._securityMode === MessageSecurityMode.None) {\r\n        return null;\r\n    }\r\n\r\n    this._construct_security_header();\r\n    this.messageChunker.securityHeader = this._securityHeader;\r\n\r\n    var senderPrivateKey = this.getPrivateKey();\r\n\r\n\r\n    assert(this._receiverPublicKey);\r\n    assert(typeof this._receiverPublicKey === \"string\", \"expecting a valid public key\");\r\n\r\n    var cryptoFactory = getCryptoFactory(this.securityPolicy);\r\n\r\n    if (!cryptoFactory) {\r\n        return null; // may be a not yet supported security Policy\r\n    }\r\n\r\n    assert(cryptoFactory, \"expecting a cryptoFactory\");\r\n    assert('function' === typeof cryptoFactory.asymmetricSign);\r\n\r\n    var options : any = {};\r\n\r\n    options.signatureLength = crypto_utils.rsa_length(senderPrivateKey);\r\n    options.signingFunc = function (chunk) {\r\n        var s = cryptoFactory.asymmetricSign(chunk, senderPrivateKey);\r\n        assert(s.length === options.signatureLength);\r\n        return s;\r\n    };\r\n\r\n    assert(this._receiverPublicKey);\r\n    var keyLength = crypto_utils.rsa_length(this._receiverPublicKey);\r\n    options.plainBlockSize = keyLength - cryptoFactory.blockPaddingSize;\r\n    options.cipherBlockSize = keyLength;\r\n\r\n    options.encrypt_buffer = function (chunk) {\r\n        return cryptoFactory.asymmetricEncrypt(chunk, this._receiverPublicKey);\r\n    };\r\n\r\n    return options;\r\n};\r\n*/\r\n\r\n/* //**nomsgcrypt**\r\nprotected _get_security_options_for_MSG() {\r\n\r\n    if (this._securityMode === MessageSecurityMode.None) {\r\n        return null;\r\n    }\r\n\r\n    var derivedClientKeys = this._derivedKeys.derivedClientKeys;\r\n    assert(derivedClientKeys, \"expecting valid derivedClientKeys\");\r\n    return getOptionsForSymmetricSignAndEncrypt(this._securityMode, derivedClientKeys);\r\n\r\n};\r\n*/\r\n\r\nprotected _sendSecureOpcUARequest(msgType, requestMessage, requestId) {\r\n\r\n    \r\n\r\n    var options : any= {\r\n        requestId: requestId,\r\n        secureChannelId: this._securityToken ? this._securityToken.channelId/*.secureChannelId*/ : 0,\r\n        tokenId: this._securityToken ? this._securityToken.tokenId : 0,\r\n    };\r\n\r\n    // use chunk size that has been negotiated by the transport layer\r\n    if (this._transport.parameters && this._transport.parameters.sendBufferSize) {\r\n        options.chunkSize = this._transport.parameters.sendBufferSize;\r\n    }\r\n\r\n    requestMessage.requestHeader.requestHandle = options.requestId;\r\n    //xx requestMessage.requestHeader.returnDiagnostics = 0x3FF;\r\n    requestMessage.requestHeader.returnDiagnostics = 0x0;\r\n\r\n    /* istanbul ignore next */\r\n    if (doDebug) {\r\n        debugLog(\"------------------------------------- Client Sending a request\");\r\n        debugLog(\" CHANNEL ID \" + options.secureChannelId);\r\n        debugLog(requestMessage.toString());\r\n    }\r\n\r\n\r\n/* //**nomsgcrypt**\r\n    var security_options = (msgType === \"OPN\") ? this._get_security_options_for_OPN() : this._get_security_options_for_MSG();\r\n    _.extend(options, security_options);\r\n*/\r\n    /**\r\n     * notify the observer that a client request is being sent the server\r\n     * @event send_request\r\n     * @param requestMessage {Object}\r\n     */\r\n    this.emit(\"send_request\", requestMessage);\r\n\r\n    this.messageChunker.chunkSecureMessage(msgType, options, requestMessage, this._send_chunk.bind(this, requestId));\r\n\r\n};\r\n\r\n/**\r\n * Close a client SecureChannel ,by sending a CloseSecureChannelRequest to the server.\r\n *\r\n *\r\n * After this call, the connection is closed and no further transaction can be made.\r\n *\r\n * @method close\r\n * @async\r\n * @param callback {Function}\r\n */\r\npublic close(callback : any) {\r\n\r\n\r\n    // what the specs says:\r\n    // --------------------\r\n    //   The client closes the connection by sending a CloseSecureChannelRequest and closing the\r\n    //   socket gracefully. When the server receives this message it shall release all resources\r\n    //   allocated for the channel. The server does not send a CloseSecureChannel response\r\n    //\r\n    // ( Note : some servers do  send a CloseSecureChannel though !)\r\n    \r\n    assert('function' === typeof callback, \"expecting a callback function, but got \" + callback);\r\n\r\n    // there is no need for the security token expiration event to trigger anymore\r\n    this._cancel_security_token_watchdog();\r\n\r\n    debugLog(\"Sending CloseSecureChannelRequest to server\");\r\n    //xx console.log(\"xxxx Sending CloseSecureChannelRequest to server\");\r\n    var request = new CloseSecureChannelRequest();\r\n\r\n    this.__in_normal_close_operation = true;\r\n\r\n    if (!this._transport || this._transport.disconnecting) {\r\n        this.dispose();\r\n        return callback(new Error(\"Transport disconnected\"));\r\n    }\r\n\r\n    this._performMessageTransaction(\"CLO\", request, () => {\r\n        ///xx this._transport.disconnect(function() {\r\n        this.dispose();\r\n        callback();\r\n        //xxx });\r\n    });\r\n};\r\n\r\n\r\n}\r\n","/**\r\n * @module opcua.miscellaneous\r\n */\r\nimport {assert} from '../assert';\r\n\r\nimport {DataStream} from '../basic-types/DataStream';\r\nimport {hexDump} from '../common/debug';\r\nimport {readMessageHeader} from '../chunkmanager';\r\nimport {chooseSecurityHeader} from './secure_message_chunk_manager';\r\nimport {SequenceHeader} from '../service-secure-channel';\r\n\r\n/**\r\n * convert the messageChunk header to a string\r\n * @method messageHeaderToString\r\n * @param messageChunk {DataStream}\r\n * @return {string}\r\n */\r\nexport function messageHeaderToString(messageChunk) : string {\r\n\r\n    var stream = new DataStream(messageChunk);\r\n\r\n    var messageHeader = readMessageHeader(stream);\r\n    if (messageHeader.msgType === \"ERR\" || messageHeader.msgType === \"HEL\") {\r\n        return messageHeader.msgType + \" \" + messageHeader.isFinal + \" length   = \" + messageHeader.length;\r\n    }\r\n\r\n\r\n    var securityHeader = chooseSecurityHeader(messageHeader.msgType);\r\n\r\n    var sequenceHeader = new SequenceHeader();\r\n    assert(stream.length === 8);\r\n\r\n    var secureChannelId = stream.getUint32();\r\n    securityHeader.decode(stream);\r\n    sequenceHeader.decode(stream);\r\n\r\n    var slice = messageChunk.slice(0, stream.length);\r\n\r\n\r\n    return messageHeader.msgType + \" \" +\r\n        messageHeader.isFinal +\r\n        \" length   = \" + messageHeader.length +\r\n        \" channel  = \" + secureChannelId +\r\n        \" seqNum   = \" + sequenceHeader.sequenceNumber +\r\n        \" req ID   = \" + sequenceHeader.requestId +\r\n        \" security   = \" + JSON.stringify(securityHeader) +\r\n        \"\\n\\n\" + hexDump(slice);\r\n}","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\n\r\nimport {assert} from '../assert';\r\nimport {DataStream} from '../basic-types/DataStream'\r\nimport * as ec from '../basic-types'\r\nimport {SequenceNumberGenerator} from \"./sequence_number_generator\";\r\nimport { SignatureData } from '../generated/SignatureData';\r\n\r\n\r\nimport {AsymmetricAlgorithmSecurityHeader,SymmetricAlgorithmSecurityHeader} from '../service-secure-channel';\r\nimport {SecureMessageChunkManager} from './secure_message_chunk_manager';\r\n\r\n/**\r\n * @class MessageChunker\r\n * @param options {Object}\r\n * @param options.securityHeader  {Object} SecurityHeader\r\n * @param [options.derivedKeys] {Object} derivedKeys\r\n * @constructor\r\n */\r\nexport class MessageChunker {\r\n\r\n    protected _sequenceNumberGenerator : SequenceNumberGenerator;\r\n    protected _securityHeader;\r\n    protected _derivedKeys;\r\n    protected _stream : DataStream;\r\n\r\n    get securityHeader() {\r\n        return this._securityHeader;\r\n    }\r\n\r\n    set securityHeader(header ) {\r\n        this._securityHeader = header;\r\n    }\r\n\r\n    constructor(options) {\r\n\r\n        this._sequenceNumberGenerator = new SequenceNumberGenerator();\r\n        this.update(options);\r\n\r\n    }\r\n/** update security information\r\n * @method update\r\n * @param options {Object}\r\n * @param options.securityHeader  {Object} SecurityHeader\r\n * @param [options.derivedKeys] {Object} derivedKeys\r\n *\r\n */\r\npublic update(options) {\r\n\r\n    options = options || {};\r\n    options.securityHeader = options.securityHeader ||\r\n        new AsymmetricAlgorithmSecurityHeader({securityPolicyUri: \"http://opcfoundation.org/UA/SecurityPolicy#None\"});\r\n\r\n    assert(typeof options === 'object');\r\n    assert(typeof options.securityHeader === 'object');\r\n\r\n    this._securityHeader = options.securityHeader;\r\n    this._derivedKeys = options.derivedKeys || null;\r\n\r\n};\r\n\r\n/**\r\n * @method chunkSecureMessage\r\n * @param msgType {String}\r\n * @param options\r\n * @param options.tokenId\r\n * @param options.chunkSize    [default=8196]\r\n *\r\n * @param options.signatureLength  {Integer} [default=0]\r\n * @param options.signingFunc {Function} [default=null]\r\n *\r\n * @param message {Object}\r\n * @param messageChunkCallback   {Function}\r\n */\r\npublic chunkSecureMessage(msgType, options, message, messageChunkCallback) {\r\n\r\n    options = options || {};\r\n    assert('function' === typeof messageChunkCallback);\r\n\r\n    // calculate message size ( with its  encodingDefaultBinary)\r\n    var binSize = DataStream.binaryStoreSize(message) + 4;\r\n    \r\n    var stream = new DataStream(binSize);\r\n    this._stream = stream;\r\n\r\n    ec.encodeExpandedNodeId(message.encodingDefaultBinary, stream);\r\n    message.encode(stream);\r\n\r\n    var securityHeader;\r\n    if (msgType === \"OPN\") {\r\n        securityHeader = this._securityHeader;\r\n    } else {\r\n        securityHeader = new SymmetricAlgorithmSecurityHeader({tokenId: options.tokenId});\r\n    }\r\n\r\n    var secure_chunker = new SecureMessageChunkManager(\r\n        msgType, options, securityHeader, this._sequenceNumberGenerator\r\n    )\r\n        .on(\"chunk\", function (messageChunk) {\r\n            messageChunkCallback(messageChunk);\r\n        })\r\n        .on(\"finished\", function () {\r\n            messageChunkCallback(null);\r\n        });\r\n\r\n    secure_chunker.write(stream.buffer, stream.buffer.byteLength);\r\n    secure_chunker.end();\r\n};\r\n}","import root from './_root.js';\nimport stubFalse from './stubFalse.js';\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nexport default isBuffer;\n","/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nexport default stubFalse;\n","'use strict';\n\nimport slice from './slice';\n\nexport var hasSetImmediate = typeof setImmediate === 'function' && setImmediate;\nexport var hasNextTick = typeof process === 'object' && typeof process.nextTick === 'function';\n\nexport function fallback(fn) {\n    setTimeout(fn, 0);\n}\n\nexport function wrap(defer) {\n    return function (fn/*, ...args*/) {\n        var args = slice(arguments, 1);\n        defer(function () {\n            fn.apply(null, args);\n        });\n    };\n}\n\nvar _defer;\n\nif (hasSetImmediate) {\n    _defer = setImmediate;\n} else if (hasNextTick) {\n    _defer = process.nextTick;\n} else {\n    _defer = fallback;\n}\n\nexport default wrap(_defer);\n","\"use strict\";\r\n\r\nimport {assert} from '../assert';\r\nimport {doDebug,debugLog} from '../common/debug';\r\nimport {StatusCodes} from '../constants/raw_status_codes';\r\nimport { ClientSession } from './client_session';\r\nimport { ClientSubscription} from './ClientSubscription';\r\n\r\nimport * as subscription_service from '../service-subscription';\r\nimport { RequestHeader } from '../generated/RequestHeader';\r\n\r\nimport forEachOf from 'async-es/forEachOf';\r\nimport whilst from 'async-es/whilst';\r\n\r\n//xx var debugLog = console.log;\r\n\r\n/**\r\n * A client side implementation to deal with publish service.\r\n *\r\n * @class ClientSidePublishEngine\r\n *\r\n * @param session {ClientSession} - the client session\r\n * @constructor\r\n *\r\n * The ClientSidePublishEngine encapsulates the mechanism to\r\n * deal with a OPCUA Server and constantly sending PublishRequest\r\n * The ClientSidePublishEngine also performs  notification acknowledgements.\r\n * Finally, ClientSidePublishEngine dispatch PublishResponse to the correct\r\n * Subscription id callback\r\n */\r\nexport class ClientSidePublishEngine {\r\n    protected _session : ClientSession;\r\n    protected subscriptionAcknowledgements : subscription_service.SubscriptionAcknowledgement[];\r\n    protected subscriptionMap  : {[key : number]: ClientSubscription; };\r\n    protected timeoutHint : number;\r\n    protected nbPendingPublishRequests : number;\r\n    protected activeSubscriptionCount : number;\r\n    protected nbMaxPublishRequestsAcceptedByServer : number;\r\n    protected isSuspended : boolean;\r\n\r\n    public static publishRequestCountInPipeline : number = 5;\r\nconstructor (session : ClientSession) {\r\n    assert(session instanceof Object);\r\n\r\n    this._session = session;\r\n\r\n    this.subscriptionAcknowledgements = [];\r\n    this.subscriptionMap = {};\r\n\r\n    this.timeoutHint = 10000; // 10 s by default\r\n\r\n    this.activeSubscriptionCount = 0;\r\n\r\n    // number of pending Publish request sent to the server and awaited for being processed by the server\r\n    this.nbPendingPublishRequests = 0;\r\n\r\n    // the maximum number of publish requests we think that the server can queue.\r\n    // we will adjust this value .\r\n    this.nbMaxPublishRequestsAcceptedByServer = 1000;\r\n\r\n    this.isSuspended = false;\r\n\r\n}\r\n\r\n/**\r\n * the number of active subscriptions managed by this publish engine.\r\n * @property subscriptionCount\r\n * @type {Number}\r\n */\r\npublic get subscriptionCount() {  \r\n    return Object.keys(this.subscriptionMap).length;\r\n};\r\n\r\npublic get session() {\r\n    return this._session;\r\n}\r\n\r\n\r\npublic suspend(flag) {\r\n    assert(this.isSuspended !== !!flag,\"invalid state\");\r\n    this.isSuspended = !!flag;\r\n    if (this.isSuspended) {\r\n\r\n    } else {\r\n        this.replenish_publish_request_queue();\r\n    }\r\n};\r\n\r\n/**\r\n * @method acknowledge_notification\r\n * @param subscriptionId {Number} the subscription id\r\n * @param sequenceNumber {Number} the sequence number\r\n */\r\npublic acknowledge_notification(subscriptionId : number, sequenceNumber : number) {\r\n\r\n    //xx //xx console.log(\"xxxxxxx acknowledge_notification\".bgWhite.red.bold, sequenceNumber);\r\n    //xx this._unacked = this._unacked || [];\r\n    //xx for (var i =this._lastAcked+1;i<sequenceNumber;i++) {\r\n    //xx     //xx console.log(\"xxxxxxx acknowledge_notification => remembering unacked sequence number\".bgWhite.red,i);\r\n    //xx     this._unacked.push(i);\r\n    //xx }\r\n    //xx //xx assert(this.lastAcknowldegedSequence+1 === sequenceNumber,\"expecting lastAcknowledgedSequence \");\r\n    //xx this._lastAcked = sequenceNumber;\r\n\r\n    this.subscriptionAcknowledgements.push(new subscription_service.SubscriptionAcknowledgement({\r\n        subscriptionId: subscriptionId,\r\n        sequenceNumber: sequenceNumber\r\n    }));\r\n};\r\n\r\npublic cleanup_acknowledgment_for_subscription(subscriptionId : number) {\r\n\r\n    this.subscriptionAcknowledgements = this.subscriptionAcknowledgements.filter(function (a) {\r\n        return a.subscriptionId !== subscriptionId;\r\n    });\r\n};\r\n\r\n/**\r\n * @method send_publish_request\r\n */\r\npublic send_publish_request() {\r\n    if (this.isSuspended) {\r\n        return;\r\n    }\r\n\r\n    if (this.nbPendingPublishRequests >= this.nbMaxPublishRequestsAcceptedByServer) {\r\n        return;\r\n    }\r\n\r\n    if (this._session && !this._session.isChannelValid()) {\r\n        // wait for channel  to be valid\r\n        setTimeout(() => {\r\n            if (this.subscriptionCount) {\r\n                this.send_publish_request();\r\n            }\r\n        }, 100);\r\n    } else {\r\n        setImmediate( () => {\r\n            if (!this.session || this.isSuspended) {\r\n                // session has been terminated or suspended\r\n                return;\r\n            }\r\n            this._send_publish_request();\r\n        });\r\n\r\n    }\r\n};\r\n\r\n\r\nprotected _send_publish_request() {\r\n    assert(this._session, \"ClientSidePublishEngine terminated ?\");\r\n    assert(!this.isSuspended,\"should not be suspended\");\r\n\r\n    this.nbPendingPublishRequests +=1;\r\n\r\n    debugLog(\"sending publish request \" + this.nbPendingPublishRequests);\r\n\r\n    var subscriptionAcknowledgements = this.subscriptionAcknowledgements;\r\n    this.subscriptionAcknowledgements = [];\r\n\r\n    // as started in the spec (Spec 1.02 part 4 page 81 5.13.2.2 Function DequeuePublishReq())\r\n    // the server will dequeue the PublishRequest  in first-in first-out order\r\n    // and will validate if the publish request is still valid by checking the timeoutHint in the RequestHeader.\r\n    // If the request timed out, the server will send a Bad_Timeout service result for the request and de-queue\r\n    // another publish request.\r\n    //\r\n    // in Part 4. page 144 Request Header the timeoutHint is described this way.\r\n    // timeoutHint UInt32 This timeout in milliseconds is used in the Client side Communication Stack to\r\n    //                    set the timeout on a per-call base.\r\n    //                    For a Server this timeout is only a hint and can be used to cancel long running\r\n    //                    operations to free resources. If the Server detects a timeout, he can cancel the\r\n    //                    operation by sending the Service result Bad_Timeout. The Server should wait\r\n    //                    at minimum the timeout after he received the request before cancelling the operation.\r\n    //                    The value of 0 indicates no timeout.\r\n    // In issue#40 (MonitoredItem on changed not fired), we have found that some server might wrongly interpret\r\n    // the timeoutHint of the request header ( and will bang a Bad_Timeout regardless if client send timeoutHint=0)\r\n    // as a work around here , we force the timeoutHint to be set to a suitable value.\r\n    //\r\n    // see https://github.com/node-opcua/node-opcua/issues/141\r\n    // This suitable value shall be at least the time between two keep alive signal that the server will send.\r\n    // (i.e revisedLifetimeCount * revisedPublishingInterval)\r\n\r\n    // also ( part 3 - Release 1.03 page 140)\r\n    // The Server shall check the timeoutHint parameter of a PublishRequest before processing a PublishResponse.\r\n    // If the request timed out, a Bad_Timeout Service result is sent and another PublishRequest is used.\r\n    // The value of 0 indicates no timeout\r\n\r\n    // in our case:\r\n\r\n    assert( this.nbPendingPublishRequests >0);\r\n    var calculatedTimeout = this.nbPendingPublishRequests * this.timeoutHint;\r\n\r\n    var publish_request = new subscription_service.PublishRequest({\r\n        requestHeader: new RequestHeader({timeoutHint: calculatedTimeout}), // see note\r\n        subscriptionAcknowledgements: subscriptionAcknowledgements\r\n    });\r\n\r\n    var active = true;\r\n\r\n    this._session.publish(publish_request, (err, response) => {\r\n\r\n        this.nbPendingPublishRequests -= 1;\r\n        if (err) {\r\n            debugLog(\"ClientSidePublishEngine.prototype._send_publish_request callback : \" + err.message);\r\n            debugLog(\"'\" + err.message + \"'\");\r\n\r\n            if(err.message.match(\"not connected\")) {\r\n                debugLog(\" WARNING :  CLIENT IS NOT CONNECTED : MAY BE RECONNECTION IS IN PROGRESS\");\r\n                debugLog(\"self.activeSubscriptionCount =\" + this.activeSubscriptionCount);\r\n                // the previous publish request has ended up with an error because\r\n                // the connection has failed ...\r\n                // There is no need to send more publish request for the time being until reconnection is completed\r\n                active = false;\r\n            }\r\n            // istanbul ignore next\r\n            if (err.message.match(/BadNoSubscription/) &&  this.activeSubscriptionCount >=1) {\r\n                // there is something wrong happening here.\r\n                // the server tells us that there is no subscription for this session\r\n                // but the client have some active subscription left.\r\n                // This could happen if the client has missed or not received the StatusChange Notification\r\n                debugLog(\" WARNING :   SERVER TELLS THAT IT HAS NO SUBSCRIPTION , BUT CLIENT DISAGREE\");\r\n                debugLog(\"self.activeSubscriptionCount =\" + this.activeSubscriptionCount);\r\n                active = false;\r\n            }\r\n\r\n            if (err.message.match(/BadSessionClosed|BadSessionIdInvalid/)) {\r\n                //\r\n                // server has closed the session ....\r\n                // may be the session timeout is shorted than the subscription life time\r\n                // and the client does not send intermediate keepAlive request to keep the connection working.\r\n                //\r\n                debugLog(\" WARNING : SERVER TELLS THAT THE SESSION HAS CLOSED ...\");\r\n                debugLog(\"   the ClientSidePublishEngine shall now be disabled, as server will reject any further request\");\r\n                // close all active subscription....\r\n                active = false;\r\n            }\r\n            if (err.message.match(/BadTooManyPublishRequests/)) {\r\n\r\n                // preventing queue overflow\r\n                // -------------------------\r\n                //   if the client send too many publish requests that the server can queue, the server returns\r\n                //   a Service result of BadTooManyPublishRequests.\r\n                //\r\n                //   let adjust the nbMaxPublishRequestsAcceptedByServer value so we never overflow the server\r\n                //   with extraneous publish requests in the future.\r\n                //\r\n                this.nbMaxPublishRequestsAcceptedByServer = Math.min(this.nbPendingPublishRequests,this.nbMaxPublishRequestsAcceptedByServer);\r\n                active = false;\r\n\r\n                debugLog(\" WARNING : SERVER TELLS THAT TOO MANY PUBLISH REQUEST HAS BEEN SEND ...\");\r\n                debugLog(\" On our side nbPendingPublishRequests = \" + this.nbPendingPublishRequests);\r\n                debugLog(\" => nbMaxPublishRequestsAcceptedByServer =\" + this.nbMaxPublishRequestsAcceptedByServer);\r\n            }\r\n        } else {\r\n            if (doDebug) {\r\n                debugLog(\"ClientSidePublishEngine.prototype._send_publish_request callback \");\r\n            }\r\n            this._receive_publish_response(response);\r\n        }\r\n\r\n        // feed the server with a new publish Request to the server\r\n        if (active  && this.activeSubscriptionCount>0 ) {\r\n            this.send_publish_request();\r\n        }\r\n    });\r\n};\r\n\r\npublic terminate() {\r\n    this._session = null;\r\n};\r\n\r\n/**\r\n * @method registerSubscription\r\n *\r\n * @param subscription.subscriptionId\r\n * @param subscription.timeoutHint\r\n * @param subscription.onNotificationMessage {Function} callback\r\n */\r\npublic registerSubscription(subscription : ClientSubscription) {\r\n\r\n    debugLog(\"ClientSidePublishEngine#registerSubscription \" + subscription.subscriptionId);\r\n\r\n    assert(arguments.length === 1);\r\n    assert(Number.isFinite(<any>subscription.subscriptionId));\r\n    assert(!this.subscriptionMap.hasOwnProperty(subscription.toString())); // already registered ?\r\n    assert('function' === typeof subscription.onNotificationMessage);\r\n    assert(Number.isFinite(subscription.timeoutHint));\r\n\r\n    this.activeSubscriptionCount += 1;\r\n    this.subscriptionMap[subscription.subscriptionId] = subscription;\r\n\r\n    this.timeoutHint = Math.max(this.timeoutHint, subscription.timeoutHint);\r\n    debugLog(\"                       setting timeoutHint = \" + this.timeoutHint + subscription.timeoutHint);\r\n\r\n    this.replenish_publish_request_queue();\r\n};\r\n\r\npublic replenish_publish_request_queue() {\r\n\r\n    // Spec 1.03 part 4 5.13.5 Publish\r\n    // [..] in high latency networks, the Client may wish to pipeline Publish requests\r\n    // to ensure cyclic reporting from the Server. Pipelining involves sending more than one Publish\r\n    // request for each Subscription before receiving a response. For example, if the network introduces a\r\n    // delay between the Client and the Server of 5 seconds and the publishing interval for a Subscription\r\n    // is one second, then the Client will have to issue Publish requests every second instead of waiting for\r\n    // a response to be received before sending the next request.\r\n    this.send_publish_request();\r\n    // send more than one publish request to server to cope with latency\r\n    for (var i = 0; i < ClientSidePublishEngine.publishRequestCountInPipeline - 1; i++) {\r\n        this.send_publish_request();\r\n    }\r\n};\r\n\r\n/**\r\n * @method unregisterSubscription\r\n *\r\n * @param subscriptionId\r\n */\r\npublic unregisterSubscription(subscriptionId : number | string) {\r\n\r\n    debugLog(\"ClientSidePublishEngine#unregisterSubscription \" + subscriptionId);\r\n\r\n    assert(Number.isFinite(<any>subscriptionId) && subscriptionId >0);\r\n    \r\n    this.activeSubscriptionCount -= 1;\r\n    assert(subscriptionId in this.subscriptionMap);\r\n    delete this.subscriptionMap[subscriptionId];\r\n};\r\n\r\npublic getSubscriptionIds() : number[] {\r\n    return Object.keys(this.subscriptionMap).map(parseInt);\r\n};\r\n\r\n\r\n/***\r\n * get the client subscription from Id\r\n * @method getSubscription\r\n * @param subscriptionId {Number} the subscription Id\r\n * @return {Subscription|null}\r\n */\r\npublic getSubscription(subscriptionId : number) {\r\n    var self = this;\r\n    assert(Number.isFinite(subscriptionId) && subscriptionId >0);\r\n    assert(self.subscriptionMap.hasOwnProperty(subscriptionId.toString()));\r\n    return self.subscriptionMap[subscriptionId];\r\n};\r\n\r\nprotected _receive_publish_response (response : subscription_service.PublishResponse) {\r\n\r\n    debugLog(\"receive publish response\");\r\n    var self = this;\r\n\r\n    // the id of the subscription sending the notification message\r\n    var subscriptionId = response.subscriptionId;\r\n\r\n    // the sequence numbers available in this subscription\r\n    // for retransmission and not acknowledged by the client\r\n    // -- var available_seq = response.availableSequenceNumbers;\r\n\r\n    // has the server more notification for us ?\r\n    // -- var moreNotifications = response.moreNotifications;\r\n\r\n    var notificationMessage = response.notificationMessage;\r\n    //  notificationMessage.sequenceNumber\r\n    //  notificationMessage.publishTime\r\n    //  notificationMessage.notificationData[]\r\n\r\n    notificationMessage.notificationData = notificationMessage.notificationData || [];\r\n\r\n    if (notificationMessage.notificationData.length !== 0) {\r\n        self.acknowledge_notification(subscriptionId, notificationMessage.sequenceNumber);\r\n    }\r\n    //else {\r\n    // this is a keep-alive notification\r\n    // in this case , we shall not acknowledge notificationMessage.sequenceNumber\r\n    // which is only an information of what will be the future sequenceNumber.\r\n    //}\r\n\r\n    var subscription = self.subscriptionMap[subscriptionId];\r\n\r\n    if (subscription && self._session !== null) {\r\n      \r\n        try{\r\n           // delegate notificationData to the subscription callback\r\n           subscription.onNotificationMessage(notificationMessage);\r\n        }\r\n        catch(err) {\r\n          if (doDebug){\r\n            console.log(err);\r\n            debugLog(\"Exception in onNotificationMessage\" );\r\n          }\r\n        }\r\n\r\n    } else {\r\n        debugLog(\" ignoring notificationMessage\" + notificationMessage + \" for subscription\" + subscriptionId);\r\n        debugLog(\" because there is no subscription.\");\r\n        debugLog(\" or because there is no session for the subscription (session terminated ?).\");\r\n    }\r\n};\r\n\r\npublic republish(callback) {\r\n\r\n    var self = this;\r\n\r\n    // After re-establishing the connection the Client shall call Republish in a loop, starting with the next expected\r\n    // sequence number and incrementing the sequence number until the Server returns the status Bad_MessageNotAvailable.\r\n    // After receiving this status, the Client shall start sending Publish requests with the normal Publish handling.\r\n    // This sequence ensures that the lost NotificationMessages queued in the Server are not overwritten by new\r\n    // Publish responses\r\n    function _republish(subscription,subscriptionId,_i_callback) {\r\n\r\n        assert(subscription.subscriptionId === +subscriptionId);\r\n\r\n        var is_done = false;\r\n\r\n        function _send_republish(_b_callback) {\r\n            var request = new subscription_service.RepublishRequest({\r\n                subscriptionId: subscription.subscriptionId,\r\n                retransmitSequenceNumber: subscription.lastSequenceNumber+1\r\n            });\r\n\r\n            // istanbul ignore next\r\n            if (doDebug) {\r\n                debugLog(\" republish Request for subscription\" +\r\n                    request.subscriptionId + \" retransmitSequenceNumber=\" + request.retransmitSequenceNumber);\r\n            }\r\n\r\n            self._session.republish(request,function(err,response){\r\n                if (!err &&  response.responseHeader.serviceResult === StatusCodes.Good) {\r\n                    subscription.onNotificationMessage(response.notificationMessage);\r\n                } else {\r\n                    if (!err) {\r\n                        err = new Error(response.responseHeader.serviceResult.toString());\r\n                    }\r\n                    debugLog(\" _send_republish ends with \" + err.message);\r\n                    is_done = true;\r\n                }\r\n                _b_callback(err);\r\n            });\r\n        }\r\n\r\n        setImmediate(function() {\r\n\r\n            assert('function' === typeof _i_callback);\r\n            whilst(function (){ return !is_done},_send_republish,function(err) {\r\n\r\n                debugLog(\"nbPendingPublishRequest = \" + self.nbPendingPublishRequests);\r\n                debugLog(\" _republish ends with \" + (err ? err.message : \"null\"));\r\n                _i_callback(err);\r\n            });\r\n        });\r\n    }\r\n\r\n    function repairSubscription(subscription,subscriptionId,_the_callback) {\r\n\r\n        _republish(subscription,subscriptionId,function (err) {\r\n\r\n\r\n            if (err && err.message.match(/SubscriptionIdInvalid/)) {\r\n\r\n                // _republish failed because subscriptionId is not valid anymore on server side.\r\n                //\r\n                // This could happen when the subscription has timed out and has been deleted by server\r\n                // Subscription may time out if the duration of the connection break exceed the max life time\r\n                // of the subscription.\r\n                //\r\n                // In this case, Client must recreate a subscription and recreate monitored item without altering\r\n                // the event handlers\r\n                //\r\n                debugLog(\"_republish failed because subscriptionId is not valid anymore on server side.\");\r\n                return subscription.recreateSubscriptionAndMonitoredItem(_the_callback);\r\n            }\r\n            _the_callback();\r\n\r\n        });\r\n\r\n    }\r\n\r\n    forEachOf(self.subscriptionMap,repairSubscription,callback);\r\n}\r\n\r\n}\r\n","import noop from 'lodash-es/noop';\nimport slice from './internal/slice';\n\nimport onlyOnce from './internal/onlyOnce';\nimport wrapAsync from './internal/wrapAsync';\n\n/**\n * Repeatedly call `iteratee`, while `test` returns `true`. Calls `callback` when\n * stopped, or an error occurs.\n *\n * @name whilst\n * @static\n * @memberOf module:ControlFlow\n * @method\n * @category Control Flow\n * @param {Function} test - synchronous truth test to perform before each\n * execution of `iteratee`. Invoked with ().\n * @param {AsyncFunction} iteratee - An async function which is called each time\n * `test` passes. Invoked with (callback).\n * @param {Function} [callback] - A callback which is called after the test\n * function has failed and repeated execution of `iteratee` has stopped. `callback`\n * will be passed an error and any arguments passed to the final `iteratee`'s\n * callback. Invoked with (err, [results]);\n * @returns undefined\n * @example\n *\n * var count = 0;\n * async.whilst(\n *     function() { return count < 5; },\n *     function(callback) {\n *         count++;\n *         setTimeout(function() {\n *             callback(null, count);\n *         }, 1000);\n *     },\n *     function (err, n) {\n *         // 5 seconds have passed, n = 5\n *     }\n * );\n */\nexport default function whilst(test, iteratee, callback) {\n    callback = onlyOnce(callback || noop);\n    var _iteratee = wrapAsync(iteratee);\n    if (!test()) return callback(null);\n    var next = function(err/*, ...args*/) {\n        if (err) return callback(err);\n        if (test()) return _iteratee(next);\n        var args = slice(arguments, 1);\n        callback.apply(null, [null].concat(args));\n    };\n    _iteratee(next);\n}\n","import isArrayLike from 'lodash-es/isArrayLike';\n\nimport breakLoop from './internal/breakLoop';\nimport eachOfLimit from './eachOfLimit';\nimport doLimit from './internal/doLimit';\nimport noop from 'lodash-es/noop';\nimport once from './internal/once';\nimport onlyOnce from './internal/onlyOnce';\nimport wrapAsync from './internal/wrapAsync';\n\n// eachOf implementation optimized for array-likes\nfunction eachOfArrayLike(coll, iteratee, callback) {\n    callback = once(callback || noop);\n    var index = 0,\n        completed = 0,\n        length = coll.length;\n    if (length === 0) {\n        callback(null);\n    }\n\n    function iteratorCallback(err, value) {\n        if (err) {\n            callback(err);\n        } else if ((++completed === length) || value === breakLoop) {\n            callback(null);\n        }\n    }\n\n    for (; index < length; index++) {\n        iteratee(coll[index], index, onlyOnce(iteratorCallback));\n    }\n}\n\n// a generic version of eachOf which can handle array, object, and iterator cases.\nvar eachOfGeneric = doLimit(eachOfLimit, Infinity);\n\n/**\n * Like [`each`]{@link module:Collections.each}, except that it passes the key (or index) as the second argument\n * to the iteratee.\n *\n * @name eachOf\n * @static\n * @memberOf module:Collections\n * @method\n * @alias forEachOf\n * @category Collection\n * @see [async.each]{@link module:Collections.each}\n * @param {Array|Iterable|Object} coll - A collection to iterate over.\n * @param {AsyncFunction} iteratee - A function to apply to each\n * item in `coll`.\n * The `key` is the item's key, or index in the case of an array.\n * Invoked with (item, key, callback).\n * @param {Function} [callback] - A callback which is called when all\n * `iteratee` functions have finished, or an error occurs. Invoked with (err).\n * @example\n *\n * var obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\n * var configs = {};\n *\n * async.forEachOf(obj, function (value, key, callback) {\n *     fs.readFile(__dirname + value, \"utf8\", function (err, data) {\n *         if (err) return callback(err);\n *         try {\n *             configs[key] = JSON.parse(data);\n *         } catch (e) {\n *             return callback(e);\n *         }\n *         callback();\n *     });\n * }, function (err) {\n *     if (err) console.error(err.message);\n *     // configs is now a map of JSON data\n *     doSomethingWith(configs);\n * });\n */\nexport default function(coll, iteratee, callback) {\n    var eachOfImplementation = isArrayLike(coll) ? eachOfArrayLike : eachOfGeneric;\n    eachOfImplementation(coll, wrapAsync(iteratee), callback);\n}\n","\"use strict\";\r\n/**\r\n * @module opcua.client\r\n */\r\n\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {assert} from '../assert'\r\nimport {MonitoredItemBase} from './MonitoredItemBase'\r\nimport { ClientSubscription } from '../client/ClientSubscription';\r\nimport { ReadValueId, IReadValueId } from '../generated/ReadValueId';\r\nimport { MonitoringParameters, IMonitoringParameters } from '../generated/MonitoringParameters';\r\nimport { TimestampsToReturn } from '../generated/TimestampsToReturn';\r\nimport { MonitoringMode } from '../generated/MonitoringMode';\r\n\r\nimport * as subscription_service from '../service-subscription';\r\nimport * as read_service from '../service-read';\r\nimport { DataValue } from '../data-value';\r\n\r\n\r\n\r\n/**\r\n * ClientMonitoredItemGroup\r\n * @class ClientMonitoredItemGroup\r\n * @extends EventEmitter\r\n *\r\n * @param subscription              {ClientSubscription}\r\n * @param itemsToMonitor             {Array<ReadValueId>}\r\n * @param itemsToMonitor.nodeId      {NodeId}\r\n * @param itemsToMonitor.attributeId {AttributeId}\r\n *\r\n * @param monitoringParameters      {MonitoringParameters}\r\n * @param timestampsToReturn        {TimestampsToReturn}\r\n * @constructor\r\n *\r\n * event:\r\n *    \"initialized\"\r\n *    \"err\"\r\n *    \"changed\"\r\n *\r\n *  note: this.monitoringMode = subscription_service.MonitoringMode.Reporting;\r\n */\r\nexport class MonitoredItemGroup extends EventEmitter{\r\n    protected _monitoredItems : MonitoredItemBase[];\r\n    protected _subscription : ClientSubscription;\r\n    protected _timestampsToReturn : TimestampsToReturn;\r\n    protected _monitoringMode : MonitoringMode;\r\nconstructor (subscription : ClientSubscription, itemsToMonitor : IReadValueId[], monitoringParameters : IMonitoringParameters, timestampsToReturn : TimestampsToReturn) {\r\n    super();\r\n    assert(Array.isArray(itemsToMonitor));\r\n\r\n    timestampsToReturn = timestampsToReturn || TimestampsToReturn.Neither;\r\n\r\n    this._subscription = subscription;\r\n\r\n    this._monitoredItems = itemsToMonitor.map(function (itemToMonitor) {\r\n        return new MonitoredItemBase(subscription, itemToMonitor, monitoringParameters);\r\n    });\r\n\r\n    this._timestampsToReturn = timestampsToReturn;\r\n    this._monitoringMode = subscription_service.MonitoringMode.Reporting;\r\n}\r\n\r\npublic get monitoredItems() : MonitoredItemBase[] {\r\n    return this._monitoredItems;\r\n}\r\n\r\npublic toString() : string {\r\n\r\n    \r\n    var ret = \"\";\r\n    ret += \"itemsToMonitor:        \" + this._monitoredItems.map( (a) => {\r\n          return a.nodeId.toString()\r\n      }).join(\"\\n\");\r\n\r\n    ret += \"timestampsToReturn:   \" + this._timestampsToReturn.toString() + \"\\n\";\r\n    ret += \"monitoringMode        \" + this._monitoringMode;\r\n    return ret;\r\n};\r\n\r\n/**\r\n * remove the MonitoredItem from its subscription\r\n * @method terminate\r\n * @param  done {Function} the done callback\r\n * @async\r\n */\r\npublic terminate(done : Function) : void {\r\n\r\n    assert(!done || ('function' === typeof done));\r\n    \r\n    /**\r\n     * Notify the observer that this monitored item has been terminated.\r\n     * @event terminated\r\n     */\r\n    this.emit(\"terminated\");\r\n    this._subscription._delete_monitored_items(this._monitoredItems, function (err) {\r\n        if (done) {\r\n            done(err);\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * @method _monitor\r\n * Creates the monitor item (monitoring mode = Reporting)\r\n * @param done {Function} callback\r\n * @private\r\n */\r\npublic _monitor(done) : void {\r\n    assert(done === undefined || ('function' === typeof done));\r\n    \r\n\r\n    this._monitoredItems.forEach((monitoredItem, index) => {\r\n        monitoredItem.on(\"changed\",  (dataValue) => {\r\n            /**\r\n             * Notify the observers that a group MonitoredItem value has changed on the server side.\r\n             * @event changed\r\n             * @param monitoredItem\r\n             * @param value\r\n             * @param index\r\n             */\r\n            try {\r\n                this.emit(\"changed\", monitoredItem, dataValue, index);\r\n            }\r\n            catch (err) {\r\n                console.log(err);\r\n            }\r\n        });\r\n    });\r\n\r\n\r\n    MonitoredItemBase._toolbox_monitor(this._subscription, this._timestampsToReturn, this._monitoredItems, (err) => {\r\n        if (err) {\r\n            this.emit(\"terminated\");\r\n        } else {\r\n            this.emit(\"initialized\");\r\n            // set the event handler\r\n        }\r\n\r\n        if (done) {\r\n            done(err);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n * @method modify\r\n * @param parameters {Object}\r\n * @param [timestampsToReturn=null] {TimestampsToReturn}\r\n * @param callback {Function}\r\n */\r\npublic modify(parameters, timestampsToReturn?: TimestampsToReturn, callback?) : void {\r\n    \r\n    this._timestampsToReturn = timestampsToReturn || this._timestampsToReturn;\r\n    MonitoredItemBase._toolbox_modify(this._subscription, this._monitoredItems, parameters, this._timestampsToReturn, callback);\r\n};\r\n\r\npublic setMonitoringMode(monitoringMode : MonitoringMode, callback) : void {\r\n    \r\n    MonitoredItemBase._toolbox_setMonitoringMode(this._subscription, this._monitoredItems, monitoringMode, callback);\r\n};\r\n\r\n\r\npublic onChanged(callback : (item : MonitoredItemBase,dataValue : DataValue,index : number) => void) {\r\n    this.on(\"changed\",callback);\r\n}\r\n\r\npublic onTerminated(callback : () => void ) {\r\n    this.on(\"terminated\",callback);\r\n}\r\n\r\npublic onInitialized(callback : () => void ) {\r\n    this.on(\"initialized\",callback);\r\n}\r\n\r\n}","\"use strict\";\r\n/**\r\n * @module opcua.transport\r\n */\r\n\r\n // system requires\r\nimport {EventEmitter} from 'eventemitter3';\r\nimport {assert} from '../assert';\r\n\r\n// opcua requires\r\nimport {PacketAssembler} from '../packet-assembler/packet_assembler';\r\n\r\nimport {writeTCPMessageHeader} from './tools';\r\nimport {readRawMessageHeader} from './message_builder_base';\r\n\r\nimport {debugLog,doDebug} from '../common/debug';\r\n\r\nvar fakeSocket : any = {invalid: true} ;\r\n\r\nexport function setFakeTransport(socket_like_mock) {\r\n    fakeSocket = socket_like_mock;\r\n};\r\n\r\nexport function getFakeTransport() {\r\n    if (fakeSocket.invalid){\r\n        throw new Error(\"getFakeTransport: setFakeTransport must be called first  - BadProtocolVersionUnsupported\");\r\n    }\r\n    return fakeSocket;\r\n};\r\n\r\nvar counter =0;\r\n\r\n/**\r\n * WSTransport\r\n *\r\n * @class WSTransport\r\n * @extends EventEmitter\r\n */\r\nexport class WSTransport extends EventEmitter{\r\n\r\n    packetAssembler: PacketAssembler;\r\n    name: string;\r\n    _timerId: number;\r\n    protected _socket: WebSocket;\r\n    timeout : number;\r\n    headerSize : number;\r\n    _protocolVersion : number;\r\n\r\n    bytesRead: number;\r\n    bytesWritten: number;\r\n    chunkReadCount: number;\r\n    chunkWrittenCount: number;\r\n    protected __disconnecting__ : boolean;\r\n    protected _on_socket_closed_called: boolean;\r\n    protected _on_socket_ended_called: boolean;\r\n    protected _pending_buffer: any;\r\n    \r\n    protected _the_callback: any;\r\n    \r\n    get disconnecting() {\r\n        return this.__disconnecting__;\r\n    }\r\n\r\nconstructor() {\r\n    super();\r\n    /**\r\n     * timeout\r\n     * @property [timeout=30000]\r\n     * @type {number}\r\n     */\r\n    this.timeout = 30000; // 30 seconds timeout\r\n\r\n    this._socket = null;\r\n\r\n    /**\r\n     * @property headerSize the size of the header in bytes\r\n     * @type {number}\r\n     * @default  8\r\n     */\r\n    this.headerSize = 8;\r\n\r\n    /**\r\n     * @property protocolVersion indicates the version number of the OPCUA protocol used\r\n     * @type {number}\r\n     * @default  0\r\n     */\r\n    this._protocolVersion = 0;\r\n\r\n    this.__disconnecting__ = false;\r\n\r\n    this.bytesWritten = 0;\r\n    this.bytesRead = 0;\r\n\r\n    this._the_callback = null;\r\n\r\n\r\n    /***\r\n     * @property chunkWrittenCount\r\n     * @type {number}\r\n     */\r\n    this.chunkWrittenCount= 0;\r\n    /***\r\n     * @property chunkReadCount\r\n     * @type {number}\r\n     */\r\n    this.chunkReadCount= 0;\r\n}\r\n\r\n\r\n/**\r\n * ```createChunk``` is used to construct a pre-allocated chunk to store up to ```length``` bytes of data.\r\n * The created chunk includes a prepended header for ```chunk_type``` of size ```self.headerSize```.\r\n *\r\n * @method createChunk\r\n * @param msg_type\r\n * @param chunk_type {String} chunk type. should be 'F' 'C' or 'A'\r\n * @param length\r\n * @return {ArrayBuffer} a buffer object with the required length representing the chunk.\r\n *\r\n * Note:\r\n *  - only one chunk can be created at a time.\r\n *  - a created chunk should be committed using the ```write``` method before an other one is created.\r\n */\r\npublic createChunk(msg_type, chunk_type: string, length : number): ArrayBuffer {\r\n\r\n    assert(msg_type === \"MSG\");\r\n    assert(this._pending_buffer === undefined, \"createChunk has already been called ( use write first)\");\r\n\r\n    let total_length = length + this.headerSize;\r\n    let buffer = new ArrayBuffer(total_length);\r\n    writeTCPMessageHeader(\"MSG\", chunk_type, total_length, buffer);\r\n\r\n    this._pending_buffer = buffer;\r\n\r\n    return buffer;\r\n};\r\n\r\n\r\n\r\n\r\nprotected _write_chunk(message_chunk) {\r\n\r\n    if (this._socket) {\r\n        this.bytesWritten += message_chunk.length;\r\n        this.chunkWrittenCount ++;\r\n        this._socket.send(message_chunk);\r\n    }\r\n};\r\n\r\n/**\r\n * write the message_chunk on the socket.\r\n * @method write\r\n * @param message_chunk {ArrayBuffer}\r\n *\r\n * Notes:\r\n *  - the message chunk must have been created by ```createChunk```.\r\n *  - once a message chunk has been written, it is possible to call ```createChunk``` again.\r\n *\r\n */\r\npublic write(message_chunk : ArrayBuffer) {\r\n\r\n    assert((this._pending_buffer === undefined) || this._pending_buffer === message_chunk, \" write should be used with buffer created by createChunk\");\r\n\r\n    var header = readRawMessageHeader(message_chunk);\r\n    assert(header.length === message_chunk.byteLength);\r\n    assert([\"F\", \"C\", \"A\"].indexOf(header.messageHeader.isFinal) !== -1);\r\n\r\n    this._write_chunk(message_chunk);\r\n\r\n    this._pending_buffer = undefined;\r\n};\r\n\r\n\r\nprotected _fulfill_pending_promises(err, data?) {\r\n\r\n    this._cleanup_timers();\r\n\r\n    var the_callback = this._the_callback;\r\n    this._the_callback = null;\r\n\r\n    if (the_callback) {\r\n        the_callback(err, data);\r\n        return true;\r\n    }\r\n    return false;\r\n\r\n}\r\n\r\nprotected _on_message_received(message_chunk) {\r\n    var has_callback = this._fulfill_pending_promises(null,message_chunk); \r\n    this.chunkReadCount ++;\r\n\r\n    if (!has_callback) {\r\n        /**\r\n         * notify the observers that a message chunk has been received\r\n         * @event message\r\n         * @param message_chunk {Buffer} the message chunk\r\n         */\r\n        this.emit(\"message\", message_chunk);\r\n    }\r\n}\r\n\r\n\r\nprotected _cleanup_timers() {\r\n\r\n \r\n    if (this._timerId) {\r\n        clearTimeout(this._timerId);\r\n        this._timerId = null;\r\n    }\r\n}\r\n\r\nprotected _start_timeout_timer() {\r\n\r\n  \r\n    assert(!this._timerId, \"timer already started\");\r\n    this._timerId = window.setTimeout( () => {\r\n        this._timerId =null;\r\n        this._fulfill_pending_promises(new Error(\"Timeout in waiting for data on socket ( timeout was = \" + this.timeout + \" ms )\"));\r\n    }, this.timeout);\r\n\r\n}\r\n\r\npublic on_socket_closed(err) {\r\n\r\n    if (this._on_socket_closed_called) {\r\n        return;\r\n    }\r\n    assert(!this._on_socket_closed_called);\r\n    this._on_socket_closed_called = true; // we don't want to send close event twice ...\r\n    /**\r\n     * notify the observers that the transport layer has been disconnected.\r\n     * @event socket_closed\r\n     * @param err the Error object or null\r\n     */\r\n    this.emit(\"socket_closed\", err || null);\r\n};\r\n\r\npublic on_socket_ended(err) {\r\n  \r\n    assert(!this._on_socket_ended_called);\r\n    this._on_socket_ended_called = true; // we don't want to send ende event twice ...\r\n    /**\r\n     * notify the observers that the transport layer has been disconnected.\r\n     * @event close\r\n     * @param err the Error object or null\r\n     */\r\n    this.emit(\"close\", err || null);\r\n};\r\n\r\nprotected _on_socket_ended_message =  function(err) {\r\n\r\n  \r\n    if (this.__disconnecting__) {\r\n        return;\r\n    }\r\n    this._on_socket_ended = null;\r\n    this._on_data_received = null;\r\n\r\n    debugLog(\"Transport Connection ended \" + self.name);\r\n    assert(!this.__disconnecting__);\r\n    err = err || new Error(\"_socket has been disconnected by third party\");\r\n\r\n    this.on_socket_ended(err);\r\n\r\n    this.__disconnecting__ = true;\r\n\r\n    debugLog(\" bytesRead    = \" + this.bytesRead);\r\n    debugLog(\" bytesWritten = \" + this.bytesWritten);\r\n    this._fulfill_pending_promises(new Error(\"Connection aborted - ended by server : \" + (err ? err.message : \"\")));\r\n};\r\n\r\n\r\n/**\r\n * @method _install_socket\r\n * @param socket {Socket}\r\n * @protected\r\n */\r\nprotected _install_socket(socket : WebSocket) {\r\n\r\n    assert(socket);\r\n \r\n\r\n    this.name = \" Transport \" + counter;\r\n    counter += 1;\r\n\r\n    this._socket = socket;\r\n\r\n    // install packet assembler ...\r\n    this.packetAssembler = new PacketAssembler({\r\n        readMessageFunc: readRawMessageHeader,\r\n        minimumSizeInBytes: this.headerSize\r\n    });\r\n\r\n    this.packetAssembler.on(\"message\", (message_chunk) => {\r\n        this._on_message_received( message_chunk);\r\n    });\r\n\r\n    this._socket.onmessage = (evt : MessageEvent) => {\r\n        this.bytesRead += evt.data.byteLength;\r\n        if (evt.data.byteLength > 0) {\r\n            this.packetAssembler.feed(new DataView(evt.data));\r\n        }\r\n\r\n    };\r\n\r\n    this._socket.onclose = (evt : CloseEvent) => {\r\n        // istanbul ignore next\r\n        if (doDebug) {\r\n            debugLog(\" SOCKET CLOSE : reason =\" + evt.reason + \" code=\" + evt.code  + \" name=\" + this.name);\r\n        }\r\n        if (this._socket ) {\r\n            debugLog(\"  remote address = \" + this._socket.url);\r\n        }\r\n        \r\n        let err = null;\r\n        if (evt.code != 1000 /* if not normal*/) {\r\n            /* TODO: what should we do now\r\n            if (this._socket) {\r\n                this._socket.destroy();\r\n            }\r\n            */\r\n           err = new Error(\"ERROR IN SOCKET: reason=\" + evt.reason + \" code=\" + evt.code  + \" name=\" + this.name);\r\n        }\r\n        \r\n        this.on_socket_closed(err);\r\n\r\n    };\r\n    /*\r\n    this._socket.on(\"end\", function (err) {\r\n\r\n        // istanbul ignore next\r\n        if (doDebug) {\r\n            debugLog(\" SOCKET END : \" +  err ? err.message : \"null\" +  this._socket.name + this.name);\r\n        }\r\n        this._on_socket_ended_message(err);\r\n\r\n    };\r\n    */\r\n\r\n    this._socket.onerror = (evt : Event) => {\r\n        // istanbul ignore next\r\n        if (doDebug) {\r\n            debugLog(\" SOCKET ERROR : \" + this.name);\r\n        }\r\n\r\n        \r\n\r\n        // note: The \"close\" event will be called directly following this event.\r\n    };\r\n\r\n};\r\n\r\n\r\n/**\r\n * @method _install_one_time_message_receiver\r\n *\r\n * install a one time message receiver callback\r\n *\r\n * Rules:\r\n * * TCP_transport will not emit the ```message``` event, while the \"one time message receiver\" is in operation.\r\n * * the TCP_transport will wait for the next complete message chunk and call the provided callback func\r\n *   ```callback(null,messageChunk);```\r\n * * if a messageChunk is not received within ```TCP_transport.timeout``` or if the underlying socket reports an error,\r\n *    the callback function will be called with an Error.\r\n *\r\n * @param callback {Function} the callback function\r\n * @param callback.err {null|Error}\r\n * @param callback.messageChunk {Buffer|null}\r\n * @protected\r\n */\r\nprotected _install_one_time_message_receiver(callback) {\r\n\r\n  \r\n    assert(!this._the_callback, \"callback already set\");\r\n    assert('function' === typeof callback);\r\n    this._the_callback = callback;\r\n    this._start_timeout_timer();\r\n};\r\n\r\n\r\n/**\r\n * disconnect the TCP layer and close the underlying socket.\r\n * The ```\"close\"``` event will be emitted to the observers with err=null.\r\n *\r\n * @method disconnect\r\n * @async\r\n * @param callback\r\n */\r\npublic disconnect(callback) {\r\n\r\n    assert('function' === typeof callback, \"expecting a callback function, but got \" + callback);\r\n\r\n \r\n    if (this.__disconnecting__) {\r\n        callback();\r\n        return;\r\n    }\r\n\r\n    assert(!this.__disconnecting__, \"TCP Transport has already been disconnected\");\r\n    this.__disconnecting__ = true;\r\n\r\n    assert(!this._the_callback, \"disconnect shall not be called while the 'one time message receiver' is in operation\");\r\n    this._cleanup_timers();\r\n\r\n    if (this._socket) {\r\n        this._socket.onclose = () => {\r\n            this.on_socket_ended(null);\r\n            callback();\r\n        }\r\n        this._socket.close();\r\n        this._socket = null;\r\n    }\r\n\r\n};\r\n\r\npublic isValid() {\r\n    return this._socket && (this._socket.readyState == this._socket.OPEN) && !this.__disconnecting__;\r\n};\r\n\r\n}\r\n\r\n","// --------- This code has been automatically generated !!! 2018-02-08T10:26:02.544Z\n\"use strict\";\n/**\n * @module opcua.address_space.types\n */\n\nimport * as ec from \"../basic-types\";\n\nimport {makeExpandedNodeId} from \"../nodeid/expanded_nodeid\";\nimport {generate_new_id} from \"../factory\";\nimport {_enumerations} from \"../factory/factories_enumerations\";\nimport {BaseUAObject} from \"../factory/factories_baseobject\";\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { DataStream } from \"../basic-types/DataStream\";\n\nvar encodeArray = ec.encodeArray;\nvar decodeArray = ec.decodeArray;\nvar encode_UInt32 = ec.encodeUInt32;\nvar decode_UInt32 = ec.decodeUInt32\nvar encode_UAString = ec.encodeString;\nvar decode_UAString = ec.decodeString;\n\n/**\n * \n * @class HelloMessage\n * @constructor\n * @extends BaseUAObject\n * @param  options {Object}\n * @param  [options.protocolVersion] {UInt32} The latest version of the OPC UA TCP protocol supported by the Client\n * @param  [options.receiveBufferSize] {UInt32} The largest message that the sender can receive.\n * @param  [options.sendBufferSize] {UInt32} The largest message that the sender will send.\n * @param  [options.maxMessageSize] {UInt32} The maximum size for any response message.\n * @param  [options.maxChunkCount] {UInt32} The maximum number of chunks in any response message\n * @param  [options.endpointUrl] {UAString} The URL of the Endpoint which the Client wished to connect to.\n */\nexport class HelloMessage extends BaseUAObject {\n \n  endpointUrl: string;\n  maxChunkCount: number;\n  maxMessageSize: number;\n  sendBufferSize: number;\n  receiveBufferSize: number;\n  protocolVersion: number;\nconstructor(options)\n{\n  super();\n    options = options || {};\n \n    /**\n      * The latest version of the OPC UA TCP protocol supported by the Client\n      * @property protocolVersion\n      * @type {UInt32}\n      */\n    this.protocolVersion = options.protocolVersion;\n\n    /**\n      * The largest message that the sender can receive.\n      * @property receiveBufferSize\n      * @type {UInt32}\n      */\n    this.receiveBufferSize = options.receiveBufferSize;\n\n    /**\n      * The largest message that the sender will send.\n      * @property sendBufferSize\n      * @type {UInt32}\n      */\n    this.sendBufferSize = options.sendBufferSize;\n\n    /**\n      * The maximum size for any response message.\n      * @property maxMessageSize\n      * @type {UInt32}\n      */\n    this.maxMessageSize = options.maxMessageSize;\n\n    /**\n      * The maximum number of chunks in any response message\n      * @property maxChunkCount\n      * @type {UInt32}\n      */\n    this.maxChunkCount = options.maxChunkCount;\n\n    /**\n      * The URL of the Endpoint which the Client wished to connect to.\n      * @property endpointUrl\n      * @type {UAString}\n      */\n    this.endpointUrl = options.endpointUrl;\n\n   // Object.preventExtensions(self);\n}\n\n\npublic static encodingDefaultBinary = makeExpandedNodeId(generate_new_id());\n\n\n/**\n * encode the object into a binary stream\n * @method encode\n *\n * @param stream {BinaryStream} \n */\npublic encode(stream : DataStream) {\n    encode_UInt32(this.protocolVersion,stream);\n    encode_UInt32(this.receiveBufferSize,stream);\n    encode_UInt32(this.sendBufferSize,stream);\n    encode_UInt32(this.maxMessageSize,stream);\n    encode_UInt32(this.maxChunkCount,stream);\n    encode_UAString(this.endpointUrl,stream);\n};\n/**\n * decode the object from a binary stream\n * @method decode\n *\n * @param stream {BinaryStream} \n * @param [option] {object} \n */\npublic decode(stream : DataStream) {\n    // call base class implementation first\n    \n    this.protocolVersion = decode_UInt32(stream);\n    this.receiveBufferSize = decode_UInt32(stream);\n    this.sendBufferSize = decode_UInt32(stream);\n    this.maxMessageSize = decode_UInt32(stream);\n    this.maxChunkCount = decode_UInt32(stream);\n    this.endpointUrl = decode_UAString(stream);\n};\n\npublic clone(target: any): BaseUAObject {\n  throw new Error(\"Method not implemented.\");\n}\n}\n\nregister_class_definition(\"HelloMessage\",HelloMessage,makeExpandedNodeId(generate_new_id()));\n","// --------- This code has been automatically generated !!! 2018-02-08T10:26:02.549Z\n\"use strict\";\n\n\nimport * as ec from \"../basic-types\";\n\n\nimport {makeExpandedNodeId} from \"../nodeid/expanded_nodeid\";\n\nimport {BaseUAObject} from '../factory/factories_baseobject';\nimport {generate_new_id} from \"../factory\";\n\nimport {register_class_definition} from '../factory/factories_factories';\nimport { DataStream } from \"../basic-types/DataStream\";\nimport { UInt32 } from \"../basic-types\";\n\n\nvar encode_UInt32 = ec.encodeUInt32;\nvar decode_UInt32 = ec.decodeUInt32;\n\n/**\n * \n * @class AcknowledgeMessage\n * @constructor\n * @extends BaseUAObject\n * @param  options {Object}\n * @param  [options.protocolVersion] {UInt32} The latest version of the OPC UA TCP protocol supported by the Server.\n * @param  [options.receiveBufferSize] {UInt32} \n * @param  [options.sendBufferSize] {UInt32} \n * @param  [options.maxMessageSize] {UInt32} The maximum size for any request message.\n * @param  [options.maxChunkCount] {UInt32} The maximum number of chunks in any request message.\n */\nexport class AcknowledgeMessage extends BaseUAObject{\n\n  protocolVersion: UInt32;\n  receiveBufferSize: UInt32;\n  sendBufferSize: UInt32;\n  maxMessageSize: UInt32;\n  maxChunkCount: UInt32;\nconstructor(options)\n{\n    super();\n    options = options || {};\n    /* istanbul ignore next */\n\n    /**\n      * The latest version of the OPC UA TCP protocol supported by the Server.\n      * @property protocolVersion\n      * @type {UInt32}\n      */\n    this.protocolVersion = options.protocolVersion;\n\n    /**\n      * \n      * @property receiveBufferSize\n      * @type {UInt32}\n      */\n    this.receiveBufferSize = options.receiveBufferSize;\n\n    /**\n      * \n      * @property sendBufferSize\n      * @type {UInt32}\n      */\n    this.sendBufferSize = options.sendBufferSize;\n\n    /**\n      * The maximum size for any request message.\n      * @property maxMessageSize\n      * @type {UInt32}\n      */\n    this.maxMessageSize = options.maxMessageSize;\n\n    /**\n      * The maximum number of chunks in any request message.\n      * @property maxChunkCount\n      * @type {UInt32}\n      */\n    this.maxChunkCount = options.maxChunkCount;\n\n   // Object.preventExtensions(self);\n}\n\npublic static encodingDefaultBinary = makeExpandedNodeId(generate_new_id());\n\n/**\n * encode the object into a binary stream\n * @method encode\n *\n * @param stream {BinaryStream} \n */\npublic encode(stream : DataStream) {\n    // call base class implementation first\n    \n    encode_UInt32(this.protocolVersion,stream);\n    encode_UInt32(this.receiveBufferSize,stream);\n    encode_UInt32(this.sendBufferSize,stream);\n    encode_UInt32(this.maxMessageSize,stream);\n    encode_UInt32(this.maxChunkCount,stream);\n};\n/**\n * decode the object from a binary stream\n * @method decode\n *\n * @param stream {BinaryStream} \n * @param [option] {object} \n */\npublic decode(stream : DataStream) {\n    // call base class implementation first\n   \n    this.protocolVersion = decode_UInt32(stream);\n    this.receiveBufferSize = decode_UInt32(stream);\n    this.sendBufferSize = decode_UInt32(stream);\n    this.maxMessageSize = decode_UInt32(stream);\n    this.maxChunkCount = decode_UInt32(stream);\n};\n\npublic clone(target: any): BaseUAObject {\n  throw new Error(\"Method not implemented.\");\n}\n\n}\n\n\nregister_class_definition(\"AcknowledgeMessage\",AcknowledgeMessage,makeExpandedNodeId(generate_new_id(),0));\n","\"use strict\";\r\n/**\r\n * @module opcua.transport\r\n */\r\n\r\n\r\n// system requires\r\nimport {assert} from '../assert';\r\n\r\n// opcua requires\r\nimport {DataStream} from '../basic-types/DataStream';\r\n\r\n// this modules\r\nimport {WSTransport,getFakeTransport} from './ws_transport';\r\n\r\nimport {packTcpMessage,parseEndpointUrl} from './tools';\r\n\r\n\r\n\r\nimport {HelloMessage} from \"./HelloMessage\";\r\nimport {TCPErrorMessage} from \"./TCPErrorMessage\";\r\nimport {AcknowledgeMessage} from \"./AcknowledgeMessage\";\r\n\r\nimport {debugLog} from '../common/debug';\r\nimport {readMessageHeader} from '../chunkmanager';\r\n\r\n\r\nimport {decodeMessage} from \"./tools\";\r\n\r\nfunction createClientSocket(endpointUrl : string) : WebSocket {\r\n    // create a socket based on Url\r\n    let ep = parseEndpointUrl(endpointUrl);\r\n    let port = ep.port;\r\n    let hostname = ep.hostname;\r\n    switch (ep.protocol) {\r\n        case \"websocket\":\r\n        case \"opc.tcp\":\r\n        case \"ws\":\r\n            //TODO: that's it --> implement me\r\n            let websocket = new WebSocket(endpointUrl);\r\n            websocket.binaryType  = \"arraybuffer\";\r\n            /*\r\n            websocket.onopen = function(evt) { onOpen(evt) };\r\n            websocket.onclose = function(evt) { onClose(evt) };\r\n            websocket.onmessage = function(evt) { onMessage(evt) };\r\n            websocket.onerror = function(evt) { onError(evt) };\r\n            */\r\n           return websocket;\r\n            break;\r\n        case \"fake\":\r\n            var fakeSocket = getFakeTransport();\r\n            assert(ep.protocol === \"fake\", \" Unsupported transport protocol\");\r\n            setTimeout(function () {\r\n                (<any>fakeSocket).emit(\"connect\");\r\n            },0);\r\n            return <WebSocket>fakeSocket;\r\n        case \"http\":\r\n        case \"https\":\r\n        \r\n            // var socket = net.connect({host: hostname, port: port});\r\n            // socket.setNoDelay(true);\r\n\r\n            //  return socket;\r\n        default:\r\n            throw new Error(\"this transport protocol is currently not supported :\" + ep.protocol);\r\n    }\r\n}\r\n\r\n/**\r\n * a ClientTCP_transport connects to a remote server socket and\r\n * initiates a communication with a HEL/ACK transaction.\r\n * It negociates the communication parameters with the other end.\r\n *\r\n * @class ClientWSTransport\r\n * @extends WSTransport\r\n *\r\n *\r\n *\r\n * @example\r\n *\r\n *    ```javascript\r\n *    var transport = ClientWSTransport(url);\r\n *\r\n *    transport.timeout = 1000;\r\n *\r\n *    transport.connect(function(err)) {\r\n *         if (err) {\r\n *            // cannot connect\r\n *         } else {\r\n *            // connected\r\n *\r\n *         }\r\n *    });\r\n *    ....\r\n *\r\n *    transport.write(message_chunk,'F');\r\n *\r\n *    ....\r\n *\r\n *    transport.on(\"message\",function(message_chunk) {\r\n *        // do something with message from server...\r\n *    });\r\n *\r\n *\r\n *    ```\r\n *\r\n *\r\n */\r\nexport class ClientWSTransport extends WSTransport{\r\n    numberOfRetry: number;\r\n    _connected: boolean;\r\n    serverUri: string;\r\n    endpointUrl: string;\r\n    _protocolVersion: number;\r\n    _parameters : any;\r\n\r\n    get protocolVersion() {\r\n        return this._protocolVersion;\r\n    }\r\n\r\n    set protocolVersion(v : number) {\r\n        this._protocolVersion = v;\r\n    }\r\n\r\n    get connected() {\r\n        return this._connected;\r\n    }\r\n\r\n    get parameters() {\r\n        return this._parameters;\r\n    }\r\n\r\nconstructor() {\r\n    super();\r\n   \r\n    this._connected = false;\r\n};\r\n\r\npublic on_socket_ended(err) {\r\n    if (this._connected) {\r\n        super.on_socket_ended(err);\r\n    }\r\n};\r\n\r\n/**\r\n * @method connect\r\n * @async\r\n * @param endpointUrl {String}\r\n * @param callback {Function} the callback function\r\n * @param [options={}]\r\n */\r\npublic connect(endpointUrl : string, callback : Function, options?) {\r\n\r\n    assert('function' === typeof callback);\r\n\r\n    options = options || {};\r\n\r\n    this._protocolVersion = (options.protocolVersion !== undefined) ? options.protocolVersion : this._protocolVersion;\r\n    assert(Number.isFinite(this._protocolVersion));\r\n\r\n    var ep = parseEndpointUrl(endpointUrl);\r\n\r\n    var hostname = window.location.hostname; //require(\"os\").hostname();\r\n    this.endpointUrl = endpointUrl;\r\n\r\n    this.serverUri = \"urn:\" + hostname + \":Sample\";\r\n\r\n    debugLog(\"endpointUrl =\", endpointUrl, \"ep\", ep);\r\n\r\n\r\n    try {\r\n        this._socket = createClientSocket(endpointUrl);\r\n    }\r\n    catch (err) {\r\n        return callback(err);\r\n    }\r\n//    this._socket.name = \"CLIENT\";\r\n    this._install_socket(this._socket);\r\n\r\n    this._socket.onopen =  () => {\r\n\r\n        this._perform_HEL_ACK_transaction((err) => {\r\n            if(!err) {\r\n\r\n                this._connected = true;\r\n                /**\r\n                 * notify the observers that the transport is connected (the socket is connected and the the HEL/ACK\r\n                 * transaction has been done)\r\n                 * @event connect\r\n                 *\r\n                 */\r\n                this.emit(\"connect\");\r\n            } else {\r\n                debugLog(\"_perform_HEL_ACK_transaction has failed with err=\",err.message);\r\n            }\r\n            callback(err);\r\n        });\r\n    };\r\n};\r\n\r\n\r\nprotected _handle_ACK_response(message_chunk, callback) {\r\n\r\n    var _stream = new DataStream(message_chunk);\r\n    var messageHeader = readMessageHeader(_stream);\r\n    var err;\r\n\r\n    if (messageHeader.isFinal !== \"F\") {\r\n        err = new Error(\" invalid ACK message\");\r\n        callback(err);\r\n        return;\r\n    }\r\n\r\n    var responseClass, response;\r\n\r\n    if (messageHeader.msgType === \"ERR\") {\r\n        responseClass = TCPErrorMessage;\r\n        _stream.rewind();\r\n        response = decodeMessage(_stream, responseClass);\r\n        \r\n        let err =new Error(\"ACK: ERR received \" + response.statusCode.toString() + \" : \" + response.reason);\r\n        (<any>err).statusCode =  response.statusCode;\r\n        callback(err);\r\n\r\n    } else {\r\n        responseClass = AcknowledgeMessage;\r\n        _stream.rewind();\r\n        response = decodeMessage(_stream, responseClass);\r\n        this._parameters = response;\r\n        callback(null);\r\n    }\r\n\r\n};\r\n\r\nprotected _send_HELLO_request() {\r\n\r\n    \r\n    assert(this._socket);\r\n    assert(Number.isFinite(this._protocolVersion));\r\n    assert(this.endpointUrl.length > 0, \" expecting a valid endpoint url\");\r\n\r\n    // Write a message to the socket as soon as the client is connected,\r\n    // the server will receive it as message from the client\r\n    var request = new HelloMessage({\r\n        protocolVersion: this._protocolVersion,\r\n        receiveBufferSize:    1024 * 64 * 10,\r\n        sendBufferSize:       1024 * 64 * 10,// 8196 min,\r\n        maxMessageSize:       0, // 0 - no limits\r\n        maxChunkCount:        0, // 0 - no limits\r\n        endpointUrl: this.endpointUrl\r\n    });\r\n\r\n    var messageChunk = packTcpMessage(\"HEL\", request);\r\n    this._write_chunk(messageChunk);\r\n\r\n};\r\n\r\n\r\nprotected _perform_HEL_ACK_transaction(callback) {\r\n\r\n   \r\n    assert(this._socket);\r\n    assert('function' === typeof callback);\r\n\r\n    var counter = 0;\r\n\r\n    this._install_one_time_message_receiver((err, data) => {\r\n\r\n        assert(counter === 0);\r\n        counter += 1;\r\n\r\n        if (err) {\r\n            callback(err);\r\n            this._socket.close(1000,\"OPC-UA: HELLO - ACK failed\");\r\n        } else {\r\n            this._handle_ACK_response(data, function (inner_err) {\r\n                callback(inner_err);\r\n            });\r\n        }\r\n    });\r\n    this._send_HELLO_request();\r\n};\r\n\r\n}\r\n\r\n\r\n","\"use strict\";\r\n/**\r\n * @module opcua.miscellaneous\r\n */\r\nimport {assert} from '../assert';\r\nimport {DataStream} from '../basic-types/DataStream';\r\nimport {hexDump} from '../common/debug';\r\nimport {buffer_ellipsis} from '../utils';\r\nimport * as ec from '../basic-types';\r\n\r\n\r\nvar spaces = \"                                                                                                                                                                             \";\r\nfunction f(n, width) : string {\r\n    var s = n.toString();\r\n    return (s + \"      \").substr(0, Math.max(s.length, width));\r\n}\r\n\r\nfunction display_encoding_mask(padding, encoding_mask, encoding_info) {\r\n    var bits = [];\r\n    for (let item in encoding_info) {\r\n        if (isFinite(Number(item))) {\r\n            console.log(item);\r\n            var mask = Number(item);\r\n            var bit = Math.log(mask) / Math.log(2);\r\n            bits = [\".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\", \".\"];\r\n            bits[bit] = ((encoding_mask & mask) === mask) ? \"Y\" : \"n\";\r\n\r\n            console.log(padding + \" \", bits.join(\"\"), \" <- has \" + encoding_mask[mask]);\r\n        }\r\n    }\r\n    // DataValueEncodingByte\r\n}\r\n\r\nfunction hex_block(start, end, buffer) {\r\n    var n = end - start;\r\n    var strBuf = buffer_ellipsis(buffer);\r\n    return \"s:\" + f(start, 4) + \" e:\" + f(end, 4) + \" n:\" + f(n, 4) + \" \" + strBuf;\r\n}\r\n\r\n\r\nfunction make_tracer(buffer, padding, offset) : any {\r\n\r\n    padding = padding || 0;\r\n    offset = offset || 0;\r\n\r\n    var pad = function () {\r\n        return \"                                                       \".substr(0, padding);\r\n    };\r\n\r\n    function display(str : string, hex_info? : string) {\r\n        hex_info = hex_info || \"\";\r\n\r\n        // account for ESC codes for colors\r\n        let nbColorAttributes = 0;\r\n        for (let i=0;i<str.length; i++) {\r\n            if (str[i] === \"\\u001b\") {nbColorAttributes++;}\r\n        }\r\n        var extra = nbColorAttributes * 5;\r\n        console.log((pad() + str + spaces).substr(0, 132 + extra) + \"|\" + hex_info);\r\n    }\r\n\r\n    function display_encodeable(value, buffer : DataStream, start : number, end : number) {\r\n        var ext_buf = buffer.buffer.slice(start,end)\r\n        var stream = new DataStream(ext_buf);\r\n        var nodeId = ec.decodeNodeId(stream);\r\n        var encodingMask = ec.decodeByte(stream); // 1 bin 2: xml\r\n        var length = ec.decodeUInt32(stream);\r\n\r\n        display(\"     ExpandedNodId = \" + nodeId);\r\n        display(\"     encoding mask = \" + encodingMask);\r\n        display(\"            length = \" + length);\r\n        packet_analyzer(ext_buf.slice(stream.length), value.encodingDefaultBinary, padding + 2, start + stream.length);\r\n\r\n    }\r\n\r\n    var options = {\r\n\r\n        tracer: {\r\n\r\n            dump: function (title, value) {\r\n                display(title + \"  \" + value.toString());\r\n            },\r\n\r\n            encoding_byte: function (encoding_mask, valueEnum, start, end) {\r\n                var b = buffer.slice(start, end);\r\n                display(\"  012345678\", hex_block(start, end, b));\r\n                display_encoding_mask(pad(), encoding_mask, valueEnum);\r\n            },\r\n\r\n            trace: function (operation, name, value, start, end, fieldType) {\r\n\r\n                var b = buffer.slice(start, end);\r\n                var str = \"\";\r\n\r\n                switch (operation) {\r\n\r\n                    case \"start\":\r\n                        padding += 2;\r\n                        display(name.toString());\r\n                        break;\r\n\r\n                    case \"end\":\r\n                        padding -= 2;\r\n                        break;\r\n\r\n                    case \"start_array\":\r\n                        display(\".\" + name + \" (length = \" + value + \") \" + \"[\", hex_block(start, end, b));\r\n                        padding += 2;\r\n                        break;\r\n\r\n                    case \"end_array\":\r\n                        padding -= 2;\r\n                        display(\"] // \" + name);\r\n                        break;\r\n\r\n                    case \"start_element\":\r\n                        display(\" #\" + value + \" {\");\r\n                        padding += 2;\r\n                        break;\r\n\r\n                    case \"end_element\":\r\n                        padding -= 2;\r\n                        display(\" } // # \" + value);\r\n                        break;\r\n\r\n\r\n                    case \"member\":\r\n                        display(\".\" + name + \" : \" + fieldType);\r\n\r\n                        var _hexDump = \"\";\r\n                        if (value instanceof ArrayBuffer) {\r\n                            _hexDump = hexDump(value);\r\n                            console.log(_hexDump);\r\n                            value = \"<BUFFER>\";\r\n                        }\r\n                        display((\" \" + value), hex_block(start, end, b));\r\n\r\n                        if (value && value.encode) {\r\n                            if (fieldType === \"ExtensionObject\") {\r\n                                display_encodeable(value, buffer, start, end);\r\n                            } else {\r\n                                str = value.toString() || \"<empty>\";\r\n                                display(str);\r\n                            }\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n    };\r\n\r\n    return options;\r\n}\r\n\r\nimport * as factories from '../factory/factories_factories';\r\n/**\r\n * @method packet_analyzer\r\n * @param {Buffer} buffer\r\n * @param id\r\n * @param {Integer} padding\r\n * @param {Integer} offset\r\n * @param {Object} custom_options\r\n * @param {Object} custom_options.factory\r\n * @param {Function} custom_options.factory.constructObject\r\n */\r\nexport function packet_analyzer(buffer : ArrayBuffer, id?, padding? : number, offset? : number, custom_options?) {\r\n\r\n   //xx var factories = custom_options.factory;\r\n\r\n    var stream = new DataStream(buffer);\r\n\r\n    var objMessage;\r\n    if (!id) {\r\n\r\n        id = ec.decodeExpandedNodeId(stream);\r\n\r\n    } else if (typeof id === \"object\" && id._schema) {\r\n        objMessage = id;\r\n    }\r\n\r\n    try {\r\n        objMessage = objMessage || factories.constructObject(id);\r\n    }\r\n    catch (err) {\r\n        console.log(id);\r\n        console.log(err);\r\n        console.log(\"Cannot read decodeExpandedNodeId  on stream \" + hexDump(stream.buffer));\r\n    }\r\n\r\n    var options = make_tracer(buffer, padding, offset);\r\n    options.name = \"message\";\r\n\r\n    for (let attrName in custom_options) { options[attrName] = custom_options[attrName];}\r\n   \r\n    try {\r\n        objMessage.decode_debug(stream, options);\r\n    }\r\n    catch (err) {\r\n        console.log(\" Error in \", err);\r\n        console.log(\" Error in \", err.stack);\r\n        console.log(\" objMessage \", objMessage);\r\n    }\r\n}\r\n\r\n\r\nexport function analyze_object_binary_encoding(obj,options) {\r\n\r\n    assert(obj);\r\n\r\n    var size = DataStream.binaryStoreSize(obj);\r\n    console.log(\"-------------------------------------------------\");\r\n    console.log(\" size = \", size);\r\n    var stream = new DataStream(size);\r\n    obj.encode(stream);\r\n    stream.rewind();\r\n    console.log(\"-------------------------------------------------\");\r\n    if (stream.buffer.byteLength < 256) {\r\n        console.log(hexDump(stream.buffer));\r\n    }\r\n    packet_analyzer(stream.buffer, obj.encodingDefaultBinary);\r\n\r\n}\r\n\r\n\r\n","\"use strict\";\r\n\r\n\r\nimport {assert} from '../assert';\r\nimport {SecurityPolicy,ICryptoFactory} from '../secure-channel/security_policy';\r\nimport * as ec from '../basic-types';\r\nimport * as securityPolicy_m from './security_policy';\r\n\r\nimport {MessageBuilderBase} from '../transport/message_builder_base';\r\nimport { MessageSecurityMode } from '../generated/MessageSecurityMode';\r\n\r\nimport {SymmetricAlgorithmSecurityHeader,SequenceHeader} from '../service-secure-channel';\r\nimport {chooseSecurityHeader} from './secure_message_chunk_manager';\r\n\r\nvar decodeString = ec.decodeString;\r\n\r\nimport {packet_analyzer} from '../packet-analyzer';\r\n\r\n\r\nimport {doDebug,debugLog,hexDump} from '../common/debug';\r\nimport { DataStream } from '../basic-types/DataStream';\r\n\r\nimport * as factory from '../factory';\r\nimport { ExtensionObject } from '../basic-types';\r\n\r\nvar decodeStatusCode = ec.decodeStatusCode;\r\n\r\n\r\nexport class MessageBuilder extends MessageBuilderBase {\r\n    protected _tokenStack: any;\r\n    protected _privateKey: any;\r\n    protected _cryptoFactory?: ICryptoFactory;\r\n    protected _securityHeader: any;\r\n    protected _previous_sequenceNumber: number;\r\n    protected _objectFactory: any;\r\n    public securityMode: any;\r\n    protected _securityPolicy: SecurityPolicy;\r\n    /**\r\n * @class MessageBuilder\r\n * @extends MessageBuilderBase\r\n * @constructor\r\n *\r\n * @param options\r\n * @param options.securityMode {MessageSecurityMode} the security Mode\r\n * @param [options.objectFactory=factories] a object that provides a constructObject(id) method\r\n */\r\n    constructor(options? : any) {\r\n        options = options || {};\r\n        super(options);\r\n\r\n        this._securityPolicy = SecurityPolicy.Invalid; // not known yet\r\n        this.securityMode = options.securityMode || MessageSecurityMode.Invalid; // not known yet\r\n\r\n        this._objectFactory = options.objectFactory || factory;\r\n\r\n        assert('function' === typeof this._objectFactory.constructObject, \" the objectFactory must provide a constructObject method\");\r\n\r\n        this._previous_sequenceNumber = -1; // means unknown\r\n        assert(Number.isFinite(this._previous_sequenceNumber));\r\n    }\r\n\r\n    set privateKey(key : string) {\r\n        this._privateKey = key;\r\n    }\r\n\r\n    get cryptoFactory() {\r\n        return this._cryptoFactory;\r\n    }\r\n\r\n\r\npublic setSecurity(securityMode : MessageSecurityMode, securityPolicy : SecurityPolicy) {\r\n    assert(this.securityMode === MessageSecurityMode.Invalid, \"security already set\");\r\n    this._securityPolicy = securityPolicy;\r\n    this.securityMode = securityMode;\r\n    assert(this._securityPolicy !== undefined, \"invalid security policy \" + securityPolicy);\r\n    assert(this.securityMode !== undefined, \"invalid security mode \" + securityMode);\r\n    assert(this._securityPolicy !== SecurityPolicy.Invalid);\r\n    assert(this.securityMode !== MessageSecurityMode.Invalid);\r\n};\r\n\r\n\r\nprotected _validateSequenceNumber(sequenceNumber : number) {\r\n\r\n    // checking that sequenceNumber is increasing\r\n    assert(Number.isFinite(this._previous_sequenceNumber));\r\n    assert(Number.isFinite(sequenceNumber) && sequenceNumber >= 0);\r\n\r\n    var expectedSequenceNumber;\r\n    if (this._previous_sequenceNumber !== -1) {\r\n\r\n        expectedSequenceNumber = this._previous_sequenceNumber + 1;\r\n\r\n        if (expectedSequenceNumber !== sequenceNumber) {\r\n            var errMessage = \"Invalid Sequence Number found ( expected \" + expectedSequenceNumber + \", got \" + sequenceNumber + \")\";\r\n            debugLog(errMessage);\r\n            /**\r\n             * notify the observers that a message with an invalid sequence number has been received.\r\n             * @event invalid_sequence_number\r\n             * @param {Number} expected sequence Number\r\n             * @param {Number} actual sequence Number\r\n             */\r\n            this.emit(\"invalid_sequence_number\", expectedSequenceNumber, sequenceNumber);\r\n        }\r\n        // todo : handle the case where sequenceNumber wraps back to < 1024\r\n    }\r\n    /* istanbul ignore next */\r\n    if (doDebug) {\r\n        debugLog(\" Sequence Number = \" + sequenceNumber);\r\n    }\r\n    this._previous_sequenceNumber = sequenceNumber;\r\n};\r\n\r\n/* **nomsgcrypt**\r\nprotected _decrypt_OPN(binaryStream : DataStream) {\r\n\r\n    assert(this._securityPolicy !== SecurityPolicy.None);\r\n    assert(this._securityPolicy !== SecurityPolicy.Invalid);\r\n    assert(this.securityMode !== MessageSecurityMode.None);\r\n    //xx assert(this.securityMode !== MessageSecurityMode.INVALID);\r\n\r\n    if (doDebug) {\r\n        debugLog(\"securityHeader\", JSON.stringify(this._securityHeader, null, \" \"));\r\n    }\r\n\r\n    // OpcUA part 2 V 1.02 page 15\r\n    // 4.11 OPC UA Security Related Services\r\n    // [...]\r\n    // The OPC UA Client sends its Public Key in a Digital Certificate and secret information with the\r\n    // OpenSecureChannel service Message to the Server. This Message is secured by applying\r\n    // Asymmetric Encryption with the Server's Public Key and by generating Asymmetric Signatures with\r\n    // the Client's Private Key. However the Digital Certificate is sent unencrypted so that the receiver can\r\n    // use it to verify the Asymmetric Signature.\r\n    // [...]\r\n    //\r\n\r\n    if (doDebug) {\r\n        debugLog(\"EN------------------------------\");\r\n        debugLog(hexDump(binaryStream.buffer));\r\n        debugLog(\"---------------------- SENDER CERTIFICATE\");\r\n        debugLog(hexDump(this._securityHeader.senderCertificate));\r\n    }\r\n\r\n\r\n    if (!this._cryptoFactory) {\r\n        this._report_error(\" Security Policy \" + this._securityPolicy + \" is not implemented yet\");\r\n        return false;\r\n    }\r\n\r\n    // The message has been signed  with sender private key and has been encrypted with receiver public key.\r\n    // We shall decrypt it with the receiver private key.\r\n    var buf = binaryStream.buffer.slice(binaryStream.pos);\r\n\r\n    if (this._securityHeader.receiverCertificateThumbprint) { // this mean that the message has been encrypted ....\r\n\r\n        assert(typeof this._privateKey === \"string\", \"expecting valid key\");\r\n\r\n        var decryptedBuffer = this._cryptoFactory.asymmetricDecrypt(buf, this._privateKey);\r\n\r\n        // replace decrypted buffer in initial buffer\r\n        decryptedBuffer.copy(binaryStream.buffer, binaryStream.pos);\r\n\r\n        // adjust length\r\n        binaryStream.buffer = binaryStream.buffer.slice(0, binaryStream.pos + decryptedBuffer.length);\r\n\r\n        if (doDebug) {\r\n            debugLog(\"DE-----------------------------\");\r\n            debugLog(hexDump(binaryStream.buffer));\r\n            debugLog(\"-------------------------------\");\r\n            debugLog(\"Certificate :\", hexDump(this._securityHeader.senderCertificate));\r\n        }\r\n    }\r\n\r\n    var cert = crypto_utils.exploreCertificate(this._securityHeader.senderCertificate);\r\n    // then verify the signature\r\n    var signatureLength = cert.publicKeyLength; // 1024 bits = 128Bytes or 2048=256Bytes\r\n    assert(signatureLength === 128 || signatureLength === 256);\r\n\r\n    var chunk = binaryStream.buffer;\r\n\r\n    var signatureIsOK = this._cryptoFactory.asymmetricVerifyChunk(chunk, this._securityHeader.senderCertificate);\r\n\r\n    if (!signatureIsOK) {\r\n        console.log(hexDump(binaryStream.buffer));\r\n        this._report_error(\"SIGN and ENCRYPT asymmetricVerify : Invalid packet signature\");\r\n        return false;\r\n    }\r\n\r\n    // remove signature\r\n    binaryStream.buffer = crypto_utils.reduceLength(binaryStream.buffer, signatureLength);\r\n\r\n    // remove padding\r\n    if (this._securityHeader.receiverCertificateThumbprint) {\r\n        binaryStream.buffer = crypto_utils.removePadding(binaryStream.buffer);\r\n    }\r\n\r\n    return true; // success\r\n};\r\n*/\r\n\r\npublic pushNewToken(securityToken, derivedKeys) {\r\n\r\n    assert(securityToken.hasOwnProperty(\"tokenId\"));\r\n    //xx assert(derivedKeys ); in fact, can be null\r\n\r\n    this._tokenStack = this._tokenStack || [];\r\n    assert(this._tokenStack.length === 0 || this._tokenStack[0].tokenId !== securityToken.tokenId);\r\n    this._tokenStack.push({securityToken: securityToken, derivedKeys: derivedKeys});\r\n\r\n};\r\n\r\nprotected _select_matching_token(tokenId) {\r\n\r\n    var got_new_token = false;\r\n    this._tokenStack = this._tokenStack || [];\r\n    while (this._tokenStack.length) {\r\n        if (this._tokenStack.length === 0) {\r\n            return null; // no token\r\n        }\r\n        if (this._tokenStack[0].securityToken.tokenId === tokenId) {\r\n            if (got_new_token) {\r\n                this.emit(\"new_token\", tokenId);\r\n            }\r\n            return this._tokenStack[0];\r\n        }\r\n        // remove first\r\n        this._tokenStack = this._tokenStack.slice(1);\r\n        got_new_token = true;\r\n    }\r\n\r\n};\r\n\r\n/* //**nomsgcrypt**\r\nprotected _decrypt_MSG(binaryStream) {\r\n\r\n    assert(this._securityHeader instanceof SymmetricAlgorithmSecurityHeader);\r\n    assert(this.securityMode !== MessageSecurityMode.None);\r\n    assert(this.securityMode !== MessageSecurityMode.Invalid);\r\n    assert(this._securityPolicy !== SecurityPolicy.None);\r\n    assert(this._securityPolicy !== SecurityPolicy.Invalid);\r\n\r\n    // Check  security token\r\n    // securityToken may have been renewed\r\n    var securityTokenData = this._select_matching_token(this._securityHeader.tokenId);\r\n    if (!securityTokenData) {\r\n        this._report_error(\"Security token data for token \" + this._securityHeader.tokenId + \" doesn't exist\");\r\n        return false;\r\n    }\r\n\r\n    assert(securityTokenData.hasOwnProperty(\"derivedKeys\"));\r\n\r\n    // SecurityToken may have expired, in this case the MessageBuilder shall reject the message\r\n    if (securityTokenData.securityToken.expired) {\r\n        this._report_error(\"Security token has expired : tokenId \" + securityTokenData.securityToken.tokenId);\r\n        return false;\r\n    }\r\n\r\n    // We shall decrypt it with the receiver private key.\r\n    var buf = binaryStream._buffer.slice(binaryStream.length);\r\n\r\n    var derivedKeys = securityTokenData.derivedKeys;\r\n\r\n    assert(derivedKeys !== null);\r\n    assert(derivedKeys.signatureLength, \" must provide a signature length\");\r\n\r\n    if (this.securityMode === MessageSecurityMode.SignAndEncrypt) {\r\n\r\n        var decryptedBuffer = crypto_utils.decryptBufferWithDerivedKeys(buf, derivedKeys);\r\n\r\n        // replace decrypted buffer in initial buffer\r\n        decryptedBuffer.copy(binaryStream._buffer, binaryStream.length);\r\n\r\n        // adjust length\r\n        binaryStream._buffer = binaryStream._buffer.slice(0, binaryStream.length + decryptedBuffer.length);\r\n\r\n        if (doDebug) {\r\n            debugLog(\"DE-----------------------------\");\r\n            debugLog(hexDump(binaryStream._buffer));\r\n            debugLog(\"-------------------------------\");\r\n        }\r\n    }\r\n\r\n    // now check signature ....\r\n    var chunk = binaryStream._buffer;\r\n\r\n    var signatureIsOK = crypto_utils.verifyChunkSignatureWithDerivedKeys(chunk, derivedKeys);\r\n    if (!signatureIsOK) {\r\n        this._report_error(\"SIGN and ENCRYPT : Invalid packet signature\");\r\n        return false;\r\n    }\r\n\r\n    // remove signature\r\n    binaryStream._buffer = crypto_utils.reduceLength(binaryStream._buffer, derivedKeys.signatureLength);\r\n\r\n    if (this.securityMode === MessageSecurityMode.SignAndEncrypt) {\r\n        // remove padding\r\n        binaryStream._buffer = crypto_utils.removePadding(binaryStream._buffer);\r\n    }\r\n\r\n    return true;\r\n};\r\n\r\nprotected _decrypt(binaryStream : DataStream) {\r\n\r\n    if (this.securityPolicy === SecurityPolicy.Invalid) {\r\n        // this._report_error(\"SecurityPolicy\");\r\n        // return false;\r\n        return true;\r\n    }\r\n\r\n    var msgType = this.messageHeader.msgType;\r\n\r\n    // check if security is active or not\r\n    if (this.securityPolicy === SecurityPolicy.None) {\r\n        this.securityMode = MessageSecurityMode.None;\r\n        assert(this.securityMode === MessageSecurityMode.None, \"expecting securityMode = None when securityPolicy is None\");\r\n        return true; // nothing to do\r\n    }\r\n    assert(this.securityMode !== MessageSecurityMode.None);\r\n\r\n\r\n    if (msgType === \"OPN\") {\r\n        return this._decrypt_OPN(binaryStream);\r\n    } else {\r\n        return this._decrypt_MSG(binaryStream);\r\n    }\r\n\r\n};\r\n*/\r\n\r\n\r\n/**\r\n * @method _read_headers\r\n * @param binaryStream\r\n * @return {Boolean}\r\n * @private\r\n */\r\nprotected _read_headers(binaryStream : DataStream) {\r\n\r\n    super._read_headers(binaryStream);\r\n    assert(binaryStream.length === 12);\r\n\r\n    var msgType = this.messageHeader.msgType;\r\n\r\n    if (msgType === \"HEL\" || msgType === \"ACK\") {\r\n\r\n        this._securityPolicy = SecurityPolicy.None;\r\n    } else if (msgType === \"ERR\") {\r\n\r\n        // extract Error StatusCode and additional message\r\n        //binaryStream.length = 8;\r\n        var errorCode = decodeStatusCode(binaryStream);\r\n        var message = decodeString(binaryStream);\r\n\r\n        console.log(\" ERROR RECEIVED FROM SENDER\", errorCode.toString().cyan, message);\r\n        console.log(hexDump(binaryStream.buffer));\r\n        return true;\r\n\r\n    } else {\r\n\r\n        this._securityHeader = chooseSecurityHeader(msgType);\r\n        this._securityHeader.decode(binaryStream);\r\n\r\n        if (msgType === \"OPN\") {\r\n            this._securityPolicy = securityPolicy_m.fromURI(this._securityHeader.securityPolicyUri);\r\n            this._cryptoFactory = securityPolicy_m.getCryptoFactory(this._securityPolicy);\r\n        }\r\n\r\n        /* **nomsgcrypt**\r\n        if (!this._decrypt(binaryStream)) {\r\n            return false;\r\n        }\r\n        */\r\n\r\n        this.sequenceHeader = new SequenceHeader();\r\n        this.sequenceHeader.decode(binaryStream);\r\n\r\n        /* istanbul ignore next */\r\n        if (doDebug) {\r\n            debugLog(\" Sequence Header\", this.sequenceHeader);\r\n        }\r\n\r\n        this._validateSequenceNumber(this.sequenceHeader.sequenceNumber);\r\n    }\r\n    return true;\r\n};\r\n\r\n\r\nprotected _safe_decode_message_body(full_message_body, objMessage  /*ExtensionObject*/, binaryStream) {\r\n    try {\r\n        // de-serialize the object from the binary stream\r\n        var options = this._objectFactory;\r\n        objMessage.decode(binaryStream,options);\r\n    }\r\n    catch (err) {\r\n        console.log(err);\r\n        console.log(err.stack);\r\n        console.log(hexDump(full_message_body));\r\n        packet_analyzer(full_message_body);\r\n\r\n        console.log(\" ---------------- block\");\r\n        this.message_chunks.forEach(function (messageChunk) {\r\n            console.log(hexDump(messageChunk));\r\n        });\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\n\r\nprotected _decode_message_body(full_message_body) {\r\n\r\n    var binaryStream = new DataStream(full_message_body);\r\n    var msgType = this.messageHeader.msgType;\r\n\r\n    if (msgType === \"ERR\") {\r\n        // invalid message type\r\n        this._report_error(\"ERROR RECEIVED\");\r\n        return false;\r\n    }\r\n    if (msgType === \"HEL\" || msgType === \"ACK\") {\r\n        // invalid message type\r\n        this._report_error(\"Invalid message type ( HEL/ACK )\");\r\n        return false;\r\n    }\r\n\r\n    // read expandedNodeId:\r\n    var id = ec.decodeExpandedNodeId(binaryStream);\r\n\r\n    // construct the object\r\n    var objMessage = this._objectFactory.constructObject(id);\r\n\r\n    if (!objMessage) {\r\n        this._report_error(\"cannot construct object with nodeID \" + id);\r\n        return false;\r\n\r\n    } else {\r\n\r\n        debugLog(\"message size =\",this.total_message_size,\" body size =\",this.total_body_size);\r\n\r\n        if (this._safe_decode_message_body(full_message_body, objMessage, binaryStream)) {\r\n            try {\r\n                /**\r\n                 * notify the observers that a full message has been received\r\n                 * @event message\r\n                 * @param {Object} objMessage the decoded message object\r\n                 * @param {String} msgType the message type ( \"HEL\",\"ACK\",\"OPN\",\"CLO\" or \"MSG\" )\r\n                 * @param {Number} the request Id\r\n                 */\r\n                this.emit(\"message\", objMessage, msgType, this.sequenceHeader.requestId, this.secureChannelId);\r\n            }\r\n            catch (err) {\r\n                // this code catches a uncaught exception somewhere in one of the event handler\r\n                // this indicates a bug in the code that uses this class\r\n                // please check the stack trace to find the problem\r\n                console.log(\"MessageBuilder : ERROR DETECTED IN event handler\");\r\n                console.log(err);\r\n                console.log(err.stack);\r\n            }\r\n        } else {\r\n            var message = \"cannot decode message  for valid object of type \" + id.toString() + \" \" + objMessage.constructor.name;\r\n            console.log(message);\r\n            this._report_error(message);\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\n}\r\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","module.exports = function() {\n\tthrow new Error(\"define cannot be used indirect\");\n};\n","\n\nimport * as ec from '../basic-types';\nimport {LocalizedText} from './LocalizedText';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IEUInformation {\n\t\tnamespaceUri? : string;\n\t\tunitId? : ec.Int32;\n\t\tdisplayName? : LocalizedText;\n\t\tdescription? : LocalizedText;\n}\n\n/**\n\n*/\n\nexport class EUInformation {\n \t\tnamespaceUri : string;\n\t\tunitId : ec.Int32;\n\t\tdisplayName : LocalizedText;\n\t\tdescription : LocalizedText;\n\n\tconstructor(\toptions? : IEUInformation) { \n\t\toptions = options || {};\n\t\tthis.namespaceUri= (options.namespaceUri) ? options.namespaceUri:null;\n\t\tthis.unitId= (options.unitId) ? options.unitId:null;\n\t\tthis.displayName= (options.displayName) ? options.displayName:new LocalizedText();\n\t\tthis.description= (options.description) ? options.description:new LocalizedText();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.namespaceUri,out);\n\t\tec.encodeInt32(this.unitId,out);\n\t\tthis.displayName.encode(out);\n\t\tthis.description.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.namespaceUri = ec.decodeString(inp);\n\t\tthis.unitId = ec.decodeInt32(inp);\n\t\tthis.displayName.decode(inp);\n\t\tthis.description.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : EUInformation) : EUInformation { \n\t\tif(!target) {\n\t\t\ttarget = new EUInformation();\n\t\t}\n\t\ttarget.namespaceUri = this.namespaceUri;\n\t\ttarget.unitId = this.unitId;\n\t\tif (this.displayName) { target.displayName = this.displayName.clone();}\n\t\tif (this.description) { target.description = this.description.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeEUInformation(\tinp : DataStream) : EUInformation { \n\t\tlet obj = new EUInformation();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"EUInformation\",EUInformation, makeExpandedNodeId(889,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IRange {\n\t\tlow? : ec.Double;\n\t\thigh? : ec.Double;\n}\n\n/**\n\n*/\n\nexport class Range {\n \t\tlow : ec.Double;\n\t\thigh : ec.Double;\n\n\tconstructor(\toptions? : IRange) { \n\t\toptions = options || {};\n\t\tthis.low= (options.low) ? options.low:null;\n\t\tthis.high= (options.high) ? options.high:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeDouble(this.low,out);\n\t\tec.encodeDouble(this.high,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.low = ec.decodeDouble(inp);\n\t\tthis.high = ec.decodeDouble(inp);\n\n\t}\n\n\n\tclone(\ttarget? : Range) : Range { \n\t\tif(!target) {\n\t\t\ttarget = new Range();\n\t\t}\n\t\ttarget.low = this.low;\n\t\ttarget.high = this.high;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRange(\tinp : DataStream) : Range { \n\t\tlet obj = new Range();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"Range\",Range, makeExpandedNodeId(886,0));","\n\nimport {DataStream} from '../basic-types/DataStream';\n\nexport enum AxisScaleEnumeration {\n \t\tLinear = 0,\n\t\tLog = 1,\n\t\tLn = 2,\n\n}\n\nexport function encodeAxisScaleEnumeration(\tdata : AxisScaleEnumeration, \tout : DataStream) { \n\tout.setUint32(data);\n\t}\n\n\nexport function decodeAxisScaleEnumeration(\tinp : DataStream) { \n\treturn inp.getUint32();\n\t}\n\n\n\nimport {registerEnumeration} from \"../factory/factories_enumerations\";\nregisterEnumeration(\"AxisScaleEnumeration\",AxisScaleEnumeration,encodeAxisScaleEnumeration ,decodeAxisScaleEnumeration ,null);","\n\nimport {EUInformation} from './EUInformation';\nimport {Range} from './Range';\nimport {LocalizedText} from './LocalizedText';\nimport {AxisScaleEnumeration, encodeAxisScaleEnumeration, decodeAxisScaleEnumeration} from './AxisScaleEnumeration';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IAxisInformation {\n\t\tengineeringUnits? : EUInformation;\n\t\teURange? : Range;\n\t\ttitle? : LocalizedText;\n\t\taxisScaleType? : AxisScaleEnumeration;\n\t\taxisSteps? : ec.Double[];\n}\n\n/**\n\n*/\n\nexport class AxisInformation {\n \t\tengineeringUnits : EUInformation;\n\t\teURange : Range;\n\t\ttitle : LocalizedText;\n\t\taxisScaleType : AxisScaleEnumeration;\n\t\taxisSteps : ec.Double[];\n\n\tconstructor(\toptions? : IAxisInformation) { \n\t\toptions = options || {};\n\t\tthis.engineeringUnits= (options.engineeringUnits) ? options.engineeringUnits:new EUInformation();\n\t\tthis.eURange= (options.eURange) ? options.eURange:new Range();\n\t\tthis.title= (options.title) ? options.title:new LocalizedText();\n\t\tthis.axisScaleType= (options.axisScaleType) ? options.axisScaleType:null;\n\t\tthis.axisSteps= (options.axisSteps) ? options.axisSteps:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.engineeringUnits.encode(out);\n\t\tthis.eURange.encode(out);\n\t\tthis.title.encode(out);\n\t\tencodeAxisScaleEnumeration(this.axisScaleType,out);\n\t\tec.encodeArray(this.axisSteps,out,ec.encodeDouble);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.engineeringUnits.decode(inp);\n\t\tthis.eURange.decode(inp);\n\t\tthis.title.decode(inp);\n\t\tthis.axisScaleType = decodeAxisScaleEnumeration(inp);\n\t\tthis.axisSteps = ec.decodeArray(inp,ec.decodeDouble);\n\n\t}\n\n\n\tclone(\ttarget? : AxisInformation) : AxisInformation { \n\t\tif(!target) {\n\t\t\ttarget = new AxisInformation();\n\t\t}\n\t\tif (this.engineeringUnits) { target.engineeringUnits = this.engineeringUnits.clone();}\n\t\tif (this.eURange) { target.eURange = this.eURange.clone();}\n\t\tif (this.title) { target.title = this.title.clone();}\n\t\ttarget.axisScaleType = this.axisScaleType;\n\t\ttarget.axisSteps = ec.cloneArray(this.axisSteps);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeAxisInformation(\tinp : DataStream) : AxisInformation { \n\t\tlet obj = new AxisInformation();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"AxisInformation\",AxisInformation, makeExpandedNodeId(12089,0));","// part 8\r\n\r\nexport {EUInformation} from '../generated/EUInformation';\r\nexport {AxisInformation} from '../generated/AxisInformation';\r\nexport {AxisScaleEnumeration} from '../generated/AxisScaleEnumeration';\r\nexport {Range} from '../generated/Range';\r\n//TODO: export standardUnits?\r\n\r\n// http://www.unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf\r\n\r\n//To facilitate interoperability, OPC UA specifies how to apply the widely accepted \"Codes for Units of Measurement\r\n// (Recommendation N°. 20)” published by the \"United Nations Centre for Trade\r\n// Facilitation and Electronic Business” (see UN/CEFACT). It uses and is based on the International System of Units\r\n// (SI Units) but in addition provides a fixed code that can be used for automated evaluation. This recommendation\r\n// has been accepted by many industries on a global basis.\r\n//\r\n// Following is a small excerpt of the published Annex with Code Lists:\r\n// Excerpt from Recommendation N°. 20, Annex 1\r\n// Common Code  Name                     Conversion Factor Symbol\r\n// C81          radian                                           rad\r\n// C25          milliradian                1E-3 rad              mrad\r\n// MMT          millimetre                 1E−3 m                mm\r\n// HMT          hectometre                 1E2  m                 hm\r\n// KTM          kilometre                  1E3  m                 km\r\n// KMQ          kilogram per cubic metre   kg/m3                  kg/m3\r\n// FAH          degree Fahrenheit          5/9 x K                °F\r\n// J23          degree Fahrenheit per hour 1,543 210 x 10− 4 K/s °F/h\r\n// SEC          second [unit of time]\r\n// C26          millisecond                1E-3                  S\r\n// B98          microsecond                1E-6                  S\r\n// Specific columns of this table shall be used to create the EUInformation structure as defined by the following rules:\r\n//\r\n// The Common Code is represented as an alphanumeric variable length of 3 characters. It shall be used for the\r\n// EUInformation.unitId. The following pseudo code specifies the algorithm\r\n// to convert the Common Code into an Int32 as needed for EUInformation.unitId:\r\nexport function commonCodeToUInt (code : string) {\r\n    // CEL =>\r\n    var unitId = 0, c;\r\n    var m = Math.min(4, code.length);\r\n    for (var i = 0; i < m; i++) {\r\n        c = code.charCodeAt(i);\r\n        /* istanbul ignore if*/\r\n        if (c === 0) {\r\n            return unitId;\r\n        }\r\n        unitId *= 256;\r\n        unitId |= c;\r\n    }\r\n    return unitId;\r\n};\r\n\r\nexport function makeEUInformation(symbol: string , shortName: string, longName: string) {\r\n\r\n    return new exports.EUInformation({\r\n        unitId: exports.commonCodeToUInt(symbol),\r\n        displayName: {text: shortName},\r\n        description: {text: longName}\r\n    });\r\n};\r\n\r\n\r\n// http://www.unece.org/fileadmin/DAM/cefact/recommendations/rec20/rec20_rev3_Annex2e.pdf\r\nexport var standardUnits = {\r\n    ampere:               makeEUInformation(\"AMP\", \"A\",     \"ampere\"),\r\n    bar:                  makeEUInformation(\"BAR\", \"bar\",   \"bar [unit of pressure] = 1E5 Pa\"),\r\n    becquerel:            makeEUInformation(\"BQL\", \"Bq\",    \"becquerel = 27,027E-12 Ci\"),\r\n    kilobecquerel:        makeEUInformation(\"2Q\", \"kBq\",    \"kilo becquerel = 1E3 Bq\"),\r\n    gigabecquerel:        makeEUInformation(\"GBQ\", \"GBq\",   \"Giga becquerel = 1E9 Bq\"),\r\n    curie:                makeEUInformation(\"CUR\", \"Ci\",    \"Curie = 3,7E-10 Bq\"),\r\n    curie_per_kilogram:   makeEUInformation(\"A42\", \"Ci/kg\", \"Curie per kilogram = 3,7E-10 Bq/kg\"),\r\n    cubic_centimetre:     makeEUInformation(\"CMQ\", \"cm^3\",  \"Cubic centimetre = 1E-6 m^3\"),\r\n    cubic_centimetre_per_second: makeEUInformation(\"2J\",    \"cm^3/s\", \"Cubic centimetre per second\"),\r\n    cubic_metre:          makeEUInformation(\"MTQ\", \"m^3\",   \"Cubic metre\"),\r\n    cubic_metre_per_hour: makeEUInformation(\"MQH\", \"m^3\",   \"Cubic metre per hours = 2,777 78 x 10⁻⁴ m³/s\"),\r\n    degree:               makeEUInformation(\"DD\", \"°\",      \"degree [unit of angle]\"),\r\n    degree_celsius:       makeEUInformation(\"CEL\", \"°C\",    \"degree Celsius\"),\r\n    degree_fahrenheit:    makeEUInformation(\"FAH\", \"°F\",    \"degree Fahrenheit 9/5(°C) + 32°\"),\r\n    kelvin:               makeEUInformation(\"KEL\", \"K\",     \"degree Kelvin\"),\r\n    dots_per_inch:        makeEUInformation(\"E39\", \"dpi\",   \"dot per inch\"),\r\n    electron_volt:        makeEUInformation(\"A53\", \"eV\",    \"electron volt\"),\r\n    kilo_electron_volt:   makeEUInformation(\"B29\", \"keV\",   \"kilo electron volt\"),\r\n    mega_electron_volt:   makeEUInformation(\"B71\", \"MeV\",   \"mega electron volt\"),\r\n    farad:                makeEUInformation(\"FAR\", \"F\",     \"Farad = kg⁻¹ x m⁻² x s⁴ x     A²\"),\r\n    gram:                 makeEUInformation(\"GRM\", \"g\",     \"gramme 1E-3 kg\"),\r\n    joule:                makeEUInformation(\"JOU\", \"J\",     \"Joule\"),\r\n    kilohertz:            makeEUInformation(\"KHZ\", \"kHz\",   \"kilo hertz = 1E3 Hertz\"),\r\n    metre:                makeEUInformation(\"MTR\", \"m\",     \"metre\"),\r\n    centimetre:           makeEUInformation(\"CMT\", \"cm\",    \"centimetre = 1E-2 m\"),\r\n    millimetre:           makeEUInformation(\"MMT\", \"mm\",    \"millimetre = 1E-3 metre\"),\r\n    megawatt:             makeEUInformation(\"MAW\", \"MW\",    \"Mega Watt\"),\r\n    newton:               makeEUInformation(\"NEW\", \"N\",     \"Newton (kg x m)/s² \"),\r\n    //xx distance:             makeEUInformation(\"CEL\",  \"°C\", \"degree Celsius\"),\r\n    percent:              makeEUInformation(\"P1\", \"%\",      \"Percent, a unit of proportion equal to 0.01. \"),\r\n    pixel:                makeEUInformation(\"E37\", \"\",      \"pixel:  unit of count defining the number of pixels (pixel: picture element)\"),\r\n    volt:                 makeEUInformation(\"VLT\", \"V\",     \"Volt\"),\r\n    watt:                 makeEUInformation(\"WTT\", \"W\",     \"Watt\"),\r\n    second:               makeEUInformation(\"SEC\", \"s\",     \"second\"),\r\n    millisecond:          makeEUInformation(\"C26\", \"ms\",    \"millisecond =1E-3 second\"),\r\n    microsecond:          makeEUInformation(\"B98\", \"μs\",    \"microsecond =1E-6 second\")\r\n    // to be continued\r\n};\r\n","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IModelChangeStructureDataType {\n\t\taffected? : ec.NodeId;\n\t\taffectedType? : ec.NodeId;\n\t\tverb? : ec.Byte;\n}\n\n/**\n\n*/\n\nexport class ModelChangeStructureDataType {\n \t\taffected : ec.NodeId;\n\t\taffectedType : ec.NodeId;\n\t\tverb : ec.Byte;\n\n\tconstructor(\toptions? : IModelChangeStructureDataType) { \n\t\toptions = options || {};\n\t\tthis.affected= (options.affected) ? options.affected:null;\n\t\tthis.affectedType= (options.affectedType) ? options.affectedType:null;\n\t\tthis.verb= (options.verb) ? options.verb:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.affected,out);\n\t\tec.encodeNodeId(this.affectedType,out);\n\t\tec.encodeByte(this.verb,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.affected = ec.decodeNodeId(inp);\n\t\tthis.affectedType = ec.decodeNodeId(inp);\n\t\tthis.verb = ec.decodeByte(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ModelChangeStructureDataType) : ModelChangeStructureDataType { \n\t\tif(!target) {\n\t\t\ttarget = new ModelChangeStructureDataType();\n\t\t}\n\t\ttarget.affected = this.affected;\n\t\ttarget.affectedType = this.affectedType;\n\t\ttarget.verb = this.verb;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeModelChangeStructureDataType(\tinp : DataStream) : ModelChangeStructureDataType { \n\t\tlet obj = new ModelChangeStructureDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ModelChangeStructureDataType\",ModelChangeStructureDataType, makeExpandedNodeId(879,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISubscriptionDiagnosticsDataType {\n\t\tsessionId? : ec.NodeId;\n\t\tsubscriptionId? : ec.UInt32;\n\t\tpriority? : ec.Byte;\n\t\tpublishingInterval? : ec.Double;\n\t\tmaxKeepAliveCount? : ec.UInt32;\n\t\tmaxLifetimeCount? : ec.UInt32;\n\t\tmaxNotificationsPerPublish? : ec.UInt32;\n\t\tpublishingEnabled? : boolean;\n\t\tmodifyCount? : ec.UInt32;\n\t\tenableCount? : ec.UInt32;\n\t\tdisableCount? : ec.UInt32;\n\t\trepublishRequestCount? : ec.UInt32;\n\t\trepublishMessageRequestCount? : ec.UInt32;\n\t\trepublishMessageCount? : ec.UInt32;\n\t\ttransferRequestCount? : ec.UInt32;\n\t\ttransferredToAltClientCount? : ec.UInt32;\n\t\ttransferredToSameClientCount? : ec.UInt32;\n\t\tpublishRequestCount? : ec.UInt32;\n\t\tdataChangeNotificationsCount? : ec.UInt32;\n\t\teventNotificationsCount? : ec.UInt32;\n\t\tnotificationsCount? : ec.UInt32;\n\t\tlatePublishRequestCount? : ec.UInt32;\n\t\tcurrentKeepAliveCount? : ec.UInt32;\n\t\tcurrentLifetimeCount? : ec.UInt32;\n\t\tunacknowledgedMessageCount? : ec.UInt32;\n\t\tdiscardedMessageCount? : ec.UInt32;\n\t\tmonitoredItemCount? : ec.UInt32;\n\t\tdisabledMonitoredItemCount? : ec.UInt32;\n\t\tmonitoringQueueOverflowCount? : ec.UInt32;\n\t\tnextSequenceNumber? : ec.UInt32;\n\t\teventQueueOverFlowCount? : ec.UInt32;\n}\n\n/**\n\n*/\n\nexport class SubscriptionDiagnosticsDataType {\n \t\tsessionId : ec.NodeId;\n\t\tsubscriptionId : ec.UInt32;\n\t\tpriority : ec.Byte;\n\t\tpublishingInterval : ec.Double;\n\t\tmaxKeepAliveCount : ec.UInt32;\n\t\tmaxLifetimeCount : ec.UInt32;\n\t\tmaxNotificationsPerPublish : ec.UInt32;\n\t\tpublishingEnabled : boolean;\n\t\tmodifyCount : ec.UInt32;\n\t\tenableCount : ec.UInt32;\n\t\tdisableCount : ec.UInt32;\n\t\trepublishRequestCount : ec.UInt32;\n\t\trepublishMessageRequestCount : ec.UInt32;\n\t\trepublishMessageCount : ec.UInt32;\n\t\ttransferRequestCount : ec.UInt32;\n\t\ttransferredToAltClientCount : ec.UInt32;\n\t\ttransferredToSameClientCount : ec.UInt32;\n\t\tpublishRequestCount : ec.UInt32;\n\t\tdataChangeNotificationsCount : ec.UInt32;\n\t\teventNotificationsCount : ec.UInt32;\n\t\tnotificationsCount : ec.UInt32;\n\t\tlatePublishRequestCount : ec.UInt32;\n\t\tcurrentKeepAliveCount : ec.UInt32;\n\t\tcurrentLifetimeCount : ec.UInt32;\n\t\tunacknowledgedMessageCount : ec.UInt32;\n\t\tdiscardedMessageCount : ec.UInt32;\n\t\tmonitoredItemCount : ec.UInt32;\n\t\tdisabledMonitoredItemCount : ec.UInt32;\n\t\tmonitoringQueueOverflowCount : ec.UInt32;\n\t\tnextSequenceNumber : ec.UInt32;\n\t\teventQueueOverFlowCount : ec.UInt32;\n\n\tconstructor(\toptions? : ISubscriptionDiagnosticsDataType) { \n\t\toptions = options || {};\n\t\tthis.sessionId= (options.sessionId) ? options.sessionId:null;\n\t\tthis.subscriptionId= (options.subscriptionId) ? options.subscriptionId:null;\n\t\tthis.priority= (options.priority) ? options.priority:null;\n\t\tthis.publishingInterval= (options.publishingInterval) ? options.publishingInterval:null;\n\t\tthis.maxKeepAliveCount= (options.maxKeepAliveCount) ? options.maxKeepAliveCount:null;\n\t\tthis.maxLifetimeCount= (options.maxLifetimeCount) ? options.maxLifetimeCount:null;\n\t\tthis.maxNotificationsPerPublish= (options.maxNotificationsPerPublish) ? options.maxNotificationsPerPublish:null;\n\t\tthis.publishingEnabled= (options.publishingEnabled) ? options.publishingEnabled:null;\n\t\tthis.modifyCount= (options.modifyCount) ? options.modifyCount:null;\n\t\tthis.enableCount= (options.enableCount) ? options.enableCount:null;\n\t\tthis.disableCount= (options.disableCount) ? options.disableCount:null;\n\t\tthis.republishRequestCount= (options.republishRequestCount) ? options.republishRequestCount:null;\n\t\tthis.republishMessageRequestCount= (options.republishMessageRequestCount) ? options.republishMessageRequestCount:null;\n\t\tthis.republishMessageCount= (options.republishMessageCount) ? options.republishMessageCount:null;\n\t\tthis.transferRequestCount= (options.transferRequestCount) ? options.transferRequestCount:null;\n\t\tthis.transferredToAltClientCount= (options.transferredToAltClientCount) ? options.transferredToAltClientCount:null;\n\t\tthis.transferredToSameClientCount= (options.transferredToSameClientCount) ? options.transferredToSameClientCount:null;\n\t\tthis.publishRequestCount= (options.publishRequestCount) ? options.publishRequestCount:null;\n\t\tthis.dataChangeNotificationsCount= (options.dataChangeNotificationsCount) ? options.dataChangeNotificationsCount:null;\n\t\tthis.eventNotificationsCount= (options.eventNotificationsCount) ? options.eventNotificationsCount:null;\n\t\tthis.notificationsCount= (options.notificationsCount) ? options.notificationsCount:null;\n\t\tthis.latePublishRequestCount= (options.latePublishRequestCount) ? options.latePublishRequestCount:null;\n\t\tthis.currentKeepAliveCount= (options.currentKeepAliveCount) ? options.currentKeepAliveCount:null;\n\t\tthis.currentLifetimeCount= (options.currentLifetimeCount) ? options.currentLifetimeCount:null;\n\t\tthis.unacknowledgedMessageCount= (options.unacknowledgedMessageCount) ? options.unacknowledgedMessageCount:null;\n\t\tthis.discardedMessageCount= (options.discardedMessageCount) ? options.discardedMessageCount:null;\n\t\tthis.monitoredItemCount= (options.monitoredItemCount) ? options.monitoredItemCount:null;\n\t\tthis.disabledMonitoredItemCount= (options.disabledMonitoredItemCount) ? options.disabledMonitoredItemCount:null;\n\t\tthis.monitoringQueueOverflowCount= (options.monitoringQueueOverflowCount) ? options.monitoringQueueOverflowCount:null;\n\t\tthis.nextSequenceNumber= (options.nextSequenceNumber) ? options.nextSequenceNumber:null;\n\t\tthis.eventQueueOverFlowCount= (options.eventQueueOverFlowCount) ? options.eventQueueOverFlowCount:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.sessionId,out);\n\t\tec.encodeUInt32(this.subscriptionId,out);\n\t\tec.encodeByte(this.priority,out);\n\t\tec.encodeDouble(this.publishingInterval,out);\n\t\tec.encodeUInt32(this.maxKeepAliveCount,out);\n\t\tec.encodeUInt32(this.maxLifetimeCount,out);\n\t\tec.encodeUInt32(this.maxNotificationsPerPublish,out);\n\t\tec.encodeBoolean(this.publishingEnabled,out);\n\t\tec.encodeUInt32(this.modifyCount,out);\n\t\tec.encodeUInt32(this.enableCount,out);\n\t\tec.encodeUInt32(this.disableCount,out);\n\t\tec.encodeUInt32(this.republishRequestCount,out);\n\t\tec.encodeUInt32(this.republishMessageRequestCount,out);\n\t\tec.encodeUInt32(this.republishMessageCount,out);\n\t\tec.encodeUInt32(this.transferRequestCount,out);\n\t\tec.encodeUInt32(this.transferredToAltClientCount,out);\n\t\tec.encodeUInt32(this.transferredToSameClientCount,out);\n\t\tec.encodeUInt32(this.publishRequestCount,out);\n\t\tec.encodeUInt32(this.dataChangeNotificationsCount,out);\n\t\tec.encodeUInt32(this.eventNotificationsCount,out);\n\t\tec.encodeUInt32(this.notificationsCount,out);\n\t\tec.encodeUInt32(this.latePublishRequestCount,out);\n\t\tec.encodeUInt32(this.currentKeepAliveCount,out);\n\t\tec.encodeUInt32(this.currentLifetimeCount,out);\n\t\tec.encodeUInt32(this.unacknowledgedMessageCount,out);\n\t\tec.encodeUInt32(this.discardedMessageCount,out);\n\t\tec.encodeUInt32(this.monitoredItemCount,out);\n\t\tec.encodeUInt32(this.disabledMonitoredItemCount,out);\n\t\tec.encodeUInt32(this.monitoringQueueOverflowCount,out);\n\t\tec.encodeUInt32(this.nextSequenceNumber,out);\n\t\tec.encodeUInt32(this.eventQueueOverFlowCount,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.sessionId = ec.decodeNodeId(inp);\n\t\tthis.subscriptionId = ec.decodeUInt32(inp);\n\t\tthis.priority = ec.decodeByte(inp);\n\t\tthis.publishingInterval = ec.decodeDouble(inp);\n\t\tthis.maxKeepAliveCount = ec.decodeUInt32(inp);\n\t\tthis.maxLifetimeCount = ec.decodeUInt32(inp);\n\t\tthis.maxNotificationsPerPublish = ec.decodeUInt32(inp);\n\t\tthis.publishingEnabled = ec.decodeBoolean(inp);\n\t\tthis.modifyCount = ec.decodeUInt32(inp);\n\t\tthis.enableCount = ec.decodeUInt32(inp);\n\t\tthis.disableCount = ec.decodeUInt32(inp);\n\t\tthis.republishRequestCount = ec.decodeUInt32(inp);\n\t\tthis.republishMessageRequestCount = ec.decodeUInt32(inp);\n\t\tthis.republishMessageCount = ec.decodeUInt32(inp);\n\t\tthis.transferRequestCount = ec.decodeUInt32(inp);\n\t\tthis.transferredToAltClientCount = ec.decodeUInt32(inp);\n\t\tthis.transferredToSameClientCount = ec.decodeUInt32(inp);\n\t\tthis.publishRequestCount = ec.decodeUInt32(inp);\n\t\tthis.dataChangeNotificationsCount = ec.decodeUInt32(inp);\n\t\tthis.eventNotificationsCount = ec.decodeUInt32(inp);\n\t\tthis.notificationsCount = ec.decodeUInt32(inp);\n\t\tthis.latePublishRequestCount = ec.decodeUInt32(inp);\n\t\tthis.currentKeepAliveCount = ec.decodeUInt32(inp);\n\t\tthis.currentLifetimeCount = ec.decodeUInt32(inp);\n\t\tthis.unacknowledgedMessageCount = ec.decodeUInt32(inp);\n\t\tthis.discardedMessageCount = ec.decodeUInt32(inp);\n\t\tthis.monitoredItemCount = ec.decodeUInt32(inp);\n\t\tthis.disabledMonitoredItemCount = ec.decodeUInt32(inp);\n\t\tthis.monitoringQueueOverflowCount = ec.decodeUInt32(inp);\n\t\tthis.nextSequenceNumber = ec.decodeUInt32(inp);\n\t\tthis.eventQueueOverFlowCount = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : SubscriptionDiagnosticsDataType) : SubscriptionDiagnosticsDataType { \n\t\tif(!target) {\n\t\t\ttarget = new SubscriptionDiagnosticsDataType();\n\t\t}\n\t\ttarget.sessionId = this.sessionId;\n\t\ttarget.subscriptionId = this.subscriptionId;\n\t\ttarget.priority = this.priority;\n\t\ttarget.publishingInterval = this.publishingInterval;\n\t\ttarget.maxKeepAliveCount = this.maxKeepAliveCount;\n\t\ttarget.maxLifetimeCount = this.maxLifetimeCount;\n\t\ttarget.maxNotificationsPerPublish = this.maxNotificationsPerPublish;\n\t\ttarget.publishingEnabled = this.publishingEnabled;\n\t\ttarget.modifyCount = this.modifyCount;\n\t\ttarget.enableCount = this.enableCount;\n\t\ttarget.disableCount = this.disableCount;\n\t\ttarget.republishRequestCount = this.republishRequestCount;\n\t\ttarget.republishMessageRequestCount = this.republishMessageRequestCount;\n\t\ttarget.republishMessageCount = this.republishMessageCount;\n\t\ttarget.transferRequestCount = this.transferRequestCount;\n\t\ttarget.transferredToAltClientCount = this.transferredToAltClientCount;\n\t\ttarget.transferredToSameClientCount = this.transferredToSameClientCount;\n\t\ttarget.publishRequestCount = this.publishRequestCount;\n\t\ttarget.dataChangeNotificationsCount = this.dataChangeNotificationsCount;\n\t\ttarget.eventNotificationsCount = this.eventNotificationsCount;\n\t\ttarget.notificationsCount = this.notificationsCount;\n\t\ttarget.latePublishRequestCount = this.latePublishRequestCount;\n\t\ttarget.currentKeepAliveCount = this.currentKeepAliveCount;\n\t\ttarget.currentLifetimeCount = this.currentLifetimeCount;\n\t\ttarget.unacknowledgedMessageCount = this.unacknowledgedMessageCount;\n\t\ttarget.discardedMessageCount = this.discardedMessageCount;\n\t\ttarget.monitoredItemCount = this.monitoredItemCount;\n\t\ttarget.disabledMonitoredItemCount = this.disabledMonitoredItemCount;\n\t\ttarget.monitoringQueueOverflowCount = this.monitoringQueueOverflowCount;\n\t\ttarget.nextSequenceNumber = this.nextSequenceNumber;\n\t\ttarget.eventQueueOverFlowCount = this.eventQueueOverFlowCount;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSubscriptionDiagnosticsDataType(\tinp : DataStream) : SubscriptionDiagnosticsDataType { \n\t\tlet obj = new SubscriptionDiagnosticsDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SubscriptionDiagnosticsDataType\",SubscriptionDiagnosticsDataType, makeExpandedNodeId(876,0));","\n\nimport * as ec from '../basic-types';\nimport {ServerState, encodeServerState, decodeServerState} from './ServerState';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IRedundantServerDataType {\n\t\tserverId? : string;\n\t\tserviceLevel? : ec.Byte;\n\t\tserverState? : ServerState;\n}\n\n/**\n\n*/\n\nexport class RedundantServerDataType {\n \t\tserverId : string;\n\t\tserviceLevel : ec.Byte;\n\t\tserverState : ServerState;\n\n\tconstructor(\toptions? : IRedundantServerDataType) { \n\t\toptions = options || {};\n\t\tthis.serverId= (options.serverId) ? options.serverId:null;\n\t\tthis.serviceLevel= (options.serviceLevel) ? options.serviceLevel:null;\n\t\tthis.serverState= (options.serverState) ? options.serverState:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.serverId,out);\n\t\tec.encodeByte(this.serviceLevel,out);\n\t\tencodeServerState(this.serverState,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.serverId = ec.decodeString(inp);\n\t\tthis.serviceLevel = ec.decodeByte(inp);\n\t\tthis.serverState = decodeServerState(inp);\n\n\t}\n\n\n\tclone(\ttarget? : RedundantServerDataType) : RedundantServerDataType { \n\t\tif(!target) {\n\t\t\ttarget = new RedundantServerDataType();\n\t\t}\n\t\ttarget.serverId = this.serverId;\n\t\ttarget.serviceLevel = this.serviceLevel;\n\t\ttarget.serverState = this.serverState;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeRedundantServerDataType(\tinp : DataStream) : RedundantServerDataType { \n\t\tlet obj = new RedundantServerDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"RedundantServerDataType\",RedundantServerDataType, makeExpandedNodeId(855,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISamplingIntervalDiagnosticsDataType {\n\t\tsamplingInterval? : ec.Double;\n\t\tmonitoredItemCount? : ec.UInt32;\n\t\tmaxMonitoredItemCount? : ec.UInt32;\n\t\tdisabledMonitoredItemCount? : ec.UInt32;\n}\n\n/**\n\n*/\n\nexport class SamplingIntervalDiagnosticsDataType {\n \t\tsamplingInterval : ec.Double;\n\t\tmonitoredItemCount : ec.UInt32;\n\t\tmaxMonitoredItemCount : ec.UInt32;\n\t\tdisabledMonitoredItemCount : ec.UInt32;\n\n\tconstructor(\toptions? : ISamplingIntervalDiagnosticsDataType) { \n\t\toptions = options || {};\n\t\tthis.samplingInterval= (options.samplingInterval) ? options.samplingInterval:null;\n\t\tthis.monitoredItemCount= (options.monitoredItemCount) ? options.monitoredItemCount:null;\n\t\tthis.maxMonitoredItemCount= (options.maxMonitoredItemCount) ? options.maxMonitoredItemCount:null;\n\t\tthis.disabledMonitoredItemCount= (options.disabledMonitoredItemCount) ? options.disabledMonitoredItemCount:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeDouble(this.samplingInterval,out);\n\t\tec.encodeUInt32(this.monitoredItemCount,out);\n\t\tec.encodeUInt32(this.maxMonitoredItemCount,out);\n\t\tec.encodeUInt32(this.disabledMonitoredItemCount,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.samplingInterval = ec.decodeDouble(inp);\n\t\tthis.monitoredItemCount = ec.decodeUInt32(inp);\n\t\tthis.maxMonitoredItemCount = ec.decodeUInt32(inp);\n\t\tthis.disabledMonitoredItemCount = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : SamplingIntervalDiagnosticsDataType) : SamplingIntervalDiagnosticsDataType { \n\t\tif(!target) {\n\t\t\ttarget = new SamplingIntervalDiagnosticsDataType();\n\t\t}\n\t\ttarget.samplingInterval = this.samplingInterval;\n\t\ttarget.monitoredItemCount = this.monitoredItemCount;\n\t\ttarget.maxMonitoredItemCount = this.maxMonitoredItemCount;\n\t\ttarget.disabledMonitoredItemCount = this.disabledMonitoredItemCount;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSamplingIntervalDiagnosticsDataType(\tinp : DataStream) : SamplingIntervalDiagnosticsDataType { \n\t\tlet obj = new SamplingIntervalDiagnosticsDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SamplingIntervalDiagnosticsDataType\",SamplingIntervalDiagnosticsDataType, makeExpandedNodeId(858,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISemanticChangeStructureDataType {\n\t\taffected? : ec.NodeId;\n\t\taffectedType? : ec.NodeId;\n}\n\n/**\n\n*/\n\nexport class SemanticChangeStructureDataType {\n \t\taffected : ec.NodeId;\n\t\taffectedType : ec.NodeId;\n\n\tconstructor(\toptions? : ISemanticChangeStructureDataType) { \n\t\toptions = options || {};\n\t\tthis.affected= (options.affected) ? options.affected:null;\n\t\tthis.affectedType= (options.affectedType) ? options.affectedType:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.affected,out);\n\t\tec.encodeNodeId(this.affectedType,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.affected = ec.decodeNodeId(inp);\n\t\tthis.affectedType = ec.decodeNodeId(inp);\n\n\t}\n\n\n\tclone(\ttarget? : SemanticChangeStructureDataType) : SemanticChangeStructureDataType { \n\t\tif(!target) {\n\t\t\ttarget = new SemanticChangeStructureDataType();\n\t\t}\n\t\ttarget.affected = this.affected;\n\t\ttarget.affectedType = this.affectedType;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSemanticChangeStructureDataType(\tinp : DataStream) : SemanticChangeStructureDataType { \n\t\tlet obj = new SemanticChangeStructureDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SemanticChangeStructureDataType\",SemanticChangeStructureDataType, makeExpandedNodeId(899,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IServerDiagnosticsSummaryDataType {\n\t\tserverViewCount? : ec.UInt32;\n\t\tcurrentSessionCount? : ec.UInt32;\n\t\tcumulatedSessionCount? : ec.UInt32;\n\t\tsecurityRejectedSessionCount? : ec.UInt32;\n\t\trejectedSessionCount? : ec.UInt32;\n\t\tsessionTimeoutCount? : ec.UInt32;\n\t\tsessionAbortCount? : ec.UInt32;\n\t\tcurrentSubscriptionCount? : ec.UInt32;\n\t\tcumulatedSubscriptionCount? : ec.UInt32;\n\t\tpublishingIntervalCount? : ec.UInt32;\n\t\tsecurityRejectedRequestsCount? : ec.UInt32;\n\t\trejectedRequestsCount? : ec.UInt32;\n}\n\n/**\n\n*/\n\nexport class ServerDiagnosticsSummaryDataType {\n \t\tserverViewCount : ec.UInt32;\n\t\tcurrentSessionCount : ec.UInt32;\n\t\tcumulatedSessionCount : ec.UInt32;\n\t\tsecurityRejectedSessionCount : ec.UInt32;\n\t\trejectedSessionCount : ec.UInt32;\n\t\tsessionTimeoutCount : ec.UInt32;\n\t\tsessionAbortCount : ec.UInt32;\n\t\tcurrentSubscriptionCount : ec.UInt32;\n\t\tcumulatedSubscriptionCount : ec.UInt32;\n\t\tpublishingIntervalCount : ec.UInt32;\n\t\tsecurityRejectedRequestsCount : ec.UInt32;\n\t\trejectedRequestsCount : ec.UInt32;\n\n\tconstructor(\toptions? : IServerDiagnosticsSummaryDataType) { \n\t\toptions = options || {};\n\t\tthis.serverViewCount= (options.serverViewCount) ? options.serverViewCount:null;\n\t\tthis.currentSessionCount= (options.currentSessionCount) ? options.currentSessionCount:null;\n\t\tthis.cumulatedSessionCount= (options.cumulatedSessionCount) ? options.cumulatedSessionCount:null;\n\t\tthis.securityRejectedSessionCount= (options.securityRejectedSessionCount) ? options.securityRejectedSessionCount:null;\n\t\tthis.rejectedSessionCount= (options.rejectedSessionCount) ? options.rejectedSessionCount:null;\n\t\tthis.sessionTimeoutCount= (options.sessionTimeoutCount) ? options.sessionTimeoutCount:null;\n\t\tthis.sessionAbortCount= (options.sessionAbortCount) ? options.sessionAbortCount:null;\n\t\tthis.currentSubscriptionCount= (options.currentSubscriptionCount) ? options.currentSubscriptionCount:null;\n\t\tthis.cumulatedSubscriptionCount= (options.cumulatedSubscriptionCount) ? options.cumulatedSubscriptionCount:null;\n\t\tthis.publishingIntervalCount= (options.publishingIntervalCount) ? options.publishingIntervalCount:null;\n\t\tthis.securityRejectedRequestsCount= (options.securityRejectedRequestsCount) ? options.securityRejectedRequestsCount:null;\n\t\tthis.rejectedRequestsCount= (options.rejectedRequestsCount) ? options.rejectedRequestsCount:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.serverViewCount,out);\n\t\tec.encodeUInt32(this.currentSessionCount,out);\n\t\tec.encodeUInt32(this.cumulatedSessionCount,out);\n\t\tec.encodeUInt32(this.securityRejectedSessionCount,out);\n\t\tec.encodeUInt32(this.rejectedSessionCount,out);\n\t\tec.encodeUInt32(this.sessionTimeoutCount,out);\n\t\tec.encodeUInt32(this.sessionAbortCount,out);\n\t\tec.encodeUInt32(this.currentSubscriptionCount,out);\n\t\tec.encodeUInt32(this.cumulatedSubscriptionCount,out);\n\t\tec.encodeUInt32(this.publishingIntervalCount,out);\n\t\tec.encodeUInt32(this.securityRejectedRequestsCount,out);\n\t\tec.encodeUInt32(this.rejectedRequestsCount,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.serverViewCount = ec.decodeUInt32(inp);\n\t\tthis.currentSessionCount = ec.decodeUInt32(inp);\n\t\tthis.cumulatedSessionCount = ec.decodeUInt32(inp);\n\t\tthis.securityRejectedSessionCount = ec.decodeUInt32(inp);\n\t\tthis.rejectedSessionCount = ec.decodeUInt32(inp);\n\t\tthis.sessionTimeoutCount = ec.decodeUInt32(inp);\n\t\tthis.sessionAbortCount = ec.decodeUInt32(inp);\n\t\tthis.currentSubscriptionCount = ec.decodeUInt32(inp);\n\t\tthis.cumulatedSubscriptionCount = ec.decodeUInt32(inp);\n\t\tthis.publishingIntervalCount = ec.decodeUInt32(inp);\n\t\tthis.securityRejectedRequestsCount = ec.decodeUInt32(inp);\n\t\tthis.rejectedRequestsCount = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ServerDiagnosticsSummaryDataType) : ServerDiagnosticsSummaryDataType { \n\t\tif(!target) {\n\t\t\ttarget = new ServerDiagnosticsSummaryDataType();\n\t\t}\n\t\ttarget.serverViewCount = this.serverViewCount;\n\t\ttarget.currentSessionCount = this.currentSessionCount;\n\t\ttarget.cumulatedSessionCount = this.cumulatedSessionCount;\n\t\ttarget.securityRejectedSessionCount = this.securityRejectedSessionCount;\n\t\ttarget.rejectedSessionCount = this.rejectedSessionCount;\n\t\ttarget.sessionTimeoutCount = this.sessionTimeoutCount;\n\t\ttarget.sessionAbortCount = this.sessionAbortCount;\n\t\ttarget.currentSubscriptionCount = this.currentSubscriptionCount;\n\t\ttarget.cumulatedSubscriptionCount = this.cumulatedSubscriptionCount;\n\t\ttarget.publishingIntervalCount = this.publishingIntervalCount;\n\t\ttarget.securityRejectedRequestsCount = this.securityRejectedRequestsCount;\n\t\ttarget.rejectedRequestsCount = this.rejectedRequestsCount;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeServerDiagnosticsSummaryDataType(\tinp : DataStream) : ServerDiagnosticsSummaryDataType { \n\t\tlet obj = new ServerDiagnosticsSummaryDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ServerDiagnosticsSummaryDataType\",ServerDiagnosticsSummaryDataType, makeExpandedNodeId(861,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IBuildInfo {\n\t\tproductUri? : string;\n\t\tmanufacturerName? : string;\n\t\tproductName? : string;\n\t\tsoftwareVersion? : string;\n\t\tbuildNumber? : string;\n\t\tbuildDate? : Date;\n}\n\n/**\n\n*/\n\nexport class BuildInfo {\n \t\tproductUri : string;\n\t\tmanufacturerName : string;\n\t\tproductName : string;\n\t\tsoftwareVersion : string;\n\t\tbuildNumber : string;\n\t\tbuildDate : Date;\n\n\tconstructor(\toptions? : IBuildInfo) { \n\t\toptions = options || {};\n\t\tthis.productUri= (options.productUri) ? options.productUri:null;\n\t\tthis.manufacturerName= (options.manufacturerName) ? options.manufacturerName:null;\n\t\tthis.productName= (options.productName) ? options.productName:null;\n\t\tthis.softwareVersion= (options.softwareVersion) ? options.softwareVersion:null;\n\t\tthis.buildNumber= (options.buildNumber) ? options.buildNumber:null;\n\t\tthis.buildDate= (options.buildDate) ? options.buildDate:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.productUri,out);\n\t\tec.encodeString(this.manufacturerName,out);\n\t\tec.encodeString(this.productName,out);\n\t\tec.encodeString(this.softwareVersion,out);\n\t\tec.encodeString(this.buildNumber,out);\n\t\tec.encodeDateTime(this.buildDate,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.productUri = ec.decodeString(inp);\n\t\tthis.manufacturerName = ec.decodeString(inp);\n\t\tthis.productName = ec.decodeString(inp);\n\t\tthis.softwareVersion = ec.decodeString(inp);\n\t\tthis.buildNumber = ec.decodeString(inp);\n\t\tthis.buildDate = ec.decodeDateTime(inp);\n\n\t}\n\n\n\tclone(\ttarget? : BuildInfo) : BuildInfo { \n\t\tif(!target) {\n\t\t\ttarget = new BuildInfo();\n\t\t}\n\t\ttarget.productUri = this.productUri;\n\t\ttarget.manufacturerName = this.manufacturerName;\n\t\ttarget.productName = this.productName;\n\t\ttarget.softwareVersion = this.softwareVersion;\n\t\ttarget.buildNumber = this.buildNumber;\n\t\ttarget.buildDate = this.buildDate;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeBuildInfo(\tinp : DataStream) : BuildInfo { \n\t\tlet obj = new BuildInfo();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"BuildInfo\",BuildInfo, makeExpandedNodeId(340,0));","\n\nimport * as ec from '../basic-types';\nimport {ServerState, encodeServerState, decodeServerState} from './ServerState';\nimport {BuildInfo} from './BuildInfo';\nimport {LocalizedText} from './LocalizedText';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IServerStatusDataType {\n\t\tstartTime? : Date;\n\t\tcurrentTime? : Date;\n\t\tstate? : ServerState;\n\t\tbuildInfo? : BuildInfo;\n\t\tsecondsTillShutdown? : ec.UInt32;\n\t\tshutdownReason? : LocalizedText;\n}\n\n/**\n\n*/\n\nexport class ServerStatusDataType {\n \t\tstartTime : Date;\n\t\tcurrentTime : Date;\n\t\tstate : ServerState;\n\t\tbuildInfo : BuildInfo;\n\t\tsecondsTillShutdown : ec.UInt32;\n\t\tshutdownReason : LocalizedText;\n\n\tconstructor(\toptions? : IServerStatusDataType) { \n\t\toptions = options || {};\n\t\tthis.startTime= (options.startTime) ? options.startTime:null;\n\t\tthis.currentTime= (options.currentTime) ? options.currentTime:null;\n\t\tthis.state= (options.state) ? options.state:null;\n\t\tthis.buildInfo= (options.buildInfo) ? options.buildInfo:new BuildInfo();\n\t\tthis.secondsTillShutdown= (options.secondsTillShutdown) ? options.secondsTillShutdown:null;\n\t\tthis.shutdownReason= (options.shutdownReason) ? options.shutdownReason:new LocalizedText();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeDateTime(this.startTime,out);\n\t\tec.encodeDateTime(this.currentTime,out);\n\t\tencodeServerState(this.state,out);\n\t\tthis.buildInfo.encode(out);\n\t\tec.encodeUInt32(this.secondsTillShutdown,out);\n\t\tthis.shutdownReason.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.startTime = ec.decodeDateTime(inp);\n\t\tthis.currentTime = ec.decodeDateTime(inp);\n\t\tthis.state = decodeServerState(inp);\n\t\tthis.buildInfo.decode(inp);\n\t\tthis.secondsTillShutdown = ec.decodeUInt32(inp);\n\t\tthis.shutdownReason.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ServerStatusDataType) : ServerStatusDataType { \n\t\tif(!target) {\n\t\t\ttarget = new ServerStatusDataType();\n\t\t}\n\t\ttarget.startTime = this.startTime;\n\t\ttarget.currentTime = this.currentTime;\n\t\ttarget.state = this.state;\n\t\tif (this.buildInfo) { target.buildInfo = this.buildInfo.clone();}\n\t\ttarget.secondsTillShutdown = this.secondsTillShutdown;\n\t\tif (this.shutdownReason) { target.shutdownReason = this.shutdownReason.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeServerStatusDataType(\tinp : DataStream) : ServerStatusDataType { \n\t\tlet obj = new ServerStatusDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ServerStatusDataType\",ServerStatusDataType, makeExpandedNodeId(864,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IServiceCounterDataType {\n\t\ttotalCount? : ec.UInt32;\n\t\terrorCount? : ec.UInt32;\n}\n\n/**\n\n*/\n\nexport class ServiceCounterDataType {\n \t\ttotalCount : ec.UInt32;\n\t\terrorCount : ec.UInt32;\n\n\tconstructor(\toptions? : IServiceCounterDataType) { \n\t\toptions = options || {};\n\t\tthis.totalCount= (options.totalCount) ? options.totalCount:null;\n\t\tthis.errorCount= (options.errorCount) ? options.errorCount:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeUInt32(this.totalCount,out);\n\t\tec.encodeUInt32(this.errorCount,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.totalCount = ec.decodeUInt32(inp);\n\t\tthis.errorCount = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ServiceCounterDataType) : ServiceCounterDataType { \n\t\tif(!target) {\n\t\t\ttarget = new ServiceCounterDataType();\n\t\t}\n\t\ttarget.totalCount = this.totalCount;\n\t\ttarget.errorCount = this.errorCount;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeServiceCounterDataType(\tinp : DataStream) : ServiceCounterDataType { \n\t\tlet obj = new ServiceCounterDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ServiceCounterDataType\",ServiceCounterDataType, makeExpandedNodeId(873,0));","\n\nimport * as ec from '../basic-types';\nimport {ApplicationDescription} from './ApplicationDescription';\nimport {ServiceCounterDataType} from './ServiceCounterDataType';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISessionDiagnosticsDataType {\n\t\tsessionId? : ec.NodeId;\n\t\tsessionName? : string;\n\t\tclientDescription? : ApplicationDescription;\n\t\tserverUri? : string;\n\t\tendpointUrl? : string;\n\t\tlocaleIds? : string[];\n\t\tactualSessionTimeout? : ec.Double;\n\t\tmaxResponseMessageSize? : ec.UInt32;\n\t\tclientConnectionTime? : Date;\n\t\tclientLastContactTime? : Date;\n\t\tcurrentSubscriptionsCount? : ec.UInt32;\n\t\tcurrentMonitoredItemsCount? : ec.UInt32;\n\t\tcurrentPublishRequestsInQueue? : ec.UInt32;\n\t\ttotalRequestCount? : ServiceCounterDataType;\n\t\tunauthorizedRequestCount? : ec.UInt32;\n\t\treadCount? : ServiceCounterDataType;\n\t\thistoryReadCount? : ServiceCounterDataType;\n\t\twriteCount? : ServiceCounterDataType;\n\t\thistoryUpdateCount? : ServiceCounterDataType;\n\t\tcallCount? : ServiceCounterDataType;\n\t\tcreateMonitoredItemsCount? : ServiceCounterDataType;\n\t\tmodifyMonitoredItemsCount? : ServiceCounterDataType;\n\t\tsetMonitoringModeCount? : ServiceCounterDataType;\n\t\tsetTriggeringCount? : ServiceCounterDataType;\n\t\tdeleteMonitoredItemsCount? : ServiceCounterDataType;\n\t\tcreateSubscriptionCount? : ServiceCounterDataType;\n\t\tmodifySubscriptionCount? : ServiceCounterDataType;\n\t\tsetPublishingModeCount? : ServiceCounterDataType;\n\t\tpublishCount? : ServiceCounterDataType;\n\t\trepublishCount? : ServiceCounterDataType;\n\t\ttransferSubscriptionsCount? : ServiceCounterDataType;\n\t\tdeleteSubscriptionsCount? : ServiceCounterDataType;\n\t\taddNodesCount? : ServiceCounterDataType;\n\t\taddReferencesCount? : ServiceCounterDataType;\n\t\tdeleteNodesCount? : ServiceCounterDataType;\n\t\tdeleteReferencesCount? : ServiceCounterDataType;\n\t\tbrowseCount? : ServiceCounterDataType;\n\t\tbrowseNextCount? : ServiceCounterDataType;\n\t\ttranslateBrowsePathsToNodeIdsCount? : ServiceCounterDataType;\n\t\tqueryFirstCount? : ServiceCounterDataType;\n\t\tqueryNextCount? : ServiceCounterDataType;\n\t\tregisterNodesCount? : ServiceCounterDataType;\n\t\tunregisterNodesCount? : ServiceCounterDataType;\n}\n\n/**\n\n*/\n\nexport class SessionDiagnosticsDataType {\n \t\tsessionId : ec.NodeId;\n\t\tsessionName : string;\n\t\tclientDescription : ApplicationDescription;\n\t\tserverUri : string;\n\t\tendpointUrl : string;\n\t\tlocaleIds : string[];\n\t\tactualSessionTimeout : ec.Double;\n\t\tmaxResponseMessageSize : ec.UInt32;\n\t\tclientConnectionTime : Date;\n\t\tclientLastContactTime : Date;\n\t\tcurrentSubscriptionsCount : ec.UInt32;\n\t\tcurrentMonitoredItemsCount : ec.UInt32;\n\t\tcurrentPublishRequestsInQueue : ec.UInt32;\n\t\ttotalRequestCount : ServiceCounterDataType;\n\t\tunauthorizedRequestCount : ec.UInt32;\n\t\treadCount : ServiceCounterDataType;\n\t\thistoryReadCount : ServiceCounterDataType;\n\t\twriteCount : ServiceCounterDataType;\n\t\thistoryUpdateCount : ServiceCounterDataType;\n\t\tcallCount : ServiceCounterDataType;\n\t\tcreateMonitoredItemsCount : ServiceCounterDataType;\n\t\tmodifyMonitoredItemsCount : ServiceCounterDataType;\n\t\tsetMonitoringModeCount : ServiceCounterDataType;\n\t\tsetTriggeringCount : ServiceCounterDataType;\n\t\tdeleteMonitoredItemsCount : ServiceCounterDataType;\n\t\tcreateSubscriptionCount : ServiceCounterDataType;\n\t\tmodifySubscriptionCount : ServiceCounterDataType;\n\t\tsetPublishingModeCount : ServiceCounterDataType;\n\t\tpublishCount : ServiceCounterDataType;\n\t\trepublishCount : ServiceCounterDataType;\n\t\ttransferSubscriptionsCount : ServiceCounterDataType;\n\t\tdeleteSubscriptionsCount : ServiceCounterDataType;\n\t\taddNodesCount : ServiceCounterDataType;\n\t\taddReferencesCount : ServiceCounterDataType;\n\t\tdeleteNodesCount : ServiceCounterDataType;\n\t\tdeleteReferencesCount : ServiceCounterDataType;\n\t\tbrowseCount : ServiceCounterDataType;\n\t\tbrowseNextCount : ServiceCounterDataType;\n\t\ttranslateBrowsePathsToNodeIdsCount : ServiceCounterDataType;\n\t\tqueryFirstCount : ServiceCounterDataType;\n\t\tqueryNextCount : ServiceCounterDataType;\n\t\tregisterNodesCount : ServiceCounterDataType;\n\t\tunregisterNodesCount : ServiceCounterDataType;\n\n\tconstructor(\toptions? : ISessionDiagnosticsDataType) { \n\t\toptions = options || {};\n\t\tthis.sessionId= (options.sessionId) ? options.sessionId:null;\n\t\tthis.sessionName= (options.sessionName) ? options.sessionName:null;\n\t\tthis.clientDescription= (options.clientDescription) ? options.clientDescription:new ApplicationDescription();\n\t\tthis.serverUri= (options.serverUri) ? options.serverUri:null;\n\t\tthis.endpointUrl= (options.endpointUrl) ? options.endpointUrl:null;\n\t\tthis.localeIds= (options.localeIds) ? options.localeIds:[];\n\t\tthis.actualSessionTimeout= (options.actualSessionTimeout) ? options.actualSessionTimeout:null;\n\t\tthis.maxResponseMessageSize= (options.maxResponseMessageSize) ? options.maxResponseMessageSize:null;\n\t\tthis.clientConnectionTime= (options.clientConnectionTime) ? options.clientConnectionTime:null;\n\t\tthis.clientLastContactTime= (options.clientLastContactTime) ? options.clientLastContactTime:null;\n\t\tthis.currentSubscriptionsCount= (options.currentSubscriptionsCount) ? options.currentSubscriptionsCount:null;\n\t\tthis.currentMonitoredItemsCount= (options.currentMonitoredItemsCount) ? options.currentMonitoredItemsCount:null;\n\t\tthis.currentPublishRequestsInQueue= (options.currentPublishRequestsInQueue) ? options.currentPublishRequestsInQueue:null;\n\t\tthis.totalRequestCount= (options.totalRequestCount) ? options.totalRequestCount:new ServiceCounterDataType();\n\t\tthis.unauthorizedRequestCount= (options.unauthorizedRequestCount) ? options.unauthorizedRequestCount:null;\n\t\tthis.readCount= (options.readCount) ? options.readCount:new ServiceCounterDataType();\n\t\tthis.historyReadCount= (options.historyReadCount) ? options.historyReadCount:new ServiceCounterDataType();\n\t\tthis.writeCount= (options.writeCount) ? options.writeCount:new ServiceCounterDataType();\n\t\tthis.historyUpdateCount= (options.historyUpdateCount) ? options.historyUpdateCount:new ServiceCounterDataType();\n\t\tthis.callCount= (options.callCount) ? options.callCount:new ServiceCounterDataType();\n\t\tthis.createMonitoredItemsCount= (options.createMonitoredItemsCount) ? options.createMonitoredItemsCount:new ServiceCounterDataType();\n\t\tthis.modifyMonitoredItemsCount= (options.modifyMonitoredItemsCount) ? options.modifyMonitoredItemsCount:new ServiceCounterDataType();\n\t\tthis.setMonitoringModeCount= (options.setMonitoringModeCount) ? options.setMonitoringModeCount:new ServiceCounterDataType();\n\t\tthis.setTriggeringCount= (options.setTriggeringCount) ? options.setTriggeringCount:new ServiceCounterDataType();\n\t\tthis.deleteMonitoredItemsCount= (options.deleteMonitoredItemsCount) ? options.deleteMonitoredItemsCount:new ServiceCounterDataType();\n\t\tthis.createSubscriptionCount= (options.createSubscriptionCount) ? options.createSubscriptionCount:new ServiceCounterDataType();\n\t\tthis.modifySubscriptionCount= (options.modifySubscriptionCount) ? options.modifySubscriptionCount:new ServiceCounterDataType();\n\t\tthis.setPublishingModeCount= (options.setPublishingModeCount) ? options.setPublishingModeCount:new ServiceCounterDataType();\n\t\tthis.publishCount= (options.publishCount) ? options.publishCount:new ServiceCounterDataType();\n\t\tthis.republishCount= (options.republishCount) ? options.republishCount:new ServiceCounterDataType();\n\t\tthis.transferSubscriptionsCount= (options.transferSubscriptionsCount) ? options.transferSubscriptionsCount:new ServiceCounterDataType();\n\t\tthis.deleteSubscriptionsCount= (options.deleteSubscriptionsCount) ? options.deleteSubscriptionsCount:new ServiceCounterDataType();\n\t\tthis.addNodesCount= (options.addNodesCount) ? options.addNodesCount:new ServiceCounterDataType();\n\t\tthis.addReferencesCount= (options.addReferencesCount) ? options.addReferencesCount:new ServiceCounterDataType();\n\t\tthis.deleteNodesCount= (options.deleteNodesCount) ? options.deleteNodesCount:new ServiceCounterDataType();\n\t\tthis.deleteReferencesCount= (options.deleteReferencesCount) ? options.deleteReferencesCount:new ServiceCounterDataType();\n\t\tthis.browseCount= (options.browseCount) ? options.browseCount:new ServiceCounterDataType();\n\t\tthis.browseNextCount= (options.browseNextCount) ? options.browseNextCount:new ServiceCounterDataType();\n\t\tthis.translateBrowsePathsToNodeIdsCount= (options.translateBrowsePathsToNodeIdsCount) ? options.translateBrowsePathsToNodeIdsCount:new ServiceCounterDataType();\n\t\tthis.queryFirstCount= (options.queryFirstCount) ? options.queryFirstCount:new ServiceCounterDataType();\n\t\tthis.queryNextCount= (options.queryNextCount) ? options.queryNextCount:new ServiceCounterDataType();\n\t\tthis.registerNodesCount= (options.registerNodesCount) ? options.registerNodesCount:new ServiceCounterDataType();\n\t\tthis.unregisterNodesCount= (options.unregisterNodesCount) ? options.unregisterNodesCount:new ServiceCounterDataType();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.sessionId,out);\n\t\tec.encodeString(this.sessionName,out);\n\t\tthis.clientDescription.encode(out);\n\t\tec.encodeString(this.serverUri,out);\n\t\tec.encodeString(this.endpointUrl,out);\n\t\tec.encodeArray(this.localeIds,out,ec.encodeString);\n\t\tec.encodeDouble(this.actualSessionTimeout,out);\n\t\tec.encodeUInt32(this.maxResponseMessageSize,out);\n\t\tec.encodeDateTime(this.clientConnectionTime,out);\n\t\tec.encodeDateTime(this.clientLastContactTime,out);\n\t\tec.encodeUInt32(this.currentSubscriptionsCount,out);\n\t\tec.encodeUInt32(this.currentMonitoredItemsCount,out);\n\t\tec.encodeUInt32(this.currentPublishRequestsInQueue,out);\n\t\tthis.totalRequestCount.encode(out);\n\t\tec.encodeUInt32(this.unauthorizedRequestCount,out);\n\t\tthis.readCount.encode(out);\n\t\tthis.historyReadCount.encode(out);\n\t\tthis.writeCount.encode(out);\n\t\tthis.historyUpdateCount.encode(out);\n\t\tthis.callCount.encode(out);\n\t\tthis.createMonitoredItemsCount.encode(out);\n\t\tthis.modifyMonitoredItemsCount.encode(out);\n\t\tthis.setMonitoringModeCount.encode(out);\n\t\tthis.setTriggeringCount.encode(out);\n\t\tthis.deleteMonitoredItemsCount.encode(out);\n\t\tthis.createSubscriptionCount.encode(out);\n\t\tthis.modifySubscriptionCount.encode(out);\n\t\tthis.setPublishingModeCount.encode(out);\n\t\tthis.publishCount.encode(out);\n\t\tthis.republishCount.encode(out);\n\t\tthis.transferSubscriptionsCount.encode(out);\n\t\tthis.deleteSubscriptionsCount.encode(out);\n\t\tthis.addNodesCount.encode(out);\n\t\tthis.addReferencesCount.encode(out);\n\t\tthis.deleteNodesCount.encode(out);\n\t\tthis.deleteReferencesCount.encode(out);\n\t\tthis.browseCount.encode(out);\n\t\tthis.browseNextCount.encode(out);\n\t\tthis.translateBrowsePathsToNodeIdsCount.encode(out);\n\t\tthis.queryFirstCount.encode(out);\n\t\tthis.queryNextCount.encode(out);\n\t\tthis.registerNodesCount.encode(out);\n\t\tthis.unregisterNodesCount.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.sessionId = ec.decodeNodeId(inp);\n\t\tthis.sessionName = ec.decodeString(inp);\n\t\tthis.clientDescription.decode(inp);\n\t\tthis.serverUri = ec.decodeString(inp);\n\t\tthis.endpointUrl = ec.decodeString(inp);\n\t\tthis.localeIds = ec.decodeArray(inp,ec.decodeString);\n\t\tthis.actualSessionTimeout = ec.decodeDouble(inp);\n\t\tthis.maxResponseMessageSize = ec.decodeUInt32(inp);\n\t\tthis.clientConnectionTime = ec.decodeDateTime(inp);\n\t\tthis.clientLastContactTime = ec.decodeDateTime(inp);\n\t\tthis.currentSubscriptionsCount = ec.decodeUInt32(inp);\n\t\tthis.currentMonitoredItemsCount = ec.decodeUInt32(inp);\n\t\tthis.currentPublishRequestsInQueue = ec.decodeUInt32(inp);\n\t\tthis.totalRequestCount.decode(inp);\n\t\tthis.unauthorizedRequestCount = ec.decodeUInt32(inp);\n\t\tthis.readCount.decode(inp);\n\t\tthis.historyReadCount.decode(inp);\n\t\tthis.writeCount.decode(inp);\n\t\tthis.historyUpdateCount.decode(inp);\n\t\tthis.callCount.decode(inp);\n\t\tthis.createMonitoredItemsCount.decode(inp);\n\t\tthis.modifyMonitoredItemsCount.decode(inp);\n\t\tthis.setMonitoringModeCount.decode(inp);\n\t\tthis.setTriggeringCount.decode(inp);\n\t\tthis.deleteMonitoredItemsCount.decode(inp);\n\t\tthis.createSubscriptionCount.decode(inp);\n\t\tthis.modifySubscriptionCount.decode(inp);\n\t\tthis.setPublishingModeCount.decode(inp);\n\t\tthis.publishCount.decode(inp);\n\t\tthis.republishCount.decode(inp);\n\t\tthis.transferSubscriptionsCount.decode(inp);\n\t\tthis.deleteSubscriptionsCount.decode(inp);\n\t\tthis.addNodesCount.decode(inp);\n\t\tthis.addReferencesCount.decode(inp);\n\t\tthis.deleteNodesCount.decode(inp);\n\t\tthis.deleteReferencesCount.decode(inp);\n\t\tthis.browseCount.decode(inp);\n\t\tthis.browseNextCount.decode(inp);\n\t\tthis.translateBrowsePathsToNodeIdsCount.decode(inp);\n\t\tthis.queryFirstCount.decode(inp);\n\t\tthis.queryNextCount.decode(inp);\n\t\tthis.registerNodesCount.decode(inp);\n\t\tthis.unregisterNodesCount.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : SessionDiagnosticsDataType) : SessionDiagnosticsDataType { \n\t\tif(!target) {\n\t\t\ttarget = new SessionDiagnosticsDataType();\n\t\t}\n\t\ttarget.sessionId = this.sessionId;\n\t\ttarget.sessionName = this.sessionName;\n\t\tif (this.clientDescription) { target.clientDescription = this.clientDescription.clone();}\n\t\ttarget.serverUri = this.serverUri;\n\t\ttarget.endpointUrl = this.endpointUrl;\n\t\ttarget.localeIds = ec.cloneArray(this.localeIds);\n\t\ttarget.actualSessionTimeout = this.actualSessionTimeout;\n\t\ttarget.maxResponseMessageSize = this.maxResponseMessageSize;\n\t\ttarget.clientConnectionTime = this.clientConnectionTime;\n\t\ttarget.clientLastContactTime = this.clientLastContactTime;\n\t\ttarget.currentSubscriptionsCount = this.currentSubscriptionsCount;\n\t\ttarget.currentMonitoredItemsCount = this.currentMonitoredItemsCount;\n\t\ttarget.currentPublishRequestsInQueue = this.currentPublishRequestsInQueue;\n\t\tif (this.totalRequestCount) { target.totalRequestCount = this.totalRequestCount.clone();}\n\t\ttarget.unauthorizedRequestCount = this.unauthorizedRequestCount;\n\t\tif (this.readCount) { target.readCount = this.readCount.clone();}\n\t\tif (this.historyReadCount) { target.historyReadCount = this.historyReadCount.clone();}\n\t\tif (this.writeCount) { target.writeCount = this.writeCount.clone();}\n\t\tif (this.historyUpdateCount) { target.historyUpdateCount = this.historyUpdateCount.clone();}\n\t\tif (this.callCount) { target.callCount = this.callCount.clone();}\n\t\tif (this.createMonitoredItemsCount) { target.createMonitoredItemsCount = this.createMonitoredItemsCount.clone();}\n\t\tif (this.modifyMonitoredItemsCount) { target.modifyMonitoredItemsCount = this.modifyMonitoredItemsCount.clone();}\n\t\tif (this.setMonitoringModeCount) { target.setMonitoringModeCount = this.setMonitoringModeCount.clone();}\n\t\tif (this.setTriggeringCount) { target.setTriggeringCount = this.setTriggeringCount.clone();}\n\t\tif (this.deleteMonitoredItemsCount) { target.deleteMonitoredItemsCount = this.deleteMonitoredItemsCount.clone();}\n\t\tif (this.createSubscriptionCount) { target.createSubscriptionCount = this.createSubscriptionCount.clone();}\n\t\tif (this.modifySubscriptionCount) { target.modifySubscriptionCount = this.modifySubscriptionCount.clone();}\n\t\tif (this.setPublishingModeCount) { target.setPublishingModeCount = this.setPublishingModeCount.clone();}\n\t\tif (this.publishCount) { target.publishCount = this.publishCount.clone();}\n\t\tif (this.republishCount) { target.republishCount = this.republishCount.clone();}\n\t\tif (this.transferSubscriptionsCount) { target.transferSubscriptionsCount = this.transferSubscriptionsCount.clone();}\n\t\tif (this.deleteSubscriptionsCount) { target.deleteSubscriptionsCount = this.deleteSubscriptionsCount.clone();}\n\t\tif (this.addNodesCount) { target.addNodesCount = this.addNodesCount.clone();}\n\t\tif (this.addReferencesCount) { target.addReferencesCount = this.addReferencesCount.clone();}\n\t\tif (this.deleteNodesCount) { target.deleteNodesCount = this.deleteNodesCount.clone();}\n\t\tif (this.deleteReferencesCount) { target.deleteReferencesCount = this.deleteReferencesCount.clone();}\n\t\tif (this.browseCount) { target.browseCount = this.browseCount.clone();}\n\t\tif (this.browseNextCount) { target.browseNextCount = this.browseNextCount.clone();}\n\t\tif (this.translateBrowsePathsToNodeIdsCount) { target.translateBrowsePathsToNodeIdsCount = this.translateBrowsePathsToNodeIdsCount.clone();}\n\t\tif (this.queryFirstCount) { target.queryFirstCount = this.queryFirstCount.clone();}\n\t\tif (this.queryNextCount) { target.queryNextCount = this.queryNextCount.clone();}\n\t\tif (this.registerNodesCount) { target.registerNodesCount = this.registerNodesCount.clone();}\n\t\tif (this.unregisterNodesCount) { target.unregisterNodesCount = this.unregisterNodesCount.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSessionDiagnosticsDataType(\tinp : DataStream) : SessionDiagnosticsDataType { \n\t\tlet obj = new SessionDiagnosticsDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SessionDiagnosticsDataType\",SessionDiagnosticsDataType, makeExpandedNodeId(867,0));","\n\nimport * as ec from '../basic-types';\nimport {MessageSecurityMode, encodeMessageSecurityMode, decodeMessageSecurityMode} from './MessageSecurityMode';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISessionSecurityDiagnosticsDataType {\n\t\tsessionId? : ec.NodeId;\n\t\tclientUserIdOfSession? : string;\n\t\tclientUserIdHistory? : string[];\n\t\tauthenticationMechanism? : string;\n\t\tencoding? : string;\n\t\ttransportProtocol? : string;\n\t\tsecurityMode? : MessageSecurityMode;\n\t\tsecurityPolicyUri? : string;\n\t\tclientCertificate? : Uint8Array;\n}\n\n/**\n\n*/\n\nexport class SessionSecurityDiagnosticsDataType {\n \t\tsessionId : ec.NodeId;\n\t\tclientUserIdOfSession : string;\n\t\tclientUserIdHistory : string[];\n\t\tauthenticationMechanism : string;\n\t\tencoding : string;\n\t\ttransportProtocol : string;\n\t\tsecurityMode : MessageSecurityMode;\n\t\tsecurityPolicyUri : string;\n\t\tclientCertificate : Uint8Array;\n\n\tconstructor(\toptions? : ISessionSecurityDiagnosticsDataType) { \n\t\toptions = options || {};\n\t\tthis.sessionId= (options.sessionId) ? options.sessionId:null;\n\t\tthis.clientUserIdOfSession= (options.clientUserIdOfSession) ? options.clientUserIdOfSession:null;\n\t\tthis.clientUserIdHistory= (options.clientUserIdHistory) ? options.clientUserIdHistory:[];\n\t\tthis.authenticationMechanism= (options.authenticationMechanism) ? options.authenticationMechanism:null;\n\t\tthis.encoding= (options.encoding) ? options.encoding:null;\n\t\tthis.transportProtocol= (options.transportProtocol) ? options.transportProtocol:null;\n\t\tthis.securityMode= (options.securityMode) ? options.securityMode:null;\n\t\tthis.securityPolicyUri= (options.securityPolicyUri) ? options.securityPolicyUri:null;\n\t\tthis.clientCertificate= (options.clientCertificate) ? options.clientCertificate:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeNodeId(this.sessionId,out);\n\t\tec.encodeString(this.clientUserIdOfSession,out);\n\t\tec.encodeArray(this.clientUserIdHistory,out,ec.encodeString);\n\t\tec.encodeString(this.authenticationMechanism,out);\n\t\tec.encodeString(this.encoding,out);\n\t\tec.encodeString(this.transportProtocol,out);\n\t\tencodeMessageSecurityMode(this.securityMode,out);\n\t\tec.encodeString(this.securityPolicyUri,out);\n\t\tec.encodeByteString(this.clientCertificate,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.sessionId = ec.decodeNodeId(inp);\n\t\tthis.clientUserIdOfSession = ec.decodeString(inp);\n\t\tthis.clientUserIdHistory = ec.decodeArray(inp,ec.decodeString);\n\t\tthis.authenticationMechanism = ec.decodeString(inp);\n\t\tthis.encoding = ec.decodeString(inp);\n\t\tthis.transportProtocol = ec.decodeString(inp);\n\t\tthis.securityMode = decodeMessageSecurityMode(inp);\n\t\tthis.securityPolicyUri = ec.decodeString(inp);\n\t\tthis.clientCertificate = ec.decodeByteString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : SessionSecurityDiagnosticsDataType) : SessionSecurityDiagnosticsDataType { \n\t\tif(!target) {\n\t\t\ttarget = new SessionSecurityDiagnosticsDataType();\n\t\t}\n\t\ttarget.sessionId = this.sessionId;\n\t\ttarget.clientUserIdOfSession = this.clientUserIdOfSession;\n\t\ttarget.clientUserIdHistory = ec.cloneArray(this.clientUserIdHistory);\n\t\ttarget.authenticationMechanism = this.authenticationMechanism;\n\t\ttarget.encoding = this.encoding;\n\t\ttarget.transportProtocol = this.transportProtocol;\n\t\ttarget.securityMode = this.securityMode;\n\t\ttarget.securityPolicyUri = this.securityPolicyUri;\n\t\ttarget.clientCertificate = this.clientCertificate;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSessionSecurityDiagnosticsDataType(\tinp : DataStream) : SessionSecurityDiagnosticsDataType { \n\t\tlet obj = new SessionSecurityDiagnosticsDataType();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SessionSecurityDiagnosticsDataType\",SessionSecurityDiagnosticsDataType, makeExpandedNodeId(870,0));","\"use strict\"\r\nimport {assert} from '../assert';\r\n\r\nvar crypto : Crypto = window.crypto || (<any>window).msCrypto; // for IE 11//require(\"crypto\");\r\n\r\n\r\nexport function makeApplicationUrn(hostname : string, suffix : string) : Promise<string> {\r\n\r\n    // beware : Openssl doesn't support urn with length greater than 64 !!\r\n    //          sometimes hostname length could be too long ...\r\n    // application urn length must not exceed 64 car. to comply with openssl\r\n    // see cryptoCA\r\n    let hostname_hash = hostname;\r\n    let p : Promise<string>;\r\n    if (hostname_hash.length + 7 + suffix.length >=64 ) {\r\n        // we need to reduce the applicationUrn side => let's take\r\n        // a portion of the hostname hash.\r\n        p = <any>crypto.subtle.digest('md5',str2arraybuffer(hostname)).then((value)=>crypto.subtle.digest('hex',value)).then((value)=> arraybuffer2str(value).substr(0,16));\r\n    } else {\r\n        p = new Promise((resolve) => { resolve(hostname_hash); });\r\n    }\r\n\r\n    p.then((value) => {\r\n        let applicationUrn = \"urn:\" + hostname_hash + \":\" + suffix;\r\n        assert(applicationUrn.length <= 64);\r\n        return applicationUrn;\r\n    });\r\n    return p;\r\n    \r\n}\r\n\r\nfunction str2arraybuffer (str : String ) : ArrayBuffer {\r\n\tvar array = new Uint8Array(str.length);\r\n\tfor(var i = 0; i < str.length; i++) {\r\n\t\tarray[i] = str.charCodeAt(i);\r\n\t}\r\n\treturn array.buffer\r\n}\r\n\r\nfunction arraybuffer2str(buf : ArrayBuffer) : string {\r\n    var str = \"\";\r\n    for (var i=0; i < buf.byteLength; i++) {\r\n        str += buf[i];\r\n    }\r\n\r\n    return str;\r\n}\r\n\r\n","\n\nimport {RequestHeader} from './RequestHeader';\nimport {ApplicationDescription} from './ApplicationDescription';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICreateSessionRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tclientDescription? : ApplicationDescription;\n\t\tserverUri? : string;\n\t\tendpointUrl? : string;\n\t\tsessionName? : string;\n\t\tclientNonce? : Uint8Array;\n\t\tclientCertificate? : Uint8Array;\n\t\trequestedSessionTimeout? : ec.Double;\n\t\tmaxResponseMessageSize? : ec.UInt32;\n}\n\n/**\nCreates a new session with the server.\n*/\n\nexport class CreateSessionRequest {\n \t\trequestHeader : RequestHeader;\n\t\tclientDescription : ApplicationDescription;\n\t\tserverUri : string;\n\t\tendpointUrl : string;\n\t\tsessionName : string;\n\t\tclientNonce : Uint8Array;\n\t\tclientCertificate : Uint8Array;\n\t\trequestedSessionTimeout : ec.Double;\n\t\tmaxResponseMessageSize : ec.UInt32;\n\n\tconstructor(\toptions? : ICreateSessionRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.clientDescription= (options.clientDescription) ? options.clientDescription:new ApplicationDescription();\n\t\tthis.serverUri= (options.serverUri) ? options.serverUri:null;\n\t\tthis.endpointUrl= (options.endpointUrl) ? options.endpointUrl:null;\n\t\tthis.sessionName= (options.sessionName) ? options.sessionName:null;\n\t\tthis.clientNonce= (options.clientNonce) ? options.clientNonce:null;\n\t\tthis.clientCertificate= (options.clientCertificate) ? options.clientCertificate:null;\n\t\tthis.requestedSessionTimeout= (options.requestedSessionTimeout) ? options.requestedSessionTimeout:null;\n\t\tthis.maxResponseMessageSize= (options.maxResponseMessageSize) ? options.maxResponseMessageSize:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tthis.clientDescription.encode(out);\n\t\tec.encodeString(this.serverUri,out);\n\t\tec.encodeString(this.endpointUrl,out);\n\t\tec.encodeString(this.sessionName,out);\n\t\tec.encodeByteString(this.clientNonce,out);\n\t\tec.encodeByteString(this.clientCertificate,out);\n\t\tec.encodeDouble(this.requestedSessionTimeout,out);\n\t\tec.encodeUInt32(this.maxResponseMessageSize,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.clientDescription.decode(inp);\n\t\tthis.serverUri = ec.decodeString(inp);\n\t\tthis.endpointUrl = ec.decodeString(inp);\n\t\tthis.sessionName = ec.decodeString(inp);\n\t\tthis.clientNonce = ec.decodeByteString(inp);\n\t\tthis.clientCertificate = ec.decodeByteString(inp);\n\t\tthis.requestedSessionTimeout = ec.decodeDouble(inp);\n\t\tthis.maxResponseMessageSize = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CreateSessionRequest) : CreateSessionRequest { \n\t\tif(!target) {\n\t\t\ttarget = new CreateSessionRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\tif (this.clientDescription) { target.clientDescription = this.clientDescription.clone();}\n\t\ttarget.serverUri = this.serverUri;\n\t\ttarget.endpointUrl = this.endpointUrl;\n\t\ttarget.sessionName = this.sessionName;\n\t\ttarget.clientNonce = this.clientNonce;\n\t\ttarget.clientCertificate = this.clientCertificate;\n\t\ttarget.requestedSessionTimeout = this.requestedSessionTimeout;\n\t\ttarget.maxResponseMessageSize = this.maxResponseMessageSize;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCreateSessionRequest(\tinp : DataStream) : CreateSessionRequest { \n\t\tlet obj = new CreateSessionRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CreateSessionRequest\",CreateSessionRequest, makeExpandedNodeId(461,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ISignedSoftwareCertificate {\n\t\tcertificateData? : Uint8Array;\n\t\tsignature? : Uint8Array;\n}\n\n/**\nA software certificate with a digital signature.\n*/\n\nexport class SignedSoftwareCertificate {\n \t\tcertificateData : Uint8Array;\n\t\tsignature : Uint8Array;\n\n\tconstructor(\toptions? : ISignedSoftwareCertificate) { \n\t\toptions = options || {};\n\t\tthis.certificateData= (options.certificateData) ? options.certificateData:null;\n\t\tthis.signature= (options.signature) ? options.signature:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeByteString(this.certificateData,out);\n\t\tec.encodeByteString(this.signature,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.certificateData = ec.decodeByteString(inp);\n\t\tthis.signature = ec.decodeByteString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : SignedSoftwareCertificate) : SignedSoftwareCertificate { \n\t\tif(!target) {\n\t\t\ttarget = new SignedSoftwareCertificate();\n\t\t}\n\t\ttarget.certificateData = this.certificateData;\n\t\ttarget.signature = this.signature;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeSignedSoftwareCertificate(\tinp : DataStream) : SignedSoftwareCertificate { \n\t\tlet obj = new SignedSoftwareCertificate();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"SignedSoftwareCertificate\",SignedSoftwareCertificate, makeExpandedNodeId(346,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {EndpointDescription} from './EndpointDescription';\nimport {decodeEndpointDescription} from './EndpointDescription';\nimport {SignedSoftwareCertificate} from './SignedSoftwareCertificate';\nimport {decodeSignedSoftwareCertificate} from './SignedSoftwareCertificate';\nimport {SignatureData} from './SignatureData';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICreateSessionResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tsessionId? : ec.NodeId;\n\t\tauthenticationToken? : ec.NodeId;\n\t\trevisedSessionTimeout? : ec.Double;\n\t\tserverNonce? : Uint8Array;\n\t\tserverCertificate? : Uint8Array;\n\t\tserverEndpoints? : EndpointDescription[];\n\t\tserverSoftwareCertificates? : SignedSoftwareCertificate[];\n\t\tserverSignature? : SignatureData;\n\t\tmaxRequestMessageSize? : ec.UInt32;\n}\n\n/**\nCreates a new session with the server.\n*/\n\nexport class CreateSessionResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tsessionId : ec.NodeId;\n\t\tauthenticationToken : ec.NodeId;\n\t\trevisedSessionTimeout : ec.Double;\n\t\tserverNonce : Uint8Array;\n\t\tserverCertificate : Uint8Array;\n\t\tserverEndpoints : EndpointDescription[];\n\t\tserverSoftwareCertificates : SignedSoftwareCertificate[];\n\t\tserverSignature : SignatureData;\n\t\tmaxRequestMessageSize : ec.UInt32;\n\n\tconstructor(\toptions? : ICreateSessionResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.sessionId= (options.sessionId) ? options.sessionId:null;\n\t\tthis.authenticationToken= (options.authenticationToken) ? options.authenticationToken:null;\n\t\tthis.revisedSessionTimeout= (options.revisedSessionTimeout) ? options.revisedSessionTimeout:null;\n\t\tthis.serverNonce= (options.serverNonce) ? options.serverNonce:null;\n\t\tthis.serverCertificate= (options.serverCertificate) ? options.serverCertificate:null;\n\t\tthis.serverEndpoints= (options.serverEndpoints) ? options.serverEndpoints:[];\n\t\tthis.serverSoftwareCertificates= (options.serverSoftwareCertificates) ? options.serverSoftwareCertificates:[];\n\t\tthis.serverSignature= (options.serverSignature) ? options.serverSignature:new SignatureData();\n\t\tthis.maxRequestMessageSize= (options.maxRequestMessageSize) ? options.maxRequestMessageSize:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeNodeId(this.sessionId,out);\n\t\tec.encodeNodeId(this.authenticationToken,out);\n\t\tec.encodeDouble(this.revisedSessionTimeout,out);\n\t\tec.encodeByteString(this.serverNonce,out);\n\t\tec.encodeByteString(this.serverCertificate,out);\n\t\tec.encodeArray(this.serverEndpoints,out);\n\t\tec.encodeArray(this.serverSoftwareCertificates,out);\n\t\tthis.serverSignature.encode(out);\n\t\tec.encodeUInt32(this.maxRequestMessageSize,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.sessionId = ec.decodeNodeId(inp);\n\t\tthis.authenticationToken = ec.decodeNodeId(inp);\n\t\tthis.revisedSessionTimeout = ec.decodeDouble(inp);\n\t\tthis.serverNonce = ec.decodeByteString(inp);\n\t\tthis.serverCertificate = ec.decodeByteString(inp);\n\t\tthis.serverEndpoints = ec.decodeArray(inp,decodeEndpointDescription);\n\t\tthis.serverSoftwareCertificates = ec.decodeArray(inp,decodeSignedSoftwareCertificate);\n\t\tthis.serverSignature.decode(inp);\n\t\tthis.maxRequestMessageSize = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CreateSessionResponse) : CreateSessionResponse { \n\t\tif(!target) {\n\t\t\ttarget = new CreateSessionResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.sessionId = this.sessionId;\n\t\ttarget.authenticationToken = this.authenticationToken;\n\t\ttarget.revisedSessionTimeout = this.revisedSessionTimeout;\n\t\ttarget.serverNonce = this.serverNonce;\n\t\ttarget.serverCertificate = this.serverCertificate;\n\t\tif (this.serverEndpoints) { target.serverEndpoints = ec.cloneComplexArray(this.serverEndpoints);}\n\t\tif (this.serverSoftwareCertificates) { target.serverSoftwareCertificates = ec.cloneComplexArray(this.serverSoftwareCertificates);}\n\t\tif (this.serverSignature) { target.serverSignature = this.serverSignature.clone();}\n\t\ttarget.maxRequestMessageSize = this.maxRequestMessageSize;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCreateSessionResponse(\tinp : DataStream) : CreateSessionResponse { \n\t\tlet obj = new CreateSessionResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CreateSessionResponse\",CreateSessionResponse, makeExpandedNodeId(464,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport {SignatureData} from './SignatureData';\nimport {SignedSoftwareCertificate} from './SignedSoftwareCertificate';\nimport {decodeSignedSoftwareCertificate} from './SignedSoftwareCertificate';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IActivateSessionRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tclientSignature? : SignatureData;\n\t\tclientSoftwareCertificates? : SignedSoftwareCertificate[];\n\t\tlocaleIds? : string[];\n\t\tuserIdentityToken? : ec.ExtensionObject;\n\t\tuserTokenSignature? : SignatureData;\n}\n\n/**\nActivates a session with the server.\n*/\n\nexport class ActivateSessionRequest {\n \t\trequestHeader : RequestHeader;\n\t\tclientSignature : SignatureData;\n\t\tclientSoftwareCertificates : SignedSoftwareCertificate[];\n\t\tlocaleIds : string[];\n\t\tuserIdentityToken : ec.ExtensionObject;\n\t\tuserTokenSignature : SignatureData;\n\n\tconstructor(\toptions? : IActivateSessionRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.clientSignature= (options.clientSignature) ? options.clientSignature:new SignatureData();\n\t\tthis.clientSoftwareCertificates= (options.clientSoftwareCertificates) ? options.clientSoftwareCertificates:[];\n\t\tthis.localeIds= (options.localeIds) ? options.localeIds:[];\n\t\tthis.userIdentityToken= (options.userIdentityToken) ? options.userIdentityToken:null;\n\t\tthis.userTokenSignature= (options.userTokenSignature) ? options.userTokenSignature:new SignatureData();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tthis.clientSignature.encode(out);\n\t\tec.encodeArray(this.clientSoftwareCertificates,out);\n\t\tec.encodeArray(this.localeIds,out,ec.encodeString);\n\t\tec.encodeExtensionObject(this.userIdentityToken,out);\n\t\tthis.userTokenSignature.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.clientSignature.decode(inp);\n\t\tthis.clientSoftwareCertificates = ec.decodeArray(inp,decodeSignedSoftwareCertificate);\n\t\tthis.localeIds = ec.decodeArray(inp,ec.decodeString);\n\t\tthis.userIdentityToken = ec.decodeExtensionObject(inp);\n\t\tthis.userTokenSignature.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : ActivateSessionRequest) : ActivateSessionRequest { \n\t\tif(!target) {\n\t\t\ttarget = new ActivateSessionRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\tif (this.clientSignature) { target.clientSignature = this.clientSignature.clone();}\n\t\tif (this.clientSoftwareCertificates) { target.clientSoftwareCertificates = ec.cloneComplexArray(this.clientSoftwareCertificates);}\n\t\ttarget.localeIds = ec.cloneArray(this.localeIds);\n\t\ttarget.userIdentityToken = this.userIdentityToken;\n\t\tif (this.userTokenSignature) { target.userTokenSignature = this.userTokenSignature.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeActivateSessionRequest(\tinp : DataStream) : ActivateSessionRequest { \n\t\tlet obj = new ActivateSessionRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ActivateSessionRequest\",ActivateSessionRequest, makeExpandedNodeId(467,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DiagnosticInfo} from './DiagnosticInfo';\nimport {decodeDiagnosticInfo} from './DiagnosticInfo';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IActivateSessionResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tserverNonce? : Uint8Array;\n\t\tresults? : ec.StatusCode[];\n\t\tdiagnosticInfos? : DiagnosticInfo[];\n}\n\n/**\nActivates a session with the server.\n*/\n\nexport class ActivateSessionResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tserverNonce : Uint8Array;\n\t\tresults : ec.StatusCode[];\n\t\tdiagnosticInfos : DiagnosticInfo[];\n\n\tconstructor(\toptions? : IActivateSessionResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.serverNonce= (options.serverNonce) ? options.serverNonce:null;\n\t\tthis.results= (options.results) ? options.results:[];\n\t\tthis.diagnosticInfos= (options.diagnosticInfos) ? options.diagnosticInfos:[];\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeByteString(this.serverNonce,out);\n\t\tec.encodeArray(this.results,out,ec.encodeStatusCode);\n\t\tec.encodeArray(this.diagnosticInfos,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.serverNonce = ec.decodeByteString(inp);\n\t\tthis.results = ec.decodeArray(inp,ec.decodeStatusCode);\n\t\tthis.diagnosticInfos = ec.decodeArray(inp,decodeDiagnosticInfo);\n\n\t}\n\n\n\tclone(\ttarget? : ActivateSessionResponse) : ActivateSessionResponse { \n\t\tif(!target) {\n\t\t\ttarget = new ActivateSessionResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.serverNonce = this.serverNonce;\n\t\ttarget.results = ec.cloneArray(this.results);\n\t\tif (this.diagnosticInfos) { target.diagnosticInfos = ec.cloneComplexArray(this.diagnosticInfos);}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeActivateSessionResponse(\tinp : DataStream) : ActivateSessionResponse { \n\t\tlet obj = new ActivateSessionResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"ActivateSessionResponse\",ActivateSessionResponse, makeExpandedNodeId(470,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICloseSessionRequest {\n\t\trequestHeader? : RequestHeader;\n\t\tdeleteSubscriptions? : boolean;\n}\n\n/**\nCloses a session with the server.\n*/\n\nexport class CloseSessionRequest {\n \t\trequestHeader : RequestHeader;\n\t\tdeleteSubscriptions : boolean;\n\n\tconstructor(\toptions? : ICloseSessionRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.deleteSubscriptions= (options.deleteSubscriptions) ? options.deleteSubscriptions:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeBoolean(this.deleteSubscriptions,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.deleteSubscriptions = ec.decodeBoolean(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CloseSessionRequest) : CloseSessionRequest { \n\t\tif(!target) {\n\t\t\ttarget = new CloseSessionRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.deleteSubscriptions = this.deleteSubscriptions;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCloseSessionRequest(\tinp : DataStream) : CloseSessionRequest { \n\t\tlet obj = new CloseSessionRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CloseSessionRequest\",CloseSessionRequest, makeExpandedNodeId(473,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport {DataStream} from '../basic-types/DataStream';\nimport * as ec from '../basic-types';\n\nexport interface ICloseSessionResponse {\n\t\tresponseHeader? : ResponseHeader;\n}\n\n/**\nCloses a session with the server.\n*/\n\nexport class CloseSessionResponse {\n \t\tresponseHeader : ResponseHeader;\n\n\tconstructor(\toptions? : ICloseSessionResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CloseSessionResponse) : CloseSessionResponse { \n\t\tif(!target) {\n\t\t\ttarget = new CloseSessionResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCloseSessionResponse(\tinp : DataStream) : CloseSessionResponse { \n\t\tlet obj = new CloseSessionResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CloseSessionResponse\",CloseSessionResponse, makeExpandedNodeId(476,0));","\n\nimport {RequestHeader} from './RequestHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICancelRequest {\n\t\trequestHeader? : RequestHeader;\n\t\trequestHandle? : ec.UInt32;\n}\n\n/**\nCancels an outstanding request.\n*/\n\nexport class CancelRequest {\n \t\trequestHeader : RequestHeader;\n\t\trequestHandle : ec.UInt32;\n\n\tconstructor(\toptions? : ICancelRequest) { \n\t\toptions = options || {};\n\t\tthis.requestHeader= (options.requestHeader) ? options.requestHeader:new RequestHeader();\n\t\tthis.requestHandle= (options.requestHandle) ? options.requestHandle:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.requestHeader.encode(out);\n\t\tec.encodeUInt32(this.requestHandle,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.requestHeader.decode(inp);\n\t\tthis.requestHandle = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CancelRequest) : CancelRequest { \n\t\tif(!target) {\n\t\t\ttarget = new CancelRequest();\n\t\t}\n\t\tif (this.requestHeader) { target.requestHeader = this.requestHeader.clone();}\n\t\ttarget.requestHandle = this.requestHandle;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCancelRequest(\tinp : DataStream) : CancelRequest { \n\t\tlet obj = new CancelRequest();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CancelRequest\",CancelRequest, makeExpandedNodeId(479,0));","\n\nimport {ResponseHeader} from './ResponseHeader';\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface ICancelResponse {\n\t\tresponseHeader? : ResponseHeader;\n\t\tcancelCount? : ec.UInt32;\n}\n\n/**\nCancels an outstanding request.\n*/\n\nexport class CancelResponse {\n \t\tresponseHeader : ResponseHeader;\n\t\tcancelCount : ec.UInt32;\n\n\tconstructor(\toptions? : ICancelResponse) { \n\t\toptions = options || {};\n\t\tthis.responseHeader= (options.responseHeader) ? options.responseHeader:new ResponseHeader();\n\t\tthis.cancelCount= (options.cancelCount) ? options.cancelCount:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tthis.responseHeader.encode(out);\n\t\tec.encodeUInt32(this.cancelCount,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.responseHeader.decode(inp);\n\t\tthis.cancelCount = ec.decodeUInt32(inp);\n\n\t}\n\n\n\tclone(\ttarget? : CancelResponse) : CancelResponse { \n\t\tif(!target) {\n\t\t\ttarget = new CancelResponse();\n\t\t}\n\t\tif (this.responseHeader) { target.responseHeader = this.responseHeader.clone();}\n\t\ttarget.cancelCount = this.cancelCount;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeCancelResponse(\tinp : DataStream) : CancelResponse { \n\t\tlet obj = new CancelResponse();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"CancelResponse\",CancelResponse, makeExpandedNodeId(482,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\n\nexport interface IUserIdentityToken {\n\t\tpolicyId? : string;\n}\n\n/**\nA base type for a user identity token.\n*/\n\nexport class UserIdentityToken {\n \t\tpolicyId : string;\n\n\tconstructor(\toptions? : IUserIdentityToken) { \n\t\toptions = options || {};\n\t\tthis.policyId= (options.policyId) ? options.policyId:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tec.encodeString(this.policyId,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tthis.policyId = ec.decodeString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : UserIdentityToken) : UserIdentityToken { \n\t\tif(!target) {\n\t\t\ttarget = new UserIdentityToken();\n\t\t}\n\t\ttarget.policyId = this.policyId;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeUserIdentityToken(\tinp : DataStream) : UserIdentityToken { \n\t\tlet obj = new UserIdentityToken();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"UserIdentityToken\",UserIdentityToken, makeExpandedNodeId(318,0));","\n\nimport {DataStream} from '../basic-types/DataStream';\nimport {UserIdentityToken} from './UserIdentityToken';\nimport {IUserIdentityToken} from './UserIdentityToken';\n\nexport interface IAnonymousIdentityToken extends IUserIdentityToken {\n}\n\n/**\nA token representing an anonymous user.\n*/\n\nexport class AnonymousIdentityToken extends UserIdentityToken {\n \n\tconstructor(\toptions? : IAnonymousIdentityToken) { \n\t\toptions = options || {};\n\t\tsuper(options);\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tsuper.encode(out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tsuper.decode(inp);\n\n\t}\n\n\n\tclone(\ttarget? : AnonymousIdentityToken) : AnonymousIdentityToken { \n\t\tif(!target) {\n\t\t\ttarget = new AnonymousIdentityToken();\n\t\t}\n\t\tsuper.clone(target);\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeAnonymousIdentityToken(\tinp : DataStream) : AnonymousIdentityToken { \n\t\tlet obj = new AnonymousIdentityToken();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"AnonymousIdentityToken\",AnonymousIdentityToken, makeExpandedNodeId(321,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\nimport {UserIdentityToken} from './UserIdentityToken';\nimport {IUserIdentityToken} from './UserIdentityToken';\n\nexport interface IUserNameIdentityToken extends IUserIdentityToken {\n\t\tuserName? : string;\n\t\tpassword? : Uint8Array;\n\t\tencryptionAlgorithm? : string;\n}\n\n/**\nA token representing a user identified by a user name and password.\n*/\n\nexport class UserNameIdentityToken extends UserIdentityToken {\n \t\tuserName : string;\n\t\tpassword : Uint8Array;\n\t\tencryptionAlgorithm : string;\n\n\tconstructor(\toptions? : IUserNameIdentityToken) { \n\t\toptions = options || {};\n\t\tsuper(options);\n\t\tthis.userName= (options.userName) ? options.userName:null;\n\t\tthis.password= (options.password) ? options.password:null;\n\t\tthis.encryptionAlgorithm= (options.encryptionAlgorithm) ? options.encryptionAlgorithm:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tsuper.encode(out);\n\t\tec.encodeString(this.userName,out);\n\t\tec.encodeByteString(this.password,out);\n\t\tec.encodeString(this.encryptionAlgorithm,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tsuper.decode(inp);\n\t\tthis.userName = ec.decodeString(inp);\n\t\tthis.password = ec.decodeByteString(inp);\n\t\tthis.encryptionAlgorithm = ec.decodeString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : UserNameIdentityToken) : UserNameIdentityToken { \n\t\tif(!target) {\n\t\t\ttarget = new UserNameIdentityToken();\n\t\t}\n\t\tsuper.clone(target);\n\t\ttarget.userName = this.userName;\n\t\ttarget.password = this.password;\n\t\ttarget.encryptionAlgorithm = this.encryptionAlgorithm;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeUserNameIdentityToken(\tinp : DataStream) : UserNameIdentityToken { \n\t\tlet obj = new UserNameIdentityToken();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"UserNameIdentityToken\",UserNameIdentityToken, makeExpandedNodeId(324,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\nimport {UserIdentityToken} from './UserIdentityToken';\nimport {IUserIdentityToken} from './UserIdentityToken';\n\nexport interface IX509IdentityToken extends IUserIdentityToken {\n\t\tcertificateData? : Uint8Array;\n}\n\n/**\nA token representing a user identified by an X509 certificate.\n*/\n\nexport class X509IdentityToken extends UserIdentityToken {\n \t\tcertificateData : Uint8Array;\n\n\tconstructor(\toptions? : IX509IdentityToken) { \n\t\toptions = options || {};\n\t\tsuper(options);\n\t\tthis.certificateData= (options.certificateData) ? options.certificateData:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tsuper.encode(out);\n\t\tec.encodeByteString(this.certificateData,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tsuper.decode(inp);\n\t\tthis.certificateData = ec.decodeByteString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : X509IdentityToken) : X509IdentityToken { \n\t\tif(!target) {\n\t\t\ttarget = new X509IdentityToken();\n\t\t}\n\t\tsuper.clone(target);\n\t\ttarget.certificateData = this.certificateData;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeX509IdentityToken(\tinp : DataStream) : X509IdentityToken { \n\t\tlet obj = new X509IdentityToken();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"X509IdentityToken\",X509IdentityToken, makeExpandedNodeId(327,0));","\n\nimport * as ec from '../basic-types';\nimport {DataStream} from '../basic-types/DataStream';\nimport {UserIdentityToken} from './UserIdentityToken';\nimport {IUserIdentityToken} from './UserIdentityToken';\n\nexport interface IIssuedIdentityToken extends IUserIdentityToken {\n\t\ttokenData? : Uint8Array;\n\t\tencryptionAlgorithm? : string;\n}\n\n/**\nA token representing a user identified by a WS-Security XML token.\n*/\n\nexport class IssuedIdentityToken extends UserIdentityToken {\n \t\ttokenData : Uint8Array;\n\t\tencryptionAlgorithm : string;\n\n\tconstructor(\toptions? : IIssuedIdentityToken) { \n\t\toptions = options || {};\n\t\tsuper(options);\n\t\tthis.tokenData= (options.tokenData) ? options.tokenData:null;\n\t\tthis.encryptionAlgorithm= (options.encryptionAlgorithm) ? options.encryptionAlgorithm:null;\n\n\t}\n\n\n\tencode(\tout : DataStream) { \n\t\tsuper.encode(out);\n\t\tec.encodeByteString(this.tokenData,out);\n\t\tec.encodeString(this.encryptionAlgorithm,out);\n\n\t}\n\n\n\tdecode(\tinp : DataStream) { \n\t\tsuper.decode(inp);\n\t\tthis.tokenData = ec.decodeByteString(inp);\n\t\tthis.encryptionAlgorithm = ec.decodeString(inp);\n\n\t}\n\n\n\tclone(\ttarget? : IssuedIdentityToken) : IssuedIdentityToken { \n\t\tif(!target) {\n\t\t\ttarget = new IssuedIdentityToken();\n\t\t}\n\t\tsuper.clone(target);\n\t\ttarget.tokenData = this.tokenData;\n\t\ttarget.encryptionAlgorithm = this.encryptionAlgorithm;\n\t\treturn target;\n\t}\n\n\n}\nexport function decodeIssuedIdentityToken(\tinp : DataStream) : IssuedIdentityToken { \n\t\tlet obj = new IssuedIdentityToken();\n\t\t\tobj.decode(inp); \n\t\t\treturn obj;\n\n\t}\n\n\n\nimport {register_class_definition} from \"../factory/factories_factories\";\nimport { makeExpandedNodeId } from '../nodeid/expanded_nodeid';\nregister_class_definition(\"IssuedIdentityToken\",IssuedIdentityToken, makeExpandedNodeId(940,0));","\"use strict\";\r\n/**\r\n * @module opcua.client\r\n */\r\n\r\n\r\nimport {assert} from '../assert';\r\n \r\nvar crypto : Crypto = window.crypto || (<any>window).msCrypto; // for IE 11\r\nimport async_map from \"async-es/map\";\r\nimport async_series from \"async-es/series\";\r\n//**nomsgcrypt** var exploreCertificate = require(\"node-opcua-crypto\").crypto_explore_certificate.exploreCertificate;\r\n\r\nimport {StatusCodes} from '../constants';\r\nimport * as session_service from '../service-session';\r\nimport {ClientSubscription} from './ClientSubscription';\r\n\r\nvar AnonymousIdentityToken = session_service.AnonymousIdentityToken;\r\nvar CreateSessionRequest = session_service.CreateSessionRequest;\r\nvar CreateSessionResponse = session_service.CreateSessionResponse;\r\nvar ActivateSessionRequest = session_service.ActivateSessionRequest;\r\nvar ActivateSessionResponse = session_service.ActivateSessionResponse;\r\nvar CloseSessionRequest = session_service.CloseSessionRequest;\r\n\r\nimport * as endpoints_service from \"../service-endpoints\";\r\nvar ApplicationDescription = endpoints_service.ApplicationDescription;\r\nvar ApplicationType = endpoints_service.ApplicationType;\r\nvar EndpointDescription = endpoints_service.EndpointDescription;\r\n\r\nimport {MessageSecurityMode, SignatureData} from \"../service-secure-channel\";\r\nimport {SecurityPolicy,getCryptoFactory,fromURI} from '../secure-channel/security_policy';\r\nimport { LocalizedText } from \"../generated/LocalizedText\";\r\n\r\n//**nomsgcrypt** var crypto_utils = require(\"node-opcua-crypto\").crypto_utils;\r\nvar UserNameIdentityToken = session_service.UserNameIdentityToken;\r\n\r\nimport {computeSignature} from '../secure-channel';\r\n\r\nimport {UserIdentityTokenType} from '../service-endpoints';\r\n\r\nimport {ClientSession} from './client_session';\r\n\r\nimport * as utils from '../utils';\r\nimport {doDebug,debugLog} from '../common/debug';\r\n\r\nimport {OPCUAClientBase,OPCUAClientOptions} from './client_base';\r\nimport {isNullOrUndefined} from '../utils';\r\n\r\nimport {makeApplicationUrn} from \"../common/applicationurn\";\r\nimport { UserIdentityToken } from \"../generated/UserIdentityToken\";\r\nimport { stringToUint8Array } from \"../basic-types/DataStream\";\r\n\r\nexport interface UserIdentityInfo {\r\n    userName?: string,\r\n    password?: string\r\n}\r\n\r\nfunction validateServerNonce(serverNonce) {\r\n    return (serverNonce && serverNonce.length < 32) ? false : true;\r\n}\r\n\r\n/**\r\n * @class OPCUAClient\r\n * @extends OPCUAClientBase\r\n * @param options\r\n * @param [options.securityMode=MessageSecurityMode.None] {MessageSecurityMode} the default security mode.\r\n * @param [options.securityPolicy =SecurityPolicy.NONE] {SecurityPolicy} the security mode.\r\n * @param [options.requestedSessionTimeout= 60000]            {Number} the requested session time out in CreateSession\r\n * @param [options.applicationName=\"NodeOPCUA-Client\"]        {string} the client application name\r\n * @param [options.endpoint_must_exist=true] {Boolean} set to false if the client should accept server endpoint mismatch\r\n * @param [options.keepSessionAlive=false]{Boolean}\r\n * @param [options.certificateFile=\"certificates/client_selfsigned_cert_1024.pem\"] {String} client certificate pem file.\r\n * @param [options.privateKeyFile=\"certificates/client_key_1024.pem\"] {String} client private key pem file.\r\n * @param [options.clientName=\"\"] {String} a client name string that will be used to generate session names.\r\n * @constructor\r\n */\r\nexport class OPCUAClient extends OPCUAClientBase {\r\n   \r\n    protected _clientNonce: any;\r\n    protected _userIdentityInfo: UserIdentityInfo;\r\n    protected _serverUri: string;\r\n    private ___sessionName_counter: any;\r\n    applicationName: any;\r\n    requestedSessionTimeout: any;\r\n    endpoint_must_exist: boolean;\r\n    clientName : string;\r\n\r\n    get clientNonce() {\r\n        return this._clientNonce;\r\n    }\r\nconstructor(options : OPCUAClientOptions) {\r\n    super(options);\r\n    options = options || {};\r\n\r\n    // @property endpoint_must_exist {Boolean}\r\n    // if set to true , create Session will only accept connection from server which endpoint_url has been reported\r\n    // by GetEndpointsRequest.\r\n    // By default, the client is strict.\r\n    this.endpoint_must_exist = (isNullOrUndefined(options.endpoint_must_exist)) ? true : !!options.endpoint_must_exist;\r\n    this.requestedSessionTimeout = options.requestedSessionTimeout || 60000; // 1 minute\r\n    this.applicationName = options.applicationName || \"NodeOPCUA-Client\";\r\n    this.clientName = options.clientName || \"Session\";\r\n\r\n}\r\n\r\n\r\nprotected _nextSessionName() {\r\n    if (!this.___sessionName_counter) {\r\n        this.___sessionName_counter = 0;\r\n    }\r\n    this.___sessionName_counter += 1;\r\n    return this.clientName + this.___sessionName_counter;\r\n};\r\n\r\nprotected _getApplicationUri() : Promise<string> {\r\n\r\n    // get applicationURI from certificate\r\n\r\n/**nomsgcrypt**\r\n    var certificate = this.getCertificate();\r\n    var applicationUri;\r\n    if (certificate) {\r\n        var e = exploreCertificate(certificate);\r\n        applicationUri = e.tbsCertificate.extensions.subjectAltName.uniformResourceIdentifier[0];\r\n    } else {\r\n        var hostname = require(\"node-opcua-hostname\").get_fully_qualified_domain_name();\r\n        applicationUri = makeApplicationUrn(hostname, this.applicationName);\r\n    }\r\n    return applicationUri;\r\n*/\r\n    return  makeApplicationUrn(window.location.hostname, this.applicationName);\r\n\r\n};\r\n\r\n\r\nprotected __resolveEndPoint() {\r\n\r\n    this.securityPolicy = this.securityPolicy || SecurityPolicy.None;\r\n\r\n    var endpoint = this.findEndpoint(this._secureChannel.endpointUrl, this.securityMode, this.securityPolicy);\r\n    this.endpoint = endpoint;\r\n\r\n\r\n    // this is explained here : see OPCUA Part 4 Version 1.02 $5.4.1 page 12:\r\n    //   A  Client  shall verify the  HostName  specified in the  Server Certificate  is the same as the  HostName\r\n    //   contained in the  endpointUrl  provided in the  EndpointDescription. If there is a difference  then  the\r\n    //   Client  shall report the difference and may close the  SecureChannel.\r\n\r\n    if (!this.endpoint) {\r\n        if (this.endpoint_must_exist) {\r\n            debugLog(\"OPCUAClient#endpoint_must_exist = true and endpoint with url \", this._secureChannel.endpointUrl, \" cannot be found\");\r\n            return false;\r\n        } else {\r\n            // fallback :\r\n            // our strategy is to take the first server_end_point that match the security settings\r\n            // ( is this really OK ?)\r\n            // this will permit us to access a OPCUA Server using it's IP address instead of its hostname\r\n\r\n            endpoint = this.findEndpointForSecurity(this.securityMode, this.securityPolicy);\r\n            if (!endpoint) {\r\n                return false;\r\n            }\r\n            this.endpoint = endpoint;\r\n        }\r\n    }\r\n    return true;\r\n};\r\n\r\nprotected _createSession(callback) {\r\n    assert(typeof callback === \"function\");\r\n    assert(this._secureChannel);\r\n    if (!this.__resolveEndPoint() || !this.endpoint) {\r\n        console.log(this._server_endpoints.map(function (endpoint){\r\n           return endpoint.endpointUrl + \" \" + endpoint.securityMode.toString() + \" \" + endpoint.securityPolicyUri;\r\n        }));\r\n        return callback(new Error(\" End point must exist \" + this._secureChannel.endpointUrl));\r\n    }\r\n    this._serverUri = this.endpoint.server.applicationUri;\r\n    this._endpointUrl = this._secureChannel.endpointUrl;\r\n\r\n    var session = new ClientSession(this);\r\n    this.__createSession_step2(session, callback);\r\n};\r\n\r\nprotected async __createSession_step2(session : ClientSession, callback) {\r\n\r\n    assert(typeof callback === \"function\");\r\n    assert(this._secureChannel);\r\n    assert(this._serverUri, \" must have a valid server URI\");\r\n    assert(this._endpointUrl, \" must have a valid server endpointUrl\");\r\n    assert(this.endpoint);\r\n\r\n\r\n    let applicationUri = await this._getApplicationUri();\r\n\r\n    var applicationDescription = new ApplicationDescription({\r\n        applicationUri: applicationUri,\r\n        productUri: \"OPCUA-Client\",\r\n        applicationName: new LocalizedText({text: this.applicationName}),\r\n        applicationType: ApplicationType.Client,\r\n        gatewayServerUri: undefined,\r\n        discoveryProfileUri: undefined,\r\n        discoveryUrls: []\r\n    });\r\n\r\n    // note : do not confuse CreateSessionRequest.clientNonce with OpenSecureChannelRequest.clientNonce\r\n    //        which are two different nonce, with different size (although they share the same name )\r\n    this._clientNonce = crypto.getRandomValues(new Uint8Array(32));//randomBytes(32);\r\n\r\n    var request = new CreateSessionRequest({\r\n        clientDescription: applicationDescription,\r\n        serverUri: this._serverUri,\r\n        endpointUrl: this.endpointUrl,\r\n        sessionName: this._nextSessionName(),\r\n        clientNonce: this._clientNonce,\r\n        clientCertificate: this.getCertificate(),\r\n        requestedSessionTimeout: this.requestedSessionTimeout,\r\n        maxResponseMessageSize: 800000\r\n    });\r\n\r\n    // a client Nonce must be provided if security mode is set\r\n    assert(this._secureChannel.securityMode === MessageSecurityMode.None || request.clientNonce !== null);\r\n\r\n    this.performMessageTransaction(request , (err, response : session_service.CreateSessionResponse) => {\r\n\r\n        if (!err) {\r\n            //xx console.log(\"xxxxx response\",response.toString());\r\n            //xx console.log(\"xxxxx response\",response.responseHeader.serviceResult);\r\n            if (response.responseHeader.serviceResult === StatusCodes.BadTooManySessions) {\r\n                err = new Error(\"Too Many Sessions : \" + response.responseHeader.serviceResult.toString());\r\n\r\n            } else if (response.responseHeader.serviceResult === StatusCodes.Good) {\r\n\r\n                assert(response instanceof CreateSessionResponse);\r\n\r\n                // istanbul ignore next\r\n                if (!validateServerNonce(response.serverNonce)) {\r\n                    return callback(new Error(\"invalid server Nonce\"));\r\n                }\r\n\r\n                // todo: verify SignedSoftwareCertificates and  response.serverSignature\r\n\r\n                session = session || new ClientSession(this);\r\n                session.name = request.sessionName;\r\n                session.sessionId = response.sessionId;\r\n                session.authenticationToken = response.authenticationToken;\r\n                session.timeout = response.revisedSessionTimeout;\r\n                session.serverNonce = response.serverNonce;\r\n                session.serverCertificate = response.serverCertificate;\r\n                session.serverSignature = response.serverSignature;\r\n\r\n                debugLog(\"revised session timeout = \" + session.timeout);\r\n\r\n                this._server_endpoints = response.serverEndpoints;\r\n//                session.serverEndpoints = response.serverEndpoints;\r\n\r\n            } else {\r\n                err = new Error(\"Error \" + response.responseHeader.serviceResult.name + \" \" + response.responseHeader.serviceResult.description);\r\n            }\r\n        }\r\n        if (err) {\r\n            callback(err);\r\n        } else {\r\n            callback(null, session);\r\n        }\r\n    });\r\n\r\n};\r\n\r\npublic computeClientSignature(channel, serverCertificate, serverNonce) : SignatureData{\r\n    return computeSignature(serverCertificate, serverNonce, this.getPrivateKey(), channel.messageBuilder.securityPolicy);\r\n};\r\n\r\n\r\npublic createUserIdentityToken(session : ClientSession, userIdentityToken : UserIdentityToken|UserIdentityInfo, callback) {\r\n    assert('function' === typeof callback);\r\n\r\n\r\n    if (isAnonymous(this._userIdentityInfo)) {\r\n\r\n        try {\r\n            userIdentityToken = createAnonymousIdentityToken(session);\r\n            return callback(null, userIdentityToken);\r\n        }\r\n        catch (err) {\r\n            return callback(err);\r\n        }\r\n\r\n    } else if (isUserNamePassword(this._userIdentityInfo)) {\r\n\r\n        var userName = this._userIdentityInfo.userName;\r\n        var password = this._userIdentityInfo.password;\r\n\r\n        try {\r\n            userIdentityToken = createUserNameIdentityToken(session, userName, password);\r\n            return callback(null, userIdentityToken);\r\n        }\r\n        catch (err) {\r\n            //xx console.log(err.stack);\r\n            return callback(err);\r\n        }\r\n    } else {\r\n        console.log(\" userIdentityToken = \", userIdentityToken);\r\n        return callback(new Error(\"CLIENT: Invalid userIdentityToken\"));\r\n    }\r\n};\r\n\r\n\r\n// see OPCUA Part 4 - $7.35\r\nprotected _activateSession(session : ClientSession, callback) {\r\n\r\n    assert(typeof callback === \"function\");\r\n   \r\n\r\n    // istanbul ignore next\r\n    if (!this._secureChannel) {\r\n        return callback(new Error(\" No secure channel\"));\r\n    }\r\n\r\n    var serverCertificate = session.serverCertificate;\r\n    // If the securityPolicyUri is NONE and none of the UserTokenPolicies requires encryption,\r\n    // the Client shall ignore the ApplicationInstanceCertificate (serverCertificate)\r\n    assert(serverCertificate === null || serverCertificate instanceof Uint8Array );\r\n\r\n    var serverNonce = session.serverNonce;\r\n    assert(!serverNonce || serverNonce instanceof Uint8Array);\r\n\r\n    // make sure session is attached to this client\r\n    var _old_client = session.client;\r\n    session.client = this;\r\n\r\n    this.createUserIdentityToken(session, this._userIdentityInfo, (err, userIdentityToken) => {\r\n\r\n        if (err) {\r\n            session.client = _old_client;\r\n            return callback(err);\r\n        }\r\n\r\n        // TODO. fill the ActivateSessionRequest\r\n        // see 5.6.3.2 Parameters OPC Unified Architecture, Part 4 30 Release 1.02\r\n        var request = new ActivateSessionRequest({\r\n\r\n            // This is a signature generated with the private key associated with the\r\n            // clientCertificate. The SignatureAlgorithm shall be the AsymmetricSignatureAlgorithm\r\n            // specified in the SecurityPolicy for the Endpoint. The SignatureData type is defined in 7.30.\r\n\r\n            clientSignature: this.computeClientSignature(this._secureChannel, serverCertificate, serverNonce),\r\n\r\n            // These are the SoftwareCertificates which have been issued to the Client application. The productUri contained\r\n            // in the SoftwareCertificates shall match the productUri in the ApplicationDescription passed by the Client in\r\n            // the CreateSession requests. Certificates without matching productUri should be ignored.  Servers may reject\r\n            // connections from Clients if they are not satisfied with the SoftwareCertificates provided by the Client.\r\n            // This parameter only needs to be specified in the first ActivateSession request after CreateSession.\r\n            // It shall always be omitted if the maxRequestMessageSize returned from the Server in the CreateSession\r\n            // response is less than one megabyte. The SignedSoftwareCertificate type is defined in 7.31.\r\n\r\n            clientSoftwareCertificates: [],\r\n\r\n            // List of locale ids in priority order for localized strings. The first LocaleId in the list has the highest\r\n            // priority. If the Server returns a localized string to the Client, the Server shall return the translation\r\n            // with the highest priority that it can. If it does not have a translation for any of the locales identified\r\n            // in this list, then it shall return the string value that it has and include the locale id with the string.\r\n            // See Part 3 for more detail on locale ids. If the Client fails to specify at least one locale id, the Server\r\n            // shall use any that it has.\r\n            // This parameter only needs to be specified during the first call to ActivateSession during a single\r\n            // application Session. If it is not specified the Server shall keep using the current localeIds for the Session.\r\n            localeIds: [],\r\n\r\n            // The credentials of the user associated with the Client application. The Server uses these credentials to\r\n            // determine whether the Client should be allowed to activate a Session and what resources the Client has access\r\n            // to during this Session. The UserIdentityToken is an extensible parameter type defined in 7.35.\r\n            // The EndpointDescription specifies what UserIdentityTokens the Server shall accept.\r\n            userIdentityToken: userIdentityToken,\r\n\r\n            // If the Client specified a user   identity token that supports digital signatures,\r\n            // then it shall create a signature and pass it as this parameter. Otherwise the parameter is omitted.\r\n            // The SignatureAlgorithm depends on the identity token type.\r\n            userTokenSignature: new SignatureData({\r\n                algorithm: null,\r\n                signature: null\r\n            })\r\n\r\n        });\r\n\r\n        session.performMessageTransaction(request, function (err, response) {\r\n\r\n            if (!err && response.responseHeader.serviceResult === StatusCodes.Good) {\r\n\r\n                assert(response instanceof ActivateSessionResponse);\r\n\r\n                session.serverNonce = response.serverNonce;\r\n\r\n                if (!validateServerNonce(session.serverNonce)) {\r\n                    return callback(new Error(\"Invalid server Nonce\"));\r\n                }\r\n                return callback(null, session);\r\n\r\n            } else {\r\n\r\n                err = err || new Error(response.responseHeader.serviceResult.toString());\r\n                session.client = _old_client;\r\n                return callback(err, null);\r\n            }\r\n        });\r\n\r\n    });\r\n\r\n};\r\n\r\n\r\n/**\r\n * transfer session to this client\r\n * @method reactivateSession\r\n * @param session\r\n * @param callback\r\n * @return {*}\r\n */\r\npublic reactivateSession(session : ClientSession, callback) {\r\n\r\n\r\n    assert(typeof callback === \"function\");\r\n    assert(this._secureChannel, \" client must be connected first\");\r\n\r\n    // istanbul ignore next\r\n    if (!this.__resolveEndPoint() || !this.endpoint) {\r\n        return callback(new Error(\" End point must exist \" + this._secureChannel.endpointUrl));\r\n    }\r\n\r\n    assert(session.client.endpointUrl === this.endpointUrl, \"cannot reactivateSession on a different endpoint\");\r\n    let old_client : OPCUAClientBase = session.client;\r\n\r\n    debugLog(\"OPCUAClient#reactivateSession\");\r\n\r\n    this._activateSession(session, (err) => {\r\n        if (!err) {\r\n\r\n            if (old_client !== this) {\r\n                // remove session from old client:\r\n                (<any>old_client)._removeSession(session); //cast to any as access of protected member to other instance should be possible\r\n                assert((<any>old_client)._sessions.indexOf(session) < 0/*!_.contains( (<any>old_client)._sessions, session*/);\r\n\r\n                this._addSession(session);\r\n                \r\n                assert(this._sessions.indexOf(session) >= 0 /*_.contains(this._sessions, session)*/);\r\n            }\r\n\r\n        } else {\r\n\r\n            // istanbul ignore next\r\n            if (doDebug) {\r\n                console.log(\"reactivateSession has failed !\", err);\r\n            }\r\n        }\r\n        callback(err);\r\n    });\r\n};\r\n/**\r\n * create and activate a new session\r\n * @async\r\n * @method createSession\r\n *\r\n * @param [userIdentityInfo {Object} ] optional\r\n * @param [userIdentityInfo.userName {String} ]\r\n * @param [userIdentityInfo.password {String} ]\r\n *\r\n * @param callback {Function}\r\n * @param callback.err     {Error|null}   - the Error if the async method has failed\r\n * @param callback.session {ClientSession} - the created session object.\r\n *\r\n *\r\n * @example :\r\n *     // create a anonymous session\r\n *     client.createSession(function(err,session) {\r\n *       if (err) {} else {}\r\n *     });\r\n *\r\n * @example :\r\n *     // create a session with a userName and password\r\n *     client.createSession({userName: \"JoeDoe\", password:\"secret\"}, function(err,session) {\r\n *       if (err) {} else {}\r\n *     });\r\n *\r\n */\r\npublic createSession(userIdentityInfo : UserIdentityInfo, callback : (err : Error,session? : ClientSession) => void) {\r\n\r\n    if ('function' === typeof userIdentityInfo) {\r\n        (<any>callback) = userIdentityInfo;\r\n        userIdentityInfo = {};\r\n    }\r\n\r\n    this._userIdentityInfo = userIdentityInfo;\r\n\r\n    assert('function' === typeof callback);\r\n\r\n    this._createSession( (err, session) =>{\r\n        if (err) {\r\n            callback(err);\r\n        } else {\r\n\r\n            this._addSession(session);\r\n\r\n            this._activateSession(session, function (err) {\r\n                callback(err, session);\r\n            });\r\n        }\r\n    });\r\n};\r\n\r\n\r\n/**\r\n * @method changeSessionIdentity\r\n * @param session\r\n * @param userIdentityInfo\r\n * @param callback\r\n * @async\r\n */\r\npublic changeSessionIdentity(session, userIdentityInfo, callback) {\r\n\r\n    assert('function' === typeof callback);\r\n\r\n    var old_userIdentity = this._userIdentityInfo;\r\n    this._userIdentityInfo = userIdentityInfo;\r\n\r\n    this._activateSession(session, function (err) {\r\n        callback(err);\r\n    });\r\n\r\n\r\n};\r\n\r\n\r\nprotected _closeSession = function (session : ClientSession, deleteSubscriptions : boolean, callback) {\r\n\r\n    assert('function' === typeof callback);\r\n    //assert(_.isBoolean(deleteSubscriptions));\r\n\r\n    // istanbul ignore next\r\n    if (!this._secureChannel) {\r\n        return callback(new Error(\"no channel\"));\r\n    }\r\n    assert(this._secureChannel);\r\n\r\n    var request = new CloseSessionRequest({\r\n        deleteSubscriptions: deleteSubscriptions\r\n    });\r\n\r\n    if (!this._secureChannel.isValid()) {\r\n        return callback();\r\n    }\r\n    session.performMessageTransaction(request, function (err, response) {\r\n\r\n        if (err) {\r\n            //xx console.log(\"xxx received : \", err, response);\r\n            //xx self._secureChannel.close(function () {\r\n            //xx     callback(err, null);\r\n            //xx });\r\n            callback(err, null);\r\n        } else {\r\n            callback(err, response);\r\n        }\r\n    });\r\n};\r\n\r\n/**\r\n *\r\n * @method closeSession\r\n * @async\r\n * @param session  {ClientSession} - the created client session\r\n * @param deleteSubscriptions  {Boolean} - whether to delete subscriptions or not\r\n * @param callback {Function} - the callback\r\n * @param callback.err {Error|null}   - the Error if the async method has failed\r\n */\r\npublic closeSession(session : ClientSession, deleteSubscriptions : boolean, callback : Function) {\r\n\r\n   \r\n    //assert(_.isBoolean(deleteSubscriptions));\r\n    assert('function' === typeof callback);\r\n    assert(session);\r\n    assert(session.client === this, \"session must be attached to self\");\r\n    session.closed = true;\r\n    //todo : send close session on secure channel\r\n    this._closeSession(session, deleteSubscriptions,  (err) => {\r\n\r\n        session.emitCloseEvent();\r\n\r\n        this._removeSession(session);\r\n        assert(this._sessions.indexOf(session) < 0);\r\n        assert(session.closed, \"session must indicate it is closed\");\r\n\r\n        callback(err);\r\n    });\r\n};\r\n\r\nprotected _ask_for_subscription_republish(session : ClientSession, callback : Function) {\r\n\r\n    debugLog(\"_ask_for_subscription_republish \");\r\n    //xx assert(session.getPublishEngine().nbPendingPublishRequests === 0, \"at this time, publish request queue shall still be empty\");\r\n    session.getPublishEngine().republish((err) =>{\r\n        debugLog(\"_ask_for_subscription_republish done\");\r\n        // xx assert(session.getPublishEngine().nbPendingPublishRequests === 0);\r\n        session.resumePublishEngine();\r\n        callback(err);\r\n    });\r\n};\r\n\r\nprotected _on_connection_reestablished(callback : Function) {\r\n\r\n    assert('function' === typeof callback);\r\n\r\n    // call base class implementation first\r\n    super._on_connection_reestablished((err) => {\r\n\r\n        //\r\n        // a new secure channel has be created, we need to reactivate the session,\r\n        // and reestablish the subscription and restart the publish engine.\r\n        //\r\n        //\r\n        // see OPC UA part 4 ( version 1.03 ) figure 34 page 106\r\n        // 6.5 Reestablishing subscription....\r\n        //\r\n        //\r\n        //\r\n        //                      +---------------------+\r\n        //                      | CreateSecureChannel |\r\n        //                      | CreateSession       |\r\n        //                      | ActivateSession     |\r\n        //                      +---------------------+\r\n        //                                |\r\n        //                                |\r\n        //                                v\r\n        //                      +---------------------+\r\n        //                      | CreateSubscription  |<-------------------------------------------------------------+\r\n        //                      +---------------------+                                                              |\r\n        //                                |                                                                         (1)\r\n        //                                |\r\n        //                                v\r\n        //                      +---------------------+\r\n        //     (2)------------->| StartPublishEngine  |\r\n        //                      +---------------------+\r\n        //                                |\r\n        //                                V\r\n        //                      +---------------------+\r\n        //             +------->| Monitor Connection  |\r\n        //             |        +---------------------+\r\n        //             |                    |\r\n        //             |                    v\r\n        //             |          Good    /   \\\r\n        //             +-----------------/ SR? \\______Broken_____+\r\n        //                               \\     /                 |\r\n        //                                \\   /                  |\r\n        //                                                       |\r\n        //                                                       v\r\n        //                                                 +---------------------+\r\n        //                                                 |                     |\r\n        //                                                 | CreateSecureChannel |<-----+\r\n        //                                                 |                     |      |\r\n        //                                                 +---------------------+      |\r\n        //                                                         |                    |\r\n        //                                                         v                    |\r\n        //                                                       /   \\                  |\r\n        //                                                      / SR? \\______Bad________+\r\n        //                                                      \\     /\r\n        //                                                       \\   /\r\n        //                                                         |\r\n        //                                                         |Good\r\n        //                                                         v\r\n        //                                                 +---------------------+\r\n        //                                                 |                     |\r\n        //                                                 | ActivateSession     |\r\n        //                                                 |                     |\r\n        //                                                 +---------------------+\r\n        //                                                         |\r\n        //                                                         v                    +-------------------+       +----------------------+\r\n        //                                                       /   \\                  | CreateSession     |       |                      |\r\n        //                                                      / SR? \\______Bad_______>| ActivateSession   |-----> | TransferSubscription |\r\n        //                                                      \\     /                 |                   |       |                      |       (1)\r\n        //                                                       \\   /                  +-------------------+       +----------------------+        ^\r\n        //                                                         | Good                                                      |                    |\r\n        //                                                         v   (for each subscription)                                   |                    |\r\n        //                                                 +--------------------+                                            /   \\                  |\r\n        //                                                 |                    |                                     OK    / OK? \\______Bad________+\r\n        //                                                 | RePublish          |<----------------------------------------- \\     /\r\n        //                                             +-->|                    |                                            \\   /\r\n        //                                             |   +--------------------+\r\n        //                                             |           |\r\n        //                                             |           v\r\n        //                                             | GOOD    /   \\\r\n        //                                             +------  / SR? \\______Bad SubscriptionInvalidId______>(1)\r\n        // (2)                                                  \\     /\r\n        //  ^                                                    \\   /\r\n        //  |                                                      |\r\n        //  |                                                      |\r\n        //  |                             BadMessageNotAvailable   |\r\n        //  +------------------------------------------------------+\r\n        //\r\n\r\n\r\n        debugLog(\" Starting Session reactivation\");\r\n        // repair session\r\n        var sessions = this._sessions;\r\n        async_map(sessions, function (session, next) {\r\n\r\n            debugLog(\"OPCUAClient#_on_connection_reestablished TRYING TO REACTIVATE SESSION\");\r\n            this._activateSession(session, function (err) {\r\n                //\r\n                // Note: current limitation :\r\n                //  - The reconnection doesn't work if connection break is cause by a server that crashes and restarts yet.\r\n                //\r\n                debugLog(\"ActivateSession : \", err ? err.message : \"\");\r\n                if (err) {\r\n                    if (session.hasBeenClosed()) {\r\n                        debugLog(\"Aborting reactivation of old session because user requested session to be closed\");\r\n                        return callback(new Error(\"reconnection cancelled due to session termination\"));\r\n                    }\r\n\r\n                    //   if failed => recreate a new Channel and transfer the subscription\r\n                    var new_session = null;\r\n                    async_series([\r\n                        (callback) => {\r\n\r\n                            debugLog(\"Activating old session has failed ! => Creating a new session ....\");\r\n\r\n                            session.getPublishEngine().suspend(true);\r\n\r\n                            // create new session, based on old session,\r\n                            // so we can reuse subscriptions data\r\n                            this.__createSession_step2(session, function (err, _new_session) {\r\n                                debugLog(\" Creating a new session (based on old session data).... Done\");\r\n                                if (!err) {\r\n                                    new_session = _new_session;\r\n                                    assert(session === _new_session, \"session should be recycled\");\r\n                                }\r\n                                callback(err);\r\n                            });\r\n                        },\r\n                        (callback) => {\r\n                            debugLog(\" activating a new session ....\");\r\n                            this._activateSession(new_session, function (err) {\r\n                                debugLog(\" activating a new session .... Done\");\r\n                                ///xx self._addSession(new_session);\r\n                                callback(err);\r\n                            });\r\n                        },\r\n                        (callback) =>{\r\n\r\n                            // get the old subscriptions id from the old session\r\n                            var subscriptionsIds = session.getPublishEngine().getSubscriptionIds();\r\n\r\n                            debugLog(\"  session subscriptionCount = \", new_session.getPublishEngine().subscriptionCount);\r\n                            if (subscriptionsIds.length === 0) {\r\n                                debugLog(\" No subscriptions => skipping transfer subscriptions\");\r\n                                return callback(); // no need to transfer subscriptions\r\n                            }\r\n                            debugLog(\" asking server to transfer subscriptions = [\", subscriptionsIds.join(\", \"), \"]\");\r\n                            // Transfer subscriptions\r\n                            var options = {\r\n                                subscriptionIds: subscriptionsIds,\r\n                                sendInitialValues: false\r\n                            };\r\n\r\n                            assert(new_session.getPublishEngine().nbPendingPublishRequests === 0, \"we should not be publishing here\");\r\n                            new_session.transferSubscriptions(options, function (err, results) {\r\n                                if (err) {\r\n                                    return callback(err);\r\n                                }\r\n                                debugLog(\"Transfer subscriptions  done\", results.toString());\r\n                                debugLog(\"  new session subscriptionCount = \", new_session.getPublishEngine().subscriptionCount);\r\n                                callback();\r\n                            });\r\n                        },\r\n                        (callback) =>{\r\n                            assert(new_session.getPublishEngine().nbPendingPublishRequests === 0, \"we should not be publishing here\");\r\n                            //      call Republish\r\n                            return this._ask_for_subscription_republish(new_session, callback);\r\n                        },\r\n                        (callback) => { //start_publishing_as_normal\r\n                            new_session.getPublishEngine().suspend(false);\r\n                            callback();\r\n                        }\r\n                    ], next);\r\n\r\n                } else {\r\n                    //      call Republish\r\n                    return this._ask_for_subscription_republish(session, next);\r\n                }\r\n            });\r\n\r\n        }, function (err, results) {\r\n            return callback(err);\r\n        });\r\n\r\n    });\r\n\r\n};\r\n\r\n\r\npublic toString() {\r\n    super.toString();\r\n    console.log(\"  requestedSessionTimeout....... \", this.requestedSessionTimeout);\r\n    console.log(\"  endpointUrl................... \", this.endpointUrl);\r\n    console.log(\"  serverUri..................... \", this._serverUri);\r\n};\r\n\r\n/**\r\n * @method withSession\r\n * @param inner_func {function}\r\n * @param inner_func.session {ClientSession}\r\n * @param inner_func.callback {function}\r\n * @param callback {function}\r\n */\r\npublic withSession(endpointUrl, inner_func, callback) {\r\n\r\n    assert('function' === typeof inner_func, \"expecting inner function\");\r\n    assert('function' === typeof callback, \"expecting callback function\");\r\n\r\n    \r\n\r\n    var the_session;\r\n    var the_error;\r\n    var need_disconnect = false;\r\n    async_series([\r\n\r\n        // step 1 : connect to\r\n        (callback) => {\r\n            this.connect(endpointUrl, function (err) {\r\n                need_disconnect = true;\r\n                if (err) {\r\n                    console.log(\" cannot connect to endpoint :\", endpointUrl);\r\n                }\r\n                callback(err);\r\n            });\r\n        },\r\n\r\n        // step 2 : createSession\r\n        (callback) => {\r\n            this.createSession(null, (err, session) => {\r\n                if (!err) {\r\n                    the_session = session;\r\n                }\r\n                callback(err);\r\n            });\r\n        },\r\n\r\n        (callback) =>{\r\n            try {\r\n                inner_func(the_session, function (err) {\r\n                    the_error = err;\r\n                    callback();\r\n                });\r\n            }\r\n            catch (err) {\r\n                console.log(\"OPCUAClient#withClientSession\", err.message);\r\n                the_error = err;\r\n                callback();\r\n            }\r\n        },\r\n\r\n        // close session\r\n        (callback) =>{\r\n            the_session.close(/*deleteSubscriptions=*/true, function (err) {\r\n                if (err) {\r\n                    console.log(\"OPCUAClient#withClientSession: session closed failed ?\");\r\n                }\r\n                callback();\r\n            });\r\n        },\r\n        (callback) => {\r\n            this.disconnect(function (err) {\r\n                need_disconnect = false;\r\n                if (err) {\r\n                    console.log(\"OPCUAClient#withClientSession: client disconnect failed ?\");\r\n                }\r\n                callback();\r\n            });\r\n        }\r\n\r\n    ], function (err1) {\r\n        if (need_disconnect) {\r\n            console.log(\"Disconnecting client after failure\");\r\n            this.disconnect(function (err2) {\r\n                return callback(the_error || err1 || err2);\r\n            });\r\n        } else {\r\n            return callback(the_error || err1);\r\n        }\r\n    });\r\n};\r\n\r\n\r\n//var thenify = require(\"thenify\");\r\n/**\r\n * @method connect\r\n * @param endpointUrl {string}\r\n * @async\r\n * @return {Promise}\r\n */\r\n//OPCUAClient.prototype.connect = thenify.withCallback(OPCUAClient.prototype.connect);\r\n/**\r\n * @method disconnect\r\n * disconnect client from server\r\n * @return {Promise}\r\n * @async\r\n */\r\n//OPCUAClient.prototype.disconnect = thenify.withCallback(OPCUAClient.prototype.disconnect);\r\n/**\r\n * @method createSession\r\n * @param [userIdentityInfo {Object} ] optional\r\n * @param [userIdentityInfo.userName {String} ]\r\n * @param [userIdentityInfo.password {String} ]\r\n * @return {Promise}\r\n * @async\r\n *\r\n * @example\r\n *     // create a anonymous session\r\n *     const session = await client.createSession();\r\n *\r\n * @example\r\n *     // create a session with a userName and password\r\n *     const userIdentityInfo  = { userName: \"JoeDoe\", password:\"secret\"};\r\n *     const session = client.createSession(userIdentityInfo);\r\n *\r\n */\r\n//OPCUAClient.prototype.createSession = thenify.withCallback(OPCUAClient.prototype.createSession);\r\n/**\r\n * @method changeSessionIdentity\r\n * @param session\r\n * @param userIdentityInfo\r\n * @return {Promise}\r\n * @async\r\n */\r\n//OPCUAClient.prototype.changeSessionIdentity = thenify.withCallback(OPCUAClient.prototype.changeSessionIdentity);\r\n/**\r\n * @method closeSession\r\n * @param session {ClientSession}\r\n * @param deleteSubscriptions  {Boolean} - whether to delete\r\n * @return {Promise}\r\n * @async\r\n * @example\r\n *    const session  = await client.createSession();\r\n *    await client.closeSession(session);\r\n */\r\n//OPCUAClient.prototype.closeSession = thenify.withCallback(OPCUAClient.prototype.closeSession);\r\n\r\n\r\npublic withSubscription(endpointUrl, subscriptionParameters, innerFunc, callback) {\r\n\r\n    assert('function' === typeof innerFunc);\r\n    assert('function' === typeof callback);\r\n\r\n    this.withSession(endpointUrl, function (session, done) {\r\n        assert('function' === typeof done);\r\n\r\n        const subscription = new ClientSubscription(session, subscriptionParameters);\r\n\r\n        try {\r\n            innerFunc(session, subscription, function () {\r\n\r\n                subscription.terminate(function (err) {\r\n                    done(err);\r\n                });\r\n            });\r\n\r\n        }\r\n        catch (err) {\r\n            console.log(err);\r\n            done(err);\r\n        }\r\n    }, callback);\r\n};\r\n}\r\n\r\nfunction isAnonymous(userIdentityInfo) {\r\n    return !userIdentityInfo || (!userIdentityInfo.userName && !userIdentityInfo.password);\r\n}\r\n\r\nfunction isUserNamePassword(userIdentityInfo) {\r\n    var res = (userIdentityInfo.userName !== undefined) && (userIdentityInfo.password !== undefined);\r\n    return res;\r\n}\r\n\r\nfunction findUserTokenPolicy(endpoint_description : endpoints_service.EndpointDescription, userTokenType) : endpoints_service.UserTokenPolicy {\r\n    assert(endpoint_description instanceof EndpointDescription);\r\n    var r = endpoint_description.userIdentityTokens.filter( function (userIdentity : endpoints_service.UserTokenPolicy) {\r\n        // assert(userIdentity instanceof UserTokenPolicy)\r\n        // assert(userIdentity.tokenType);   \r\n        return userIdentity.tokenType === userTokenType;\r\n    });\r\n    return r.length === 0 ? null : r[0];\r\n}\r\n\r\nfunction createAnonymousIdentityToken(session) {\r\n\r\n    var endpoint_desc = session.endpoint;\r\n    assert(endpoint_desc instanceof EndpointDescription);\r\n\r\n    let userTokenPolicy : endpoints_service.UserTokenPolicy = findUserTokenPolicy(endpoint_desc, UserIdentityTokenType.ANONYMOUS);\r\n    if (!userTokenPolicy) {\r\n        throw new Error(\"Cannot find ANONYMOUS user token policy in end point description\");\r\n    }\r\n    return new AnonymousIdentityToken({policyId: userTokenPolicy.policyId});\r\n}\r\n\r\nfunction createUserNameIdentityToken(session, userName, password) {\r\n\r\n    // assert(endpoint instanceof EndpointDescription);\r\n    assert(userName === null || typeof userName === \"string\");\r\n    assert(password === null || typeof password === \"string\");\r\n    var endpoint_desc = session.endpoint;\r\n    assert(endpoint_desc instanceof EndpointDescription);\r\n\r\n    var userTokenPolicy = findUserTokenPolicy(endpoint_desc, UserIdentityTokenType.USERNAME);\r\n\r\n    // istanbul ignore next\r\n    if (!userTokenPolicy) {\r\n        throw new Error(\"Cannot find USERNAME user token policy in end point description\");\r\n    }\r\n\r\n    var securityPolicy = fromURI(userTokenPolicy.securityPolicyUri);\r\n\r\n    // if the security policy is not specified we use the session security policy\r\n    if (securityPolicy === SecurityPolicy.Invalid) {\r\n        securityPolicy = session._client._secureChannel.securityPolicy;\r\n        assert(securityPolicy);\r\n    }\r\n\r\n    // if server does not provide certificate use unencrypted password (no server certificate !!!)\r\n\r\n        var userIdentityToken = new UserNameIdentityToken({\r\n            userName: userName,\r\n            password: stringToUint8Array(password),//Buffer.from(password, \"utf-8\"),\r\n            encryptionAlgorithm: null,\r\n            policyId: userTokenPolicy.policyId\r\n        });\r\n        return userIdentityToken;\r\n    \r\n        //**nomsgcrypt**\r\n}\r\n\r\n\r\n","\"use strict\";\r\n\r\n\r\nimport {assert} from  \"../assert\";\r\n\r\nimport {resolveNodeId} from '../nodeid/nodeid';\r\nimport {BrowsePath,RelativePath, RelativePathElement} from '../service-translate-browse-path';\r\n\r\nimport {StatusCodes,AttributeIds} from '../constants';\r\nimport { QualifiedName } from \"../data-model\";\r\nimport { OPCUAClientBase, ResponseCallback } from \"./client_base\";\r\nimport { ApplicationDescription } from \"../service-endpoints\";\r\n\r\nvar hasPropertyRefId = resolveNodeId(\"HasProperty\");\r\n/* NodeId  ns=0;i=46*/\r\n\r\nfunction browsePathPropertyRequest(nodeId, propertyName) {\r\n\r\n    return new BrowsePath({\r\n        startingNode: /* NodeId  */ nodeId,\r\n        relativePath: new RelativePath(  {\r\n            elements: /* RelativePathElement */ [new RelativePathElement(\r\n                {\r\n                    referenceTypeId: hasPropertyRefId,\r\n                    isInverse: false,\r\n                    includeSubtypes: false,\r\n                    targetName: new QualifiedName({namespaceIndex: 0, name: propertyName})\r\n                })\r\n            ]\r\n        })\r\n    });\r\n\r\n}\r\n\r\n/**\r\n * @method readUAAnalogItem\r\n * @param session\r\n * @param nodeId\r\n * @param callback\r\n */\r\nexport function readUAAnalogItem(session, nodeId, callback) {\r\n\r\n    assert('function' === typeof callback);\r\n\r\n    var browsePath = [\r\n        browsePathPropertyRequest(nodeId, \"EngineeringUnits\"),\r\n        browsePathPropertyRequest(nodeId, \"EURange\"),\r\n        browsePathPropertyRequest(nodeId, \"InstrumentRange\"),\r\n        browsePathPropertyRequest(nodeId, \"ValuePrecision\"),\r\n        browsePathPropertyRequest(nodeId, \"Definition\")\r\n    ];\r\n\r\n    var analogItemData = {\r\n        engineeringUnits: null,\r\n        engineeringUnitsRange: null,\r\n        instrumentRange: null,\r\n        valuePrecision: null,\r\n        definition: null\r\n    };\r\n\r\n\r\n    session.translateBrowsePath(browsePath, function (err, browsePathResults) {\r\n\r\n        if (err) {\r\n            return callback(err);\r\n        }\r\n        //xx console.log(\"xxxx \",browsePathResults.toString());\r\n\r\n        var actions = [];\r\n        var nodesToRead = [];\r\n\r\n        function processProperty(browsePathIndex, propertyName) {\r\n            if (browsePathResults[browsePathIndex].statusCode === StatusCodes.Good) {\r\n\r\n                nodesToRead.push({\r\n                    nodeId: browsePathResults[browsePathIndex].targets[0].targetId,\r\n                    attributeId: AttributeIds.Value\r\n                });\r\n                actions.push(function (readResult) {\r\n                    // to do assert is\r\n                    analogItemData[propertyName] = readResult.value.value;\r\n                });\r\n            }\r\n        }\r\n\r\n        processProperty(0, \"engineeringUnits\");\r\n        processProperty(1, \"engineeringUnitsRange\");\r\n        processProperty(2, \"instrumentRange\");\r\n        processProperty(3, \"valuePrecision\");\r\n        processProperty(4, \"definition\");\r\n\r\n        session.read(nodesToRead, function (err,dataValues) {\r\n            if (err) {\r\n                return callback(err);\r\n            }\r\n            dataValues.forEach(function (result, index) {\r\n                actions[index].call(null, result);\r\n            });\r\n            callback(err, analogItemData);\r\n\r\n            // console.log(\"analogItemData = \",analogItemData);\r\n\r\n        });\r\n    });\r\n}\r\n\r\nexport function perform_findServersRequest(discovery_server_endpointUrl : string, callback : ResponseCallback<ApplicationDescription[]>) {\r\n\r\n\r\n    var client = new OPCUAClientBase({});\r\n\r\n    client.connect(discovery_server_endpointUrl, function (err) {\r\n        if (!err) {\r\n            client.findServers(null,function (err, servers) {\r\n                client.disconnect(function () {\r\n                    callback(err, servers);\r\n                });\r\n            });\r\n        } else {\r\n            client.disconnect(function () {\r\n                callback(err);\r\n            });\r\n        }\r\n    });\r\n}\r\n\r\n\r\n","\r\n// ---------------------------------------------------------------------------------------------------------------------\r\n// Common\r\n// ---------------------------------------------------------------------------------------------------------------------\r\nexport {NodeId,resolveNodeId,makeNodeId,coerceNodeId,NodeIdType/*sameNodeId*/} from '../nodeid/nodeid';\r\n\r\nexport {ExpandedNodeId,makeExpandedNodeId/*,coerceExpandedNodeId*/} from '../nodeid/expanded_nodeid';\r\n\r\nexport {StatusCodes} from '../constants/raw_status_codes'\r\n\r\n\r\nexport {DataType} from '../variant/DataTypeEnum';\r\nexport {Variant,IVariant} from '../variant/variant';\r\nexport {VariantArrayType} from '../variant/VariantArrayTypeEnum';\r\nexport {buildVariantArray} from '../variant';\r\n\r\nexport {DataValue,sameDataValue} from '../data-value';\r\n\r\nexport {NumericRange} from '../numeric-range/numeric_range';\r\n//export {AccessLevelFlag} from '../data-model'; //is generated as AccessLevelType <-- TODO fix the generation\r\n\r\n//generated module.exports.LocalizedText       = require(\"node-opcua-data-model\").LocalizedText;\r\n\r\n//generated module.exports.QualifiedName       = require(\"node-opcua-data-model\").QualifiedName;\r\nexport {coerceQualifyName,stringToQualifiedName,coerceLocalizedText} from '../data-model';\r\n//generated module.exports.NodeClass           = require(\"node-opcua-data-model\").NodeClass;\r\n//not used? module.exports.NodeClassMask       = require(\"node-opcua-data-model\").NodeClassMask;\r\n\r\nexport {AttributeIds} from '../constants/AttributeIds';\r\n//not used? module.exports.AttributeNameById   = require(\"node-opcua-data-model\").AttributeNameById;\r\n//generated module.exports.BrowseDirection     = require(\"node-opcua-data-model\").BrowseDirection;\r\n\r\n\r\nexport {VariableTypeIds,ObjectTypeIds,DataTypeIds,ReferenceTypeIds} from '../constants/opcua_node_ids';\r\n//is it really necessary to export all these ids?\r\nexport {VariableIds,MethodIds,ObjectIds} from '../constants/opcua_node_ids';\r\n\r\n\r\n// DA\r\nexport {makeEUInformation,standardUnits,commonCodeToUInt} from '../data-access'\r\n//generated module.exports.Range = require(\"node-opcua-data-access\").Range;\r\n\r\n//not used? module.exports.get_fully_qualified_domain_name = require(\"node-opcua-hostname\").get_fully_qualified_domain_name;\r\n\r\nexport {makeApplicationUrn} from '../common';\r\n\r\n\r\n\r\n// services\r\nexport * from '../service-browse'; //TODO:export as\r\n\r\nexport * from '../service-read';//TODO:export as\r\n\r\nexport * from '../service-write';//TODO:export as\r\n\r\nexport * from '../service-call';//TODO:export as\r\n\r\nexport * from '../service-session';//TODO:export as\r\n\r\n//generated module.exports.AnonymousIdentityToken = module.exports.session_service.AnonymousIdentityToken;\r\n//generated module.exports.UserNameIdentityToken = module.exports.session_service.UserNameIdentityToken;\r\n\r\n//not used? module.exports.register_node_service                      = require(\"node-opcua-service-register-node\");\r\n\r\n//not used? module.exports.get_endpoints_service                      = require(\"node-opcua-service-endpoints\");\r\n//generated module.exports.EndpointDescription                        = require(\"node-opcua-service-endpoints\").EndpointDescription;\r\n//generated module.exports.ApplicationType                            = require(\"node-opcua-service-endpoints\").ApplicationType;\r\n\r\nexport * from '../service-subscription'; //TODO:export as subscription_service\r\nexport * from '../service-history'; //TODO:export as historizing_service\r\nexport * from '../service-register-server'; //TODO:export as register_server_service\r\nexport * from '../service-secure-channel'; //TODO:export as secure_channel_service\r\nexport * from '../service-translate-browse-path'; //TODO:export as translate_browse_paths_to_node_ids_service\r\n\r\n//generated module.exports.BrowsePath                                 = require(\"node-opcua-service-translate-browse-path\").BrowsePath;\r\n\r\nexport {makeRelativePath,makeBrowsePath,constructBrowsePathFromQualifiedName} from '../service-translate-browse-path';\r\n\r\n//TODO: implement me module.exports.query_service                              = require(\"node-opcua-service-query\");\r\n//TODO: implement me module.exports.node_managment_service                     = require(\"node-opcua-service-node-management\");\r\n\r\n\r\n//generated module.exports.ServerState = require(\"node-opcua-common\").ServerState;\r\n//generated as ServiceCounterDataType  module.exports.ServiceCounter = require(\"node-opcua-common\").ServiceCounter;\r\n\r\nexport {SecurityPolicy} from '../secure-channel';\r\n\r\n//generated module.exports.MessageSecurityMode = require(\"node-opcua-service-secure-channel\").MessageSecurityMode;\r\n\r\nexport * from '../utils'; //TODO: export as utils\r\n//not used? module.exports.crypto_utils = require(\"node-opcua-crypto\").crypto_utils;\r\nexport {hexDump} from '../common/debug';\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n// client services\r\n//----------------------------------------------------------------------------------------------------------------------\r\nexport {OPCUAClientBase,ConnectionStrategy,OPCUAClientOptions} from '../client/client_base';\r\nexport {OPCUAClient} from '../client/opcua_client';\r\nexport {MonitoredItem} from '../client/MonitoredItem';\r\n\r\n//not implemented yet module.exports.NodeCrawler        = require(\"node-opcua-client-crawler\").NodeCrawler;\r\n\r\nexport {ClientSession} from '../client/client_session';\r\nexport {ClientSubscription} from '../client/ClientSubscription';\r\n\r\nexport {readUAAnalogItem,perform_findServersRequest} from '../client/client_utils'; //module.exports.client_utils = require(\"node-opcua-client/src/client_utils\");\r\n\r\n//TODO: implement me  module.exports.callConditionRefresh = require(\"node-opcua-client/src/alarms_and_conditions/client_tools\").callConditionRefresh;\r\n\r\nexport {parseEndpointUrl,is_valid_endpointUrl} from '../transport/tools';\r\n\r\n//----------------------------------------------------------------------------------------------------------------------\r\n// Server services\r\n//----------------------------------------------------------------------------------------------------------------------\r\nexport * from '../basic-types';\r\n\r\n// version\r\nexport var version = 0.1;          //     = require(\"./package.json\").version;\r\n\r\n\r\n// filtering tools\r\n//TODO: implement me module.exports.checkSelectClause = require(\"node-opcua-address-space\").checkSelectClause;\r\n//TODO: implement me module.exports.constructEventFilter = require(\"node-opcua-service-filter\").constructEventFilter;\r\n"],"sourceRoot":""}