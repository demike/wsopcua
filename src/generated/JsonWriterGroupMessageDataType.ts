/**
 generated by wsopcua data type generator
 do not modify, changes will be overwritten
*/

import {JsonNetworkMessageContentMask, encodeJsonNetworkMessageContentMask, decodeJsonNetworkMessageContentMask} from './JsonNetworkMessageContentMask';
import {DataStream} from '../basic-types/DataStream';
import {WriterGroupMessageDataType} from './WriterGroupMessageDataType';

export interface IJsonWriterGroupMessageDataType {
  networkMessageContentMask?: JsonNetworkMessageContentMask;
}

/**

*/

export class JsonWriterGroupMessageDataType extends WriterGroupMessageDataType {
  networkMessageContentMask: JsonNetworkMessageContentMask;

 constructor( options?: IJsonWriterGroupMessageDataType) {
  options = options || {};
  super();
  this.networkMessageContentMask = (options.networkMessageContentMask != null) ? options.networkMessageContentMask : null;

 }


 encode( out: DataStream) {
  encodeJsonNetworkMessageContentMask(this.networkMessageContentMask, out);

 }


 decode( inp: DataStream) {
  this.networkMessageContentMask = decodeJsonNetworkMessageContentMask(inp);

 }


 toJSON() {
  const out: any = {};
  out.NetworkMessageContentMask = this.networkMessageContentMask;
 return out;
 }


 fromJSON( inp: any) {
if (!inp) { return; }
  this.networkMessageContentMask = inp.NetworkMessageContentMask;

 }


 clone( target?: JsonWriterGroupMessageDataType): JsonWriterGroupMessageDataType {
  if (!target) {
   target = new JsonWriterGroupMessageDataType();
  }
  target.networkMessageContentMask = this.networkMessageContentMask;
  return target;
 }


}
export function decodeJsonWriterGroupMessageDataType( inp: DataStream): JsonWriterGroupMessageDataType {
  const obj = new JsonWriterGroupMessageDataType();
   obj.decode(inp);
   return obj;

 }



import {register_class_definition} from '../factory/factories_factories';
import { ExpandedNodeId } from '../nodeid/expanded_nodeid';
register_class_definition('JsonWriterGroupMessageDataType', JsonWriterGroupMessageDataType, new ExpandedNodeId(2 /*numeric id*/, 15719, 0));
