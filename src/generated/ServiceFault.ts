/**
 generated by wsopcua data type generator
 do not modify, changes will be overwritten
*/

import {ResponseHeader} from './ResponseHeader';
import {DataStream} from '../basic-types/DataStream';

export interface IServiceFault {
  responseHeader?: ResponseHeader;
}

/**

 * {@link https://reference.opcfoundation.org/nodesets/4/16024}
*/

export class ServiceFault {
  responseHeader: ResponseHeader;

 constructor( options?: IServiceFault) {
  options = options || {};
  this.responseHeader = (options.responseHeader != null) ? options.responseHeader : new ResponseHeader();

 }


 encode( out: DataStream) {
  this.responseHeader.encode(out);

 }


 decode( inp: DataStream) {
  this.responseHeader.decode(inp);

 }


 toJSON() {
  const out: any = {};
  out.ResponseHeader = this.responseHeader;
 return out;
 }


 fromJSON( inp: any) {
if (!inp) { return; }
  this.responseHeader.fromJSON(inp.ResponseHeader);

 }


 clone( target?: ServiceFault): ServiceFault {
  if (!target) {
   target = new ServiceFault();
  }
  if (this.responseHeader) { target.responseHeader = this.responseHeader.clone(); }
  return target;
 }


}
export function decodeServiceFault( inp: DataStream): ServiceFault {
  const obj = new ServiceFault();
   obj.decode(inp);
   return obj;

 }



import {register_class_definition} from '../factory/factories_factories';
import { ExpandedNodeId } from '../nodeid/expanded_nodeid';
register_class_definition('ServiceFault', ServiceFault, new ExpandedNodeId(2 /*numeric id*/, 395, 0));
