/**
 generated by wsopcua data type generator
 do not modify, changes will be overwritten
*/

import * as ec from '../basic-types';
import {DataStream} from '../basic-types/DataStream';
import {PublishedDataSetSourceDataType} from './PublishedDataSetSourceDataType';

export interface IPublishedDataSetCustomSourceDataType {
  cyclicDataSet?: boolean;
}

/**

 * {@link https://reference.opcfoundation.org/nodesets/2/16787}
*/

export class PublishedDataSetCustomSourceDataType extends PublishedDataSetSourceDataType {
  cyclicDataSet: boolean;

 constructor( options?: IPublishedDataSetCustomSourceDataType) {
  options = options || {};
  super();
  this.cyclicDataSet = (options.cyclicDataSet != null) ? options.cyclicDataSet : false;

 }


 encode( out: DataStream) {
  ec.encodeBoolean(this.cyclicDataSet, out);

 }


 decode( inp: DataStream) {
  this.cyclicDataSet = ec.decodeBoolean(inp);

 }


 toJSON() {
  const out: any = {};
  out.CyclicDataSet = this.cyclicDataSet;
 return out;
 }


 fromJSON( inp: any) {
if (!inp) { return; }
  this.cyclicDataSet = inp.CyclicDataSet;

 }


 clone( target?: PublishedDataSetCustomSourceDataType): PublishedDataSetCustomSourceDataType {
  if (!target) {
   target = new PublishedDataSetCustomSourceDataType();
  }
  target.cyclicDataSet = this.cyclicDataSet;
  return target;
 }


}
export function decodePublishedDataSetCustomSourceDataType( inp: DataStream): PublishedDataSetCustomSourceDataType {
  const obj = new PublishedDataSetCustomSourceDataType();
   obj.decode(inp);
   return obj;

 }



import {register_class_definition} from '../factory/factories_factories';
import { ExpandedNodeId } from '../nodeid/expanded_nodeid';
register_class_definition('PublishedDataSetCustomSourceDataType', PublishedDataSetCustomSourceDataType, new ExpandedNodeId(2 /*numeric id*/, 25269, 0));
