/**
 generated by wsopcua data type generator
 do not modify, changes will be overwritten
*/

import {JsonDataSetMessageContentMask, encodeJsonDataSetMessageContentMask, decodeJsonDataSetMessageContentMask} from './JsonDataSetMessageContentMask';
import {DataStream} from '../basic-types/DataStream';
import {DataSetWriterMessageDataType} from './DataSetWriterMessageDataType';

export type IJsonDataSetWriterMessageDataType = Partial<JsonDataSetWriterMessageDataType>;

/**

 * {@link https://reference.opcfoundation.org/nodesets/4/15833}
*/

export class JsonDataSetWriterMessageDataType extends DataSetWriterMessageDataType {
  dataSetMessageContentMask: JsonDataSetMessageContentMask;

 constructor( options?: IJsonDataSetWriterMessageDataType) {
  options = options || {};
  super();
  this.dataSetMessageContentMask = (options.dataSetMessageContentMask != null) ? options.dataSetMessageContentMask : null;

 }


 encode( out: DataStream) {
  encodeJsonDataSetMessageContentMask(this.dataSetMessageContentMask, out);

 }


 decode( inp: DataStream) {
  this.dataSetMessageContentMask = decodeJsonDataSetMessageContentMask(inp);

 }


 toJSON() {
  const out: any = {};
  out.DataSetMessageContentMask = this.dataSetMessageContentMask;
 return out;
 }


 fromJSON( inp: any) {
if (!inp) { return; }
  this.dataSetMessageContentMask = inp.DataSetMessageContentMask;

 }


 clone( target?: JsonDataSetWriterMessageDataType): JsonDataSetWriterMessageDataType {
  if (!target) {
   target = new JsonDataSetWriterMessageDataType();
  }
  target.dataSetMessageContentMask = this.dataSetMessageContentMask;
  return target;
 }


}
export function decodeJsonDataSetWriterMessageDataType( inp: DataStream): JsonDataSetWriterMessageDataType {
  const obj = new JsonDataSetWriterMessageDataType();
   obj.decode(inp);
   return obj;

 }



import {register_class_definition} from '../factory/factories_factories';
import { ExpandedNodeId } from '../nodeid/expanded_nodeid';
register_class_definition('JsonDataSetWriterMessageDataType', JsonDataSetWriterMessageDataType, new ExpandedNodeId(2 /*numeric id*/, 15724, 0));
