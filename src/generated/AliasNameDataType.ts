/**
 generated by wsopcua data type generator
 do not modify, changes will be overwritten
*/

import {QualifiedName} from './QualifiedName';
import * as ec from '../basic-types';
import {DataStream} from '../basic-types/DataStream';

export type IAliasNameDataType = Partial<AliasNameDataType>;

/**

 * {@link https://reference.opcfoundation.org/nodesets/4/15940}
*/

export class AliasNameDataType {
  aliasName: QualifiedName;
  referencedNodes: (ec.ExpandedNodeId)[];

 constructor( options?: IAliasNameDataType | undefined) {
  options = options || {};
  this.aliasName = (options.aliasName != null) ? options.aliasName : new QualifiedName();
  this.referencedNodes = (options.referencedNodes != null) ? options.referencedNodes : [];

 }


 encode( out: DataStream) {
  this.aliasName.encode(out);
  ec.encodeArray(this.referencedNodes, out, ec.encodeExpandedNodeId);

 }


 decode( inp: DataStream) {
  this.aliasName.decode(inp);
  this.referencedNodes = ec.decodeArray(inp, ec.decodeExpandedNodeId) ?? [];

 }


 toJSON() {
  const out: any = {};
  out.AliasName = this.aliasName;
  out.ReferencedNodes = ec.jsonEncodeArray(this.referencedNodes, ec.jsonEncodeExpandedNodeId);
 return out;
 }


 fromJSON( inp: any) {
if (!inp) { return; }
  this.aliasName.fromJSON(inp.AliasName);
  this.referencedNodes = ec.jsonDecodeArray( inp.ReferencedNodes, ec.jsonDecodeExpandedNodeId);

 }


 clone( target?: AliasNameDataType): AliasNameDataType {
  if (!target) {
   target = new AliasNameDataType();
  }
  if (this.aliasName) { target.aliasName = this.aliasName.clone(); }
  target.referencedNodes = ec.cloneArray(this.referencedNodes);
  return target;
 }


}
export function decodeAliasNameDataType( inp: DataStream): AliasNameDataType {
  const obj = new AliasNameDataType();
   obj.decode(inp);
   return obj;

 }



import {register_class_definition} from '../factory/factories_factories';
import { ExpandedNodeId } from '../nodeid/expanded_nodeid';
register_class_definition('AliasNameDataType', AliasNameDataType, new ExpandedNodeId(2 /*numeric id*/, 23499, 0));
