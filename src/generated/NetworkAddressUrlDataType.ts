/**
 generated by wsopcua data type generator
 do not modify, changes will be overwritten
*/

import * as ec from '../basic-types';
import {DataStream} from '../basic-types/DataStream';
import {NetworkAddressDataType} from './NetworkAddressDataType';
import {INetworkAddressDataType} from './NetworkAddressDataType';

export type INetworkAddressUrlDataType = Partial<NetworkAddressUrlDataType>;

/**

*/

export class NetworkAddressUrlDataType extends NetworkAddressDataType {
  url: string | null;

 constructor( options?: INetworkAddressUrlDataType | null) {
  options = options || {};
  super(options);
  this.url = (options.url != null) ? options.url : null;

 }


 encode( out: DataStream) {
  super.encode(out);
  ec.encodeString(this.url, out);

 }


 decode( inp: DataStream) {
  super.decode(inp);
  this.url = ec.decodeString(inp);

 }


 toJSON() {
  const out: any = super.toJSON();
  out.Url = this.url;
 return out;
 }


 fromJSON( inp: any) {
if (!inp) { return; }
  super.fromJSON(inp);
  this.url = inp.Url;

 }


 clone( target?: NetworkAddressUrlDataType): NetworkAddressUrlDataType {
  if (!target) {
   target = new NetworkAddressUrlDataType();
  }
  super.clone(target);
  target.url = this.url;
  return target;
 }


}
export function decodeNetworkAddressUrlDataType( inp: DataStream): NetworkAddressUrlDataType {
  const obj = new NetworkAddressUrlDataType();
   obj.decode(inp);
   return obj;

 }



import {register_class_definition} from '../factory/factories_factories';
import { ExpandedNodeId } from '../nodeid/expanded_nodeid';
register_class_definition('NetworkAddressUrlDataType', NetworkAddressUrlDataType, new ExpandedNodeId(2 /*numeric id*/, 21152, 0));
