/**
 generated by wsopcua data type generator
 do not modify, changes will be overwritten
*/

import {ExtensionObject, encodeExtensionObject, decodeExtensionObject, jsonEncodeExtensionObject, jsonDecodeExtensionObject} from '../basic-types/extension_object';
import {DataStream} from '../basic-types/DataStream';
import {ConnectionTransportDataType} from './ConnectionTransportDataType';

export type IDatagramConnectionTransportDataType = Partial<DatagramConnectionTransportDataType>;

/**

 * {@link https://reference.opcfoundation.org/nodesets/4/15835}
*/

export class DatagramConnectionTransportDataType extends ConnectionTransportDataType {
  discoveryAddress: ExtensionObject | null;

 constructor( options?: IDatagramConnectionTransportDataType | null) {
  options = options || {};
  super();
  this.discoveryAddress = (options.discoveryAddress != null) ? options.discoveryAddress : null;

 }


 encode( out: DataStream) {
  encodeExtensionObject(this.discoveryAddress, out);

 }


 decode( inp: DataStream) {
  this.discoveryAddress = decodeExtensionObject(inp);

 }


 toJSON() {
  const out: any = {};
  out.DiscoveryAddress = jsonEncodeExtensionObject(this.discoveryAddress);
 return out;
 }


 fromJSON( inp: any) {
if (!inp) { return; }
  this.discoveryAddress = jsonDecodeExtensionObject(inp.DiscoveryAddress);

 }


 clone( target?: DatagramConnectionTransportDataType): DatagramConnectionTransportDataType {
  if (!target) {
   target = new DatagramConnectionTransportDataType();
  }
  target.discoveryAddress = this.discoveryAddress;
  return target;
 }


}
export function decodeDatagramConnectionTransportDataType( inp: DataStream): DatagramConnectionTransportDataType {
  const obj = new DatagramConnectionTransportDataType();
   obj.decode(inp);
   return obj;

 }



import {register_class_definition} from '../factory/factories_factories';
import { ExpandedNodeId } from '../nodeid/expanded_nodeid';
register_class_definition('DatagramConnectionTransportDataType', DatagramConnectionTransportDataType, new ExpandedNodeId(2 /*numeric id*/, 17468, 0));
