/**
 generated by wsopcua data type generator
 do not modify, changes will be overwritten
*/

import {RequestHeader} from '.';
import {ExtensionObject, encodeExtensionObject, decodeExtensionObject, jsonEncodeExtensionObject, jsonDecodeExtensionObject} from '../basic-types/extension_object';
import * as ec from '../basic-types';
import {DataStream} from '../basic-types';

export interface IHistoryUpdateRequest {
  requestHeader?: RequestHeader;
  historyUpdateDetails?: ExtensionObject[];
}

/**

*/

export class HistoryUpdateRequest {
  requestHeader: RequestHeader;
  historyUpdateDetails: ExtensionObject[];

 constructor( options?: IHistoryUpdateRequest) {
  options = options || {};
  this.requestHeader = (options.requestHeader != null) ? options.requestHeader : new RequestHeader();
  this.historyUpdateDetails = (options.historyUpdateDetails != null) ? options.historyUpdateDetails : [];

 }


 encode( out: DataStream) {
  this.requestHeader.encode(out);
  ec.encodeArray(this.historyUpdateDetails, out, encodeExtensionObject);

 }


 decode( inp: DataStream) {
  this.requestHeader.decode(inp);
  this.historyUpdateDetails = ec.decodeArray(inp, decodeExtensionObject);

 }


 toJSON() {
  const out: any = {};
  out.RequestHeader = this.requestHeader;
  out.HistoryUpdateDetails = ec.jsonEncodeArray(this.historyUpdateDetails, jsonEncodeExtensionObject);
 return out;
 }


 fromJSON( inp: any) {
if (!inp) { return; }
  this.requestHeader.fromJSON(inp.RequestHeader);
  this.historyUpdateDetails = ec.jsonDecodeArray( inp.HistoryUpdateDetails, jsonDecodeExtensionObject);

 }


 clone( target?: HistoryUpdateRequest): HistoryUpdateRequest {
  if (!target) {
   target = new HistoryUpdateRequest();
  }
  if (this.requestHeader) { target.requestHeader = this.requestHeader.clone(); }
  target.historyUpdateDetails = ec.cloneArray(this.historyUpdateDetails);
  return target;
 }


}
export function decodeHistoryUpdateRequest( inp: DataStream): HistoryUpdateRequest {
  const obj = new HistoryUpdateRequest();
   obj.decode(inp);
   return obj;

 }



import {register_class_definition} from '../factory';
import { ExpandedNodeId } from '../nodeid';
register_class_definition('HistoryUpdateRequest', HistoryUpdateRequest, new ExpandedNodeId(2 /*numeric id*/, 700, 0));
