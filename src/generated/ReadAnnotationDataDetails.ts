/**
 generated by wsopcua data type generator
 do not modify, changes will be overwritten
*/

import * as ec from '../basic-types';
import {DataStream} from '../basic-types/DataStream';
import {HistoryReadDetails} from './HistoryReadDetails';

export type IReadAnnotationDataDetails = Partial<ReadAnnotationDataDetails>;

/**

*/

export class ReadAnnotationDataDetails extends HistoryReadDetails {
  reqTimes: (Date)[];

 constructor( options?: IReadAnnotationDataDetails | null) {
  options = options || {};
  super();
  this.reqTimes = (options.reqTimes != null) ? options.reqTimes : [];

 }


 encode( out: DataStream) {
  ec.encodeArray(this.reqTimes, out, ec.encodeDateTime);

 }


 decode( inp: DataStream) {
  this.reqTimes = ec.decodeArray(inp, ec.decodeDateTime) ?? [];

 }


 toJSON() {
  const out: any = {};
  out.ReqTimes = ec.jsonEncodeArray(this.reqTimes, ec.jsonEncodeDateTime);
 return out;
 }


 fromJSON( inp: any) {
if (!inp) { return; }
  this.reqTimes = ec.jsonDecodeArray( inp.ReqTimes, ec.jsonDecodeDateTime);

 }


 clone( target?: ReadAnnotationDataDetails): ReadAnnotationDataDetails {
  if (!target) {
   target = new ReadAnnotationDataDetails();
  }
  target.reqTimes = ec.cloneArray(this.reqTimes);
  return target;
 }


}
export function decodeReadAnnotationDataDetails( inp: DataStream): ReadAnnotationDataDetails {
  const obj = new ReadAnnotationDataDetails();
   obj.decode(inp);
   return obj;

 }



import {register_class_definition} from '../factory/factories_factories';
import { ExpandedNodeId } from '../nodeid/expanded_nodeid';
register_class_definition('ReadAnnotationDataDetails', ReadAnnotationDataDetails, new ExpandedNodeId(2 /*numeric id*/, 23500, 0));
